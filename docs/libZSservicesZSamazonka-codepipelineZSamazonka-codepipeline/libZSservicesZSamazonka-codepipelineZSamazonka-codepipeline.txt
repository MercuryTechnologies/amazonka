-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-codepipelineZSamazonka-codepipeline
@version 2.0


module Network.AWS.CodePipeline.Types.AWSSessionCredentials

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifact for the pipeline in AWS CodePipeline.
--   
--   <i>See:</i> <a>newAWSSessionCredentials</a> smart constructor.
data AWSSessionCredentials
AWSSessionCredentials' :: Sensitive Text -> Sensitive Text -> Sensitive Text -> AWSSessionCredentials

-- | The access key for the session.
[$sel:accessKeyId:AWSSessionCredentials'] :: AWSSessionCredentials -> Sensitive Text

-- | The secret access key for the session.
[$sel:secretAccessKey:AWSSessionCredentials'] :: AWSSessionCredentials -> Sensitive Text

-- | The token for the session.
[$sel:sessionToken:AWSSessionCredentials'] :: AWSSessionCredentials -> Sensitive Text

-- | Create a value of <a>AWSSessionCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessKeyId:AWSSessionCredentials'</a>,
--   <a>aWSSessionCredentials_accessKeyId</a> - The access key for the
--   session.
--   
--   <a>$sel:secretAccessKey:AWSSessionCredentials'</a>,
--   <a>aWSSessionCredentials_secretAccessKey</a> - The secret access key
--   for the session.
--   
--   <a>$sel:sessionToken:AWSSessionCredentials'</a>,
--   <a>aWSSessionCredentials_sessionToken</a> - The token for the session.
newAWSSessionCredentials :: Text -> Text -> Text -> AWSSessionCredentials

-- | The access key for the session.
aWSSessionCredentials_accessKeyId :: Lens' AWSSessionCredentials Text

-- | The secret access key for the session.
aWSSessionCredentials_secretAccessKey :: Lens' AWSSessionCredentials Text

-- | The token for the session.
aWSSessionCredentials_sessionToken :: Lens' AWSSessionCredentials Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.AWSSessionCredentials.AWSSessionCredentials
instance GHC.Show.Show Network.AWS.CodePipeline.Types.AWSSessionCredentials.AWSSessionCredentials
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.AWSSessionCredentials.AWSSessionCredentials
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.AWSSessionCredentials.AWSSessionCredentials
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.AWSSessionCredentials.AWSSessionCredentials
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.AWSSessionCredentials.AWSSessionCredentials


module Network.AWS.CodePipeline.Types.ActionCategory
newtype ActionCategory
ActionCategory' :: Text -> ActionCategory
[fromActionCategory] :: ActionCategory -> Text
pattern ActionCategory_Approval :: ActionCategory
pattern ActionCategory_Build :: ActionCategory
pattern ActionCategory_Deploy :: ActionCategory
pattern ActionCategory_Invoke :: ActionCategory
pattern ActionCategory_Source :: ActionCategory
pattern ActionCategory_Test :: ActionCategory
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionCategory.ActionCategory


module Network.AWS.CodePipeline.Types.ActionConfiguration

-- | Represents information about an action configuration.
--   
--   <i>See:</i> <a>newActionConfiguration</a> smart constructor.
data ActionConfiguration
ActionConfiguration' :: Maybe (HashMap Text Text) -> ActionConfiguration

-- | The configuration data for the action.
[$sel:configuration:ActionConfiguration'] :: ActionConfiguration -> Maybe (HashMap Text Text)

-- | Create a value of <a>ActionConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:ActionConfiguration'</a>,
--   <a>actionConfiguration_configuration</a> - The configuration data for
--   the action.
newActionConfiguration :: ActionConfiguration

-- | The configuration data for the action.
actionConfiguration_configuration :: Lens' ActionConfiguration (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionConfiguration.ActionConfiguration
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionConfiguration.ActionConfiguration
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionConfiguration.ActionConfiguration
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionConfiguration.ActionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionConfiguration.ActionConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionConfiguration.ActionConfiguration
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionConfiguration.ActionConfiguration


module Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType
newtype ActionConfigurationPropertyType
ActionConfigurationPropertyType' :: Text -> ActionConfigurationPropertyType
[fromActionConfigurationPropertyType] :: ActionConfigurationPropertyType -> Text
pattern ActionConfigurationPropertyType_Boolean :: ActionConfigurationPropertyType
pattern ActionConfigurationPropertyType_Number :: ActionConfigurationPropertyType
pattern ActionConfigurationPropertyType_String :: ActionConfigurationPropertyType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionConfigurationPropertyType.ActionConfigurationPropertyType


module Network.AWS.CodePipeline.Types.ActionConfigurationProperty

-- | Represents information about an action configuration property.
--   
--   <i>See:</i> <a>newActionConfigurationProperty</a> smart constructor.
data ActionConfigurationProperty
ActionConfigurationProperty' :: Maybe Bool -> Maybe ActionConfigurationPropertyType -> Maybe Text -> Text -> Bool -> Bool -> Bool -> ActionConfigurationProperty

-- | Indicates that the property is used with <tt>PollForJobs</tt>. When
--   creating a custom action, an action can have up to one queryable
--   property. If it has one, that property must be both required and not
--   secret.
--   
--   If you create a pipeline with a custom action type, and that custom
--   action contains a queryable property, the value for that configuration
--   property is subject to other restrictions. The value must be less than
--   or equal to twenty (20) characters. The value can contain only
--   alphanumeric characters, underscores, and hyphens.
[$sel:queryable:ActionConfigurationProperty'] :: ActionConfigurationProperty -> Maybe Bool

-- | The type of the configuration property.
[$sel:type':ActionConfigurationProperty'] :: ActionConfigurationProperty -> Maybe ActionConfigurationPropertyType

-- | The description of the action configuration property that is displayed
--   to users.
[$sel:description:ActionConfigurationProperty'] :: ActionConfigurationProperty -> Maybe Text

-- | The name of the action configuration property.
[$sel:name:ActionConfigurationProperty'] :: ActionConfigurationProperty -> Text

-- | Whether the configuration property is a required value.
[$sel:required:ActionConfigurationProperty'] :: ActionConfigurationProperty -> Bool

-- | Whether the configuration property is a key.
[$sel:key:ActionConfigurationProperty'] :: ActionConfigurationProperty -> Bool

-- | Whether the configuration property is secret. Secrets are hidden from
--   all calls except for <tt>GetJobDetails</tt>,
--   <tt>GetThirdPartyJobDetails</tt>, <tt>PollForJobs</tt>, and
--   <tt>PollForThirdPartyJobs</tt>.
--   
--   When updating a pipeline, passing * * * * * without changing any other
--   values of the action preserves the previous value of the secret.
[$sel:secret:ActionConfigurationProperty'] :: ActionConfigurationProperty -> Bool

-- | Create a value of <a>ActionConfigurationProperty</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryable:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_queryable</a> - Indicates that the
--   property is used with <tt>PollForJobs</tt>. When creating a custom
--   action, an action can have up to one queryable property. If it has
--   one, that property must be both required and not secret.
--   
--   If you create a pipeline with a custom action type, and that custom
--   action contains a queryable property, the value for that configuration
--   property is subject to other restrictions. The value must be less than
--   or equal to twenty (20) characters. The value can contain only
--   alphanumeric characters, underscores, and hyphens.
--   
--   <a>$sel:type':ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_type</a> - The type of the
--   configuration property.
--   
--   <a>$sel:description:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_description</a> - The description of
--   the action configuration property that is displayed to users.
--   
--   <a>$sel:name:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_name</a> - The name of the action
--   configuration property.
--   
--   <a>$sel:required:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_required</a> - Whether the
--   configuration property is a required value.
--   
--   <a>$sel:key:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_key</a> - Whether the configuration
--   property is a key.
--   
--   <a>$sel:secret:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_secret</a> - Whether the configuration
--   property is secret. Secrets are hidden from all calls except for
--   <tt>GetJobDetails</tt>, <tt>GetThirdPartyJobDetails</tt>,
--   <tt>PollForJobs</tt>, and <tt>PollForThirdPartyJobs</tt>.
--   
--   When updating a pipeline, passing * * * * * without changing any other
--   values of the action preserves the previous value of the secret.
newActionConfigurationProperty :: Text -> Bool -> Bool -> Bool -> ActionConfigurationProperty

-- | Indicates that the property is used with <tt>PollForJobs</tt>. When
--   creating a custom action, an action can have up to one queryable
--   property. If it has one, that property must be both required and not
--   secret.
--   
--   If you create a pipeline with a custom action type, and that custom
--   action contains a queryable property, the value for that configuration
--   property is subject to other restrictions. The value must be less than
--   or equal to twenty (20) characters. The value can contain only
--   alphanumeric characters, underscores, and hyphens.
actionConfigurationProperty_queryable :: Lens' ActionConfigurationProperty (Maybe Bool)

-- | The type of the configuration property.
actionConfigurationProperty_type :: Lens' ActionConfigurationProperty (Maybe ActionConfigurationPropertyType)

-- | The description of the action configuration property that is displayed
--   to users.
actionConfigurationProperty_description :: Lens' ActionConfigurationProperty (Maybe Text)

-- | The name of the action configuration property.
actionConfigurationProperty_name :: Lens' ActionConfigurationProperty Text

-- | Whether the configuration property is a required value.
actionConfigurationProperty_required :: Lens' ActionConfigurationProperty Bool

-- | Whether the configuration property is a key.
actionConfigurationProperty_key :: Lens' ActionConfigurationProperty Bool

-- | Whether the configuration property is secret. Secrets are hidden from
--   all calls except for <tt>GetJobDetails</tt>,
--   <tt>GetThirdPartyJobDetails</tt>, <tt>PollForJobs</tt>, and
--   <tt>PollForThirdPartyJobs</tt>.
--   
--   When updating a pipeline, passing * * * * * without changing any other
--   values of the action preserves the previous value of the secret.
actionConfigurationProperty_secret :: Lens' ActionConfigurationProperty Bool
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionConfigurationProperty.ActionConfigurationProperty
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionConfigurationProperty.ActionConfigurationProperty
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionConfigurationProperty.ActionConfigurationProperty
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionConfigurationProperty.ActionConfigurationProperty
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionConfigurationProperty.ActionConfigurationProperty
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionConfigurationProperty.ActionConfigurationProperty
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionConfigurationProperty.ActionConfigurationProperty
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionConfigurationProperty.ActionConfigurationProperty


module Network.AWS.CodePipeline.Types.ActionContext

-- | Represents the context of an action in the stage of a pipeline to a
--   job worker.
--   
--   <i>See:</i> <a>newActionContext</a> smart constructor.
data ActionContext
ActionContext' :: Maybe Text -> Maybe Text -> ActionContext

-- | The name of the action in the context of a job.
[$sel:name:ActionContext'] :: ActionContext -> Maybe Text

-- | The system-generated unique ID that corresponds to an action's
--   execution.
[$sel:actionExecutionId:ActionContext'] :: ActionContext -> Maybe Text

-- | Create a value of <a>ActionContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ActionContext'</a>, <a>actionContext_name</a> - The name
--   of the action in the context of a job.
--   
--   <a>$sel:actionExecutionId:ActionContext'</a>,
--   <a>actionContext_actionExecutionId</a> - The system-generated unique
--   ID that corresponds to an action's execution.
newActionContext :: ActionContext

-- | The name of the action in the context of a job.
actionContext_name :: Lens' ActionContext (Maybe Text)

-- | The system-generated unique ID that corresponds to an action's
--   execution.
actionContext_actionExecutionId :: Lens' ActionContext (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionContext.ActionContext
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionContext.ActionContext
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionContext.ActionContext
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionContext.ActionContext
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionContext.ActionContext
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionContext.ActionContext
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionContext.ActionContext


module Network.AWS.CodePipeline.Types.ActionExecutionFilter

-- | Filter values for the action execution.
--   
--   <i>See:</i> <a>newActionExecutionFilter</a> smart constructor.
data ActionExecutionFilter
ActionExecutionFilter' :: Maybe Text -> ActionExecutionFilter

-- | The pipeline execution ID used to filter action execution history.
[$sel:pipelineExecutionId:ActionExecutionFilter'] :: ActionExecutionFilter -> Maybe Text

-- | Create a value of <a>ActionExecutionFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecutionId:ActionExecutionFilter'</a>,
--   <a>actionExecutionFilter_pipelineExecutionId</a> - The pipeline
--   execution ID used to filter action execution history.
newActionExecutionFilter :: ActionExecutionFilter

-- | The pipeline execution ID used to filter action execution history.
actionExecutionFilter_pipelineExecutionId :: Lens' ActionExecutionFilter (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionExecutionFilter.ActionExecutionFilter
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionExecutionFilter.ActionExecutionFilter
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionExecutionFilter.ActionExecutionFilter
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionExecutionFilter.ActionExecutionFilter
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionExecutionFilter.ActionExecutionFilter
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionExecutionFilter.ActionExecutionFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionExecutionFilter.ActionExecutionFilter


module Network.AWS.CodePipeline.Types.ActionExecutionResult

-- | Execution result information, such as the external execution ID.
--   
--   <i>See:</i> <a>newActionExecutionResult</a> smart constructor.
data ActionExecutionResult
ActionExecutionResult' :: Maybe Text -> Maybe Text -> Maybe Text -> ActionExecutionResult

-- | The deepest external link to the external resource (for example, a
--   repository URL or deployment endpoint) that is used when running the
--   action.
[$sel:externalExecutionUrl:ActionExecutionResult'] :: ActionExecutionResult -> Maybe Text

-- | The action provider's external ID for the action execution.
[$sel:externalExecutionId:ActionExecutionResult'] :: ActionExecutionResult -> Maybe Text

-- | The action provider's summary for the action execution.
[$sel:externalExecutionSummary:ActionExecutionResult'] :: ActionExecutionResult -> Maybe Text

-- | Create a value of <a>ActionExecutionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalExecutionUrl:ActionExecutionResult'</a>,
--   <a>actionExecutionResult_externalExecutionUrl</a> - The deepest
--   external link to the external resource (for example, a repository URL
--   or deployment endpoint) that is used when running the action.
--   
--   <a>$sel:externalExecutionId:ActionExecutionResult'</a>,
--   <a>actionExecutionResult_externalExecutionId</a> - The action
--   provider's external ID for the action execution.
--   
--   <a>$sel:externalExecutionSummary:ActionExecutionResult'</a>,
--   <a>actionExecutionResult_externalExecutionSummary</a> - The action
--   provider's summary for the action execution.
newActionExecutionResult :: ActionExecutionResult

-- | The deepest external link to the external resource (for example, a
--   repository URL or deployment endpoint) that is used when running the
--   action.
actionExecutionResult_externalExecutionUrl :: Lens' ActionExecutionResult (Maybe Text)

-- | The action provider's external ID for the action execution.
actionExecutionResult_externalExecutionId :: Lens' ActionExecutionResult (Maybe Text)

-- | The action provider's summary for the action execution.
actionExecutionResult_externalExecutionSummary :: Lens' ActionExecutionResult (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionExecutionResult.ActionExecutionResult
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionExecutionResult.ActionExecutionResult
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionExecutionResult.ActionExecutionResult
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionExecutionResult.ActionExecutionResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionExecutionResult.ActionExecutionResult
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionExecutionResult.ActionExecutionResult
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionExecutionResult.ActionExecutionResult


module Network.AWS.CodePipeline.Types.ActionExecutionStatus
newtype ActionExecutionStatus
ActionExecutionStatus' :: Text -> ActionExecutionStatus
[fromActionExecutionStatus] :: ActionExecutionStatus -> Text
pattern ActionExecutionStatus_Abandoned :: ActionExecutionStatus
pattern ActionExecutionStatus_Failed :: ActionExecutionStatus
pattern ActionExecutionStatus_InProgress :: ActionExecutionStatus
pattern ActionExecutionStatus_Succeeded :: ActionExecutionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionExecutionStatus.ActionExecutionStatus


module Network.AWS.CodePipeline.Types.ActionOwner
newtype ActionOwner
ActionOwner' :: Text -> ActionOwner
[fromActionOwner] :: ActionOwner -> Text
pattern ActionOwner_AWS :: ActionOwner
pattern ActionOwner_Custom :: ActionOwner
pattern ActionOwner_ThirdParty :: ActionOwner
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionOwner.ActionOwner


module Network.AWS.CodePipeline.Types.ActionRevision

-- | Represents information about the version (or revision) of an action.
--   
--   <i>See:</i> <a>newActionRevision</a> smart constructor.
data ActionRevision
ActionRevision' :: Text -> Text -> POSIX -> ActionRevision

-- | The system-generated unique ID that identifies the revision number of
--   the action.
[$sel:revisionId:ActionRevision'] :: ActionRevision -> Text

-- | The unique identifier of the change that set the state to this
--   revision (for example, a deployment ID or timestamp).
[$sel:revisionChangeId:ActionRevision'] :: ActionRevision -> Text

-- | The date and time when the most recent version of the action was
--   created, in timestamp format.
[$sel:created:ActionRevision'] :: ActionRevision -> POSIX

-- | Create a value of <a>ActionRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:ActionRevision'</a>,
--   <a>actionRevision_revisionId</a> - The system-generated unique ID that
--   identifies the revision number of the action.
--   
--   <a>$sel:revisionChangeId:ActionRevision'</a>,
--   <a>actionRevision_revisionChangeId</a> - The unique identifier of the
--   change that set the state to this revision (for example, a deployment
--   ID or timestamp).
--   
--   <a>$sel:created:ActionRevision'</a>, <a>actionRevision_created</a> -
--   The date and time when the most recent version of the action was
--   created, in timestamp format.
newActionRevision :: Text -> Text -> UTCTime -> ActionRevision

-- | The system-generated unique ID that identifies the revision number of
--   the action.
actionRevision_revisionId :: Lens' ActionRevision Text

-- | The unique identifier of the change that set the state to this
--   revision (for example, a deployment ID or timestamp).
actionRevision_revisionChangeId :: Lens' ActionRevision Text

-- | The date and time when the most recent version of the action was
--   created, in timestamp format.
actionRevision_created :: Lens' ActionRevision UTCTime
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionRevision.ActionRevision
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionRevision.ActionRevision
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionRevision.ActionRevision
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionRevision.ActionRevision
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionRevision.ActionRevision
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionRevision.ActionRevision
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionRevision.ActionRevision
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionRevision.ActionRevision


module Network.AWS.CodePipeline.Types.ActionTypeArtifactDetails

-- | Information about parameters for artifacts associated with the action
--   type, such as the minimum and maximum artifacts allowed.
--   
--   <i>See:</i> <a>newActionTypeArtifactDetails</a> smart constructor.
data ActionTypeArtifactDetails
ActionTypeArtifactDetails' :: Natural -> Natural -> ActionTypeArtifactDetails

-- | The minimum number of artifacts that can be used with the action type.
--   For example, you should specify a minimum and maximum of zero input
--   artifacts for an action type with a category of <tt>source</tt>.
[$sel:minimumCount:ActionTypeArtifactDetails'] :: ActionTypeArtifactDetails -> Natural

-- | The maximum number of artifacts that can be used with the actiontype.
--   For example, you should specify a minimum and maximum of zero input
--   artifacts for an action type with a category of <tt>source</tt>.
[$sel:maximumCount:ActionTypeArtifactDetails'] :: ActionTypeArtifactDetails -> Natural

-- | Create a value of <a>ActionTypeArtifactDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCount:ActionTypeArtifactDetails'</a>,
--   <a>actionTypeArtifactDetails_minimumCount</a> - The minimum number of
--   artifacts that can be used with the action type. For example, you
--   should specify a minimum and maximum of zero input artifacts for an
--   action type with a category of <tt>source</tt>.
--   
--   <a>$sel:maximumCount:ActionTypeArtifactDetails'</a>,
--   <a>actionTypeArtifactDetails_maximumCount</a> - The maximum number of
--   artifacts that can be used with the actiontype. For example, you
--   should specify a minimum and maximum of zero input artifacts for an
--   action type with a category of <tt>source</tt>.
newActionTypeArtifactDetails :: Natural -> Natural -> ActionTypeArtifactDetails

-- | The minimum number of artifacts that can be used with the action type.
--   For example, you should specify a minimum and maximum of zero input
--   artifacts for an action type with a category of <tt>source</tt>.
actionTypeArtifactDetails_minimumCount :: Lens' ActionTypeArtifactDetails Natural

-- | The maximum number of artifacts that can be used with the actiontype.
--   For example, you should specify a minimum and maximum of zero input
--   artifacts for an action type with a category of <tt>source</tt>.
actionTypeArtifactDetails_maximumCount :: Lens' ActionTypeArtifactDetails Natural
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionTypeArtifactDetails.ActionTypeArtifactDetails
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionTypeArtifactDetails.ActionTypeArtifactDetails
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionTypeArtifactDetails.ActionTypeArtifactDetails
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionTypeArtifactDetails.ActionTypeArtifactDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionTypeArtifactDetails.ActionTypeArtifactDetails
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionTypeArtifactDetails.ActionTypeArtifactDetails
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionTypeArtifactDetails.ActionTypeArtifactDetails
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionTypeArtifactDetails.ActionTypeArtifactDetails


module Network.AWS.CodePipeline.Types.ActionTypeId

-- | Represents information about an action type.
--   
--   <i>See:</i> <a>newActionTypeId</a> smart constructor.
data ActionTypeId
ActionTypeId' :: ActionCategory -> ActionOwner -> Text -> Text -> ActionTypeId

-- | A category defines what kind of action can be taken in the stage, and
--   constrains the provider type for the action. Valid categories are
--   limited to one of the following values.
--   
--   <ul>
--   <li>Source</li>
--   <li>Build</li>
--   <li>Test</li>
--   <li>Deploy</li>
--   <li>Invoke</li>
--   <li>Approval</li>
--   </ul>
[$sel:category:ActionTypeId'] :: ActionTypeId -> ActionCategory

-- | The creator of the action being called. There are three valid values
--   for the <tt>Owner</tt> field in the action category section within
--   your pipeline structure: <tt>AWS</tt>, <tt>ThirdParty</tt>, and
--   <tt>Custom</tt>. For more information, see <a>Valid Action Types and
--   Providers in CodePipeline</a>.
[$sel:owner:ActionTypeId'] :: ActionTypeId -> ActionOwner

-- | The provider of the service being called by the action. Valid
--   providers are determined by the action category. For example, an
--   action in the Deploy category type might have a provider of AWS
--   CodeDeploy, which would be specified as CodeDeploy. For more
--   information, see <a>Valid Action Types and Providers in
--   CodePipeline</a>.
[$sel:provider:ActionTypeId'] :: ActionTypeId -> Text

-- | A string that describes the action version.
[$sel:version:ActionTypeId'] :: ActionTypeId -> Text

-- | Create a value of <a>ActionTypeId</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:category:ActionTypeId'</a>, <a>actionTypeId_category</a> - A
--   category defines what kind of action can be taken in the stage, and
--   constrains the provider type for the action. Valid categories are
--   limited to one of the following values.
--   
--   <ul>
--   <li>Source</li>
--   <li>Build</li>
--   <li>Test</li>
--   <li>Deploy</li>
--   <li>Invoke</li>
--   <li>Approval</li>
--   </ul>
--   
--   <a>$sel:owner:ActionTypeId'</a>, <a>actionTypeId_owner</a> - The
--   creator of the action being called. There are three valid values for
--   the <tt>Owner</tt> field in the action category section within your
--   pipeline structure: <tt>AWS</tt>, <tt>ThirdParty</tt>, and
--   <tt>Custom</tt>. For more information, see <a>Valid Action Types and
--   Providers in CodePipeline</a>.
--   
--   <a>$sel:provider:ActionTypeId'</a>, <a>actionTypeId_provider</a> - The
--   provider of the service being called by the action. Valid providers
--   are determined by the action category. For example, an action in the
--   Deploy category type might have a provider of AWS CodeDeploy, which
--   would be specified as CodeDeploy. For more information, see <a>Valid
--   Action Types and Providers in CodePipeline</a>.
--   
--   <a>$sel:version:ActionTypeId'</a>, <a>actionTypeId_version</a> - A
--   string that describes the action version.
newActionTypeId :: ActionCategory -> ActionOwner -> Text -> Text -> ActionTypeId

-- | A category defines what kind of action can be taken in the stage, and
--   constrains the provider type for the action. Valid categories are
--   limited to one of the following values.
--   
--   <ul>
--   <li>Source</li>
--   <li>Build</li>
--   <li>Test</li>
--   <li>Deploy</li>
--   <li>Invoke</li>
--   <li>Approval</li>
--   </ul>
actionTypeId_category :: Lens' ActionTypeId ActionCategory

-- | The creator of the action being called. There are three valid values
--   for the <tt>Owner</tt> field in the action category section within
--   your pipeline structure: <tt>AWS</tt>, <tt>ThirdParty</tt>, and
--   <tt>Custom</tt>. For more information, see <a>Valid Action Types and
--   Providers in CodePipeline</a>.
actionTypeId_owner :: Lens' ActionTypeId ActionOwner

-- | The provider of the service being called by the action. Valid
--   providers are determined by the action category. For example, an
--   action in the Deploy category type might have a provider of AWS
--   CodeDeploy, which would be specified as CodeDeploy. For more
--   information, see <a>Valid Action Types and Providers in
--   CodePipeline</a>.
actionTypeId_provider :: Lens' ActionTypeId Text

-- | A string that describes the action version.
actionTypeId_version :: Lens' ActionTypeId Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionTypeId.ActionTypeId
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionTypeId.ActionTypeId
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionTypeId.ActionTypeId
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionTypeId.ActionTypeId
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionTypeId.ActionTypeId
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionTypeId.ActionTypeId
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionTypeId.ActionTypeId
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionTypeId.ActionTypeId


module Network.AWS.CodePipeline.Types.ActionTypeIdentifier

-- | Specifies the category, owner, provider, and version of the action
--   type.
--   
--   <i>See:</i> <a>newActionTypeIdentifier</a> smart constructor.
data ActionTypeIdentifier
ActionTypeIdentifier' :: ActionCategory -> Text -> Text -> Text -> ActionTypeIdentifier

-- | Defines what kind of action can be taken in the stage, one of the
--   following:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
[$sel:category:ActionTypeIdentifier'] :: ActionTypeIdentifier -> ActionCategory

-- | The creator of the action type being called: <tt>AWS</tt> or
--   <tt>ThirdParty</tt>.
[$sel:owner:ActionTypeIdentifier'] :: ActionTypeIdentifier -> Text

-- | The provider of the action type being called. The provider name is
--   supplied when the action type is created.
[$sel:provider:ActionTypeIdentifier'] :: ActionTypeIdentifier -> Text

-- | A string that describes the action type version.
[$sel:version:ActionTypeIdentifier'] :: ActionTypeIdentifier -> Text

-- | Create a value of <a>ActionTypeIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:category:ActionTypeIdentifier'</a>,
--   <a>actionTypeIdentifier_category</a> - Defines what kind of action can
--   be taken in the stage, one of the following:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
--   
--   <a>$sel:owner:ActionTypeIdentifier'</a>,
--   <a>actionTypeIdentifier_owner</a> - The creator of the action type
--   being called: <tt>AWS</tt> or <tt>ThirdParty</tt>.
--   
--   <a>$sel:provider:ActionTypeIdentifier'</a>,
--   <a>actionTypeIdentifier_provider</a> - The provider of the action type
--   being called. The provider name is supplied when the action type is
--   created.
--   
--   <a>$sel:version:ActionTypeIdentifier'</a>,
--   <a>actionTypeIdentifier_version</a> - A string that describes the
--   action type version.
newActionTypeIdentifier :: ActionCategory -> Text -> Text -> Text -> ActionTypeIdentifier

-- | Defines what kind of action can be taken in the stage, one of the
--   following:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
actionTypeIdentifier_category :: Lens' ActionTypeIdentifier ActionCategory

-- | The creator of the action type being called: <tt>AWS</tt> or
--   <tt>ThirdParty</tt>.
actionTypeIdentifier_owner :: Lens' ActionTypeIdentifier Text

-- | The provider of the action type being called. The provider name is
--   supplied when the action type is created.
actionTypeIdentifier_provider :: Lens' ActionTypeIdentifier Text

-- | A string that describes the action type version.
actionTypeIdentifier_version :: Lens' ActionTypeIdentifier Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionTypeIdentifier.ActionTypeIdentifier
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionTypeIdentifier.ActionTypeIdentifier
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionTypeIdentifier.ActionTypeIdentifier
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionTypeIdentifier.ActionTypeIdentifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionTypeIdentifier.ActionTypeIdentifier
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionTypeIdentifier.ActionTypeIdentifier
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionTypeIdentifier.ActionTypeIdentifier
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionTypeIdentifier.ActionTypeIdentifier


module Network.AWS.CodePipeline.Types.ActionTypePermissions

-- | Details identifying the users with permissions to use the action type.
--   
--   <i>See:</i> <a>newActionTypePermissions</a> smart constructor.
data ActionTypePermissions
ActionTypePermissions' :: NonEmpty Text -> ActionTypePermissions

-- | A list of AWS account IDs with access to use the action type in their
--   pipelines.
[$sel:allowedAccounts:ActionTypePermissions'] :: ActionTypePermissions -> NonEmpty Text

-- | Create a value of <a>ActionTypePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowedAccounts:ActionTypePermissions'</a>,
--   <a>actionTypePermissions_allowedAccounts</a> - A list of AWS account
--   IDs with access to use the action type in their pipelines.
newActionTypePermissions :: NonEmpty Text -> ActionTypePermissions

-- | A list of AWS account IDs with access to use the action type in their
--   pipelines.
actionTypePermissions_allowedAccounts :: Lens' ActionTypePermissions (NonEmpty Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionTypePermissions.ActionTypePermissions
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionTypePermissions.ActionTypePermissions
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionTypePermissions.ActionTypePermissions
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionTypePermissions.ActionTypePermissions
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionTypePermissions.ActionTypePermissions
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionTypePermissions.ActionTypePermissions
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionTypePermissions.ActionTypePermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionTypePermissions.ActionTypePermissions


module Network.AWS.CodePipeline.Types.ActionTypeProperty

-- | Represents information about each property specified in the action
--   configuration, such as the description and key name that display for
--   the customer using the action type.
--   
--   <i>See:</i> <a>newActionTypeProperty</a> smart constructor.
data ActionTypeProperty
ActionTypeProperty' :: Maybe Bool -> Maybe Text -> Text -> Bool -> Bool -> Bool -> ActionTypeProperty

-- | Indicates that the property is used with polling. An action type can
--   have up to one queryable property. If it has one, that property must
--   be both required and not secret.
[$sel:queryable:ActionTypeProperty'] :: ActionTypeProperty -> Maybe Bool

-- | The description of the property that is displayed to users.
[$sel:description:ActionTypeProperty'] :: ActionTypeProperty -> Maybe Text

-- | The property name that is displayed to users.
[$sel:name:ActionTypeProperty'] :: ActionTypeProperty -> Text

-- | Whether the configuration property is an optional value.
[$sel:optional:ActionTypeProperty'] :: ActionTypeProperty -> Bool

-- | Whether the configuration property is a key.
[$sel:key:ActionTypeProperty'] :: ActionTypeProperty -> Bool

-- | Whether to omit the field value entered by the customer in the log. If
--   <tt>true</tt>, the value is not saved in CloudTrail logs for the
--   action execution.
[$sel:noEcho:ActionTypeProperty'] :: ActionTypeProperty -> Bool

-- | Create a value of <a>ActionTypeProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryable:ActionTypeProperty'</a>,
--   <a>actionTypeProperty_queryable</a> - Indicates that the property is
--   used with polling. An action type can have up to one queryable
--   property. If it has one, that property must be both required and not
--   secret.
--   
--   <a>$sel:description:ActionTypeProperty'</a>,
--   <a>actionTypeProperty_description</a> - The description of the
--   property that is displayed to users.
--   
--   <a>$sel:name:ActionTypeProperty'</a>, <a>actionTypeProperty_name</a> -
--   The property name that is displayed to users.
--   
--   <a>$sel:optional:ActionTypeProperty'</a>,
--   <a>actionTypeProperty_optional</a> - Whether the configuration
--   property is an optional value.
--   
--   <a>$sel:key:ActionTypeProperty'</a>, <a>actionTypeProperty_key</a> -
--   Whether the configuration property is a key.
--   
--   <a>$sel:noEcho:ActionTypeProperty'</a>,
--   <a>actionTypeProperty_noEcho</a> - Whether to omit the field value
--   entered by the customer in the log. If <tt>true</tt>, the value is not
--   saved in CloudTrail logs for the action execution.
newActionTypeProperty :: Text -> Bool -> Bool -> Bool -> ActionTypeProperty

-- | Indicates that the property is used with polling. An action type can
--   have up to one queryable property. If it has one, that property must
--   be both required and not secret.
actionTypeProperty_queryable :: Lens' ActionTypeProperty (Maybe Bool)

-- | The description of the property that is displayed to users.
actionTypeProperty_description :: Lens' ActionTypeProperty (Maybe Text)

-- | The property name that is displayed to users.
actionTypeProperty_name :: Lens' ActionTypeProperty Text

-- | Whether the configuration property is an optional value.
actionTypeProperty_optional :: Lens' ActionTypeProperty Bool

-- | Whether the configuration property is a key.
actionTypeProperty_key :: Lens' ActionTypeProperty Bool

-- | Whether to omit the field value entered by the customer in the log. If
--   <tt>true</tt>, the value is not saved in CloudTrail logs for the
--   action execution.
actionTypeProperty_noEcho :: Lens' ActionTypeProperty Bool
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionTypeProperty.ActionTypeProperty
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionTypeProperty.ActionTypeProperty
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionTypeProperty.ActionTypeProperty
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionTypeProperty.ActionTypeProperty
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionTypeProperty.ActionTypeProperty
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionTypeProperty.ActionTypeProperty
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionTypeProperty.ActionTypeProperty
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionTypeProperty.ActionTypeProperty


module Network.AWS.CodePipeline.Types.ActionTypeSettings

-- | Returns information about the settings for an action type.
--   
--   <i>See:</i> <a>newActionTypeSettings</a> smart constructor.
data ActionTypeSettings
ActionTypeSettings' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ActionTypeSettings

-- | The URL of a sign-up page where users can sign up for an external
--   service and perform initial configuration of the action provided by
--   that service.
[$sel:thirdPartyConfigurationUrl:ActionTypeSettings'] :: ActionTypeSettings -> Maybe Text

-- | The URL returned to the AWS CodePipeline console that contains a link
--   to the top-level landing page for the external system, such as the
--   console page for AWS CodeDeploy. This link is shown on the pipeline
--   view page in the AWS CodePipeline console and provides a link to the
--   execution entity of the external action.
[$sel:executionUrlTemplate:ActionTypeSettings'] :: ActionTypeSettings -> Maybe Text

-- | The URL returned to the AWS CodePipeline console that contains a link
--   to the page where customers can update or change the configuration of
--   the external action.
[$sel:revisionUrlTemplate:ActionTypeSettings'] :: ActionTypeSettings -> Maybe Text

-- | The URL returned to the AWS CodePipeline console that provides a deep
--   link to the resources of the external system, such as the
--   configuration page for an AWS CodeDeploy deployment group. This link
--   is provided as part of the action display in the pipeline.
[$sel:entityUrlTemplate:ActionTypeSettings'] :: ActionTypeSettings -> Maybe Text

-- | Create a value of <a>ActionTypeSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thirdPartyConfigurationUrl:ActionTypeSettings'</a>,
--   <a>actionTypeSettings_thirdPartyConfigurationUrl</a> - The URL of a
--   sign-up page where users can sign up for an external service and
--   perform initial configuration of the action provided by that service.
--   
--   <a>$sel:executionUrlTemplate:ActionTypeSettings'</a>,
--   <a>actionTypeSettings_executionUrlTemplate</a> - The URL returned to
--   the AWS CodePipeline console that contains a link to the top-level
--   landing page for the external system, such as the console page for AWS
--   CodeDeploy. This link is shown on the pipeline view page in the AWS
--   CodePipeline console and provides a link to the execution entity of
--   the external action.
--   
--   <a>$sel:revisionUrlTemplate:ActionTypeSettings'</a>,
--   <a>actionTypeSettings_revisionUrlTemplate</a> - The URL returned to
--   the AWS CodePipeline console that contains a link to the page where
--   customers can update or change the configuration of the external
--   action.
--   
--   <a>$sel:entityUrlTemplate:ActionTypeSettings'</a>,
--   <a>actionTypeSettings_entityUrlTemplate</a> - The URL returned to the
--   AWS CodePipeline console that provides a deep link to the resources of
--   the external system, such as the configuration page for an AWS
--   CodeDeploy deployment group. This link is provided as part of the
--   action display in the pipeline.
newActionTypeSettings :: ActionTypeSettings

-- | The URL of a sign-up page where users can sign up for an external
--   service and perform initial configuration of the action provided by
--   that service.
actionTypeSettings_thirdPartyConfigurationUrl :: Lens' ActionTypeSettings (Maybe Text)

-- | The URL returned to the AWS CodePipeline console that contains a link
--   to the top-level landing page for the external system, such as the
--   console page for AWS CodeDeploy. This link is shown on the pipeline
--   view page in the AWS CodePipeline console and provides a link to the
--   execution entity of the external action.
actionTypeSettings_executionUrlTemplate :: Lens' ActionTypeSettings (Maybe Text)

-- | The URL returned to the AWS CodePipeline console that contains a link
--   to the page where customers can update or change the configuration of
--   the external action.
actionTypeSettings_revisionUrlTemplate :: Lens' ActionTypeSettings (Maybe Text)

-- | The URL returned to the AWS CodePipeline console that provides a deep
--   link to the resources of the external system, such as the
--   configuration page for an AWS CodeDeploy deployment group. This link
--   is provided as part of the action display in the pipeline.
actionTypeSettings_entityUrlTemplate :: Lens' ActionTypeSettings (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionTypeSettings.ActionTypeSettings
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionTypeSettings.ActionTypeSettings
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionTypeSettings.ActionTypeSettings
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionTypeSettings.ActionTypeSettings
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionTypeSettings.ActionTypeSettings
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionTypeSettings.ActionTypeSettings
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionTypeSettings.ActionTypeSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionTypeSettings.ActionTypeSettings


module Network.AWS.CodePipeline.Types.ActionTypeUrls

-- | Returns information about URLs for web pages that display to customers
--   as links on the pipeline view, such as an external configuration page
--   for the action type.
--   
--   <i>See:</i> <a>newActionTypeUrls</a> smart constructor.
data ActionTypeUrls
ActionTypeUrls' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ActionTypeUrls

-- | The link to an execution page for the action type in progress. For
--   example, for a CodeDeploy action, this link is shown on the pipeline
--   view page in the CodePipeline console, and it links to a CodeDeploy
--   status page.
[$sel:executionUrlTemplate:ActionTypeUrls'] :: ActionTypeUrls -> Maybe Text

-- | The URL returned to the CodePipeline console that contains a link to
--   the page where customers can update or change the configuration of the
--   external action.
[$sel:revisionUrlTemplate:ActionTypeUrls'] :: ActionTypeUrls -> Maybe Text

-- | The URL returned to the CodePipeline console that provides a deep link
--   to the resources of the external system, such as a status page. This
--   link is provided as part of the action display in the pipeline.
[$sel:entityUrlTemplate:ActionTypeUrls'] :: ActionTypeUrls -> Maybe Text

-- | The URL returned to the CodePipeline console that contains a link to
--   the page where customers can configure the external action.
[$sel:configurationUrl:ActionTypeUrls'] :: ActionTypeUrls -> Maybe Text

-- | Create a value of <a>ActionTypeUrls</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executionUrlTemplate:ActionTypeUrls'</a>,
--   <a>actionTypeUrls_executionUrlTemplate</a> - The link to an execution
--   page for the action type in progress. For example, for a CodeDeploy
--   action, this link is shown on the pipeline view page in the
--   CodePipeline console, and it links to a CodeDeploy status page.
--   
--   <a>$sel:revisionUrlTemplate:ActionTypeUrls'</a>,
--   <a>actionTypeUrls_revisionUrlTemplate</a> - The URL returned to the
--   CodePipeline console that contains a link to the page where customers
--   can update or change the configuration of the external action.
--   
--   <a>$sel:entityUrlTemplate:ActionTypeUrls'</a>,
--   <a>actionTypeUrls_entityUrlTemplate</a> - The URL returned to the
--   CodePipeline console that provides a deep link to the resources of the
--   external system, such as a status page. This link is provided as part
--   of the action display in the pipeline.
--   
--   <a>$sel:configurationUrl:ActionTypeUrls'</a>,
--   <a>actionTypeUrls_configurationUrl</a> - The URL returned to the
--   CodePipeline console that contains a link to the page where customers
--   can configure the external action.
newActionTypeUrls :: ActionTypeUrls

-- | The link to an execution page for the action type in progress. For
--   example, for a CodeDeploy action, this link is shown on the pipeline
--   view page in the CodePipeline console, and it links to a CodeDeploy
--   status page.
actionTypeUrls_executionUrlTemplate :: Lens' ActionTypeUrls (Maybe Text)

-- | The URL returned to the CodePipeline console that contains a link to
--   the page where customers can update or change the configuration of the
--   external action.
actionTypeUrls_revisionUrlTemplate :: Lens' ActionTypeUrls (Maybe Text)

-- | The URL returned to the CodePipeline console that provides a deep link
--   to the resources of the external system, such as a status page. This
--   link is provided as part of the action display in the pipeline.
actionTypeUrls_entityUrlTemplate :: Lens' ActionTypeUrls (Maybe Text)

-- | The URL returned to the CodePipeline console that contains a link to
--   the page where customers can configure the external action.
actionTypeUrls_configurationUrl :: Lens' ActionTypeUrls (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionTypeUrls.ActionTypeUrls
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionTypeUrls.ActionTypeUrls
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionTypeUrls.ActionTypeUrls
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionTypeUrls.ActionTypeUrls
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionTypeUrls.ActionTypeUrls
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionTypeUrls.ActionTypeUrls
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionTypeUrls.ActionTypeUrls
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionTypeUrls.ActionTypeUrls


module Network.AWS.CodePipeline.Types.ApprovalStatus
newtype ApprovalStatus
ApprovalStatus' :: Text -> ApprovalStatus
[fromApprovalStatus] :: ApprovalStatus -> Text
pattern ApprovalStatus_Approved :: ApprovalStatus
pattern ApprovalStatus_Rejected :: ApprovalStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ApprovalStatus.ApprovalStatus


module Network.AWS.CodePipeline.Types.ApprovalResult

-- | Represents information about the result of an approval request.
--   
--   <i>See:</i> <a>newApprovalResult</a> smart constructor.
data ApprovalResult
ApprovalResult' :: Text -> ApprovalStatus -> ApprovalResult

-- | The summary of the current status of the approval request.
[$sel:summary:ApprovalResult'] :: ApprovalResult -> Text

-- | The response submitted by a reviewer assigned to an approval action
--   request.
[$sel:status:ApprovalResult'] :: ApprovalResult -> ApprovalStatus

-- | Create a value of <a>ApprovalResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:ApprovalResult'</a>, <a>approvalResult_summary</a> -
--   The summary of the current status of the approval request.
--   
--   <a>$sel:status:ApprovalResult'</a>, <a>approvalResult_status</a> - The
--   response submitted by a reviewer assigned to an approval action
--   request.
newApprovalResult :: Text -> ApprovalStatus -> ApprovalResult

-- | The summary of the current status of the approval request.
approvalResult_summary :: Lens' ApprovalResult Text

-- | The response submitted by a reviewer assigned to an approval action
--   request.
approvalResult_status :: Lens' ApprovalResult ApprovalStatus
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ApprovalResult.ApprovalResult
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ApprovalResult.ApprovalResult
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ApprovalResult.ApprovalResult
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ApprovalResult.ApprovalResult
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ApprovalResult.ApprovalResult
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ApprovalResult.ApprovalResult
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ApprovalResult.ApprovalResult


module Network.AWS.CodePipeline.Types.ArtifactDetails

-- | Returns information about the details of an artifact.
--   
--   <i>See:</i> <a>newArtifactDetails</a> smart constructor.
data ArtifactDetails
ArtifactDetails' :: Natural -> Natural -> ArtifactDetails

-- | The minimum number of artifacts allowed for the action type.
[$sel:minimumCount:ArtifactDetails'] :: ArtifactDetails -> Natural

-- | The maximum number of artifacts allowed for the action type.
[$sel:maximumCount:ArtifactDetails'] :: ArtifactDetails -> Natural

-- | Create a value of <a>ArtifactDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCount:ArtifactDetails'</a>,
--   <a>artifactDetails_minimumCount</a> - The minimum number of artifacts
--   allowed for the action type.
--   
--   <a>$sel:maximumCount:ArtifactDetails'</a>,
--   <a>artifactDetails_maximumCount</a> - The maximum number of artifacts
--   allowed for the action type.
newArtifactDetails :: Natural -> Natural -> ArtifactDetails

-- | The minimum number of artifacts allowed for the action type.
artifactDetails_minimumCount :: Lens' ArtifactDetails Natural

-- | The maximum number of artifacts allowed for the action type.
artifactDetails_maximumCount :: Lens' ArtifactDetails Natural
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ArtifactDetails.ArtifactDetails
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ArtifactDetails.ArtifactDetails
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ArtifactDetails.ArtifactDetails
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ArtifactDetails.ArtifactDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ArtifactDetails.ArtifactDetails
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ArtifactDetails.ArtifactDetails
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ArtifactDetails.ArtifactDetails
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ArtifactDetails.ArtifactDetails


module Network.AWS.CodePipeline.Types.ActionType

-- | Returns information about the details of an action type.
--   
--   <i>See:</i> <a>newActionType</a> smart constructor.
data ActionType
ActionType' :: Maybe ActionTypeSettings -> Maybe [ActionConfigurationProperty] -> ActionTypeId -> ArtifactDetails -> ArtifactDetails -> ActionType

-- | The settings for the action type.
[$sel:settings:ActionType'] :: ActionType -> Maybe ActionTypeSettings

-- | The configuration properties for the action type.
[$sel:actionConfigurationProperties:ActionType'] :: ActionType -> Maybe [ActionConfigurationProperty]

-- | Represents information about an action type.
[$sel:id:ActionType'] :: ActionType -> ActionTypeId

-- | The details of the input artifact for the action, such as its commit
--   ID.
[$sel:inputArtifactDetails:ActionType'] :: ActionType -> ArtifactDetails

-- | The details of the output artifact of the action, such as its commit
--   ID.
[$sel:outputArtifactDetails:ActionType'] :: ActionType -> ArtifactDetails

-- | Create a value of <a>ActionType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:settings:ActionType'</a>, <a>actionType_settings</a> - The
--   settings for the action type.
--   
--   <a>$sel:actionConfigurationProperties:ActionType'</a>,
--   <a>actionType_actionConfigurationProperties</a> - The configuration
--   properties for the action type.
--   
--   <a>$sel:id:ActionType'</a>, <a>actionType_id</a> - Represents
--   information about an action type.
--   
--   <a>$sel:inputArtifactDetails:ActionType'</a>,
--   <a>actionType_inputArtifactDetails</a> - The details of the input
--   artifact for the action, such as its commit ID.
--   
--   <a>$sel:outputArtifactDetails:ActionType'</a>,
--   <a>actionType_outputArtifactDetails</a> - The details of the output
--   artifact of the action, such as its commit ID.
newActionType :: ActionTypeId -> ArtifactDetails -> ArtifactDetails -> ActionType

-- | The settings for the action type.
actionType_settings :: Lens' ActionType (Maybe ActionTypeSettings)

-- | The configuration properties for the action type.
actionType_actionConfigurationProperties :: Lens' ActionType (Maybe [ActionConfigurationProperty])

-- | Represents information about an action type.
actionType_id :: Lens' ActionType ActionTypeId

-- | The details of the input artifact for the action, such as its commit
--   ID.
actionType_inputArtifactDetails :: Lens' ActionType ArtifactDetails

-- | The details of the output artifact of the action, such as its commit
--   ID.
actionType_outputArtifactDetails :: Lens' ActionType ArtifactDetails
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionType.ActionType
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionType.ActionType
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionType.ActionType
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionType.ActionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionType.ActionType
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionType.ActionType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionType.ActionType


module Network.AWS.CodePipeline.Types.ArtifactLocationType
newtype ArtifactLocationType
ArtifactLocationType' :: Text -> ArtifactLocationType
[fromArtifactLocationType] :: ArtifactLocationType -> Text
pattern ArtifactLocationType_S3 :: ArtifactLocationType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ArtifactLocationType.ArtifactLocationType


module Network.AWS.CodePipeline.Types.ArtifactRevision

-- | Represents revision details of an artifact.
--   
--   <i>See:</i> <a>newArtifactRevision</a> smart constructor.
data ArtifactRevision
ArtifactRevision' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> ArtifactRevision

-- | Summary information about the most recent revision of the artifact.
--   For GitHub and AWS CodeCommit repositories, the commit message. For
--   Amazon S3 buckets or actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
[$sel:revisionSummary:ArtifactRevision'] :: ArtifactRevision -> Maybe Text

-- | The commit ID for the artifact revision. For artifacts stored in
--   GitHub or AWS CodeCommit repositories, the commit ID is linked to a
--   commit details page.
[$sel:revisionUrl:ArtifactRevision'] :: ArtifactRevision -> Maybe Text

-- | The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
[$sel:created:ArtifactRevision'] :: ArtifactRevision -> Maybe POSIX

-- | The name of an artifact. This name might be system-generated, such as
--   "MyApp", or defined by the user when an action is created.
[$sel:name:ArtifactRevision'] :: ArtifactRevision -> Maybe Text

-- | The revision ID of the artifact.
[$sel:revisionId:ArtifactRevision'] :: ArtifactRevision -> Maybe Text

-- | An additional identifier for a revision, such as a commit date or, for
--   artifacts stored in Amazon S3 buckets, the ETag value.
[$sel:revisionChangeIdentifier:ArtifactRevision'] :: ArtifactRevision -> Maybe Text

-- | Create a value of <a>ArtifactRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionSummary:ArtifactRevision'</a>,
--   <a>artifactRevision_revisionSummary</a> - Summary information about
--   the most recent revision of the artifact. For GitHub and AWS
--   CodeCommit repositories, the commit message. For Amazon S3 buckets or
--   actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
--   
--   <a>$sel:revisionUrl:ArtifactRevision'</a>,
--   <a>artifactRevision_revisionUrl</a> - The commit ID for the artifact
--   revision. For artifacts stored in GitHub or AWS CodeCommit
--   repositories, the commit ID is linked to a commit details page.
--   
--   <a>$sel:created:ArtifactRevision'</a>, <a>artifactRevision_created</a>
--   - The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
--   
--   <a>$sel:name:ArtifactRevision'</a>, <a>artifactRevision_name</a> - The
--   name of an artifact. This name might be system-generated, such as
--   "MyApp", or defined by the user when an action is created.
--   
--   <a>$sel:revisionId:ArtifactRevision'</a>,
--   <a>artifactRevision_revisionId</a> - The revision ID of the artifact.
--   
--   <a>$sel:revisionChangeIdentifier:ArtifactRevision'</a>,
--   <a>artifactRevision_revisionChangeIdentifier</a> - An additional
--   identifier for a revision, such as a commit date or, for artifacts
--   stored in Amazon S3 buckets, the ETag value.
newArtifactRevision :: ArtifactRevision

-- | Summary information about the most recent revision of the artifact.
--   For GitHub and AWS CodeCommit repositories, the commit message. For
--   Amazon S3 buckets or actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
artifactRevision_revisionSummary :: Lens' ArtifactRevision (Maybe Text)

-- | The commit ID for the artifact revision. For artifacts stored in
--   GitHub or AWS CodeCommit repositories, the commit ID is linked to a
--   commit details page.
artifactRevision_revisionUrl :: Lens' ArtifactRevision (Maybe Text)

-- | The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
artifactRevision_created :: Lens' ArtifactRevision (Maybe UTCTime)

-- | The name of an artifact. This name might be system-generated, such as
--   "MyApp", or defined by the user when an action is created.
artifactRevision_name :: Lens' ArtifactRevision (Maybe Text)

-- | The revision ID of the artifact.
artifactRevision_revisionId :: Lens' ArtifactRevision (Maybe Text)

-- | An additional identifier for a revision, such as a commit date or, for
--   artifacts stored in Amazon S3 buckets, the ETag value.
artifactRevision_revisionChangeIdentifier :: Lens' ArtifactRevision (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ArtifactRevision.ArtifactRevision
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ArtifactRevision.ArtifactRevision
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ArtifactRevision.ArtifactRevision
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ArtifactRevision.ArtifactRevision
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ArtifactRevision.ArtifactRevision
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ArtifactRevision.ArtifactRevision
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ArtifactRevision.ArtifactRevision


module Network.AWS.CodePipeline.Types.ArtifactStoreType
newtype ArtifactStoreType
ArtifactStoreType' :: Text -> ArtifactStoreType
[fromArtifactStoreType] :: ArtifactStoreType -> Text
pattern ArtifactStoreType_S3 :: ArtifactStoreType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ArtifactStoreType.ArtifactStoreType


module Network.AWS.CodePipeline.Types.BlockerType
newtype BlockerType
BlockerType' :: Text -> BlockerType
[fromBlockerType] :: BlockerType -> Text
pattern BlockerType_Schedule :: BlockerType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance GHC.Read.Read Network.AWS.CodePipeline.Types.BlockerType.BlockerType
instance GHC.Show.Show Network.AWS.CodePipeline.Types.BlockerType.BlockerType


module Network.AWS.CodePipeline.Types.BlockerDeclaration

-- | Reserved for future use.
--   
--   <i>See:</i> <a>newBlockerDeclaration</a> smart constructor.
data BlockerDeclaration
BlockerDeclaration' :: Text -> BlockerType -> BlockerDeclaration

-- | Reserved for future use.
[$sel:name:BlockerDeclaration'] :: BlockerDeclaration -> Text

-- | Reserved for future use.
[$sel:type':BlockerDeclaration'] :: BlockerDeclaration -> BlockerType

-- | Create a value of <a>BlockerDeclaration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BlockerDeclaration'</a>, <a>blockerDeclaration_name</a> -
--   Reserved for future use.
--   
--   <a>$sel:type':BlockerDeclaration'</a>, <a>blockerDeclaration_type</a>
--   - Reserved for future use.
newBlockerDeclaration :: Text -> BlockerType -> BlockerDeclaration

-- | Reserved for future use.
blockerDeclaration_name :: Lens' BlockerDeclaration Text

-- | Reserved for future use.
blockerDeclaration_type :: Lens' BlockerDeclaration BlockerType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.BlockerDeclaration.BlockerDeclaration
instance GHC.Show.Show Network.AWS.CodePipeline.Types.BlockerDeclaration.BlockerDeclaration
instance GHC.Read.Read Network.AWS.CodePipeline.Types.BlockerDeclaration.BlockerDeclaration
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.BlockerDeclaration.BlockerDeclaration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.BlockerDeclaration.BlockerDeclaration
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.BlockerDeclaration.BlockerDeclaration
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.BlockerDeclaration.BlockerDeclaration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.BlockerDeclaration.BlockerDeclaration


module Network.AWS.CodePipeline.Types.CurrentRevision

-- | Represents information about a current revision.
--   
--   <i>See:</i> <a>newCurrentRevision</a> smart constructor.
data CurrentRevision
CurrentRevision' :: Maybe Text -> Maybe POSIX -> Text -> Text -> CurrentRevision

-- | The summary of the most recent revision of the artifact.
[$sel:revisionSummary:CurrentRevision'] :: CurrentRevision -> Maybe Text

-- | The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
[$sel:created:CurrentRevision'] :: CurrentRevision -> Maybe POSIX

-- | The revision ID of the current version of an artifact.
[$sel:revision:CurrentRevision'] :: CurrentRevision -> Text

-- | The change identifier for the current revision.
[$sel:changeIdentifier:CurrentRevision'] :: CurrentRevision -> Text

-- | Create a value of <a>CurrentRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionSummary:CurrentRevision'</a>,
--   <a>currentRevision_revisionSummary</a> - The summary of the most
--   recent revision of the artifact.
--   
--   <a>$sel:created:CurrentRevision'</a>, <a>currentRevision_created</a> -
--   The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
--   
--   <a>$sel:revision:CurrentRevision'</a>, <a>currentRevision_revision</a>
--   - The revision ID of the current version of an artifact.
--   
--   <a>$sel:changeIdentifier:CurrentRevision'</a>,
--   <a>currentRevision_changeIdentifier</a> - The change identifier for
--   the current revision.
newCurrentRevision :: Text -> Text -> CurrentRevision

-- | The summary of the most recent revision of the artifact.
currentRevision_revisionSummary :: Lens' CurrentRevision (Maybe Text)

-- | The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
currentRevision_created :: Lens' CurrentRevision (Maybe UTCTime)

-- | The revision ID of the current version of an artifact.
currentRevision_revision :: Lens' CurrentRevision Text

-- | The change identifier for the current revision.
currentRevision_changeIdentifier :: Lens' CurrentRevision Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.CurrentRevision.CurrentRevision
instance GHC.Show.Show Network.AWS.CodePipeline.Types.CurrentRevision.CurrentRevision
instance GHC.Read.Read Network.AWS.CodePipeline.Types.CurrentRevision.CurrentRevision
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.CurrentRevision.CurrentRevision
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.CurrentRevision.CurrentRevision
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.CurrentRevision.CurrentRevision
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.CurrentRevision.CurrentRevision


module Network.AWS.CodePipeline.Types.EncryptionKeyType
newtype EncryptionKeyType
EncryptionKeyType' :: Text -> EncryptionKeyType
[fromEncryptionKeyType] :: EncryptionKeyType -> Text
pattern EncryptionKeyType_KMS :: EncryptionKeyType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance GHC.Read.Read Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType
instance GHC.Show.Show Network.AWS.CodePipeline.Types.EncryptionKeyType.EncryptionKeyType


module Network.AWS.CodePipeline.Types.EncryptionKey

-- | Represents information about the key used to encrypt data in the
--   artifact store, such as an AWS Key Management Service (AWS KMS) key.
--   
--   <i>See:</i> <a>newEncryptionKey</a> smart constructor.
data EncryptionKey
EncryptionKey' :: Text -> EncryptionKeyType -> EncryptionKey

-- | The ID used to identify the key. For an AWS KMS key, you can use the
--   key ID, the key ARN, or the alias ARN.
--   
--   Aliases are recognized only in the account that created the customer
--   master key (CMK). For cross-account actions, you can only use the key
--   ID or key ARN to identify the key.
[$sel:id:EncryptionKey'] :: EncryptionKey -> Text

-- | The type of encryption key, such as an AWS Key Management Service (AWS
--   KMS) key. When creating or updating a pipeline, the value must be set
--   to 'KMS'.
[$sel:type':EncryptionKey'] :: EncryptionKey -> EncryptionKeyType

-- | Create a value of <a>EncryptionKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:EncryptionKey'</a>, <a>encryptionKey_id</a> - The ID used
--   to identify the key. For an AWS KMS key, you can use the key ID, the
--   key ARN, or the alias ARN.
--   
--   Aliases are recognized only in the account that created the customer
--   master key (CMK). For cross-account actions, you can only use the key
--   ID or key ARN to identify the key.
--   
--   <a>$sel:type':EncryptionKey'</a>, <a>encryptionKey_type</a> - The type
--   of encryption key, such as an AWS Key Management Service (AWS KMS)
--   key. When creating or updating a pipeline, the value must be set to
--   'KMS'.
newEncryptionKey :: Text -> EncryptionKeyType -> EncryptionKey

-- | The ID used to identify the key. For an AWS KMS key, you can use the
--   key ID, the key ARN, or the alias ARN.
--   
--   Aliases are recognized only in the account that created the customer
--   master key (CMK). For cross-account actions, you can only use the key
--   ID or key ARN to identify the key.
encryptionKey_id :: Lens' EncryptionKey Text

-- | The type of encryption key, such as an AWS Key Management Service (AWS
--   KMS) key. When creating or updating a pipeline, the value must be set
--   to 'KMS'.
encryptionKey_type :: Lens' EncryptionKey EncryptionKeyType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.EncryptionKey.EncryptionKey
instance GHC.Show.Show Network.AWS.CodePipeline.Types.EncryptionKey.EncryptionKey
instance GHC.Read.Read Network.AWS.CodePipeline.Types.EncryptionKey.EncryptionKey
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.EncryptionKey.EncryptionKey
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.EncryptionKey.EncryptionKey
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.EncryptionKey.EncryptionKey
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.EncryptionKey.EncryptionKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.EncryptionKey.EncryptionKey


module Network.AWS.CodePipeline.Types.ArtifactStore

-- | The S3 bucket where artifacts for the pipeline are stored.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
--   
--   <i>See:</i> <a>newArtifactStore</a> smart constructor.
data ArtifactStore
ArtifactStore' :: Maybe EncryptionKey -> ArtifactStoreType -> Text -> ArtifactStore

-- | The encryption key used to encrypt the data in the artifact store,
--   such as an AWS Key Management Service (AWS KMS) key. If this is
--   undefined, the default key for Amazon S3 is used.
[$sel:encryptionKey:ArtifactStore'] :: ArtifactStore -> Maybe EncryptionKey

-- | The type of the artifact store, such as S3.
[$sel:type':ArtifactStore'] :: ArtifactStore -> ArtifactStoreType

-- | The S3 bucket used for storing the artifacts for a pipeline. You can
--   specify the name of an S3 bucket but not a folder in the bucket. A
--   folder to contain the pipeline artifacts is created for you based on
--   the name of the pipeline. You can use any S3 bucket in the same AWS
--   Region as the pipeline to store your pipeline artifacts.
[$sel:location:ArtifactStore'] :: ArtifactStore -> Text

-- | Create a value of <a>ArtifactStore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKey:ArtifactStore'</a>,
--   <a>artifactStore_encryptionKey</a> - The encryption key used to
--   encrypt the data in the artifact store, such as an AWS Key Management
--   Service (AWS KMS) key. If this is undefined, the default key for
--   Amazon S3 is used.
--   
--   <a>$sel:type':ArtifactStore'</a>, <a>artifactStore_type</a> - The type
--   of the artifact store, such as S3.
--   
--   <a>$sel:location:ArtifactStore'</a>, <a>artifactStore_location</a> -
--   The S3 bucket used for storing the artifacts for a pipeline. You can
--   specify the name of an S3 bucket but not a folder in the bucket. A
--   folder to contain the pipeline artifacts is created for you based on
--   the name of the pipeline. You can use any S3 bucket in the same AWS
--   Region as the pipeline to store your pipeline artifacts.
newArtifactStore :: ArtifactStoreType -> Text -> ArtifactStore

-- | The encryption key used to encrypt the data in the artifact store,
--   such as an AWS Key Management Service (AWS KMS) key. If this is
--   undefined, the default key for Amazon S3 is used.
artifactStore_encryptionKey :: Lens' ArtifactStore (Maybe EncryptionKey)

-- | The type of the artifact store, such as S3.
artifactStore_type :: Lens' ArtifactStore ArtifactStoreType

-- | The S3 bucket used for storing the artifacts for a pipeline. You can
--   specify the name of an S3 bucket but not a folder in the bucket. A
--   folder to contain the pipeline artifacts is created for you based on
--   the name of the pipeline. You can use any S3 bucket in the same AWS
--   Region as the pipeline to store your pipeline artifacts.
artifactStore_location :: Lens' ArtifactStore Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ArtifactStore.ArtifactStore
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ArtifactStore.ArtifactStore
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ArtifactStore.ArtifactStore
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ArtifactStore.ArtifactStore
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ArtifactStore.ArtifactStore
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ArtifactStore.ArtifactStore
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ArtifactStore.ArtifactStore
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ArtifactStore.ArtifactStore


module Network.AWS.CodePipeline.Types.ErrorDetails

-- | Represents information about an error in AWS CodePipeline.
--   
--   <i>See:</i> <a>newErrorDetails</a> smart constructor.
data ErrorDetails
ErrorDetails' :: Maybe Text -> Maybe Text -> ErrorDetails

-- | The system ID or number code of the error.
[$sel:code:ErrorDetails'] :: ErrorDetails -> Maybe Text

-- | The text of the error message.
[$sel:message:ErrorDetails'] :: ErrorDetails -> Maybe Text

-- | Create a value of <a>ErrorDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:ErrorDetails'</a>, <a>errorDetails_code</a> - The system
--   ID or number code of the error.
--   
--   <a>$sel:message:ErrorDetails'</a>, <a>errorDetails_message</a> - The
--   text of the error message.
newErrorDetails :: ErrorDetails

-- | The system ID or number code of the error.
errorDetails_code :: Lens' ErrorDetails (Maybe Text)

-- | The text of the error message.
errorDetails_message :: Lens' ErrorDetails (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ErrorDetails.ErrorDetails
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ErrorDetails.ErrorDetails
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ErrorDetails.ErrorDetails
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ErrorDetails.ErrorDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ErrorDetails.ErrorDetails
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ErrorDetails.ErrorDetails
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ErrorDetails.ErrorDetails


module Network.AWS.CodePipeline.Types.ActionExecution

-- | Represents information about the run of an action.
--   
--   <i>See:</i> <a>newActionExecution</a> smart constructor.
data ActionExecution
ActionExecution' :: Maybe Text -> Maybe Text -> Maybe ActionExecutionStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ErrorDetails -> Maybe Natural -> Maybe Text -> ActionExecution

-- | The ARN of the user who last changed the pipeline.
[$sel:lastUpdatedBy:ActionExecution'] :: ActionExecution -> Maybe Text

-- | A summary of the run of the action.
[$sel:summary:ActionExecution'] :: ActionExecution -> Maybe Text

-- | The status of the action, or for a completed action, the last status
--   of the action.
[$sel:status:ActionExecution'] :: ActionExecution -> Maybe ActionExecutionStatus

-- | The last status change of the action.
[$sel:lastStatusChange:ActionExecution'] :: ActionExecution -> Maybe POSIX

-- | The system-generated token used to identify a unique approval request.
--   The token for each open approval request can be obtained using the
--   <tt>GetPipelineState</tt> command. It is used to validate that the
--   approval request corresponding to this token is still valid.
[$sel:token:ActionExecution'] :: ActionExecution -> Maybe Text

-- | The URL of a resource external to AWS that is used when running the
--   action (for example, an external repository URL).
[$sel:externalExecutionUrl:ActionExecution'] :: ActionExecution -> Maybe Text

-- | The external ID of the run of the action.
[$sel:externalExecutionId:ActionExecution'] :: ActionExecution -> Maybe Text

-- | The details of an error returned by a URL external to AWS.
[$sel:errorDetails:ActionExecution'] :: ActionExecution -> Maybe ErrorDetails

-- | A percentage of completeness of the action as it runs.
[$sel:percentComplete:ActionExecution'] :: ActionExecution -> Maybe Natural

-- | ID of the workflow action execution in the current stage. Use the
--   GetPipelineState action to retrieve the current action execution
--   details of the current stage.
--   
--   For older executions, this field might be empty. The action execution
--   ID is available for executions run on or after March 2020.
[$sel:actionExecutionId:ActionExecution'] :: ActionExecution -> Maybe Text

-- | Create a value of <a>ActionExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedBy:ActionExecution'</a>,
--   <a>actionExecution_lastUpdatedBy</a> - The ARN of the user who last
--   changed the pipeline.
--   
--   <a>$sel:summary:ActionExecution'</a>, <a>actionExecution_summary</a> -
--   A summary of the run of the action.
--   
--   <a>$sel:status:ActionExecution'</a>, <a>actionExecution_status</a> -
--   The status of the action, or for a completed action, the last status
--   of the action.
--   
--   <a>$sel:lastStatusChange:ActionExecution'</a>,
--   <a>actionExecution_lastStatusChange</a> - The last status change of
--   the action.
--   
--   <a>$sel:token:ActionExecution'</a>, <a>actionExecution_token</a> - The
--   system-generated token used to identify a unique approval request. The
--   token for each open approval request can be obtained using the
--   <tt>GetPipelineState</tt> command. It is used to validate that the
--   approval request corresponding to this token is still valid.
--   
--   <a>$sel:externalExecutionUrl:ActionExecution'</a>,
--   <a>actionExecution_externalExecutionUrl</a> - The URL of a resource
--   external to AWS that is used when running the action (for example, an
--   external repository URL).
--   
--   <a>$sel:externalExecutionId:ActionExecution'</a>,
--   <a>actionExecution_externalExecutionId</a> - The external ID of the
--   run of the action.
--   
--   <a>$sel:errorDetails:ActionExecution'</a>,
--   <a>actionExecution_errorDetails</a> - The details of an error returned
--   by a URL external to AWS.
--   
--   <a>$sel:percentComplete:ActionExecution'</a>,
--   <a>actionExecution_percentComplete</a> - A percentage of completeness
--   of the action as it runs.
--   
--   <a>$sel:actionExecutionId:ActionExecution'</a>,
--   <a>actionExecution_actionExecutionId</a> - ID of the workflow action
--   execution in the current stage. Use the GetPipelineState action to
--   retrieve the current action execution details of the current stage.
--   
--   For older executions, this field might be empty. The action execution
--   ID is available for executions run on or after March 2020.
newActionExecution :: ActionExecution

-- | The ARN of the user who last changed the pipeline.
actionExecution_lastUpdatedBy :: Lens' ActionExecution (Maybe Text)

-- | A summary of the run of the action.
actionExecution_summary :: Lens' ActionExecution (Maybe Text)

-- | The status of the action, or for a completed action, the last status
--   of the action.
actionExecution_status :: Lens' ActionExecution (Maybe ActionExecutionStatus)

-- | The last status change of the action.
actionExecution_lastStatusChange :: Lens' ActionExecution (Maybe UTCTime)

-- | The system-generated token used to identify a unique approval request.
--   The token for each open approval request can be obtained using the
--   <tt>GetPipelineState</tt> command. It is used to validate that the
--   approval request corresponding to this token is still valid.
actionExecution_token :: Lens' ActionExecution (Maybe Text)

-- | The URL of a resource external to AWS that is used when running the
--   action (for example, an external repository URL).
actionExecution_externalExecutionUrl :: Lens' ActionExecution (Maybe Text)

-- | The external ID of the run of the action.
actionExecution_externalExecutionId :: Lens' ActionExecution (Maybe Text)

-- | The details of an error returned by a URL external to AWS.
actionExecution_errorDetails :: Lens' ActionExecution (Maybe ErrorDetails)

-- | A percentage of completeness of the action as it runs.
actionExecution_percentComplete :: Lens' ActionExecution (Maybe Natural)

-- | ID of the workflow action execution in the current stage. Use the
--   GetPipelineState action to retrieve the current action execution
--   details of the current stage.
--   
--   For older executions, this field might be empty. The action execution
--   ID is available for executions run on or after March 2020.
actionExecution_actionExecutionId :: Lens' ActionExecution (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionExecution.ActionExecution
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionExecution.ActionExecution
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionExecution.ActionExecution
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionExecution.ActionExecution
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionExecution.ActionExecution
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionExecution.ActionExecution
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionExecution.ActionExecution


module Network.AWS.CodePipeline.Types.ActionState

-- | Represents information about the state of an action.
--   
--   <i>See:</i> <a>newActionState</a> smart constructor.
data ActionState
ActionState' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ActionRevision -> Maybe ActionExecution -> ActionState

-- | A URL link for more information about the revision, such as a commit
--   details page.
[$sel:revisionUrl:ActionState'] :: ActionState -> Maybe Text

-- | A URL link for more information about the state of the action, such as
--   a deployment group details page.
[$sel:entityUrl:ActionState'] :: ActionState -> Maybe Text

-- | The name of the action.
[$sel:actionName:ActionState'] :: ActionState -> Maybe Text

-- | Represents information about the version (or revision) of an action.
[$sel:currentRevision:ActionState'] :: ActionState -> Maybe ActionRevision

-- | Represents information about the run of an action.
[$sel:latestExecution:ActionState'] :: ActionState -> Maybe ActionExecution

-- | Create a value of <a>ActionState</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionUrl:ActionState'</a>, <a>actionState_revisionUrl</a> -
--   A URL link for more information about the revision, such as a commit
--   details page.
--   
--   <a>$sel:entityUrl:ActionState'</a>, <a>actionState_entityUrl</a> - A
--   URL link for more information about the state of the action, such as a
--   deployment group details page.
--   
--   <a>$sel:actionName:ActionState'</a>, <a>actionState_actionName</a> -
--   The name of the action.
--   
--   <a>$sel:currentRevision:ActionState'</a>,
--   <a>actionState_currentRevision</a> - Represents information about the
--   version (or revision) of an action.
--   
--   <a>$sel:latestExecution:ActionState'</a>,
--   <a>actionState_latestExecution</a> - Represents information about the
--   run of an action.
newActionState :: ActionState

-- | A URL link for more information about the revision, such as a commit
--   details page.
actionState_revisionUrl :: Lens' ActionState (Maybe Text)

-- | A URL link for more information about the state of the action, such as
--   a deployment group details page.
actionState_entityUrl :: Lens' ActionState (Maybe Text)

-- | The name of the action.
actionState_actionName :: Lens' ActionState (Maybe Text)

-- | Represents information about the version (or revision) of an action.
actionState_currentRevision :: Lens' ActionState (Maybe ActionRevision)

-- | Represents information about the run of an action.
actionState_latestExecution :: Lens' ActionState (Maybe ActionExecution)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionState.ActionState
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionState.ActionState
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionState.ActionState
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionState.ActionState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionState.ActionState
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionState.ActionState
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionState.ActionState


module Network.AWS.CodePipeline.Types.ExecutionDetails

-- | The details of the actions taken and results produced on an artifact
--   as it passes through stages in the pipeline.
--   
--   <i>See:</i> <a>newExecutionDetails</a> smart constructor.
data ExecutionDetails
ExecutionDetails' :: Maybe Text -> Maybe Text -> Maybe Natural -> ExecutionDetails

-- | The summary of the current status of the actions.
[$sel:summary:ExecutionDetails'] :: ExecutionDetails -> Maybe Text

-- | The system-generated unique ID of this action used to identify this
--   job worker in any external systems, such as AWS CodeDeploy.
[$sel:externalExecutionId:ExecutionDetails'] :: ExecutionDetails -> Maybe Text

-- | The percentage of work completed on the action, represented on a scale
--   of 0 to 100 percent.
[$sel:percentComplete:ExecutionDetails'] :: ExecutionDetails -> Maybe Natural

-- | Create a value of <a>ExecutionDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:ExecutionDetails'</a>, <a>executionDetails_summary</a>
--   - The summary of the current status of the actions.
--   
--   <a>$sel:externalExecutionId:ExecutionDetails'</a>,
--   <a>executionDetails_externalExecutionId</a> - The system-generated
--   unique ID of this action used to identify this job worker in any
--   external systems, such as AWS CodeDeploy.
--   
--   <a>$sel:percentComplete:ExecutionDetails'</a>,
--   <a>executionDetails_percentComplete</a> - The percentage of work
--   completed on the action, represented on a scale of 0 to 100 percent.
newExecutionDetails :: ExecutionDetails

-- | The summary of the current status of the actions.
executionDetails_summary :: Lens' ExecutionDetails (Maybe Text)

-- | The system-generated unique ID of this action used to identify this
--   job worker in any external systems, such as AWS CodeDeploy.
executionDetails_externalExecutionId :: Lens' ExecutionDetails (Maybe Text)

-- | The percentage of work completed on the action, represented on a scale
--   of 0 to 100 percent.
executionDetails_percentComplete :: Lens' ExecutionDetails (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ExecutionDetails.ExecutionDetails
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ExecutionDetails.ExecutionDetails
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ExecutionDetails.ExecutionDetails
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ExecutionDetails.ExecutionDetails
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ExecutionDetails.ExecutionDetails
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ExecutionDetails.ExecutionDetails
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ExecutionDetails.ExecutionDetails


module Network.AWS.CodePipeline.Types.ExecutorType
newtype ExecutorType
ExecutorType' :: Text -> ExecutorType
[fromExecutorType] :: ExecutorType -> Text
pattern ExecutorType_JobWorker :: ExecutorType
pattern ExecutorType_Lambda :: ExecutorType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ExecutorType.ExecutorType


module Network.AWS.CodePipeline.Types.FailureType
newtype FailureType
FailureType' :: Text -> FailureType
[fromFailureType] :: FailureType -> Text
pattern FailureType_ConfigurationError :: FailureType
pattern FailureType_JobFailed :: FailureType
pattern FailureType_PermissionError :: FailureType
pattern FailureType_RevisionOutOfSync :: FailureType
pattern FailureType_RevisionUnavailable :: FailureType
pattern FailureType_SystemUnavailable :: FailureType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.FailureType.FailureType
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.FailureType.FailureType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.FailureType.FailureType
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.FailureType.FailureType
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.FailureType.FailureType
instance GHC.Read.Read Network.AWS.CodePipeline.Types.FailureType.FailureType
instance GHC.Show.Show Network.AWS.CodePipeline.Types.FailureType.FailureType


module Network.AWS.CodePipeline.Types.FailureDetails

-- | Represents information about failure details.
--   
--   <i>See:</i> <a>newFailureDetails</a> smart constructor.
data FailureDetails
FailureDetails' :: Maybe Text -> FailureType -> Text -> FailureDetails

-- | The external ID of the run of the action that failed.
[$sel:externalExecutionId:FailureDetails'] :: FailureDetails -> Maybe Text

-- | The type of the failure.
[$sel:type':FailureDetails'] :: FailureDetails -> FailureType

-- | The message about the failure.
[$sel:message:FailureDetails'] :: FailureDetails -> Text

-- | Create a value of <a>FailureDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalExecutionId:FailureDetails'</a>,
--   <a>failureDetails_externalExecutionId</a> - The external ID of the run
--   of the action that failed.
--   
--   <a>$sel:type':FailureDetails'</a>, <a>failureDetails_type</a> - The
--   type of the failure.
--   
--   <a>$sel:message:FailureDetails'</a>, <a>failureDetails_message</a> -
--   The message about the failure.
newFailureDetails :: FailureType -> Text -> FailureDetails

-- | The external ID of the run of the action that failed.
failureDetails_externalExecutionId :: Lens' FailureDetails (Maybe Text)

-- | The type of the failure.
failureDetails_type :: Lens' FailureDetails FailureType

-- | The message about the failure.
failureDetails_message :: Lens' FailureDetails Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.FailureDetails.FailureDetails
instance GHC.Show.Show Network.AWS.CodePipeline.Types.FailureDetails.FailureDetails
instance GHC.Read.Read Network.AWS.CodePipeline.Types.FailureDetails.FailureDetails
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.FailureDetails.FailureDetails
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.FailureDetails.FailureDetails
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.FailureDetails.FailureDetails
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.FailureDetails.FailureDetails


module Network.AWS.CodePipeline.Types.InputArtifact

-- | Represents information about an artifact to be worked on, such as a
--   test or build artifact.
--   
--   <i>See:</i> <a>newInputArtifact</a> smart constructor.
data InputArtifact
InputArtifact' :: Text -> InputArtifact

-- | The name of the artifact to be worked on (for example, "My App").
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
[$sel:name:InputArtifact'] :: InputArtifact -> Text

-- | Create a value of <a>InputArtifact</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InputArtifact'</a>, <a>inputArtifact_name</a> - The name
--   of the artifact to be worked on (for example, "My App").
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
newInputArtifact :: Text -> InputArtifact

-- | The name of the artifact to be worked on (for example, "My App").
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
inputArtifact_name :: Lens' InputArtifact Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.InputArtifact.InputArtifact
instance GHC.Show.Show Network.AWS.CodePipeline.Types.InputArtifact.InputArtifact
instance GHC.Read.Read Network.AWS.CodePipeline.Types.InputArtifact.InputArtifact
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.InputArtifact.InputArtifact
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.InputArtifact.InputArtifact
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.InputArtifact.InputArtifact
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.InputArtifact.InputArtifact
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.InputArtifact.InputArtifact


module Network.AWS.CodePipeline.Types.JobStatus
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_Created :: JobStatus
pattern JobStatus_Dispatched :: JobStatus
pattern JobStatus_Failed :: JobStatus
pattern JobStatus_InProgress :: JobStatus
pattern JobStatus_Queued :: JobStatus
pattern JobStatus_Succeeded :: JobStatus
pattern JobStatus_TimedOut :: JobStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance GHC.Read.Read Network.AWS.CodePipeline.Types.JobStatus.JobStatus
instance GHC.Show.Show Network.AWS.CodePipeline.Types.JobStatus.JobStatus


module Network.AWS.CodePipeline.Types.JobWorkerExecutorConfiguration

-- | Details about the polling configuration for the <tt>JobWorker</tt>
--   action engine, or executor.
--   
--   <i>See:</i> <a>newJobWorkerExecutorConfiguration</a> smart
--   constructor.
data JobWorkerExecutorConfiguration
JobWorkerExecutorConfiguration' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> JobWorkerExecutorConfiguration

-- | The accounts in which the job worker is configured and might poll for
--   jobs as part of the action execution.
[$sel:pollingAccounts:JobWorkerExecutorConfiguration'] :: JobWorkerExecutorConfiguration -> Maybe (NonEmpty Text)

-- | The service Principals in which the job worker is configured and might
--   poll for jobs as part of the action execution.
[$sel:pollingServicePrincipals:JobWorkerExecutorConfiguration'] :: JobWorkerExecutorConfiguration -> Maybe (NonEmpty Text)

-- | Create a value of <a>JobWorkerExecutorConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pollingAccounts:JobWorkerExecutorConfiguration'</a>,
--   <a>jobWorkerExecutorConfiguration_pollingAccounts</a> - The accounts
--   in which the job worker is configured and might poll for jobs as part
--   of the action execution.
--   
--   <a>$sel:pollingServicePrincipals:JobWorkerExecutorConfiguration'</a>,
--   <a>jobWorkerExecutorConfiguration_pollingServicePrincipals</a> - The
--   service Principals in which the job worker is configured and might
--   poll for jobs as part of the action execution.
newJobWorkerExecutorConfiguration :: JobWorkerExecutorConfiguration

-- | The accounts in which the job worker is configured and might poll for
--   jobs as part of the action execution.
jobWorkerExecutorConfiguration_pollingAccounts :: Lens' JobWorkerExecutorConfiguration (Maybe (NonEmpty Text))

-- | The service Principals in which the job worker is configured and might
--   poll for jobs as part of the action execution.
jobWorkerExecutorConfiguration_pollingServicePrincipals :: Lens' JobWorkerExecutorConfiguration (Maybe (NonEmpty Text))
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.JobWorkerExecutorConfiguration.JobWorkerExecutorConfiguration
instance GHC.Show.Show Network.AWS.CodePipeline.Types.JobWorkerExecutorConfiguration.JobWorkerExecutorConfiguration
instance GHC.Read.Read Network.AWS.CodePipeline.Types.JobWorkerExecutorConfiguration.JobWorkerExecutorConfiguration
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.JobWorkerExecutorConfiguration.JobWorkerExecutorConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.JobWorkerExecutorConfiguration.JobWorkerExecutorConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.JobWorkerExecutorConfiguration.JobWorkerExecutorConfiguration
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.JobWorkerExecutorConfiguration.JobWorkerExecutorConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.JobWorkerExecutorConfiguration.JobWorkerExecutorConfiguration


module Network.AWS.CodePipeline.Types.LambdaExecutorConfiguration

-- | Details about the configuration for the <tt>Lambda</tt> action engine,
--   or executor.
--   
--   <i>See:</i> <a>newLambdaExecutorConfiguration</a> smart constructor.
data LambdaExecutorConfiguration
LambdaExecutorConfiguration' :: Text -> LambdaExecutorConfiguration

-- | The ARN of the Lambda function used by the action engine.
[$sel:lambdaFunctionArn:LambdaExecutorConfiguration'] :: LambdaExecutorConfiguration -> Text

-- | Create a value of <a>LambdaExecutorConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaFunctionArn:LambdaExecutorConfiguration'</a>,
--   <a>lambdaExecutorConfiguration_lambdaFunctionArn</a> - The ARN of the
--   Lambda function used by the action engine.
newLambdaExecutorConfiguration :: Text -> LambdaExecutorConfiguration

-- | The ARN of the Lambda function used by the action engine.
lambdaExecutorConfiguration_lambdaFunctionArn :: Lens' LambdaExecutorConfiguration Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.LambdaExecutorConfiguration.LambdaExecutorConfiguration
instance GHC.Show.Show Network.AWS.CodePipeline.Types.LambdaExecutorConfiguration.LambdaExecutorConfiguration
instance GHC.Read.Read Network.AWS.CodePipeline.Types.LambdaExecutorConfiguration.LambdaExecutorConfiguration
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.LambdaExecutorConfiguration.LambdaExecutorConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.LambdaExecutorConfiguration.LambdaExecutorConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.LambdaExecutorConfiguration.LambdaExecutorConfiguration
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.LambdaExecutorConfiguration.LambdaExecutorConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.LambdaExecutorConfiguration.LambdaExecutorConfiguration


module Network.AWS.CodePipeline.Types.ExecutorConfiguration

-- | The action engine, or executor, related to the supported integration
--   model used to create and update the action type. The available
--   executor types are <tt>Lambda</tt> and <tt>JobWorker</tt>.
--   
--   <i>See:</i> <a>newExecutorConfiguration</a> smart constructor.
data ExecutorConfiguration
ExecutorConfiguration' :: Maybe LambdaExecutorConfiguration -> Maybe JobWorkerExecutorConfiguration -> ExecutorConfiguration

-- | Details about the <tt>Lambda</tt> executor of the action type.
[$sel:lambdaExecutorConfiguration:ExecutorConfiguration'] :: ExecutorConfiguration -> Maybe LambdaExecutorConfiguration

-- | Details about the <tt>JobWorker</tt> executor of the action type.
[$sel:jobWorkerExecutorConfiguration:ExecutorConfiguration'] :: ExecutorConfiguration -> Maybe JobWorkerExecutorConfiguration

-- | Create a value of <a>ExecutorConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaExecutorConfiguration:ExecutorConfiguration'</a>,
--   <a>executorConfiguration_lambdaExecutorConfiguration</a> - Details
--   about the <tt>Lambda</tt> executor of the action type.
--   
--   <a>$sel:jobWorkerExecutorConfiguration:ExecutorConfiguration'</a>,
--   <a>executorConfiguration_jobWorkerExecutorConfiguration</a> - Details
--   about the <tt>JobWorker</tt> executor of the action type.
newExecutorConfiguration :: ExecutorConfiguration

-- | Details about the <tt>Lambda</tt> executor of the action type.
executorConfiguration_lambdaExecutorConfiguration :: Lens' ExecutorConfiguration (Maybe LambdaExecutorConfiguration)

-- | Details about the <tt>JobWorker</tt> executor of the action type.
executorConfiguration_jobWorkerExecutorConfiguration :: Lens' ExecutorConfiguration (Maybe JobWorkerExecutorConfiguration)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ExecutorConfiguration.ExecutorConfiguration
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ExecutorConfiguration.ExecutorConfiguration
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ExecutorConfiguration.ExecutorConfiguration
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ExecutorConfiguration.ExecutorConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ExecutorConfiguration.ExecutorConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ExecutorConfiguration.ExecutorConfiguration
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ExecutorConfiguration.ExecutorConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ExecutorConfiguration.ExecutorConfiguration


module Network.AWS.CodePipeline.Types.ActionTypeExecutor

-- | The action engine, or executor, for an action type created for a
--   provider, where the action is to be used by customers of the provider.
--   The action engine is associated with the model used to create and
--   update the action, such as the Lambda integration model.
--   
--   <i>See:</i> <a>newActionTypeExecutor</a> smart constructor.
data ActionTypeExecutor
ActionTypeExecutor' :: Maybe Natural -> Maybe Text -> ExecutorConfiguration -> ExecutorType -> ActionTypeExecutor

-- | The timeout in seconds for the job. An action execution can have
--   multiple jobs. This is the timeout for a single job, not the entire
--   action execution.
[$sel:jobTimeout:ActionTypeExecutor'] :: ActionTypeExecutor -> Maybe Natural

-- | The policy statement that specifies the permissions in the
--   CodePipeline customer’s account that are needed to successfully run an
--   action.
--   
--   To grant permission to another account, specify the account ID as the
--   Principal, a domain-style identifier defined by the service, for
--   example <tt>codepipeline.amazonaws.com</tt>.
--   
--   The size of the passed JSON policy document cannot exceed 2048
--   characters.
[$sel:policyStatementsTemplate:ActionTypeExecutor'] :: ActionTypeExecutor -> Maybe Text

-- | The action configuration properties for the action type. These
--   properties are specified in the action definition when the action type
--   is created.
[$sel:configuration:ActionTypeExecutor'] :: ActionTypeExecutor -> ExecutorConfiguration

-- | The integration model used to create and update the action type,
--   <tt>Lambda</tt> or <tt>JobWorker</tt>.
[$sel:type':ActionTypeExecutor'] :: ActionTypeExecutor -> ExecutorType

-- | Create a value of <a>ActionTypeExecutor</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobTimeout:ActionTypeExecutor'</a>,
--   <a>actionTypeExecutor_jobTimeout</a> - The timeout in seconds for the
--   job. An action execution can have multiple jobs. This is the timeout
--   for a single job, not the entire action execution.
--   
--   <a>$sel:policyStatementsTemplate:ActionTypeExecutor'</a>,
--   <a>actionTypeExecutor_policyStatementsTemplate</a> - The policy
--   statement that specifies the permissions in the CodePipeline
--   customer’s account that are needed to successfully run an action.
--   
--   To grant permission to another account, specify the account ID as the
--   Principal, a domain-style identifier defined by the service, for
--   example <tt>codepipeline.amazonaws.com</tt>.
--   
--   The size of the passed JSON policy document cannot exceed 2048
--   characters.
--   
--   <a>$sel:configuration:ActionTypeExecutor'</a>,
--   <a>actionTypeExecutor_configuration</a> - The action configuration
--   properties for the action type. These properties are specified in the
--   action definition when the action type is created.
--   
--   <a>$sel:type':ActionTypeExecutor'</a>, <a>actionTypeExecutor_type</a>
--   - The integration model used to create and update the action type,
--   <tt>Lambda</tt> or <tt>JobWorker</tt>.
newActionTypeExecutor :: ExecutorConfiguration -> ExecutorType -> ActionTypeExecutor

-- | The timeout in seconds for the job. An action execution can have
--   multiple jobs. This is the timeout for a single job, not the entire
--   action execution.
actionTypeExecutor_jobTimeout :: Lens' ActionTypeExecutor (Maybe Natural)

-- | The policy statement that specifies the permissions in the
--   CodePipeline customer’s account that are needed to successfully run an
--   action.
--   
--   To grant permission to another account, specify the account ID as the
--   Principal, a domain-style identifier defined by the service, for
--   example <tt>codepipeline.amazonaws.com</tt>.
--   
--   The size of the passed JSON policy document cannot exceed 2048
--   characters.
actionTypeExecutor_policyStatementsTemplate :: Lens' ActionTypeExecutor (Maybe Text)

-- | The action configuration properties for the action type. These
--   properties are specified in the action definition when the action type
--   is created.
actionTypeExecutor_configuration :: Lens' ActionTypeExecutor ExecutorConfiguration

-- | The integration model used to create and update the action type,
--   <tt>Lambda</tt> or <tt>JobWorker</tt>.
actionTypeExecutor_type :: Lens' ActionTypeExecutor ExecutorType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionTypeExecutor.ActionTypeExecutor
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionTypeExecutor.ActionTypeExecutor
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionTypeExecutor.ActionTypeExecutor
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionTypeExecutor.ActionTypeExecutor
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionTypeExecutor.ActionTypeExecutor
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionTypeExecutor.ActionTypeExecutor
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionTypeExecutor.ActionTypeExecutor
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionTypeExecutor.ActionTypeExecutor


module Network.AWS.CodePipeline.Types.ActionTypeDeclaration

-- | The parameters for the action type definition that are provided when
--   the action type is created or updated.
--   
--   <i>See:</i> <a>newActionTypeDeclaration</a> smart constructor.
data ActionTypeDeclaration
ActionTypeDeclaration' :: Maybe ActionTypeUrls -> Maybe ActionTypePermissions -> Maybe Text -> Maybe [ActionTypeProperty] -> ActionTypeExecutor -> ActionTypeIdentifier -> ActionTypeArtifactDetails -> ActionTypeArtifactDetails -> ActionTypeDeclaration

-- | The links associated with the action type to be updated.
[$sel:urls:ActionTypeDeclaration'] :: ActionTypeDeclaration -> Maybe ActionTypeUrls

-- | Details identifying the accounts with permissions to use the action
--   type.
[$sel:permissions:ActionTypeDeclaration'] :: ActionTypeDeclaration -> Maybe ActionTypePermissions

-- | The description for the action type to be updated.
[$sel:description:ActionTypeDeclaration'] :: ActionTypeDeclaration -> Maybe Text

-- | The properties of the action type to be updated.
[$sel:properties:ActionTypeDeclaration'] :: ActionTypeDeclaration -> Maybe [ActionTypeProperty]

-- | Information about the executor for an action type that was created
--   with any supported integration model.
[$sel:executor:ActionTypeDeclaration'] :: ActionTypeDeclaration -> ActionTypeExecutor

-- | The action category, owner, provider, and version of the action type
--   to be updated.
[$sel:id:ActionTypeDeclaration'] :: ActionTypeDeclaration -> ActionTypeIdentifier

-- | Details for the artifacts, such as application files, to be worked on
--   by the action. For example, the minimum and maximum number of input
--   artifacts allowed.
[$sel:inputArtifactDetails:ActionTypeDeclaration'] :: ActionTypeDeclaration -> ActionTypeArtifactDetails

-- | Details for the output artifacts, such as a built application, that
--   are the result of the action. For example, the minimum and maximum
--   number of output artifacts allowed.
[$sel:outputArtifactDetails:ActionTypeDeclaration'] :: ActionTypeDeclaration -> ActionTypeArtifactDetails

-- | Create a value of <a>ActionTypeDeclaration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:urls:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_urls</a> - The links associated with the
--   action type to be updated.
--   
--   <a>$sel:permissions:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_permissions</a> - Details identifying the
--   accounts with permissions to use the action type.
--   
--   <a>$sel:description:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_description</a> - The description for the
--   action type to be updated.
--   
--   <a>$sel:properties:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_properties</a> - The properties of the action
--   type to be updated.
--   
--   <a>$sel:executor:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_executor</a> - Information about the executor
--   for an action type that was created with any supported integration
--   model.
--   
--   <a>$sel:id:ActionTypeDeclaration'</a>, <a>actionTypeDeclaration_id</a>
--   - The action category, owner, provider, and version of the action type
--   to be updated.
--   
--   <a>$sel:inputArtifactDetails:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_inputArtifactDetails</a> - Details for the
--   artifacts, such as application files, to be worked on by the action.
--   For example, the minimum and maximum number of input artifacts
--   allowed.
--   
--   <a>$sel:outputArtifactDetails:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_outputArtifactDetails</a> - Details for the
--   output artifacts, such as a built application, that are the result of
--   the action. For example, the minimum and maximum number of output
--   artifacts allowed.
newActionTypeDeclaration :: ActionTypeExecutor -> ActionTypeIdentifier -> ActionTypeArtifactDetails -> ActionTypeArtifactDetails -> ActionTypeDeclaration

-- | The links associated with the action type to be updated.
actionTypeDeclaration_urls :: Lens' ActionTypeDeclaration (Maybe ActionTypeUrls)

-- | Details identifying the accounts with permissions to use the action
--   type.
actionTypeDeclaration_permissions :: Lens' ActionTypeDeclaration (Maybe ActionTypePermissions)

-- | The description for the action type to be updated.
actionTypeDeclaration_description :: Lens' ActionTypeDeclaration (Maybe Text)

-- | The properties of the action type to be updated.
actionTypeDeclaration_properties :: Lens' ActionTypeDeclaration (Maybe [ActionTypeProperty])

-- | Information about the executor for an action type that was created
--   with any supported integration model.
actionTypeDeclaration_executor :: Lens' ActionTypeDeclaration ActionTypeExecutor

-- | The action category, owner, provider, and version of the action type
--   to be updated.
actionTypeDeclaration_id :: Lens' ActionTypeDeclaration ActionTypeIdentifier

-- | Details for the artifacts, such as application files, to be worked on
--   by the action. For example, the minimum and maximum number of input
--   artifacts allowed.
actionTypeDeclaration_inputArtifactDetails :: Lens' ActionTypeDeclaration ActionTypeArtifactDetails

-- | Details for the output artifacts, such as a built application, that
--   are the result of the action. For example, the minimum and maximum
--   number of output artifacts allowed.
actionTypeDeclaration_outputArtifactDetails :: Lens' ActionTypeDeclaration ActionTypeArtifactDetails
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionTypeDeclaration.ActionTypeDeclaration
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionTypeDeclaration.ActionTypeDeclaration
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionTypeDeclaration.ActionTypeDeclaration
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionTypeDeclaration.ActionTypeDeclaration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionTypeDeclaration.ActionTypeDeclaration
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionTypeDeclaration.ActionTypeDeclaration
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionTypeDeclaration.ActionTypeDeclaration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionTypeDeclaration.ActionTypeDeclaration


module Network.AWS.CodePipeline.Types.OutputArtifact

-- | Represents information about the output of an action.
--   
--   <i>See:</i> <a>newOutputArtifact</a> smart constructor.
data OutputArtifact
OutputArtifact' :: Text -> OutputArtifact

-- | The name of the output of an artifact, such as "My App".
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
--   
--   Output artifact names must be unique within a pipeline.
[$sel:name:OutputArtifact'] :: OutputArtifact -> Text

-- | Create a value of <a>OutputArtifact</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:OutputArtifact'</a>, <a>outputArtifact_name</a> - The
--   name of the output of an artifact, such as "My App".
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
--   
--   Output artifact names must be unique within a pipeline.
newOutputArtifact :: Text -> OutputArtifact

-- | The name of the output of an artifact, such as "My App".
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
--   
--   Output artifact names must be unique within a pipeline.
outputArtifact_name :: Lens' OutputArtifact Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.OutputArtifact.OutputArtifact
instance GHC.Show.Show Network.AWS.CodePipeline.Types.OutputArtifact.OutputArtifact
instance GHC.Read.Read Network.AWS.CodePipeline.Types.OutputArtifact.OutputArtifact
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.OutputArtifact.OutputArtifact
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.OutputArtifact.OutputArtifact
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.OutputArtifact.OutputArtifact
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.OutputArtifact.OutputArtifact
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.OutputArtifact.OutputArtifact


module Network.AWS.CodePipeline.Types.ActionDeclaration

-- | Represents information about an action declaration.
--   
--   <i>See:</i> <a>newActionDeclaration</a> smart constructor.
data ActionDeclaration
ActionDeclaration' :: Maybe [OutputArtifact] -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe [InputArtifact] -> Maybe Text -> Text -> ActionTypeId -> ActionDeclaration

-- | The name or ID of the result of the action declaration, such as a test
--   or build artifact.
[$sel:outputArtifacts:ActionDeclaration'] :: ActionDeclaration -> Maybe [OutputArtifact]

-- | The variable namespace associated with the action. All variables
--   produced as output by this action fall under this namespace.
[$sel:namespace:ActionDeclaration'] :: ActionDeclaration -> Maybe Text

-- | The order in which actions are run.
[$sel:runOrder:ActionDeclaration'] :: ActionDeclaration -> Maybe Natural

-- | The action declaration's AWS Region, such as us-east-1.
[$sel:region:ActionDeclaration'] :: ActionDeclaration -> Maybe Text

-- | The action's configuration. These are key-value pairs that specify
--   input values for an action. For more information, see <a>Action
--   Structure Requirements in CodePipeline</a>. For the list of
--   configuration properties for the AWS CloudFormation action type in
--   CodePipeline, see <a>Configuration Properties Reference</a> in the
--   <i>AWS CloudFormation User Guide</i>. For template snippets with
--   examples, see <a>Using Parameter Override Functions with CodePipeline
--   Pipelines</a> in the <i>AWS CloudFormation User Guide</i>.
--   
--   The values can be represented in either JSON or YAML format. For
--   example, the JSON configuration item format is as follows:
--   
--   <i>JSON:</i>
--   
--   <pre>
--   "Configuration" : { Key : Value },
--   </pre>
[$sel:configuration:ActionDeclaration'] :: ActionDeclaration -> Maybe (HashMap Text Text)

-- | The name or ID of the artifact consumed by the action, such as a test
--   or build artifact.
[$sel:inputArtifacts:ActionDeclaration'] :: ActionDeclaration -> Maybe [InputArtifact]

-- | The ARN of the IAM service role that performs the declared action.
--   This is assumed through the roleArn for the pipeline.
[$sel:roleArn:ActionDeclaration'] :: ActionDeclaration -> Maybe Text

-- | The action declaration's name.
[$sel:name:ActionDeclaration'] :: ActionDeclaration -> Text

-- | Specifies the action type and the provider of the action.
[$sel:actionTypeId:ActionDeclaration'] :: ActionDeclaration -> ActionTypeId

-- | Create a value of <a>ActionDeclaration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputArtifacts:ActionDeclaration'</a>,
--   <a>actionDeclaration_outputArtifacts</a> - The name or ID of the
--   result of the action declaration, such as a test or build artifact.
--   
--   <a>$sel:namespace:ActionDeclaration'</a>,
--   <a>actionDeclaration_namespace</a> - The variable namespace associated
--   with the action. All variables produced as output by this action fall
--   under this namespace.
--   
--   <a>$sel:runOrder:ActionDeclaration'</a>,
--   <a>actionDeclaration_runOrder</a> - The order in which actions are
--   run.
--   
--   <a>$sel:region:ActionDeclaration'</a>, <a>actionDeclaration_region</a>
--   - The action declaration's AWS Region, such as us-east-1.
--   
--   <a>$sel:configuration:ActionDeclaration'</a>,
--   <a>actionDeclaration_configuration</a> - The action's configuration.
--   These are key-value pairs that specify input values for an action. For
--   more information, see <a>Action Structure Requirements in
--   CodePipeline</a>. For the list of configuration properties for the AWS
--   CloudFormation action type in CodePipeline, see <a>Configuration
--   Properties Reference</a> in the <i>AWS CloudFormation User Guide</i>.
--   For template snippets with examples, see <a>Using Parameter Override
--   Functions with CodePipeline Pipelines</a> in the <i>AWS CloudFormation
--   User Guide</i>.
--   
--   The values can be represented in either JSON or YAML format. For
--   example, the JSON configuration item format is as follows:
--   
--   <i>JSON:</i>
--   
--   <pre>
--   "Configuration" : { Key : Value },
--   </pre>
--   
--   <a>$sel:inputArtifacts:ActionDeclaration'</a>,
--   <a>actionDeclaration_inputArtifacts</a> - The name or ID of the
--   artifact consumed by the action, such as a test or build artifact.
--   
--   <a>$sel:roleArn:ActionDeclaration'</a>,
--   <a>actionDeclaration_roleArn</a> - The ARN of the IAM service role
--   that performs the declared action. This is assumed through the roleArn
--   for the pipeline.
--   
--   <a>$sel:name:ActionDeclaration'</a>, <a>actionDeclaration_name</a> -
--   The action declaration's name.
--   
--   <a>$sel:actionTypeId:ActionDeclaration'</a>,
--   <a>actionDeclaration_actionTypeId</a> - Specifies the action type and
--   the provider of the action.
newActionDeclaration :: Text -> ActionTypeId -> ActionDeclaration

-- | The name or ID of the result of the action declaration, such as a test
--   or build artifact.
actionDeclaration_outputArtifacts :: Lens' ActionDeclaration (Maybe [OutputArtifact])

-- | The variable namespace associated with the action. All variables
--   produced as output by this action fall under this namespace.
actionDeclaration_namespace :: Lens' ActionDeclaration (Maybe Text)

-- | The order in which actions are run.
actionDeclaration_runOrder :: Lens' ActionDeclaration (Maybe Natural)

-- | The action declaration's AWS Region, such as us-east-1.
actionDeclaration_region :: Lens' ActionDeclaration (Maybe Text)

-- | The action's configuration. These are key-value pairs that specify
--   input values for an action. For more information, see <a>Action
--   Structure Requirements in CodePipeline</a>. For the list of
--   configuration properties for the AWS CloudFormation action type in
--   CodePipeline, see <a>Configuration Properties Reference</a> in the
--   <i>AWS CloudFormation User Guide</i>. For template snippets with
--   examples, see <a>Using Parameter Override Functions with CodePipeline
--   Pipelines</a> in the <i>AWS CloudFormation User Guide</i>.
--   
--   The values can be represented in either JSON or YAML format. For
--   example, the JSON configuration item format is as follows:
--   
--   <i>JSON:</i>
--   
--   <pre>
--   "Configuration" : { Key : Value },
--   </pre>
actionDeclaration_configuration :: Lens' ActionDeclaration (Maybe (HashMap Text Text))

-- | The name or ID of the artifact consumed by the action, such as a test
--   or build artifact.
actionDeclaration_inputArtifacts :: Lens' ActionDeclaration (Maybe [InputArtifact])

-- | The ARN of the IAM service role that performs the declared action.
--   This is assumed through the roleArn for the pipeline.
actionDeclaration_roleArn :: Lens' ActionDeclaration (Maybe Text)

-- | The action declaration's name.
actionDeclaration_name :: Lens' ActionDeclaration Text

-- | Specifies the action type and the provider of the action.
actionDeclaration_actionTypeId :: Lens' ActionDeclaration ActionTypeId
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionDeclaration.ActionDeclaration
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionDeclaration.ActionDeclaration
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionDeclaration.ActionDeclaration
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionDeclaration.ActionDeclaration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionDeclaration.ActionDeclaration
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionDeclaration.ActionDeclaration
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionDeclaration.ActionDeclaration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.ActionDeclaration.ActionDeclaration


module Network.AWS.CodePipeline.Types.PipelineExecutionStatus
newtype PipelineExecutionStatus
PipelineExecutionStatus' :: Text -> PipelineExecutionStatus
[fromPipelineExecutionStatus] :: PipelineExecutionStatus -> Text
pattern PipelineExecutionStatus_Cancelled :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Failed :: PipelineExecutionStatus
pattern PipelineExecutionStatus_InProgress :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Stopped :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Stopping :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Succeeded :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Superseded :: PipelineExecutionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance GHC.Read.Read Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus
instance GHC.Show.Show Network.AWS.CodePipeline.Types.PipelineExecutionStatus.PipelineExecutionStatus


module Network.AWS.CodePipeline.Types.PipelineExecution

-- | Represents information about an execution of a pipeline.
--   
--   <i>See:</i> <a>newPipelineExecution</a> smart constructor.
data PipelineExecution
PipelineExecution' :: Maybe PipelineExecutionStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe [ArtifactRevision] -> PipelineExecution

-- | The status of the pipeline execution.
--   
--   <ul>
--   <li>Cancelled: The pipeline’s definition was updated before the
--   pipeline execution could be completed.</li>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
[$sel:status:PipelineExecution'] :: PipelineExecution -> Maybe PipelineExecutionStatus

-- | The name of the pipeline with the specified pipeline execution.
[$sel:pipelineName:PipelineExecution'] :: PipelineExecution -> Maybe Text

-- | A summary that contains a description of the pipeline execution
--   status.
[$sel:statusSummary:PipelineExecution'] :: PipelineExecution -> Maybe Text

-- | The version number of the pipeline with the specified pipeline
--   execution.
[$sel:pipelineVersion:PipelineExecution'] :: PipelineExecution -> Maybe Natural

-- | The ID of the pipeline execution.
[$sel:pipelineExecutionId:PipelineExecution'] :: PipelineExecution -> Maybe Text

-- | A list of <tt>ArtifactRevision</tt> objects included in a pipeline
--   execution.
[$sel:artifactRevisions:PipelineExecution'] :: PipelineExecution -> Maybe [ArtifactRevision]

-- | Create a value of <a>PipelineExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PipelineExecution'</a>, <a>pipelineExecution_status</a>
--   - The status of the pipeline execution.
--   
--   <ul>
--   <li>Cancelled: The pipeline’s definition was updated before the
--   pipeline execution could be completed.</li>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
--   
--   <a>$sel:pipelineName:PipelineExecution'</a>,
--   <a>pipelineExecution_pipelineName</a> - The name of the pipeline with
--   the specified pipeline execution.
--   
--   <a>$sel:statusSummary:PipelineExecution'</a>,
--   <a>pipelineExecution_statusSummary</a> - A summary that contains a
--   description of the pipeline execution status.
--   
--   <a>$sel:pipelineVersion:PipelineExecution'</a>,
--   <a>pipelineExecution_pipelineVersion</a> - The version number of the
--   pipeline with the specified pipeline execution.
--   
--   <a>$sel:pipelineExecutionId:PipelineExecution'</a>,
--   <a>pipelineExecution_pipelineExecutionId</a> - The ID of the pipeline
--   execution.
--   
--   <a>$sel:artifactRevisions:PipelineExecution'</a>,
--   <a>pipelineExecution_artifactRevisions</a> - A list of
--   <tt>ArtifactRevision</tt> objects included in a pipeline execution.
newPipelineExecution :: PipelineExecution

-- | The status of the pipeline execution.
--   
--   <ul>
--   <li>Cancelled: The pipeline’s definition was updated before the
--   pipeline execution could be completed.</li>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
pipelineExecution_status :: Lens' PipelineExecution (Maybe PipelineExecutionStatus)

-- | The name of the pipeline with the specified pipeline execution.
pipelineExecution_pipelineName :: Lens' PipelineExecution (Maybe Text)

-- | A summary that contains a description of the pipeline execution
--   status.
pipelineExecution_statusSummary :: Lens' PipelineExecution (Maybe Text)

-- | The version number of the pipeline with the specified pipeline
--   execution.
pipelineExecution_pipelineVersion :: Lens' PipelineExecution (Maybe Natural)

-- | The ID of the pipeline execution.
pipelineExecution_pipelineExecutionId :: Lens' PipelineExecution (Maybe Text)

-- | A list of <tt>ArtifactRevision</tt> objects included in a pipeline
--   execution.
pipelineExecution_artifactRevisions :: Lens' PipelineExecution (Maybe [ArtifactRevision])
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.PipelineExecution.PipelineExecution
instance GHC.Show.Show Network.AWS.CodePipeline.Types.PipelineExecution.PipelineExecution
instance GHC.Read.Read Network.AWS.CodePipeline.Types.PipelineExecution.PipelineExecution
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.PipelineExecution.PipelineExecution
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.PipelineExecution.PipelineExecution
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.PipelineExecution.PipelineExecution
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.PipelineExecution.PipelineExecution


module Network.AWS.CodePipeline.Types.PipelineMetadata

-- | Information about a pipeline.
--   
--   <i>See:</i> <a>newPipelineMetadata</a> smart constructor.
data PipelineMetadata
PipelineMetadata' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> PipelineMetadata

-- | The date and time the pipeline was created, in timestamp format.
[$sel:created:PipelineMetadata'] :: PipelineMetadata -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the pipeline.
[$sel:pipelineArn:PipelineMetadata'] :: PipelineMetadata -> Maybe Text

-- | The date and time the pipeline was last updated, in timestamp format.
[$sel:updated:PipelineMetadata'] :: PipelineMetadata -> Maybe POSIX

-- | Create a value of <a>PipelineMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:created:PipelineMetadata'</a>, <a>pipelineMetadata_created</a>
--   - The date and time the pipeline was created, in timestamp format.
--   
--   <a>$sel:pipelineArn:PipelineMetadata'</a>,
--   <a>pipelineMetadata_pipelineArn</a> - The Amazon Resource Name (ARN)
--   of the pipeline.
--   
--   <a>$sel:updated:PipelineMetadata'</a>, <a>pipelineMetadata_updated</a>
--   - The date and time the pipeline was last updated, in timestamp
--   format.
newPipelineMetadata :: PipelineMetadata

-- | The date and time the pipeline was created, in timestamp format.
pipelineMetadata_created :: Lens' PipelineMetadata (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the pipeline.
pipelineMetadata_pipelineArn :: Lens' PipelineMetadata (Maybe Text)

-- | The date and time the pipeline was last updated, in timestamp format.
pipelineMetadata_updated :: Lens' PipelineMetadata (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.PipelineMetadata.PipelineMetadata
instance GHC.Show.Show Network.AWS.CodePipeline.Types.PipelineMetadata.PipelineMetadata
instance GHC.Read.Read Network.AWS.CodePipeline.Types.PipelineMetadata.PipelineMetadata
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.PipelineMetadata.PipelineMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.PipelineMetadata.PipelineMetadata
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.PipelineMetadata.PipelineMetadata
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.PipelineMetadata.PipelineMetadata


module Network.AWS.CodePipeline.Types.PipelineSummary

-- | Returns a summary of a pipeline.
--   
--   <i>See:</i> <a>newPipelineSummary</a> smart constructor.
data PipelineSummary
PipelineSummary' :: Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe POSIX -> PipelineSummary

-- | The date and time the pipeline was created, in timestamp format.
[$sel:created:PipelineSummary'] :: PipelineSummary -> Maybe POSIX

-- | The name of the pipeline.
[$sel:name:PipelineSummary'] :: PipelineSummary -> Maybe Text

-- | The version number of the pipeline.
[$sel:version:PipelineSummary'] :: PipelineSummary -> Maybe Natural

-- | The date and time of the last update to the pipeline, in timestamp
--   format.
[$sel:updated:PipelineSummary'] :: PipelineSummary -> Maybe POSIX

-- | Create a value of <a>PipelineSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:created:PipelineSummary'</a>, <a>pipelineSummary_created</a> -
--   The date and time the pipeline was created, in timestamp format.
--   
--   <a>$sel:name:PipelineSummary'</a>, <a>pipelineSummary_name</a> - The
--   name of the pipeline.
--   
--   <a>$sel:version:PipelineSummary'</a>, <a>pipelineSummary_version</a> -
--   The version number of the pipeline.
--   
--   <a>$sel:updated:PipelineSummary'</a>, <a>pipelineSummary_updated</a> -
--   The date and time of the last update to the pipeline, in timestamp
--   format.
newPipelineSummary :: PipelineSummary

-- | The date and time the pipeline was created, in timestamp format.
pipelineSummary_created :: Lens' PipelineSummary (Maybe UTCTime)

-- | The name of the pipeline.
pipelineSummary_name :: Lens' PipelineSummary (Maybe Text)

-- | The version number of the pipeline.
pipelineSummary_version :: Lens' PipelineSummary (Maybe Natural)

-- | The date and time of the last update to the pipeline, in timestamp
--   format.
pipelineSummary_updated :: Lens' PipelineSummary (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.PipelineSummary.PipelineSummary
instance GHC.Show.Show Network.AWS.CodePipeline.Types.PipelineSummary.PipelineSummary
instance GHC.Read.Read Network.AWS.CodePipeline.Types.PipelineSummary.PipelineSummary
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.PipelineSummary.PipelineSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.PipelineSummary.PipelineSummary
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.PipelineSummary.PipelineSummary
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.PipelineSummary.PipelineSummary


module Network.AWS.CodePipeline.Types.S3ArtifactLocation

-- | The location of the S3 bucket that contains a revision.
--   
--   <i>See:</i> <a>newS3ArtifactLocation</a> smart constructor.
data S3ArtifactLocation
S3ArtifactLocation' :: Text -> Text -> S3ArtifactLocation

-- | The name of the S3 bucket.
[$sel:bucketName:S3ArtifactLocation'] :: S3ArtifactLocation -> Text

-- | The key of the object in the S3 bucket, which uniquely identifies the
--   object in the bucket.
[$sel:objectKey:S3ArtifactLocation'] :: S3ArtifactLocation -> Text

-- | Create a value of <a>S3ArtifactLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketName:S3ArtifactLocation'</a>,
--   <a>s3ArtifactLocation_bucketName</a> - The name of the S3 bucket.
--   
--   <a>$sel:objectKey:S3ArtifactLocation'</a>,
--   <a>s3ArtifactLocation_objectKey</a> - The key of the object in the S3
--   bucket, which uniquely identifies the object in the bucket.
newS3ArtifactLocation :: Text -> Text -> S3ArtifactLocation

-- | The name of the S3 bucket.
s3ArtifactLocation_bucketName :: Lens' S3ArtifactLocation Text

-- | The key of the object in the S3 bucket, which uniquely identifies the
--   object in the bucket.
s3ArtifactLocation_objectKey :: Lens' S3ArtifactLocation Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.S3ArtifactLocation.S3ArtifactLocation
instance GHC.Show.Show Network.AWS.CodePipeline.Types.S3ArtifactLocation.S3ArtifactLocation
instance GHC.Read.Read Network.AWS.CodePipeline.Types.S3ArtifactLocation.S3ArtifactLocation
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.S3ArtifactLocation.S3ArtifactLocation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.S3ArtifactLocation.S3ArtifactLocation
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.S3ArtifactLocation.S3ArtifactLocation
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.S3ArtifactLocation.S3ArtifactLocation


module Network.AWS.CodePipeline.Types.ArtifactLocation

-- | Represents information about the location of an artifact.
--   
--   <i>See:</i> <a>newArtifactLocation</a> smart constructor.
data ArtifactLocation
ArtifactLocation' :: Maybe S3ArtifactLocation -> Maybe ArtifactLocationType -> ArtifactLocation

-- | The S3 bucket that contains the artifact.
[$sel:s3Location:ArtifactLocation'] :: ArtifactLocation -> Maybe S3ArtifactLocation

-- | The type of artifact in the location.
[$sel:type':ArtifactLocation'] :: ArtifactLocation -> Maybe ArtifactLocationType

-- | Create a value of <a>ArtifactLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Location:ArtifactLocation'</a>,
--   <a>artifactLocation_s3Location</a> - The S3 bucket that contains the
--   artifact.
--   
--   <a>$sel:type':ArtifactLocation'</a>, <a>artifactLocation_type</a> -
--   The type of artifact in the location.
newArtifactLocation :: ArtifactLocation

-- | The S3 bucket that contains the artifact.
artifactLocation_s3Location :: Lens' ArtifactLocation (Maybe S3ArtifactLocation)

-- | The type of artifact in the location.
artifactLocation_type :: Lens' ArtifactLocation (Maybe ArtifactLocationType)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ArtifactLocation.ArtifactLocation
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ArtifactLocation.ArtifactLocation
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ArtifactLocation.ArtifactLocation
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ArtifactLocation.ArtifactLocation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ArtifactLocation.ArtifactLocation
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ArtifactLocation.ArtifactLocation
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ArtifactLocation.ArtifactLocation


module Network.AWS.CodePipeline.Types.Artifact

-- | Represents information about an artifact that is worked on by actions
--   in the pipeline.
--   
--   <i>See:</i> <a>newArtifact</a> smart constructor.
data Artifact
Artifact' :: Maybe ArtifactLocation -> Maybe Text -> Maybe Text -> Artifact

-- | The location of an artifact.
[$sel:location:Artifact'] :: Artifact -> Maybe ArtifactLocation

-- | The artifact's name.
[$sel:name:Artifact'] :: Artifact -> Maybe Text

-- | The artifact's revision ID. Depending on the type of object, this
--   could be a commit ID (GitHub) or a revision ID (Amazon S3).
[$sel:revision:Artifact'] :: Artifact -> Maybe Text

-- | Create a value of <a>Artifact</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:Artifact'</a>, <a>artifact_location</a> - The
--   location of an artifact.
--   
--   <a>$sel:name:Artifact'</a>, <a>artifact_name</a> - The artifact's
--   name.
--   
--   <a>$sel:revision:Artifact'</a>, <a>artifact_revision</a> - The
--   artifact's revision ID. Depending on the type of object, this could be
--   a commit ID (GitHub) or a revision ID (Amazon S3).
newArtifact :: Artifact

-- | The location of an artifact.
artifact_location :: Lens' Artifact (Maybe ArtifactLocation)

-- | The artifact's name.
artifact_name :: Lens' Artifact (Maybe Text)

-- | The artifact's revision ID. Depending on the type of object, this
--   could be a commit ID (GitHub) or a revision ID (Amazon S3).
artifact_revision :: Lens' Artifact (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.Artifact.Artifact
instance GHC.Show.Show Network.AWS.CodePipeline.Types.Artifact.Artifact
instance GHC.Read.Read Network.AWS.CodePipeline.Types.Artifact.Artifact
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.Artifact.Artifact
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.Artifact.Artifact
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.Artifact.Artifact
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.Artifact.Artifact


module Network.AWS.CodePipeline.Types.S3Location

-- | The Amazon S3 artifact location for an action's artifacts.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Maybe Text -> S3Location

-- | The Amazon S3 artifact bucket for an action's artifacts.
[$sel:bucket:S3Location'] :: S3Location -> Maybe Text

-- | The artifact name.
[$sel:key:S3Location'] :: S3Location -> Maybe Text

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:S3Location'</a>, <a>s3Location_bucket</a> - The Amazon
--   S3 artifact bucket for an action's artifacts.
--   
--   <a>$sel:key:S3Location'</a>, <a>s3Location_key</a> - The artifact
--   name.
newS3Location :: S3Location

-- | The Amazon S3 artifact bucket for an action's artifacts.
s3Location_bucket :: Lens' S3Location (Maybe Text)

-- | The artifact name.
s3Location_key :: Lens' S3Location (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.S3Location.S3Location
instance GHC.Show.Show Network.AWS.CodePipeline.Types.S3Location.S3Location
instance GHC.Read.Read Network.AWS.CodePipeline.Types.S3Location.S3Location
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.S3Location.S3Location
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.S3Location.S3Location
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.S3Location.S3Location
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.S3Location.S3Location


module Network.AWS.CodePipeline.Types.ArtifactDetail

-- | Artifact details for the action execution, such as the artifact
--   location.
--   
--   <i>See:</i> <a>newArtifactDetail</a> smart constructor.
data ArtifactDetail
ArtifactDetail' :: Maybe Text -> Maybe S3Location -> ArtifactDetail

-- | The artifact object name for the action execution.
[$sel:name:ArtifactDetail'] :: ArtifactDetail -> Maybe Text

-- | The Amazon S3 artifact location for the action execution.
[$sel:s3location:ArtifactDetail'] :: ArtifactDetail -> Maybe S3Location

-- | Create a value of <a>ArtifactDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ArtifactDetail'</a>, <a>artifactDetail_name</a> - The
--   artifact object name for the action execution.
--   
--   <a>$sel:s3location:ArtifactDetail'</a>,
--   <a>artifactDetail_s3location</a> - The Amazon S3 artifact location for
--   the action execution.
newArtifactDetail :: ArtifactDetail

-- | The artifact object name for the action execution.
artifactDetail_name :: Lens' ArtifactDetail (Maybe Text)

-- | The Amazon S3 artifact location for the action execution.
artifactDetail_s3location :: Lens' ArtifactDetail (Maybe S3Location)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ArtifactDetail.ArtifactDetail
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ArtifactDetail.ArtifactDetail
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ArtifactDetail.ArtifactDetail
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ArtifactDetail.ArtifactDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ArtifactDetail.ArtifactDetail
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ArtifactDetail.ArtifactDetail
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ArtifactDetail.ArtifactDetail


module Network.AWS.CodePipeline.Types.ActionExecutionOutput

-- | Output details listed for an action execution, such as the action
--   execution result.
--   
--   <i>See:</i> <a>newActionExecutionOutput</a> smart constructor.
data ActionExecutionOutput
ActionExecutionOutput' :: Maybe (HashMap Text Text) -> Maybe [ArtifactDetail] -> Maybe ActionExecutionResult -> ActionExecutionOutput

-- | The outputVariables field shows the key-value pairs that were output
--   as part of that execution.
[$sel:outputVariables:ActionExecutionOutput'] :: ActionExecutionOutput -> Maybe (HashMap Text Text)

-- | Details of output artifacts of the action that correspond to the
--   action execution.
[$sel:outputArtifacts:ActionExecutionOutput'] :: ActionExecutionOutput -> Maybe [ArtifactDetail]

-- | Execution result information listed in the output details for an
--   action execution.
[$sel:executionResult:ActionExecutionOutput'] :: ActionExecutionOutput -> Maybe ActionExecutionResult

-- | Create a value of <a>ActionExecutionOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputVariables:ActionExecutionOutput'</a>,
--   <a>actionExecutionOutput_outputVariables</a> - The outputVariables
--   field shows the key-value pairs that were output as part of that
--   execution.
--   
--   <a>$sel:outputArtifacts:ActionExecutionOutput'</a>,
--   <a>actionExecutionOutput_outputArtifacts</a> - Details of output
--   artifacts of the action that correspond to the action execution.
--   
--   <a>$sel:executionResult:ActionExecutionOutput'</a>,
--   <a>actionExecutionOutput_executionResult</a> - Execution result
--   information listed in the output details for an action execution.
newActionExecutionOutput :: ActionExecutionOutput

-- | The outputVariables field shows the key-value pairs that were output
--   as part of that execution.
actionExecutionOutput_outputVariables :: Lens' ActionExecutionOutput (Maybe (HashMap Text Text))

-- | Details of output artifacts of the action that correspond to the
--   action execution.
actionExecutionOutput_outputArtifacts :: Lens' ActionExecutionOutput (Maybe [ArtifactDetail])

-- | Execution result information listed in the output details for an
--   action execution.
actionExecutionOutput_executionResult :: Lens' ActionExecutionOutput (Maybe ActionExecutionResult)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionExecutionOutput.ActionExecutionOutput
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionExecutionOutput.ActionExecutionOutput
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionExecutionOutput.ActionExecutionOutput
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionExecutionOutput.ActionExecutionOutput
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionExecutionOutput.ActionExecutionOutput
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionExecutionOutput.ActionExecutionOutput
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionExecutionOutput.ActionExecutionOutput


module Network.AWS.CodePipeline.Types.ActionExecutionInput

-- | Input information used for an action execution.
--   
--   <i>See:</i> <a>newActionExecutionInput</a> smart constructor.
data ActionExecutionInput
ActionExecutionInput' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ActionTypeId -> Maybe [ArtifactDetail] -> Maybe Text -> ActionExecutionInput

-- | The variable namespace associated with the action. All variables
--   produced as output by this action fall under this namespace.
[$sel:namespace:ActionExecutionInput'] :: ActionExecutionInput -> Maybe Text

-- | Configuration data for an action execution with all variable
--   references replaced with their real values for the execution.
[$sel:resolvedConfiguration:ActionExecutionInput'] :: ActionExecutionInput -> Maybe (HashMap Text Text)

-- | The AWS Region for the action, such as us-east-1.
[$sel:region:ActionExecutionInput'] :: ActionExecutionInput -> Maybe Text

-- | Configuration data for an action execution.
[$sel:configuration:ActionExecutionInput'] :: ActionExecutionInput -> Maybe (HashMap Text Text)
[$sel:actionTypeId:ActionExecutionInput'] :: ActionExecutionInput -> Maybe ActionTypeId

-- | Details of input artifacts of the action that correspond to the action
--   execution.
[$sel:inputArtifacts:ActionExecutionInput'] :: ActionExecutionInput -> Maybe [ArtifactDetail]

-- | The ARN of the IAM service role that performs the declared action.
--   This is assumed through the roleArn for the pipeline.
[$sel:roleArn:ActionExecutionInput'] :: ActionExecutionInput -> Maybe Text

-- | Create a value of <a>ActionExecutionInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_namespace</a> - The variable namespace
--   associated with the action. All variables produced as output by this
--   action fall under this namespace.
--   
--   <a>$sel:resolvedConfiguration:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_resolvedConfiguration</a> - Configuration data
--   for an action execution with all variable references replaced with
--   their real values for the execution.
--   
--   <a>$sel:region:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_region</a> - The AWS Region for the action,
--   such as us-east-1.
--   
--   <a>$sel:configuration:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_configuration</a> - Configuration data for an
--   action execution.
--   
--   <a>$sel:actionTypeId:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_actionTypeId</a> - Undocumented member.
--   
--   <a>$sel:inputArtifacts:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_inputArtifacts</a> - Details of input
--   artifacts of the action that correspond to the action execution.
--   
--   <a>$sel:roleArn:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_roleArn</a> - The ARN of the IAM service role
--   that performs the declared action. This is assumed through the roleArn
--   for the pipeline.
newActionExecutionInput :: ActionExecutionInput

-- | The variable namespace associated with the action. All variables
--   produced as output by this action fall under this namespace.
actionExecutionInput_namespace :: Lens' ActionExecutionInput (Maybe Text)

-- | Configuration data for an action execution with all variable
--   references replaced with their real values for the execution.
actionExecutionInput_resolvedConfiguration :: Lens' ActionExecutionInput (Maybe (HashMap Text Text))

-- | The AWS Region for the action, such as us-east-1.
actionExecutionInput_region :: Lens' ActionExecutionInput (Maybe Text)

-- | Configuration data for an action execution.
actionExecutionInput_configuration :: Lens' ActionExecutionInput (Maybe (HashMap Text Text))

-- | Undocumented member.
actionExecutionInput_actionTypeId :: Lens' ActionExecutionInput (Maybe ActionTypeId)

-- | Details of input artifacts of the action that correspond to the action
--   execution.
actionExecutionInput_inputArtifacts :: Lens' ActionExecutionInput (Maybe [ArtifactDetail])

-- | The ARN of the IAM service role that performs the declared action.
--   This is assumed through the roleArn for the pipeline.
actionExecutionInput_roleArn :: Lens' ActionExecutionInput (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionExecutionInput.ActionExecutionInput
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionExecutionInput.ActionExecutionInput
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionExecutionInput.ActionExecutionInput
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionExecutionInput.ActionExecutionInput
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionExecutionInput.ActionExecutionInput
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionExecutionInput.ActionExecutionInput
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionExecutionInput.ActionExecutionInput


module Network.AWS.CodePipeline.Types.ActionExecutionDetail

-- | Returns information about an execution of an action, including the
--   action execution ID, and the name, version, and timing of the action.
--   
--   <i>See:</i> <a>newActionExecutionDetail</a> smart constructor.
data ActionExecutionDetail
ActionExecutionDetail' :: Maybe ActionExecutionStatus -> Maybe POSIX -> Maybe Natural -> Maybe ActionExecutionInput -> Maybe Text -> Maybe ActionExecutionOutput -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> ActionExecutionDetail

-- | The status of the action execution. Status categories are
--   <tt>InProgress</tt>, <tt>Succeeded</tt>, and <tt>Failed</tt>.
[$sel:status:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe ActionExecutionStatus

-- | The start time of the action execution.
[$sel:startTime:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe POSIX

-- | The version of the pipeline where the action was run.
[$sel:pipelineVersion:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe Natural

-- | Input details for the action execution, such as role ARN, Region, and
--   input artifacts.
[$sel:input:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe ActionExecutionInput

-- | The name of the action.
[$sel:actionName:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe Text

-- | Output details for the action execution, such as the action execution
--   result.
[$sel:output:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe ActionExecutionOutput

-- | The pipeline execution ID for the action execution.
[$sel:pipelineExecutionId:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe Text

-- | The name of the stage that contains the action.
[$sel:stageName:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe Text

-- | The last update time of the action execution.
[$sel:lastUpdateTime:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe POSIX

-- | The action execution ID.
[$sel:actionExecutionId:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe Text

-- | Create a value of <a>ActionExecutionDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_status</a> - The status of the action
--   execution. Status categories are <tt>InProgress</tt>,
--   <tt>Succeeded</tt>, and <tt>Failed</tt>.
--   
--   <a>$sel:startTime:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_startTime</a> - The start time of the action
--   execution.
--   
--   <a>$sel:pipelineVersion:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_pipelineVersion</a> - The version of the
--   pipeline where the action was run.
--   
--   <a>$sel:input:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_input</a> - Input details for the action
--   execution, such as role ARN, Region, and input artifacts.
--   
--   <a>$sel:actionName:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_actionName</a> - The name of the action.
--   
--   <a>$sel:output:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_output</a> - Output details for the action
--   execution, such as the action execution result.
--   
--   <a>$sel:pipelineExecutionId:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_pipelineExecutionId</a> - The pipeline
--   execution ID for the action execution.
--   
--   <a>$sel:stageName:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_stageName</a> - The name of the stage that
--   contains the action.
--   
--   <a>$sel:lastUpdateTime:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_lastUpdateTime</a> - The last update time of
--   the action execution.
--   
--   <a>$sel:actionExecutionId:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_actionExecutionId</a> - The action execution
--   ID.
newActionExecutionDetail :: ActionExecutionDetail

-- | The status of the action execution. Status categories are
--   <tt>InProgress</tt>, <tt>Succeeded</tt>, and <tt>Failed</tt>.
actionExecutionDetail_status :: Lens' ActionExecutionDetail (Maybe ActionExecutionStatus)

-- | The start time of the action execution.
actionExecutionDetail_startTime :: Lens' ActionExecutionDetail (Maybe UTCTime)

-- | The version of the pipeline where the action was run.
actionExecutionDetail_pipelineVersion :: Lens' ActionExecutionDetail (Maybe Natural)

-- | Input details for the action execution, such as role ARN, Region, and
--   input artifacts.
actionExecutionDetail_input :: Lens' ActionExecutionDetail (Maybe ActionExecutionInput)

-- | The name of the action.
actionExecutionDetail_actionName :: Lens' ActionExecutionDetail (Maybe Text)

-- | Output details for the action execution, such as the action execution
--   result.
actionExecutionDetail_output :: Lens' ActionExecutionDetail (Maybe ActionExecutionOutput)

-- | The pipeline execution ID for the action execution.
actionExecutionDetail_pipelineExecutionId :: Lens' ActionExecutionDetail (Maybe Text)

-- | The name of the stage that contains the action.
actionExecutionDetail_stageName :: Lens' ActionExecutionDetail (Maybe Text)

-- | The last update time of the action execution.
actionExecutionDetail_lastUpdateTime :: Lens' ActionExecutionDetail (Maybe UTCTime)

-- | The action execution ID.
actionExecutionDetail_actionExecutionId :: Lens' ActionExecutionDetail (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ActionExecutionDetail.ActionExecutionDetail
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ActionExecutionDetail.ActionExecutionDetail
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ActionExecutionDetail.ActionExecutionDetail
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ActionExecutionDetail.ActionExecutionDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ActionExecutionDetail.ActionExecutionDetail
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ActionExecutionDetail.ActionExecutionDetail
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ActionExecutionDetail.ActionExecutionDetail


module Network.AWS.CodePipeline.Types.SourceRevision

-- | Information about the version (or revision) of a source artifact that
--   initiated a pipeline execution.
--   
--   <i>See:</i> <a>newSourceRevision</a> smart constructor.
data SourceRevision
SourceRevision' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> SourceRevision

-- | Summary information about the most recent revision of the artifact.
--   For GitHub and AWS CodeCommit repositories, the commit message. For
--   Amazon S3 buckets or actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
[$sel:revisionSummary:SourceRevision'] :: SourceRevision -> Maybe Text

-- | The commit ID for the artifact revision. For artifacts stored in
--   GitHub or AWS CodeCommit repositories, the commit ID is linked to a
--   commit details page.
[$sel:revisionUrl:SourceRevision'] :: SourceRevision -> Maybe Text

-- | The system-generated unique ID that identifies the revision number of
--   the artifact.
[$sel:revisionId:SourceRevision'] :: SourceRevision -> Maybe Text

-- | The name of the action that processed the revision to the source
--   artifact.
[$sel:actionName:SourceRevision'] :: SourceRevision -> Text

-- | Create a value of <a>SourceRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionSummary:SourceRevision'</a>,
--   <a>sourceRevision_revisionSummary</a> - Summary information about the
--   most recent revision of the artifact. For GitHub and AWS CodeCommit
--   repositories, the commit message. For Amazon S3 buckets or actions,
--   the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
--   
--   <a>$sel:revisionUrl:SourceRevision'</a>,
--   <a>sourceRevision_revisionUrl</a> - The commit ID for the artifact
--   revision. For artifacts stored in GitHub or AWS CodeCommit
--   repositories, the commit ID is linked to a commit details page.
--   
--   <a>$sel:revisionId:SourceRevision'</a>,
--   <a>sourceRevision_revisionId</a> - The system-generated unique ID that
--   identifies the revision number of the artifact.
--   
--   <a>$sel:actionName:SourceRevision'</a>,
--   <a>sourceRevision_actionName</a> - The name of the action that
--   processed the revision to the source artifact.
newSourceRevision :: Text -> SourceRevision

-- | Summary information about the most recent revision of the artifact.
--   For GitHub and AWS CodeCommit repositories, the commit message. For
--   Amazon S3 buckets or actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
sourceRevision_revisionSummary :: Lens' SourceRevision (Maybe Text)

-- | The commit ID for the artifact revision. For artifacts stored in
--   GitHub or AWS CodeCommit repositories, the commit ID is linked to a
--   commit details page.
sourceRevision_revisionUrl :: Lens' SourceRevision (Maybe Text)

-- | The system-generated unique ID that identifies the revision number of
--   the artifact.
sourceRevision_revisionId :: Lens' SourceRevision (Maybe Text)

-- | The name of the action that processed the revision to the source
--   artifact.
sourceRevision_actionName :: Lens' SourceRevision Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.SourceRevision.SourceRevision
instance GHC.Show.Show Network.AWS.CodePipeline.Types.SourceRevision.SourceRevision
instance GHC.Read.Read Network.AWS.CodePipeline.Types.SourceRevision.SourceRevision
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.SourceRevision.SourceRevision
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.SourceRevision.SourceRevision
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.SourceRevision.SourceRevision
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.SourceRevision.SourceRevision


module Network.AWS.CodePipeline.Types.StageContext

-- | Represents information about a stage to a job worker.
--   
--   <i>See:</i> <a>newStageContext</a> smart constructor.
data StageContext
StageContext' :: Maybe Text -> StageContext

-- | The name of the stage.
[$sel:name:StageContext'] :: StageContext -> Maybe Text

-- | Create a value of <a>StageContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StageContext'</a>, <a>stageContext_name</a> - The name of
--   the stage.
newStageContext :: StageContext

-- | The name of the stage.
stageContext_name :: Lens' StageContext (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.StageContext.StageContext
instance GHC.Show.Show Network.AWS.CodePipeline.Types.StageContext.StageContext
instance GHC.Read.Read Network.AWS.CodePipeline.Types.StageContext.StageContext
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.StageContext.StageContext
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.StageContext.StageContext
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.StageContext.StageContext
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.StageContext.StageContext


module Network.AWS.CodePipeline.Types.PipelineContext

-- | Represents information about a pipeline to a job worker.
--   
--   PipelineContext contains <tt>pipelineArn</tt> and
--   <tt>pipelineExecutionId</tt> for custom action jobs. The
--   <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt> fields are not
--   populated for ThirdParty action jobs.
--   
--   <i>See:</i> <a>newPipelineContext</a> smart constructor.
data PipelineContext
PipelineContext' :: Maybe StageContext -> Maybe Text -> Maybe ActionContext -> Maybe Text -> Maybe Text -> PipelineContext

-- | The stage of the pipeline.
[$sel:stage:PipelineContext'] :: PipelineContext -> Maybe StageContext

-- | The name of the pipeline. This is a user-specified value. Pipeline
--   names must be unique across all pipeline names under an Amazon Web
--   Services account.
[$sel:pipelineName:PipelineContext'] :: PipelineContext -> Maybe Text

-- | The context of an action to a job worker in the stage of a pipeline.
[$sel:action:PipelineContext'] :: PipelineContext -> Maybe ActionContext

-- | The Amazon Resource Name (ARN) of the pipeline.
[$sel:pipelineArn:PipelineContext'] :: PipelineContext -> Maybe Text

-- | The execution ID of the pipeline.
[$sel:pipelineExecutionId:PipelineContext'] :: PipelineContext -> Maybe Text

-- | Create a value of <a>PipelineContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:PipelineContext'</a>, <a>pipelineContext_stage</a> - The
--   stage of the pipeline.
--   
--   <a>$sel:pipelineName:PipelineContext'</a>,
--   <a>pipelineContext_pipelineName</a> - The name of the pipeline. This
--   is a user-specified value. Pipeline names must be unique across all
--   pipeline names under an Amazon Web Services account.
--   
--   <a>$sel:action:PipelineContext'</a>, <a>pipelineContext_action</a> -
--   The context of an action to a job worker in the stage of a pipeline.
--   
--   <a>$sel:pipelineArn:PipelineContext'</a>,
--   <a>pipelineContext_pipelineArn</a> - The Amazon Resource Name (ARN) of
--   the pipeline.
--   
--   <a>$sel:pipelineExecutionId:PipelineContext'</a>,
--   <a>pipelineContext_pipelineExecutionId</a> - The execution ID of the
--   pipeline.
newPipelineContext :: PipelineContext

-- | The stage of the pipeline.
pipelineContext_stage :: Lens' PipelineContext (Maybe StageContext)

-- | The name of the pipeline. This is a user-specified value. Pipeline
--   names must be unique across all pipeline names under an Amazon Web
--   Services account.
pipelineContext_pipelineName :: Lens' PipelineContext (Maybe Text)

-- | The context of an action to a job worker in the stage of a pipeline.
pipelineContext_action :: Lens' PipelineContext (Maybe ActionContext)

-- | The Amazon Resource Name (ARN) of the pipeline.
pipelineContext_pipelineArn :: Lens' PipelineContext (Maybe Text)

-- | The execution ID of the pipeline.
pipelineContext_pipelineExecutionId :: Lens' PipelineContext (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.PipelineContext.PipelineContext
instance GHC.Show.Show Network.AWS.CodePipeline.Types.PipelineContext.PipelineContext
instance GHC.Read.Read Network.AWS.CodePipeline.Types.PipelineContext.PipelineContext
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.PipelineContext.PipelineContext
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.PipelineContext.PipelineContext
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.PipelineContext.PipelineContext
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.PipelineContext.PipelineContext


module Network.AWS.CodePipeline.Types.JobData

-- | Represents other information about a job required for a job worker to
--   complete the job.
--   
--   <i>See:</i> <a>newJobData</a> smart constructor.
data JobData
JobData' :: Maybe Text -> Maybe [Artifact] -> Maybe (Sensitive AWSSessionCredentials) -> Maybe PipelineContext -> Maybe EncryptionKey -> Maybe ActionTypeId -> Maybe [Artifact] -> Maybe ActionConfiguration -> JobData

-- | A system-generated token, such as a AWS CodeDeploy deployment ID,
--   required by a job to continue the job asynchronously.
[$sel:continuationToken:JobData'] :: JobData -> Maybe Text

-- | The output of the job.
[$sel:outputArtifacts:JobData'] :: JobData -> Maybe [Artifact]

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifacts for the pipeline in AWS CodePipeline.
[$sel:artifactCredentials:JobData'] :: JobData -> Maybe (Sensitive AWSSessionCredentials)

-- | Represents information about a pipeline to a job worker.
--   
--   Includes <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt> for
--   custom jobs.
[$sel:pipelineContext:JobData'] :: JobData -> Maybe PipelineContext

-- | Represents information about the key used to encrypt data in the
--   artifact store, such as an AWS Key Management Service (AWS KMS) key.
[$sel:encryptionKey:JobData'] :: JobData -> Maybe EncryptionKey

-- | Represents information about an action type.
[$sel:actionTypeId:JobData'] :: JobData -> Maybe ActionTypeId

-- | The artifact supplied to the job.
[$sel:inputArtifacts:JobData'] :: JobData -> Maybe [Artifact]

-- | Represents information about an action configuration.
[$sel:actionConfiguration:JobData'] :: JobData -> Maybe ActionConfiguration

-- | Create a value of <a>JobData</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:continuationToken:JobData'</a>,
--   <a>jobData_continuationToken</a> - A system-generated token, such as a
--   AWS CodeDeploy deployment ID, required by a job to continue the job
--   asynchronously.
--   
--   <a>$sel:outputArtifacts:JobData'</a>, <a>jobData_outputArtifacts</a> -
--   The output of the job.
--   
--   <a>$sel:artifactCredentials:JobData'</a>,
--   <a>jobData_artifactCredentials</a> - Represents an AWS session
--   credentials object. These credentials are temporary credentials that
--   are issued by AWS Secure Token Service (STS). They can be used to
--   access input and output artifacts in the S3 bucket used to store
--   artifacts for the pipeline in AWS CodePipeline.
--   
--   <a>$sel:pipelineContext:JobData'</a>, <a>jobData_pipelineContext</a> -
--   Represents information about a pipeline to a job worker.
--   
--   Includes <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt> for
--   custom jobs.
--   
--   <a>$sel:encryptionKey:JobData'</a>, <a>jobData_encryptionKey</a> -
--   Represents information about the key used to encrypt data in the
--   artifact store, such as an AWS Key Management Service (AWS KMS) key.
--   
--   <a>$sel:actionTypeId:JobData'</a>, <a>jobData_actionTypeId</a> -
--   Represents information about an action type.
--   
--   <a>$sel:inputArtifacts:JobData'</a>, <a>jobData_inputArtifacts</a> -
--   The artifact supplied to the job.
--   
--   <a>$sel:actionConfiguration:JobData'</a>,
--   <a>jobData_actionConfiguration</a> - Represents information about an
--   action configuration.
newJobData :: JobData

-- | A system-generated token, such as a AWS CodeDeploy deployment ID,
--   required by a job to continue the job asynchronously.
jobData_continuationToken :: Lens' JobData (Maybe Text)

-- | The output of the job.
jobData_outputArtifacts :: Lens' JobData (Maybe [Artifact])

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifacts for the pipeline in AWS CodePipeline.
jobData_artifactCredentials :: Lens' JobData (Maybe AWSSessionCredentials)

-- | Represents information about a pipeline to a job worker.
--   
--   Includes <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt> for
--   custom jobs.
jobData_pipelineContext :: Lens' JobData (Maybe PipelineContext)

-- | Represents information about the key used to encrypt data in the
--   artifact store, such as an AWS Key Management Service (AWS KMS) key.
jobData_encryptionKey :: Lens' JobData (Maybe EncryptionKey)

-- | Represents information about an action type.
jobData_actionTypeId :: Lens' JobData (Maybe ActionTypeId)

-- | The artifact supplied to the job.
jobData_inputArtifacts :: Lens' JobData (Maybe [Artifact])

-- | Represents information about an action configuration.
jobData_actionConfiguration :: Lens' JobData (Maybe ActionConfiguration)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.JobData.JobData
instance GHC.Show.Show Network.AWS.CodePipeline.Types.JobData.JobData
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.JobData.JobData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.JobData.JobData
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.JobData.JobData
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.JobData.JobData


module Network.AWS.CodePipeline.Types.JobDetails

-- | Represents information about the details of a job.
--   
--   <i>See:</i> <a>newJobDetails</a> smart constructor.
data JobDetails
JobDetails' :: Maybe JobData -> Maybe Text -> Maybe Text -> JobDetails

-- | Represents other information about a job required for a job worker to
--   complete the job.
[$sel:data':JobDetails'] :: JobDetails -> Maybe JobData

-- | The AWS account ID associated with the job.
[$sel:accountId:JobDetails'] :: JobDetails -> Maybe Text

-- | The unique system-generated ID of the job.
[$sel:id:JobDetails'] :: JobDetails -> Maybe Text

-- | Create a value of <a>JobDetails</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':JobDetails'</a>, <a>jobDetails_data</a> - Represents
--   other information about a job required for a job worker to complete
--   the job.
--   
--   <a>$sel:accountId:JobDetails'</a>, <a>jobDetails_accountId</a> - The
--   AWS account ID associated with the job.
--   
--   <a>$sel:id:JobDetails'</a>, <a>jobDetails_id</a> - The unique
--   system-generated ID of the job.
newJobDetails :: JobDetails

-- | Represents other information about a job required for a job worker to
--   complete the job.
jobDetails_data :: Lens' JobDetails (Maybe JobData)

-- | The AWS account ID associated with the job.
jobDetails_accountId :: Lens' JobDetails (Maybe Text)

-- | The unique system-generated ID of the job.
jobDetails_id :: Lens' JobDetails (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.JobDetails.JobDetails
instance GHC.Show.Show Network.AWS.CodePipeline.Types.JobDetails.JobDetails
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.JobDetails.JobDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.JobDetails.JobDetails
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.JobDetails.JobDetails
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.JobDetails.JobDetails


module Network.AWS.CodePipeline.Types.Job

-- | Represents information about a job.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe JobData -> Maybe Text -> Maybe Text -> Maybe Text -> Job

-- | Other data about a job.
[$sel:data':Job'] :: Job -> Maybe JobData

-- | The ID of the AWS account to use when performing the job.
[$sel:accountId:Job'] :: Job -> Maybe Text

-- | The unique system-generated ID of the job.
[$sel:id:Job'] :: Job -> Maybe Text

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Use this
--   number in an AcknowledgeJob request.
[$sel:nonce:Job'] :: Job -> Maybe Text

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':Job'</a>, <a>job_data</a> - Other data about a job.
--   
--   <a>$sel:accountId:Job'</a>, <a>job_accountId</a> - The ID of the AWS
--   account to use when performing the job.
--   
--   <a>$sel:id:Job'</a>, <a>job_id</a> - The unique system-generated ID of
--   the job.
--   
--   <a>$sel:nonce:Job'</a>, <a>job_nonce</a> - A system-generated random
--   number that AWS CodePipeline uses to ensure that the job is being
--   worked on by only one job worker. Use this number in an AcknowledgeJob
--   request.
newJob :: Job

-- | Other data about a job.
job_data :: Lens' Job (Maybe JobData)

-- | The ID of the AWS account to use when performing the job.
job_accountId :: Lens' Job (Maybe Text)

-- | The unique system-generated ID of the job.
job_id :: Lens' Job (Maybe Text)

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Use this
--   number in an AcknowledgeJob request.
job_nonce :: Lens' Job (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.Job.Job
instance GHC.Show.Show Network.AWS.CodePipeline.Types.Job.Job
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.Job.Job
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.Job.Job
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.Job.Job
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.Job.Job


module Network.AWS.CodePipeline.Types.StageDeclaration

-- | Represents information about a stage and its definition.
--   
--   <i>See:</i> <a>newStageDeclaration</a> smart constructor.
data StageDeclaration
StageDeclaration' :: Maybe [BlockerDeclaration] -> Text -> [ActionDeclaration] -> StageDeclaration

-- | Reserved for future use.
[$sel:blockers:StageDeclaration'] :: StageDeclaration -> Maybe [BlockerDeclaration]

-- | The name of the stage.
[$sel:name:StageDeclaration'] :: StageDeclaration -> Text

-- | The actions included in a stage.
[$sel:actions:StageDeclaration'] :: StageDeclaration -> [ActionDeclaration]

-- | Create a value of <a>StageDeclaration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockers:StageDeclaration'</a>,
--   <a>stageDeclaration_blockers</a> - Reserved for future use.
--   
--   <a>$sel:name:StageDeclaration'</a>, <a>stageDeclaration_name</a> - The
--   name of the stage.
--   
--   <a>$sel:actions:StageDeclaration'</a>, <a>stageDeclaration_actions</a>
--   - The actions included in a stage.
newStageDeclaration :: Text -> StageDeclaration

-- | Reserved for future use.
stageDeclaration_blockers :: Lens' StageDeclaration (Maybe [BlockerDeclaration])

-- | The name of the stage.
stageDeclaration_name :: Lens' StageDeclaration Text

-- | The actions included in a stage.
stageDeclaration_actions :: Lens' StageDeclaration [ActionDeclaration]
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.StageDeclaration.StageDeclaration
instance GHC.Show.Show Network.AWS.CodePipeline.Types.StageDeclaration.StageDeclaration
instance GHC.Read.Read Network.AWS.CodePipeline.Types.StageDeclaration.StageDeclaration
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.StageDeclaration.StageDeclaration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.StageDeclaration.StageDeclaration
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.StageDeclaration.StageDeclaration
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.StageDeclaration.StageDeclaration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.StageDeclaration.StageDeclaration


module Network.AWS.CodePipeline.Types.PipelineDeclaration

-- | Represents the structure of actions and stages to be performed in the
--   pipeline.
--   
--   <i>See:</i> <a>newPipelineDeclaration</a> smart constructor.
data PipelineDeclaration
PipelineDeclaration' :: Maybe (HashMap Text ArtifactStore) -> Maybe ArtifactStore -> Maybe Natural -> Text -> Text -> [StageDeclaration] -> PipelineDeclaration

-- | A mapping of <tt>artifactStore</tt> objects and their corresponding
--   AWS Regions. There must be an artifact store for the pipeline Region
--   and for each cross-region action in the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
[$sel:artifactStores:PipelineDeclaration'] :: PipelineDeclaration -> Maybe (HashMap Text ArtifactStore)

-- | Represents information about the S3 bucket where artifacts are stored
--   for the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
[$sel:artifactStore:PipelineDeclaration'] :: PipelineDeclaration -> Maybe ArtifactStore

-- | The version number of the pipeline. A new pipeline always has a
--   version number of 1. This number is incremented when a pipeline is
--   updated.
[$sel:version:PipelineDeclaration'] :: PipelineDeclaration -> Maybe Natural

-- | The name of the pipeline.
[$sel:name:PipelineDeclaration'] :: PipelineDeclaration -> Text

-- | The Amazon Resource Name (ARN) for AWS CodePipeline to use to either
--   perform actions with no <tt>actionRoleArn</tt>, or to use to assume
--   roles for actions with an <tt>actionRoleArn</tt>.
[$sel:roleArn:PipelineDeclaration'] :: PipelineDeclaration -> Text

-- | The stage in which to perform the action.
[$sel:stages:PipelineDeclaration'] :: PipelineDeclaration -> [StageDeclaration]

-- | Create a value of <a>PipelineDeclaration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:artifactStores:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_artifactStores</a> - A mapping of
--   <tt>artifactStore</tt> objects and their corresponding AWS Regions.
--   There must be an artifact store for the pipeline Region and for each
--   cross-region action in the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
--   
--   <a>$sel:artifactStore:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_artifactStore</a> - Represents information
--   about the S3 bucket where artifacts are stored for the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
--   
--   <a>$sel:version:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_version</a> - The version number of the
--   pipeline. A new pipeline always has a version number of 1. This number
--   is incremented when a pipeline is updated.
--   
--   <a>$sel:name:PipelineDeclaration'</a>, <a>pipelineDeclaration_name</a>
--   - The name of the pipeline.
--   
--   <a>$sel:roleArn:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_roleArn</a> - The Amazon Resource Name (ARN)
--   for AWS CodePipeline to use to either perform actions with no
--   <tt>actionRoleArn</tt>, or to use to assume roles for actions with an
--   <tt>actionRoleArn</tt>.
--   
--   <a>$sel:stages:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_stages</a> - The stage in which to perform the
--   action.
newPipelineDeclaration :: Text -> Text -> PipelineDeclaration

-- | A mapping of <tt>artifactStore</tt> objects and their corresponding
--   AWS Regions. There must be an artifact store for the pipeline Region
--   and for each cross-region action in the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
pipelineDeclaration_artifactStores :: Lens' PipelineDeclaration (Maybe (HashMap Text ArtifactStore))

-- | Represents information about the S3 bucket where artifacts are stored
--   for the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
pipelineDeclaration_artifactStore :: Lens' PipelineDeclaration (Maybe ArtifactStore)

-- | The version number of the pipeline. A new pipeline always has a
--   version number of 1. This number is incremented when a pipeline is
--   updated.
pipelineDeclaration_version :: Lens' PipelineDeclaration (Maybe Natural)

-- | The name of the pipeline.
pipelineDeclaration_name :: Lens' PipelineDeclaration Text

-- | The Amazon Resource Name (ARN) for AWS CodePipeline to use to either
--   perform actions with no <tt>actionRoleArn</tt>, or to use to assume
--   roles for actions with an <tt>actionRoleArn</tt>.
pipelineDeclaration_roleArn :: Lens' PipelineDeclaration Text

-- | The stage in which to perform the action.
pipelineDeclaration_stages :: Lens' PipelineDeclaration [StageDeclaration]
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.PipelineDeclaration.PipelineDeclaration
instance GHC.Show.Show Network.AWS.CodePipeline.Types.PipelineDeclaration.PipelineDeclaration
instance GHC.Read.Read Network.AWS.CodePipeline.Types.PipelineDeclaration.PipelineDeclaration
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.PipelineDeclaration.PipelineDeclaration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.PipelineDeclaration.PipelineDeclaration
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.PipelineDeclaration.PipelineDeclaration
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.PipelineDeclaration.PipelineDeclaration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.PipelineDeclaration.PipelineDeclaration


module Network.AWS.CodePipeline.Types.StageExecutionStatus
newtype StageExecutionStatus
StageExecutionStatus' :: Text -> StageExecutionStatus
[fromStageExecutionStatus] :: StageExecutionStatus -> Text
pattern StageExecutionStatus_Cancelled :: StageExecutionStatus
pattern StageExecutionStatus_Failed :: StageExecutionStatus
pattern StageExecutionStatus_InProgress :: StageExecutionStatus
pattern StageExecutionStatus_Stopped :: StageExecutionStatus
pattern StageExecutionStatus_Stopping :: StageExecutionStatus
pattern StageExecutionStatus_Succeeded :: StageExecutionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance GHC.Read.Read Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus
instance GHC.Show.Show Network.AWS.CodePipeline.Types.StageExecutionStatus.StageExecutionStatus


module Network.AWS.CodePipeline.Types.StageExecution

-- | Represents information about the run of a stage.
--   
--   <i>See:</i> <a>newStageExecution</a> smart constructor.
data StageExecution
StageExecution' :: Text -> StageExecutionStatus -> StageExecution

-- | The ID of the pipeline execution associated with the stage.
[$sel:pipelineExecutionId:StageExecution'] :: StageExecution -> Text

-- | The status of the stage, or for a completed stage, the last status of
--   the stage.
--   
--   A status of cancelled means that the pipeline’s definition was updated
--   before the stage execution could be completed.
[$sel:status:StageExecution'] :: StageExecution -> StageExecutionStatus

-- | Create a value of <a>StageExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecutionId:StageExecution'</a>,
--   <a>stageExecution_pipelineExecutionId</a> - The ID of the pipeline
--   execution associated with the stage.
--   
--   <a>$sel:status:StageExecution'</a>, <a>stageExecution_status</a> - The
--   status of the stage, or for a completed stage, the last status of the
--   stage.
--   
--   A status of cancelled means that the pipeline’s definition was updated
--   before the stage execution could be completed.
newStageExecution :: Text -> StageExecutionStatus -> StageExecution

-- | The ID of the pipeline execution associated with the stage.
stageExecution_pipelineExecutionId :: Lens' StageExecution Text

-- | The status of the stage, or for a completed stage, the last status of
--   the stage.
--   
--   A status of cancelled means that the pipeline’s definition was updated
--   before the stage execution could be completed.
stageExecution_status :: Lens' StageExecution StageExecutionStatus
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.StageExecution.StageExecution
instance GHC.Show.Show Network.AWS.CodePipeline.Types.StageExecution.StageExecution
instance GHC.Read.Read Network.AWS.CodePipeline.Types.StageExecution.StageExecution
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.StageExecution.StageExecution
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.StageExecution.StageExecution
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.StageExecution.StageExecution
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.StageExecution.StageExecution


module Network.AWS.CodePipeline.Types.StageRetryMode
newtype StageRetryMode
StageRetryMode' :: Text -> StageRetryMode
[fromStageRetryMode] :: StageRetryMode -> Text
pattern StageRetryMode_FAILED_ACTIONS :: StageRetryMode
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance GHC.Read.Read Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode
instance GHC.Show.Show Network.AWS.CodePipeline.Types.StageRetryMode.StageRetryMode


module Network.AWS.CodePipeline.Types.StageTransitionType
newtype StageTransitionType
StageTransitionType' :: Text -> StageTransitionType
[fromStageTransitionType] :: StageTransitionType -> Text
pattern StageTransitionType_Inbound :: StageTransitionType
pattern StageTransitionType_Outbound :: StageTransitionType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance GHC.Read.Read Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType
instance GHC.Show.Show Network.AWS.CodePipeline.Types.StageTransitionType.StageTransitionType


module Network.AWS.CodePipeline.Types.StopExecutionTrigger

-- | The interaction that stopped a pipeline execution.
--   
--   <i>See:</i> <a>newStopExecutionTrigger</a> smart constructor.
data StopExecutionTrigger
StopExecutionTrigger' :: Maybe Text -> StopExecutionTrigger

-- | The user-specified reason the pipeline was stopped.
[$sel:reason:StopExecutionTrigger'] :: StopExecutionTrigger -> Maybe Text

-- | Create a value of <a>StopExecutionTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:StopExecutionTrigger'</a>,
--   <a>stopExecutionTrigger_reason</a> - The user-specified reason the
--   pipeline was stopped.
newStopExecutionTrigger :: StopExecutionTrigger

-- | The user-specified reason the pipeline was stopped.
stopExecutionTrigger_reason :: Lens' StopExecutionTrigger (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.StopExecutionTrigger.StopExecutionTrigger
instance GHC.Show.Show Network.AWS.CodePipeline.Types.StopExecutionTrigger.StopExecutionTrigger
instance GHC.Read.Read Network.AWS.CodePipeline.Types.StopExecutionTrigger.StopExecutionTrigger
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.StopExecutionTrigger.StopExecutionTrigger
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.StopExecutionTrigger.StopExecutionTrigger
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.StopExecutionTrigger.StopExecutionTrigger
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.StopExecutionTrigger.StopExecutionTrigger


module Network.AWS.CodePipeline.Types.Tag

-- | A tag is a key-value pair that is used to manage the resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag's key.
[$sel:key:Tag'] :: Tag -> Text

-- | The tag's value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Text -> Text -> Tag

-- | The tag's key.
tag_key :: Lens' Tag Text

-- | The tag's value.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.CodePipeline.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.CodePipeline.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.Tag.Tag


module Network.AWS.CodePipeline.Types.ThirdPartyJob

-- | A response to a <tt>PollForThirdPartyJobs</tt> request returned by AWS
--   CodePipeline when there is a job to be worked on by a partner action.
--   
--   <i>See:</i> <a>newThirdPartyJob</a> smart constructor.
data ThirdPartyJob
ThirdPartyJob' :: Maybe Text -> Maybe Text -> ThirdPartyJob

-- | The <tt>clientToken</tt> portion of the <tt>clientId</tt> and
--   <tt>clientToken</tt> pair used to verify that the calling entity is
--   allowed access to the job and its details.
[$sel:clientId:ThirdPartyJob'] :: ThirdPartyJob -> Maybe Text

-- | The identifier used to identify the job in AWS CodePipeline.
[$sel:jobId:ThirdPartyJob'] :: ThirdPartyJob -> Maybe Text

-- | Create a value of <a>ThirdPartyJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:ThirdPartyJob'</a>, <a>thirdPartyJob_clientId</a> -
--   The <tt>clientToken</tt> portion of the <tt>clientId</tt> and
--   <tt>clientToken</tt> pair used to verify that the calling entity is
--   allowed access to the job and its details.
--   
--   <a>$sel:jobId:ThirdPartyJob'</a>, <a>thirdPartyJob_jobId</a> - The
--   identifier used to identify the job in AWS CodePipeline.
newThirdPartyJob :: ThirdPartyJob

-- | The <tt>clientToken</tt> portion of the <tt>clientId</tt> and
--   <tt>clientToken</tt> pair used to verify that the calling entity is
--   allowed access to the job and its details.
thirdPartyJob_clientId :: Lens' ThirdPartyJob (Maybe Text)

-- | The identifier used to identify the job in AWS CodePipeline.
thirdPartyJob_jobId :: Lens' ThirdPartyJob (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ThirdPartyJob.ThirdPartyJob
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ThirdPartyJob.ThirdPartyJob
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ThirdPartyJob.ThirdPartyJob
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ThirdPartyJob.ThirdPartyJob
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ThirdPartyJob.ThirdPartyJob
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ThirdPartyJob.ThirdPartyJob
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ThirdPartyJob.ThirdPartyJob


module Network.AWS.CodePipeline.Types.ThirdPartyJobData

-- | Represents information about the job data for a partner action.
--   
--   <i>See:</i> <a>newThirdPartyJobData</a> smart constructor.
data ThirdPartyJobData
ThirdPartyJobData' :: Maybe Text -> Maybe [Artifact] -> Maybe (Sensitive AWSSessionCredentials) -> Maybe PipelineContext -> Maybe EncryptionKey -> Maybe ActionTypeId -> Maybe [Artifact] -> Maybe ActionConfiguration -> ThirdPartyJobData

-- | A system-generated token, such as a AWS CodeDeploy deployment ID, that
--   a job requires to continue the job asynchronously.
[$sel:continuationToken:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe Text

-- | The name of the artifact that is the result of the action, if any.
--   This name might be system-generated, such as "MyBuiltApp", or it might
--   be defined by the user when the action is created.
[$sel:outputArtifacts:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe [Artifact]

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifact for the pipeline in AWS CodePipeline.
[$sel:artifactCredentials:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe (Sensitive AWSSessionCredentials)

-- | Represents information about a pipeline to a job worker.
--   
--   Does not include <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt>
--   for ThirdParty jobs.
[$sel:pipelineContext:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe PipelineContext

-- | The encryption key used to encrypt and decrypt data in the artifact
--   store for the pipeline, such as an AWS Key Management Service (AWS
--   KMS) key. This is optional and might not be present.
[$sel:encryptionKey:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe EncryptionKey

-- | Represents information about an action type.
[$sel:actionTypeId:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe ActionTypeId

-- | The name of the artifact that is worked on by the action, if any. This
--   name might be system-generated, such as "MyApp", or it might be
--   defined by the user when the action is created. The input artifact
--   name must match the name of an output artifact generated by an action
--   in an earlier action or stage of the pipeline.
[$sel:inputArtifacts:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe [Artifact]

-- | Represents information about an action configuration.
[$sel:actionConfiguration:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe ActionConfiguration

-- | Create a value of <a>ThirdPartyJobData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:continuationToken:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_continuationToken</a> - A system-generated token,
--   such as a AWS CodeDeploy deployment ID, that a job requires to
--   continue the job asynchronously.
--   
--   <a>$sel:outputArtifacts:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_outputArtifacts</a> - The name of the artifact
--   that is the result of the action, if any. This name might be
--   system-generated, such as "MyBuiltApp", or it might be defined by the
--   user when the action is created.
--   
--   <a>$sel:artifactCredentials:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_artifactCredentials</a> - Represents an AWS
--   session credentials object. These credentials are temporary
--   credentials that are issued by AWS Secure Token Service (STS). They
--   can be used to access input and output artifacts in the S3 bucket used
--   to store artifact for the pipeline in AWS CodePipeline.
--   
--   <a>$sel:pipelineContext:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_pipelineContext</a> - Represents information
--   about a pipeline to a job worker.
--   
--   Does not include <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt>
--   for ThirdParty jobs.
--   
--   <a>$sel:encryptionKey:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_encryptionKey</a> - The encryption key used to
--   encrypt and decrypt data in the artifact store for the pipeline, such
--   as an AWS Key Management Service (AWS KMS) key. This is optional and
--   might not be present.
--   
--   <a>$sel:actionTypeId:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_actionTypeId</a> - Represents information about
--   an action type.
--   
--   <a>$sel:inputArtifacts:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_inputArtifacts</a> - The name of the artifact
--   that is worked on by the action, if any. This name might be
--   system-generated, such as "MyApp", or it might be defined by the user
--   when the action is created. The input artifact name must match the
--   name of an output artifact generated by an action in an earlier action
--   or stage of the pipeline.
--   
--   <a>$sel:actionConfiguration:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_actionConfiguration</a> - Represents information
--   about an action configuration.
newThirdPartyJobData :: ThirdPartyJobData

-- | A system-generated token, such as a AWS CodeDeploy deployment ID, that
--   a job requires to continue the job asynchronously.
thirdPartyJobData_continuationToken :: Lens' ThirdPartyJobData (Maybe Text)

-- | The name of the artifact that is the result of the action, if any.
--   This name might be system-generated, such as "MyBuiltApp", or it might
--   be defined by the user when the action is created.
thirdPartyJobData_outputArtifacts :: Lens' ThirdPartyJobData (Maybe [Artifact])

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifact for the pipeline in AWS CodePipeline.
thirdPartyJobData_artifactCredentials :: Lens' ThirdPartyJobData (Maybe AWSSessionCredentials)

-- | Represents information about a pipeline to a job worker.
--   
--   Does not include <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt>
--   for ThirdParty jobs.
thirdPartyJobData_pipelineContext :: Lens' ThirdPartyJobData (Maybe PipelineContext)

-- | The encryption key used to encrypt and decrypt data in the artifact
--   store for the pipeline, such as an AWS Key Management Service (AWS
--   KMS) key. This is optional and might not be present.
thirdPartyJobData_encryptionKey :: Lens' ThirdPartyJobData (Maybe EncryptionKey)

-- | Represents information about an action type.
thirdPartyJobData_actionTypeId :: Lens' ThirdPartyJobData (Maybe ActionTypeId)

-- | The name of the artifact that is worked on by the action, if any. This
--   name might be system-generated, such as "MyApp", or it might be
--   defined by the user when the action is created. The input artifact
--   name must match the name of an output artifact generated by an action
--   in an earlier action or stage of the pipeline.
thirdPartyJobData_inputArtifacts :: Lens' ThirdPartyJobData (Maybe [Artifact])

-- | Represents information about an action configuration.
thirdPartyJobData_actionConfiguration :: Lens' ThirdPartyJobData (Maybe ActionConfiguration)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ThirdPartyJobData.ThirdPartyJobData
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ThirdPartyJobData.ThirdPartyJobData
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ThirdPartyJobData.ThirdPartyJobData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ThirdPartyJobData.ThirdPartyJobData
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ThirdPartyJobData.ThirdPartyJobData
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ThirdPartyJobData.ThirdPartyJobData


module Network.AWS.CodePipeline.Types.ThirdPartyJobDetails

-- | The details of a job sent in response to a
--   <tt>GetThirdPartyJobDetails</tt> request.
--   
--   <i>See:</i> <a>newThirdPartyJobDetails</a> smart constructor.
data ThirdPartyJobDetails
ThirdPartyJobDetails' :: Maybe ThirdPartyJobData -> Maybe Text -> Maybe Text -> ThirdPartyJobDetails

-- | The data to be returned by the third party job worker.
[$sel:data':ThirdPartyJobDetails'] :: ThirdPartyJobDetails -> Maybe ThirdPartyJobData

-- | The identifier used to identify the job details in AWS CodePipeline.
[$sel:id:ThirdPartyJobDetails'] :: ThirdPartyJobDetails -> Maybe Text

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Use this
--   number in an AcknowledgeThirdPartyJob request.
[$sel:nonce:ThirdPartyJobDetails'] :: ThirdPartyJobDetails -> Maybe Text

-- | Create a value of <a>ThirdPartyJobDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':ThirdPartyJobDetails'</a>,
--   <a>thirdPartyJobDetails_data</a> - The data to be returned by the
--   third party job worker.
--   
--   <a>$sel:id:ThirdPartyJobDetails'</a>, <a>thirdPartyJobDetails_id</a> -
--   The identifier used to identify the job details in AWS CodePipeline.
--   
--   <a>$sel:nonce:ThirdPartyJobDetails'</a>,
--   <a>thirdPartyJobDetails_nonce</a> - A system-generated random number
--   that AWS CodePipeline uses to ensure that the job is being worked on
--   by only one job worker. Use this number in an AcknowledgeThirdPartyJob
--   request.
newThirdPartyJobDetails :: ThirdPartyJobDetails

-- | The data to be returned by the third party job worker.
thirdPartyJobDetails_data :: Lens' ThirdPartyJobDetails (Maybe ThirdPartyJobData)

-- | The identifier used to identify the job details in AWS CodePipeline.
thirdPartyJobDetails_id :: Lens' ThirdPartyJobDetails (Maybe Text)

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Use this
--   number in an AcknowledgeThirdPartyJob request.
thirdPartyJobDetails_nonce :: Lens' ThirdPartyJobDetails (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ThirdPartyJobDetails.ThirdPartyJobDetails
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ThirdPartyJobDetails.ThirdPartyJobDetails
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ThirdPartyJobDetails.ThirdPartyJobDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ThirdPartyJobDetails.ThirdPartyJobDetails
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ThirdPartyJobDetails.ThirdPartyJobDetails
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ThirdPartyJobDetails.ThirdPartyJobDetails


module Network.AWS.CodePipeline.Types.TransitionState

-- | Represents information about the state of transitions between one
--   stage and another stage.
--   
--   <i>See:</i> <a>newTransitionState</a> smart constructor.
data TransitionState
TransitionState' :: Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> TransitionState

-- | Whether the transition between stages is enabled (true) or disabled
--   (false).
[$sel:enabled:TransitionState'] :: TransitionState -> Maybe Bool

-- | The user-specified reason why the transition between two stages of a
--   pipeline was disabled.
[$sel:disabledReason:TransitionState'] :: TransitionState -> Maybe Text

-- | The timestamp when the transition state was last changed.
[$sel:lastChangedAt:TransitionState'] :: TransitionState -> Maybe POSIX

-- | The ID of the user who last changed the transition state.
[$sel:lastChangedBy:TransitionState'] :: TransitionState -> Maybe Text

-- | Create a value of <a>TransitionState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:TransitionState'</a>, <a>transitionState_enabled</a> -
--   Whether the transition between stages is enabled (true) or disabled
--   (false).
--   
--   <a>$sel:disabledReason:TransitionState'</a>,
--   <a>transitionState_disabledReason</a> - The user-specified reason why
--   the transition between two stages of a pipeline was disabled.
--   
--   <a>$sel:lastChangedAt:TransitionState'</a>,
--   <a>transitionState_lastChangedAt</a> - The timestamp when the
--   transition state was last changed.
--   
--   <a>$sel:lastChangedBy:TransitionState'</a>,
--   <a>transitionState_lastChangedBy</a> - The ID of the user who last
--   changed the transition state.
newTransitionState :: TransitionState

-- | Whether the transition between stages is enabled (true) or disabled
--   (false).
transitionState_enabled :: Lens' TransitionState (Maybe Bool)

-- | The user-specified reason why the transition between two stages of a
--   pipeline was disabled.
transitionState_disabledReason :: Lens' TransitionState (Maybe Text)

-- | The timestamp when the transition state was last changed.
transitionState_lastChangedAt :: Lens' TransitionState (Maybe UTCTime)

-- | The ID of the user who last changed the transition state.
transitionState_lastChangedBy :: Lens' TransitionState (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.TransitionState.TransitionState
instance GHC.Show.Show Network.AWS.CodePipeline.Types.TransitionState.TransitionState
instance GHC.Read.Read Network.AWS.CodePipeline.Types.TransitionState.TransitionState
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.TransitionState.TransitionState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.TransitionState.TransitionState
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.TransitionState.TransitionState
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.TransitionState.TransitionState


module Network.AWS.CodePipeline.Types.StageState

-- | Represents information about the state of the stage.
--   
--   <i>See:</i> <a>newStageState</a> smart constructor.
data StageState
StageState' :: Maybe StageExecution -> Maybe TransitionState -> Maybe [ActionState] -> Maybe Text -> Maybe StageExecution -> StageState
[$sel:inboundExecution:StageState'] :: StageState -> Maybe StageExecution

-- | The state of the inbound transition, which is either enabled or
--   disabled.
[$sel:inboundTransitionState:StageState'] :: StageState -> Maybe TransitionState

-- | The state of the stage.
[$sel:actionStates:StageState'] :: StageState -> Maybe [ActionState]

-- | The name of the stage.
[$sel:stageName:StageState'] :: StageState -> Maybe Text

-- | Information about the latest execution in the stage, including its ID
--   and status.
[$sel:latestExecution:StageState'] :: StageState -> Maybe StageExecution

-- | Create a value of <a>StageState</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inboundExecution:StageState'</a>,
--   <a>stageState_inboundExecution</a> - Undocumented member.
--   
--   <a>$sel:inboundTransitionState:StageState'</a>,
--   <a>stageState_inboundTransitionState</a> - The state of the inbound
--   transition, which is either enabled or disabled.
--   
--   <a>$sel:actionStates:StageState'</a>, <a>stageState_actionStates</a> -
--   The state of the stage.
--   
--   <a>$sel:stageName:StageState'</a>, <a>stageState_stageName</a> - The
--   name of the stage.
--   
--   <a>$sel:latestExecution:StageState'</a>,
--   <a>stageState_latestExecution</a> - Information about the latest
--   execution in the stage, including its ID and status.
newStageState :: StageState

-- | Undocumented member.
stageState_inboundExecution :: Lens' StageState (Maybe StageExecution)

-- | The state of the inbound transition, which is either enabled or
--   disabled.
stageState_inboundTransitionState :: Lens' StageState (Maybe TransitionState)

-- | The state of the stage.
stageState_actionStates :: Lens' StageState (Maybe [ActionState])

-- | The name of the stage.
stageState_stageName :: Lens' StageState (Maybe Text)

-- | Information about the latest execution in the stage, including its ID
--   and status.
stageState_latestExecution :: Lens' StageState (Maybe StageExecution)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.StageState.StageState
instance GHC.Show.Show Network.AWS.CodePipeline.Types.StageState.StageState
instance GHC.Read.Read Network.AWS.CodePipeline.Types.StageState.StageState
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.StageState.StageState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.StageState.StageState
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.StageState.StageState
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.StageState.StageState


module Network.AWS.CodePipeline.Types.TriggerType
newtype TriggerType
TriggerType' :: Text -> TriggerType
[fromTriggerType] :: TriggerType -> Text
pattern TriggerType_CloudWatchEvent :: TriggerType
pattern TriggerType_CreatePipeline :: TriggerType
pattern TriggerType_PollForSourceChanges :: TriggerType
pattern TriggerType_PutActionRevision :: TriggerType
pattern TriggerType_StartPipelineExecution :: TriggerType
pattern TriggerType_Webhook :: TriggerType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance GHC.Read.Read Network.AWS.CodePipeline.Types.TriggerType.TriggerType
instance GHC.Show.Show Network.AWS.CodePipeline.Types.TriggerType.TriggerType


module Network.AWS.CodePipeline.Types.ExecutionTrigger

-- | The interaction or event that started a pipeline execution.
--   
--   <i>See:</i> <a>newExecutionTrigger</a> smart constructor.
data ExecutionTrigger
ExecutionTrigger' :: Maybe TriggerType -> Maybe Text -> ExecutionTrigger

-- | The type of change-detection method, command, or user interaction that
--   started a pipeline execution.
[$sel:triggerType:ExecutionTrigger'] :: ExecutionTrigger -> Maybe TriggerType

-- | Detail related to the event that started a pipeline execution, such as
--   the webhook ARN of the webhook that triggered the pipeline execution
--   or the user ARN for a user-initiated <tt>start-pipeline-execution</tt>
--   CLI command.
[$sel:triggerDetail:ExecutionTrigger'] :: ExecutionTrigger -> Maybe Text

-- | Create a value of <a>ExecutionTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerType:ExecutionTrigger'</a>,
--   <a>executionTrigger_triggerType</a> - The type of change-detection
--   method, command, or user interaction that started a pipeline
--   execution.
--   
--   <a>$sel:triggerDetail:ExecutionTrigger'</a>,
--   <a>executionTrigger_triggerDetail</a> - Detail related to the event
--   that started a pipeline execution, such as the webhook ARN of the
--   webhook that triggered the pipeline execution or the user ARN for a
--   user-initiated <tt>start-pipeline-execution</tt> CLI command.
newExecutionTrigger :: ExecutionTrigger

-- | The type of change-detection method, command, or user interaction that
--   started a pipeline execution.
executionTrigger_triggerType :: Lens' ExecutionTrigger (Maybe TriggerType)

-- | Detail related to the event that started a pipeline execution, such as
--   the webhook ARN of the webhook that triggered the pipeline execution
--   or the user ARN for a user-initiated <tt>start-pipeline-execution</tt>
--   CLI command.
executionTrigger_triggerDetail :: Lens' ExecutionTrigger (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ExecutionTrigger.ExecutionTrigger
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ExecutionTrigger.ExecutionTrigger
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ExecutionTrigger.ExecutionTrigger
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ExecutionTrigger.ExecutionTrigger
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ExecutionTrigger.ExecutionTrigger
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ExecutionTrigger.ExecutionTrigger
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ExecutionTrigger.ExecutionTrigger


module Network.AWS.CodePipeline.Types.PipelineExecutionSummary

-- | Summary information about a pipeline execution.
--   
--   <i>See:</i> <a>newPipelineExecutionSummary</a> smart constructor.
data PipelineExecutionSummary
PipelineExecutionSummary' :: Maybe PipelineExecutionStatus -> Maybe POSIX -> Maybe StopExecutionTrigger -> Maybe Text -> Maybe [SourceRevision] -> Maybe ExecutionTrigger -> Maybe POSIX -> PipelineExecutionSummary

-- | The status of the pipeline execution.
--   
--   <ul>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
[$sel:status:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe PipelineExecutionStatus

-- | The date and time when the pipeline execution began, in timestamp
--   format.
[$sel:startTime:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe POSIX

-- | The interaction that stopped a pipeline execution.
[$sel:stopTrigger:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe StopExecutionTrigger

-- | The ID of the pipeline execution.
[$sel:pipelineExecutionId:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe Text

-- | A list of the source artifact revisions that initiated a pipeline
--   execution.
[$sel:sourceRevisions:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe [SourceRevision]

-- | The interaction or event that started a pipeline execution, such as
--   automated change detection or a <tt>StartPipelineExecution</tt> API
--   call.
[$sel:trigger:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe ExecutionTrigger

-- | The date and time of the last change to the pipeline execution, in
--   timestamp format.
[$sel:lastUpdateTime:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe POSIX

-- | Create a value of <a>PipelineExecutionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_status</a> - The status of the pipeline
--   execution.
--   
--   <ul>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
--   
--   <a>$sel:startTime:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_startTime</a> - The date and time when the
--   pipeline execution began, in timestamp format.
--   
--   <a>$sel:stopTrigger:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_stopTrigger</a> - The interaction that
--   stopped a pipeline execution.
--   
--   <a>$sel:pipelineExecutionId:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_pipelineExecutionId</a> - The ID of the
--   pipeline execution.
--   
--   <a>$sel:sourceRevisions:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_sourceRevisions</a> - A list of the source
--   artifact revisions that initiated a pipeline execution.
--   
--   <a>$sel:trigger:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_trigger</a> - The interaction or event
--   that started a pipeline execution, such as automated change detection
--   or a <tt>StartPipelineExecution</tt> API call.
--   
--   <a>$sel:lastUpdateTime:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_lastUpdateTime</a> - The date and time of
--   the last change to the pipeline execution, in timestamp format.
newPipelineExecutionSummary :: PipelineExecutionSummary

-- | The status of the pipeline execution.
--   
--   <ul>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
pipelineExecutionSummary_status :: Lens' PipelineExecutionSummary (Maybe PipelineExecutionStatus)

-- | The date and time when the pipeline execution began, in timestamp
--   format.
pipelineExecutionSummary_startTime :: Lens' PipelineExecutionSummary (Maybe UTCTime)

-- | The interaction that stopped a pipeline execution.
pipelineExecutionSummary_stopTrigger :: Lens' PipelineExecutionSummary (Maybe StopExecutionTrigger)

-- | The ID of the pipeline execution.
pipelineExecutionSummary_pipelineExecutionId :: Lens' PipelineExecutionSummary (Maybe Text)

-- | A list of the source artifact revisions that initiated a pipeline
--   execution.
pipelineExecutionSummary_sourceRevisions :: Lens' PipelineExecutionSummary (Maybe [SourceRevision])

-- | The interaction or event that started a pipeline execution, such as
--   automated change detection or a <tt>StartPipelineExecution</tt> API
--   call.
pipelineExecutionSummary_trigger :: Lens' PipelineExecutionSummary (Maybe ExecutionTrigger)

-- | The date and time of the last change to the pipeline execution, in
--   timestamp format.
pipelineExecutionSummary_lastUpdateTime :: Lens' PipelineExecutionSummary (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.PipelineExecutionSummary.PipelineExecutionSummary
instance GHC.Show.Show Network.AWS.CodePipeline.Types.PipelineExecutionSummary.PipelineExecutionSummary
instance GHC.Read.Read Network.AWS.CodePipeline.Types.PipelineExecutionSummary.PipelineExecutionSummary
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.PipelineExecutionSummary.PipelineExecutionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.PipelineExecutionSummary.PipelineExecutionSummary
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.PipelineExecutionSummary.PipelineExecutionSummary
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.PipelineExecutionSummary.PipelineExecutionSummary


module Network.AWS.CodePipeline.Types.WebhookAuthConfiguration

-- | The authentication applied to incoming webhook trigger requests.
--   
--   <i>See:</i> <a>newWebhookAuthConfiguration</a> smart constructor.
data WebhookAuthConfiguration
WebhookAuthConfiguration' :: Maybe Text -> Maybe Text -> WebhookAuthConfiguration

-- | The property used to configure acceptance of webhooks in an IP address
--   range. For IP, only the <tt>AllowedIPRange</tt> property must be set.
--   This property must be set to a valid CIDR range.
[$sel:allowedIPRange:WebhookAuthConfiguration'] :: WebhookAuthConfiguration -> Maybe Text

-- | The property used to configure GitHub authentication. For GITHUB_HMAC,
--   only the <tt>SecretToken</tt> property must be set.
[$sel:secretToken:WebhookAuthConfiguration'] :: WebhookAuthConfiguration -> Maybe Text

-- | Create a value of <a>WebhookAuthConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowedIPRange:WebhookAuthConfiguration'</a>,
--   <a>webhookAuthConfiguration_allowedIPRange</a> - The property used to
--   configure acceptance of webhooks in an IP address range. For IP, only
--   the <tt>AllowedIPRange</tt> property must be set. This property must
--   be set to a valid CIDR range.
--   
--   <a>$sel:secretToken:WebhookAuthConfiguration'</a>,
--   <a>webhookAuthConfiguration_secretToken</a> - The property used to
--   configure GitHub authentication. For GITHUB_HMAC, only the
--   <tt>SecretToken</tt> property must be set.
newWebhookAuthConfiguration :: WebhookAuthConfiguration

-- | The property used to configure acceptance of webhooks in an IP address
--   range. For IP, only the <tt>AllowedIPRange</tt> property must be set.
--   This property must be set to a valid CIDR range.
webhookAuthConfiguration_allowedIPRange :: Lens' WebhookAuthConfiguration (Maybe Text)

-- | The property used to configure GitHub authentication. For GITHUB_HMAC,
--   only the <tt>SecretToken</tt> property must be set.
webhookAuthConfiguration_secretToken :: Lens' WebhookAuthConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.WebhookAuthConfiguration.WebhookAuthConfiguration
instance GHC.Show.Show Network.AWS.CodePipeline.Types.WebhookAuthConfiguration.WebhookAuthConfiguration
instance GHC.Read.Read Network.AWS.CodePipeline.Types.WebhookAuthConfiguration.WebhookAuthConfiguration
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.WebhookAuthConfiguration.WebhookAuthConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.WebhookAuthConfiguration.WebhookAuthConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.WebhookAuthConfiguration.WebhookAuthConfiguration
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.WebhookAuthConfiguration.WebhookAuthConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.WebhookAuthConfiguration.WebhookAuthConfiguration


module Network.AWS.CodePipeline.Types.WebhookAuthenticationType
newtype WebhookAuthenticationType
WebhookAuthenticationType' :: Text -> WebhookAuthenticationType
[fromWebhookAuthenticationType] :: WebhookAuthenticationType -> Text
pattern WebhookAuthenticationType_GITHUB_HMAC :: WebhookAuthenticationType
pattern WebhookAuthenticationType_IP :: WebhookAuthenticationType
pattern WebhookAuthenticationType_UNAUTHENTICATED :: WebhookAuthenticationType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Network.AWS.Data.Text.ToText Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Network.AWS.Data.Text.FromText Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance GHC.Classes.Ord Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance GHC.Read.Read Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType
instance GHC.Show.Show Network.AWS.CodePipeline.Types.WebhookAuthenticationType.WebhookAuthenticationType


module Network.AWS.CodePipeline.Types.WebhookFilterRule

-- | The event criteria that specify when a webhook notification is sent to
--   your URL.
--   
--   <i>See:</i> <a>newWebhookFilterRule</a> smart constructor.
data WebhookFilterRule
WebhookFilterRule' :: Maybe Text -> Text -> WebhookFilterRule

-- | The value selected by the <tt>JsonPath</tt> expression must match what
--   is supplied in the <tt>MatchEquals</tt> field. Otherwise, the request
--   is ignored. Properties from the target action configuration can be
--   included as placeholders in this value by surrounding the action
--   configuration key with curly brackets. For example, if the value
--   supplied here is "refs/heads/{Branch}" and the target action has an
--   action configuration property called "Branch" with a value of
--   "master", the <tt>MatchEquals</tt> value is evaluated as
--   "refs/heads/master". For a list of action configuration properties for
--   built-in action types, see <a>Pipeline Structure Reference Action
--   Requirements</a>.
[$sel:matchEquals:WebhookFilterRule'] :: WebhookFilterRule -> Maybe Text

-- | A JsonPath expression that is applied to the body/payload of the
--   webhook. The value selected by the JsonPath expression must match the
--   value specified in the <tt>MatchEquals</tt> field. Otherwise, the
--   request is ignored. For more information, see <a>Java JsonPath
--   implementation</a> in GitHub.
[$sel:jsonPath:WebhookFilterRule'] :: WebhookFilterRule -> Text

-- | Create a value of <a>WebhookFilterRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchEquals:WebhookFilterRule'</a>,
--   <a>webhookFilterRule_matchEquals</a> - The value selected by the
--   <tt>JsonPath</tt> expression must match what is supplied in the
--   <tt>MatchEquals</tt> field. Otherwise, the request is ignored.
--   Properties from the target action configuration can be included as
--   placeholders in this value by surrounding the action configuration key
--   with curly brackets. For example, if the value supplied here is
--   "refs/heads/{Branch}" and the target action has an action
--   configuration property called "Branch" with a value of "master", the
--   <tt>MatchEquals</tt> value is evaluated as "refs/heads/master". For a
--   list of action configuration properties for built-in action types, see
--   <a>Pipeline Structure Reference Action Requirements</a>.
--   
--   <a>$sel:jsonPath:WebhookFilterRule'</a>,
--   <a>webhookFilterRule_jsonPath</a> - A JsonPath expression that is
--   applied to the body/payload of the webhook. The value selected by the
--   JsonPath expression must match the value specified in the
--   <tt>MatchEquals</tt> field. Otherwise, the request is ignored. For
--   more information, see <a>Java JsonPath implementation</a> in GitHub.
newWebhookFilterRule :: Text -> WebhookFilterRule

-- | The value selected by the <tt>JsonPath</tt> expression must match what
--   is supplied in the <tt>MatchEquals</tt> field. Otherwise, the request
--   is ignored. Properties from the target action configuration can be
--   included as placeholders in this value by surrounding the action
--   configuration key with curly brackets. For example, if the value
--   supplied here is "refs/heads/{Branch}" and the target action has an
--   action configuration property called "Branch" with a value of
--   "master", the <tt>MatchEquals</tt> value is evaluated as
--   "refs/heads/master". For a list of action configuration properties for
--   built-in action types, see <a>Pipeline Structure Reference Action
--   Requirements</a>.
webhookFilterRule_matchEquals :: Lens' WebhookFilterRule (Maybe Text)

-- | A JsonPath expression that is applied to the body/payload of the
--   webhook. The value selected by the JsonPath expression must match the
--   value specified in the <tt>MatchEquals</tt> field. Otherwise, the
--   request is ignored. For more information, see <a>Java JsonPath
--   implementation</a> in GitHub.
webhookFilterRule_jsonPath :: Lens' WebhookFilterRule Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.WebhookFilterRule.WebhookFilterRule
instance GHC.Show.Show Network.AWS.CodePipeline.Types.WebhookFilterRule.WebhookFilterRule
instance GHC.Read.Read Network.AWS.CodePipeline.Types.WebhookFilterRule.WebhookFilterRule
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.WebhookFilterRule.WebhookFilterRule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.WebhookFilterRule.WebhookFilterRule
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.WebhookFilterRule.WebhookFilterRule
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.WebhookFilterRule.WebhookFilterRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.WebhookFilterRule.WebhookFilterRule


module Network.AWS.CodePipeline.Types.WebhookDefinition

-- | Represents information about a webhook and its definition.
--   
--   <i>See:</i> <a>newWebhookDefinition</a> smart constructor.
data WebhookDefinition
WebhookDefinition' :: Text -> Text -> Text -> [WebhookFilterRule] -> WebhookAuthenticationType -> WebhookAuthConfiguration -> WebhookDefinition

-- | The name of the webhook.
[$sel:name:WebhookDefinition'] :: WebhookDefinition -> Text

-- | The name of the pipeline you want to connect to the webhook.
[$sel:targetPipeline:WebhookDefinition'] :: WebhookDefinition -> Text

-- | The name of the action in a pipeline you want to connect to the
--   webhook. The action must be from the source (first) stage of the
--   pipeline.
[$sel:targetAction:WebhookDefinition'] :: WebhookDefinition -> Text

-- | A list of rules applied to the body/payload sent in the POST request
--   to a webhook URL. All defined rules must pass for the request to be
--   accepted and the pipeline started.
[$sel:filters:WebhookDefinition'] :: WebhookDefinition -> [WebhookFilterRule]

-- | Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.
--   
--   <ul>
--   <li>For information about the authentication scheme implemented by
--   GITHUB_HMAC, see <a>Securing your webhooks</a> on the GitHub Developer
--   website.</li>
--   <li>IP rejects webhooks trigger requests unless they originate from an
--   IP address in the IP range whitelisted in the authentication
--   configuration.</li>
--   <li>UNAUTHENTICATED accepts all webhook trigger requests regardless of
--   origin.</li>
--   </ul>
[$sel:authentication:WebhookDefinition'] :: WebhookDefinition -> WebhookAuthenticationType

-- | Properties that configure the authentication applied to incoming
--   webhook trigger requests. The required properties depend on the
--   authentication type. For GITHUB_HMAC, only the <tt>SecretToken
--   </tt>property must be set. For IP, only the <tt>AllowedIPRange
--   </tt>property must be set to a valid CIDR range. For UNAUTHENTICATED,
--   no properties can be set.
[$sel:authenticationConfiguration:WebhookDefinition'] :: WebhookDefinition -> WebhookAuthConfiguration

-- | Create a value of <a>WebhookDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:WebhookDefinition'</a>, <a>webhookDefinition_name</a> -
--   The name of the webhook.
--   
--   <a>$sel:targetPipeline:WebhookDefinition'</a>,
--   <a>webhookDefinition_targetPipeline</a> - The name of the pipeline you
--   want to connect to the webhook.
--   
--   <a>$sel:targetAction:WebhookDefinition'</a>,
--   <a>webhookDefinition_targetAction</a> - The name of the action in a
--   pipeline you want to connect to the webhook. The action must be from
--   the source (first) stage of the pipeline.
--   
--   <a>$sel:filters:WebhookDefinition'</a>,
--   <a>webhookDefinition_filters</a> - A list of rules applied to the
--   body/payload sent in the POST request to a webhook URL. All defined
--   rules must pass for the request to be accepted and the pipeline
--   started.
--   
--   <a>$sel:authentication:WebhookDefinition'</a>,
--   <a>webhookDefinition_authentication</a> - Supported options are
--   GITHUB_HMAC, IP, and UNAUTHENTICATED.
--   
--   <ul>
--   <li>For information about the authentication scheme implemented by
--   GITHUB_HMAC, see <a>Securing your webhooks</a> on the GitHub Developer
--   website.</li>
--   <li>IP rejects webhooks trigger requests unless they originate from an
--   IP address in the IP range whitelisted in the authentication
--   configuration.</li>
--   <li>UNAUTHENTICATED accepts all webhook trigger requests regardless of
--   origin.</li>
--   </ul>
--   
--   <a>$sel:authenticationConfiguration:WebhookDefinition'</a>,
--   <a>webhookDefinition_authenticationConfiguration</a> - Properties that
--   configure the authentication applied to incoming webhook trigger
--   requests. The required properties depend on the authentication type.
--   For GITHUB_HMAC, only the <tt>SecretToken </tt>property must be set.
--   For IP, only the <tt>AllowedIPRange </tt>property must be set to a
--   valid CIDR range. For UNAUTHENTICATED, no properties can be set.
newWebhookDefinition :: Text -> Text -> Text -> WebhookAuthenticationType -> WebhookAuthConfiguration -> WebhookDefinition

-- | The name of the webhook.
webhookDefinition_name :: Lens' WebhookDefinition Text

-- | The name of the pipeline you want to connect to the webhook.
webhookDefinition_targetPipeline :: Lens' WebhookDefinition Text

-- | The name of the action in a pipeline you want to connect to the
--   webhook. The action must be from the source (first) stage of the
--   pipeline.
webhookDefinition_targetAction :: Lens' WebhookDefinition Text

-- | A list of rules applied to the body/payload sent in the POST request
--   to a webhook URL. All defined rules must pass for the request to be
--   accepted and the pipeline started.
webhookDefinition_filters :: Lens' WebhookDefinition [WebhookFilterRule]

-- | Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.
--   
--   <ul>
--   <li>For information about the authentication scheme implemented by
--   GITHUB_HMAC, see <a>Securing your webhooks</a> on the GitHub Developer
--   website.</li>
--   <li>IP rejects webhooks trigger requests unless they originate from an
--   IP address in the IP range whitelisted in the authentication
--   configuration.</li>
--   <li>UNAUTHENTICATED accepts all webhook trigger requests regardless of
--   origin.</li>
--   </ul>
webhookDefinition_authentication :: Lens' WebhookDefinition WebhookAuthenticationType

-- | Properties that configure the authentication applied to incoming
--   webhook trigger requests. The required properties depend on the
--   authentication type. For GITHUB_HMAC, only the <tt>SecretToken
--   </tt>property must be set. For IP, only the <tt>AllowedIPRange
--   </tt>property must be set to a valid CIDR range. For UNAUTHENTICATED,
--   no properties can be set.
webhookDefinition_authenticationConfiguration :: Lens' WebhookDefinition WebhookAuthConfiguration
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.WebhookDefinition.WebhookDefinition
instance GHC.Show.Show Network.AWS.CodePipeline.Types.WebhookDefinition.WebhookDefinition
instance GHC.Read.Read Network.AWS.CodePipeline.Types.WebhookDefinition.WebhookDefinition
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.WebhookDefinition.WebhookDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.WebhookDefinition.WebhookDefinition
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.WebhookDefinition.WebhookDefinition
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.WebhookDefinition.WebhookDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.Types.WebhookDefinition.WebhookDefinition


module Network.AWS.CodePipeline.Types.ListWebhookItem

-- | The detail returned for each webhook after listing webhooks, such as
--   the webhook URL, the webhook name, and the webhook ARN.
--   
--   <i>See:</i> <a>newListWebhookItem</a> smart constructor.
data ListWebhookItem
ListWebhookItem' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe [Tag] -> WebhookDefinition -> Text -> ListWebhookItem

-- | The Amazon Resource Name (ARN) of the webhook.
[$sel:arn:ListWebhookItem'] :: ListWebhookItem -> Maybe Text

-- | The number code of the error.
[$sel:errorCode:ListWebhookItem'] :: ListWebhookItem -> Maybe Text

-- | The date and time a webhook was last successfully triggered, in
--   timestamp format.
[$sel:lastTriggered:ListWebhookItem'] :: ListWebhookItem -> Maybe POSIX

-- | The text of the error message about the webhook.
[$sel:errorMessage:ListWebhookItem'] :: ListWebhookItem -> Maybe Text

-- | Specifies the tags applied to the webhook.
[$sel:tags:ListWebhookItem'] :: ListWebhookItem -> Maybe [Tag]

-- | The detail returned for each webhook, such as the webhook
--   authentication type and filter rules.
[$sel:definition:ListWebhookItem'] :: ListWebhookItem -> WebhookDefinition

-- | A unique URL generated by CodePipeline. When a POST request is made to
--   this URL, the defined pipeline is started as long as the body of the
--   post request satisfies the defined authentication and filtering
--   conditions. Deleting and re-creating a webhook makes the old URL
--   invalid and generates a new one.
[$sel:url:ListWebhookItem'] :: ListWebhookItem -> Text

-- | Create a value of <a>ListWebhookItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ListWebhookItem'</a>, <a>listWebhookItem_arn</a> - The
--   Amazon Resource Name (ARN) of the webhook.
--   
--   <a>$sel:errorCode:ListWebhookItem'</a>,
--   <a>listWebhookItem_errorCode</a> - The number code of the error.
--   
--   <a>$sel:lastTriggered:ListWebhookItem'</a>,
--   <a>listWebhookItem_lastTriggered</a> - The date and time a webhook was
--   last successfully triggered, in timestamp format.
--   
--   <a>$sel:errorMessage:ListWebhookItem'</a>,
--   <a>listWebhookItem_errorMessage</a> - The text of the error message
--   about the webhook.
--   
--   <a>$sel:tags:ListWebhookItem'</a>, <a>listWebhookItem_tags</a> -
--   Specifies the tags applied to the webhook.
--   
--   <a>$sel:definition:ListWebhookItem'</a>,
--   <a>listWebhookItem_definition</a> - The detail returned for each
--   webhook, such as the webhook authentication type and filter rules.
--   
--   <a>$sel:url:ListWebhookItem'</a>, <a>listWebhookItem_url</a> - A
--   unique URL generated by CodePipeline. When a POST request is made to
--   this URL, the defined pipeline is started as long as the body of the
--   post request satisfies the defined authentication and filtering
--   conditions. Deleting and re-creating a webhook makes the old URL
--   invalid and generates a new one.
newListWebhookItem :: WebhookDefinition -> Text -> ListWebhookItem

-- | The Amazon Resource Name (ARN) of the webhook.
listWebhookItem_arn :: Lens' ListWebhookItem (Maybe Text)

-- | The number code of the error.
listWebhookItem_errorCode :: Lens' ListWebhookItem (Maybe Text)

-- | The date and time a webhook was last successfully triggered, in
--   timestamp format.
listWebhookItem_lastTriggered :: Lens' ListWebhookItem (Maybe UTCTime)

-- | The text of the error message about the webhook.
listWebhookItem_errorMessage :: Lens' ListWebhookItem (Maybe Text)

-- | Specifies the tags applied to the webhook.
listWebhookItem_tags :: Lens' ListWebhookItem (Maybe [Tag])

-- | The detail returned for each webhook, such as the webhook
--   authentication type and filter rules.
listWebhookItem_definition :: Lens' ListWebhookItem WebhookDefinition

-- | A unique URL generated by CodePipeline. When a POST request is made to
--   this URL, the defined pipeline is started as long as the body of the
--   post request satisfies the defined authentication and filtering
--   conditions. Deleting and re-creating a webhook makes the old URL
--   invalid and generates a new one.
listWebhookItem_url :: Lens' ListWebhookItem Text
instance GHC.Generics.Generic Network.AWS.CodePipeline.Types.ListWebhookItem.ListWebhookItem
instance GHC.Show.Show Network.AWS.CodePipeline.Types.ListWebhookItem.ListWebhookItem
instance GHC.Read.Read Network.AWS.CodePipeline.Types.ListWebhookItem.ListWebhookItem
instance GHC.Classes.Eq Network.AWS.CodePipeline.Types.ListWebhookItem.ListWebhookItem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodePipeline.Types.ListWebhookItem.ListWebhookItem
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.Types.ListWebhookItem.ListWebhookItem
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.Types.ListWebhookItem.ListWebhookItem


module Network.AWS.CodePipeline.Types

-- | API version <tt>2015-07-09</tt> of the Amazon CodePipeline SDK
--   configuration.
defaultService :: Service

-- | The client token was specified in an invalid format
_InvalidClientTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The validation was specified in an invalid format.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The nonce was specified in an invalid format.
_InvalidNonceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified action cannot be found.
_ActionNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval request already received a response or has expired.
_InvalidApprovalTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because of an unknown error, exception, or failure.
_RequestFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Unable to stop the pipeline execution. The execution might already be
--   in a <tt>Stopped</tt> state, or it might no longer be in progress.
_PipelineExecutionNotStoppableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Reserved for future use.
_InvalidBlockerDeclarationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exceeded the total size limit for all variables in the pipeline.
_OutputVariablesSizeExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The job state was specified in an invalid format.
_InvalidJobStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tags limit for a resource has been exceeded.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your request cannot be handled because the pipeline is busy handling
--   ongoing activities. Try again later.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The job was specified in an invalid format or cannot be found.
_InvalidJobException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pipeline version was specified in an invalid format or cannot be
--   found.
_PipelineVersionNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Unable to retry. The pipeline structure or stage state might have
--   changed while actions awaited retry, or the stage contains no failed
--   actions.
_StageNotRetryableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pipeline execution was specified in an invalid format or cannot be
--   found, or an execution ID does not belong to the specified pipeline.
_PipelineExecutionNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified authentication type is in an invalid format.
_InvalidWebhookAuthenticationParametersException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified webhook was entered in an invalid format or cannot be
--   found.
_WebhookNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource tags are invalid.
_InvalidTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified action type already exists with a different definition.
_ActionTypeAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified action type cannot be found.
_ActionTypeNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Unable to modify the tag due to a simultaneous update request.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The next token was specified in an invalid format. Make sure that the
--   next token you provide is the token returned by a previous call.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The stage declaration was specified in an invalid format.
_InvalidStageDeclarationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pipeline execution is already in a <tt>Stopping</tt> state. If you
--   already chose to stop and wait, you cannot make that request again.
--   You can choose to stop and abandon now, but be aware that this option
--   can lead to failed tasks or out of sequence tasks. If you already
--   chose to stop and abandon, you cannot make that request again.
_DuplicatedStopRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified event filter rule is in an invalid format.
_InvalidWebhookFilterPatternException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The action declaration was specified in an invalid format.
_InvalidActionDeclarationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The stage was specified in an invalid format or cannot be found.
_StageNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The structure was specified in an invalid format.
_InvalidStructureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The job was specified in an invalid format or cannot be found.
_JobNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval action has already been approved or rejected.
_ApprovalAlreadyCompletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource ARN is invalid.
_InvalidArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified pipeline name is already in use.
_PipelineNameInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pipeline was specified in an invalid format or cannot be found.
_PipelineNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource was specified in an invalid format.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of pipelines associated with the AWS account has exceeded
--   the limit allowed for the account.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The stage has failed in a later run of the pipeline and the
--   pipelineExecutionId associated with the request is out of date.
_NotLatestPipelineExecutionException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ActionCategory
ActionCategory' :: Text -> ActionCategory
[fromActionCategory] :: ActionCategory -> Text
pattern ActionCategory_Approval :: ActionCategory
pattern ActionCategory_Build :: ActionCategory
pattern ActionCategory_Deploy :: ActionCategory
pattern ActionCategory_Invoke :: ActionCategory
pattern ActionCategory_Source :: ActionCategory
pattern ActionCategory_Test :: ActionCategory
newtype ActionConfigurationPropertyType
ActionConfigurationPropertyType' :: Text -> ActionConfigurationPropertyType
[fromActionConfigurationPropertyType] :: ActionConfigurationPropertyType -> Text
pattern ActionConfigurationPropertyType_Boolean :: ActionConfigurationPropertyType
pattern ActionConfigurationPropertyType_Number :: ActionConfigurationPropertyType
pattern ActionConfigurationPropertyType_String :: ActionConfigurationPropertyType
newtype ActionExecutionStatus
ActionExecutionStatus' :: Text -> ActionExecutionStatus
[fromActionExecutionStatus] :: ActionExecutionStatus -> Text
pattern ActionExecutionStatus_Abandoned :: ActionExecutionStatus
pattern ActionExecutionStatus_Failed :: ActionExecutionStatus
pattern ActionExecutionStatus_InProgress :: ActionExecutionStatus
pattern ActionExecutionStatus_Succeeded :: ActionExecutionStatus
newtype ActionOwner
ActionOwner' :: Text -> ActionOwner
[fromActionOwner] :: ActionOwner -> Text
pattern ActionOwner_AWS :: ActionOwner
pattern ActionOwner_Custom :: ActionOwner
pattern ActionOwner_ThirdParty :: ActionOwner
newtype ApprovalStatus
ApprovalStatus' :: Text -> ApprovalStatus
[fromApprovalStatus] :: ApprovalStatus -> Text
pattern ApprovalStatus_Approved :: ApprovalStatus
pattern ApprovalStatus_Rejected :: ApprovalStatus
newtype ArtifactLocationType
ArtifactLocationType' :: Text -> ArtifactLocationType
[fromArtifactLocationType] :: ArtifactLocationType -> Text
pattern ArtifactLocationType_S3 :: ArtifactLocationType
newtype ArtifactStoreType
ArtifactStoreType' :: Text -> ArtifactStoreType
[fromArtifactStoreType] :: ArtifactStoreType -> Text
pattern ArtifactStoreType_S3 :: ArtifactStoreType
newtype BlockerType
BlockerType' :: Text -> BlockerType
[fromBlockerType] :: BlockerType -> Text
pattern BlockerType_Schedule :: BlockerType
newtype EncryptionKeyType
EncryptionKeyType' :: Text -> EncryptionKeyType
[fromEncryptionKeyType] :: EncryptionKeyType -> Text
pattern EncryptionKeyType_KMS :: EncryptionKeyType
newtype ExecutorType
ExecutorType' :: Text -> ExecutorType
[fromExecutorType] :: ExecutorType -> Text
pattern ExecutorType_JobWorker :: ExecutorType
pattern ExecutorType_Lambda :: ExecutorType
newtype FailureType
FailureType' :: Text -> FailureType
[fromFailureType] :: FailureType -> Text
pattern FailureType_ConfigurationError :: FailureType
pattern FailureType_JobFailed :: FailureType
pattern FailureType_PermissionError :: FailureType
pattern FailureType_RevisionOutOfSync :: FailureType
pattern FailureType_RevisionUnavailable :: FailureType
pattern FailureType_SystemUnavailable :: FailureType
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_Created :: JobStatus
pattern JobStatus_Dispatched :: JobStatus
pattern JobStatus_Failed :: JobStatus
pattern JobStatus_InProgress :: JobStatus
pattern JobStatus_Queued :: JobStatus
pattern JobStatus_Succeeded :: JobStatus
pattern JobStatus_TimedOut :: JobStatus
newtype PipelineExecutionStatus
PipelineExecutionStatus' :: Text -> PipelineExecutionStatus
[fromPipelineExecutionStatus] :: PipelineExecutionStatus -> Text
pattern PipelineExecutionStatus_Cancelled :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Failed :: PipelineExecutionStatus
pattern PipelineExecutionStatus_InProgress :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Stopped :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Stopping :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Succeeded :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Superseded :: PipelineExecutionStatus
newtype StageExecutionStatus
StageExecutionStatus' :: Text -> StageExecutionStatus
[fromStageExecutionStatus] :: StageExecutionStatus -> Text
pattern StageExecutionStatus_Cancelled :: StageExecutionStatus
pattern StageExecutionStatus_Failed :: StageExecutionStatus
pattern StageExecutionStatus_InProgress :: StageExecutionStatus
pattern StageExecutionStatus_Stopped :: StageExecutionStatus
pattern StageExecutionStatus_Stopping :: StageExecutionStatus
pattern StageExecutionStatus_Succeeded :: StageExecutionStatus
newtype StageRetryMode
StageRetryMode' :: Text -> StageRetryMode
[fromStageRetryMode] :: StageRetryMode -> Text
pattern StageRetryMode_FAILED_ACTIONS :: StageRetryMode
newtype StageTransitionType
StageTransitionType' :: Text -> StageTransitionType
[fromStageTransitionType] :: StageTransitionType -> Text
pattern StageTransitionType_Inbound :: StageTransitionType
pattern StageTransitionType_Outbound :: StageTransitionType
newtype TriggerType
TriggerType' :: Text -> TriggerType
[fromTriggerType] :: TriggerType -> Text
pattern TriggerType_CloudWatchEvent :: TriggerType
pattern TriggerType_CreatePipeline :: TriggerType
pattern TriggerType_PollForSourceChanges :: TriggerType
pattern TriggerType_PutActionRevision :: TriggerType
pattern TriggerType_StartPipelineExecution :: TriggerType
pattern TriggerType_Webhook :: TriggerType
newtype WebhookAuthenticationType
WebhookAuthenticationType' :: Text -> WebhookAuthenticationType
[fromWebhookAuthenticationType] :: WebhookAuthenticationType -> Text
pattern WebhookAuthenticationType_GITHUB_HMAC :: WebhookAuthenticationType
pattern WebhookAuthenticationType_IP :: WebhookAuthenticationType
pattern WebhookAuthenticationType_UNAUTHENTICATED :: WebhookAuthenticationType

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifact for the pipeline in AWS CodePipeline.
--   
--   <i>See:</i> <a>newAWSSessionCredentials</a> smart constructor.
data AWSSessionCredentials
AWSSessionCredentials' :: Sensitive Text -> Sensitive Text -> Sensitive Text -> AWSSessionCredentials

-- | The access key for the session.
[$sel:accessKeyId:AWSSessionCredentials'] :: AWSSessionCredentials -> Sensitive Text

-- | The secret access key for the session.
[$sel:secretAccessKey:AWSSessionCredentials'] :: AWSSessionCredentials -> Sensitive Text

-- | The token for the session.
[$sel:sessionToken:AWSSessionCredentials'] :: AWSSessionCredentials -> Sensitive Text

-- | Create a value of <a>AWSSessionCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessKeyId:AWSSessionCredentials'</a>,
--   <a>aWSSessionCredentials_accessKeyId</a> - The access key for the
--   session.
--   
--   <a>$sel:secretAccessKey:AWSSessionCredentials'</a>,
--   <a>aWSSessionCredentials_secretAccessKey</a> - The secret access key
--   for the session.
--   
--   <a>$sel:sessionToken:AWSSessionCredentials'</a>,
--   <a>aWSSessionCredentials_sessionToken</a> - The token for the session.
newAWSSessionCredentials :: Text -> Text -> Text -> AWSSessionCredentials

-- | The access key for the session.
aWSSessionCredentials_accessKeyId :: Lens' AWSSessionCredentials Text

-- | The secret access key for the session.
aWSSessionCredentials_secretAccessKey :: Lens' AWSSessionCredentials Text

-- | The token for the session.
aWSSessionCredentials_sessionToken :: Lens' AWSSessionCredentials Text

-- | Represents information about an action configuration.
--   
--   <i>See:</i> <a>newActionConfiguration</a> smart constructor.
data ActionConfiguration
ActionConfiguration' :: Maybe (HashMap Text Text) -> ActionConfiguration

-- | The configuration data for the action.
[$sel:configuration:ActionConfiguration'] :: ActionConfiguration -> Maybe (HashMap Text Text)

-- | Create a value of <a>ActionConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:ActionConfiguration'</a>,
--   <a>actionConfiguration_configuration</a> - The configuration data for
--   the action.
newActionConfiguration :: ActionConfiguration

-- | The configuration data for the action.
actionConfiguration_configuration :: Lens' ActionConfiguration (Maybe (HashMap Text Text))

-- | Represents information about an action configuration property.
--   
--   <i>See:</i> <a>newActionConfigurationProperty</a> smart constructor.
data ActionConfigurationProperty
ActionConfigurationProperty' :: Maybe Bool -> Maybe ActionConfigurationPropertyType -> Maybe Text -> Text -> Bool -> Bool -> Bool -> ActionConfigurationProperty

-- | Indicates that the property is used with <tt>PollForJobs</tt>. When
--   creating a custom action, an action can have up to one queryable
--   property. If it has one, that property must be both required and not
--   secret.
--   
--   If you create a pipeline with a custom action type, and that custom
--   action contains a queryable property, the value for that configuration
--   property is subject to other restrictions. The value must be less than
--   or equal to twenty (20) characters. The value can contain only
--   alphanumeric characters, underscores, and hyphens.
[$sel:queryable:ActionConfigurationProperty'] :: ActionConfigurationProperty -> Maybe Bool

-- | The type of the configuration property.
[$sel:type':ActionConfigurationProperty'] :: ActionConfigurationProperty -> Maybe ActionConfigurationPropertyType

-- | The description of the action configuration property that is displayed
--   to users.
[$sel:description:ActionConfigurationProperty'] :: ActionConfigurationProperty -> Maybe Text

-- | The name of the action configuration property.
[$sel:name:ActionConfigurationProperty'] :: ActionConfigurationProperty -> Text

-- | Whether the configuration property is a required value.
[$sel:required:ActionConfigurationProperty'] :: ActionConfigurationProperty -> Bool

-- | Whether the configuration property is a key.
[$sel:key:ActionConfigurationProperty'] :: ActionConfigurationProperty -> Bool

-- | Whether the configuration property is secret. Secrets are hidden from
--   all calls except for <tt>GetJobDetails</tt>,
--   <tt>GetThirdPartyJobDetails</tt>, <tt>PollForJobs</tt>, and
--   <tt>PollForThirdPartyJobs</tt>.
--   
--   When updating a pipeline, passing * * * * * without changing any other
--   values of the action preserves the previous value of the secret.
[$sel:secret:ActionConfigurationProperty'] :: ActionConfigurationProperty -> Bool

-- | Create a value of <a>ActionConfigurationProperty</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryable:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_queryable</a> - Indicates that the
--   property is used with <tt>PollForJobs</tt>. When creating a custom
--   action, an action can have up to one queryable property. If it has
--   one, that property must be both required and not secret.
--   
--   If you create a pipeline with a custom action type, and that custom
--   action contains a queryable property, the value for that configuration
--   property is subject to other restrictions. The value must be less than
--   or equal to twenty (20) characters. The value can contain only
--   alphanumeric characters, underscores, and hyphens.
--   
--   <a>$sel:type':ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_type</a> - The type of the
--   configuration property.
--   
--   <a>$sel:description:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_description</a> - The description of
--   the action configuration property that is displayed to users.
--   
--   <a>$sel:name:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_name</a> - The name of the action
--   configuration property.
--   
--   <a>$sel:required:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_required</a> - Whether the
--   configuration property is a required value.
--   
--   <a>$sel:key:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_key</a> - Whether the configuration
--   property is a key.
--   
--   <a>$sel:secret:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_secret</a> - Whether the configuration
--   property is secret. Secrets are hidden from all calls except for
--   <tt>GetJobDetails</tt>, <tt>GetThirdPartyJobDetails</tt>,
--   <tt>PollForJobs</tt>, and <tt>PollForThirdPartyJobs</tt>.
--   
--   When updating a pipeline, passing * * * * * without changing any other
--   values of the action preserves the previous value of the secret.
newActionConfigurationProperty :: Text -> Bool -> Bool -> Bool -> ActionConfigurationProperty

-- | Indicates that the property is used with <tt>PollForJobs</tt>. When
--   creating a custom action, an action can have up to one queryable
--   property. If it has one, that property must be both required and not
--   secret.
--   
--   If you create a pipeline with a custom action type, and that custom
--   action contains a queryable property, the value for that configuration
--   property is subject to other restrictions. The value must be less than
--   or equal to twenty (20) characters. The value can contain only
--   alphanumeric characters, underscores, and hyphens.
actionConfigurationProperty_queryable :: Lens' ActionConfigurationProperty (Maybe Bool)

-- | The type of the configuration property.
actionConfigurationProperty_type :: Lens' ActionConfigurationProperty (Maybe ActionConfigurationPropertyType)

-- | The description of the action configuration property that is displayed
--   to users.
actionConfigurationProperty_description :: Lens' ActionConfigurationProperty (Maybe Text)

-- | The name of the action configuration property.
actionConfigurationProperty_name :: Lens' ActionConfigurationProperty Text

-- | Whether the configuration property is a required value.
actionConfigurationProperty_required :: Lens' ActionConfigurationProperty Bool

-- | Whether the configuration property is a key.
actionConfigurationProperty_key :: Lens' ActionConfigurationProperty Bool

-- | Whether the configuration property is secret. Secrets are hidden from
--   all calls except for <tt>GetJobDetails</tt>,
--   <tt>GetThirdPartyJobDetails</tt>, <tt>PollForJobs</tt>, and
--   <tt>PollForThirdPartyJobs</tt>.
--   
--   When updating a pipeline, passing * * * * * without changing any other
--   values of the action preserves the previous value of the secret.
actionConfigurationProperty_secret :: Lens' ActionConfigurationProperty Bool

-- | Represents the context of an action in the stage of a pipeline to a
--   job worker.
--   
--   <i>See:</i> <a>newActionContext</a> smart constructor.
data ActionContext
ActionContext' :: Maybe Text -> Maybe Text -> ActionContext

-- | The name of the action in the context of a job.
[$sel:name:ActionContext'] :: ActionContext -> Maybe Text

-- | The system-generated unique ID that corresponds to an action's
--   execution.
[$sel:actionExecutionId:ActionContext'] :: ActionContext -> Maybe Text

-- | Create a value of <a>ActionContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ActionContext'</a>, <a>actionContext_name</a> - The name
--   of the action in the context of a job.
--   
--   <a>$sel:actionExecutionId:ActionContext'</a>,
--   <a>actionContext_actionExecutionId</a> - The system-generated unique
--   ID that corresponds to an action's execution.
newActionContext :: ActionContext

-- | The name of the action in the context of a job.
actionContext_name :: Lens' ActionContext (Maybe Text)

-- | The system-generated unique ID that corresponds to an action's
--   execution.
actionContext_actionExecutionId :: Lens' ActionContext (Maybe Text)

-- | Represents information about an action declaration.
--   
--   <i>See:</i> <a>newActionDeclaration</a> smart constructor.
data ActionDeclaration
ActionDeclaration' :: Maybe [OutputArtifact] -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe [InputArtifact] -> Maybe Text -> Text -> ActionTypeId -> ActionDeclaration

-- | The name or ID of the result of the action declaration, such as a test
--   or build artifact.
[$sel:outputArtifacts:ActionDeclaration'] :: ActionDeclaration -> Maybe [OutputArtifact]

-- | The variable namespace associated with the action. All variables
--   produced as output by this action fall under this namespace.
[$sel:namespace:ActionDeclaration'] :: ActionDeclaration -> Maybe Text

-- | The order in which actions are run.
[$sel:runOrder:ActionDeclaration'] :: ActionDeclaration -> Maybe Natural

-- | The action declaration's AWS Region, such as us-east-1.
[$sel:region:ActionDeclaration'] :: ActionDeclaration -> Maybe Text

-- | The action's configuration. These are key-value pairs that specify
--   input values for an action. For more information, see <a>Action
--   Structure Requirements in CodePipeline</a>. For the list of
--   configuration properties for the AWS CloudFormation action type in
--   CodePipeline, see <a>Configuration Properties Reference</a> in the
--   <i>AWS CloudFormation User Guide</i>. For template snippets with
--   examples, see <a>Using Parameter Override Functions with CodePipeline
--   Pipelines</a> in the <i>AWS CloudFormation User Guide</i>.
--   
--   The values can be represented in either JSON or YAML format. For
--   example, the JSON configuration item format is as follows:
--   
--   <i>JSON:</i>
--   
--   <pre>
--   "Configuration" : { Key : Value },
--   </pre>
[$sel:configuration:ActionDeclaration'] :: ActionDeclaration -> Maybe (HashMap Text Text)

-- | The name or ID of the artifact consumed by the action, such as a test
--   or build artifact.
[$sel:inputArtifacts:ActionDeclaration'] :: ActionDeclaration -> Maybe [InputArtifact]

-- | The ARN of the IAM service role that performs the declared action.
--   This is assumed through the roleArn for the pipeline.
[$sel:roleArn:ActionDeclaration'] :: ActionDeclaration -> Maybe Text

-- | The action declaration's name.
[$sel:name:ActionDeclaration'] :: ActionDeclaration -> Text

-- | Specifies the action type and the provider of the action.
[$sel:actionTypeId:ActionDeclaration'] :: ActionDeclaration -> ActionTypeId

-- | Create a value of <a>ActionDeclaration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputArtifacts:ActionDeclaration'</a>,
--   <a>actionDeclaration_outputArtifacts</a> - The name or ID of the
--   result of the action declaration, such as a test or build artifact.
--   
--   <a>$sel:namespace:ActionDeclaration'</a>,
--   <a>actionDeclaration_namespace</a> - The variable namespace associated
--   with the action. All variables produced as output by this action fall
--   under this namespace.
--   
--   <a>$sel:runOrder:ActionDeclaration'</a>,
--   <a>actionDeclaration_runOrder</a> - The order in which actions are
--   run.
--   
--   <a>$sel:region:ActionDeclaration'</a>, <a>actionDeclaration_region</a>
--   - The action declaration's AWS Region, such as us-east-1.
--   
--   <a>$sel:configuration:ActionDeclaration'</a>,
--   <a>actionDeclaration_configuration</a> - The action's configuration.
--   These are key-value pairs that specify input values for an action. For
--   more information, see <a>Action Structure Requirements in
--   CodePipeline</a>. For the list of configuration properties for the AWS
--   CloudFormation action type in CodePipeline, see <a>Configuration
--   Properties Reference</a> in the <i>AWS CloudFormation User Guide</i>.
--   For template snippets with examples, see <a>Using Parameter Override
--   Functions with CodePipeline Pipelines</a> in the <i>AWS CloudFormation
--   User Guide</i>.
--   
--   The values can be represented in either JSON or YAML format. For
--   example, the JSON configuration item format is as follows:
--   
--   <i>JSON:</i>
--   
--   <pre>
--   "Configuration" : { Key : Value },
--   </pre>
--   
--   <a>$sel:inputArtifacts:ActionDeclaration'</a>,
--   <a>actionDeclaration_inputArtifacts</a> - The name or ID of the
--   artifact consumed by the action, such as a test or build artifact.
--   
--   <a>$sel:roleArn:ActionDeclaration'</a>,
--   <a>actionDeclaration_roleArn</a> - The ARN of the IAM service role
--   that performs the declared action. This is assumed through the roleArn
--   for the pipeline.
--   
--   <a>$sel:name:ActionDeclaration'</a>, <a>actionDeclaration_name</a> -
--   The action declaration's name.
--   
--   <a>$sel:actionTypeId:ActionDeclaration'</a>,
--   <a>actionDeclaration_actionTypeId</a> - Specifies the action type and
--   the provider of the action.
newActionDeclaration :: Text -> ActionTypeId -> ActionDeclaration

-- | The name or ID of the result of the action declaration, such as a test
--   or build artifact.
actionDeclaration_outputArtifacts :: Lens' ActionDeclaration (Maybe [OutputArtifact])

-- | The variable namespace associated with the action. All variables
--   produced as output by this action fall under this namespace.
actionDeclaration_namespace :: Lens' ActionDeclaration (Maybe Text)

-- | The order in which actions are run.
actionDeclaration_runOrder :: Lens' ActionDeclaration (Maybe Natural)

-- | The action declaration's AWS Region, such as us-east-1.
actionDeclaration_region :: Lens' ActionDeclaration (Maybe Text)

-- | The action's configuration. These are key-value pairs that specify
--   input values for an action. For more information, see <a>Action
--   Structure Requirements in CodePipeline</a>. For the list of
--   configuration properties for the AWS CloudFormation action type in
--   CodePipeline, see <a>Configuration Properties Reference</a> in the
--   <i>AWS CloudFormation User Guide</i>. For template snippets with
--   examples, see <a>Using Parameter Override Functions with CodePipeline
--   Pipelines</a> in the <i>AWS CloudFormation User Guide</i>.
--   
--   The values can be represented in either JSON or YAML format. For
--   example, the JSON configuration item format is as follows:
--   
--   <i>JSON:</i>
--   
--   <pre>
--   "Configuration" : { Key : Value },
--   </pre>
actionDeclaration_configuration :: Lens' ActionDeclaration (Maybe (HashMap Text Text))

-- | The name or ID of the artifact consumed by the action, such as a test
--   or build artifact.
actionDeclaration_inputArtifacts :: Lens' ActionDeclaration (Maybe [InputArtifact])

-- | The ARN of the IAM service role that performs the declared action.
--   This is assumed through the roleArn for the pipeline.
actionDeclaration_roleArn :: Lens' ActionDeclaration (Maybe Text)

-- | The action declaration's name.
actionDeclaration_name :: Lens' ActionDeclaration Text

-- | Specifies the action type and the provider of the action.
actionDeclaration_actionTypeId :: Lens' ActionDeclaration ActionTypeId

-- | Represents information about the run of an action.
--   
--   <i>See:</i> <a>newActionExecution</a> smart constructor.
data ActionExecution
ActionExecution' :: Maybe Text -> Maybe Text -> Maybe ActionExecutionStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ErrorDetails -> Maybe Natural -> Maybe Text -> ActionExecution

-- | The ARN of the user who last changed the pipeline.
[$sel:lastUpdatedBy:ActionExecution'] :: ActionExecution -> Maybe Text

-- | A summary of the run of the action.
[$sel:summary:ActionExecution'] :: ActionExecution -> Maybe Text

-- | The status of the action, or for a completed action, the last status
--   of the action.
[$sel:status:ActionExecution'] :: ActionExecution -> Maybe ActionExecutionStatus

-- | The last status change of the action.
[$sel:lastStatusChange:ActionExecution'] :: ActionExecution -> Maybe POSIX

-- | The system-generated token used to identify a unique approval request.
--   The token for each open approval request can be obtained using the
--   <tt>GetPipelineState</tt> command. It is used to validate that the
--   approval request corresponding to this token is still valid.
[$sel:token:ActionExecution'] :: ActionExecution -> Maybe Text

-- | The URL of a resource external to AWS that is used when running the
--   action (for example, an external repository URL).
[$sel:externalExecutionUrl:ActionExecution'] :: ActionExecution -> Maybe Text

-- | The external ID of the run of the action.
[$sel:externalExecutionId:ActionExecution'] :: ActionExecution -> Maybe Text

-- | The details of an error returned by a URL external to AWS.
[$sel:errorDetails:ActionExecution'] :: ActionExecution -> Maybe ErrorDetails

-- | A percentage of completeness of the action as it runs.
[$sel:percentComplete:ActionExecution'] :: ActionExecution -> Maybe Natural

-- | ID of the workflow action execution in the current stage. Use the
--   GetPipelineState action to retrieve the current action execution
--   details of the current stage.
--   
--   For older executions, this field might be empty. The action execution
--   ID is available for executions run on or after March 2020.
[$sel:actionExecutionId:ActionExecution'] :: ActionExecution -> Maybe Text

-- | Create a value of <a>ActionExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedBy:ActionExecution'</a>,
--   <a>actionExecution_lastUpdatedBy</a> - The ARN of the user who last
--   changed the pipeline.
--   
--   <a>$sel:summary:ActionExecution'</a>, <a>actionExecution_summary</a> -
--   A summary of the run of the action.
--   
--   <a>$sel:status:ActionExecution'</a>, <a>actionExecution_status</a> -
--   The status of the action, or for a completed action, the last status
--   of the action.
--   
--   <a>$sel:lastStatusChange:ActionExecution'</a>,
--   <a>actionExecution_lastStatusChange</a> - The last status change of
--   the action.
--   
--   <a>$sel:token:ActionExecution'</a>, <a>actionExecution_token</a> - The
--   system-generated token used to identify a unique approval request. The
--   token for each open approval request can be obtained using the
--   <tt>GetPipelineState</tt> command. It is used to validate that the
--   approval request corresponding to this token is still valid.
--   
--   <a>$sel:externalExecutionUrl:ActionExecution'</a>,
--   <a>actionExecution_externalExecutionUrl</a> - The URL of a resource
--   external to AWS that is used when running the action (for example, an
--   external repository URL).
--   
--   <a>$sel:externalExecutionId:ActionExecution'</a>,
--   <a>actionExecution_externalExecutionId</a> - The external ID of the
--   run of the action.
--   
--   <a>$sel:errorDetails:ActionExecution'</a>,
--   <a>actionExecution_errorDetails</a> - The details of an error returned
--   by a URL external to AWS.
--   
--   <a>$sel:percentComplete:ActionExecution'</a>,
--   <a>actionExecution_percentComplete</a> - A percentage of completeness
--   of the action as it runs.
--   
--   <a>$sel:actionExecutionId:ActionExecution'</a>,
--   <a>actionExecution_actionExecutionId</a> - ID of the workflow action
--   execution in the current stage. Use the GetPipelineState action to
--   retrieve the current action execution details of the current stage.
--   
--   For older executions, this field might be empty. The action execution
--   ID is available for executions run on or after March 2020.
newActionExecution :: ActionExecution

-- | The ARN of the user who last changed the pipeline.
actionExecution_lastUpdatedBy :: Lens' ActionExecution (Maybe Text)

-- | A summary of the run of the action.
actionExecution_summary :: Lens' ActionExecution (Maybe Text)

-- | The status of the action, or for a completed action, the last status
--   of the action.
actionExecution_status :: Lens' ActionExecution (Maybe ActionExecutionStatus)

-- | The last status change of the action.
actionExecution_lastStatusChange :: Lens' ActionExecution (Maybe UTCTime)

-- | The system-generated token used to identify a unique approval request.
--   The token for each open approval request can be obtained using the
--   <tt>GetPipelineState</tt> command. It is used to validate that the
--   approval request corresponding to this token is still valid.
actionExecution_token :: Lens' ActionExecution (Maybe Text)

-- | The URL of a resource external to AWS that is used when running the
--   action (for example, an external repository URL).
actionExecution_externalExecutionUrl :: Lens' ActionExecution (Maybe Text)

-- | The external ID of the run of the action.
actionExecution_externalExecutionId :: Lens' ActionExecution (Maybe Text)

-- | The details of an error returned by a URL external to AWS.
actionExecution_errorDetails :: Lens' ActionExecution (Maybe ErrorDetails)

-- | A percentage of completeness of the action as it runs.
actionExecution_percentComplete :: Lens' ActionExecution (Maybe Natural)

-- | ID of the workflow action execution in the current stage. Use the
--   GetPipelineState action to retrieve the current action execution
--   details of the current stage.
--   
--   For older executions, this field might be empty. The action execution
--   ID is available for executions run on or after March 2020.
actionExecution_actionExecutionId :: Lens' ActionExecution (Maybe Text)

-- | Returns information about an execution of an action, including the
--   action execution ID, and the name, version, and timing of the action.
--   
--   <i>See:</i> <a>newActionExecutionDetail</a> smart constructor.
data ActionExecutionDetail
ActionExecutionDetail' :: Maybe ActionExecutionStatus -> Maybe POSIX -> Maybe Natural -> Maybe ActionExecutionInput -> Maybe Text -> Maybe ActionExecutionOutput -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> ActionExecutionDetail

-- | The status of the action execution. Status categories are
--   <tt>InProgress</tt>, <tt>Succeeded</tt>, and <tt>Failed</tt>.
[$sel:status:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe ActionExecutionStatus

-- | The start time of the action execution.
[$sel:startTime:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe POSIX

-- | The version of the pipeline where the action was run.
[$sel:pipelineVersion:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe Natural

-- | Input details for the action execution, such as role ARN, Region, and
--   input artifacts.
[$sel:input:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe ActionExecutionInput

-- | The name of the action.
[$sel:actionName:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe Text

-- | Output details for the action execution, such as the action execution
--   result.
[$sel:output:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe ActionExecutionOutput

-- | The pipeline execution ID for the action execution.
[$sel:pipelineExecutionId:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe Text

-- | The name of the stage that contains the action.
[$sel:stageName:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe Text

-- | The last update time of the action execution.
[$sel:lastUpdateTime:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe POSIX

-- | The action execution ID.
[$sel:actionExecutionId:ActionExecutionDetail'] :: ActionExecutionDetail -> Maybe Text

-- | Create a value of <a>ActionExecutionDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_status</a> - The status of the action
--   execution. Status categories are <tt>InProgress</tt>,
--   <tt>Succeeded</tt>, and <tt>Failed</tt>.
--   
--   <a>$sel:startTime:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_startTime</a> - The start time of the action
--   execution.
--   
--   <a>$sel:pipelineVersion:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_pipelineVersion</a> - The version of the
--   pipeline where the action was run.
--   
--   <a>$sel:input:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_input</a> - Input details for the action
--   execution, such as role ARN, Region, and input artifacts.
--   
--   <a>$sel:actionName:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_actionName</a> - The name of the action.
--   
--   <a>$sel:output:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_output</a> - Output details for the action
--   execution, such as the action execution result.
--   
--   <a>$sel:pipelineExecutionId:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_pipelineExecutionId</a> - The pipeline
--   execution ID for the action execution.
--   
--   <a>$sel:stageName:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_stageName</a> - The name of the stage that
--   contains the action.
--   
--   <a>$sel:lastUpdateTime:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_lastUpdateTime</a> - The last update time of
--   the action execution.
--   
--   <a>$sel:actionExecutionId:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_actionExecutionId</a> - The action execution
--   ID.
newActionExecutionDetail :: ActionExecutionDetail

-- | The status of the action execution. Status categories are
--   <tt>InProgress</tt>, <tt>Succeeded</tt>, and <tt>Failed</tt>.
actionExecutionDetail_status :: Lens' ActionExecutionDetail (Maybe ActionExecutionStatus)

-- | The start time of the action execution.
actionExecutionDetail_startTime :: Lens' ActionExecutionDetail (Maybe UTCTime)

-- | The version of the pipeline where the action was run.
actionExecutionDetail_pipelineVersion :: Lens' ActionExecutionDetail (Maybe Natural)

-- | Input details for the action execution, such as role ARN, Region, and
--   input artifacts.
actionExecutionDetail_input :: Lens' ActionExecutionDetail (Maybe ActionExecutionInput)

-- | The name of the action.
actionExecutionDetail_actionName :: Lens' ActionExecutionDetail (Maybe Text)

-- | Output details for the action execution, such as the action execution
--   result.
actionExecutionDetail_output :: Lens' ActionExecutionDetail (Maybe ActionExecutionOutput)

-- | The pipeline execution ID for the action execution.
actionExecutionDetail_pipelineExecutionId :: Lens' ActionExecutionDetail (Maybe Text)

-- | The name of the stage that contains the action.
actionExecutionDetail_stageName :: Lens' ActionExecutionDetail (Maybe Text)

-- | The last update time of the action execution.
actionExecutionDetail_lastUpdateTime :: Lens' ActionExecutionDetail (Maybe UTCTime)

-- | The action execution ID.
actionExecutionDetail_actionExecutionId :: Lens' ActionExecutionDetail (Maybe Text)

-- | Filter values for the action execution.
--   
--   <i>See:</i> <a>newActionExecutionFilter</a> smart constructor.
data ActionExecutionFilter
ActionExecutionFilter' :: Maybe Text -> ActionExecutionFilter

-- | The pipeline execution ID used to filter action execution history.
[$sel:pipelineExecutionId:ActionExecutionFilter'] :: ActionExecutionFilter -> Maybe Text

-- | Create a value of <a>ActionExecutionFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecutionId:ActionExecutionFilter'</a>,
--   <a>actionExecutionFilter_pipelineExecutionId</a> - The pipeline
--   execution ID used to filter action execution history.
newActionExecutionFilter :: ActionExecutionFilter

-- | The pipeline execution ID used to filter action execution history.
actionExecutionFilter_pipelineExecutionId :: Lens' ActionExecutionFilter (Maybe Text)

-- | Input information used for an action execution.
--   
--   <i>See:</i> <a>newActionExecutionInput</a> smart constructor.
data ActionExecutionInput
ActionExecutionInput' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ActionTypeId -> Maybe [ArtifactDetail] -> Maybe Text -> ActionExecutionInput

-- | The variable namespace associated with the action. All variables
--   produced as output by this action fall under this namespace.
[$sel:namespace:ActionExecutionInput'] :: ActionExecutionInput -> Maybe Text

-- | Configuration data for an action execution with all variable
--   references replaced with their real values for the execution.
[$sel:resolvedConfiguration:ActionExecutionInput'] :: ActionExecutionInput -> Maybe (HashMap Text Text)

-- | The AWS Region for the action, such as us-east-1.
[$sel:region:ActionExecutionInput'] :: ActionExecutionInput -> Maybe Text

-- | Configuration data for an action execution.
[$sel:configuration:ActionExecutionInput'] :: ActionExecutionInput -> Maybe (HashMap Text Text)
[$sel:actionTypeId:ActionExecutionInput'] :: ActionExecutionInput -> Maybe ActionTypeId

-- | Details of input artifacts of the action that correspond to the action
--   execution.
[$sel:inputArtifacts:ActionExecutionInput'] :: ActionExecutionInput -> Maybe [ArtifactDetail]

-- | The ARN of the IAM service role that performs the declared action.
--   This is assumed through the roleArn for the pipeline.
[$sel:roleArn:ActionExecutionInput'] :: ActionExecutionInput -> Maybe Text

-- | Create a value of <a>ActionExecutionInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_namespace</a> - The variable namespace
--   associated with the action. All variables produced as output by this
--   action fall under this namespace.
--   
--   <a>$sel:resolvedConfiguration:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_resolvedConfiguration</a> - Configuration data
--   for an action execution with all variable references replaced with
--   their real values for the execution.
--   
--   <a>$sel:region:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_region</a> - The AWS Region for the action,
--   such as us-east-1.
--   
--   <a>$sel:configuration:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_configuration</a> - Configuration data for an
--   action execution.
--   
--   <a>$sel:actionTypeId:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_actionTypeId</a> - Undocumented member.
--   
--   <a>$sel:inputArtifacts:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_inputArtifacts</a> - Details of input
--   artifacts of the action that correspond to the action execution.
--   
--   <a>$sel:roleArn:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_roleArn</a> - The ARN of the IAM service role
--   that performs the declared action. This is assumed through the roleArn
--   for the pipeline.
newActionExecutionInput :: ActionExecutionInput

-- | The variable namespace associated with the action. All variables
--   produced as output by this action fall under this namespace.
actionExecutionInput_namespace :: Lens' ActionExecutionInput (Maybe Text)

-- | Configuration data for an action execution with all variable
--   references replaced with their real values for the execution.
actionExecutionInput_resolvedConfiguration :: Lens' ActionExecutionInput (Maybe (HashMap Text Text))

-- | The AWS Region for the action, such as us-east-1.
actionExecutionInput_region :: Lens' ActionExecutionInput (Maybe Text)

-- | Configuration data for an action execution.
actionExecutionInput_configuration :: Lens' ActionExecutionInput (Maybe (HashMap Text Text))

-- | Undocumented member.
actionExecutionInput_actionTypeId :: Lens' ActionExecutionInput (Maybe ActionTypeId)

-- | Details of input artifacts of the action that correspond to the action
--   execution.
actionExecutionInput_inputArtifacts :: Lens' ActionExecutionInput (Maybe [ArtifactDetail])

-- | The ARN of the IAM service role that performs the declared action.
--   This is assumed through the roleArn for the pipeline.
actionExecutionInput_roleArn :: Lens' ActionExecutionInput (Maybe Text)

-- | Output details listed for an action execution, such as the action
--   execution result.
--   
--   <i>See:</i> <a>newActionExecutionOutput</a> smart constructor.
data ActionExecutionOutput
ActionExecutionOutput' :: Maybe (HashMap Text Text) -> Maybe [ArtifactDetail] -> Maybe ActionExecutionResult -> ActionExecutionOutput

-- | The outputVariables field shows the key-value pairs that were output
--   as part of that execution.
[$sel:outputVariables:ActionExecutionOutput'] :: ActionExecutionOutput -> Maybe (HashMap Text Text)

-- | Details of output artifacts of the action that correspond to the
--   action execution.
[$sel:outputArtifacts:ActionExecutionOutput'] :: ActionExecutionOutput -> Maybe [ArtifactDetail]

-- | Execution result information listed in the output details for an
--   action execution.
[$sel:executionResult:ActionExecutionOutput'] :: ActionExecutionOutput -> Maybe ActionExecutionResult

-- | Create a value of <a>ActionExecutionOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputVariables:ActionExecutionOutput'</a>,
--   <a>actionExecutionOutput_outputVariables</a> - The outputVariables
--   field shows the key-value pairs that were output as part of that
--   execution.
--   
--   <a>$sel:outputArtifacts:ActionExecutionOutput'</a>,
--   <a>actionExecutionOutput_outputArtifacts</a> - Details of output
--   artifacts of the action that correspond to the action execution.
--   
--   <a>$sel:executionResult:ActionExecutionOutput'</a>,
--   <a>actionExecutionOutput_executionResult</a> - Execution result
--   information listed in the output details for an action execution.
newActionExecutionOutput :: ActionExecutionOutput

-- | The outputVariables field shows the key-value pairs that were output
--   as part of that execution.
actionExecutionOutput_outputVariables :: Lens' ActionExecutionOutput (Maybe (HashMap Text Text))

-- | Details of output artifacts of the action that correspond to the
--   action execution.
actionExecutionOutput_outputArtifacts :: Lens' ActionExecutionOutput (Maybe [ArtifactDetail])

-- | Execution result information listed in the output details for an
--   action execution.
actionExecutionOutput_executionResult :: Lens' ActionExecutionOutput (Maybe ActionExecutionResult)

-- | Execution result information, such as the external execution ID.
--   
--   <i>See:</i> <a>newActionExecutionResult</a> smart constructor.
data ActionExecutionResult
ActionExecutionResult' :: Maybe Text -> Maybe Text -> Maybe Text -> ActionExecutionResult

-- | The deepest external link to the external resource (for example, a
--   repository URL or deployment endpoint) that is used when running the
--   action.
[$sel:externalExecutionUrl:ActionExecutionResult'] :: ActionExecutionResult -> Maybe Text

-- | The action provider's external ID for the action execution.
[$sel:externalExecutionId:ActionExecutionResult'] :: ActionExecutionResult -> Maybe Text

-- | The action provider's summary for the action execution.
[$sel:externalExecutionSummary:ActionExecutionResult'] :: ActionExecutionResult -> Maybe Text

-- | Create a value of <a>ActionExecutionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalExecutionUrl:ActionExecutionResult'</a>,
--   <a>actionExecutionResult_externalExecutionUrl</a> - The deepest
--   external link to the external resource (for example, a repository URL
--   or deployment endpoint) that is used when running the action.
--   
--   <a>$sel:externalExecutionId:ActionExecutionResult'</a>,
--   <a>actionExecutionResult_externalExecutionId</a> - The action
--   provider's external ID for the action execution.
--   
--   <a>$sel:externalExecutionSummary:ActionExecutionResult'</a>,
--   <a>actionExecutionResult_externalExecutionSummary</a> - The action
--   provider's summary for the action execution.
newActionExecutionResult :: ActionExecutionResult

-- | The deepest external link to the external resource (for example, a
--   repository URL or deployment endpoint) that is used when running the
--   action.
actionExecutionResult_externalExecutionUrl :: Lens' ActionExecutionResult (Maybe Text)

-- | The action provider's external ID for the action execution.
actionExecutionResult_externalExecutionId :: Lens' ActionExecutionResult (Maybe Text)

-- | The action provider's summary for the action execution.
actionExecutionResult_externalExecutionSummary :: Lens' ActionExecutionResult (Maybe Text)

-- | Represents information about the version (or revision) of an action.
--   
--   <i>See:</i> <a>newActionRevision</a> smart constructor.
data ActionRevision
ActionRevision' :: Text -> Text -> POSIX -> ActionRevision

-- | The system-generated unique ID that identifies the revision number of
--   the action.
[$sel:revisionId:ActionRevision'] :: ActionRevision -> Text

-- | The unique identifier of the change that set the state to this
--   revision (for example, a deployment ID or timestamp).
[$sel:revisionChangeId:ActionRevision'] :: ActionRevision -> Text

-- | The date and time when the most recent version of the action was
--   created, in timestamp format.
[$sel:created:ActionRevision'] :: ActionRevision -> POSIX

-- | Create a value of <a>ActionRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:ActionRevision'</a>,
--   <a>actionRevision_revisionId</a> - The system-generated unique ID that
--   identifies the revision number of the action.
--   
--   <a>$sel:revisionChangeId:ActionRevision'</a>,
--   <a>actionRevision_revisionChangeId</a> - The unique identifier of the
--   change that set the state to this revision (for example, a deployment
--   ID or timestamp).
--   
--   <a>$sel:created:ActionRevision'</a>, <a>actionRevision_created</a> -
--   The date and time when the most recent version of the action was
--   created, in timestamp format.
newActionRevision :: Text -> Text -> UTCTime -> ActionRevision

-- | The system-generated unique ID that identifies the revision number of
--   the action.
actionRevision_revisionId :: Lens' ActionRevision Text

-- | The unique identifier of the change that set the state to this
--   revision (for example, a deployment ID or timestamp).
actionRevision_revisionChangeId :: Lens' ActionRevision Text

-- | The date and time when the most recent version of the action was
--   created, in timestamp format.
actionRevision_created :: Lens' ActionRevision UTCTime

-- | Represents information about the state of an action.
--   
--   <i>See:</i> <a>newActionState</a> smart constructor.
data ActionState
ActionState' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ActionRevision -> Maybe ActionExecution -> ActionState

-- | A URL link for more information about the revision, such as a commit
--   details page.
[$sel:revisionUrl:ActionState'] :: ActionState -> Maybe Text

-- | A URL link for more information about the state of the action, such as
--   a deployment group details page.
[$sel:entityUrl:ActionState'] :: ActionState -> Maybe Text

-- | The name of the action.
[$sel:actionName:ActionState'] :: ActionState -> Maybe Text

-- | Represents information about the version (or revision) of an action.
[$sel:currentRevision:ActionState'] :: ActionState -> Maybe ActionRevision

-- | Represents information about the run of an action.
[$sel:latestExecution:ActionState'] :: ActionState -> Maybe ActionExecution

-- | Create a value of <a>ActionState</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionUrl:ActionState'</a>, <a>actionState_revisionUrl</a> -
--   A URL link for more information about the revision, such as a commit
--   details page.
--   
--   <a>$sel:entityUrl:ActionState'</a>, <a>actionState_entityUrl</a> - A
--   URL link for more information about the state of the action, such as a
--   deployment group details page.
--   
--   <a>$sel:actionName:ActionState'</a>, <a>actionState_actionName</a> -
--   The name of the action.
--   
--   <a>$sel:currentRevision:ActionState'</a>,
--   <a>actionState_currentRevision</a> - Represents information about the
--   version (or revision) of an action.
--   
--   <a>$sel:latestExecution:ActionState'</a>,
--   <a>actionState_latestExecution</a> - Represents information about the
--   run of an action.
newActionState :: ActionState

-- | A URL link for more information about the revision, such as a commit
--   details page.
actionState_revisionUrl :: Lens' ActionState (Maybe Text)

-- | A URL link for more information about the state of the action, such as
--   a deployment group details page.
actionState_entityUrl :: Lens' ActionState (Maybe Text)

-- | The name of the action.
actionState_actionName :: Lens' ActionState (Maybe Text)

-- | Represents information about the version (or revision) of an action.
actionState_currentRevision :: Lens' ActionState (Maybe ActionRevision)

-- | Represents information about the run of an action.
actionState_latestExecution :: Lens' ActionState (Maybe ActionExecution)

-- | Returns information about the details of an action type.
--   
--   <i>See:</i> <a>newActionType</a> smart constructor.
data ActionType
ActionType' :: Maybe ActionTypeSettings -> Maybe [ActionConfigurationProperty] -> ActionTypeId -> ArtifactDetails -> ArtifactDetails -> ActionType

-- | The settings for the action type.
[$sel:settings:ActionType'] :: ActionType -> Maybe ActionTypeSettings

-- | The configuration properties for the action type.
[$sel:actionConfigurationProperties:ActionType'] :: ActionType -> Maybe [ActionConfigurationProperty]

-- | Represents information about an action type.
[$sel:id:ActionType'] :: ActionType -> ActionTypeId

-- | The details of the input artifact for the action, such as its commit
--   ID.
[$sel:inputArtifactDetails:ActionType'] :: ActionType -> ArtifactDetails

-- | The details of the output artifact of the action, such as its commit
--   ID.
[$sel:outputArtifactDetails:ActionType'] :: ActionType -> ArtifactDetails

-- | Create a value of <a>ActionType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:settings:ActionType'</a>, <a>actionType_settings</a> - The
--   settings for the action type.
--   
--   <a>$sel:actionConfigurationProperties:ActionType'</a>,
--   <a>actionType_actionConfigurationProperties</a> - The configuration
--   properties for the action type.
--   
--   <a>$sel:id:ActionType'</a>, <a>actionType_id</a> - Represents
--   information about an action type.
--   
--   <a>$sel:inputArtifactDetails:ActionType'</a>,
--   <a>actionType_inputArtifactDetails</a> - The details of the input
--   artifact for the action, such as its commit ID.
--   
--   <a>$sel:outputArtifactDetails:ActionType'</a>,
--   <a>actionType_outputArtifactDetails</a> - The details of the output
--   artifact of the action, such as its commit ID.
newActionType :: ActionTypeId -> ArtifactDetails -> ArtifactDetails -> ActionType

-- | The settings for the action type.
actionType_settings :: Lens' ActionType (Maybe ActionTypeSettings)

-- | The configuration properties for the action type.
actionType_actionConfigurationProperties :: Lens' ActionType (Maybe [ActionConfigurationProperty])

-- | Represents information about an action type.
actionType_id :: Lens' ActionType ActionTypeId

-- | The details of the input artifact for the action, such as its commit
--   ID.
actionType_inputArtifactDetails :: Lens' ActionType ArtifactDetails

-- | The details of the output artifact of the action, such as its commit
--   ID.
actionType_outputArtifactDetails :: Lens' ActionType ArtifactDetails

-- | Information about parameters for artifacts associated with the action
--   type, such as the minimum and maximum artifacts allowed.
--   
--   <i>See:</i> <a>newActionTypeArtifactDetails</a> smart constructor.
data ActionTypeArtifactDetails
ActionTypeArtifactDetails' :: Natural -> Natural -> ActionTypeArtifactDetails

-- | The minimum number of artifacts that can be used with the action type.
--   For example, you should specify a minimum and maximum of zero input
--   artifacts for an action type with a category of <tt>source</tt>.
[$sel:minimumCount:ActionTypeArtifactDetails'] :: ActionTypeArtifactDetails -> Natural

-- | The maximum number of artifacts that can be used with the actiontype.
--   For example, you should specify a minimum and maximum of zero input
--   artifacts for an action type with a category of <tt>source</tt>.
[$sel:maximumCount:ActionTypeArtifactDetails'] :: ActionTypeArtifactDetails -> Natural

-- | Create a value of <a>ActionTypeArtifactDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCount:ActionTypeArtifactDetails'</a>,
--   <a>actionTypeArtifactDetails_minimumCount</a> - The minimum number of
--   artifacts that can be used with the action type. For example, you
--   should specify a minimum and maximum of zero input artifacts for an
--   action type with a category of <tt>source</tt>.
--   
--   <a>$sel:maximumCount:ActionTypeArtifactDetails'</a>,
--   <a>actionTypeArtifactDetails_maximumCount</a> - The maximum number of
--   artifacts that can be used with the actiontype. For example, you
--   should specify a minimum and maximum of zero input artifacts for an
--   action type with a category of <tt>source</tt>.
newActionTypeArtifactDetails :: Natural -> Natural -> ActionTypeArtifactDetails

-- | The minimum number of artifacts that can be used with the action type.
--   For example, you should specify a minimum and maximum of zero input
--   artifacts for an action type with a category of <tt>source</tt>.
actionTypeArtifactDetails_minimumCount :: Lens' ActionTypeArtifactDetails Natural

-- | The maximum number of artifacts that can be used with the actiontype.
--   For example, you should specify a minimum and maximum of zero input
--   artifacts for an action type with a category of <tt>source</tt>.
actionTypeArtifactDetails_maximumCount :: Lens' ActionTypeArtifactDetails Natural

-- | The parameters for the action type definition that are provided when
--   the action type is created or updated.
--   
--   <i>See:</i> <a>newActionTypeDeclaration</a> smart constructor.
data ActionTypeDeclaration
ActionTypeDeclaration' :: Maybe ActionTypeUrls -> Maybe ActionTypePermissions -> Maybe Text -> Maybe [ActionTypeProperty] -> ActionTypeExecutor -> ActionTypeIdentifier -> ActionTypeArtifactDetails -> ActionTypeArtifactDetails -> ActionTypeDeclaration

-- | The links associated with the action type to be updated.
[$sel:urls:ActionTypeDeclaration'] :: ActionTypeDeclaration -> Maybe ActionTypeUrls

-- | Details identifying the accounts with permissions to use the action
--   type.
[$sel:permissions:ActionTypeDeclaration'] :: ActionTypeDeclaration -> Maybe ActionTypePermissions

-- | The description for the action type to be updated.
[$sel:description:ActionTypeDeclaration'] :: ActionTypeDeclaration -> Maybe Text

-- | The properties of the action type to be updated.
[$sel:properties:ActionTypeDeclaration'] :: ActionTypeDeclaration -> Maybe [ActionTypeProperty]

-- | Information about the executor for an action type that was created
--   with any supported integration model.
[$sel:executor:ActionTypeDeclaration'] :: ActionTypeDeclaration -> ActionTypeExecutor

-- | The action category, owner, provider, and version of the action type
--   to be updated.
[$sel:id:ActionTypeDeclaration'] :: ActionTypeDeclaration -> ActionTypeIdentifier

-- | Details for the artifacts, such as application files, to be worked on
--   by the action. For example, the minimum and maximum number of input
--   artifacts allowed.
[$sel:inputArtifactDetails:ActionTypeDeclaration'] :: ActionTypeDeclaration -> ActionTypeArtifactDetails

-- | Details for the output artifacts, such as a built application, that
--   are the result of the action. For example, the minimum and maximum
--   number of output artifacts allowed.
[$sel:outputArtifactDetails:ActionTypeDeclaration'] :: ActionTypeDeclaration -> ActionTypeArtifactDetails

-- | Create a value of <a>ActionTypeDeclaration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:urls:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_urls</a> - The links associated with the
--   action type to be updated.
--   
--   <a>$sel:permissions:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_permissions</a> - Details identifying the
--   accounts with permissions to use the action type.
--   
--   <a>$sel:description:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_description</a> - The description for the
--   action type to be updated.
--   
--   <a>$sel:properties:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_properties</a> - The properties of the action
--   type to be updated.
--   
--   <a>$sel:executor:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_executor</a> - Information about the executor
--   for an action type that was created with any supported integration
--   model.
--   
--   <a>$sel:id:ActionTypeDeclaration'</a>, <a>actionTypeDeclaration_id</a>
--   - The action category, owner, provider, and version of the action type
--   to be updated.
--   
--   <a>$sel:inputArtifactDetails:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_inputArtifactDetails</a> - Details for the
--   artifacts, such as application files, to be worked on by the action.
--   For example, the minimum and maximum number of input artifacts
--   allowed.
--   
--   <a>$sel:outputArtifactDetails:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_outputArtifactDetails</a> - Details for the
--   output artifacts, such as a built application, that are the result of
--   the action. For example, the minimum and maximum number of output
--   artifacts allowed.
newActionTypeDeclaration :: ActionTypeExecutor -> ActionTypeIdentifier -> ActionTypeArtifactDetails -> ActionTypeArtifactDetails -> ActionTypeDeclaration

-- | The links associated with the action type to be updated.
actionTypeDeclaration_urls :: Lens' ActionTypeDeclaration (Maybe ActionTypeUrls)

-- | Details identifying the accounts with permissions to use the action
--   type.
actionTypeDeclaration_permissions :: Lens' ActionTypeDeclaration (Maybe ActionTypePermissions)

-- | The description for the action type to be updated.
actionTypeDeclaration_description :: Lens' ActionTypeDeclaration (Maybe Text)

-- | The properties of the action type to be updated.
actionTypeDeclaration_properties :: Lens' ActionTypeDeclaration (Maybe [ActionTypeProperty])

-- | Information about the executor for an action type that was created
--   with any supported integration model.
actionTypeDeclaration_executor :: Lens' ActionTypeDeclaration ActionTypeExecutor

-- | The action category, owner, provider, and version of the action type
--   to be updated.
actionTypeDeclaration_id :: Lens' ActionTypeDeclaration ActionTypeIdentifier

-- | Details for the artifacts, such as application files, to be worked on
--   by the action. For example, the minimum and maximum number of input
--   artifacts allowed.
actionTypeDeclaration_inputArtifactDetails :: Lens' ActionTypeDeclaration ActionTypeArtifactDetails

-- | Details for the output artifacts, such as a built application, that
--   are the result of the action. For example, the minimum and maximum
--   number of output artifacts allowed.
actionTypeDeclaration_outputArtifactDetails :: Lens' ActionTypeDeclaration ActionTypeArtifactDetails

-- | The action engine, or executor, for an action type created for a
--   provider, where the action is to be used by customers of the provider.
--   The action engine is associated with the model used to create and
--   update the action, such as the Lambda integration model.
--   
--   <i>See:</i> <a>newActionTypeExecutor</a> smart constructor.
data ActionTypeExecutor
ActionTypeExecutor' :: Maybe Natural -> Maybe Text -> ExecutorConfiguration -> ExecutorType -> ActionTypeExecutor

-- | The timeout in seconds for the job. An action execution can have
--   multiple jobs. This is the timeout for a single job, not the entire
--   action execution.
[$sel:jobTimeout:ActionTypeExecutor'] :: ActionTypeExecutor -> Maybe Natural

-- | The policy statement that specifies the permissions in the
--   CodePipeline customer’s account that are needed to successfully run an
--   action.
--   
--   To grant permission to another account, specify the account ID as the
--   Principal, a domain-style identifier defined by the service, for
--   example <tt>codepipeline.amazonaws.com</tt>.
--   
--   The size of the passed JSON policy document cannot exceed 2048
--   characters.
[$sel:policyStatementsTemplate:ActionTypeExecutor'] :: ActionTypeExecutor -> Maybe Text

-- | The action configuration properties for the action type. These
--   properties are specified in the action definition when the action type
--   is created.
[$sel:configuration:ActionTypeExecutor'] :: ActionTypeExecutor -> ExecutorConfiguration

-- | The integration model used to create and update the action type,
--   <tt>Lambda</tt> or <tt>JobWorker</tt>.
[$sel:type':ActionTypeExecutor'] :: ActionTypeExecutor -> ExecutorType

-- | Create a value of <a>ActionTypeExecutor</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobTimeout:ActionTypeExecutor'</a>,
--   <a>actionTypeExecutor_jobTimeout</a> - The timeout in seconds for the
--   job. An action execution can have multiple jobs. This is the timeout
--   for a single job, not the entire action execution.
--   
--   <a>$sel:policyStatementsTemplate:ActionTypeExecutor'</a>,
--   <a>actionTypeExecutor_policyStatementsTemplate</a> - The policy
--   statement that specifies the permissions in the CodePipeline
--   customer’s account that are needed to successfully run an action.
--   
--   To grant permission to another account, specify the account ID as the
--   Principal, a domain-style identifier defined by the service, for
--   example <tt>codepipeline.amazonaws.com</tt>.
--   
--   The size of the passed JSON policy document cannot exceed 2048
--   characters.
--   
--   <a>$sel:configuration:ActionTypeExecutor'</a>,
--   <a>actionTypeExecutor_configuration</a> - The action configuration
--   properties for the action type. These properties are specified in the
--   action definition when the action type is created.
--   
--   <a>$sel:type':ActionTypeExecutor'</a>, <a>actionTypeExecutor_type</a>
--   - The integration model used to create and update the action type,
--   <tt>Lambda</tt> or <tt>JobWorker</tt>.
newActionTypeExecutor :: ExecutorConfiguration -> ExecutorType -> ActionTypeExecutor

-- | The timeout in seconds for the job. An action execution can have
--   multiple jobs. This is the timeout for a single job, not the entire
--   action execution.
actionTypeExecutor_jobTimeout :: Lens' ActionTypeExecutor (Maybe Natural)

-- | The policy statement that specifies the permissions in the
--   CodePipeline customer’s account that are needed to successfully run an
--   action.
--   
--   To grant permission to another account, specify the account ID as the
--   Principal, a domain-style identifier defined by the service, for
--   example <tt>codepipeline.amazonaws.com</tt>.
--   
--   The size of the passed JSON policy document cannot exceed 2048
--   characters.
actionTypeExecutor_policyStatementsTemplate :: Lens' ActionTypeExecutor (Maybe Text)

-- | The action configuration properties for the action type. These
--   properties are specified in the action definition when the action type
--   is created.
actionTypeExecutor_configuration :: Lens' ActionTypeExecutor ExecutorConfiguration

-- | The integration model used to create and update the action type,
--   <tt>Lambda</tt> or <tt>JobWorker</tt>.
actionTypeExecutor_type :: Lens' ActionTypeExecutor ExecutorType

-- | Represents information about an action type.
--   
--   <i>See:</i> <a>newActionTypeId</a> smart constructor.
data ActionTypeId
ActionTypeId' :: ActionCategory -> ActionOwner -> Text -> Text -> ActionTypeId

-- | A category defines what kind of action can be taken in the stage, and
--   constrains the provider type for the action. Valid categories are
--   limited to one of the following values.
--   
--   <ul>
--   <li>Source</li>
--   <li>Build</li>
--   <li>Test</li>
--   <li>Deploy</li>
--   <li>Invoke</li>
--   <li>Approval</li>
--   </ul>
[$sel:category:ActionTypeId'] :: ActionTypeId -> ActionCategory

-- | The creator of the action being called. There are three valid values
--   for the <tt>Owner</tt> field in the action category section within
--   your pipeline structure: <tt>AWS</tt>, <tt>ThirdParty</tt>, and
--   <tt>Custom</tt>. For more information, see <a>Valid Action Types and
--   Providers in CodePipeline</a>.
[$sel:owner:ActionTypeId'] :: ActionTypeId -> ActionOwner

-- | The provider of the service being called by the action. Valid
--   providers are determined by the action category. For example, an
--   action in the Deploy category type might have a provider of AWS
--   CodeDeploy, which would be specified as CodeDeploy. For more
--   information, see <a>Valid Action Types and Providers in
--   CodePipeline</a>.
[$sel:provider:ActionTypeId'] :: ActionTypeId -> Text

-- | A string that describes the action version.
[$sel:version:ActionTypeId'] :: ActionTypeId -> Text

-- | Create a value of <a>ActionTypeId</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:category:ActionTypeId'</a>, <a>actionTypeId_category</a> - A
--   category defines what kind of action can be taken in the stage, and
--   constrains the provider type for the action. Valid categories are
--   limited to one of the following values.
--   
--   <ul>
--   <li>Source</li>
--   <li>Build</li>
--   <li>Test</li>
--   <li>Deploy</li>
--   <li>Invoke</li>
--   <li>Approval</li>
--   </ul>
--   
--   <a>$sel:owner:ActionTypeId'</a>, <a>actionTypeId_owner</a> - The
--   creator of the action being called. There are three valid values for
--   the <tt>Owner</tt> field in the action category section within your
--   pipeline structure: <tt>AWS</tt>, <tt>ThirdParty</tt>, and
--   <tt>Custom</tt>. For more information, see <a>Valid Action Types and
--   Providers in CodePipeline</a>.
--   
--   <a>$sel:provider:ActionTypeId'</a>, <a>actionTypeId_provider</a> - The
--   provider of the service being called by the action. Valid providers
--   are determined by the action category. For example, an action in the
--   Deploy category type might have a provider of AWS CodeDeploy, which
--   would be specified as CodeDeploy. For more information, see <a>Valid
--   Action Types and Providers in CodePipeline</a>.
--   
--   <a>$sel:version:ActionTypeId'</a>, <a>actionTypeId_version</a> - A
--   string that describes the action version.
newActionTypeId :: ActionCategory -> ActionOwner -> Text -> Text -> ActionTypeId

-- | A category defines what kind of action can be taken in the stage, and
--   constrains the provider type for the action. Valid categories are
--   limited to one of the following values.
--   
--   <ul>
--   <li>Source</li>
--   <li>Build</li>
--   <li>Test</li>
--   <li>Deploy</li>
--   <li>Invoke</li>
--   <li>Approval</li>
--   </ul>
actionTypeId_category :: Lens' ActionTypeId ActionCategory

-- | The creator of the action being called. There are three valid values
--   for the <tt>Owner</tt> field in the action category section within
--   your pipeline structure: <tt>AWS</tt>, <tt>ThirdParty</tt>, and
--   <tt>Custom</tt>. For more information, see <a>Valid Action Types and
--   Providers in CodePipeline</a>.
actionTypeId_owner :: Lens' ActionTypeId ActionOwner

-- | The provider of the service being called by the action. Valid
--   providers are determined by the action category. For example, an
--   action in the Deploy category type might have a provider of AWS
--   CodeDeploy, which would be specified as CodeDeploy. For more
--   information, see <a>Valid Action Types and Providers in
--   CodePipeline</a>.
actionTypeId_provider :: Lens' ActionTypeId Text

-- | A string that describes the action version.
actionTypeId_version :: Lens' ActionTypeId Text

-- | Specifies the category, owner, provider, and version of the action
--   type.
--   
--   <i>See:</i> <a>newActionTypeIdentifier</a> smart constructor.
data ActionTypeIdentifier
ActionTypeIdentifier' :: ActionCategory -> Text -> Text -> Text -> ActionTypeIdentifier

-- | Defines what kind of action can be taken in the stage, one of the
--   following:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
[$sel:category:ActionTypeIdentifier'] :: ActionTypeIdentifier -> ActionCategory

-- | The creator of the action type being called: <tt>AWS</tt> or
--   <tt>ThirdParty</tt>.
[$sel:owner:ActionTypeIdentifier'] :: ActionTypeIdentifier -> Text

-- | The provider of the action type being called. The provider name is
--   supplied when the action type is created.
[$sel:provider:ActionTypeIdentifier'] :: ActionTypeIdentifier -> Text

-- | A string that describes the action type version.
[$sel:version:ActionTypeIdentifier'] :: ActionTypeIdentifier -> Text

-- | Create a value of <a>ActionTypeIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:category:ActionTypeIdentifier'</a>,
--   <a>actionTypeIdentifier_category</a> - Defines what kind of action can
--   be taken in the stage, one of the following:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
--   
--   <a>$sel:owner:ActionTypeIdentifier'</a>,
--   <a>actionTypeIdentifier_owner</a> - The creator of the action type
--   being called: <tt>AWS</tt> or <tt>ThirdParty</tt>.
--   
--   <a>$sel:provider:ActionTypeIdentifier'</a>,
--   <a>actionTypeIdentifier_provider</a> - The provider of the action type
--   being called. The provider name is supplied when the action type is
--   created.
--   
--   <a>$sel:version:ActionTypeIdentifier'</a>,
--   <a>actionTypeIdentifier_version</a> - A string that describes the
--   action type version.
newActionTypeIdentifier :: ActionCategory -> Text -> Text -> Text -> ActionTypeIdentifier

-- | Defines what kind of action can be taken in the stage, one of the
--   following:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
actionTypeIdentifier_category :: Lens' ActionTypeIdentifier ActionCategory

-- | The creator of the action type being called: <tt>AWS</tt> or
--   <tt>ThirdParty</tt>.
actionTypeIdentifier_owner :: Lens' ActionTypeIdentifier Text

-- | The provider of the action type being called. The provider name is
--   supplied when the action type is created.
actionTypeIdentifier_provider :: Lens' ActionTypeIdentifier Text

-- | A string that describes the action type version.
actionTypeIdentifier_version :: Lens' ActionTypeIdentifier Text

-- | Details identifying the users with permissions to use the action type.
--   
--   <i>See:</i> <a>newActionTypePermissions</a> smart constructor.
data ActionTypePermissions
ActionTypePermissions' :: NonEmpty Text -> ActionTypePermissions

-- | A list of AWS account IDs with access to use the action type in their
--   pipelines.
[$sel:allowedAccounts:ActionTypePermissions'] :: ActionTypePermissions -> NonEmpty Text

-- | Create a value of <a>ActionTypePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowedAccounts:ActionTypePermissions'</a>,
--   <a>actionTypePermissions_allowedAccounts</a> - A list of AWS account
--   IDs with access to use the action type in their pipelines.
newActionTypePermissions :: NonEmpty Text -> ActionTypePermissions

-- | A list of AWS account IDs with access to use the action type in their
--   pipelines.
actionTypePermissions_allowedAccounts :: Lens' ActionTypePermissions (NonEmpty Text)

-- | Represents information about each property specified in the action
--   configuration, such as the description and key name that display for
--   the customer using the action type.
--   
--   <i>See:</i> <a>newActionTypeProperty</a> smart constructor.
data ActionTypeProperty
ActionTypeProperty' :: Maybe Bool -> Maybe Text -> Text -> Bool -> Bool -> Bool -> ActionTypeProperty

-- | Indicates that the property is used with polling. An action type can
--   have up to one queryable property. If it has one, that property must
--   be both required and not secret.
[$sel:queryable:ActionTypeProperty'] :: ActionTypeProperty -> Maybe Bool

-- | The description of the property that is displayed to users.
[$sel:description:ActionTypeProperty'] :: ActionTypeProperty -> Maybe Text

-- | The property name that is displayed to users.
[$sel:name:ActionTypeProperty'] :: ActionTypeProperty -> Text

-- | Whether the configuration property is an optional value.
[$sel:optional:ActionTypeProperty'] :: ActionTypeProperty -> Bool

-- | Whether the configuration property is a key.
[$sel:key:ActionTypeProperty'] :: ActionTypeProperty -> Bool

-- | Whether to omit the field value entered by the customer in the log. If
--   <tt>true</tt>, the value is not saved in CloudTrail logs for the
--   action execution.
[$sel:noEcho:ActionTypeProperty'] :: ActionTypeProperty -> Bool

-- | Create a value of <a>ActionTypeProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryable:ActionTypeProperty'</a>,
--   <a>actionTypeProperty_queryable</a> - Indicates that the property is
--   used with polling. An action type can have up to one queryable
--   property. If it has one, that property must be both required and not
--   secret.
--   
--   <a>$sel:description:ActionTypeProperty'</a>,
--   <a>actionTypeProperty_description</a> - The description of the
--   property that is displayed to users.
--   
--   <a>$sel:name:ActionTypeProperty'</a>, <a>actionTypeProperty_name</a> -
--   The property name that is displayed to users.
--   
--   <a>$sel:optional:ActionTypeProperty'</a>,
--   <a>actionTypeProperty_optional</a> - Whether the configuration
--   property is an optional value.
--   
--   <a>$sel:key:ActionTypeProperty'</a>, <a>actionTypeProperty_key</a> -
--   Whether the configuration property is a key.
--   
--   <a>$sel:noEcho:ActionTypeProperty'</a>,
--   <a>actionTypeProperty_noEcho</a> - Whether to omit the field value
--   entered by the customer in the log. If <tt>true</tt>, the value is not
--   saved in CloudTrail logs for the action execution.
newActionTypeProperty :: Text -> Bool -> Bool -> Bool -> ActionTypeProperty

-- | Indicates that the property is used with polling. An action type can
--   have up to one queryable property. If it has one, that property must
--   be both required and not secret.
actionTypeProperty_queryable :: Lens' ActionTypeProperty (Maybe Bool)

-- | The description of the property that is displayed to users.
actionTypeProperty_description :: Lens' ActionTypeProperty (Maybe Text)

-- | The property name that is displayed to users.
actionTypeProperty_name :: Lens' ActionTypeProperty Text

-- | Whether the configuration property is an optional value.
actionTypeProperty_optional :: Lens' ActionTypeProperty Bool

-- | Whether the configuration property is a key.
actionTypeProperty_key :: Lens' ActionTypeProperty Bool

-- | Whether to omit the field value entered by the customer in the log. If
--   <tt>true</tt>, the value is not saved in CloudTrail logs for the
--   action execution.
actionTypeProperty_noEcho :: Lens' ActionTypeProperty Bool

-- | Returns information about the settings for an action type.
--   
--   <i>See:</i> <a>newActionTypeSettings</a> smart constructor.
data ActionTypeSettings
ActionTypeSettings' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ActionTypeSettings

-- | The URL of a sign-up page where users can sign up for an external
--   service and perform initial configuration of the action provided by
--   that service.
[$sel:thirdPartyConfigurationUrl:ActionTypeSettings'] :: ActionTypeSettings -> Maybe Text

-- | The URL returned to the AWS CodePipeline console that contains a link
--   to the top-level landing page for the external system, such as the
--   console page for AWS CodeDeploy. This link is shown on the pipeline
--   view page in the AWS CodePipeline console and provides a link to the
--   execution entity of the external action.
[$sel:executionUrlTemplate:ActionTypeSettings'] :: ActionTypeSettings -> Maybe Text

-- | The URL returned to the AWS CodePipeline console that contains a link
--   to the page where customers can update or change the configuration of
--   the external action.
[$sel:revisionUrlTemplate:ActionTypeSettings'] :: ActionTypeSettings -> Maybe Text

-- | The URL returned to the AWS CodePipeline console that provides a deep
--   link to the resources of the external system, such as the
--   configuration page for an AWS CodeDeploy deployment group. This link
--   is provided as part of the action display in the pipeline.
[$sel:entityUrlTemplate:ActionTypeSettings'] :: ActionTypeSettings -> Maybe Text

-- | Create a value of <a>ActionTypeSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thirdPartyConfigurationUrl:ActionTypeSettings'</a>,
--   <a>actionTypeSettings_thirdPartyConfigurationUrl</a> - The URL of a
--   sign-up page where users can sign up for an external service and
--   perform initial configuration of the action provided by that service.
--   
--   <a>$sel:executionUrlTemplate:ActionTypeSettings'</a>,
--   <a>actionTypeSettings_executionUrlTemplate</a> - The URL returned to
--   the AWS CodePipeline console that contains a link to the top-level
--   landing page for the external system, such as the console page for AWS
--   CodeDeploy. This link is shown on the pipeline view page in the AWS
--   CodePipeline console and provides a link to the execution entity of
--   the external action.
--   
--   <a>$sel:revisionUrlTemplate:ActionTypeSettings'</a>,
--   <a>actionTypeSettings_revisionUrlTemplate</a> - The URL returned to
--   the AWS CodePipeline console that contains a link to the page where
--   customers can update or change the configuration of the external
--   action.
--   
--   <a>$sel:entityUrlTemplate:ActionTypeSettings'</a>,
--   <a>actionTypeSettings_entityUrlTemplate</a> - The URL returned to the
--   AWS CodePipeline console that provides a deep link to the resources of
--   the external system, such as the configuration page for an AWS
--   CodeDeploy deployment group. This link is provided as part of the
--   action display in the pipeline.
newActionTypeSettings :: ActionTypeSettings

-- | The URL of a sign-up page where users can sign up for an external
--   service and perform initial configuration of the action provided by
--   that service.
actionTypeSettings_thirdPartyConfigurationUrl :: Lens' ActionTypeSettings (Maybe Text)

-- | The URL returned to the AWS CodePipeline console that contains a link
--   to the top-level landing page for the external system, such as the
--   console page for AWS CodeDeploy. This link is shown on the pipeline
--   view page in the AWS CodePipeline console and provides a link to the
--   execution entity of the external action.
actionTypeSettings_executionUrlTemplate :: Lens' ActionTypeSettings (Maybe Text)

-- | The URL returned to the AWS CodePipeline console that contains a link
--   to the page where customers can update or change the configuration of
--   the external action.
actionTypeSettings_revisionUrlTemplate :: Lens' ActionTypeSettings (Maybe Text)

-- | The URL returned to the AWS CodePipeline console that provides a deep
--   link to the resources of the external system, such as the
--   configuration page for an AWS CodeDeploy deployment group. This link
--   is provided as part of the action display in the pipeline.
actionTypeSettings_entityUrlTemplate :: Lens' ActionTypeSettings (Maybe Text)

-- | Returns information about URLs for web pages that display to customers
--   as links on the pipeline view, such as an external configuration page
--   for the action type.
--   
--   <i>See:</i> <a>newActionTypeUrls</a> smart constructor.
data ActionTypeUrls
ActionTypeUrls' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ActionTypeUrls

-- | The link to an execution page for the action type in progress. For
--   example, for a CodeDeploy action, this link is shown on the pipeline
--   view page in the CodePipeline console, and it links to a CodeDeploy
--   status page.
[$sel:executionUrlTemplate:ActionTypeUrls'] :: ActionTypeUrls -> Maybe Text

-- | The URL returned to the CodePipeline console that contains a link to
--   the page where customers can update or change the configuration of the
--   external action.
[$sel:revisionUrlTemplate:ActionTypeUrls'] :: ActionTypeUrls -> Maybe Text

-- | The URL returned to the CodePipeline console that provides a deep link
--   to the resources of the external system, such as a status page. This
--   link is provided as part of the action display in the pipeline.
[$sel:entityUrlTemplate:ActionTypeUrls'] :: ActionTypeUrls -> Maybe Text

-- | The URL returned to the CodePipeline console that contains a link to
--   the page where customers can configure the external action.
[$sel:configurationUrl:ActionTypeUrls'] :: ActionTypeUrls -> Maybe Text

-- | Create a value of <a>ActionTypeUrls</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executionUrlTemplate:ActionTypeUrls'</a>,
--   <a>actionTypeUrls_executionUrlTemplate</a> - The link to an execution
--   page for the action type in progress. For example, for a CodeDeploy
--   action, this link is shown on the pipeline view page in the
--   CodePipeline console, and it links to a CodeDeploy status page.
--   
--   <a>$sel:revisionUrlTemplate:ActionTypeUrls'</a>,
--   <a>actionTypeUrls_revisionUrlTemplate</a> - The URL returned to the
--   CodePipeline console that contains a link to the page where customers
--   can update or change the configuration of the external action.
--   
--   <a>$sel:entityUrlTemplate:ActionTypeUrls'</a>,
--   <a>actionTypeUrls_entityUrlTemplate</a> - The URL returned to the
--   CodePipeline console that provides a deep link to the resources of the
--   external system, such as a status page. This link is provided as part
--   of the action display in the pipeline.
--   
--   <a>$sel:configurationUrl:ActionTypeUrls'</a>,
--   <a>actionTypeUrls_configurationUrl</a> - The URL returned to the
--   CodePipeline console that contains a link to the page where customers
--   can configure the external action.
newActionTypeUrls :: ActionTypeUrls

-- | The link to an execution page for the action type in progress. For
--   example, for a CodeDeploy action, this link is shown on the pipeline
--   view page in the CodePipeline console, and it links to a CodeDeploy
--   status page.
actionTypeUrls_executionUrlTemplate :: Lens' ActionTypeUrls (Maybe Text)

-- | The URL returned to the CodePipeline console that contains a link to
--   the page where customers can update or change the configuration of the
--   external action.
actionTypeUrls_revisionUrlTemplate :: Lens' ActionTypeUrls (Maybe Text)

-- | The URL returned to the CodePipeline console that provides a deep link
--   to the resources of the external system, such as a status page. This
--   link is provided as part of the action display in the pipeline.
actionTypeUrls_entityUrlTemplate :: Lens' ActionTypeUrls (Maybe Text)

-- | The URL returned to the CodePipeline console that contains a link to
--   the page where customers can configure the external action.
actionTypeUrls_configurationUrl :: Lens' ActionTypeUrls (Maybe Text)

-- | Represents information about the result of an approval request.
--   
--   <i>See:</i> <a>newApprovalResult</a> smart constructor.
data ApprovalResult
ApprovalResult' :: Text -> ApprovalStatus -> ApprovalResult

-- | The summary of the current status of the approval request.
[$sel:summary:ApprovalResult'] :: ApprovalResult -> Text

-- | The response submitted by a reviewer assigned to an approval action
--   request.
[$sel:status:ApprovalResult'] :: ApprovalResult -> ApprovalStatus

-- | Create a value of <a>ApprovalResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:ApprovalResult'</a>, <a>approvalResult_summary</a> -
--   The summary of the current status of the approval request.
--   
--   <a>$sel:status:ApprovalResult'</a>, <a>approvalResult_status</a> - The
--   response submitted by a reviewer assigned to an approval action
--   request.
newApprovalResult :: Text -> ApprovalStatus -> ApprovalResult

-- | The summary of the current status of the approval request.
approvalResult_summary :: Lens' ApprovalResult Text

-- | The response submitted by a reviewer assigned to an approval action
--   request.
approvalResult_status :: Lens' ApprovalResult ApprovalStatus

-- | Represents information about an artifact that is worked on by actions
--   in the pipeline.
--   
--   <i>See:</i> <a>newArtifact</a> smart constructor.
data Artifact
Artifact' :: Maybe ArtifactLocation -> Maybe Text -> Maybe Text -> Artifact

-- | The location of an artifact.
[$sel:location:Artifact'] :: Artifact -> Maybe ArtifactLocation

-- | The artifact's name.
[$sel:name:Artifact'] :: Artifact -> Maybe Text

-- | The artifact's revision ID. Depending on the type of object, this
--   could be a commit ID (GitHub) or a revision ID (Amazon S3).
[$sel:revision:Artifact'] :: Artifact -> Maybe Text

-- | Create a value of <a>Artifact</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:Artifact'</a>, <a>artifact_location</a> - The
--   location of an artifact.
--   
--   <a>$sel:name:Artifact'</a>, <a>artifact_name</a> - The artifact's
--   name.
--   
--   <a>$sel:revision:Artifact'</a>, <a>artifact_revision</a> - The
--   artifact's revision ID. Depending on the type of object, this could be
--   a commit ID (GitHub) or a revision ID (Amazon S3).
newArtifact :: Artifact

-- | The location of an artifact.
artifact_location :: Lens' Artifact (Maybe ArtifactLocation)

-- | The artifact's name.
artifact_name :: Lens' Artifact (Maybe Text)

-- | The artifact's revision ID. Depending on the type of object, this
--   could be a commit ID (GitHub) or a revision ID (Amazon S3).
artifact_revision :: Lens' Artifact (Maybe Text)

-- | Artifact details for the action execution, such as the artifact
--   location.
--   
--   <i>See:</i> <a>newArtifactDetail</a> smart constructor.
data ArtifactDetail
ArtifactDetail' :: Maybe Text -> Maybe S3Location -> ArtifactDetail

-- | The artifact object name for the action execution.
[$sel:name:ArtifactDetail'] :: ArtifactDetail -> Maybe Text

-- | The Amazon S3 artifact location for the action execution.
[$sel:s3location:ArtifactDetail'] :: ArtifactDetail -> Maybe S3Location

-- | Create a value of <a>ArtifactDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ArtifactDetail'</a>, <a>artifactDetail_name</a> - The
--   artifact object name for the action execution.
--   
--   <a>$sel:s3location:ArtifactDetail'</a>,
--   <a>artifactDetail_s3location</a> - The Amazon S3 artifact location for
--   the action execution.
newArtifactDetail :: ArtifactDetail

-- | The artifact object name for the action execution.
artifactDetail_name :: Lens' ArtifactDetail (Maybe Text)

-- | The Amazon S3 artifact location for the action execution.
artifactDetail_s3location :: Lens' ArtifactDetail (Maybe S3Location)

-- | Returns information about the details of an artifact.
--   
--   <i>See:</i> <a>newArtifactDetails</a> smart constructor.
data ArtifactDetails
ArtifactDetails' :: Natural -> Natural -> ArtifactDetails

-- | The minimum number of artifacts allowed for the action type.
[$sel:minimumCount:ArtifactDetails'] :: ArtifactDetails -> Natural

-- | The maximum number of artifacts allowed for the action type.
[$sel:maximumCount:ArtifactDetails'] :: ArtifactDetails -> Natural

-- | Create a value of <a>ArtifactDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCount:ArtifactDetails'</a>,
--   <a>artifactDetails_minimumCount</a> - The minimum number of artifacts
--   allowed for the action type.
--   
--   <a>$sel:maximumCount:ArtifactDetails'</a>,
--   <a>artifactDetails_maximumCount</a> - The maximum number of artifacts
--   allowed for the action type.
newArtifactDetails :: Natural -> Natural -> ArtifactDetails

-- | The minimum number of artifacts allowed for the action type.
artifactDetails_minimumCount :: Lens' ArtifactDetails Natural

-- | The maximum number of artifacts allowed for the action type.
artifactDetails_maximumCount :: Lens' ArtifactDetails Natural

-- | Represents information about the location of an artifact.
--   
--   <i>See:</i> <a>newArtifactLocation</a> smart constructor.
data ArtifactLocation
ArtifactLocation' :: Maybe S3ArtifactLocation -> Maybe ArtifactLocationType -> ArtifactLocation

-- | The S3 bucket that contains the artifact.
[$sel:s3Location:ArtifactLocation'] :: ArtifactLocation -> Maybe S3ArtifactLocation

-- | The type of artifact in the location.
[$sel:type':ArtifactLocation'] :: ArtifactLocation -> Maybe ArtifactLocationType

-- | Create a value of <a>ArtifactLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Location:ArtifactLocation'</a>,
--   <a>artifactLocation_s3Location</a> - The S3 bucket that contains the
--   artifact.
--   
--   <a>$sel:type':ArtifactLocation'</a>, <a>artifactLocation_type</a> -
--   The type of artifact in the location.
newArtifactLocation :: ArtifactLocation

-- | The S3 bucket that contains the artifact.
artifactLocation_s3Location :: Lens' ArtifactLocation (Maybe S3ArtifactLocation)

-- | The type of artifact in the location.
artifactLocation_type :: Lens' ArtifactLocation (Maybe ArtifactLocationType)

-- | Represents revision details of an artifact.
--   
--   <i>See:</i> <a>newArtifactRevision</a> smart constructor.
data ArtifactRevision
ArtifactRevision' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> ArtifactRevision

-- | Summary information about the most recent revision of the artifact.
--   For GitHub and AWS CodeCommit repositories, the commit message. For
--   Amazon S3 buckets or actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
[$sel:revisionSummary:ArtifactRevision'] :: ArtifactRevision -> Maybe Text

-- | The commit ID for the artifact revision. For artifacts stored in
--   GitHub or AWS CodeCommit repositories, the commit ID is linked to a
--   commit details page.
[$sel:revisionUrl:ArtifactRevision'] :: ArtifactRevision -> Maybe Text

-- | The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
[$sel:created:ArtifactRevision'] :: ArtifactRevision -> Maybe POSIX

-- | The name of an artifact. This name might be system-generated, such as
--   "MyApp", or defined by the user when an action is created.
[$sel:name:ArtifactRevision'] :: ArtifactRevision -> Maybe Text

-- | The revision ID of the artifact.
[$sel:revisionId:ArtifactRevision'] :: ArtifactRevision -> Maybe Text

-- | An additional identifier for a revision, such as a commit date or, for
--   artifacts stored in Amazon S3 buckets, the ETag value.
[$sel:revisionChangeIdentifier:ArtifactRevision'] :: ArtifactRevision -> Maybe Text

-- | Create a value of <a>ArtifactRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionSummary:ArtifactRevision'</a>,
--   <a>artifactRevision_revisionSummary</a> - Summary information about
--   the most recent revision of the artifact. For GitHub and AWS
--   CodeCommit repositories, the commit message. For Amazon S3 buckets or
--   actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
--   
--   <a>$sel:revisionUrl:ArtifactRevision'</a>,
--   <a>artifactRevision_revisionUrl</a> - The commit ID for the artifact
--   revision. For artifacts stored in GitHub or AWS CodeCommit
--   repositories, the commit ID is linked to a commit details page.
--   
--   <a>$sel:created:ArtifactRevision'</a>, <a>artifactRevision_created</a>
--   - The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
--   
--   <a>$sel:name:ArtifactRevision'</a>, <a>artifactRevision_name</a> - The
--   name of an artifact. This name might be system-generated, such as
--   "MyApp", or defined by the user when an action is created.
--   
--   <a>$sel:revisionId:ArtifactRevision'</a>,
--   <a>artifactRevision_revisionId</a> - The revision ID of the artifact.
--   
--   <a>$sel:revisionChangeIdentifier:ArtifactRevision'</a>,
--   <a>artifactRevision_revisionChangeIdentifier</a> - An additional
--   identifier for a revision, such as a commit date or, for artifacts
--   stored in Amazon S3 buckets, the ETag value.
newArtifactRevision :: ArtifactRevision

-- | Summary information about the most recent revision of the artifact.
--   For GitHub and AWS CodeCommit repositories, the commit message. For
--   Amazon S3 buckets or actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
artifactRevision_revisionSummary :: Lens' ArtifactRevision (Maybe Text)

-- | The commit ID for the artifact revision. For artifacts stored in
--   GitHub or AWS CodeCommit repositories, the commit ID is linked to a
--   commit details page.
artifactRevision_revisionUrl :: Lens' ArtifactRevision (Maybe Text)

-- | The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
artifactRevision_created :: Lens' ArtifactRevision (Maybe UTCTime)

-- | The name of an artifact. This name might be system-generated, such as
--   "MyApp", or defined by the user when an action is created.
artifactRevision_name :: Lens' ArtifactRevision (Maybe Text)

-- | The revision ID of the artifact.
artifactRevision_revisionId :: Lens' ArtifactRevision (Maybe Text)

-- | An additional identifier for a revision, such as a commit date or, for
--   artifacts stored in Amazon S3 buckets, the ETag value.
artifactRevision_revisionChangeIdentifier :: Lens' ArtifactRevision (Maybe Text)

-- | The S3 bucket where artifacts for the pipeline are stored.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
--   
--   <i>See:</i> <a>newArtifactStore</a> smart constructor.
data ArtifactStore
ArtifactStore' :: Maybe EncryptionKey -> ArtifactStoreType -> Text -> ArtifactStore

-- | The encryption key used to encrypt the data in the artifact store,
--   such as an AWS Key Management Service (AWS KMS) key. If this is
--   undefined, the default key for Amazon S3 is used.
[$sel:encryptionKey:ArtifactStore'] :: ArtifactStore -> Maybe EncryptionKey

-- | The type of the artifact store, such as S3.
[$sel:type':ArtifactStore'] :: ArtifactStore -> ArtifactStoreType

-- | The S3 bucket used for storing the artifacts for a pipeline. You can
--   specify the name of an S3 bucket but not a folder in the bucket. A
--   folder to contain the pipeline artifacts is created for you based on
--   the name of the pipeline. You can use any S3 bucket in the same AWS
--   Region as the pipeline to store your pipeline artifacts.
[$sel:location:ArtifactStore'] :: ArtifactStore -> Text

-- | Create a value of <a>ArtifactStore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKey:ArtifactStore'</a>,
--   <a>artifactStore_encryptionKey</a> - The encryption key used to
--   encrypt the data in the artifact store, such as an AWS Key Management
--   Service (AWS KMS) key. If this is undefined, the default key for
--   Amazon S3 is used.
--   
--   <a>$sel:type':ArtifactStore'</a>, <a>artifactStore_type</a> - The type
--   of the artifact store, such as S3.
--   
--   <a>$sel:location:ArtifactStore'</a>, <a>artifactStore_location</a> -
--   The S3 bucket used for storing the artifacts for a pipeline. You can
--   specify the name of an S3 bucket but not a folder in the bucket. A
--   folder to contain the pipeline artifacts is created for you based on
--   the name of the pipeline. You can use any S3 bucket in the same AWS
--   Region as the pipeline to store your pipeline artifacts.
newArtifactStore :: ArtifactStoreType -> Text -> ArtifactStore

-- | The encryption key used to encrypt the data in the artifact store,
--   such as an AWS Key Management Service (AWS KMS) key. If this is
--   undefined, the default key for Amazon S3 is used.
artifactStore_encryptionKey :: Lens' ArtifactStore (Maybe EncryptionKey)

-- | The type of the artifact store, such as S3.
artifactStore_type :: Lens' ArtifactStore ArtifactStoreType

-- | The S3 bucket used for storing the artifacts for a pipeline. You can
--   specify the name of an S3 bucket but not a folder in the bucket. A
--   folder to contain the pipeline artifacts is created for you based on
--   the name of the pipeline. You can use any S3 bucket in the same AWS
--   Region as the pipeline to store your pipeline artifacts.
artifactStore_location :: Lens' ArtifactStore Text

-- | Reserved for future use.
--   
--   <i>See:</i> <a>newBlockerDeclaration</a> smart constructor.
data BlockerDeclaration
BlockerDeclaration' :: Text -> BlockerType -> BlockerDeclaration

-- | Reserved for future use.
[$sel:name:BlockerDeclaration'] :: BlockerDeclaration -> Text

-- | Reserved for future use.
[$sel:type':BlockerDeclaration'] :: BlockerDeclaration -> BlockerType

-- | Create a value of <a>BlockerDeclaration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BlockerDeclaration'</a>, <a>blockerDeclaration_name</a> -
--   Reserved for future use.
--   
--   <a>$sel:type':BlockerDeclaration'</a>, <a>blockerDeclaration_type</a>
--   - Reserved for future use.
newBlockerDeclaration :: Text -> BlockerType -> BlockerDeclaration

-- | Reserved for future use.
blockerDeclaration_name :: Lens' BlockerDeclaration Text

-- | Reserved for future use.
blockerDeclaration_type :: Lens' BlockerDeclaration BlockerType

-- | Represents information about a current revision.
--   
--   <i>See:</i> <a>newCurrentRevision</a> smart constructor.
data CurrentRevision
CurrentRevision' :: Maybe Text -> Maybe POSIX -> Text -> Text -> CurrentRevision

-- | The summary of the most recent revision of the artifact.
[$sel:revisionSummary:CurrentRevision'] :: CurrentRevision -> Maybe Text

-- | The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
[$sel:created:CurrentRevision'] :: CurrentRevision -> Maybe POSIX

-- | The revision ID of the current version of an artifact.
[$sel:revision:CurrentRevision'] :: CurrentRevision -> Text

-- | The change identifier for the current revision.
[$sel:changeIdentifier:CurrentRevision'] :: CurrentRevision -> Text

-- | Create a value of <a>CurrentRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionSummary:CurrentRevision'</a>,
--   <a>currentRevision_revisionSummary</a> - The summary of the most
--   recent revision of the artifact.
--   
--   <a>$sel:created:CurrentRevision'</a>, <a>currentRevision_created</a> -
--   The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
--   
--   <a>$sel:revision:CurrentRevision'</a>, <a>currentRevision_revision</a>
--   - The revision ID of the current version of an artifact.
--   
--   <a>$sel:changeIdentifier:CurrentRevision'</a>,
--   <a>currentRevision_changeIdentifier</a> - The change identifier for
--   the current revision.
newCurrentRevision :: Text -> Text -> CurrentRevision

-- | The summary of the most recent revision of the artifact.
currentRevision_revisionSummary :: Lens' CurrentRevision (Maybe Text)

-- | The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
currentRevision_created :: Lens' CurrentRevision (Maybe UTCTime)

-- | The revision ID of the current version of an artifact.
currentRevision_revision :: Lens' CurrentRevision Text

-- | The change identifier for the current revision.
currentRevision_changeIdentifier :: Lens' CurrentRevision Text

-- | Represents information about the key used to encrypt data in the
--   artifact store, such as an AWS Key Management Service (AWS KMS) key.
--   
--   <i>See:</i> <a>newEncryptionKey</a> smart constructor.
data EncryptionKey
EncryptionKey' :: Text -> EncryptionKeyType -> EncryptionKey

-- | The ID used to identify the key. For an AWS KMS key, you can use the
--   key ID, the key ARN, or the alias ARN.
--   
--   Aliases are recognized only in the account that created the customer
--   master key (CMK). For cross-account actions, you can only use the key
--   ID or key ARN to identify the key.
[$sel:id:EncryptionKey'] :: EncryptionKey -> Text

-- | The type of encryption key, such as an AWS Key Management Service (AWS
--   KMS) key. When creating or updating a pipeline, the value must be set
--   to 'KMS'.
[$sel:type':EncryptionKey'] :: EncryptionKey -> EncryptionKeyType

-- | Create a value of <a>EncryptionKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:EncryptionKey'</a>, <a>encryptionKey_id</a> - The ID used
--   to identify the key. For an AWS KMS key, you can use the key ID, the
--   key ARN, or the alias ARN.
--   
--   Aliases are recognized only in the account that created the customer
--   master key (CMK). For cross-account actions, you can only use the key
--   ID or key ARN to identify the key.
--   
--   <a>$sel:type':EncryptionKey'</a>, <a>encryptionKey_type</a> - The type
--   of encryption key, such as an AWS Key Management Service (AWS KMS)
--   key. When creating or updating a pipeline, the value must be set to
--   'KMS'.
newEncryptionKey :: Text -> EncryptionKeyType -> EncryptionKey

-- | The ID used to identify the key. For an AWS KMS key, you can use the
--   key ID, the key ARN, or the alias ARN.
--   
--   Aliases are recognized only in the account that created the customer
--   master key (CMK). For cross-account actions, you can only use the key
--   ID or key ARN to identify the key.
encryptionKey_id :: Lens' EncryptionKey Text

-- | The type of encryption key, such as an AWS Key Management Service (AWS
--   KMS) key. When creating or updating a pipeline, the value must be set
--   to 'KMS'.
encryptionKey_type :: Lens' EncryptionKey EncryptionKeyType

-- | Represents information about an error in AWS CodePipeline.
--   
--   <i>See:</i> <a>newErrorDetails</a> smart constructor.
data ErrorDetails
ErrorDetails' :: Maybe Text -> Maybe Text -> ErrorDetails

-- | The system ID or number code of the error.
[$sel:code:ErrorDetails'] :: ErrorDetails -> Maybe Text

-- | The text of the error message.
[$sel:message:ErrorDetails'] :: ErrorDetails -> Maybe Text

-- | Create a value of <a>ErrorDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:ErrorDetails'</a>, <a>errorDetails_code</a> - The system
--   ID or number code of the error.
--   
--   <a>$sel:message:ErrorDetails'</a>, <a>errorDetails_message</a> - The
--   text of the error message.
newErrorDetails :: ErrorDetails

-- | The system ID or number code of the error.
errorDetails_code :: Lens' ErrorDetails (Maybe Text)

-- | The text of the error message.
errorDetails_message :: Lens' ErrorDetails (Maybe Text)

-- | The details of the actions taken and results produced on an artifact
--   as it passes through stages in the pipeline.
--   
--   <i>See:</i> <a>newExecutionDetails</a> smart constructor.
data ExecutionDetails
ExecutionDetails' :: Maybe Text -> Maybe Text -> Maybe Natural -> ExecutionDetails

-- | The summary of the current status of the actions.
[$sel:summary:ExecutionDetails'] :: ExecutionDetails -> Maybe Text

-- | The system-generated unique ID of this action used to identify this
--   job worker in any external systems, such as AWS CodeDeploy.
[$sel:externalExecutionId:ExecutionDetails'] :: ExecutionDetails -> Maybe Text

-- | The percentage of work completed on the action, represented on a scale
--   of 0 to 100 percent.
[$sel:percentComplete:ExecutionDetails'] :: ExecutionDetails -> Maybe Natural

-- | Create a value of <a>ExecutionDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:ExecutionDetails'</a>, <a>executionDetails_summary</a>
--   - The summary of the current status of the actions.
--   
--   <a>$sel:externalExecutionId:ExecutionDetails'</a>,
--   <a>executionDetails_externalExecutionId</a> - The system-generated
--   unique ID of this action used to identify this job worker in any
--   external systems, such as AWS CodeDeploy.
--   
--   <a>$sel:percentComplete:ExecutionDetails'</a>,
--   <a>executionDetails_percentComplete</a> - The percentage of work
--   completed on the action, represented on a scale of 0 to 100 percent.
newExecutionDetails :: ExecutionDetails

-- | The summary of the current status of the actions.
executionDetails_summary :: Lens' ExecutionDetails (Maybe Text)

-- | The system-generated unique ID of this action used to identify this
--   job worker in any external systems, such as AWS CodeDeploy.
executionDetails_externalExecutionId :: Lens' ExecutionDetails (Maybe Text)

-- | The percentage of work completed on the action, represented on a scale
--   of 0 to 100 percent.
executionDetails_percentComplete :: Lens' ExecutionDetails (Maybe Natural)

-- | The interaction or event that started a pipeline execution.
--   
--   <i>See:</i> <a>newExecutionTrigger</a> smart constructor.
data ExecutionTrigger
ExecutionTrigger' :: Maybe TriggerType -> Maybe Text -> ExecutionTrigger

-- | The type of change-detection method, command, or user interaction that
--   started a pipeline execution.
[$sel:triggerType:ExecutionTrigger'] :: ExecutionTrigger -> Maybe TriggerType

-- | Detail related to the event that started a pipeline execution, such as
--   the webhook ARN of the webhook that triggered the pipeline execution
--   or the user ARN for a user-initiated <tt>start-pipeline-execution</tt>
--   CLI command.
[$sel:triggerDetail:ExecutionTrigger'] :: ExecutionTrigger -> Maybe Text

-- | Create a value of <a>ExecutionTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerType:ExecutionTrigger'</a>,
--   <a>executionTrigger_triggerType</a> - The type of change-detection
--   method, command, or user interaction that started a pipeline
--   execution.
--   
--   <a>$sel:triggerDetail:ExecutionTrigger'</a>,
--   <a>executionTrigger_triggerDetail</a> - Detail related to the event
--   that started a pipeline execution, such as the webhook ARN of the
--   webhook that triggered the pipeline execution or the user ARN for a
--   user-initiated <tt>start-pipeline-execution</tt> CLI command.
newExecutionTrigger :: ExecutionTrigger

-- | The type of change-detection method, command, or user interaction that
--   started a pipeline execution.
executionTrigger_triggerType :: Lens' ExecutionTrigger (Maybe TriggerType)

-- | Detail related to the event that started a pipeline execution, such as
--   the webhook ARN of the webhook that triggered the pipeline execution
--   or the user ARN for a user-initiated <tt>start-pipeline-execution</tt>
--   CLI command.
executionTrigger_triggerDetail :: Lens' ExecutionTrigger (Maybe Text)

-- | The action engine, or executor, related to the supported integration
--   model used to create and update the action type. The available
--   executor types are <tt>Lambda</tt> and <tt>JobWorker</tt>.
--   
--   <i>See:</i> <a>newExecutorConfiguration</a> smart constructor.
data ExecutorConfiguration
ExecutorConfiguration' :: Maybe LambdaExecutorConfiguration -> Maybe JobWorkerExecutorConfiguration -> ExecutorConfiguration

-- | Details about the <tt>Lambda</tt> executor of the action type.
[$sel:lambdaExecutorConfiguration:ExecutorConfiguration'] :: ExecutorConfiguration -> Maybe LambdaExecutorConfiguration

-- | Details about the <tt>JobWorker</tt> executor of the action type.
[$sel:jobWorkerExecutorConfiguration:ExecutorConfiguration'] :: ExecutorConfiguration -> Maybe JobWorkerExecutorConfiguration

-- | Create a value of <a>ExecutorConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaExecutorConfiguration:ExecutorConfiguration'</a>,
--   <a>executorConfiguration_lambdaExecutorConfiguration</a> - Details
--   about the <tt>Lambda</tt> executor of the action type.
--   
--   <a>$sel:jobWorkerExecutorConfiguration:ExecutorConfiguration'</a>,
--   <a>executorConfiguration_jobWorkerExecutorConfiguration</a> - Details
--   about the <tt>JobWorker</tt> executor of the action type.
newExecutorConfiguration :: ExecutorConfiguration

-- | Details about the <tt>Lambda</tt> executor of the action type.
executorConfiguration_lambdaExecutorConfiguration :: Lens' ExecutorConfiguration (Maybe LambdaExecutorConfiguration)

-- | Details about the <tt>JobWorker</tt> executor of the action type.
executorConfiguration_jobWorkerExecutorConfiguration :: Lens' ExecutorConfiguration (Maybe JobWorkerExecutorConfiguration)

-- | Represents information about failure details.
--   
--   <i>See:</i> <a>newFailureDetails</a> smart constructor.
data FailureDetails
FailureDetails' :: Maybe Text -> FailureType -> Text -> FailureDetails

-- | The external ID of the run of the action that failed.
[$sel:externalExecutionId:FailureDetails'] :: FailureDetails -> Maybe Text

-- | The type of the failure.
[$sel:type':FailureDetails'] :: FailureDetails -> FailureType

-- | The message about the failure.
[$sel:message:FailureDetails'] :: FailureDetails -> Text

-- | Create a value of <a>FailureDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalExecutionId:FailureDetails'</a>,
--   <a>failureDetails_externalExecutionId</a> - The external ID of the run
--   of the action that failed.
--   
--   <a>$sel:type':FailureDetails'</a>, <a>failureDetails_type</a> - The
--   type of the failure.
--   
--   <a>$sel:message:FailureDetails'</a>, <a>failureDetails_message</a> -
--   The message about the failure.
newFailureDetails :: FailureType -> Text -> FailureDetails

-- | The external ID of the run of the action that failed.
failureDetails_externalExecutionId :: Lens' FailureDetails (Maybe Text)

-- | The type of the failure.
failureDetails_type :: Lens' FailureDetails FailureType

-- | The message about the failure.
failureDetails_message :: Lens' FailureDetails Text

-- | Represents information about an artifact to be worked on, such as a
--   test or build artifact.
--   
--   <i>See:</i> <a>newInputArtifact</a> smart constructor.
data InputArtifact
InputArtifact' :: Text -> InputArtifact

-- | The name of the artifact to be worked on (for example, "My App").
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
[$sel:name:InputArtifact'] :: InputArtifact -> Text

-- | Create a value of <a>InputArtifact</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InputArtifact'</a>, <a>inputArtifact_name</a> - The name
--   of the artifact to be worked on (for example, "My App").
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
newInputArtifact :: Text -> InputArtifact

-- | The name of the artifact to be worked on (for example, "My App").
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
inputArtifact_name :: Lens' InputArtifact Text

-- | Represents information about a job.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe JobData -> Maybe Text -> Maybe Text -> Maybe Text -> Job

-- | Other data about a job.
[$sel:data':Job'] :: Job -> Maybe JobData

-- | The ID of the AWS account to use when performing the job.
[$sel:accountId:Job'] :: Job -> Maybe Text

-- | The unique system-generated ID of the job.
[$sel:id:Job'] :: Job -> Maybe Text

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Use this
--   number in an AcknowledgeJob request.
[$sel:nonce:Job'] :: Job -> Maybe Text

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':Job'</a>, <a>job_data</a> - Other data about a job.
--   
--   <a>$sel:accountId:Job'</a>, <a>job_accountId</a> - The ID of the AWS
--   account to use when performing the job.
--   
--   <a>$sel:id:Job'</a>, <a>job_id</a> - The unique system-generated ID of
--   the job.
--   
--   <a>$sel:nonce:Job'</a>, <a>job_nonce</a> - A system-generated random
--   number that AWS CodePipeline uses to ensure that the job is being
--   worked on by only one job worker. Use this number in an AcknowledgeJob
--   request.
newJob :: Job

-- | Other data about a job.
job_data :: Lens' Job (Maybe JobData)

-- | The ID of the AWS account to use when performing the job.
job_accountId :: Lens' Job (Maybe Text)

-- | The unique system-generated ID of the job.
job_id :: Lens' Job (Maybe Text)

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Use this
--   number in an AcknowledgeJob request.
job_nonce :: Lens' Job (Maybe Text)

-- | Represents other information about a job required for a job worker to
--   complete the job.
--   
--   <i>See:</i> <a>newJobData</a> smart constructor.
data JobData
JobData' :: Maybe Text -> Maybe [Artifact] -> Maybe (Sensitive AWSSessionCredentials) -> Maybe PipelineContext -> Maybe EncryptionKey -> Maybe ActionTypeId -> Maybe [Artifact] -> Maybe ActionConfiguration -> JobData

-- | A system-generated token, such as a AWS CodeDeploy deployment ID,
--   required by a job to continue the job asynchronously.
[$sel:continuationToken:JobData'] :: JobData -> Maybe Text

-- | The output of the job.
[$sel:outputArtifacts:JobData'] :: JobData -> Maybe [Artifact]

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifacts for the pipeline in AWS CodePipeline.
[$sel:artifactCredentials:JobData'] :: JobData -> Maybe (Sensitive AWSSessionCredentials)

-- | Represents information about a pipeline to a job worker.
--   
--   Includes <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt> for
--   custom jobs.
[$sel:pipelineContext:JobData'] :: JobData -> Maybe PipelineContext

-- | Represents information about the key used to encrypt data in the
--   artifact store, such as an AWS Key Management Service (AWS KMS) key.
[$sel:encryptionKey:JobData'] :: JobData -> Maybe EncryptionKey

-- | Represents information about an action type.
[$sel:actionTypeId:JobData'] :: JobData -> Maybe ActionTypeId

-- | The artifact supplied to the job.
[$sel:inputArtifacts:JobData'] :: JobData -> Maybe [Artifact]

-- | Represents information about an action configuration.
[$sel:actionConfiguration:JobData'] :: JobData -> Maybe ActionConfiguration

-- | Create a value of <a>JobData</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:continuationToken:JobData'</a>,
--   <a>jobData_continuationToken</a> - A system-generated token, such as a
--   AWS CodeDeploy deployment ID, required by a job to continue the job
--   asynchronously.
--   
--   <a>$sel:outputArtifacts:JobData'</a>, <a>jobData_outputArtifacts</a> -
--   The output of the job.
--   
--   <a>$sel:artifactCredentials:JobData'</a>,
--   <a>jobData_artifactCredentials</a> - Represents an AWS session
--   credentials object. These credentials are temporary credentials that
--   are issued by AWS Secure Token Service (STS). They can be used to
--   access input and output artifacts in the S3 bucket used to store
--   artifacts for the pipeline in AWS CodePipeline.
--   
--   <a>$sel:pipelineContext:JobData'</a>, <a>jobData_pipelineContext</a> -
--   Represents information about a pipeline to a job worker.
--   
--   Includes <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt> for
--   custom jobs.
--   
--   <a>$sel:encryptionKey:JobData'</a>, <a>jobData_encryptionKey</a> -
--   Represents information about the key used to encrypt data in the
--   artifact store, such as an AWS Key Management Service (AWS KMS) key.
--   
--   <a>$sel:actionTypeId:JobData'</a>, <a>jobData_actionTypeId</a> -
--   Represents information about an action type.
--   
--   <a>$sel:inputArtifacts:JobData'</a>, <a>jobData_inputArtifacts</a> -
--   The artifact supplied to the job.
--   
--   <a>$sel:actionConfiguration:JobData'</a>,
--   <a>jobData_actionConfiguration</a> - Represents information about an
--   action configuration.
newJobData :: JobData

-- | A system-generated token, such as a AWS CodeDeploy deployment ID,
--   required by a job to continue the job asynchronously.
jobData_continuationToken :: Lens' JobData (Maybe Text)

-- | The output of the job.
jobData_outputArtifacts :: Lens' JobData (Maybe [Artifact])

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifacts for the pipeline in AWS CodePipeline.
jobData_artifactCredentials :: Lens' JobData (Maybe AWSSessionCredentials)

-- | Represents information about a pipeline to a job worker.
--   
--   Includes <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt> for
--   custom jobs.
jobData_pipelineContext :: Lens' JobData (Maybe PipelineContext)

-- | Represents information about the key used to encrypt data in the
--   artifact store, such as an AWS Key Management Service (AWS KMS) key.
jobData_encryptionKey :: Lens' JobData (Maybe EncryptionKey)

-- | Represents information about an action type.
jobData_actionTypeId :: Lens' JobData (Maybe ActionTypeId)

-- | The artifact supplied to the job.
jobData_inputArtifacts :: Lens' JobData (Maybe [Artifact])

-- | Represents information about an action configuration.
jobData_actionConfiguration :: Lens' JobData (Maybe ActionConfiguration)

-- | Represents information about the details of a job.
--   
--   <i>See:</i> <a>newJobDetails</a> smart constructor.
data JobDetails
JobDetails' :: Maybe JobData -> Maybe Text -> Maybe Text -> JobDetails

-- | Represents other information about a job required for a job worker to
--   complete the job.
[$sel:data':JobDetails'] :: JobDetails -> Maybe JobData

-- | The AWS account ID associated with the job.
[$sel:accountId:JobDetails'] :: JobDetails -> Maybe Text

-- | The unique system-generated ID of the job.
[$sel:id:JobDetails'] :: JobDetails -> Maybe Text

-- | Create a value of <a>JobDetails</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':JobDetails'</a>, <a>jobDetails_data</a> - Represents
--   other information about a job required for a job worker to complete
--   the job.
--   
--   <a>$sel:accountId:JobDetails'</a>, <a>jobDetails_accountId</a> - The
--   AWS account ID associated with the job.
--   
--   <a>$sel:id:JobDetails'</a>, <a>jobDetails_id</a> - The unique
--   system-generated ID of the job.
newJobDetails :: JobDetails

-- | Represents other information about a job required for a job worker to
--   complete the job.
jobDetails_data :: Lens' JobDetails (Maybe JobData)

-- | The AWS account ID associated with the job.
jobDetails_accountId :: Lens' JobDetails (Maybe Text)

-- | The unique system-generated ID of the job.
jobDetails_id :: Lens' JobDetails (Maybe Text)

-- | Details about the polling configuration for the <tt>JobWorker</tt>
--   action engine, or executor.
--   
--   <i>See:</i> <a>newJobWorkerExecutorConfiguration</a> smart
--   constructor.
data JobWorkerExecutorConfiguration
JobWorkerExecutorConfiguration' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> JobWorkerExecutorConfiguration

-- | The accounts in which the job worker is configured and might poll for
--   jobs as part of the action execution.
[$sel:pollingAccounts:JobWorkerExecutorConfiguration'] :: JobWorkerExecutorConfiguration -> Maybe (NonEmpty Text)

-- | The service Principals in which the job worker is configured and might
--   poll for jobs as part of the action execution.
[$sel:pollingServicePrincipals:JobWorkerExecutorConfiguration'] :: JobWorkerExecutorConfiguration -> Maybe (NonEmpty Text)

-- | Create a value of <a>JobWorkerExecutorConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pollingAccounts:JobWorkerExecutorConfiguration'</a>,
--   <a>jobWorkerExecutorConfiguration_pollingAccounts</a> - The accounts
--   in which the job worker is configured and might poll for jobs as part
--   of the action execution.
--   
--   <a>$sel:pollingServicePrincipals:JobWorkerExecutorConfiguration'</a>,
--   <a>jobWorkerExecutorConfiguration_pollingServicePrincipals</a> - The
--   service Principals in which the job worker is configured and might
--   poll for jobs as part of the action execution.
newJobWorkerExecutorConfiguration :: JobWorkerExecutorConfiguration

-- | The accounts in which the job worker is configured and might poll for
--   jobs as part of the action execution.
jobWorkerExecutorConfiguration_pollingAccounts :: Lens' JobWorkerExecutorConfiguration (Maybe (NonEmpty Text))

-- | The service Principals in which the job worker is configured and might
--   poll for jobs as part of the action execution.
jobWorkerExecutorConfiguration_pollingServicePrincipals :: Lens' JobWorkerExecutorConfiguration (Maybe (NonEmpty Text))

-- | Details about the configuration for the <tt>Lambda</tt> action engine,
--   or executor.
--   
--   <i>See:</i> <a>newLambdaExecutorConfiguration</a> smart constructor.
data LambdaExecutorConfiguration
LambdaExecutorConfiguration' :: Text -> LambdaExecutorConfiguration

-- | The ARN of the Lambda function used by the action engine.
[$sel:lambdaFunctionArn:LambdaExecutorConfiguration'] :: LambdaExecutorConfiguration -> Text

-- | Create a value of <a>LambdaExecutorConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaFunctionArn:LambdaExecutorConfiguration'</a>,
--   <a>lambdaExecutorConfiguration_lambdaFunctionArn</a> - The ARN of the
--   Lambda function used by the action engine.
newLambdaExecutorConfiguration :: Text -> LambdaExecutorConfiguration

-- | The ARN of the Lambda function used by the action engine.
lambdaExecutorConfiguration_lambdaFunctionArn :: Lens' LambdaExecutorConfiguration Text

-- | The detail returned for each webhook after listing webhooks, such as
--   the webhook URL, the webhook name, and the webhook ARN.
--   
--   <i>See:</i> <a>newListWebhookItem</a> smart constructor.
data ListWebhookItem
ListWebhookItem' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe [Tag] -> WebhookDefinition -> Text -> ListWebhookItem

-- | The Amazon Resource Name (ARN) of the webhook.
[$sel:arn:ListWebhookItem'] :: ListWebhookItem -> Maybe Text

-- | The number code of the error.
[$sel:errorCode:ListWebhookItem'] :: ListWebhookItem -> Maybe Text

-- | The date and time a webhook was last successfully triggered, in
--   timestamp format.
[$sel:lastTriggered:ListWebhookItem'] :: ListWebhookItem -> Maybe POSIX

-- | The text of the error message about the webhook.
[$sel:errorMessage:ListWebhookItem'] :: ListWebhookItem -> Maybe Text

-- | Specifies the tags applied to the webhook.
[$sel:tags:ListWebhookItem'] :: ListWebhookItem -> Maybe [Tag]

-- | The detail returned for each webhook, such as the webhook
--   authentication type and filter rules.
[$sel:definition:ListWebhookItem'] :: ListWebhookItem -> WebhookDefinition

-- | A unique URL generated by CodePipeline. When a POST request is made to
--   this URL, the defined pipeline is started as long as the body of the
--   post request satisfies the defined authentication and filtering
--   conditions. Deleting and re-creating a webhook makes the old URL
--   invalid and generates a new one.
[$sel:url:ListWebhookItem'] :: ListWebhookItem -> Text

-- | Create a value of <a>ListWebhookItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ListWebhookItem'</a>, <a>listWebhookItem_arn</a> - The
--   Amazon Resource Name (ARN) of the webhook.
--   
--   <a>$sel:errorCode:ListWebhookItem'</a>,
--   <a>listWebhookItem_errorCode</a> - The number code of the error.
--   
--   <a>$sel:lastTriggered:ListWebhookItem'</a>,
--   <a>listWebhookItem_lastTriggered</a> - The date and time a webhook was
--   last successfully triggered, in timestamp format.
--   
--   <a>$sel:errorMessage:ListWebhookItem'</a>,
--   <a>listWebhookItem_errorMessage</a> - The text of the error message
--   about the webhook.
--   
--   <a>$sel:tags:ListWebhookItem'</a>, <a>listWebhookItem_tags</a> -
--   Specifies the tags applied to the webhook.
--   
--   <a>$sel:definition:ListWebhookItem'</a>,
--   <a>listWebhookItem_definition</a> - The detail returned for each
--   webhook, such as the webhook authentication type and filter rules.
--   
--   <a>$sel:url:ListWebhookItem'</a>, <a>listWebhookItem_url</a> - A
--   unique URL generated by CodePipeline. When a POST request is made to
--   this URL, the defined pipeline is started as long as the body of the
--   post request satisfies the defined authentication and filtering
--   conditions. Deleting and re-creating a webhook makes the old URL
--   invalid and generates a new one.
newListWebhookItem :: WebhookDefinition -> Text -> ListWebhookItem

-- | The Amazon Resource Name (ARN) of the webhook.
listWebhookItem_arn :: Lens' ListWebhookItem (Maybe Text)

-- | The number code of the error.
listWebhookItem_errorCode :: Lens' ListWebhookItem (Maybe Text)

-- | The date and time a webhook was last successfully triggered, in
--   timestamp format.
listWebhookItem_lastTriggered :: Lens' ListWebhookItem (Maybe UTCTime)

-- | The text of the error message about the webhook.
listWebhookItem_errorMessage :: Lens' ListWebhookItem (Maybe Text)

-- | Specifies the tags applied to the webhook.
listWebhookItem_tags :: Lens' ListWebhookItem (Maybe [Tag])

-- | The detail returned for each webhook, such as the webhook
--   authentication type and filter rules.
listWebhookItem_definition :: Lens' ListWebhookItem WebhookDefinition

-- | A unique URL generated by CodePipeline. When a POST request is made to
--   this URL, the defined pipeline is started as long as the body of the
--   post request satisfies the defined authentication and filtering
--   conditions. Deleting and re-creating a webhook makes the old URL
--   invalid and generates a new one.
listWebhookItem_url :: Lens' ListWebhookItem Text

-- | Represents information about the output of an action.
--   
--   <i>See:</i> <a>newOutputArtifact</a> smart constructor.
data OutputArtifact
OutputArtifact' :: Text -> OutputArtifact

-- | The name of the output of an artifact, such as "My App".
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
--   
--   Output artifact names must be unique within a pipeline.
[$sel:name:OutputArtifact'] :: OutputArtifact -> Text

-- | Create a value of <a>OutputArtifact</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:OutputArtifact'</a>, <a>outputArtifact_name</a> - The
--   name of the output of an artifact, such as "My App".
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
--   
--   Output artifact names must be unique within a pipeline.
newOutputArtifact :: Text -> OutputArtifact

-- | The name of the output of an artifact, such as "My App".
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
--   
--   Output artifact names must be unique within a pipeline.
outputArtifact_name :: Lens' OutputArtifact Text

-- | Represents information about a pipeline to a job worker.
--   
--   PipelineContext contains <tt>pipelineArn</tt> and
--   <tt>pipelineExecutionId</tt> for custom action jobs. The
--   <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt> fields are not
--   populated for ThirdParty action jobs.
--   
--   <i>See:</i> <a>newPipelineContext</a> smart constructor.
data PipelineContext
PipelineContext' :: Maybe StageContext -> Maybe Text -> Maybe ActionContext -> Maybe Text -> Maybe Text -> PipelineContext

-- | The stage of the pipeline.
[$sel:stage:PipelineContext'] :: PipelineContext -> Maybe StageContext

-- | The name of the pipeline. This is a user-specified value. Pipeline
--   names must be unique across all pipeline names under an Amazon Web
--   Services account.
[$sel:pipelineName:PipelineContext'] :: PipelineContext -> Maybe Text

-- | The context of an action to a job worker in the stage of a pipeline.
[$sel:action:PipelineContext'] :: PipelineContext -> Maybe ActionContext

-- | The Amazon Resource Name (ARN) of the pipeline.
[$sel:pipelineArn:PipelineContext'] :: PipelineContext -> Maybe Text

-- | The execution ID of the pipeline.
[$sel:pipelineExecutionId:PipelineContext'] :: PipelineContext -> Maybe Text

-- | Create a value of <a>PipelineContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:PipelineContext'</a>, <a>pipelineContext_stage</a> - The
--   stage of the pipeline.
--   
--   <a>$sel:pipelineName:PipelineContext'</a>,
--   <a>pipelineContext_pipelineName</a> - The name of the pipeline. This
--   is a user-specified value. Pipeline names must be unique across all
--   pipeline names under an Amazon Web Services account.
--   
--   <a>$sel:action:PipelineContext'</a>, <a>pipelineContext_action</a> -
--   The context of an action to a job worker in the stage of a pipeline.
--   
--   <a>$sel:pipelineArn:PipelineContext'</a>,
--   <a>pipelineContext_pipelineArn</a> - The Amazon Resource Name (ARN) of
--   the pipeline.
--   
--   <a>$sel:pipelineExecutionId:PipelineContext'</a>,
--   <a>pipelineContext_pipelineExecutionId</a> - The execution ID of the
--   pipeline.
newPipelineContext :: PipelineContext

-- | The stage of the pipeline.
pipelineContext_stage :: Lens' PipelineContext (Maybe StageContext)

-- | The name of the pipeline. This is a user-specified value. Pipeline
--   names must be unique across all pipeline names under an Amazon Web
--   Services account.
pipelineContext_pipelineName :: Lens' PipelineContext (Maybe Text)

-- | The context of an action to a job worker in the stage of a pipeline.
pipelineContext_action :: Lens' PipelineContext (Maybe ActionContext)

-- | The Amazon Resource Name (ARN) of the pipeline.
pipelineContext_pipelineArn :: Lens' PipelineContext (Maybe Text)

-- | The execution ID of the pipeline.
pipelineContext_pipelineExecutionId :: Lens' PipelineContext (Maybe Text)

-- | Represents the structure of actions and stages to be performed in the
--   pipeline.
--   
--   <i>See:</i> <a>newPipelineDeclaration</a> smart constructor.
data PipelineDeclaration
PipelineDeclaration' :: Maybe (HashMap Text ArtifactStore) -> Maybe ArtifactStore -> Maybe Natural -> Text -> Text -> [StageDeclaration] -> PipelineDeclaration

-- | A mapping of <tt>artifactStore</tt> objects and their corresponding
--   AWS Regions. There must be an artifact store for the pipeline Region
--   and for each cross-region action in the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
[$sel:artifactStores:PipelineDeclaration'] :: PipelineDeclaration -> Maybe (HashMap Text ArtifactStore)

-- | Represents information about the S3 bucket where artifacts are stored
--   for the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
[$sel:artifactStore:PipelineDeclaration'] :: PipelineDeclaration -> Maybe ArtifactStore

-- | The version number of the pipeline. A new pipeline always has a
--   version number of 1. This number is incremented when a pipeline is
--   updated.
[$sel:version:PipelineDeclaration'] :: PipelineDeclaration -> Maybe Natural

-- | The name of the pipeline.
[$sel:name:PipelineDeclaration'] :: PipelineDeclaration -> Text

-- | The Amazon Resource Name (ARN) for AWS CodePipeline to use to either
--   perform actions with no <tt>actionRoleArn</tt>, or to use to assume
--   roles for actions with an <tt>actionRoleArn</tt>.
[$sel:roleArn:PipelineDeclaration'] :: PipelineDeclaration -> Text

-- | The stage in which to perform the action.
[$sel:stages:PipelineDeclaration'] :: PipelineDeclaration -> [StageDeclaration]

-- | Create a value of <a>PipelineDeclaration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:artifactStores:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_artifactStores</a> - A mapping of
--   <tt>artifactStore</tt> objects and their corresponding AWS Regions.
--   There must be an artifact store for the pipeline Region and for each
--   cross-region action in the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
--   
--   <a>$sel:artifactStore:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_artifactStore</a> - Represents information
--   about the S3 bucket where artifacts are stored for the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
--   
--   <a>$sel:version:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_version</a> - The version number of the
--   pipeline. A new pipeline always has a version number of 1. This number
--   is incremented when a pipeline is updated.
--   
--   <a>$sel:name:PipelineDeclaration'</a>, <a>pipelineDeclaration_name</a>
--   - The name of the pipeline.
--   
--   <a>$sel:roleArn:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_roleArn</a> - The Amazon Resource Name (ARN)
--   for AWS CodePipeline to use to either perform actions with no
--   <tt>actionRoleArn</tt>, or to use to assume roles for actions with an
--   <tt>actionRoleArn</tt>.
--   
--   <a>$sel:stages:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_stages</a> - The stage in which to perform the
--   action.
newPipelineDeclaration :: Text -> Text -> PipelineDeclaration

-- | A mapping of <tt>artifactStore</tt> objects and their corresponding
--   AWS Regions. There must be an artifact store for the pipeline Region
--   and for each cross-region action in the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
pipelineDeclaration_artifactStores :: Lens' PipelineDeclaration (Maybe (HashMap Text ArtifactStore))

-- | Represents information about the S3 bucket where artifacts are stored
--   for the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
pipelineDeclaration_artifactStore :: Lens' PipelineDeclaration (Maybe ArtifactStore)

-- | The version number of the pipeline. A new pipeline always has a
--   version number of 1. This number is incremented when a pipeline is
--   updated.
pipelineDeclaration_version :: Lens' PipelineDeclaration (Maybe Natural)

-- | The name of the pipeline.
pipelineDeclaration_name :: Lens' PipelineDeclaration Text

-- | The Amazon Resource Name (ARN) for AWS CodePipeline to use to either
--   perform actions with no <tt>actionRoleArn</tt>, or to use to assume
--   roles for actions with an <tt>actionRoleArn</tt>.
pipelineDeclaration_roleArn :: Lens' PipelineDeclaration Text

-- | The stage in which to perform the action.
pipelineDeclaration_stages :: Lens' PipelineDeclaration [StageDeclaration]

-- | Represents information about an execution of a pipeline.
--   
--   <i>See:</i> <a>newPipelineExecution</a> smart constructor.
data PipelineExecution
PipelineExecution' :: Maybe PipelineExecutionStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe [ArtifactRevision] -> PipelineExecution

-- | The status of the pipeline execution.
--   
--   <ul>
--   <li>Cancelled: The pipeline’s definition was updated before the
--   pipeline execution could be completed.</li>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
[$sel:status:PipelineExecution'] :: PipelineExecution -> Maybe PipelineExecutionStatus

-- | The name of the pipeline with the specified pipeline execution.
[$sel:pipelineName:PipelineExecution'] :: PipelineExecution -> Maybe Text

-- | A summary that contains a description of the pipeline execution
--   status.
[$sel:statusSummary:PipelineExecution'] :: PipelineExecution -> Maybe Text

-- | The version number of the pipeline with the specified pipeline
--   execution.
[$sel:pipelineVersion:PipelineExecution'] :: PipelineExecution -> Maybe Natural

-- | The ID of the pipeline execution.
[$sel:pipelineExecutionId:PipelineExecution'] :: PipelineExecution -> Maybe Text

-- | A list of <tt>ArtifactRevision</tt> objects included in a pipeline
--   execution.
[$sel:artifactRevisions:PipelineExecution'] :: PipelineExecution -> Maybe [ArtifactRevision]

-- | Create a value of <a>PipelineExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PipelineExecution'</a>, <a>pipelineExecution_status</a>
--   - The status of the pipeline execution.
--   
--   <ul>
--   <li>Cancelled: The pipeline’s definition was updated before the
--   pipeline execution could be completed.</li>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
--   
--   <a>$sel:pipelineName:PipelineExecution'</a>,
--   <a>pipelineExecution_pipelineName</a> - The name of the pipeline with
--   the specified pipeline execution.
--   
--   <a>$sel:statusSummary:PipelineExecution'</a>,
--   <a>pipelineExecution_statusSummary</a> - A summary that contains a
--   description of the pipeline execution status.
--   
--   <a>$sel:pipelineVersion:PipelineExecution'</a>,
--   <a>pipelineExecution_pipelineVersion</a> - The version number of the
--   pipeline with the specified pipeline execution.
--   
--   <a>$sel:pipelineExecutionId:PipelineExecution'</a>,
--   <a>pipelineExecution_pipelineExecutionId</a> - The ID of the pipeline
--   execution.
--   
--   <a>$sel:artifactRevisions:PipelineExecution'</a>,
--   <a>pipelineExecution_artifactRevisions</a> - A list of
--   <tt>ArtifactRevision</tt> objects included in a pipeline execution.
newPipelineExecution :: PipelineExecution

-- | The status of the pipeline execution.
--   
--   <ul>
--   <li>Cancelled: The pipeline’s definition was updated before the
--   pipeline execution could be completed.</li>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
pipelineExecution_status :: Lens' PipelineExecution (Maybe PipelineExecutionStatus)

-- | The name of the pipeline with the specified pipeline execution.
pipelineExecution_pipelineName :: Lens' PipelineExecution (Maybe Text)

-- | A summary that contains a description of the pipeline execution
--   status.
pipelineExecution_statusSummary :: Lens' PipelineExecution (Maybe Text)

-- | The version number of the pipeline with the specified pipeline
--   execution.
pipelineExecution_pipelineVersion :: Lens' PipelineExecution (Maybe Natural)

-- | The ID of the pipeline execution.
pipelineExecution_pipelineExecutionId :: Lens' PipelineExecution (Maybe Text)

-- | A list of <tt>ArtifactRevision</tt> objects included in a pipeline
--   execution.
pipelineExecution_artifactRevisions :: Lens' PipelineExecution (Maybe [ArtifactRevision])

-- | Summary information about a pipeline execution.
--   
--   <i>See:</i> <a>newPipelineExecutionSummary</a> smart constructor.
data PipelineExecutionSummary
PipelineExecutionSummary' :: Maybe PipelineExecutionStatus -> Maybe POSIX -> Maybe StopExecutionTrigger -> Maybe Text -> Maybe [SourceRevision] -> Maybe ExecutionTrigger -> Maybe POSIX -> PipelineExecutionSummary

-- | The status of the pipeline execution.
--   
--   <ul>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
[$sel:status:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe PipelineExecutionStatus

-- | The date and time when the pipeline execution began, in timestamp
--   format.
[$sel:startTime:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe POSIX

-- | The interaction that stopped a pipeline execution.
[$sel:stopTrigger:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe StopExecutionTrigger

-- | The ID of the pipeline execution.
[$sel:pipelineExecutionId:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe Text

-- | A list of the source artifact revisions that initiated a pipeline
--   execution.
[$sel:sourceRevisions:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe [SourceRevision]

-- | The interaction or event that started a pipeline execution, such as
--   automated change detection or a <tt>StartPipelineExecution</tt> API
--   call.
[$sel:trigger:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe ExecutionTrigger

-- | The date and time of the last change to the pipeline execution, in
--   timestamp format.
[$sel:lastUpdateTime:PipelineExecutionSummary'] :: PipelineExecutionSummary -> Maybe POSIX

-- | Create a value of <a>PipelineExecutionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_status</a> - The status of the pipeline
--   execution.
--   
--   <ul>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
--   
--   <a>$sel:startTime:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_startTime</a> - The date and time when the
--   pipeline execution began, in timestamp format.
--   
--   <a>$sel:stopTrigger:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_stopTrigger</a> - The interaction that
--   stopped a pipeline execution.
--   
--   <a>$sel:pipelineExecutionId:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_pipelineExecutionId</a> - The ID of the
--   pipeline execution.
--   
--   <a>$sel:sourceRevisions:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_sourceRevisions</a> - A list of the source
--   artifact revisions that initiated a pipeline execution.
--   
--   <a>$sel:trigger:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_trigger</a> - The interaction or event
--   that started a pipeline execution, such as automated change detection
--   or a <tt>StartPipelineExecution</tt> API call.
--   
--   <a>$sel:lastUpdateTime:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_lastUpdateTime</a> - The date and time of
--   the last change to the pipeline execution, in timestamp format.
newPipelineExecutionSummary :: PipelineExecutionSummary

-- | The status of the pipeline execution.
--   
--   <ul>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
pipelineExecutionSummary_status :: Lens' PipelineExecutionSummary (Maybe PipelineExecutionStatus)

-- | The date and time when the pipeline execution began, in timestamp
--   format.
pipelineExecutionSummary_startTime :: Lens' PipelineExecutionSummary (Maybe UTCTime)

-- | The interaction that stopped a pipeline execution.
pipelineExecutionSummary_stopTrigger :: Lens' PipelineExecutionSummary (Maybe StopExecutionTrigger)

-- | The ID of the pipeline execution.
pipelineExecutionSummary_pipelineExecutionId :: Lens' PipelineExecutionSummary (Maybe Text)

-- | A list of the source artifact revisions that initiated a pipeline
--   execution.
pipelineExecutionSummary_sourceRevisions :: Lens' PipelineExecutionSummary (Maybe [SourceRevision])

-- | The interaction or event that started a pipeline execution, such as
--   automated change detection or a <tt>StartPipelineExecution</tt> API
--   call.
pipelineExecutionSummary_trigger :: Lens' PipelineExecutionSummary (Maybe ExecutionTrigger)

-- | The date and time of the last change to the pipeline execution, in
--   timestamp format.
pipelineExecutionSummary_lastUpdateTime :: Lens' PipelineExecutionSummary (Maybe UTCTime)

-- | Information about a pipeline.
--   
--   <i>See:</i> <a>newPipelineMetadata</a> smart constructor.
data PipelineMetadata
PipelineMetadata' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> PipelineMetadata

-- | The date and time the pipeline was created, in timestamp format.
[$sel:created:PipelineMetadata'] :: PipelineMetadata -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the pipeline.
[$sel:pipelineArn:PipelineMetadata'] :: PipelineMetadata -> Maybe Text

-- | The date and time the pipeline was last updated, in timestamp format.
[$sel:updated:PipelineMetadata'] :: PipelineMetadata -> Maybe POSIX

-- | Create a value of <a>PipelineMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:created:PipelineMetadata'</a>, <a>pipelineMetadata_created</a>
--   - The date and time the pipeline was created, in timestamp format.
--   
--   <a>$sel:pipelineArn:PipelineMetadata'</a>,
--   <a>pipelineMetadata_pipelineArn</a> - The Amazon Resource Name (ARN)
--   of the pipeline.
--   
--   <a>$sel:updated:PipelineMetadata'</a>, <a>pipelineMetadata_updated</a>
--   - The date and time the pipeline was last updated, in timestamp
--   format.
newPipelineMetadata :: PipelineMetadata

-- | The date and time the pipeline was created, in timestamp format.
pipelineMetadata_created :: Lens' PipelineMetadata (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the pipeline.
pipelineMetadata_pipelineArn :: Lens' PipelineMetadata (Maybe Text)

-- | The date and time the pipeline was last updated, in timestamp format.
pipelineMetadata_updated :: Lens' PipelineMetadata (Maybe UTCTime)

-- | Returns a summary of a pipeline.
--   
--   <i>See:</i> <a>newPipelineSummary</a> smart constructor.
data PipelineSummary
PipelineSummary' :: Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe POSIX -> PipelineSummary

-- | The date and time the pipeline was created, in timestamp format.
[$sel:created:PipelineSummary'] :: PipelineSummary -> Maybe POSIX

-- | The name of the pipeline.
[$sel:name:PipelineSummary'] :: PipelineSummary -> Maybe Text

-- | The version number of the pipeline.
[$sel:version:PipelineSummary'] :: PipelineSummary -> Maybe Natural

-- | The date and time of the last update to the pipeline, in timestamp
--   format.
[$sel:updated:PipelineSummary'] :: PipelineSummary -> Maybe POSIX

-- | Create a value of <a>PipelineSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:created:PipelineSummary'</a>, <a>pipelineSummary_created</a> -
--   The date and time the pipeline was created, in timestamp format.
--   
--   <a>$sel:name:PipelineSummary'</a>, <a>pipelineSummary_name</a> - The
--   name of the pipeline.
--   
--   <a>$sel:version:PipelineSummary'</a>, <a>pipelineSummary_version</a> -
--   The version number of the pipeline.
--   
--   <a>$sel:updated:PipelineSummary'</a>, <a>pipelineSummary_updated</a> -
--   The date and time of the last update to the pipeline, in timestamp
--   format.
newPipelineSummary :: PipelineSummary

-- | The date and time the pipeline was created, in timestamp format.
pipelineSummary_created :: Lens' PipelineSummary (Maybe UTCTime)

-- | The name of the pipeline.
pipelineSummary_name :: Lens' PipelineSummary (Maybe Text)

-- | The version number of the pipeline.
pipelineSummary_version :: Lens' PipelineSummary (Maybe Natural)

-- | The date and time of the last update to the pipeline, in timestamp
--   format.
pipelineSummary_updated :: Lens' PipelineSummary (Maybe UTCTime)

-- | The location of the S3 bucket that contains a revision.
--   
--   <i>See:</i> <a>newS3ArtifactLocation</a> smart constructor.
data S3ArtifactLocation
S3ArtifactLocation' :: Text -> Text -> S3ArtifactLocation

-- | The name of the S3 bucket.
[$sel:bucketName:S3ArtifactLocation'] :: S3ArtifactLocation -> Text

-- | The key of the object in the S3 bucket, which uniquely identifies the
--   object in the bucket.
[$sel:objectKey:S3ArtifactLocation'] :: S3ArtifactLocation -> Text

-- | Create a value of <a>S3ArtifactLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketName:S3ArtifactLocation'</a>,
--   <a>s3ArtifactLocation_bucketName</a> - The name of the S3 bucket.
--   
--   <a>$sel:objectKey:S3ArtifactLocation'</a>,
--   <a>s3ArtifactLocation_objectKey</a> - The key of the object in the S3
--   bucket, which uniquely identifies the object in the bucket.
newS3ArtifactLocation :: Text -> Text -> S3ArtifactLocation

-- | The name of the S3 bucket.
s3ArtifactLocation_bucketName :: Lens' S3ArtifactLocation Text

-- | The key of the object in the S3 bucket, which uniquely identifies the
--   object in the bucket.
s3ArtifactLocation_objectKey :: Lens' S3ArtifactLocation Text

-- | The Amazon S3 artifact location for an action's artifacts.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Maybe Text -> S3Location

-- | The Amazon S3 artifact bucket for an action's artifacts.
[$sel:bucket:S3Location'] :: S3Location -> Maybe Text

-- | The artifact name.
[$sel:key:S3Location'] :: S3Location -> Maybe Text

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:S3Location'</a>, <a>s3Location_bucket</a> - The Amazon
--   S3 artifact bucket for an action's artifacts.
--   
--   <a>$sel:key:S3Location'</a>, <a>s3Location_key</a> - The artifact
--   name.
newS3Location :: S3Location

-- | The Amazon S3 artifact bucket for an action's artifacts.
s3Location_bucket :: Lens' S3Location (Maybe Text)

-- | The artifact name.
s3Location_key :: Lens' S3Location (Maybe Text)

-- | Information about the version (or revision) of a source artifact that
--   initiated a pipeline execution.
--   
--   <i>See:</i> <a>newSourceRevision</a> smart constructor.
data SourceRevision
SourceRevision' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> SourceRevision

-- | Summary information about the most recent revision of the artifact.
--   For GitHub and AWS CodeCommit repositories, the commit message. For
--   Amazon S3 buckets or actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
[$sel:revisionSummary:SourceRevision'] :: SourceRevision -> Maybe Text

-- | The commit ID for the artifact revision. For artifacts stored in
--   GitHub or AWS CodeCommit repositories, the commit ID is linked to a
--   commit details page.
[$sel:revisionUrl:SourceRevision'] :: SourceRevision -> Maybe Text

-- | The system-generated unique ID that identifies the revision number of
--   the artifact.
[$sel:revisionId:SourceRevision'] :: SourceRevision -> Maybe Text

-- | The name of the action that processed the revision to the source
--   artifact.
[$sel:actionName:SourceRevision'] :: SourceRevision -> Text

-- | Create a value of <a>SourceRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionSummary:SourceRevision'</a>,
--   <a>sourceRevision_revisionSummary</a> - Summary information about the
--   most recent revision of the artifact. For GitHub and AWS CodeCommit
--   repositories, the commit message. For Amazon S3 buckets or actions,
--   the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
--   
--   <a>$sel:revisionUrl:SourceRevision'</a>,
--   <a>sourceRevision_revisionUrl</a> - The commit ID for the artifact
--   revision. For artifacts stored in GitHub or AWS CodeCommit
--   repositories, the commit ID is linked to a commit details page.
--   
--   <a>$sel:revisionId:SourceRevision'</a>,
--   <a>sourceRevision_revisionId</a> - The system-generated unique ID that
--   identifies the revision number of the artifact.
--   
--   <a>$sel:actionName:SourceRevision'</a>,
--   <a>sourceRevision_actionName</a> - The name of the action that
--   processed the revision to the source artifact.
newSourceRevision :: Text -> SourceRevision

-- | Summary information about the most recent revision of the artifact.
--   For GitHub and AWS CodeCommit repositories, the commit message. For
--   Amazon S3 buckets or actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
sourceRevision_revisionSummary :: Lens' SourceRevision (Maybe Text)

-- | The commit ID for the artifact revision. For artifacts stored in
--   GitHub or AWS CodeCommit repositories, the commit ID is linked to a
--   commit details page.
sourceRevision_revisionUrl :: Lens' SourceRevision (Maybe Text)

-- | The system-generated unique ID that identifies the revision number of
--   the artifact.
sourceRevision_revisionId :: Lens' SourceRevision (Maybe Text)

-- | The name of the action that processed the revision to the source
--   artifact.
sourceRevision_actionName :: Lens' SourceRevision Text

-- | Represents information about a stage to a job worker.
--   
--   <i>See:</i> <a>newStageContext</a> smart constructor.
data StageContext
StageContext' :: Maybe Text -> StageContext

-- | The name of the stage.
[$sel:name:StageContext'] :: StageContext -> Maybe Text

-- | Create a value of <a>StageContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StageContext'</a>, <a>stageContext_name</a> - The name of
--   the stage.
newStageContext :: StageContext

-- | The name of the stage.
stageContext_name :: Lens' StageContext (Maybe Text)

-- | Represents information about a stage and its definition.
--   
--   <i>See:</i> <a>newStageDeclaration</a> smart constructor.
data StageDeclaration
StageDeclaration' :: Maybe [BlockerDeclaration] -> Text -> [ActionDeclaration] -> StageDeclaration

-- | Reserved for future use.
[$sel:blockers:StageDeclaration'] :: StageDeclaration -> Maybe [BlockerDeclaration]

-- | The name of the stage.
[$sel:name:StageDeclaration'] :: StageDeclaration -> Text

-- | The actions included in a stage.
[$sel:actions:StageDeclaration'] :: StageDeclaration -> [ActionDeclaration]

-- | Create a value of <a>StageDeclaration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockers:StageDeclaration'</a>,
--   <a>stageDeclaration_blockers</a> - Reserved for future use.
--   
--   <a>$sel:name:StageDeclaration'</a>, <a>stageDeclaration_name</a> - The
--   name of the stage.
--   
--   <a>$sel:actions:StageDeclaration'</a>, <a>stageDeclaration_actions</a>
--   - The actions included in a stage.
newStageDeclaration :: Text -> StageDeclaration

-- | Reserved for future use.
stageDeclaration_blockers :: Lens' StageDeclaration (Maybe [BlockerDeclaration])

-- | The name of the stage.
stageDeclaration_name :: Lens' StageDeclaration Text

-- | The actions included in a stage.
stageDeclaration_actions :: Lens' StageDeclaration [ActionDeclaration]

-- | Represents information about the run of a stage.
--   
--   <i>See:</i> <a>newStageExecution</a> smart constructor.
data StageExecution
StageExecution' :: Text -> StageExecutionStatus -> StageExecution

-- | The ID of the pipeline execution associated with the stage.
[$sel:pipelineExecutionId:StageExecution'] :: StageExecution -> Text

-- | The status of the stage, or for a completed stage, the last status of
--   the stage.
--   
--   A status of cancelled means that the pipeline’s definition was updated
--   before the stage execution could be completed.
[$sel:status:StageExecution'] :: StageExecution -> StageExecutionStatus

-- | Create a value of <a>StageExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecutionId:StageExecution'</a>,
--   <a>stageExecution_pipelineExecutionId</a> - The ID of the pipeline
--   execution associated with the stage.
--   
--   <a>$sel:status:StageExecution'</a>, <a>stageExecution_status</a> - The
--   status of the stage, or for a completed stage, the last status of the
--   stage.
--   
--   A status of cancelled means that the pipeline’s definition was updated
--   before the stage execution could be completed.
newStageExecution :: Text -> StageExecutionStatus -> StageExecution

-- | The ID of the pipeline execution associated with the stage.
stageExecution_pipelineExecutionId :: Lens' StageExecution Text

-- | The status of the stage, or for a completed stage, the last status of
--   the stage.
--   
--   A status of cancelled means that the pipeline’s definition was updated
--   before the stage execution could be completed.
stageExecution_status :: Lens' StageExecution StageExecutionStatus

-- | Represents information about the state of the stage.
--   
--   <i>See:</i> <a>newStageState</a> smart constructor.
data StageState
StageState' :: Maybe StageExecution -> Maybe TransitionState -> Maybe [ActionState] -> Maybe Text -> Maybe StageExecution -> StageState
[$sel:inboundExecution:StageState'] :: StageState -> Maybe StageExecution

-- | The state of the inbound transition, which is either enabled or
--   disabled.
[$sel:inboundTransitionState:StageState'] :: StageState -> Maybe TransitionState

-- | The state of the stage.
[$sel:actionStates:StageState'] :: StageState -> Maybe [ActionState]

-- | The name of the stage.
[$sel:stageName:StageState'] :: StageState -> Maybe Text

-- | Information about the latest execution in the stage, including its ID
--   and status.
[$sel:latestExecution:StageState'] :: StageState -> Maybe StageExecution

-- | Create a value of <a>StageState</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inboundExecution:StageState'</a>,
--   <a>stageState_inboundExecution</a> - Undocumented member.
--   
--   <a>$sel:inboundTransitionState:StageState'</a>,
--   <a>stageState_inboundTransitionState</a> - The state of the inbound
--   transition, which is either enabled or disabled.
--   
--   <a>$sel:actionStates:StageState'</a>, <a>stageState_actionStates</a> -
--   The state of the stage.
--   
--   <a>$sel:stageName:StageState'</a>, <a>stageState_stageName</a> - The
--   name of the stage.
--   
--   <a>$sel:latestExecution:StageState'</a>,
--   <a>stageState_latestExecution</a> - Information about the latest
--   execution in the stage, including its ID and status.
newStageState :: StageState

-- | Undocumented member.
stageState_inboundExecution :: Lens' StageState (Maybe StageExecution)

-- | The state of the inbound transition, which is either enabled or
--   disabled.
stageState_inboundTransitionState :: Lens' StageState (Maybe TransitionState)

-- | The state of the stage.
stageState_actionStates :: Lens' StageState (Maybe [ActionState])

-- | The name of the stage.
stageState_stageName :: Lens' StageState (Maybe Text)

-- | Information about the latest execution in the stage, including its ID
--   and status.
stageState_latestExecution :: Lens' StageState (Maybe StageExecution)

-- | The interaction that stopped a pipeline execution.
--   
--   <i>See:</i> <a>newStopExecutionTrigger</a> smart constructor.
data StopExecutionTrigger
StopExecutionTrigger' :: Maybe Text -> StopExecutionTrigger

-- | The user-specified reason the pipeline was stopped.
[$sel:reason:StopExecutionTrigger'] :: StopExecutionTrigger -> Maybe Text

-- | Create a value of <a>StopExecutionTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:StopExecutionTrigger'</a>,
--   <a>stopExecutionTrigger_reason</a> - The user-specified reason the
--   pipeline was stopped.
newStopExecutionTrigger :: StopExecutionTrigger

-- | The user-specified reason the pipeline was stopped.
stopExecutionTrigger_reason :: Lens' StopExecutionTrigger (Maybe Text)

-- | A tag is a key-value pair that is used to manage the resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag's key.
[$sel:key:Tag'] :: Tag -> Text

-- | The tag's value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Text -> Text -> Tag

-- | The tag's key.
tag_key :: Lens' Tag Text

-- | The tag's value.
tag_value :: Lens' Tag Text

-- | A response to a <tt>PollForThirdPartyJobs</tt> request returned by AWS
--   CodePipeline when there is a job to be worked on by a partner action.
--   
--   <i>See:</i> <a>newThirdPartyJob</a> smart constructor.
data ThirdPartyJob
ThirdPartyJob' :: Maybe Text -> Maybe Text -> ThirdPartyJob

-- | The <tt>clientToken</tt> portion of the <tt>clientId</tt> and
--   <tt>clientToken</tt> pair used to verify that the calling entity is
--   allowed access to the job and its details.
[$sel:clientId:ThirdPartyJob'] :: ThirdPartyJob -> Maybe Text

-- | The identifier used to identify the job in AWS CodePipeline.
[$sel:jobId:ThirdPartyJob'] :: ThirdPartyJob -> Maybe Text

-- | Create a value of <a>ThirdPartyJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:ThirdPartyJob'</a>, <a>thirdPartyJob_clientId</a> -
--   The <tt>clientToken</tt> portion of the <tt>clientId</tt> and
--   <tt>clientToken</tt> pair used to verify that the calling entity is
--   allowed access to the job and its details.
--   
--   <a>$sel:jobId:ThirdPartyJob'</a>, <a>thirdPartyJob_jobId</a> - The
--   identifier used to identify the job in AWS CodePipeline.
newThirdPartyJob :: ThirdPartyJob

-- | The <tt>clientToken</tt> portion of the <tt>clientId</tt> and
--   <tt>clientToken</tt> pair used to verify that the calling entity is
--   allowed access to the job and its details.
thirdPartyJob_clientId :: Lens' ThirdPartyJob (Maybe Text)

-- | The identifier used to identify the job in AWS CodePipeline.
thirdPartyJob_jobId :: Lens' ThirdPartyJob (Maybe Text)

-- | Represents information about the job data for a partner action.
--   
--   <i>See:</i> <a>newThirdPartyJobData</a> smart constructor.
data ThirdPartyJobData
ThirdPartyJobData' :: Maybe Text -> Maybe [Artifact] -> Maybe (Sensitive AWSSessionCredentials) -> Maybe PipelineContext -> Maybe EncryptionKey -> Maybe ActionTypeId -> Maybe [Artifact] -> Maybe ActionConfiguration -> ThirdPartyJobData

-- | A system-generated token, such as a AWS CodeDeploy deployment ID, that
--   a job requires to continue the job asynchronously.
[$sel:continuationToken:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe Text

-- | The name of the artifact that is the result of the action, if any.
--   This name might be system-generated, such as "MyBuiltApp", or it might
--   be defined by the user when the action is created.
[$sel:outputArtifacts:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe [Artifact]

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifact for the pipeline in AWS CodePipeline.
[$sel:artifactCredentials:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe (Sensitive AWSSessionCredentials)

-- | Represents information about a pipeline to a job worker.
--   
--   Does not include <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt>
--   for ThirdParty jobs.
[$sel:pipelineContext:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe PipelineContext

-- | The encryption key used to encrypt and decrypt data in the artifact
--   store for the pipeline, such as an AWS Key Management Service (AWS
--   KMS) key. This is optional and might not be present.
[$sel:encryptionKey:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe EncryptionKey

-- | Represents information about an action type.
[$sel:actionTypeId:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe ActionTypeId

-- | The name of the artifact that is worked on by the action, if any. This
--   name might be system-generated, such as "MyApp", or it might be
--   defined by the user when the action is created. The input artifact
--   name must match the name of an output artifact generated by an action
--   in an earlier action or stage of the pipeline.
[$sel:inputArtifacts:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe [Artifact]

-- | Represents information about an action configuration.
[$sel:actionConfiguration:ThirdPartyJobData'] :: ThirdPartyJobData -> Maybe ActionConfiguration

-- | Create a value of <a>ThirdPartyJobData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:continuationToken:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_continuationToken</a> - A system-generated token,
--   such as a AWS CodeDeploy deployment ID, that a job requires to
--   continue the job asynchronously.
--   
--   <a>$sel:outputArtifacts:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_outputArtifacts</a> - The name of the artifact
--   that is the result of the action, if any. This name might be
--   system-generated, such as "MyBuiltApp", or it might be defined by the
--   user when the action is created.
--   
--   <a>$sel:artifactCredentials:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_artifactCredentials</a> - Represents an AWS
--   session credentials object. These credentials are temporary
--   credentials that are issued by AWS Secure Token Service (STS). They
--   can be used to access input and output artifacts in the S3 bucket used
--   to store artifact for the pipeline in AWS CodePipeline.
--   
--   <a>$sel:pipelineContext:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_pipelineContext</a> - Represents information
--   about a pipeline to a job worker.
--   
--   Does not include <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt>
--   for ThirdParty jobs.
--   
--   <a>$sel:encryptionKey:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_encryptionKey</a> - The encryption key used to
--   encrypt and decrypt data in the artifact store for the pipeline, such
--   as an AWS Key Management Service (AWS KMS) key. This is optional and
--   might not be present.
--   
--   <a>$sel:actionTypeId:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_actionTypeId</a> - Represents information about
--   an action type.
--   
--   <a>$sel:inputArtifacts:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_inputArtifacts</a> - The name of the artifact
--   that is worked on by the action, if any. This name might be
--   system-generated, such as "MyApp", or it might be defined by the user
--   when the action is created. The input artifact name must match the
--   name of an output artifact generated by an action in an earlier action
--   or stage of the pipeline.
--   
--   <a>$sel:actionConfiguration:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_actionConfiguration</a> - Represents information
--   about an action configuration.
newThirdPartyJobData :: ThirdPartyJobData

-- | A system-generated token, such as a AWS CodeDeploy deployment ID, that
--   a job requires to continue the job asynchronously.
thirdPartyJobData_continuationToken :: Lens' ThirdPartyJobData (Maybe Text)

-- | The name of the artifact that is the result of the action, if any.
--   This name might be system-generated, such as "MyBuiltApp", or it might
--   be defined by the user when the action is created.
thirdPartyJobData_outputArtifacts :: Lens' ThirdPartyJobData (Maybe [Artifact])

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifact for the pipeline in AWS CodePipeline.
thirdPartyJobData_artifactCredentials :: Lens' ThirdPartyJobData (Maybe AWSSessionCredentials)

-- | Represents information about a pipeline to a job worker.
--   
--   Does not include <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt>
--   for ThirdParty jobs.
thirdPartyJobData_pipelineContext :: Lens' ThirdPartyJobData (Maybe PipelineContext)

-- | The encryption key used to encrypt and decrypt data in the artifact
--   store for the pipeline, such as an AWS Key Management Service (AWS
--   KMS) key. This is optional and might not be present.
thirdPartyJobData_encryptionKey :: Lens' ThirdPartyJobData (Maybe EncryptionKey)

-- | Represents information about an action type.
thirdPartyJobData_actionTypeId :: Lens' ThirdPartyJobData (Maybe ActionTypeId)

-- | The name of the artifact that is worked on by the action, if any. This
--   name might be system-generated, such as "MyApp", or it might be
--   defined by the user when the action is created. The input artifact
--   name must match the name of an output artifact generated by an action
--   in an earlier action or stage of the pipeline.
thirdPartyJobData_inputArtifacts :: Lens' ThirdPartyJobData (Maybe [Artifact])

-- | Represents information about an action configuration.
thirdPartyJobData_actionConfiguration :: Lens' ThirdPartyJobData (Maybe ActionConfiguration)

-- | The details of a job sent in response to a
--   <tt>GetThirdPartyJobDetails</tt> request.
--   
--   <i>See:</i> <a>newThirdPartyJobDetails</a> smart constructor.
data ThirdPartyJobDetails
ThirdPartyJobDetails' :: Maybe ThirdPartyJobData -> Maybe Text -> Maybe Text -> ThirdPartyJobDetails

-- | The data to be returned by the third party job worker.
[$sel:data':ThirdPartyJobDetails'] :: ThirdPartyJobDetails -> Maybe ThirdPartyJobData

-- | The identifier used to identify the job details in AWS CodePipeline.
[$sel:id:ThirdPartyJobDetails'] :: ThirdPartyJobDetails -> Maybe Text

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Use this
--   number in an AcknowledgeThirdPartyJob request.
[$sel:nonce:ThirdPartyJobDetails'] :: ThirdPartyJobDetails -> Maybe Text

-- | Create a value of <a>ThirdPartyJobDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':ThirdPartyJobDetails'</a>,
--   <a>thirdPartyJobDetails_data</a> - The data to be returned by the
--   third party job worker.
--   
--   <a>$sel:id:ThirdPartyJobDetails'</a>, <a>thirdPartyJobDetails_id</a> -
--   The identifier used to identify the job details in AWS CodePipeline.
--   
--   <a>$sel:nonce:ThirdPartyJobDetails'</a>,
--   <a>thirdPartyJobDetails_nonce</a> - A system-generated random number
--   that AWS CodePipeline uses to ensure that the job is being worked on
--   by only one job worker. Use this number in an AcknowledgeThirdPartyJob
--   request.
newThirdPartyJobDetails :: ThirdPartyJobDetails

-- | The data to be returned by the third party job worker.
thirdPartyJobDetails_data :: Lens' ThirdPartyJobDetails (Maybe ThirdPartyJobData)

-- | The identifier used to identify the job details in AWS CodePipeline.
thirdPartyJobDetails_id :: Lens' ThirdPartyJobDetails (Maybe Text)

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Use this
--   number in an AcknowledgeThirdPartyJob request.
thirdPartyJobDetails_nonce :: Lens' ThirdPartyJobDetails (Maybe Text)

-- | Represents information about the state of transitions between one
--   stage and another stage.
--   
--   <i>See:</i> <a>newTransitionState</a> smart constructor.
data TransitionState
TransitionState' :: Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> TransitionState

-- | Whether the transition between stages is enabled (true) or disabled
--   (false).
[$sel:enabled:TransitionState'] :: TransitionState -> Maybe Bool

-- | The user-specified reason why the transition between two stages of a
--   pipeline was disabled.
[$sel:disabledReason:TransitionState'] :: TransitionState -> Maybe Text

-- | The timestamp when the transition state was last changed.
[$sel:lastChangedAt:TransitionState'] :: TransitionState -> Maybe POSIX

-- | The ID of the user who last changed the transition state.
[$sel:lastChangedBy:TransitionState'] :: TransitionState -> Maybe Text

-- | Create a value of <a>TransitionState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:TransitionState'</a>, <a>transitionState_enabled</a> -
--   Whether the transition between stages is enabled (true) or disabled
--   (false).
--   
--   <a>$sel:disabledReason:TransitionState'</a>,
--   <a>transitionState_disabledReason</a> - The user-specified reason why
--   the transition between two stages of a pipeline was disabled.
--   
--   <a>$sel:lastChangedAt:TransitionState'</a>,
--   <a>transitionState_lastChangedAt</a> - The timestamp when the
--   transition state was last changed.
--   
--   <a>$sel:lastChangedBy:TransitionState'</a>,
--   <a>transitionState_lastChangedBy</a> - The ID of the user who last
--   changed the transition state.
newTransitionState :: TransitionState

-- | Whether the transition between stages is enabled (true) or disabled
--   (false).
transitionState_enabled :: Lens' TransitionState (Maybe Bool)

-- | The user-specified reason why the transition between two stages of a
--   pipeline was disabled.
transitionState_disabledReason :: Lens' TransitionState (Maybe Text)

-- | The timestamp when the transition state was last changed.
transitionState_lastChangedAt :: Lens' TransitionState (Maybe UTCTime)

-- | The ID of the user who last changed the transition state.
transitionState_lastChangedBy :: Lens' TransitionState (Maybe Text)

-- | The authentication applied to incoming webhook trigger requests.
--   
--   <i>See:</i> <a>newWebhookAuthConfiguration</a> smart constructor.
data WebhookAuthConfiguration
WebhookAuthConfiguration' :: Maybe Text -> Maybe Text -> WebhookAuthConfiguration

-- | The property used to configure acceptance of webhooks in an IP address
--   range. For IP, only the <tt>AllowedIPRange</tt> property must be set.
--   This property must be set to a valid CIDR range.
[$sel:allowedIPRange:WebhookAuthConfiguration'] :: WebhookAuthConfiguration -> Maybe Text

-- | The property used to configure GitHub authentication. For GITHUB_HMAC,
--   only the <tt>SecretToken</tt> property must be set.
[$sel:secretToken:WebhookAuthConfiguration'] :: WebhookAuthConfiguration -> Maybe Text

-- | Create a value of <a>WebhookAuthConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowedIPRange:WebhookAuthConfiguration'</a>,
--   <a>webhookAuthConfiguration_allowedIPRange</a> - The property used to
--   configure acceptance of webhooks in an IP address range. For IP, only
--   the <tt>AllowedIPRange</tt> property must be set. This property must
--   be set to a valid CIDR range.
--   
--   <a>$sel:secretToken:WebhookAuthConfiguration'</a>,
--   <a>webhookAuthConfiguration_secretToken</a> - The property used to
--   configure GitHub authentication. For GITHUB_HMAC, only the
--   <tt>SecretToken</tt> property must be set.
newWebhookAuthConfiguration :: WebhookAuthConfiguration

-- | The property used to configure acceptance of webhooks in an IP address
--   range. For IP, only the <tt>AllowedIPRange</tt> property must be set.
--   This property must be set to a valid CIDR range.
webhookAuthConfiguration_allowedIPRange :: Lens' WebhookAuthConfiguration (Maybe Text)

-- | The property used to configure GitHub authentication. For GITHUB_HMAC,
--   only the <tt>SecretToken</tt> property must be set.
webhookAuthConfiguration_secretToken :: Lens' WebhookAuthConfiguration (Maybe Text)

-- | Represents information about a webhook and its definition.
--   
--   <i>See:</i> <a>newWebhookDefinition</a> smart constructor.
data WebhookDefinition
WebhookDefinition' :: Text -> Text -> Text -> [WebhookFilterRule] -> WebhookAuthenticationType -> WebhookAuthConfiguration -> WebhookDefinition

-- | The name of the webhook.
[$sel:name:WebhookDefinition'] :: WebhookDefinition -> Text

-- | The name of the pipeline you want to connect to the webhook.
[$sel:targetPipeline:WebhookDefinition'] :: WebhookDefinition -> Text

-- | The name of the action in a pipeline you want to connect to the
--   webhook. The action must be from the source (first) stage of the
--   pipeline.
[$sel:targetAction:WebhookDefinition'] :: WebhookDefinition -> Text

-- | A list of rules applied to the body/payload sent in the POST request
--   to a webhook URL. All defined rules must pass for the request to be
--   accepted and the pipeline started.
[$sel:filters:WebhookDefinition'] :: WebhookDefinition -> [WebhookFilterRule]

-- | Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.
--   
--   <ul>
--   <li>For information about the authentication scheme implemented by
--   GITHUB_HMAC, see <a>Securing your webhooks</a> on the GitHub Developer
--   website.</li>
--   <li>IP rejects webhooks trigger requests unless they originate from an
--   IP address in the IP range whitelisted in the authentication
--   configuration.</li>
--   <li>UNAUTHENTICATED accepts all webhook trigger requests regardless of
--   origin.</li>
--   </ul>
[$sel:authentication:WebhookDefinition'] :: WebhookDefinition -> WebhookAuthenticationType

-- | Properties that configure the authentication applied to incoming
--   webhook trigger requests. The required properties depend on the
--   authentication type. For GITHUB_HMAC, only the <tt>SecretToken
--   </tt>property must be set. For IP, only the <tt>AllowedIPRange
--   </tt>property must be set to a valid CIDR range. For UNAUTHENTICATED,
--   no properties can be set.
[$sel:authenticationConfiguration:WebhookDefinition'] :: WebhookDefinition -> WebhookAuthConfiguration

-- | Create a value of <a>WebhookDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:WebhookDefinition'</a>, <a>webhookDefinition_name</a> -
--   The name of the webhook.
--   
--   <a>$sel:targetPipeline:WebhookDefinition'</a>,
--   <a>webhookDefinition_targetPipeline</a> - The name of the pipeline you
--   want to connect to the webhook.
--   
--   <a>$sel:targetAction:WebhookDefinition'</a>,
--   <a>webhookDefinition_targetAction</a> - The name of the action in a
--   pipeline you want to connect to the webhook. The action must be from
--   the source (first) stage of the pipeline.
--   
--   <a>$sel:filters:WebhookDefinition'</a>,
--   <a>webhookDefinition_filters</a> - A list of rules applied to the
--   body/payload sent in the POST request to a webhook URL. All defined
--   rules must pass for the request to be accepted and the pipeline
--   started.
--   
--   <a>$sel:authentication:WebhookDefinition'</a>,
--   <a>webhookDefinition_authentication</a> - Supported options are
--   GITHUB_HMAC, IP, and UNAUTHENTICATED.
--   
--   <ul>
--   <li>For information about the authentication scheme implemented by
--   GITHUB_HMAC, see <a>Securing your webhooks</a> on the GitHub Developer
--   website.</li>
--   <li>IP rejects webhooks trigger requests unless they originate from an
--   IP address in the IP range whitelisted in the authentication
--   configuration.</li>
--   <li>UNAUTHENTICATED accepts all webhook trigger requests regardless of
--   origin.</li>
--   </ul>
--   
--   <a>$sel:authenticationConfiguration:WebhookDefinition'</a>,
--   <a>webhookDefinition_authenticationConfiguration</a> - Properties that
--   configure the authentication applied to incoming webhook trigger
--   requests. The required properties depend on the authentication type.
--   For GITHUB_HMAC, only the <tt>SecretToken </tt>property must be set.
--   For IP, only the <tt>AllowedIPRange </tt>property must be set to a
--   valid CIDR range. For UNAUTHENTICATED, no properties can be set.
newWebhookDefinition :: Text -> Text -> Text -> WebhookAuthenticationType -> WebhookAuthConfiguration -> WebhookDefinition

-- | The name of the webhook.
webhookDefinition_name :: Lens' WebhookDefinition Text

-- | The name of the pipeline you want to connect to the webhook.
webhookDefinition_targetPipeline :: Lens' WebhookDefinition Text

-- | The name of the action in a pipeline you want to connect to the
--   webhook. The action must be from the source (first) stage of the
--   pipeline.
webhookDefinition_targetAction :: Lens' WebhookDefinition Text

-- | A list of rules applied to the body/payload sent in the POST request
--   to a webhook URL. All defined rules must pass for the request to be
--   accepted and the pipeline started.
webhookDefinition_filters :: Lens' WebhookDefinition [WebhookFilterRule]

-- | Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.
--   
--   <ul>
--   <li>For information about the authentication scheme implemented by
--   GITHUB_HMAC, see <a>Securing your webhooks</a> on the GitHub Developer
--   website.</li>
--   <li>IP rejects webhooks trigger requests unless they originate from an
--   IP address in the IP range whitelisted in the authentication
--   configuration.</li>
--   <li>UNAUTHENTICATED accepts all webhook trigger requests regardless of
--   origin.</li>
--   </ul>
webhookDefinition_authentication :: Lens' WebhookDefinition WebhookAuthenticationType

-- | Properties that configure the authentication applied to incoming
--   webhook trigger requests. The required properties depend on the
--   authentication type. For GITHUB_HMAC, only the <tt>SecretToken
--   </tt>property must be set. For IP, only the <tt>AllowedIPRange
--   </tt>property must be set to a valid CIDR range. For UNAUTHENTICATED,
--   no properties can be set.
webhookDefinition_authenticationConfiguration :: Lens' WebhookDefinition WebhookAuthConfiguration

-- | The event criteria that specify when a webhook notification is sent to
--   your URL.
--   
--   <i>See:</i> <a>newWebhookFilterRule</a> smart constructor.
data WebhookFilterRule
WebhookFilterRule' :: Maybe Text -> Text -> WebhookFilterRule

-- | The value selected by the <tt>JsonPath</tt> expression must match what
--   is supplied in the <tt>MatchEquals</tt> field. Otherwise, the request
--   is ignored. Properties from the target action configuration can be
--   included as placeholders in this value by surrounding the action
--   configuration key with curly brackets. For example, if the value
--   supplied here is "refs/heads/{Branch}" and the target action has an
--   action configuration property called "Branch" with a value of
--   "master", the <tt>MatchEquals</tt> value is evaluated as
--   "refs/heads/master". For a list of action configuration properties for
--   built-in action types, see <a>Pipeline Structure Reference Action
--   Requirements</a>.
[$sel:matchEquals:WebhookFilterRule'] :: WebhookFilterRule -> Maybe Text

-- | A JsonPath expression that is applied to the body/payload of the
--   webhook. The value selected by the JsonPath expression must match the
--   value specified in the <tt>MatchEquals</tt> field. Otherwise, the
--   request is ignored. For more information, see <a>Java JsonPath
--   implementation</a> in GitHub.
[$sel:jsonPath:WebhookFilterRule'] :: WebhookFilterRule -> Text

-- | Create a value of <a>WebhookFilterRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchEquals:WebhookFilterRule'</a>,
--   <a>webhookFilterRule_matchEquals</a> - The value selected by the
--   <tt>JsonPath</tt> expression must match what is supplied in the
--   <tt>MatchEquals</tt> field. Otherwise, the request is ignored.
--   Properties from the target action configuration can be included as
--   placeholders in this value by surrounding the action configuration key
--   with curly brackets. For example, if the value supplied here is
--   "refs/heads/{Branch}" and the target action has an action
--   configuration property called "Branch" with a value of "master", the
--   <tt>MatchEquals</tt> value is evaluated as "refs/heads/master". For a
--   list of action configuration properties for built-in action types, see
--   <a>Pipeline Structure Reference Action Requirements</a>.
--   
--   <a>$sel:jsonPath:WebhookFilterRule'</a>,
--   <a>webhookFilterRule_jsonPath</a> - A JsonPath expression that is
--   applied to the body/payload of the webhook. The value selected by the
--   JsonPath expression must match the value specified in the
--   <tt>MatchEquals</tt> field. Otherwise, the request is ignored. For
--   more information, see <a>Java JsonPath implementation</a> in GitHub.
newWebhookFilterRule :: Text -> WebhookFilterRule

-- | The value selected by the <tt>JsonPath</tt> expression must match what
--   is supplied in the <tt>MatchEquals</tt> field. Otherwise, the request
--   is ignored. Properties from the target action configuration can be
--   included as placeholders in this value by surrounding the action
--   configuration key with curly brackets. For example, if the value
--   supplied here is "refs/heads/{Branch}" and the target action has an
--   action configuration property called "Branch" with a value of
--   "master", the <tt>MatchEquals</tt> value is evaluated as
--   "refs/heads/master". For a list of action configuration properties for
--   built-in action types, see <a>Pipeline Structure Reference Action
--   Requirements</a>.
webhookFilterRule_matchEquals :: Lens' WebhookFilterRule (Maybe Text)

-- | A JsonPath expression that is applied to the body/payload of the
--   webhook. The value selected by the JsonPath expression must match the
--   value specified in the <tt>MatchEquals</tt> field. Otherwise, the
--   request is ignored. For more information, see <a>Java JsonPath
--   implementation</a> in GitHub.
webhookFilterRule_jsonPath :: Lens' WebhookFilterRule Text


-- | Adds to or modifies the tags of the given resource. Tags are metadata
--   that can be used to manage a resource.
module Network.AWS.CodePipeline.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) of the resource you want to add tags
--   to.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags you want to modify or add to the resource.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource you want to add tags
--   to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags you
--   want to modify or add to the resource.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource you want to add tags
--   to.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags you want to modify or add to the resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.TagResource.TagResource
instance GHC.Show.Show Network.AWS.CodePipeline.TagResource.TagResource
instance GHC.Read.Read Network.AWS.CodePipeline.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.CodePipeline.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.CodePipeline.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.CodePipeline.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.CodePipeline.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.TagResource.TagResource


-- | Stops the specified pipeline execution. You choose to either stop the
--   pipeline execution by completing in-progress actions without starting
--   subsequent actions, or by abandoning in-progress actions. While
--   completing or abandoning in-progress actions, the pipeline execution
--   is in a <tt>Stopping</tt> state. After all in-progress actions are
--   completed or abandoned, the pipeline execution is in a
--   <tt>Stopped</tt> state.
module Network.AWS.CodePipeline.StopPipelineExecution

-- | <i>See:</i> <a>newStopPipelineExecution</a> smart constructor.
data StopPipelineExecution
StopPipelineExecution' :: Maybe Bool -> Maybe Text -> Text -> Text -> StopPipelineExecution

-- | Use this option to stop the pipeline execution by abandoning, rather
--   than finishing, in-progress actions.
--   
--   This option can lead to failed or out-of-sequence tasks.
[$sel:abandon:StopPipelineExecution'] :: StopPipelineExecution -> Maybe Bool

-- | Use this option to enter comments, such as the reason the pipeline was
--   stopped.
[$sel:reason:StopPipelineExecution'] :: StopPipelineExecution -> Maybe Text

-- | The name of the pipeline to stop.
[$sel:pipelineName:StopPipelineExecution'] :: StopPipelineExecution -> Text

-- | The ID of the pipeline execution to be stopped in the current stage.
--   Use the <tt>GetPipelineState</tt> action to retrieve the current
--   pipelineExecutionId.
[$sel:pipelineExecutionId:StopPipelineExecution'] :: StopPipelineExecution -> Text

-- | Create a value of <a>StopPipelineExecution</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:abandon:StopPipelineExecution'</a>,
--   <a>stopPipelineExecution_abandon</a> - Use this option to stop the
--   pipeline execution by abandoning, rather than finishing, in-progress
--   actions.
--   
--   This option can lead to failed or out-of-sequence tasks.
--   
--   <a>$sel:reason:StopPipelineExecution'</a>,
--   <a>stopPipelineExecution_reason</a> - Use this option to enter
--   comments, such as the reason the pipeline was stopped.
--   
--   <a>$sel:pipelineName:StopPipelineExecution'</a>,
--   <a>stopPipelineExecution_pipelineName</a> - The name of the pipeline
--   to stop.
--   
--   <a>$sel:pipelineExecutionId:StopPipelineExecution'</a>,
--   <a>stopPipelineExecution_pipelineExecutionId</a> - The ID of the
--   pipeline execution to be stopped in the current stage. Use the
--   <tt>GetPipelineState</tt> action to retrieve the current
--   pipelineExecutionId.
newStopPipelineExecution :: Text -> Text -> StopPipelineExecution

-- | Use this option to stop the pipeline execution by abandoning, rather
--   than finishing, in-progress actions.
--   
--   This option can lead to failed or out-of-sequence tasks.
stopPipelineExecution_abandon :: Lens' StopPipelineExecution (Maybe Bool)

-- | Use this option to enter comments, such as the reason the pipeline was
--   stopped.
stopPipelineExecution_reason :: Lens' StopPipelineExecution (Maybe Text)

-- | The name of the pipeline to stop.
stopPipelineExecution_pipelineName :: Lens' StopPipelineExecution Text

-- | The ID of the pipeline execution to be stopped in the current stage.
--   Use the <tt>GetPipelineState</tt> action to retrieve the current
--   pipelineExecutionId.
stopPipelineExecution_pipelineExecutionId :: Lens' StopPipelineExecution Text

-- | <i>See:</i> <a>newStopPipelineExecutionResponse</a> smart constructor.
data StopPipelineExecutionResponse
StopPipelineExecutionResponse' :: Maybe Text -> Int -> StopPipelineExecutionResponse

-- | The unique system-generated ID of the pipeline execution that was
--   stopped.
[$sel:pipelineExecutionId:StopPipelineExecutionResponse'] :: StopPipelineExecutionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StopPipelineExecutionResponse'] :: StopPipelineExecutionResponse -> Int

-- | Create a value of <a>StopPipelineExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecutionId:StopPipelineExecution'</a>,
--   <a>stopPipelineExecutionResponse_pipelineExecutionId</a> - The unique
--   system-generated ID of the pipeline execution that was stopped.
--   
--   <a>$sel:httpStatus:StopPipelineExecutionResponse'</a>,
--   <a>stopPipelineExecutionResponse_httpStatus</a> - The response's http
--   status code.
newStopPipelineExecutionResponse :: Int -> StopPipelineExecutionResponse

-- | The unique system-generated ID of the pipeline execution that was
--   stopped.
stopPipelineExecutionResponse_pipelineExecutionId :: Lens' StopPipelineExecutionResponse (Maybe Text)

-- | The response's http status code.
stopPipelineExecutionResponse_httpStatus :: Lens' StopPipelineExecutionResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecution
instance GHC.Show.Show Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecution
instance GHC.Read.Read Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecution
instance GHC.Classes.Eq Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecution
instance GHC.Generics.Generic Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecutionResponse
instance GHC.Show.Show Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecutionResponse
instance GHC.Read.Read Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecutionResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecutionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecution
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecutionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecution
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecution
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecution
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecution
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecution
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.StopPipelineExecution.StopPipelineExecution


-- | Starts the specified pipeline. Specifically, it begins processing the
--   latest commit to the source location specified as part of the
--   pipeline.
module Network.AWS.CodePipeline.StartPipelineExecution

-- | Represents the input of a <tt>StartPipelineExecution</tt> action.
--   
--   <i>See:</i> <a>newStartPipelineExecution</a> smart constructor.
data StartPipelineExecution
StartPipelineExecution' :: Maybe Text -> Text -> StartPipelineExecution

-- | The system-generated unique ID used to identify a unique execution
--   request.
[$sel:clientRequestToken:StartPipelineExecution'] :: StartPipelineExecution -> Maybe Text

-- | The name of the pipeline to start.
[$sel:name:StartPipelineExecution'] :: StartPipelineExecution -> Text

-- | Create a value of <a>StartPipelineExecution</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:StartPipelineExecution'</a>,
--   <a>startPipelineExecution_clientRequestToken</a> - The
--   system-generated unique ID used to identify a unique execution
--   request.
--   
--   <a>$sel:name:StartPipelineExecution'</a>,
--   <a>startPipelineExecution_name</a> - The name of the pipeline to
--   start.
newStartPipelineExecution :: Text -> StartPipelineExecution

-- | The system-generated unique ID used to identify a unique execution
--   request.
startPipelineExecution_clientRequestToken :: Lens' StartPipelineExecution (Maybe Text)

-- | The name of the pipeline to start.
startPipelineExecution_name :: Lens' StartPipelineExecution Text

-- | Represents the output of a <tt>StartPipelineExecution</tt> action.
--   
--   <i>See:</i> <a>newStartPipelineExecutionResponse</a> smart
--   constructor.
data StartPipelineExecutionResponse
StartPipelineExecutionResponse' :: Maybe Text -> Int -> StartPipelineExecutionResponse

-- | The unique system-generated ID of the pipeline execution that was
--   started.
[$sel:pipelineExecutionId:StartPipelineExecutionResponse'] :: StartPipelineExecutionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartPipelineExecutionResponse'] :: StartPipelineExecutionResponse -> Int

-- | Create a value of <a>StartPipelineExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecutionId:StartPipelineExecutionResponse'</a>,
--   <a>startPipelineExecutionResponse_pipelineExecutionId</a> - The unique
--   system-generated ID of the pipeline execution that was started.
--   
--   <a>$sel:httpStatus:StartPipelineExecutionResponse'</a>,
--   <a>startPipelineExecutionResponse_httpStatus</a> - The response's http
--   status code.
newStartPipelineExecutionResponse :: Int -> StartPipelineExecutionResponse

-- | The unique system-generated ID of the pipeline execution that was
--   started.
startPipelineExecutionResponse_pipelineExecutionId :: Lens' StartPipelineExecutionResponse (Maybe Text)

-- | The response's http status code.
startPipelineExecutionResponse_httpStatus :: Lens' StartPipelineExecutionResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecution
instance GHC.Show.Show Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecution
instance GHC.Read.Read Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecution
instance GHC.Classes.Eq Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecution
instance GHC.Generics.Generic Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecutionResponse
instance GHC.Show.Show Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecutionResponse
instance GHC.Read.Read Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecutionResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecutionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecution
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecutionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecution
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecution
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecution
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecution
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecution
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.StartPipelineExecution.StartPipelineExecution


-- | Resumes the pipeline execution by retrying the last failed actions in
--   a stage. You can retry a stage immediately if any of the actions in
--   the stage fail. When you retry, all actions that are still in progress
--   continue working, and failed actions are triggered again.
module Network.AWS.CodePipeline.RetryStageExecution

-- | Represents the input of a <tt>RetryStageExecution</tt> action.
--   
--   <i>See:</i> <a>newRetryStageExecution</a> smart constructor.
data RetryStageExecution
RetryStageExecution' :: Text -> Text -> Text -> StageRetryMode -> RetryStageExecution

-- | The name of the pipeline that contains the failed stage.
[$sel:pipelineName:RetryStageExecution'] :: RetryStageExecution -> Text

-- | The name of the failed stage to be retried.
[$sel:stageName:RetryStageExecution'] :: RetryStageExecution -> Text

-- | The ID of the pipeline execution in the failed stage to be retried.
--   Use the GetPipelineState action to retrieve the current
--   pipelineExecutionId of the failed stage
[$sel:pipelineExecutionId:RetryStageExecution'] :: RetryStageExecution -> Text

-- | The scope of the retry attempt. Currently, the only supported value is
--   FAILED_ACTIONS.
[$sel:retryMode:RetryStageExecution'] :: RetryStageExecution -> StageRetryMode

-- | Create a value of <a>RetryStageExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:RetryStageExecution'</a>,
--   <a>retryStageExecution_pipelineName</a> - The name of the pipeline
--   that contains the failed stage.
--   
--   <a>$sel:stageName:RetryStageExecution'</a>,
--   <a>retryStageExecution_stageName</a> - The name of the failed stage to
--   be retried.
--   
--   <a>$sel:pipelineExecutionId:RetryStageExecution'</a>,
--   <a>retryStageExecution_pipelineExecutionId</a> - The ID of the
--   pipeline execution in the failed stage to be retried. Use the
--   GetPipelineState action to retrieve the current pipelineExecutionId of
--   the failed stage
--   
--   <a>$sel:retryMode:RetryStageExecution'</a>,
--   <a>retryStageExecution_retryMode</a> - The scope of the retry attempt.
--   Currently, the only supported value is FAILED_ACTIONS.
newRetryStageExecution :: Text -> Text -> Text -> StageRetryMode -> RetryStageExecution

-- | The name of the pipeline that contains the failed stage.
retryStageExecution_pipelineName :: Lens' RetryStageExecution Text

-- | The name of the failed stage to be retried.
retryStageExecution_stageName :: Lens' RetryStageExecution Text

-- | The ID of the pipeline execution in the failed stage to be retried.
--   Use the GetPipelineState action to retrieve the current
--   pipelineExecutionId of the failed stage
retryStageExecution_pipelineExecutionId :: Lens' RetryStageExecution Text

-- | The scope of the retry attempt. Currently, the only supported value is
--   FAILED_ACTIONS.
retryStageExecution_retryMode :: Lens' RetryStageExecution StageRetryMode

-- | Represents the output of a <tt>RetryStageExecution</tt> action.
--   
--   <i>See:</i> <a>newRetryStageExecutionResponse</a> smart constructor.
data RetryStageExecutionResponse
RetryStageExecutionResponse' :: Maybe Text -> Int -> RetryStageExecutionResponse

-- | The ID of the current workflow execution in the failed stage.
[$sel:pipelineExecutionId:RetryStageExecutionResponse'] :: RetryStageExecutionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RetryStageExecutionResponse'] :: RetryStageExecutionResponse -> Int

-- | Create a value of <a>RetryStageExecutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecutionId:RetryStageExecution'</a>,
--   <a>retryStageExecutionResponse_pipelineExecutionId</a> - The ID of the
--   current workflow execution in the failed stage.
--   
--   <a>$sel:httpStatus:RetryStageExecutionResponse'</a>,
--   <a>retryStageExecutionResponse_httpStatus</a> - The response's http
--   status code.
newRetryStageExecutionResponse :: Int -> RetryStageExecutionResponse

-- | The ID of the current workflow execution in the failed stage.
retryStageExecutionResponse_pipelineExecutionId :: Lens' RetryStageExecutionResponse (Maybe Text)

-- | The response's http status code.
retryStageExecutionResponse_httpStatus :: Lens' RetryStageExecutionResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecution
instance GHC.Show.Show Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecution
instance GHC.Read.Read Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecution
instance GHC.Classes.Eq Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecution
instance GHC.Generics.Generic Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecutionResponse
instance GHC.Show.Show Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecutionResponse
instance GHC.Read.Read Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecutionResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecutionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecution
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecutionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecution
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecution
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecution
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecution
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecution
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.RetryStageExecution.RetryStageExecution


-- | Configures a connection between the webhook that was created and the
--   external tool with events to be detected.
module Network.AWS.CodePipeline.RegisterWebhookWithThirdParty

-- | <i>See:</i> <a>newRegisterWebhookWithThirdParty</a> smart constructor.
data RegisterWebhookWithThirdParty
RegisterWebhookWithThirdParty' :: Maybe Text -> RegisterWebhookWithThirdParty

-- | The name of an existing webhook created with PutWebhook to register
--   with a supported third party.
[$sel:webhookName:RegisterWebhookWithThirdParty'] :: RegisterWebhookWithThirdParty -> Maybe Text

-- | Create a value of <a>RegisterWebhookWithThirdParty</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:webhookName:RegisterWebhookWithThirdParty'</a>,
--   <a>registerWebhookWithThirdParty_webhookName</a> - The name of an
--   existing webhook created with PutWebhook to register with a supported
--   third party.
newRegisterWebhookWithThirdParty :: RegisterWebhookWithThirdParty

-- | The name of an existing webhook created with PutWebhook to register
--   with a supported third party.
registerWebhookWithThirdParty_webhookName :: Lens' RegisterWebhookWithThirdParty (Maybe Text)

-- | <i>See:</i> <a>newRegisterWebhookWithThirdPartyResponse</a> smart
--   constructor.
data RegisterWebhookWithThirdPartyResponse
RegisterWebhookWithThirdPartyResponse' :: Int -> RegisterWebhookWithThirdPartyResponse

-- | The response's http status code.
[$sel:httpStatus:RegisterWebhookWithThirdPartyResponse'] :: RegisterWebhookWithThirdPartyResponse -> Int

-- | Create a value of <a>RegisterWebhookWithThirdPartyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RegisterWebhookWithThirdPartyResponse'</a>,
--   <a>registerWebhookWithThirdPartyResponse_httpStatus</a> - The
--   response's http status code.
newRegisterWebhookWithThirdPartyResponse :: Int -> RegisterWebhookWithThirdPartyResponse

-- | The response's http status code.
registerWebhookWithThirdPartyResponse_httpStatus :: Lens' RegisterWebhookWithThirdPartyResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdParty
instance GHC.Show.Show Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdParty
instance GHC.Read.Read Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdParty
instance GHC.Classes.Eq Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdParty
instance GHC.Generics.Generic Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdPartyResponse
instance GHC.Show.Show Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdPartyResponse
instance GHC.Read.Read Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdPartyResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdPartyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdParty
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdPartyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdParty
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdParty
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdParty
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdParty
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdParty
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.RegisterWebhookWithThirdParty.RegisterWebhookWithThirdParty


-- | Defines a webhook and returns a unique webhook URL generated by
--   CodePipeline. This URL can be supplied to third party source hosting
--   providers to call every time there's a code change. When CodePipeline
--   receives a POST request on this URL, the pipeline defined in the
--   webhook is started as long as the POST request satisfied the
--   authentication and filtering requirements supplied when defining the
--   webhook. RegisterWebhookWithThirdParty and
--   DeregisterWebhookWithThirdParty APIs can be used to automatically
--   configure supported third parties to call the generated webhook URL.
module Network.AWS.CodePipeline.PutWebhook

-- | <i>See:</i> <a>newPutWebhook</a> smart constructor.
data PutWebhook
PutWebhook' :: Maybe [Tag] -> WebhookDefinition -> PutWebhook

-- | The tags for the webhook.
[$sel:tags:PutWebhook'] :: PutWebhook -> Maybe [Tag]

-- | The detail provided in an input file to create the webhook, such as
--   the webhook name, the pipeline name, and the action name. Give the
--   webhook a unique name that helps you identify it. You might name the
--   webhook after the pipeline and action it targets so that you can
--   easily recognize what it's used for later.
[$sel:webhook:PutWebhook'] :: PutWebhook -> WebhookDefinition

-- | Create a value of <a>PutWebhook</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PutWebhook'</a>, <a>putWebhook_tags</a> - The tags for
--   the webhook.
--   
--   <a>$sel:webhook:PutWebhook'</a>, <a>putWebhook_webhook</a> - The
--   detail provided in an input file to create the webhook, such as the
--   webhook name, the pipeline name, and the action name. Give the webhook
--   a unique name that helps you identify it. You might name the webhook
--   after the pipeline and action it targets so that you can easily
--   recognize what it's used for later.
newPutWebhook :: WebhookDefinition -> PutWebhook

-- | The tags for the webhook.
putWebhook_tags :: Lens' PutWebhook (Maybe [Tag])

-- | The detail provided in an input file to create the webhook, such as
--   the webhook name, the pipeline name, and the action name. Give the
--   webhook a unique name that helps you identify it. You might name the
--   webhook after the pipeline and action it targets so that you can
--   easily recognize what it's used for later.
putWebhook_webhook :: Lens' PutWebhook WebhookDefinition

-- | <i>See:</i> <a>newPutWebhookResponse</a> smart constructor.
data PutWebhookResponse
PutWebhookResponse' :: Maybe ListWebhookItem -> Int -> PutWebhookResponse

-- | The detail returned from creating the webhook, such as the webhook
--   name, webhook URL, and webhook ARN.
[$sel:webhook:PutWebhookResponse'] :: PutWebhookResponse -> Maybe ListWebhookItem

-- | The response's http status code.
[$sel:httpStatus:PutWebhookResponse'] :: PutWebhookResponse -> Int

-- | Create a value of <a>PutWebhookResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:webhook:PutWebhook'</a>, <a>putWebhookResponse_webhook</a> -
--   The detail returned from creating the webhook, such as the webhook
--   name, webhook URL, and webhook ARN.
--   
--   <a>$sel:httpStatus:PutWebhookResponse'</a>,
--   <a>putWebhookResponse_httpStatus</a> - The response's http status
--   code.
newPutWebhookResponse :: Int -> PutWebhookResponse

-- | The detail returned from creating the webhook, such as the webhook
--   name, webhook URL, and webhook ARN.
putWebhookResponse_webhook :: Lens' PutWebhookResponse (Maybe ListWebhookItem)

-- | The response's http status code.
putWebhookResponse_httpStatus :: Lens' PutWebhookResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutWebhook.PutWebhook
instance GHC.Show.Show Network.AWS.CodePipeline.PutWebhook.PutWebhook
instance GHC.Read.Read Network.AWS.CodePipeline.PutWebhook.PutWebhook
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutWebhook.PutWebhook
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutWebhook.PutWebhookResponse
instance GHC.Show.Show Network.AWS.CodePipeline.PutWebhook.PutWebhookResponse
instance GHC.Read.Read Network.AWS.CodePipeline.PutWebhook.PutWebhookResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutWebhook.PutWebhookResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.PutWebhook.PutWebhook
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutWebhook.PutWebhookResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.PutWebhook.PutWebhook
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutWebhook.PutWebhook
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.PutWebhook.PutWebhook
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.PutWebhook.PutWebhook
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.PutWebhook.PutWebhook
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.PutWebhook.PutWebhook


-- | Represents the success of a third party job as returned to the
--   pipeline by a job worker. Used for partner actions only.
module Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult

-- | Represents the input of a <tt>PutThirdPartyJobSuccessResult</tt>
--   action.
--   
--   <i>See:</i> <a>newPutThirdPartyJobSuccessResult</a> smart constructor.
data PutThirdPartyJobSuccessResult
PutThirdPartyJobSuccessResult' :: Maybe Text -> Maybe ExecutionDetails -> Maybe CurrentRevision -> Text -> Text -> PutThirdPartyJobSuccessResult

-- | A token generated by a job worker, such as an AWS CodeDeploy
--   deployment ID, that a successful job provides to identify a partner
--   action in progress. Future jobs use this token to identify the running
--   instance of the action. It can be reused to return more information
--   about the progress of the partner action. When the action is complete,
--   no continuation token should be supplied.
[$sel:continuationToken:PutThirdPartyJobSuccessResult'] :: PutThirdPartyJobSuccessResult -> Maybe Text

-- | The details of the actions taken and results produced on an artifact
--   as it passes through stages in the pipeline.
[$sel:executionDetails:PutThirdPartyJobSuccessResult'] :: PutThirdPartyJobSuccessResult -> Maybe ExecutionDetails

-- | Represents information about a current revision.
[$sel:currentRevision:PutThirdPartyJobSuccessResult'] :: PutThirdPartyJobSuccessResult -> Maybe CurrentRevision

-- | The ID of the job that successfully completed. This is the same ID
--   returned from <tt>PollForThirdPartyJobs</tt>.
[$sel:jobId:PutThirdPartyJobSuccessResult'] :: PutThirdPartyJobSuccessResult -> Text

-- | The clientToken portion of the clientId and clientToken pair used to
--   verify that the calling entity is allowed access to the job and its
--   details.
[$sel:clientToken:PutThirdPartyJobSuccessResult'] :: PutThirdPartyJobSuccessResult -> Text

-- | Create a value of <a>PutThirdPartyJobSuccessResult</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:continuationToken:PutThirdPartyJobSuccessResult'</a>,
--   <a>putThirdPartyJobSuccessResult_continuationToken</a> - A token
--   generated by a job worker, such as an AWS CodeDeploy deployment ID,
--   that a successful job provides to identify a partner action in
--   progress. Future jobs use this token to identify the running instance
--   of the action. It can be reused to return more information about the
--   progress of the partner action. When the action is complete, no
--   continuation token should be supplied.
--   
--   <a>$sel:executionDetails:PutThirdPartyJobSuccessResult'</a>,
--   <a>putThirdPartyJobSuccessResult_executionDetails</a> - The details of
--   the actions taken and results produced on an artifact as it passes
--   through stages in the pipeline.
--   
--   <a>$sel:currentRevision:PutThirdPartyJobSuccessResult'</a>,
--   <a>putThirdPartyJobSuccessResult_currentRevision</a> - Represents
--   information about a current revision.
--   
--   <a>$sel:jobId:PutThirdPartyJobSuccessResult'</a>,
--   <a>putThirdPartyJobSuccessResult_jobId</a> - The ID of the job that
--   successfully completed. This is the same ID returned from
--   <tt>PollForThirdPartyJobs</tt>.
--   
--   <a>$sel:clientToken:PutThirdPartyJobSuccessResult'</a>,
--   <a>putThirdPartyJobSuccessResult_clientToken</a> - The clientToken
--   portion of the clientId and clientToken pair used to verify that the
--   calling entity is allowed access to the job and its details.
newPutThirdPartyJobSuccessResult :: Text -> Text -> PutThirdPartyJobSuccessResult

-- | A token generated by a job worker, such as an AWS CodeDeploy
--   deployment ID, that a successful job provides to identify a partner
--   action in progress. Future jobs use this token to identify the running
--   instance of the action. It can be reused to return more information
--   about the progress of the partner action. When the action is complete,
--   no continuation token should be supplied.
putThirdPartyJobSuccessResult_continuationToken :: Lens' PutThirdPartyJobSuccessResult (Maybe Text)

-- | The details of the actions taken and results produced on an artifact
--   as it passes through stages in the pipeline.
putThirdPartyJobSuccessResult_executionDetails :: Lens' PutThirdPartyJobSuccessResult (Maybe ExecutionDetails)

-- | Represents information about a current revision.
putThirdPartyJobSuccessResult_currentRevision :: Lens' PutThirdPartyJobSuccessResult (Maybe CurrentRevision)

-- | The ID of the job that successfully completed. This is the same ID
--   returned from <tt>PollForThirdPartyJobs</tt>.
putThirdPartyJobSuccessResult_jobId :: Lens' PutThirdPartyJobSuccessResult Text

-- | The clientToken portion of the clientId and clientToken pair used to
--   verify that the calling entity is allowed access to the job and its
--   details.
putThirdPartyJobSuccessResult_clientToken :: Lens' PutThirdPartyJobSuccessResult Text

-- | <i>See:</i> <a>newPutThirdPartyJobSuccessResultResponse</a> smart
--   constructor.
data PutThirdPartyJobSuccessResultResponse
PutThirdPartyJobSuccessResultResponse' :: PutThirdPartyJobSuccessResultResponse

-- | Create a value of <a>PutThirdPartyJobSuccessResultResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutThirdPartyJobSuccessResultResponse :: PutThirdPartyJobSuccessResultResponse
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResult
instance GHC.Show.Show Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResult
instance GHC.Read.Read Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResult
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResult
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResultResponse
instance GHC.Show.Show Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResultResponse
instance GHC.Read.Read Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResultResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResultResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResult
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResultResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResult
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResult
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResult
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResult
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResult
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult.PutThirdPartyJobSuccessResult


-- | Represents the failure of a third party job as returned to the
--   pipeline by a job worker. Used for partner actions only.
module Network.AWS.CodePipeline.PutThirdPartyJobFailureResult

-- | Represents the input of a <tt>PutThirdPartyJobFailureResult</tt>
--   action.
--   
--   <i>See:</i> <a>newPutThirdPartyJobFailureResult</a> smart constructor.
data PutThirdPartyJobFailureResult
PutThirdPartyJobFailureResult' :: Text -> Text -> FailureDetails -> PutThirdPartyJobFailureResult

-- | The ID of the job that failed. This is the same ID returned from
--   <tt>PollForThirdPartyJobs</tt>.
[$sel:jobId:PutThirdPartyJobFailureResult'] :: PutThirdPartyJobFailureResult -> Text

-- | The clientToken portion of the clientId and clientToken pair used to
--   verify that the calling entity is allowed access to the job and its
--   details.
[$sel:clientToken:PutThirdPartyJobFailureResult'] :: PutThirdPartyJobFailureResult -> Text

-- | Represents information about failure details.
[$sel:failureDetails:PutThirdPartyJobFailureResult'] :: PutThirdPartyJobFailureResult -> FailureDetails

-- | Create a value of <a>PutThirdPartyJobFailureResult</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:PutThirdPartyJobFailureResult'</a>,
--   <a>putThirdPartyJobFailureResult_jobId</a> - The ID of the job that
--   failed. This is the same ID returned from
--   <tt>PollForThirdPartyJobs</tt>.
--   
--   <a>$sel:clientToken:PutThirdPartyJobFailureResult'</a>,
--   <a>putThirdPartyJobFailureResult_clientToken</a> - The clientToken
--   portion of the clientId and clientToken pair used to verify that the
--   calling entity is allowed access to the job and its details.
--   
--   <a>$sel:failureDetails:PutThirdPartyJobFailureResult'</a>,
--   <a>putThirdPartyJobFailureResult_failureDetails</a> - Represents
--   information about failure details.
newPutThirdPartyJobFailureResult :: Text -> Text -> FailureDetails -> PutThirdPartyJobFailureResult

-- | The ID of the job that failed. This is the same ID returned from
--   <tt>PollForThirdPartyJobs</tt>.
putThirdPartyJobFailureResult_jobId :: Lens' PutThirdPartyJobFailureResult Text

-- | The clientToken portion of the clientId and clientToken pair used to
--   verify that the calling entity is allowed access to the job and its
--   details.
putThirdPartyJobFailureResult_clientToken :: Lens' PutThirdPartyJobFailureResult Text

-- | Represents information about failure details.
putThirdPartyJobFailureResult_failureDetails :: Lens' PutThirdPartyJobFailureResult FailureDetails

-- | <i>See:</i> <a>newPutThirdPartyJobFailureResultResponse</a> smart
--   constructor.
data PutThirdPartyJobFailureResultResponse
PutThirdPartyJobFailureResultResponse' :: PutThirdPartyJobFailureResultResponse

-- | Create a value of <a>PutThirdPartyJobFailureResultResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutThirdPartyJobFailureResultResponse :: PutThirdPartyJobFailureResultResponse
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResult
instance GHC.Show.Show Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResult
instance GHC.Read.Read Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResult
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResult
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResultResponse
instance GHC.Show.Show Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResultResponse
instance GHC.Read.Read Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResultResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResultResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResult
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResultResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResult
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResult
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResult
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResult
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResult
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.PutThirdPartyJobFailureResult.PutThirdPartyJobFailureResult


-- | Represents the success of a job as returned to the pipeline by a job
--   worker. Used for custom actions only.
module Network.AWS.CodePipeline.PutJobSuccessResult

-- | Represents the input of a <tt>PutJobSuccessResult</tt> action.
--   
--   <i>See:</i> <a>newPutJobSuccessResult</a> smart constructor.
data PutJobSuccessResult
PutJobSuccessResult' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe ExecutionDetails -> Maybe CurrentRevision -> Text -> PutJobSuccessResult

-- | Key-value pairs produced as output by a job worker that can be made
--   available to a downstream action configuration.
--   <tt>outputVariables</tt> can be included only when there is no
--   continuation token on the request.
[$sel:outputVariables:PutJobSuccessResult'] :: PutJobSuccessResult -> Maybe (HashMap Text Text)

-- | A token generated by a job worker, such as an AWS CodeDeploy
--   deployment ID, that a successful job provides to identify a custom
--   action in progress. Future jobs use this token to identify the running
--   instance of the action. It can be reused to return more information
--   about the progress of the custom action. When the action is complete,
--   no continuation token should be supplied.
[$sel:continuationToken:PutJobSuccessResult'] :: PutJobSuccessResult -> Maybe Text

-- | The execution details of the successful job, such as the actions taken
--   by the job worker.
[$sel:executionDetails:PutJobSuccessResult'] :: PutJobSuccessResult -> Maybe ExecutionDetails

-- | The ID of the current revision of the artifact successfully worked on
--   by the job.
[$sel:currentRevision:PutJobSuccessResult'] :: PutJobSuccessResult -> Maybe CurrentRevision

-- | The unique system-generated ID of the job that succeeded. This is the
--   same ID returned from <tt>PollForJobs</tt>.
[$sel:jobId:PutJobSuccessResult'] :: PutJobSuccessResult -> Text

-- | Create a value of <a>PutJobSuccessResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputVariables:PutJobSuccessResult'</a>,
--   <a>putJobSuccessResult_outputVariables</a> - Key-value pairs produced
--   as output by a job worker that can be made available to a downstream
--   action configuration. <tt>outputVariables</tt> can be included only
--   when there is no continuation token on the request.
--   
--   <a>$sel:continuationToken:PutJobSuccessResult'</a>,
--   <a>putJobSuccessResult_continuationToken</a> - A token generated by a
--   job worker, such as an AWS CodeDeploy deployment ID, that a successful
--   job provides to identify a custom action in progress. Future jobs use
--   this token to identify the running instance of the action. It can be
--   reused to return more information about the progress of the custom
--   action. When the action is complete, no continuation token should be
--   supplied.
--   
--   <a>$sel:executionDetails:PutJobSuccessResult'</a>,
--   <a>putJobSuccessResult_executionDetails</a> - The execution details of
--   the successful job, such as the actions taken by the job worker.
--   
--   <a>$sel:currentRevision:PutJobSuccessResult'</a>,
--   <a>putJobSuccessResult_currentRevision</a> - The ID of the current
--   revision of the artifact successfully worked on by the job.
--   
--   <a>$sel:jobId:PutJobSuccessResult'</a>,
--   <a>putJobSuccessResult_jobId</a> - The unique system-generated ID of
--   the job that succeeded. This is the same ID returned from
--   <tt>PollForJobs</tt>.
newPutJobSuccessResult :: Text -> PutJobSuccessResult

-- | Key-value pairs produced as output by a job worker that can be made
--   available to a downstream action configuration.
--   <tt>outputVariables</tt> can be included only when there is no
--   continuation token on the request.
putJobSuccessResult_outputVariables :: Lens' PutJobSuccessResult (Maybe (HashMap Text Text))

-- | A token generated by a job worker, such as an AWS CodeDeploy
--   deployment ID, that a successful job provides to identify a custom
--   action in progress. Future jobs use this token to identify the running
--   instance of the action. It can be reused to return more information
--   about the progress of the custom action. When the action is complete,
--   no continuation token should be supplied.
putJobSuccessResult_continuationToken :: Lens' PutJobSuccessResult (Maybe Text)

-- | The execution details of the successful job, such as the actions taken
--   by the job worker.
putJobSuccessResult_executionDetails :: Lens' PutJobSuccessResult (Maybe ExecutionDetails)

-- | The ID of the current revision of the artifact successfully worked on
--   by the job.
putJobSuccessResult_currentRevision :: Lens' PutJobSuccessResult (Maybe CurrentRevision)

-- | The unique system-generated ID of the job that succeeded. This is the
--   same ID returned from <tt>PollForJobs</tt>.
putJobSuccessResult_jobId :: Lens' PutJobSuccessResult Text

-- | <i>See:</i> <a>newPutJobSuccessResultResponse</a> smart constructor.
data PutJobSuccessResultResponse
PutJobSuccessResultResponse' :: PutJobSuccessResultResponse

-- | Create a value of <a>PutJobSuccessResultResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutJobSuccessResultResponse :: PutJobSuccessResultResponse
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResult
instance GHC.Show.Show Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResult
instance GHC.Read.Read Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResult
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResult
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResultResponse
instance GHC.Show.Show Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResultResponse
instance GHC.Read.Read Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResultResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResultResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResult
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResultResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResult
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResult
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResult
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResult
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResult
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.PutJobSuccessResult.PutJobSuccessResult


-- | Represents the failure of a job as returned to the pipeline by a job
--   worker. Used for custom actions only.
module Network.AWS.CodePipeline.PutJobFailureResult

-- | Represents the input of a <tt>PutJobFailureResult</tt> action.
--   
--   <i>See:</i> <a>newPutJobFailureResult</a> smart constructor.
data PutJobFailureResult
PutJobFailureResult' :: Text -> FailureDetails -> PutJobFailureResult

-- | The unique system-generated ID of the job that failed. This is the
--   same ID returned from <tt>PollForJobs</tt>.
[$sel:jobId:PutJobFailureResult'] :: PutJobFailureResult -> Text

-- | The details about the failure of a job.
[$sel:failureDetails:PutJobFailureResult'] :: PutJobFailureResult -> FailureDetails

-- | Create a value of <a>PutJobFailureResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:PutJobFailureResult'</a>,
--   <a>putJobFailureResult_jobId</a> - The unique system-generated ID of
--   the job that failed. This is the same ID returned from
--   <tt>PollForJobs</tt>.
--   
--   <a>$sel:failureDetails:PutJobFailureResult'</a>,
--   <a>putJobFailureResult_failureDetails</a> - The details about the
--   failure of a job.
newPutJobFailureResult :: Text -> FailureDetails -> PutJobFailureResult

-- | The unique system-generated ID of the job that failed. This is the
--   same ID returned from <tt>PollForJobs</tt>.
putJobFailureResult_jobId :: Lens' PutJobFailureResult Text

-- | The details about the failure of a job.
putJobFailureResult_failureDetails :: Lens' PutJobFailureResult FailureDetails

-- | <i>See:</i> <a>newPutJobFailureResultResponse</a> smart constructor.
data PutJobFailureResultResponse
PutJobFailureResultResponse' :: PutJobFailureResultResponse

-- | Create a value of <a>PutJobFailureResultResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutJobFailureResultResponse :: PutJobFailureResultResponse
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResult
instance GHC.Show.Show Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResult
instance GHC.Read.Read Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResult
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResult
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResultResponse
instance GHC.Show.Show Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResultResponse
instance GHC.Read.Read Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResultResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResultResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResult
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResultResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResult
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResult
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResult
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResult
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResult
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.PutJobFailureResult.PutJobFailureResult


-- | Provides the response to a manual approval request to AWS
--   CodePipeline. Valid responses include Approved and Rejected.
module Network.AWS.CodePipeline.PutApprovalResult

-- | Represents the input of a <tt>PutApprovalResult</tt> action.
--   
--   <i>See:</i> <a>newPutApprovalResult</a> smart constructor.
data PutApprovalResult
PutApprovalResult' :: Text -> Text -> Text -> ApprovalResult -> Text -> PutApprovalResult

-- | The name of the pipeline that contains the action.
[$sel:pipelineName:PutApprovalResult'] :: PutApprovalResult -> Text

-- | The name of the stage that contains the action.
[$sel:stageName:PutApprovalResult'] :: PutApprovalResult -> Text

-- | The name of the action for which approval is requested.
[$sel:actionName:PutApprovalResult'] :: PutApprovalResult -> Text

-- | Represents information about the result of the approval request.
[$sel:result:PutApprovalResult'] :: PutApprovalResult -> ApprovalResult

-- | The system-generated token used to identify a unique approval request.
--   The token for each open approval request can be obtained using the
--   GetPipelineState action. It is used to validate that the approval
--   request corresponding to this token is still valid.
[$sel:token:PutApprovalResult'] :: PutApprovalResult -> Text

-- | Create a value of <a>PutApprovalResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:PutApprovalResult'</a>,
--   <a>putApprovalResult_pipelineName</a> - The name of the pipeline that
--   contains the action.
--   
--   <a>$sel:stageName:PutApprovalResult'</a>,
--   <a>putApprovalResult_stageName</a> - The name of the stage that
--   contains the action.
--   
--   <a>$sel:actionName:PutApprovalResult'</a>,
--   <a>putApprovalResult_actionName</a> - The name of the action for which
--   approval is requested.
--   
--   <a>$sel:result:PutApprovalResult'</a>, <a>putApprovalResult_result</a>
--   - Represents information about the result of the approval request.
--   
--   <a>$sel:token:PutApprovalResult'</a>, <a>putApprovalResult_token</a> -
--   The system-generated token used to identify a unique approval request.
--   The token for each open approval request can be obtained using the
--   GetPipelineState action. It is used to validate that the approval
--   request corresponding to this token is still valid.
newPutApprovalResult :: Text -> Text -> Text -> ApprovalResult -> Text -> PutApprovalResult

-- | The name of the pipeline that contains the action.
putApprovalResult_pipelineName :: Lens' PutApprovalResult Text

-- | The name of the stage that contains the action.
putApprovalResult_stageName :: Lens' PutApprovalResult Text

-- | The name of the action for which approval is requested.
putApprovalResult_actionName :: Lens' PutApprovalResult Text

-- | Represents information about the result of the approval request.
putApprovalResult_result :: Lens' PutApprovalResult ApprovalResult

-- | The system-generated token used to identify a unique approval request.
--   The token for each open approval request can be obtained using the
--   GetPipelineState action. It is used to validate that the approval
--   request corresponding to this token is still valid.
putApprovalResult_token :: Lens' PutApprovalResult Text

-- | Represents the output of a <tt>PutApprovalResult</tt> action.
--   
--   <i>See:</i> <a>newPutApprovalResultResponse</a> smart constructor.
data PutApprovalResultResponse
PutApprovalResultResponse' :: Maybe POSIX -> Int -> PutApprovalResultResponse

-- | The timestamp showing when the approval or rejection was submitted.
[$sel:approvedAt:PutApprovalResultResponse'] :: PutApprovalResultResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:PutApprovalResultResponse'] :: PutApprovalResultResponse -> Int

-- | Create a value of <a>PutApprovalResultResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvedAt:PutApprovalResultResponse'</a>,
--   <a>putApprovalResultResponse_approvedAt</a> - The timestamp showing
--   when the approval or rejection was submitted.
--   
--   <a>$sel:httpStatus:PutApprovalResultResponse'</a>,
--   <a>putApprovalResultResponse_httpStatus</a> - The response's http
--   status code.
newPutApprovalResultResponse :: Int -> PutApprovalResultResponse

-- | The timestamp showing when the approval or rejection was submitted.
putApprovalResultResponse_approvedAt :: Lens' PutApprovalResultResponse (Maybe UTCTime)

-- | The response's http status code.
putApprovalResultResponse_httpStatus :: Lens' PutApprovalResultResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResult
instance GHC.Show.Show Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResult
instance GHC.Read.Read Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResult
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResult
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResultResponse
instance GHC.Show.Show Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResultResponse
instance GHC.Read.Read Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResultResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResultResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResult
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResultResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResult
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResult
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResult
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResult
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResult
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.PutApprovalResult.PutApprovalResult


-- | Provides information to AWS CodePipeline about new revisions to a
--   source.
module Network.AWS.CodePipeline.PutActionRevision

-- | Represents the input of a <tt>PutActionRevision</tt> action.
--   
--   <i>See:</i> <a>newPutActionRevision</a> smart constructor.
data PutActionRevision
PutActionRevision' :: Text -> Text -> Text -> ActionRevision -> PutActionRevision

-- | The name of the pipeline that starts processing the revision to the
--   source.
[$sel:pipelineName:PutActionRevision'] :: PutActionRevision -> Text

-- | The name of the stage that contains the action that acts on the
--   revision.
[$sel:stageName:PutActionRevision'] :: PutActionRevision -> Text

-- | The name of the action that processes the revision.
[$sel:actionName:PutActionRevision'] :: PutActionRevision -> Text

-- | Represents information about the version (or revision) of an action.
[$sel:actionRevision:PutActionRevision'] :: PutActionRevision -> ActionRevision

-- | Create a value of <a>PutActionRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:PutActionRevision'</a>,
--   <a>putActionRevision_pipelineName</a> - The name of the pipeline that
--   starts processing the revision to the source.
--   
--   <a>$sel:stageName:PutActionRevision'</a>,
--   <a>putActionRevision_stageName</a> - The name of the stage that
--   contains the action that acts on the revision.
--   
--   <a>$sel:actionName:PutActionRevision'</a>,
--   <a>putActionRevision_actionName</a> - The name of the action that
--   processes the revision.
--   
--   <a>$sel:actionRevision:PutActionRevision'</a>,
--   <a>putActionRevision_actionRevision</a> - Represents information about
--   the version (or revision) of an action.
newPutActionRevision :: Text -> Text -> Text -> ActionRevision -> PutActionRevision

-- | The name of the pipeline that starts processing the revision to the
--   source.
putActionRevision_pipelineName :: Lens' PutActionRevision Text

-- | The name of the stage that contains the action that acts on the
--   revision.
putActionRevision_stageName :: Lens' PutActionRevision Text

-- | The name of the action that processes the revision.
putActionRevision_actionName :: Lens' PutActionRevision Text

-- | Represents information about the version (or revision) of an action.
putActionRevision_actionRevision :: Lens' PutActionRevision ActionRevision

-- | Represents the output of a <tt>PutActionRevision</tt> action.
--   
--   <i>See:</i> <a>newPutActionRevisionResponse</a> smart constructor.
data PutActionRevisionResponse
PutActionRevisionResponse' :: Maybe Bool -> Maybe Text -> Int -> PutActionRevisionResponse

-- | Indicates whether the artifact revision was previously used in an
--   execution of the specified pipeline.
[$sel:newRevision':PutActionRevisionResponse'] :: PutActionRevisionResponse -> Maybe Bool

-- | The ID of the current workflow state of the pipeline.
[$sel:pipelineExecutionId:PutActionRevisionResponse'] :: PutActionRevisionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutActionRevisionResponse'] :: PutActionRevisionResponse -> Int

-- | Create a value of <a>PutActionRevisionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:newRevision':PutActionRevisionResponse'</a>,
--   <a>putActionRevisionResponse_newRevision</a> - Indicates whether the
--   artifact revision was previously used in an execution of the specified
--   pipeline.
--   
--   <a>$sel:pipelineExecutionId:PutActionRevisionResponse'</a>,
--   <a>putActionRevisionResponse_pipelineExecutionId</a> - The ID of the
--   current workflow state of the pipeline.
--   
--   <a>$sel:httpStatus:PutActionRevisionResponse'</a>,
--   <a>putActionRevisionResponse_httpStatus</a> - The response's http
--   status code.
newPutActionRevisionResponse :: Int -> PutActionRevisionResponse

-- | Indicates whether the artifact revision was previously used in an
--   execution of the specified pipeline.
putActionRevisionResponse_newRevision :: Lens' PutActionRevisionResponse (Maybe Bool)

-- | The ID of the current workflow state of the pipeline.
putActionRevisionResponse_pipelineExecutionId :: Lens' PutActionRevisionResponse (Maybe Text)

-- | The response's http status code.
putActionRevisionResponse_httpStatus :: Lens' PutActionRevisionResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutActionRevision.PutActionRevision
instance GHC.Show.Show Network.AWS.CodePipeline.PutActionRevision.PutActionRevision
instance GHC.Read.Read Network.AWS.CodePipeline.PutActionRevision.PutActionRevision
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutActionRevision.PutActionRevision
instance GHC.Generics.Generic Network.AWS.CodePipeline.PutActionRevision.PutActionRevisionResponse
instance GHC.Show.Show Network.AWS.CodePipeline.PutActionRevision.PutActionRevisionResponse
instance GHC.Read.Read Network.AWS.CodePipeline.PutActionRevision.PutActionRevisionResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.PutActionRevision.PutActionRevisionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.PutActionRevision.PutActionRevision
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutActionRevision.PutActionRevisionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.PutActionRevision.PutActionRevision
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PutActionRevision.PutActionRevision
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.PutActionRevision.PutActionRevision
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.PutActionRevision.PutActionRevision
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.PutActionRevision.PutActionRevision
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.PutActionRevision.PutActionRevision


-- | Determines whether there are any third party jobs for a job worker to
--   act on. Used for partner actions only.
--   
--   When this API is called, AWS CodePipeline returns temporary
--   credentials for the S3 bucket used to store artifacts for the
--   pipeline, if the action requires access to that S3 bucket for input or
--   output artifacts.
module Network.AWS.CodePipeline.PollForThirdPartyJobs

-- | Represents the input of a <tt>PollForThirdPartyJobs</tt> action.
--   
--   <i>See:</i> <a>newPollForThirdPartyJobs</a> smart constructor.
data PollForThirdPartyJobs
PollForThirdPartyJobs' :: Maybe Natural -> ActionTypeId -> PollForThirdPartyJobs

-- | The maximum number of jobs to return in a poll for jobs call.
[$sel:maxBatchSize:PollForThirdPartyJobs'] :: PollForThirdPartyJobs -> Maybe Natural

-- | Represents information about an action type.
[$sel:actionTypeId:PollForThirdPartyJobs'] :: PollForThirdPartyJobs -> ActionTypeId

-- | Create a value of <a>PollForThirdPartyJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxBatchSize:PollForThirdPartyJobs'</a>,
--   <a>pollForThirdPartyJobs_maxBatchSize</a> - The maximum number of jobs
--   to return in a poll for jobs call.
--   
--   <a>$sel:actionTypeId:PollForThirdPartyJobs'</a>,
--   <a>pollForThirdPartyJobs_actionTypeId</a> - Represents information
--   about an action type.
newPollForThirdPartyJobs :: ActionTypeId -> PollForThirdPartyJobs

-- | The maximum number of jobs to return in a poll for jobs call.
pollForThirdPartyJobs_maxBatchSize :: Lens' PollForThirdPartyJobs (Maybe Natural)

-- | Represents information about an action type.
pollForThirdPartyJobs_actionTypeId :: Lens' PollForThirdPartyJobs ActionTypeId

-- | Represents the output of a <tt>PollForThirdPartyJobs</tt> action.
--   
--   <i>See:</i> <a>newPollForThirdPartyJobsResponse</a> smart constructor.
data PollForThirdPartyJobsResponse
PollForThirdPartyJobsResponse' :: Maybe [ThirdPartyJob] -> Int -> PollForThirdPartyJobsResponse

-- | Information about the jobs to take action on.
[$sel:jobs:PollForThirdPartyJobsResponse'] :: PollForThirdPartyJobsResponse -> Maybe [ThirdPartyJob]

-- | The response's http status code.
[$sel:httpStatus:PollForThirdPartyJobsResponse'] :: PollForThirdPartyJobsResponse -> Int

-- | Create a value of <a>PollForThirdPartyJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobs:PollForThirdPartyJobsResponse'</a>,
--   <a>pollForThirdPartyJobsResponse_jobs</a> - Information about the jobs
--   to take action on.
--   
--   <a>$sel:httpStatus:PollForThirdPartyJobsResponse'</a>,
--   <a>pollForThirdPartyJobsResponse_httpStatus</a> - The response's http
--   status code.
newPollForThirdPartyJobsResponse :: Int -> PollForThirdPartyJobsResponse

-- | Information about the jobs to take action on.
pollForThirdPartyJobsResponse_jobs :: Lens' PollForThirdPartyJobsResponse (Maybe [ThirdPartyJob])

-- | The response's http status code.
pollForThirdPartyJobsResponse_httpStatus :: Lens' PollForThirdPartyJobsResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobs
instance GHC.Show.Show Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobs
instance GHC.Read.Read Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobs
instance GHC.Classes.Eq Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobs
instance GHC.Generics.Generic Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobsResponse
instance GHC.Show.Show Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobsResponse
instance GHC.Read.Read Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobsResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobs
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobs
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.PollForThirdPartyJobs.PollForThirdPartyJobs


-- | Returns information about any jobs for AWS CodePipeline to act on.
--   <tt>PollForJobs</tt> is valid only for action types with "Custom" in
--   the owner field. If the action type contains "AWS" or "ThirdParty" in
--   the owner field, the <tt>PollForJobs</tt> action returns an error.
--   
--   When this API is called, AWS CodePipeline returns temporary
--   credentials for the S3 bucket used to store artifacts for the
--   pipeline, if the action requires access to that S3 bucket for input or
--   output artifacts. This API also returns any secret values defined for
--   the action.
module Network.AWS.CodePipeline.PollForJobs

-- | Represents the input of a <tt>PollForJobs</tt> action.
--   
--   <i>See:</i> <a>newPollForJobs</a> smart constructor.
data PollForJobs
PollForJobs' :: Maybe Natural -> Maybe (HashMap Text Text) -> ActionTypeId -> PollForJobs

-- | The maximum number of jobs to return in a poll for jobs call.
[$sel:maxBatchSize:PollForJobs'] :: PollForJobs -> Maybe Natural

-- | A map of property names and values. For an action type with no
--   queryable properties, this value must be null or an empty map. For an
--   action type with a queryable property, you must supply that property
--   as a key in the map. Only jobs whose action configuration matches the
--   mapped value are returned.
[$sel:queryParam:PollForJobs'] :: PollForJobs -> Maybe (HashMap Text Text)

-- | Represents information about an action type.
[$sel:actionTypeId:PollForJobs'] :: PollForJobs -> ActionTypeId

-- | Create a value of <a>PollForJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxBatchSize:PollForJobs'</a>, <a>pollForJobs_maxBatchSize</a>
--   - The maximum number of jobs to return in a poll for jobs call.
--   
--   <a>$sel:queryParam:PollForJobs'</a>, <a>pollForJobs_queryParam</a> - A
--   map of property names and values. For an action type with no queryable
--   properties, this value must be null or an empty map. For an action
--   type with a queryable property, you must supply that property as a key
--   in the map. Only jobs whose action configuration matches the mapped
--   value are returned.
--   
--   <a>$sel:actionTypeId:PollForJobs'</a>, <a>pollForJobs_actionTypeId</a>
--   - Represents information about an action type.
newPollForJobs :: ActionTypeId -> PollForJobs

-- | The maximum number of jobs to return in a poll for jobs call.
pollForJobs_maxBatchSize :: Lens' PollForJobs (Maybe Natural)

-- | A map of property names and values. For an action type with no
--   queryable properties, this value must be null or an empty map. For an
--   action type with a queryable property, you must supply that property
--   as a key in the map. Only jobs whose action configuration matches the
--   mapped value are returned.
pollForJobs_queryParam :: Lens' PollForJobs (Maybe (HashMap Text Text))

-- | Represents information about an action type.
pollForJobs_actionTypeId :: Lens' PollForJobs ActionTypeId

-- | Represents the output of a <tt>PollForJobs</tt> action.
--   
--   <i>See:</i> <a>newPollForJobsResponse</a> smart constructor.
data PollForJobsResponse
PollForJobsResponse' :: Maybe [Job] -> Int -> PollForJobsResponse

-- | Information about the jobs to take action on.
[$sel:jobs:PollForJobsResponse'] :: PollForJobsResponse -> Maybe [Job]

-- | The response's http status code.
[$sel:httpStatus:PollForJobsResponse'] :: PollForJobsResponse -> Int

-- | Create a value of <a>PollForJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobs:PollForJobsResponse'</a>, <a>pollForJobsResponse_jobs</a>
--   - Information about the jobs to take action on.
--   
--   <a>$sel:httpStatus:PollForJobsResponse'</a>,
--   <a>pollForJobsResponse_httpStatus</a> - The response's http status
--   code.
newPollForJobsResponse :: Int -> PollForJobsResponse

-- | Information about the jobs to take action on.
pollForJobsResponse_jobs :: Lens' PollForJobsResponse (Maybe [Job])

-- | The response's http status code.
pollForJobsResponse_httpStatus :: Lens' PollForJobsResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.PollForJobs.PollForJobs
instance GHC.Show.Show Network.AWS.CodePipeline.PollForJobs.PollForJobs
instance GHC.Read.Read Network.AWS.CodePipeline.PollForJobs.PollForJobs
instance GHC.Classes.Eq Network.AWS.CodePipeline.PollForJobs.PollForJobs
instance GHC.Generics.Generic Network.AWS.CodePipeline.PollForJobs.PollForJobsResponse
instance GHC.Show.Show Network.AWS.CodePipeline.PollForJobs.PollForJobsResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.PollForJobs.PollForJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.PollForJobs.PollForJobs
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PollForJobs.PollForJobsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.PollForJobs.PollForJobs
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.PollForJobs.PollForJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.PollForJobs.PollForJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.PollForJobs.PollForJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.PollForJobs.PollForJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.PollForJobs.PollForJobs


-- | Gets a listing of all the webhooks in this AWS Region for this
--   account. The output lists all webhooks and includes the webhook URL
--   and ARN and the configuration for each webhook.
--   
--   This operation returns paginated results.
module Network.AWS.CodePipeline.ListWebhooks

-- | <i>See:</i> <a>newListWebhooks</a> smart constructor.
data ListWebhooks
ListWebhooks' :: Maybe Text -> Maybe Natural -> ListWebhooks

-- | The token that was returned from the previous ListWebhooks call, which
--   can be used to return the next set of webhooks in the list.
[$sel:nextToken:ListWebhooks'] :: ListWebhooks -> Maybe Text

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned nextToken
--   value.
[$sel:maxResults:ListWebhooks'] :: ListWebhooks -> Maybe Natural

-- | Create a value of <a>ListWebhooks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWebhooks'</a>, <a>listWebhooks_nextToken</a> -
--   The token that was returned from the previous ListWebhooks call, which
--   can be used to return the next set of webhooks in the list.
--   
--   <a>$sel:maxResults:ListWebhooks'</a>, <a>listWebhooks_maxResults</a> -
--   The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned nextToken
--   value.
newListWebhooks :: ListWebhooks

-- | The token that was returned from the previous ListWebhooks call, which
--   can be used to return the next set of webhooks in the list.
listWebhooks_nextToken :: Lens' ListWebhooks (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned nextToken
--   value.
listWebhooks_maxResults :: Lens' ListWebhooks (Maybe Natural)

-- | <i>See:</i> <a>newListWebhooksResponse</a> smart constructor.
data ListWebhooksResponse
ListWebhooksResponse' :: Maybe Text -> Maybe [ListWebhookItem] -> Int -> ListWebhooksResponse

-- | If the amount of returned information is significantly large, an
--   identifier is also returned and can be used in a subsequent
--   ListWebhooks call to return the next set of webhooks in the list.
[$sel:nextToken:ListWebhooksResponse'] :: ListWebhooksResponse -> Maybe Text

-- | The JSON detail returned for each webhook in the list output for the
--   ListWebhooks call.
[$sel:webhooks:ListWebhooksResponse'] :: ListWebhooksResponse -> Maybe [ListWebhookItem]

-- | The response's http status code.
[$sel:httpStatus:ListWebhooksResponse'] :: ListWebhooksResponse -> Int

-- | Create a value of <a>ListWebhooksResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWebhooks'</a>,
--   <a>listWebhooksResponse_nextToken</a> - If the amount of returned
--   information is significantly large, an identifier is also returned and
--   can be used in a subsequent ListWebhooks call to return the next set
--   of webhooks in the list.
--   
--   <a>$sel:webhooks:ListWebhooksResponse'</a>,
--   <a>listWebhooksResponse_webhooks</a> - The JSON detail returned for
--   each webhook in the list output for the ListWebhooks call.
--   
--   <a>$sel:httpStatus:ListWebhooksResponse'</a>,
--   <a>listWebhooksResponse_httpStatus</a> - The response's http status
--   code.
newListWebhooksResponse :: Int -> ListWebhooksResponse

-- | If the amount of returned information is significantly large, an
--   identifier is also returned and can be used in a subsequent
--   ListWebhooks call to return the next set of webhooks in the list.
listWebhooksResponse_nextToken :: Lens' ListWebhooksResponse (Maybe Text)

-- | The JSON detail returned for each webhook in the list output for the
--   ListWebhooks call.
listWebhooksResponse_webhooks :: Lens' ListWebhooksResponse (Maybe [ListWebhookItem])

-- | The response's http status code.
listWebhooksResponse_httpStatus :: Lens' ListWebhooksResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.ListWebhooks.ListWebhooks
instance GHC.Show.Show Network.AWS.CodePipeline.ListWebhooks.ListWebhooks
instance GHC.Read.Read Network.AWS.CodePipeline.ListWebhooks.ListWebhooks
instance GHC.Classes.Eq Network.AWS.CodePipeline.ListWebhooks.ListWebhooks
instance GHC.Generics.Generic Network.AWS.CodePipeline.ListWebhooks.ListWebhooksResponse
instance GHC.Show.Show Network.AWS.CodePipeline.ListWebhooks.ListWebhooksResponse
instance GHC.Read.Read Network.AWS.CodePipeline.ListWebhooks.ListWebhooksResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.ListWebhooks.ListWebhooksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.ListWebhooks.ListWebhooks
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.ListWebhooks.ListWebhooksResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodePipeline.ListWebhooks.ListWebhooks
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.ListWebhooks.ListWebhooks
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.ListWebhooks.ListWebhooks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.ListWebhooks.ListWebhooks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.ListWebhooks.ListWebhooks
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.ListWebhooks.ListWebhooks
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.ListWebhooks.ListWebhooks


-- | Gets the set of key-value pairs (metadata) that are used to manage the
--   resource.
--   
--   This operation returns paginated results.
module Network.AWS.CodePipeline.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | The token that was returned from the previous API call, which would be
--   used to return the next page of the list. The ListTagsforResource call
--   lists all available tags in one call and does not use pagination.
[$sel:nextToken:ListTagsForResource'] :: ListTagsForResource -> Maybe Text

-- | The maximum number of results to return in a single call.
[$sel:maxResults:ListTagsForResource'] :: ListTagsForResource -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the resource to get tags for.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - The token that was returned
--   from the previous API call, which would be used to return the next
--   page of the list. The ListTagsforResource call lists all available
--   tags in one call and does not use pagination.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - The maximum number of results
--   to return in a single call.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource to get tags for.
newListTagsForResource :: Text -> ListTagsForResource

-- | The token that was returned from the previous API call, which would be
--   used to return the next page of the list. The ListTagsforResource call
--   lists all available tags in one call and does not use pagination.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The maximum number of results to return in a single call.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the resource to get tags for.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | If the amount of returned information is significantly large, an
--   identifier is also returned and can be used in a subsequent API call
--   to return the next page of the list. The ListTagsforResource call
--   lists all available tags in one call and does not use pagination.
[$sel:nextToken:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | The tags for the resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - If the amount of
--   returned information is significantly large, an identifier is also
--   returned and can be used in a subsequent API call to return the next
--   page of the list. The ListTagsforResource call lists all available
--   tags in one call and does not use pagination.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags for the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | If the amount of returned information is significantly large, an
--   identifier is also returned and can be used in a subsequent API call
--   to return the next page of the list. The ListTagsforResource call
--   lists all available tags in one call and does not use pagination.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | The tags for the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResource
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.ListTagsForResource.ListTagsForResource


-- | Gets a summary of all of the pipelines associated with your account.
--   
--   This operation returns paginated results.
module Network.AWS.CodePipeline.ListPipelines

-- | Represents the input of a <tt>ListPipelines</tt> action.
--   
--   <i>See:</i> <a>newListPipelines</a> smart constructor.
data ListPipelines
ListPipelines' :: Maybe Text -> Maybe Natural -> ListPipelines

-- | An identifier that was returned from the previous list pipelines call.
--   It can be used to return the next set of pipelines in the list.
[$sel:nextToken:ListPipelines'] :: ListPipelines -> Maybe Text

-- | The maximum number of pipelines to return in a single call. To
--   retrieve the remaining pipelines, make another call with the returned
--   nextToken value. The minimum value you can specify is 1. The maximum
--   accepted value is 1000.
[$sel:maxResults:ListPipelines'] :: ListPipelines -> Maybe Natural

-- | Create a value of <a>ListPipelines</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPipelines'</a>, <a>listPipelines_nextToken</a> -
--   An identifier that was returned from the previous list pipelines call.
--   It can be used to return the next set of pipelines in the list.
--   
--   <a>$sel:maxResults:ListPipelines'</a>, <a>listPipelines_maxResults</a>
--   - The maximum number of pipelines to return in a single call. To
--   retrieve the remaining pipelines, make another call with the returned
--   nextToken value. The minimum value you can specify is 1. The maximum
--   accepted value is 1000.
newListPipelines :: ListPipelines

-- | An identifier that was returned from the previous list pipelines call.
--   It can be used to return the next set of pipelines in the list.
listPipelines_nextToken :: Lens' ListPipelines (Maybe Text)

-- | The maximum number of pipelines to return in a single call. To
--   retrieve the remaining pipelines, make another call with the returned
--   nextToken value. The minimum value you can specify is 1. The maximum
--   accepted value is 1000.
listPipelines_maxResults :: Lens' ListPipelines (Maybe Natural)

-- | Represents the output of a <tt>ListPipelines</tt> action.
--   
--   <i>See:</i> <a>newListPipelinesResponse</a> smart constructor.
data ListPipelinesResponse
ListPipelinesResponse' :: Maybe [PipelineSummary] -> Maybe Text -> Int -> ListPipelinesResponse

-- | The list of pipelines.
[$sel:pipelines:ListPipelinesResponse'] :: ListPipelinesResponse -> Maybe [PipelineSummary]

-- | If the amount of returned information is significantly large, an
--   identifier is also returned. It can be used in a subsequent list
--   pipelines call to return the next set of pipelines in the list.
[$sel:nextToken:ListPipelinesResponse'] :: ListPipelinesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPipelinesResponse'] :: ListPipelinesResponse -> Int

-- | Create a value of <a>ListPipelinesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelines:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_pipelines</a> - The list of pipelines.
--   
--   <a>$sel:nextToken:ListPipelines'</a>,
--   <a>listPipelinesResponse_nextToken</a> - If the amount of returned
--   information is significantly large, an identifier is also returned. It
--   can be used in a subsequent list pipelines call to return the next set
--   of pipelines in the list.
--   
--   <a>$sel:httpStatus:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_httpStatus</a> - The response's http status
--   code.
newListPipelinesResponse :: Int -> ListPipelinesResponse

-- | The list of pipelines.
listPipelinesResponse_pipelines :: Lens' ListPipelinesResponse (Maybe [PipelineSummary])

-- | If the amount of returned information is significantly large, an
--   identifier is also returned. It can be used in a subsequent list
--   pipelines call to return the next set of pipelines in the list.
listPipelinesResponse_nextToken :: Lens' ListPipelinesResponse (Maybe Text)

-- | The response's http status code.
listPipelinesResponse_httpStatus :: Lens' ListPipelinesResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.ListPipelines.ListPipelines
instance GHC.Show.Show Network.AWS.CodePipeline.ListPipelines.ListPipelines
instance GHC.Read.Read Network.AWS.CodePipeline.ListPipelines.ListPipelines
instance GHC.Classes.Eq Network.AWS.CodePipeline.ListPipelines.ListPipelines
instance GHC.Generics.Generic Network.AWS.CodePipeline.ListPipelines.ListPipelinesResponse
instance GHC.Show.Show Network.AWS.CodePipeline.ListPipelines.ListPipelinesResponse
instance GHC.Read.Read Network.AWS.CodePipeline.ListPipelines.ListPipelinesResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.ListPipelines.ListPipelinesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.ListPipelines.ListPipelines
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.ListPipelines.ListPipelinesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodePipeline.ListPipelines.ListPipelines
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.ListPipelines.ListPipelines
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.ListPipelines.ListPipelines
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.ListPipelines.ListPipelines
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.ListPipelines.ListPipelines
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.ListPipelines.ListPipelines
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.ListPipelines.ListPipelines


-- | Gets a summary of the most recent executions for a pipeline.
--   
--   This operation returns paginated results.
module Network.AWS.CodePipeline.ListPipelineExecutions

-- | Represents the input of a <tt>ListPipelineExecutions</tt> action.
--   
--   <i>See:</i> <a>newListPipelineExecutions</a> smart constructor.
data ListPipelineExecutions
ListPipelineExecutions' :: Maybe Text -> Maybe Natural -> Text -> ListPipelineExecutions

-- | The token that was returned from the previous
--   <tt>ListPipelineExecutions</tt> call, which can be used to return the
--   next set of pipeline executions in the list.
[$sel:nextToken:ListPipelineExecutions'] :: ListPipelineExecutions -> Maybe Text

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned nextToken
--   value. Pipeline history is limited to the most recent 12 months, based
--   on pipeline execution start times. Default value is 100.
[$sel:maxResults:ListPipelineExecutions'] :: ListPipelineExecutions -> Maybe Natural

-- | The name of the pipeline for which you want to get execution summary
--   information.
[$sel:pipelineName:ListPipelineExecutions'] :: ListPipelineExecutions -> Text

-- | Create a value of <a>ListPipelineExecutions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPipelineExecutions'</a>,
--   <a>listPipelineExecutions_nextToken</a> - The token that was returned
--   from the previous <tt>ListPipelineExecutions</tt> call, which can be
--   used to return the next set of pipeline executions in the list.
--   
--   <a>$sel:maxResults:ListPipelineExecutions'</a>,
--   <a>listPipelineExecutions_maxResults</a> - The maximum number of
--   results to return in a single call. To retrieve the remaining results,
--   make another call with the returned nextToken value. Pipeline history
--   is limited to the most recent 12 months, based on pipeline execution
--   start times. Default value is 100.
--   
--   <a>$sel:pipelineName:ListPipelineExecutions'</a>,
--   <a>listPipelineExecutions_pipelineName</a> - The name of the pipeline
--   for which you want to get execution summary information.
newListPipelineExecutions :: Text -> ListPipelineExecutions

-- | The token that was returned from the previous
--   <tt>ListPipelineExecutions</tt> call, which can be used to return the
--   next set of pipeline executions in the list.
listPipelineExecutions_nextToken :: Lens' ListPipelineExecutions (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned nextToken
--   value. Pipeline history is limited to the most recent 12 months, based
--   on pipeline execution start times. Default value is 100.
listPipelineExecutions_maxResults :: Lens' ListPipelineExecutions (Maybe Natural)

-- | The name of the pipeline for which you want to get execution summary
--   information.
listPipelineExecutions_pipelineName :: Lens' ListPipelineExecutions Text

-- | Represents the output of a <tt>ListPipelineExecutions</tt> action.
--   
--   <i>See:</i> <a>newListPipelineExecutionsResponse</a> smart
--   constructor.
data ListPipelineExecutionsResponse
ListPipelineExecutionsResponse' :: Maybe Text -> Maybe [PipelineExecutionSummary] -> Int -> ListPipelineExecutionsResponse

-- | A token that can be used in the next <tt>ListPipelineExecutions</tt>
--   call. To view all items in the list, continue to call this operation
--   with each subsequent token until no more nextToken values are
--   returned.
[$sel:nextToken:ListPipelineExecutionsResponse'] :: ListPipelineExecutionsResponse -> Maybe Text

-- | A list of executions in the history of a pipeline.
[$sel:pipelineExecutionSummaries:ListPipelineExecutionsResponse'] :: ListPipelineExecutionsResponse -> Maybe [PipelineExecutionSummary]

-- | The response's http status code.
[$sel:httpStatus:ListPipelineExecutionsResponse'] :: ListPipelineExecutionsResponse -> Int

-- | Create a value of <a>ListPipelineExecutionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPipelineExecutions'</a>,
--   <a>listPipelineExecutionsResponse_nextToken</a> - A token that can be
--   used in the next <tt>ListPipelineExecutions</tt> call. To view all
--   items in the list, continue to call this operation with each
--   subsequent token until no more nextToken values are returned.
--   
--   
--   <a>$sel:pipelineExecutionSummaries:ListPipelineExecutionsResponse'</a>,
--   <a>listPipelineExecutionsResponse_pipelineExecutionSummaries</a> - A
--   list of executions in the history of a pipeline.
--   
--   <a>$sel:httpStatus:ListPipelineExecutionsResponse'</a>,
--   <a>listPipelineExecutionsResponse_httpStatus</a> - The response's http
--   status code.
newListPipelineExecutionsResponse :: Int -> ListPipelineExecutionsResponse

-- | A token that can be used in the next <tt>ListPipelineExecutions</tt>
--   call. To view all items in the list, continue to call this operation
--   with each subsequent token until no more nextToken values are
--   returned.
listPipelineExecutionsResponse_nextToken :: Lens' ListPipelineExecutionsResponse (Maybe Text)

-- | A list of executions in the history of a pipeline.
listPipelineExecutionsResponse_pipelineExecutionSummaries :: Lens' ListPipelineExecutionsResponse (Maybe [PipelineExecutionSummary])

-- | The response's http status code.
listPipelineExecutionsResponse_httpStatus :: Lens' ListPipelineExecutionsResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutions
instance GHC.Show.Show Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutions
instance GHC.Read.Read Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutions
instance GHC.Classes.Eq Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutions
instance GHC.Generics.Generic Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutionsResponse
instance GHC.Show.Show Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutionsResponse
instance GHC.Read.Read Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutionsResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutions
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutions
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutions
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutions
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutions
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.ListPipelineExecutions.ListPipelineExecutions


-- | Gets a summary of all AWS CodePipeline action types associated with
--   your account.
--   
--   This operation returns paginated results.
module Network.AWS.CodePipeline.ListActionTypes

-- | Represents the input of a <tt>ListActionTypes</tt> action.
--   
--   <i>See:</i> <a>newListActionTypes</a> smart constructor.
data ListActionTypes
ListActionTypes' :: Maybe ActionOwner -> Maybe Text -> Maybe Text -> ListActionTypes

-- | Filters the list of action types to those created by a specified
--   entity.
[$sel:actionOwnerFilter:ListActionTypes'] :: ListActionTypes -> Maybe ActionOwner

-- | The Region to filter on for the list of action types.
[$sel:regionFilter:ListActionTypes'] :: ListActionTypes -> Maybe Text

-- | An identifier that was returned from the previous list action types
--   call, which can be used to return the next set of action types in the
--   list.
[$sel:nextToken:ListActionTypes'] :: ListActionTypes -> Maybe Text

-- | Create a value of <a>ListActionTypes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionOwnerFilter:ListActionTypes'</a>,
--   <a>listActionTypes_actionOwnerFilter</a> - Filters the list of action
--   types to those created by a specified entity.
--   
--   <a>$sel:regionFilter:ListActionTypes'</a>,
--   <a>listActionTypes_regionFilter</a> - The Region to filter on for the
--   list of action types.
--   
--   <a>$sel:nextToken:ListActionTypes'</a>,
--   <a>listActionTypes_nextToken</a> - An identifier that was returned
--   from the previous list action types call, which can be used to return
--   the next set of action types in the list.
newListActionTypes :: ListActionTypes

-- | Filters the list of action types to those created by a specified
--   entity.
listActionTypes_actionOwnerFilter :: Lens' ListActionTypes (Maybe ActionOwner)

-- | The Region to filter on for the list of action types.
listActionTypes_regionFilter :: Lens' ListActionTypes (Maybe Text)

-- | An identifier that was returned from the previous list action types
--   call, which can be used to return the next set of action types in the
--   list.
listActionTypes_nextToken :: Lens' ListActionTypes (Maybe Text)

-- | Represents the output of a <tt>ListActionTypes</tt> action.
--   
--   <i>See:</i> <a>newListActionTypesResponse</a> smart constructor.
data ListActionTypesResponse
ListActionTypesResponse' :: Maybe Text -> Int -> [ActionType] -> ListActionTypesResponse

-- | If the amount of returned information is significantly large, an
--   identifier is also returned. It can be used in a subsequent list
--   action types call to return the next set of action types in the list.
[$sel:nextToken:ListActionTypesResponse'] :: ListActionTypesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListActionTypesResponse'] :: ListActionTypesResponse -> Int

-- | Provides details of the action types.
[$sel:actionTypes:ListActionTypesResponse'] :: ListActionTypesResponse -> [ActionType]

-- | Create a value of <a>ListActionTypesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListActionTypes'</a>,
--   <a>listActionTypesResponse_nextToken</a> - If the amount of returned
--   information is significantly large, an identifier is also returned. It
--   can be used in a subsequent list action types call to return the next
--   set of action types in the list.
--   
--   <a>$sel:httpStatus:ListActionTypesResponse'</a>,
--   <a>listActionTypesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:actionTypes:ListActionTypesResponse'</a>,
--   <a>listActionTypesResponse_actionTypes</a> - Provides details of the
--   action types.
newListActionTypesResponse :: Int -> ListActionTypesResponse

-- | If the amount of returned information is significantly large, an
--   identifier is also returned. It can be used in a subsequent list
--   action types call to return the next set of action types in the list.
listActionTypesResponse_nextToken :: Lens' ListActionTypesResponse (Maybe Text)

-- | The response's http status code.
listActionTypesResponse_httpStatus :: Lens' ListActionTypesResponse Int

-- | Provides details of the action types.
listActionTypesResponse_actionTypes :: Lens' ListActionTypesResponse [ActionType]
instance GHC.Generics.Generic Network.AWS.CodePipeline.ListActionTypes.ListActionTypes
instance GHC.Show.Show Network.AWS.CodePipeline.ListActionTypes.ListActionTypes
instance GHC.Read.Read Network.AWS.CodePipeline.ListActionTypes.ListActionTypes
instance GHC.Classes.Eq Network.AWS.CodePipeline.ListActionTypes.ListActionTypes
instance GHC.Generics.Generic Network.AWS.CodePipeline.ListActionTypes.ListActionTypesResponse
instance GHC.Show.Show Network.AWS.CodePipeline.ListActionTypes.ListActionTypesResponse
instance GHC.Read.Read Network.AWS.CodePipeline.ListActionTypes.ListActionTypesResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.ListActionTypes.ListActionTypesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.ListActionTypes.ListActionTypes
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.ListActionTypes.ListActionTypesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodePipeline.ListActionTypes.ListActionTypes
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.ListActionTypes.ListActionTypes
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.ListActionTypes.ListActionTypes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.ListActionTypes.ListActionTypes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.ListActionTypes.ListActionTypes
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.ListActionTypes.ListActionTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.ListActionTypes.ListActionTypes


-- | Lists the action executions that have occurred in a pipeline.
--   
--   This operation returns paginated results.
module Network.AWS.CodePipeline.ListActionExecutions

-- | <i>See:</i> <a>newListActionExecutions</a> smart constructor.
data ListActionExecutions
ListActionExecutions' :: Maybe Text -> Maybe ActionExecutionFilter -> Maybe Natural -> Text -> ListActionExecutions

-- | The token that was returned from the previous
--   <tt>ListActionExecutions</tt> call, which can be used to return the
--   next set of action executions in the list.
[$sel:nextToken:ListActionExecutions'] :: ListActionExecutions -> Maybe Text

-- | Input information used to filter action execution history.
[$sel:filter':ListActionExecutions'] :: ListActionExecutions -> Maybe ActionExecutionFilter

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned nextToken
--   value. Action execution history is retained for up to 12 months, based
--   on action execution start times. Default value is 100.
--   
--   Detailed execution history is available for executions run on or after
--   February 21, 2019.
[$sel:maxResults:ListActionExecutions'] :: ListActionExecutions -> Maybe Natural

-- | The name of the pipeline for which you want to list action execution
--   history.
[$sel:pipelineName:ListActionExecutions'] :: ListActionExecutions -> Text

-- | Create a value of <a>ListActionExecutions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListActionExecutions'</a>,
--   <a>listActionExecutions_nextToken</a> - The token that was returned
--   from the previous <tt>ListActionExecutions</tt> call, which can be
--   used to return the next set of action executions in the list.
--   
--   <a>$sel:filter':ListActionExecutions'</a>,
--   <a>listActionExecutions_filter</a> - Input information used to filter
--   action execution history.
--   
--   <a>$sel:maxResults:ListActionExecutions'</a>,
--   <a>listActionExecutions_maxResults</a> - The maximum number of results
--   to return in a single call. To retrieve the remaining results, make
--   another call with the returned nextToken value. Action execution
--   history is retained for up to 12 months, based on action execution
--   start times. Default value is 100.
--   
--   Detailed execution history is available for executions run on or after
--   February 21, 2019.
--   
--   <a>$sel:pipelineName:ListActionExecutions'</a>,
--   <a>listActionExecutions_pipelineName</a> - The name of the pipeline
--   for which you want to list action execution history.
newListActionExecutions :: Text -> ListActionExecutions

-- | The token that was returned from the previous
--   <tt>ListActionExecutions</tt> call, which can be used to return the
--   next set of action executions in the list.
listActionExecutions_nextToken :: Lens' ListActionExecutions (Maybe Text)

-- | Input information used to filter action execution history.
listActionExecutions_filter :: Lens' ListActionExecutions (Maybe ActionExecutionFilter)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned nextToken
--   value. Action execution history is retained for up to 12 months, based
--   on action execution start times. Default value is 100.
--   
--   Detailed execution history is available for executions run on or after
--   February 21, 2019.
listActionExecutions_maxResults :: Lens' ListActionExecutions (Maybe Natural)

-- | The name of the pipeline for which you want to list action execution
--   history.
listActionExecutions_pipelineName :: Lens' ListActionExecutions Text

-- | <i>See:</i> <a>newListActionExecutionsResponse</a> smart constructor.
data ListActionExecutionsResponse
ListActionExecutionsResponse' :: Maybe [ActionExecutionDetail] -> Maybe Text -> Int -> ListActionExecutionsResponse

-- | The details for a list of recent executions, such as action execution
--   ID.
[$sel:actionExecutionDetails:ListActionExecutionsResponse'] :: ListActionExecutionsResponse -> Maybe [ActionExecutionDetail]

-- | If the amount of returned information is significantly large, an
--   identifier is also returned and can be used in a subsequent
--   <tt>ListActionExecutions</tt> call to return the next set of action
--   executions in the list.
[$sel:nextToken:ListActionExecutionsResponse'] :: ListActionExecutionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListActionExecutionsResponse'] :: ListActionExecutionsResponse -> Int

-- | Create a value of <a>ListActionExecutionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionExecutionDetails:ListActionExecutionsResponse'</a>,
--   <a>listActionExecutionsResponse_actionExecutionDetails</a> - The
--   details for a list of recent executions, such as action execution ID.
--   
--   <a>$sel:nextToken:ListActionExecutions'</a>,
--   <a>listActionExecutionsResponse_nextToken</a> - If the amount of
--   returned information is significantly large, an identifier is also
--   returned and can be used in a subsequent <tt>ListActionExecutions</tt>
--   call to return the next set of action executions in the list.
--   
--   <a>$sel:httpStatus:ListActionExecutionsResponse'</a>,
--   <a>listActionExecutionsResponse_httpStatus</a> - The response's http
--   status code.
newListActionExecutionsResponse :: Int -> ListActionExecutionsResponse

-- | The details for a list of recent executions, such as action execution
--   ID.
listActionExecutionsResponse_actionExecutionDetails :: Lens' ListActionExecutionsResponse (Maybe [ActionExecutionDetail])

-- | If the amount of returned information is significantly large, an
--   identifier is also returned and can be used in a subsequent
--   <tt>ListActionExecutions</tt> call to return the next set of action
--   executions in the list.
listActionExecutionsResponse_nextToken :: Lens' ListActionExecutionsResponse (Maybe Text)

-- | The response's http status code.
listActionExecutionsResponse_httpStatus :: Lens' ListActionExecutionsResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutions
instance GHC.Show.Show Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutions
instance GHC.Read.Read Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutions
instance GHC.Classes.Eq Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutions
instance GHC.Generics.Generic Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutionsResponse
instance GHC.Show.Show Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutionsResponse
instance GHC.Read.Read Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutionsResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutions
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutions
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutions
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutions
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutions
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.ListActionExecutions.ListActionExecutions


-- | Requests the details of a job for a third party action. Used for
--   partner actions only.
--   
--   When this API is called, AWS CodePipeline returns temporary
--   credentials for the S3 bucket used to store artifacts for the
--   pipeline, if the action requires access to that S3 bucket for input or
--   output artifacts. This API also returns any secret values defined for
--   the action.
module Network.AWS.CodePipeline.GetThirdPartyJobDetails

-- | Represents the input of a <tt>GetThirdPartyJobDetails</tt> action.
--   
--   <i>See:</i> <a>newGetThirdPartyJobDetails</a> smart constructor.
data GetThirdPartyJobDetails
GetThirdPartyJobDetails' :: Text -> Text -> GetThirdPartyJobDetails

-- | The unique system-generated ID used for identifying the job.
[$sel:jobId:GetThirdPartyJobDetails'] :: GetThirdPartyJobDetails -> Text

-- | The clientToken portion of the clientId and clientToken pair used to
--   verify that the calling entity is allowed access to the job and its
--   details.
[$sel:clientToken:GetThirdPartyJobDetails'] :: GetThirdPartyJobDetails -> Text

-- | Create a value of <a>GetThirdPartyJobDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetThirdPartyJobDetails'</a>,
--   <a>getThirdPartyJobDetails_jobId</a> - The unique system-generated ID
--   used for identifying the job.
--   
--   <a>$sel:clientToken:GetThirdPartyJobDetails'</a>,
--   <a>getThirdPartyJobDetails_clientToken</a> - The clientToken portion
--   of the clientId and clientToken pair used to verify that the calling
--   entity is allowed access to the job and its details.
newGetThirdPartyJobDetails :: Text -> Text -> GetThirdPartyJobDetails

-- | The unique system-generated ID used for identifying the job.
getThirdPartyJobDetails_jobId :: Lens' GetThirdPartyJobDetails Text

-- | The clientToken portion of the clientId and clientToken pair used to
--   verify that the calling entity is allowed access to the job and its
--   details.
getThirdPartyJobDetails_clientToken :: Lens' GetThirdPartyJobDetails Text

-- | Represents the output of a <tt>GetThirdPartyJobDetails</tt> action.
--   
--   <i>See:</i> <a>newGetThirdPartyJobDetailsResponse</a> smart
--   constructor.
data GetThirdPartyJobDetailsResponse
GetThirdPartyJobDetailsResponse' :: Maybe ThirdPartyJobDetails -> Int -> GetThirdPartyJobDetailsResponse

-- | The details of the job, including any protected values defined for the
--   job.
[$sel:jobDetails:GetThirdPartyJobDetailsResponse'] :: GetThirdPartyJobDetailsResponse -> Maybe ThirdPartyJobDetails

-- | The response's http status code.
[$sel:httpStatus:GetThirdPartyJobDetailsResponse'] :: GetThirdPartyJobDetailsResponse -> Int

-- | Create a value of <a>GetThirdPartyJobDetailsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobDetails:GetThirdPartyJobDetailsResponse'</a>,
--   <a>getThirdPartyJobDetailsResponse_jobDetails</a> - The details of the
--   job, including any protected values defined for the job.
--   
--   <a>$sel:httpStatus:GetThirdPartyJobDetailsResponse'</a>,
--   <a>getThirdPartyJobDetailsResponse_httpStatus</a> - The response's
--   http status code.
newGetThirdPartyJobDetailsResponse :: Int -> GetThirdPartyJobDetailsResponse

-- | The details of the job, including any protected values defined for the
--   job.
getThirdPartyJobDetailsResponse_jobDetails :: Lens' GetThirdPartyJobDetailsResponse (Maybe ThirdPartyJobDetails)

-- | The response's http status code.
getThirdPartyJobDetailsResponse_httpStatus :: Lens' GetThirdPartyJobDetailsResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetails
instance GHC.Show.Show Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetails
instance GHC.Read.Read Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetails
instance GHC.Classes.Eq Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetails
instance GHC.Generics.Generic Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetailsResponse
instance GHC.Show.Show Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetailsResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetailsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetails
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetailsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetails
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetails
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetails
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetails
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetails
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.GetThirdPartyJobDetails.GetThirdPartyJobDetails


-- | Returns information about the state of a pipeline, including the
--   stages and actions.
--   
--   Values returned in the <tt>revisionId</tt> and <tt>revisionUrl</tt>
--   fields indicate the source revision information, such as the commit
--   ID, for the current state.
module Network.AWS.CodePipeline.GetPipelineState

-- | Represents the input of a <tt>GetPipelineState</tt> action.
--   
--   <i>See:</i> <a>newGetPipelineState</a> smart constructor.
data GetPipelineState
GetPipelineState' :: Text -> GetPipelineState

-- | The name of the pipeline about which you want to get information.
[$sel:name:GetPipelineState'] :: GetPipelineState -> Text

-- | Create a value of <a>GetPipelineState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetPipelineState'</a>, <a>getPipelineState_name</a> - The
--   name of the pipeline about which you want to get information.
newGetPipelineState :: Text -> GetPipelineState

-- | The name of the pipeline about which you want to get information.
getPipelineState_name :: Lens' GetPipelineState Text

-- | Represents the output of a <tt>GetPipelineState</tt> action.
--   
--   <i>See:</i> <a>newGetPipelineStateResponse</a> smart constructor.
data GetPipelineStateResponse
GetPipelineStateResponse' :: Maybe Text -> Maybe POSIX -> Maybe [StageState] -> Maybe Natural -> Maybe POSIX -> Int -> GetPipelineStateResponse

-- | The name of the pipeline for which you want to get the state.
[$sel:pipelineName:GetPipelineStateResponse'] :: GetPipelineStateResponse -> Maybe Text

-- | The date and time the pipeline was created, in timestamp format.
[$sel:created:GetPipelineStateResponse'] :: GetPipelineStateResponse -> Maybe POSIX

-- | A list of the pipeline stage output information, including stage name,
--   state, most recent run details, whether the stage is disabled, and
--   other data.
[$sel:stageStates:GetPipelineStateResponse'] :: GetPipelineStateResponse -> Maybe [StageState]

-- | The version number of the pipeline.
--   
--   A newly created pipeline is always assigned a version number of
--   <tt>1</tt>.
[$sel:pipelineVersion:GetPipelineStateResponse'] :: GetPipelineStateResponse -> Maybe Natural

-- | The date and time the pipeline was last updated, in timestamp format.
[$sel:updated:GetPipelineStateResponse'] :: GetPipelineStateResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:GetPipelineStateResponse'] :: GetPipelineStateResponse -> Int

-- | Create a value of <a>GetPipelineStateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:GetPipelineStateResponse'</a>,
--   <a>getPipelineStateResponse_pipelineName</a> - The name of the
--   pipeline for which you want to get the state.
--   
--   <a>$sel:created:GetPipelineStateResponse'</a>,
--   <a>getPipelineStateResponse_created</a> - The date and time the
--   pipeline was created, in timestamp format.
--   
--   <a>$sel:stageStates:GetPipelineStateResponse'</a>,
--   <a>getPipelineStateResponse_stageStates</a> - A list of the pipeline
--   stage output information, including stage name, state, most recent run
--   details, whether the stage is disabled, and other data.
--   
--   <a>$sel:pipelineVersion:GetPipelineStateResponse'</a>,
--   <a>getPipelineStateResponse_pipelineVersion</a> - The version number
--   of the pipeline.
--   
--   A newly created pipeline is always assigned a version number of
--   <tt>1</tt>.
--   
--   <a>$sel:updated:GetPipelineStateResponse'</a>,
--   <a>getPipelineStateResponse_updated</a> - The date and time the
--   pipeline was last updated, in timestamp format.
--   
--   <a>$sel:httpStatus:GetPipelineStateResponse'</a>,
--   <a>getPipelineStateResponse_httpStatus</a> - The response's http
--   status code.
newGetPipelineStateResponse :: Int -> GetPipelineStateResponse

-- | The name of the pipeline for which you want to get the state.
getPipelineStateResponse_pipelineName :: Lens' GetPipelineStateResponse (Maybe Text)

-- | The date and time the pipeline was created, in timestamp format.
getPipelineStateResponse_created :: Lens' GetPipelineStateResponse (Maybe UTCTime)

-- | A list of the pipeline stage output information, including stage name,
--   state, most recent run details, whether the stage is disabled, and
--   other data.
getPipelineStateResponse_stageStates :: Lens' GetPipelineStateResponse (Maybe [StageState])

-- | The version number of the pipeline.
--   
--   A newly created pipeline is always assigned a version number of
--   <tt>1</tt>.
getPipelineStateResponse_pipelineVersion :: Lens' GetPipelineStateResponse (Maybe Natural)

-- | The date and time the pipeline was last updated, in timestamp format.
getPipelineStateResponse_updated :: Lens' GetPipelineStateResponse (Maybe UTCTime)

-- | The response's http status code.
getPipelineStateResponse_httpStatus :: Lens' GetPipelineStateResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.GetPipelineState.GetPipelineState
instance GHC.Show.Show Network.AWS.CodePipeline.GetPipelineState.GetPipelineState
instance GHC.Read.Read Network.AWS.CodePipeline.GetPipelineState.GetPipelineState
instance GHC.Classes.Eq Network.AWS.CodePipeline.GetPipelineState.GetPipelineState
instance GHC.Generics.Generic Network.AWS.CodePipeline.GetPipelineState.GetPipelineStateResponse
instance GHC.Show.Show Network.AWS.CodePipeline.GetPipelineState.GetPipelineStateResponse
instance GHC.Read.Read Network.AWS.CodePipeline.GetPipelineState.GetPipelineStateResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.GetPipelineState.GetPipelineStateResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.GetPipelineState.GetPipelineState
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.GetPipelineState.GetPipelineStateResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.GetPipelineState.GetPipelineState
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.GetPipelineState.GetPipelineState
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.GetPipelineState.GetPipelineState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.GetPipelineState.GetPipelineState
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.GetPipelineState.GetPipelineState
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.GetPipelineState.GetPipelineState


-- | Returns information about an execution of a pipeline, including
--   details about artifacts, the pipeline execution ID, and the name,
--   version, and status of the pipeline.
module Network.AWS.CodePipeline.GetPipelineExecution

-- | Represents the input of a <tt>GetPipelineExecution</tt> action.
--   
--   <i>See:</i> <a>newGetPipelineExecution</a> smart constructor.
data GetPipelineExecution
GetPipelineExecution' :: Text -> Text -> GetPipelineExecution

-- | The name of the pipeline about which you want to get execution
--   details.
[$sel:pipelineName:GetPipelineExecution'] :: GetPipelineExecution -> Text

-- | The ID of the pipeline execution about which you want to get execution
--   details.
[$sel:pipelineExecutionId:GetPipelineExecution'] :: GetPipelineExecution -> Text

-- | Create a value of <a>GetPipelineExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:GetPipelineExecution'</a>,
--   <a>getPipelineExecution_pipelineName</a> - The name of the pipeline
--   about which you want to get execution details.
--   
--   <a>$sel:pipelineExecutionId:GetPipelineExecution'</a>,
--   <a>getPipelineExecution_pipelineExecutionId</a> - The ID of the
--   pipeline execution about which you want to get execution details.
newGetPipelineExecution :: Text -> Text -> GetPipelineExecution

-- | The name of the pipeline about which you want to get execution
--   details.
getPipelineExecution_pipelineName :: Lens' GetPipelineExecution Text

-- | The ID of the pipeline execution about which you want to get execution
--   details.
getPipelineExecution_pipelineExecutionId :: Lens' GetPipelineExecution Text

-- | Represents the output of a <tt>GetPipelineExecution</tt> action.
--   
--   <i>See:</i> <a>newGetPipelineExecutionResponse</a> smart constructor.
data GetPipelineExecutionResponse
GetPipelineExecutionResponse' :: Maybe PipelineExecution -> Int -> GetPipelineExecutionResponse

-- | Represents information about the execution of a pipeline.
[$sel:pipelineExecution:GetPipelineExecutionResponse'] :: GetPipelineExecutionResponse -> Maybe PipelineExecution

-- | The response's http status code.
[$sel:httpStatus:GetPipelineExecutionResponse'] :: GetPipelineExecutionResponse -> Int

-- | Create a value of <a>GetPipelineExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecution:GetPipelineExecutionResponse'</a>,
--   <a>getPipelineExecutionResponse_pipelineExecution</a> - Represents
--   information about the execution of a pipeline.
--   
--   <a>$sel:httpStatus:GetPipelineExecutionResponse'</a>,
--   <a>getPipelineExecutionResponse_httpStatus</a> - The response's http
--   status code.
newGetPipelineExecutionResponse :: Int -> GetPipelineExecutionResponse

-- | Represents information about the execution of a pipeline.
getPipelineExecutionResponse_pipelineExecution :: Lens' GetPipelineExecutionResponse (Maybe PipelineExecution)

-- | The response's http status code.
getPipelineExecutionResponse_httpStatus :: Lens' GetPipelineExecutionResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecution
instance GHC.Show.Show Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecution
instance GHC.Read.Read Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecution
instance GHC.Classes.Eq Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecution
instance GHC.Generics.Generic Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecutionResponse
instance GHC.Show.Show Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecutionResponse
instance GHC.Read.Read Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecutionResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecutionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecution
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecutionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecution
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecution
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecution
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecution
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecution
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.GetPipelineExecution.GetPipelineExecution


-- | Returns the metadata, structure, stages, and actions of a pipeline.
--   Can be used to return the entire structure of a pipeline in JSON
--   format, which can then be modified and used to update the pipeline
--   structure with UpdatePipeline.
module Network.AWS.CodePipeline.GetPipeline

-- | Represents the input of a <tt>GetPipeline</tt> action.
--   
--   <i>See:</i> <a>newGetPipeline</a> smart constructor.
data GetPipeline
GetPipeline' :: Maybe Natural -> Text -> GetPipeline

-- | The version number of the pipeline. If you do not specify a version,
--   defaults to the current version.
[$sel:version:GetPipeline'] :: GetPipeline -> Maybe Natural

-- | The name of the pipeline for which you want to get information.
--   Pipeline names must be unique under an AWS user account.
[$sel:name:GetPipeline'] :: GetPipeline -> Text

-- | Create a value of <a>GetPipeline</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:version:GetPipeline'</a>, <a>getPipeline_version</a> - The
--   version number of the pipeline. If you do not specify a version,
--   defaults to the current version.
--   
--   <a>$sel:name:GetPipeline'</a>, <a>getPipeline_name</a> - The name of
--   the pipeline for which you want to get information. Pipeline names
--   must be unique under an AWS user account.
newGetPipeline :: Text -> GetPipeline

-- | The version number of the pipeline. If you do not specify a version,
--   defaults to the current version.
getPipeline_version :: Lens' GetPipeline (Maybe Natural)

-- | The name of the pipeline for which you want to get information.
--   Pipeline names must be unique under an AWS user account.
getPipeline_name :: Lens' GetPipeline Text

-- | Represents the output of a <tt>GetPipeline</tt> action.
--   
--   <i>See:</i> <a>newGetPipelineResponse</a> smart constructor.
data GetPipelineResponse
GetPipelineResponse' :: Maybe PipelineDeclaration -> Maybe PipelineMetadata -> Int -> GetPipelineResponse

-- | Represents the structure of actions and stages to be performed in the
--   pipeline.
[$sel:pipeline:GetPipelineResponse'] :: GetPipelineResponse -> Maybe PipelineDeclaration

-- | Represents the pipeline metadata information returned as part of the
--   output of a <tt>GetPipeline</tt> action.
[$sel:metadata:GetPipelineResponse'] :: GetPipelineResponse -> Maybe PipelineMetadata

-- | The response's http status code.
[$sel:httpStatus:GetPipelineResponse'] :: GetPipelineResponse -> Int

-- | Create a value of <a>GetPipelineResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipeline:GetPipelineResponse'</a>,
--   <a>getPipelineResponse_pipeline</a> - Represents the structure of
--   actions and stages to be performed in the pipeline.
--   
--   <a>$sel:metadata:GetPipelineResponse'</a>,
--   <a>getPipelineResponse_metadata</a> - Represents the pipeline metadata
--   information returned as part of the output of a <tt>GetPipeline</tt>
--   action.
--   
--   <a>$sel:httpStatus:GetPipelineResponse'</a>,
--   <a>getPipelineResponse_httpStatus</a> - The response's http status
--   code.
newGetPipelineResponse :: Int -> GetPipelineResponse

-- | Represents the structure of actions and stages to be performed in the
--   pipeline.
getPipelineResponse_pipeline :: Lens' GetPipelineResponse (Maybe PipelineDeclaration)

-- | Represents the pipeline metadata information returned as part of the
--   output of a <tt>GetPipeline</tt> action.
getPipelineResponse_metadata :: Lens' GetPipelineResponse (Maybe PipelineMetadata)

-- | The response's http status code.
getPipelineResponse_httpStatus :: Lens' GetPipelineResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.GetPipeline.GetPipeline
instance GHC.Show.Show Network.AWS.CodePipeline.GetPipeline.GetPipeline
instance GHC.Read.Read Network.AWS.CodePipeline.GetPipeline.GetPipeline
instance GHC.Classes.Eq Network.AWS.CodePipeline.GetPipeline.GetPipeline
instance GHC.Generics.Generic Network.AWS.CodePipeline.GetPipeline.GetPipelineResponse
instance GHC.Show.Show Network.AWS.CodePipeline.GetPipeline.GetPipelineResponse
instance GHC.Read.Read Network.AWS.CodePipeline.GetPipeline.GetPipelineResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.GetPipeline.GetPipelineResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.GetPipeline.GetPipeline
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.GetPipeline.GetPipelineResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.GetPipeline.GetPipeline
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.GetPipeline.GetPipeline
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.GetPipeline.GetPipeline
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.GetPipeline.GetPipeline
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.GetPipeline.GetPipeline
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.GetPipeline.GetPipeline


-- | Returns information about a job. Used for custom actions only.
--   
--   When this API is called, AWS CodePipeline returns temporary
--   credentials for the S3 bucket used to store artifacts for the
--   pipeline, if the action requires access to that S3 bucket for input or
--   output artifacts. This API also returns any secret values defined for
--   the action.
module Network.AWS.CodePipeline.GetJobDetails

-- | Represents the input of a <tt>GetJobDetails</tt> action.
--   
--   <i>See:</i> <a>newGetJobDetails</a> smart constructor.
data GetJobDetails
GetJobDetails' :: Text -> GetJobDetails

-- | The unique system-generated ID for the job.
[$sel:jobId:GetJobDetails'] :: GetJobDetails -> Text

-- | Create a value of <a>GetJobDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetJobDetails'</a>, <a>getJobDetails_jobId</a> - The
--   unique system-generated ID for the job.
newGetJobDetails :: Text -> GetJobDetails

-- | The unique system-generated ID for the job.
getJobDetails_jobId :: Lens' GetJobDetails Text

-- | Represents the output of a <tt>GetJobDetails</tt> action.
--   
--   <i>See:</i> <a>newGetJobDetailsResponse</a> smart constructor.
data GetJobDetailsResponse
GetJobDetailsResponse' :: Maybe JobDetails -> Int -> GetJobDetailsResponse

-- | The details of the job.
--   
--   If AWSSessionCredentials is used, a long-running job can call
--   <tt>GetJobDetails</tt> again to obtain new credentials.
[$sel:jobDetails:GetJobDetailsResponse'] :: GetJobDetailsResponse -> Maybe JobDetails

-- | The response's http status code.
[$sel:httpStatus:GetJobDetailsResponse'] :: GetJobDetailsResponse -> Int

-- | Create a value of <a>GetJobDetailsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobDetails:GetJobDetailsResponse'</a>,
--   <a>getJobDetailsResponse_jobDetails</a> - The details of the job.
--   
--   If AWSSessionCredentials is used, a long-running job can call
--   <tt>GetJobDetails</tt> again to obtain new credentials.
--   
--   <a>$sel:httpStatus:GetJobDetailsResponse'</a>,
--   <a>getJobDetailsResponse_httpStatus</a> - The response's http status
--   code.
newGetJobDetailsResponse :: Int -> GetJobDetailsResponse

-- | The details of the job.
--   
--   If AWSSessionCredentials is used, a long-running job can call
--   <tt>GetJobDetails</tt> again to obtain new credentials.
getJobDetailsResponse_jobDetails :: Lens' GetJobDetailsResponse (Maybe JobDetails)

-- | The response's http status code.
getJobDetailsResponse_httpStatus :: Lens' GetJobDetailsResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.GetJobDetails.GetJobDetails
instance GHC.Show.Show Network.AWS.CodePipeline.GetJobDetails.GetJobDetails
instance GHC.Read.Read Network.AWS.CodePipeline.GetJobDetails.GetJobDetails
instance GHC.Classes.Eq Network.AWS.CodePipeline.GetJobDetails.GetJobDetails
instance GHC.Generics.Generic Network.AWS.CodePipeline.GetJobDetails.GetJobDetailsResponse
instance GHC.Show.Show Network.AWS.CodePipeline.GetJobDetails.GetJobDetailsResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.GetJobDetails.GetJobDetailsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.GetJobDetails.GetJobDetails
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.GetJobDetails.GetJobDetailsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.GetJobDetails.GetJobDetails
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.GetJobDetails.GetJobDetails
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.GetJobDetails.GetJobDetails
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.GetJobDetails.GetJobDetails
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.GetJobDetails.GetJobDetails
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.GetJobDetails.GetJobDetails


-- | Returns information about an action type created for an external
--   provider, where the action is to be used by customers of the external
--   provider. The action can be created with any supported integration
--   model.
module Network.AWS.CodePipeline.GetActionType

-- | <i>See:</i> <a>newGetActionType</a> smart constructor.
data GetActionType
GetActionType' :: ActionCategory -> Text -> Text -> Text -> GetActionType

-- | Defines what kind of action can be taken in the stage. The following
--   are the valid values:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
[$sel:category:GetActionType'] :: GetActionType -> ActionCategory

-- | The creator of an action type that was created with any supported
--   integration model. There are two valid values: <tt>AWS</tt> and
--   <tt>ThirdParty</tt>.
[$sel:owner:GetActionType'] :: GetActionType -> Text

-- | The provider of the action type being called. The provider name is
--   specified when the action type is created.
[$sel:provider:GetActionType'] :: GetActionType -> Text

-- | A string that describes the action type version.
[$sel:version:GetActionType'] :: GetActionType -> Text

-- | Create a value of <a>GetActionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:category:GetActionType'</a>, <a>getActionType_category</a> -
--   Defines what kind of action can be taken in the stage. The following
--   are the valid values:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
--   
--   <a>$sel:owner:GetActionType'</a>, <a>getActionType_owner</a> - The
--   creator of an action type that was created with any supported
--   integration model. There are two valid values: <tt>AWS</tt> and
--   <tt>ThirdParty</tt>.
--   
--   <a>$sel:provider:GetActionType'</a>, <a>getActionType_provider</a> -
--   The provider of the action type being called. The provider name is
--   specified when the action type is created.
--   
--   <a>$sel:version:GetActionType'</a>, <a>getActionType_version</a> - A
--   string that describes the action type version.
newGetActionType :: ActionCategory -> Text -> Text -> Text -> GetActionType

-- | Defines what kind of action can be taken in the stage. The following
--   are the valid values:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
getActionType_category :: Lens' GetActionType ActionCategory

-- | The creator of an action type that was created with any supported
--   integration model. There are two valid values: <tt>AWS</tt> and
--   <tt>ThirdParty</tt>.
getActionType_owner :: Lens' GetActionType Text

-- | The provider of the action type being called. The provider name is
--   specified when the action type is created.
getActionType_provider :: Lens' GetActionType Text

-- | A string that describes the action type version.
getActionType_version :: Lens' GetActionType Text

-- | <i>See:</i> <a>newGetActionTypeResponse</a> smart constructor.
data GetActionTypeResponse
GetActionTypeResponse' :: Maybe ActionTypeDeclaration -> Int -> GetActionTypeResponse

-- | The action type information for the requested action type, such as the
--   action type ID.
[$sel:actionType:GetActionTypeResponse'] :: GetActionTypeResponse -> Maybe ActionTypeDeclaration

-- | The response's http status code.
[$sel:httpStatus:GetActionTypeResponse'] :: GetActionTypeResponse -> Int

-- | Create a value of <a>GetActionTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionType:GetActionTypeResponse'</a>,
--   <a>getActionTypeResponse_actionType</a> - The action type information
--   for the requested action type, such as the action type ID.
--   
--   <a>$sel:httpStatus:GetActionTypeResponse'</a>,
--   <a>getActionTypeResponse_httpStatus</a> - The response's http status
--   code.
newGetActionTypeResponse :: Int -> GetActionTypeResponse

-- | The action type information for the requested action type, such as the
--   action type ID.
getActionTypeResponse_actionType :: Lens' GetActionTypeResponse (Maybe ActionTypeDeclaration)

-- | The response's http status code.
getActionTypeResponse_httpStatus :: Lens' GetActionTypeResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.GetActionType.GetActionType
instance GHC.Show.Show Network.AWS.CodePipeline.GetActionType.GetActionType
instance GHC.Read.Read Network.AWS.CodePipeline.GetActionType.GetActionType
instance GHC.Classes.Eq Network.AWS.CodePipeline.GetActionType.GetActionType
instance GHC.Generics.Generic Network.AWS.CodePipeline.GetActionType.GetActionTypeResponse
instance GHC.Show.Show Network.AWS.CodePipeline.GetActionType.GetActionTypeResponse
instance GHC.Read.Read Network.AWS.CodePipeline.GetActionType.GetActionTypeResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.GetActionType.GetActionTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.GetActionType.GetActionType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.GetActionType.GetActionTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.GetActionType.GetActionType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.GetActionType.GetActionType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.GetActionType.GetActionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.GetActionType.GetActionType
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.GetActionType.GetActionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.GetActionType.GetActionType


-- | Enables artifacts in a pipeline to transition to a stage in a
--   pipeline.
module Network.AWS.CodePipeline.EnableStageTransition

-- | Represents the input of an <tt>EnableStageTransition</tt> action.
--   
--   <i>See:</i> <a>newEnableStageTransition</a> smart constructor.
data EnableStageTransition
EnableStageTransition' :: Text -> Text -> StageTransitionType -> EnableStageTransition

-- | The name of the pipeline in which you want to enable the flow of
--   artifacts from one stage to another.
[$sel:pipelineName:EnableStageTransition'] :: EnableStageTransition -> Text

-- | The name of the stage where you want to enable the transition of
--   artifacts, either into the stage (inbound) or from that stage to the
--   next stage (outbound).
[$sel:stageName:EnableStageTransition'] :: EnableStageTransition -> Text

-- | Specifies whether artifacts are allowed to enter the stage and be
--   processed by the actions in that stage (inbound) or whether already
--   processed artifacts are allowed to transition to the next stage
--   (outbound).
[$sel:transitionType:EnableStageTransition'] :: EnableStageTransition -> StageTransitionType

-- | Create a value of <a>EnableStageTransition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:EnableStageTransition'</a>,
--   <a>enableStageTransition_pipelineName</a> - The name of the pipeline
--   in which you want to enable the flow of artifacts from one stage to
--   another.
--   
--   <a>$sel:stageName:EnableStageTransition'</a>,
--   <a>enableStageTransition_stageName</a> - The name of the stage where
--   you want to enable the transition of artifacts, either into the stage
--   (inbound) or from that stage to the next stage (outbound).
--   
--   <a>$sel:transitionType:EnableStageTransition'</a>,
--   <a>enableStageTransition_transitionType</a> - Specifies whether
--   artifacts are allowed to enter the stage and be processed by the
--   actions in that stage (inbound) or whether already processed artifacts
--   are allowed to transition to the next stage (outbound).
newEnableStageTransition :: Text -> Text -> StageTransitionType -> EnableStageTransition

-- | The name of the pipeline in which you want to enable the flow of
--   artifacts from one stage to another.
enableStageTransition_pipelineName :: Lens' EnableStageTransition Text

-- | The name of the stage where you want to enable the transition of
--   artifacts, either into the stage (inbound) or from that stage to the
--   next stage (outbound).
enableStageTransition_stageName :: Lens' EnableStageTransition Text

-- | Specifies whether artifacts are allowed to enter the stage and be
--   processed by the actions in that stage (inbound) or whether already
--   processed artifacts are allowed to transition to the next stage
--   (outbound).
enableStageTransition_transitionType :: Lens' EnableStageTransition StageTransitionType

-- | <i>See:</i> <a>newEnableStageTransitionResponse</a> smart constructor.
data EnableStageTransitionResponse
EnableStageTransitionResponse' :: EnableStageTransitionResponse

-- | Create a value of <a>EnableStageTransitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newEnableStageTransitionResponse :: EnableStageTransitionResponse
instance GHC.Generics.Generic Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransition
instance GHC.Show.Show Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransition
instance GHC.Read.Read Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransition
instance GHC.Classes.Eq Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransition
instance GHC.Generics.Generic Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransitionResponse
instance GHC.Show.Show Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransitionResponse
instance GHC.Read.Read Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransitionResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransition
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransition
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransition
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransition
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.EnableStageTransition.EnableStageTransition


-- | Prevents artifacts in a pipeline from transitioning to the next stage
--   in the pipeline.
module Network.AWS.CodePipeline.DisableStageTransition

-- | Represents the input of a <tt>DisableStageTransition</tt> action.
--   
--   <i>See:</i> <a>newDisableStageTransition</a> smart constructor.
data DisableStageTransition
DisableStageTransition' :: Text -> Text -> StageTransitionType -> Text -> DisableStageTransition

-- | The name of the pipeline in which you want to disable the flow of
--   artifacts from one stage to another.
[$sel:pipelineName:DisableStageTransition'] :: DisableStageTransition -> Text

-- | The name of the stage where you want to disable the inbound or
--   outbound transition of artifacts.
[$sel:stageName:DisableStageTransition'] :: DisableStageTransition -> Text

-- | Specifies whether artifacts are prevented from transitioning into the
--   stage and being processed by the actions in that stage (inbound), or
--   prevented from transitioning from the stage after they have been
--   processed by the actions in that stage (outbound).
[$sel:transitionType:DisableStageTransition'] :: DisableStageTransition -> StageTransitionType

-- | The reason given to the user that a stage is disabled, such as waiting
--   for manual approval or manual tests. This message is displayed in the
--   pipeline console UI.
[$sel:reason:DisableStageTransition'] :: DisableStageTransition -> Text

-- | Create a value of <a>DisableStageTransition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:DisableStageTransition'</a>,
--   <a>disableStageTransition_pipelineName</a> - The name of the pipeline
--   in which you want to disable the flow of artifacts from one stage to
--   another.
--   
--   <a>$sel:stageName:DisableStageTransition'</a>,
--   <a>disableStageTransition_stageName</a> - The name of the stage where
--   you want to disable the inbound or outbound transition of artifacts.
--   
--   <a>$sel:transitionType:DisableStageTransition'</a>,
--   <a>disableStageTransition_transitionType</a> - Specifies whether
--   artifacts are prevented from transitioning into the stage and being
--   processed by the actions in that stage (inbound), or prevented from
--   transitioning from the stage after they have been processed by the
--   actions in that stage (outbound).
--   
--   <a>$sel:reason:DisableStageTransition'</a>,
--   <a>disableStageTransition_reason</a> - The reason given to the user
--   that a stage is disabled, such as waiting for manual approval or
--   manual tests. This message is displayed in the pipeline console UI.
newDisableStageTransition :: Text -> Text -> StageTransitionType -> Text -> DisableStageTransition

-- | The name of the pipeline in which you want to disable the flow of
--   artifacts from one stage to another.
disableStageTransition_pipelineName :: Lens' DisableStageTransition Text

-- | The name of the stage where you want to disable the inbound or
--   outbound transition of artifacts.
disableStageTransition_stageName :: Lens' DisableStageTransition Text

-- | Specifies whether artifacts are prevented from transitioning into the
--   stage and being processed by the actions in that stage (inbound), or
--   prevented from transitioning from the stage after they have been
--   processed by the actions in that stage (outbound).
disableStageTransition_transitionType :: Lens' DisableStageTransition StageTransitionType

-- | The reason given to the user that a stage is disabled, such as waiting
--   for manual approval or manual tests. This message is displayed in the
--   pipeline console UI.
disableStageTransition_reason :: Lens' DisableStageTransition Text

-- | <i>See:</i> <a>newDisableStageTransitionResponse</a> smart
--   constructor.
data DisableStageTransitionResponse
DisableStageTransitionResponse' :: DisableStageTransitionResponse

-- | Create a value of <a>DisableStageTransitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisableStageTransitionResponse :: DisableStageTransitionResponse
instance GHC.Generics.Generic Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransition
instance GHC.Show.Show Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransition
instance GHC.Read.Read Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransition
instance GHC.Classes.Eq Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransition
instance GHC.Generics.Generic Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransitionResponse
instance GHC.Show.Show Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransitionResponse
instance GHC.Read.Read Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransitionResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransition
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransition
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransition
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransition
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.DisableStageTransition.DisableStageTransition


-- | Removes the connection between the webhook that was created by
--   CodePipeline and the external tool with events to be detected.
--   Currently supported only for webhooks that target an action type of
--   GitHub.
module Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty

-- | <i>See:</i> <a>newDeregisterWebhookWithThirdParty</a> smart
--   constructor.
data DeregisterWebhookWithThirdParty
DeregisterWebhookWithThirdParty' :: Maybe Text -> DeregisterWebhookWithThirdParty

-- | The name of the webhook you want to deregister.
[$sel:webhookName:DeregisterWebhookWithThirdParty'] :: DeregisterWebhookWithThirdParty -> Maybe Text

-- | Create a value of <a>DeregisterWebhookWithThirdParty</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:webhookName:DeregisterWebhookWithThirdParty'</a>,
--   <a>deregisterWebhookWithThirdParty_webhookName</a> - The name of the
--   webhook you want to deregister.
newDeregisterWebhookWithThirdParty :: DeregisterWebhookWithThirdParty

-- | The name of the webhook you want to deregister.
deregisterWebhookWithThirdParty_webhookName :: Lens' DeregisterWebhookWithThirdParty (Maybe Text)

-- | <i>See:</i> <a>newDeregisterWebhookWithThirdPartyResponse</a> smart
--   constructor.
data DeregisterWebhookWithThirdPartyResponse
DeregisterWebhookWithThirdPartyResponse' :: Int -> DeregisterWebhookWithThirdPartyResponse

-- | The response's http status code.
[$sel:httpStatus:DeregisterWebhookWithThirdPartyResponse'] :: DeregisterWebhookWithThirdPartyResponse -> Int

-- | Create a value of <a>DeregisterWebhookWithThirdPartyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeregisterWebhookWithThirdPartyResponse'</a>,
--   <a>deregisterWebhookWithThirdPartyResponse_httpStatus</a> - The
--   response's http status code.
newDeregisterWebhookWithThirdPartyResponse :: Int -> DeregisterWebhookWithThirdPartyResponse

-- | The response's http status code.
deregisterWebhookWithThirdPartyResponse_httpStatus :: Lens' DeregisterWebhookWithThirdPartyResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdParty
instance GHC.Show.Show Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdParty
instance GHC.Read.Read Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdParty
instance GHC.Classes.Eq Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdParty
instance GHC.Generics.Generic Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdPartyResponse
instance GHC.Show.Show Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdPartyResponse
instance GHC.Read.Read Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdPartyResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdPartyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdParty
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdPartyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdParty
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdParty
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdParty
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdParty
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdParty
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.DeregisterWebhookWithThirdParty.DeregisterWebhookWithThirdParty


-- | Deletes a previously created webhook by name. Deleting the webhook
--   stops AWS CodePipeline from starting a pipeline every time an external
--   event occurs. The API returns successfully when trying to delete a
--   webhook that is already deleted. If a deleted webhook is re-created by
--   calling PutWebhook with the same name, it will have a different URL.
module Network.AWS.CodePipeline.DeleteWebhook

-- | <i>See:</i> <a>newDeleteWebhook</a> smart constructor.
data DeleteWebhook
DeleteWebhook' :: Text -> DeleteWebhook

-- | The name of the webhook you want to delete.
[$sel:name:DeleteWebhook'] :: DeleteWebhook -> Text

-- | Create a value of <a>DeleteWebhook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteWebhook'</a>, <a>deleteWebhook_name</a> - The name
--   of the webhook you want to delete.
newDeleteWebhook :: Text -> DeleteWebhook

-- | The name of the webhook you want to delete.
deleteWebhook_name :: Lens' DeleteWebhook Text

-- | <i>See:</i> <a>newDeleteWebhookResponse</a> smart constructor.
data DeleteWebhookResponse
DeleteWebhookResponse' :: Int -> DeleteWebhookResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteWebhookResponse'] :: DeleteWebhookResponse -> Int

-- | Create a value of <a>DeleteWebhookResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteWebhookResponse'</a>,
--   <a>deleteWebhookResponse_httpStatus</a> - The response's http status
--   code.
newDeleteWebhookResponse :: Int -> DeleteWebhookResponse

-- | The response's http status code.
deleteWebhookResponse_httpStatus :: Lens' DeleteWebhookResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhook
instance GHC.Show.Show Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhook
instance GHC.Read.Read Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhook
instance GHC.Classes.Eq Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhook
instance GHC.Generics.Generic Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhookResponse
instance GHC.Show.Show Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhookResponse
instance GHC.Read.Read Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhookResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhookResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhook
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhookResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhook
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhook
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhook
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhook
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhook
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.DeleteWebhook.DeleteWebhook


-- | Deletes the specified pipeline.
module Network.AWS.CodePipeline.DeletePipeline

-- | Represents the input of a <tt>DeletePipeline</tt> action.
--   
--   <i>See:</i> <a>newDeletePipeline</a> smart constructor.
data DeletePipeline
DeletePipeline' :: Text -> DeletePipeline

-- | The name of the pipeline to be deleted.
[$sel:name:DeletePipeline'] :: DeletePipeline -> Text

-- | Create a value of <a>DeletePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeletePipeline'</a>, <a>deletePipeline_name</a> - The
--   name of the pipeline to be deleted.
newDeletePipeline :: Text -> DeletePipeline

-- | The name of the pipeline to be deleted.
deletePipeline_name :: Lens' DeletePipeline Text

-- | <i>See:</i> <a>newDeletePipelineResponse</a> smart constructor.
data DeletePipelineResponse
DeletePipelineResponse' :: DeletePipelineResponse

-- | Create a value of <a>DeletePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePipelineResponse :: DeletePipelineResponse
instance GHC.Generics.Generic Network.AWS.CodePipeline.DeletePipeline.DeletePipeline
instance GHC.Show.Show Network.AWS.CodePipeline.DeletePipeline.DeletePipeline
instance GHC.Read.Read Network.AWS.CodePipeline.DeletePipeline.DeletePipeline
instance GHC.Classes.Eq Network.AWS.CodePipeline.DeletePipeline.DeletePipeline
instance GHC.Generics.Generic Network.AWS.CodePipeline.DeletePipeline.DeletePipelineResponse
instance GHC.Show.Show Network.AWS.CodePipeline.DeletePipeline.DeletePipelineResponse
instance GHC.Read.Read Network.AWS.CodePipeline.DeletePipeline.DeletePipelineResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.DeletePipeline.DeletePipelineResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.DeletePipeline.DeletePipeline
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.DeletePipeline.DeletePipelineResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.DeletePipeline.DeletePipeline
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.DeletePipeline.DeletePipeline
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.DeletePipeline.DeletePipeline
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.DeletePipeline.DeletePipeline
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.DeletePipeline.DeletePipeline
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.DeletePipeline.DeletePipeline


-- | Marks a custom action as deleted. <tt>PollForJobs</tt> for the custom
--   action fails after the action is marked for deletion. Used for custom
--   actions only.
--   
--   To re-create a custom action after it has been deleted you must use a
--   string in the version field that has never been used before. This
--   string can be an incremented version number, for example. To restore a
--   deleted custom action, use a JSON file that is identical to the
--   deleted action, including the original string in the version field.
module Network.AWS.CodePipeline.DeleteCustomActionType

-- | Represents the input of a <tt>DeleteCustomActionType</tt> operation.
--   The custom action will be marked as deleted.
--   
--   <i>See:</i> <a>newDeleteCustomActionType</a> smart constructor.
data DeleteCustomActionType
DeleteCustomActionType' :: ActionCategory -> Text -> Text -> DeleteCustomActionType

-- | The category of the custom action that you want to delete, such as
--   source or deploy.
[$sel:category:DeleteCustomActionType'] :: DeleteCustomActionType -> ActionCategory

-- | The provider of the service used in the custom action, such as AWS
--   CodeDeploy.
[$sel:provider:DeleteCustomActionType'] :: DeleteCustomActionType -> Text

-- | The version of the custom action to delete.
[$sel:version:DeleteCustomActionType'] :: DeleteCustomActionType -> Text

-- | Create a value of <a>DeleteCustomActionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:category:DeleteCustomActionType'</a>,
--   <a>deleteCustomActionType_category</a> - The category of the custom
--   action that you want to delete, such as source or deploy.
--   
--   <a>$sel:provider:DeleteCustomActionType'</a>,
--   <a>deleteCustomActionType_provider</a> - The provider of the service
--   used in the custom action, such as AWS CodeDeploy.
--   
--   <a>$sel:version:DeleteCustomActionType'</a>,
--   <a>deleteCustomActionType_version</a> - The version of the custom
--   action to delete.
newDeleteCustomActionType :: ActionCategory -> Text -> Text -> DeleteCustomActionType

-- | The category of the custom action that you want to delete, such as
--   source or deploy.
deleteCustomActionType_category :: Lens' DeleteCustomActionType ActionCategory

-- | The provider of the service used in the custom action, such as AWS
--   CodeDeploy.
deleteCustomActionType_provider :: Lens' DeleteCustomActionType Text

-- | The version of the custom action to delete.
deleteCustomActionType_version :: Lens' DeleteCustomActionType Text

-- | <i>See:</i> <a>newDeleteCustomActionTypeResponse</a> smart
--   constructor.
data DeleteCustomActionTypeResponse
DeleteCustomActionTypeResponse' :: DeleteCustomActionTypeResponse

-- | Create a value of <a>DeleteCustomActionTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCustomActionTypeResponse :: DeleteCustomActionTypeResponse
instance GHC.Generics.Generic Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionType
instance GHC.Show.Show Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionType
instance GHC.Read.Read Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionType
instance GHC.Classes.Eq Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionType
instance GHC.Generics.Generic Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionTypeResponse
instance GHC.Show.Show Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionTypeResponse
instance GHC.Read.Read Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionTypeResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionType
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.DeleteCustomActionType.DeleteCustomActionType


-- | Creates a pipeline.
--   
--   In the pipeline structure, you must include either
--   <tt>artifactStore</tt> or <tt>artifactStores</tt> in your pipeline,
--   but you cannot use both. If you create a cross-region action in your
--   pipeline, you must use <tt>artifactStores</tt>.
module Network.AWS.CodePipeline.CreatePipeline

-- | Represents the input of a <tt>CreatePipeline</tt> action.
--   
--   <i>See:</i> <a>newCreatePipeline</a> smart constructor.
data CreatePipeline
CreatePipeline' :: Maybe [Tag] -> PipelineDeclaration -> CreatePipeline

-- | The tags for the pipeline.
[$sel:tags:CreatePipeline'] :: CreatePipeline -> Maybe [Tag]

-- | Represents the structure of actions and stages to be performed in the
--   pipeline.
[$sel:pipeline:CreatePipeline'] :: CreatePipeline -> PipelineDeclaration

-- | Create a value of <a>CreatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreatePipeline'</a>, <a>createPipeline_tags</a> - The
--   tags for the pipeline.
--   
--   <a>$sel:pipeline:CreatePipeline'</a>, <a>createPipeline_pipeline</a> -
--   Represents the structure of actions and stages to be performed in the
--   pipeline.
newCreatePipeline :: PipelineDeclaration -> CreatePipeline

-- | The tags for the pipeline.
createPipeline_tags :: Lens' CreatePipeline (Maybe [Tag])

-- | Represents the structure of actions and stages to be performed in the
--   pipeline.
createPipeline_pipeline :: Lens' CreatePipeline PipelineDeclaration

-- | Represents the output of a <tt>CreatePipeline</tt> action.
--   
--   <i>See:</i> <a>newCreatePipelineResponse</a> smart constructor.
data CreatePipelineResponse
CreatePipelineResponse' :: Maybe PipelineDeclaration -> Maybe [Tag] -> Int -> CreatePipelineResponse

-- | Represents the structure of actions and stages to be performed in the
--   pipeline.
[$sel:pipeline:CreatePipelineResponse'] :: CreatePipelineResponse -> Maybe PipelineDeclaration

-- | Specifies the tags applied to the pipeline.
[$sel:tags:CreatePipelineResponse'] :: CreatePipelineResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:CreatePipelineResponse'] :: CreatePipelineResponse -> Int

-- | Create a value of <a>CreatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipeline:CreatePipeline'</a>,
--   <a>createPipelineResponse_pipeline</a> - Represents the structure of
--   actions and stages to be performed in the pipeline.
--   
--   <a>$sel:tags:CreatePipeline'</a>, <a>createPipelineResponse_tags</a> -
--   Specifies the tags applied to the pipeline.
--   
--   <a>$sel:httpStatus:CreatePipelineResponse'</a>,
--   <a>createPipelineResponse_httpStatus</a> - The response's http status
--   code.
newCreatePipelineResponse :: Int -> CreatePipelineResponse

-- | Represents the structure of actions and stages to be performed in the
--   pipeline.
createPipelineResponse_pipeline :: Lens' CreatePipelineResponse (Maybe PipelineDeclaration)

-- | Specifies the tags applied to the pipeline.
createPipelineResponse_tags :: Lens' CreatePipelineResponse (Maybe [Tag])

-- | The response's http status code.
createPipelineResponse_httpStatus :: Lens' CreatePipelineResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.CreatePipeline.CreatePipeline
instance GHC.Show.Show Network.AWS.CodePipeline.CreatePipeline.CreatePipeline
instance GHC.Read.Read Network.AWS.CodePipeline.CreatePipeline.CreatePipeline
instance GHC.Classes.Eq Network.AWS.CodePipeline.CreatePipeline.CreatePipeline
instance GHC.Generics.Generic Network.AWS.CodePipeline.CreatePipeline.CreatePipelineResponse
instance GHC.Show.Show Network.AWS.CodePipeline.CreatePipeline.CreatePipelineResponse
instance GHC.Read.Read Network.AWS.CodePipeline.CreatePipeline.CreatePipelineResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.CreatePipeline.CreatePipelineResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.CreatePipeline.CreatePipeline
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.CreatePipeline.CreatePipelineResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.CreatePipeline.CreatePipeline
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.CreatePipeline.CreatePipeline
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.CreatePipeline.CreatePipeline
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.CreatePipeline.CreatePipeline
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.CreatePipeline.CreatePipeline
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.CreatePipeline.CreatePipeline


-- | Creates a new custom action that can be used in all pipelines
--   associated with the AWS account. Only used for custom actions.
module Network.AWS.CodePipeline.CreateCustomActionType

-- | Represents the input of a CreateCustomActionType operation.
--   
--   <i>See:</i> <a>newCreateCustomActionType</a> smart constructor.
data CreateCustomActionType
CreateCustomActionType' :: Maybe ActionTypeSettings -> Maybe [ActionConfigurationProperty] -> Maybe [Tag] -> ActionCategory -> Text -> Text -> ArtifactDetails -> ArtifactDetails -> CreateCustomActionType

-- | URLs that provide users information about this custom action.
[$sel:settings:CreateCustomActionType'] :: CreateCustomActionType -> Maybe ActionTypeSettings

-- | The configuration properties for the custom action.
--   
--   You can refer to a name in the configuration properties of the custom
--   action within the URL templates by following the format of
--   {Config:name}, as long as the configuration property is both required
--   and not secret. For more information, see <a>Create a Custom Action
--   for a Pipeline</a>.
[$sel:configurationProperties:CreateCustomActionType'] :: CreateCustomActionType -> Maybe [ActionConfigurationProperty]

-- | The tags for the custom action.
[$sel:tags:CreateCustomActionType'] :: CreateCustomActionType -> Maybe [Tag]

-- | The category of the custom action, such as a build action or a test
--   action.
[$sel:category:CreateCustomActionType'] :: CreateCustomActionType -> ActionCategory

-- | The provider of the service used in the custom action, such as AWS
--   CodeDeploy.
[$sel:provider:CreateCustomActionType'] :: CreateCustomActionType -> Text

-- | The version identifier of the custom action.
[$sel:version:CreateCustomActionType'] :: CreateCustomActionType -> Text

-- | The details of the input artifact for the action, such as its commit
--   ID.
[$sel:inputArtifactDetails:CreateCustomActionType'] :: CreateCustomActionType -> ArtifactDetails

-- | The details of the output artifact of the action, such as its commit
--   ID.
[$sel:outputArtifactDetails:CreateCustomActionType'] :: CreateCustomActionType -> ArtifactDetails

-- | Create a value of <a>CreateCustomActionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:settings:CreateCustomActionType'</a>,
--   <a>createCustomActionType_settings</a> - URLs that provide users
--   information about this custom action.
--   
--   <a>$sel:configurationProperties:CreateCustomActionType'</a>,
--   <a>createCustomActionType_configurationProperties</a> - The
--   configuration properties for the custom action.
--   
--   You can refer to a name in the configuration properties of the custom
--   action within the URL templates by following the format of
--   {Config:name}, as long as the configuration property is both required
--   and not secret. For more information, see <a>Create a Custom Action
--   for a Pipeline</a>.
--   
--   <a>$sel:tags:CreateCustomActionType'</a>,
--   <a>createCustomActionType_tags</a> - The tags for the custom action.
--   
--   <a>$sel:category:CreateCustomActionType'</a>,
--   <a>createCustomActionType_category</a> - The category of the custom
--   action, such as a build action or a test action.
--   
--   <a>$sel:provider:CreateCustomActionType'</a>,
--   <a>createCustomActionType_provider</a> - The provider of the service
--   used in the custom action, such as AWS CodeDeploy.
--   
--   <a>$sel:version:CreateCustomActionType'</a>,
--   <a>createCustomActionType_version</a> - The version identifier of the
--   custom action.
--   
--   <a>$sel:inputArtifactDetails:CreateCustomActionType'</a>,
--   <a>createCustomActionType_inputArtifactDetails</a> - The details of
--   the input artifact for the action, such as its commit ID.
--   
--   <a>$sel:outputArtifactDetails:CreateCustomActionType'</a>,
--   <a>createCustomActionType_outputArtifactDetails</a> - The details of
--   the output artifact of the action, such as its commit ID.
newCreateCustomActionType :: ActionCategory -> Text -> Text -> ArtifactDetails -> ArtifactDetails -> CreateCustomActionType

-- | URLs that provide users information about this custom action.
createCustomActionType_settings :: Lens' CreateCustomActionType (Maybe ActionTypeSettings)

-- | The configuration properties for the custom action.
--   
--   You can refer to a name in the configuration properties of the custom
--   action within the URL templates by following the format of
--   {Config:name}, as long as the configuration property is both required
--   and not secret. For more information, see <a>Create a Custom Action
--   for a Pipeline</a>.
createCustomActionType_configurationProperties :: Lens' CreateCustomActionType (Maybe [ActionConfigurationProperty])

-- | The tags for the custom action.
createCustomActionType_tags :: Lens' CreateCustomActionType (Maybe [Tag])

-- | The category of the custom action, such as a build action or a test
--   action.
createCustomActionType_category :: Lens' CreateCustomActionType ActionCategory

-- | The provider of the service used in the custom action, such as AWS
--   CodeDeploy.
createCustomActionType_provider :: Lens' CreateCustomActionType Text

-- | The version identifier of the custom action.
createCustomActionType_version :: Lens' CreateCustomActionType Text

-- | The details of the input artifact for the action, such as its commit
--   ID.
createCustomActionType_inputArtifactDetails :: Lens' CreateCustomActionType ArtifactDetails

-- | The details of the output artifact of the action, such as its commit
--   ID.
createCustomActionType_outputArtifactDetails :: Lens' CreateCustomActionType ArtifactDetails

-- | Represents the output of a <tt>CreateCustomActionType</tt> operation.
--   
--   <i>See:</i> <a>newCreateCustomActionTypeResponse</a> smart
--   constructor.
data CreateCustomActionTypeResponse
CreateCustomActionTypeResponse' :: Maybe [Tag] -> Int -> ActionType -> CreateCustomActionTypeResponse

-- | Specifies the tags applied to the custom action.
[$sel:tags:CreateCustomActionTypeResponse'] :: CreateCustomActionTypeResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:CreateCustomActionTypeResponse'] :: CreateCustomActionTypeResponse -> Int

-- | Returns information about the details of an action type.
[$sel:actionType:CreateCustomActionTypeResponse'] :: CreateCustomActionTypeResponse -> ActionType

-- | Create a value of <a>CreateCustomActionTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateCustomActionType'</a>,
--   <a>createCustomActionTypeResponse_tags</a> - Specifies the tags
--   applied to the custom action.
--   
--   <a>$sel:httpStatus:CreateCustomActionTypeResponse'</a>,
--   <a>createCustomActionTypeResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:actionType:CreateCustomActionTypeResponse'</a>,
--   <a>createCustomActionTypeResponse_actionType</a> - Returns information
--   about the details of an action type.
newCreateCustomActionTypeResponse :: Int -> ActionType -> CreateCustomActionTypeResponse

-- | Specifies the tags applied to the custom action.
createCustomActionTypeResponse_tags :: Lens' CreateCustomActionTypeResponse (Maybe [Tag])

-- | The response's http status code.
createCustomActionTypeResponse_httpStatus :: Lens' CreateCustomActionTypeResponse Int

-- | Returns information about the details of an action type.
createCustomActionTypeResponse_actionType :: Lens' CreateCustomActionTypeResponse ActionType
instance GHC.Generics.Generic Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionType
instance GHC.Show.Show Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionType
instance GHC.Read.Read Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionType
instance GHC.Classes.Eq Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionType
instance GHC.Generics.Generic Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionTypeResponse
instance GHC.Show.Show Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionTypeResponse
instance GHC.Read.Read Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionTypeResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionType
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.CreateCustomActionType.CreateCustomActionType


-- | Confirms a job worker has received the specified job. Used for partner
--   actions only.
module Network.AWS.CodePipeline.AcknowledgeThirdPartyJob

-- | Represents the input of an AcknowledgeThirdPartyJob action.
--   
--   <i>See:</i> <a>newAcknowledgeThirdPartyJob</a> smart constructor.
data AcknowledgeThirdPartyJob
AcknowledgeThirdPartyJob' :: Text -> Text -> Text -> AcknowledgeThirdPartyJob

-- | The unique system-generated ID of the job.
[$sel:jobId:AcknowledgeThirdPartyJob'] :: AcknowledgeThirdPartyJob -> Text

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Get this
--   number from the response to a GetThirdPartyJobDetails request.
[$sel:nonce:AcknowledgeThirdPartyJob'] :: AcknowledgeThirdPartyJob -> Text

-- | The clientToken portion of the clientId and clientToken pair used to
--   verify that the calling entity is allowed access to the job and its
--   details.
[$sel:clientToken:AcknowledgeThirdPartyJob'] :: AcknowledgeThirdPartyJob -> Text

-- | Create a value of <a>AcknowledgeThirdPartyJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:AcknowledgeThirdPartyJob'</a>,
--   <a>acknowledgeThirdPartyJob_jobId</a> - The unique system-generated ID
--   of the job.
--   
--   <a>$sel:nonce:AcknowledgeThirdPartyJob'</a>,
--   <a>acknowledgeThirdPartyJob_nonce</a> - A system-generated random
--   number that AWS CodePipeline uses to ensure that the job is being
--   worked on by only one job worker. Get this number from the response to
--   a GetThirdPartyJobDetails request.
--   
--   <a>$sel:clientToken:AcknowledgeThirdPartyJob'</a>,
--   <a>acknowledgeThirdPartyJob_clientToken</a> - The clientToken portion
--   of the clientId and clientToken pair used to verify that the calling
--   entity is allowed access to the job and its details.
newAcknowledgeThirdPartyJob :: Text -> Text -> Text -> AcknowledgeThirdPartyJob

-- | The unique system-generated ID of the job.
acknowledgeThirdPartyJob_jobId :: Lens' AcknowledgeThirdPartyJob Text

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Get this
--   number from the response to a GetThirdPartyJobDetails request.
acknowledgeThirdPartyJob_nonce :: Lens' AcknowledgeThirdPartyJob Text

-- | The clientToken portion of the clientId and clientToken pair used to
--   verify that the calling entity is allowed access to the job and its
--   details.
acknowledgeThirdPartyJob_clientToken :: Lens' AcknowledgeThirdPartyJob Text

-- | Represents the output of an AcknowledgeThirdPartyJob action.
--   
--   <i>See:</i> <a>newAcknowledgeThirdPartyJobResponse</a> smart
--   constructor.
data AcknowledgeThirdPartyJobResponse
AcknowledgeThirdPartyJobResponse' :: Maybe JobStatus -> Int -> AcknowledgeThirdPartyJobResponse

-- | The status information for the third party job, if any.
[$sel:status:AcknowledgeThirdPartyJobResponse'] :: AcknowledgeThirdPartyJobResponse -> Maybe JobStatus

-- | The response's http status code.
[$sel:httpStatus:AcknowledgeThirdPartyJobResponse'] :: AcknowledgeThirdPartyJobResponse -> Int

-- | Create a value of <a>AcknowledgeThirdPartyJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AcknowledgeThirdPartyJobResponse'</a>,
--   <a>acknowledgeThirdPartyJobResponse_status</a> - The status
--   information for the third party job, if any.
--   
--   <a>$sel:httpStatus:AcknowledgeThirdPartyJobResponse'</a>,
--   <a>acknowledgeThirdPartyJobResponse_httpStatus</a> - The response's
--   http status code.
newAcknowledgeThirdPartyJobResponse :: Int -> AcknowledgeThirdPartyJobResponse

-- | The status information for the third party job, if any.
acknowledgeThirdPartyJobResponse_status :: Lens' AcknowledgeThirdPartyJobResponse (Maybe JobStatus)

-- | The response's http status code.
acknowledgeThirdPartyJobResponse_httpStatus :: Lens' AcknowledgeThirdPartyJobResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJob
instance GHC.Show.Show Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJob
instance GHC.Read.Read Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJob
instance GHC.Classes.Eq Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJob
instance GHC.Generics.Generic Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJobResponse
instance GHC.Show.Show Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJobResponse
instance GHC.Read.Read Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJobResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJob
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJob
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJob
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.AcknowledgeThirdPartyJob.AcknowledgeThirdPartyJob


-- | Returns information about a specified job and whether that job has
--   been received by the job worker. Used for custom actions only.
module Network.AWS.CodePipeline.AcknowledgeJob

-- | Represents the input of an AcknowledgeJob action.
--   
--   <i>See:</i> <a>newAcknowledgeJob</a> smart constructor.
data AcknowledgeJob
AcknowledgeJob' :: Text -> Text -> AcknowledgeJob

-- | The unique system-generated ID of the job for which you want to
--   confirm receipt.
[$sel:jobId:AcknowledgeJob'] :: AcknowledgeJob -> Text

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Get this
--   number from the response of the PollForJobs request that returned this
--   job.
[$sel:nonce:AcknowledgeJob'] :: AcknowledgeJob -> Text

-- | Create a value of <a>AcknowledgeJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:AcknowledgeJob'</a>, <a>acknowledgeJob_jobId</a> - The
--   unique system-generated ID of the job for which you want to confirm
--   receipt.
--   
--   <a>$sel:nonce:AcknowledgeJob'</a>, <a>acknowledgeJob_nonce</a> - A
--   system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Get this
--   number from the response of the PollForJobs request that returned this
--   job.
newAcknowledgeJob :: Text -> Text -> AcknowledgeJob

-- | The unique system-generated ID of the job for which you want to
--   confirm receipt.
acknowledgeJob_jobId :: Lens' AcknowledgeJob Text

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Get this
--   number from the response of the PollForJobs request that returned this
--   job.
acknowledgeJob_nonce :: Lens' AcknowledgeJob Text

-- | Represents the output of an AcknowledgeJob action.
--   
--   <i>See:</i> <a>newAcknowledgeJobResponse</a> smart constructor.
data AcknowledgeJobResponse
AcknowledgeJobResponse' :: Maybe JobStatus -> Int -> AcknowledgeJobResponse

-- | Whether the job worker has received the specified job.
[$sel:status:AcknowledgeJobResponse'] :: AcknowledgeJobResponse -> Maybe JobStatus

-- | The response's http status code.
[$sel:httpStatus:AcknowledgeJobResponse'] :: AcknowledgeJobResponse -> Int

-- | Create a value of <a>AcknowledgeJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AcknowledgeJobResponse'</a>,
--   <a>acknowledgeJobResponse_status</a> - Whether the job worker has
--   received the specified job.
--   
--   <a>$sel:httpStatus:AcknowledgeJobResponse'</a>,
--   <a>acknowledgeJobResponse_httpStatus</a> - The response's http status
--   code.
newAcknowledgeJobResponse :: Int -> AcknowledgeJobResponse

-- | Whether the job worker has received the specified job.
acknowledgeJobResponse_status :: Lens' AcknowledgeJobResponse (Maybe JobStatus)

-- | The response's http status code.
acknowledgeJobResponse_httpStatus :: Lens' AcknowledgeJobResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJob
instance GHC.Show.Show Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJob
instance GHC.Read.Read Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJob
instance GHC.Classes.Eq Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJob
instance GHC.Generics.Generic Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJobResponse
instance GHC.Show.Show Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJobResponse
instance GHC.Read.Read Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJobResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJob
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJob
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJob
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.AcknowledgeJob.AcknowledgeJob


-- | Removes tags from an AWS resource.
module Network.AWS.CodePipeline.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to remove tags from.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The list of keys for the tags to be removed from the resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to remove tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of keys for the tags to be removed from the resource.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to remove tags from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of keys for the tags to be removed from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.CodePipeline.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.CodePipeline.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.CodePipeline.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.CodePipeline.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.CodePipeline.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.CodePipeline.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.UntagResource.UntagResource


-- | Updates an action type that was created with any supported integration
--   model, where the action type is to be used by customers of the action
--   type provider. Use a JSON file with the action definition and
--   <tt>UpdateActionType</tt> to provide the full structure.
module Network.AWS.CodePipeline.UpdateActionType

-- | <i>See:</i> <a>newUpdateActionType</a> smart constructor.
data UpdateActionType
UpdateActionType' :: ActionTypeDeclaration -> UpdateActionType

-- | The action type definition for the action type to be updated.
[$sel:actionType:UpdateActionType'] :: UpdateActionType -> ActionTypeDeclaration

-- | Create a value of <a>UpdateActionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionType:UpdateActionType'</a>,
--   <a>updateActionType_actionType</a> - The action type definition for
--   the action type to be updated.
newUpdateActionType :: ActionTypeDeclaration -> UpdateActionType

-- | The action type definition for the action type to be updated.
updateActionType_actionType :: Lens' UpdateActionType ActionTypeDeclaration

-- | <i>See:</i> <a>newUpdateActionTypeResponse</a> smart constructor.
data UpdateActionTypeResponse
UpdateActionTypeResponse' :: UpdateActionTypeResponse

-- | Create a value of <a>UpdateActionTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateActionTypeResponse :: UpdateActionTypeResponse
instance GHC.Generics.Generic Network.AWS.CodePipeline.UpdateActionType.UpdateActionType
instance GHC.Show.Show Network.AWS.CodePipeline.UpdateActionType.UpdateActionType
instance GHC.Read.Read Network.AWS.CodePipeline.UpdateActionType.UpdateActionType
instance GHC.Classes.Eq Network.AWS.CodePipeline.UpdateActionType.UpdateActionType
instance GHC.Generics.Generic Network.AWS.CodePipeline.UpdateActionType.UpdateActionTypeResponse
instance GHC.Show.Show Network.AWS.CodePipeline.UpdateActionType.UpdateActionTypeResponse
instance GHC.Read.Read Network.AWS.CodePipeline.UpdateActionType.UpdateActionTypeResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.UpdateActionType.UpdateActionTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.UpdateActionType.UpdateActionType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.UpdateActionType.UpdateActionTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.UpdateActionType.UpdateActionType
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.UpdateActionType.UpdateActionType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.UpdateActionType.UpdateActionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.UpdateActionType.UpdateActionType
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.UpdateActionType.UpdateActionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.UpdateActionType.UpdateActionType


-- | Updates a specified pipeline with edits or changes to its structure.
--   Use a JSON file with the pipeline structure and
--   <tt>UpdatePipeline</tt> to provide the full structure of the pipeline.
--   Updating the pipeline increases the version number of the pipeline by
--   1.
module Network.AWS.CodePipeline.UpdatePipeline

-- | Represents the input of an <tt>UpdatePipeline</tt> action.
--   
--   <i>See:</i> <a>newUpdatePipeline</a> smart constructor.
data UpdatePipeline
UpdatePipeline' :: PipelineDeclaration -> UpdatePipeline

-- | The name of the pipeline to be updated.
[$sel:pipeline:UpdatePipeline'] :: UpdatePipeline -> PipelineDeclaration

-- | Create a value of <a>UpdatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipeline:UpdatePipeline'</a>, <a>updatePipeline_pipeline</a> -
--   The name of the pipeline to be updated.
newUpdatePipeline :: PipelineDeclaration -> UpdatePipeline

-- | The name of the pipeline to be updated.
updatePipeline_pipeline :: Lens' UpdatePipeline PipelineDeclaration

-- | Represents the output of an <tt>UpdatePipeline</tt> action.
--   
--   <i>See:</i> <a>newUpdatePipelineResponse</a> smart constructor.
data UpdatePipelineResponse
UpdatePipelineResponse' :: Maybe PipelineDeclaration -> Int -> UpdatePipelineResponse

-- | The structure of the updated pipeline.
[$sel:pipeline:UpdatePipelineResponse'] :: UpdatePipelineResponse -> Maybe PipelineDeclaration

-- | The response's http status code.
[$sel:httpStatus:UpdatePipelineResponse'] :: UpdatePipelineResponse -> Int

-- | Create a value of <a>UpdatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipeline:UpdatePipeline'</a>,
--   <a>updatePipelineResponse_pipeline</a> - The structure of the updated
--   pipeline.
--   
--   <a>$sel:httpStatus:UpdatePipelineResponse'</a>,
--   <a>updatePipelineResponse_httpStatus</a> - The response's http status
--   code.
newUpdatePipelineResponse :: Int -> UpdatePipelineResponse

-- | The structure of the updated pipeline.
updatePipelineResponse_pipeline :: Lens' UpdatePipelineResponse (Maybe PipelineDeclaration)

-- | The response's http status code.
updatePipelineResponse_httpStatus :: Lens' UpdatePipelineResponse Int
instance GHC.Generics.Generic Network.AWS.CodePipeline.UpdatePipeline.UpdatePipeline
instance GHC.Show.Show Network.AWS.CodePipeline.UpdatePipeline.UpdatePipeline
instance GHC.Read.Read Network.AWS.CodePipeline.UpdatePipeline.UpdatePipeline
instance GHC.Classes.Eq Network.AWS.CodePipeline.UpdatePipeline.UpdatePipeline
instance GHC.Generics.Generic Network.AWS.CodePipeline.UpdatePipeline.UpdatePipelineResponse
instance GHC.Show.Show Network.AWS.CodePipeline.UpdatePipeline.UpdatePipelineResponse
instance GHC.Read.Read Network.AWS.CodePipeline.UpdatePipeline.UpdatePipelineResponse
instance GHC.Classes.Eq Network.AWS.CodePipeline.UpdatePipeline.UpdatePipelineResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodePipeline.UpdatePipeline.UpdatePipeline
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.UpdatePipeline.UpdatePipelineResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodePipeline.UpdatePipeline.UpdatePipeline
instance Control.DeepSeq.NFData Network.AWS.CodePipeline.UpdatePipeline.UpdatePipeline
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodePipeline.UpdatePipeline.UpdatePipeline
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodePipeline.UpdatePipeline.UpdatePipeline
instance Network.AWS.Data.Path.ToPath Network.AWS.CodePipeline.UpdatePipeline.UpdatePipeline
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodePipeline.UpdatePipeline.UpdatePipeline


module Network.AWS.CodePipeline.Lens

-- | The version number of the pipeline. If you do not specify a version,
--   defaults to the current version.
getPipeline_version :: Lens' GetPipeline (Maybe Natural)

-- | The name of the pipeline for which you want to get information.
--   Pipeline names must be unique under an AWS user account.
getPipeline_name :: Lens' GetPipeline Text

-- | Represents the structure of actions and stages to be performed in the
--   pipeline.
getPipelineResponse_pipeline :: Lens' GetPipelineResponse (Maybe PipelineDeclaration)

-- | Represents the pipeline metadata information returned as part of the
--   output of a <tt>GetPipeline</tt> action.
getPipelineResponse_metadata :: Lens' GetPipelineResponse (Maybe PipelineMetadata)

-- | The response's http status code.
getPipelineResponse_httpStatus :: Lens' GetPipelineResponse Int

-- | The unique system-generated ID of the job that failed. This is the
--   same ID returned from <tt>PollForJobs</tt>.
putJobFailureResult_jobId :: Lens' PutJobFailureResult Text

-- | The details about the failure of a job.
putJobFailureResult_failureDetails :: Lens' PutJobFailureResult FailureDetails

-- | The name of the pipeline that contains the action.
putApprovalResult_pipelineName :: Lens' PutApprovalResult Text

-- | The name of the stage that contains the action.
putApprovalResult_stageName :: Lens' PutApprovalResult Text

-- | The name of the action for which approval is requested.
putApprovalResult_actionName :: Lens' PutApprovalResult Text

-- | Represents information about the result of the approval request.
putApprovalResult_result :: Lens' PutApprovalResult ApprovalResult

-- | The system-generated token used to identify a unique approval request.
--   The token for each open approval request can be obtained using the
--   GetPipelineState action. It is used to validate that the approval
--   request corresponding to this token is still valid.
putApprovalResult_token :: Lens' PutApprovalResult Text

-- | The timestamp showing when the approval or rejection was submitted.
putApprovalResultResponse_approvedAt :: Lens' PutApprovalResultResponse (Maybe UTCTime)

-- | The response's http status code.
putApprovalResultResponse_httpStatus :: Lens' PutApprovalResultResponse Int

-- | The unique system-generated ID of the job.
acknowledgeThirdPartyJob_jobId :: Lens' AcknowledgeThirdPartyJob Text

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Get this
--   number from the response to a GetThirdPartyJobDetails request.
acknowledgeThirdPartyJob_nonce :: Lens' AcknowledgeThirdPartyJob Text

-- | The clientToken portion of the clientId and clientToken pair used to
--   verify that the calling entity is allowed access to the job and its
--   details.
acknowledgeThirdPartyJob_clientToken :: Lens' AcknowledgeThirdPartyJob Text

-- | The status information for the third party job, if any.
acknowledgeThirdPartyJobResponse_status :: Lens' AcknowledgeThirdPartyJobResponse (Maybe JobStatus)

-- | The response's http status code.
acknowledgeThirdPartyJobResponse_httpStatus :: Lens' AcknowledgeThirdPartyJobResponse Int

-- | The ID of the job that failed. This is the same ID returned from
--   <tt>PollForThirdPartyJobs</tt>.
putThirdPartyJobFailureResult_jobId :: Lens' PutThirdPartyJobFailureResult Text

-- | The clientToken portion of the clientId and clientToken pair used to
--   verify that the calling entity is allowed access to the job and its
--   details.
putThirdPartyJobFailureResult_clientToken :: Lens' PutThirdPartyJobFailureResult Text

-- | Represents information about failure details.
putThirdPartyJobFailureResult_failureDetails :: Lens' PutThirdPartyJobFailureResult FailureDetails

-- | The token that was returned from the previous API call, which would be
--   used to return the next page of the list. The ListTagsforResource call
--   lists all available tags in one call and does not use pagination.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The maximum number of results to return in a single call.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the resource to get tags for.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | If the amount of returned information is significantly large, an
--   identifier is also returned and can be used in a subsequent API call
--   to return the next page of the list. The ListTagsforResource call
--   lists all available tags in one call and does not use pagination.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | The tags for the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The name of an existing webhook created with PutWebhook to register
--   with a supported third party.
registerWebhookWithThirdParty_webhookName :: Lens' RegisterWebhookWithThirdParty (Maybe Text)

-- | The response's http status code.
registerWebhookWithThirdPartyResponse_httpStatus :: Lens' RegisterWebhookWithThirdPartyResponse Int

-- | The maximum number of jobs to return in a poll for jobs call.
pollForThirdPartyJobs_maxBatchSize :: Lens' PollForThirdPartyJobs (Maybe Natural)

-- | Represents information about an action type.
pollForThirdPartyJobs_actionTypeId :: Lens' PollForThirdPartyJobs ActionTypeId

-- | Information about the jobs to take action on.
pollForThirdPartyJobsResponse_jobs :: Lens' PollForThirdPartyJobsResponse (Maybe [ThirdPartyJob])

-- | The response's http status code.
pollForThirdPartyJobsResponse_httpStatus :: Lens' PollForThirdPartyJobsResponse Int

-- | The maximum number of jobs to return in a poll for jobs call.
pollForJobs_maxBatchSize :: Lens' PollForJobs (Maybe Natural)

-- | A map of property names and values. For an action type with no
--   queryable properties, this value must be null or an empty map. For an
--   action type with a queryable property, you must supply that property
--   as a key in the map. Only jobs whose action configuration matches the
--   mapped value are returned.
pollForJobs_queryParam :: Lens' PollForJobs (Maybe (HashMap Text Text))

-- | Represents information about an action type.
pollForJobs_actionTypeId :: Lens' PollForJobs ActionTypeId

-- | Information about the jobs to take action on.
pollForJobsResponse_jobs :: Lens' PollForJobsResponse (Maybe [Job])

-- | The response's http status code.
pollForJobsResponse_httpStatus :: Lens' PollForJobsResponse Int

-- | The system-generated unique ID used to identify a unique execution
--   request.
startPipelineExecution_clientRequestToken :: Lens' StartPipelineExecution (Maybe Text)

-- | The name of the pipeline to start.
startPipelineExecution_name :: Lens' StartPipelineExecution Text

-- | The unique system-generated ID of the pipeline execution that was
--   started.
startPipelineExecutionResponse_pipelineExecutionId :: Lens' StartPipelineExecutionResponse (Maybe Text)

-- | The response's http status code.
startPipelineExecutionResponse_httpStatus :: Lens' StartPipelineExecutionResponse Int

-- | The name of the pipeline to be updated.
updatePipeline_pipeline :: Lens' UpdatePipeline PipelineDeclaration

-- | The structure of the updated pipeline.
updatePipelineResponse_pipeline :: Lens' UpdatePipelineResponse (Maybe PipelineDeclaration)

-- | The response's http status code.
updatePipelineResponse_httpStatus :: Lens' UpdatePipelineResponse Int

-- | The name of the pipeline to be deleted.
deletePipeline_name :: Lens' DeletePipeline Text

-- | The name of the pipeline about which you want to get information.
getPipelineState_name :: Lens' GetPipelineState Text

-- | The name of the pipeline for which you want to get the state.
getPipelineStateResponse_pipelineName :: Lens' GetPipelineStateResponse (Maybe Text)

-- | The date and time the pipeline was created, in timestamp format.
getPipelineStateResponse_created :: Lens' GetPipelineStateResponse (Maybe UTCTime)

-- | A list of the pipeline stage output information, including stage name,
--   state, most recent run details, whether the stage is disabled, and
--   other data.
getPipelineStateResponse_stageStates :: Lens' GetPipelineStateResponse (Maybe [StageState])

-- | The version number of the pipeline.
--   
--   A newly created pipeline is always assigned a version number of
--   <tt>1</tt>.
getPipelineStateResponse_pipelineVersion :: Lens' GetPipelineStateResponse (Maybe Natural)

-- | The date and time the pipeline was last updated, in timestamp format.
getPipelineStateResponse_updated :: Lens' GetPipelineStateResponse (Maybe UTCTime)

-- | The response's http status code.
getPipelineStateResponse_httpStatus :: Lens' GetPipelineStateResponse Int

-- | The unique system-generated ID for the job.
getJobDetails_jobId :: Lens' GetJobDetails Text

-- | The details of the job.
--   
--   If AWSSessionCredentials is used, a long-running job can call
--   <tt>GetJobDetails</tt> again to obtain new credentials.
getJobDetailsResponse_jobDetails :: Lens' GetJobDetailsResponse (Maybe JobDetails)

-- | The response's http status code.
getJobDetailsResponse_httpStatus :: Lens' GetJobDetailsResponse Int

-- | An identifier that was returned from the previous list pipelines call.
--   It can be used to return the next set of pipelines in the list.
listPipelines_nextToken :: Lens' ListPipelines (Maybe Text)

-- | The maximum number of pipelines to return in a single call. To
--   retrieve the remaining pipelines, make another call with the returned
--   nextToken value. The minimum value you can specify is 1. The maximum
--   accepted value is 1000.
listPipelines_maxResults :: Lens' ListPipelines (Maybe Natural)

-- | The list of pipelines.
listPipelinesResponse_pipelines :: Lens' ListPipelinesResponse (Maybe [PipelineSummary])

-- | If the amount of returned information is significantly large, an
--   identifier is also returned. It can be used in a subsequent list
--   pipelines call to return the next set of pipelines in the list.
listPipelinesResponse_nextToken :: Lens' ListPipelinesResponse (Maybe Text)

-- | The response's http status code.
listPipelinesResponse_httpStatus :: Lens' ListPipelinesResponse Int

-- | The name of the pipeline that contains the failed stage.
retryStageExecution_pipelineName :: Lens' RetryStageExecution Text

-- | The name of the failed stage to be retried.
retryStageExecution_stageName :: Lens' RetryStageExecution Text

-- | The ID of the pipeline execution in the failed stage to be retried.
--   Use the GetPipelineState action to retrieve the current
--   pipelineExecutionId of the failed stage
retryStageExecution_pipelineExecutionId :: Lens' RetryStageExecution Text

-- | The scope of the retry attempt. Currently, the only supported value is
--   FAILED_ACTIONS.
retryStageExecution_retryMode :: Lens' RetryStageExecution StageRetryMode

-- | The ID of the current workflow execution in the failed stage.
retryStageExecutionResponse_pipelineExecutionId :: Lens' RetryStageExecutionResponse (Maybe Text)

-- | The response's http status code.
retryStageExecutionResponse_httpStatus :: Lens' RetryStageExecutionResponse Int

-- | The name of the pipeline about which you want to get execution
--   details.
getPipelineExecution_pipelineName :: Lens' GetPipelineExecution Text

-- | The ID of the pipeline execution about which you want to get execution
--   details.
getPipelineExecution_pipelineExecutionId :: Lens' GetPipelineExecution Text

-- | Represents information about the execution of a pipeline.
getPipelineExecutionResponse_pipelineExecution :: Lens' GetPipelineExecutionResponse (Maybe PipelineExecution)

-- | The response's http status code.
getPipelineExecutionResponse_httpStatus :: Lens' GetPipelineExecutionResponse Int

-- | Key-value pairs produced as output by a job worker that can be made
--   available to a downstream action configuration.
--   <tt>outputVariables</tt> can be included only when there is no
--   continuation token on the request.
putJobSuccessResult_outputVariables :: Lens' PutJobSuccessResult (Maybe (HashMap Text Text))

-- | A token generated by a job worker, such as an AWS CodeDeploy
--   deployment ID, that a successful job provides to identify a custom
--   action in progress. Future jobs use this token to identify the running
--   instance of the action. It can be reused to return more information
--   about the progress of the custom action. When the action is complete,
--   no continuation token should be supplied.
putJobSuccessResult_continuationToken :: Lens' PutJobSuccessResult (Maybe Text)

-- | The execution details of the successful job, such as the actions taken
--   by the job worker.
putJobSuccessResult_executionDetails :: Lens' PutJobSuccessResult (Maybe ExecutionDetails)

-- | The ID of the current revision of the artifact successfully worked on
--   by the job.
putJobSuccessResult_currentRevision :: Lens' PutJobSuccessResult (Maybe CurrentRevision)

-- | The unique system-generated ID of the job that succeeded. This is the
--   same ID returned from <tt>PollForJobs</tt>.
putJobSuccessResult_jobId :: Lens' PutJobSuccessResult Text

-- | The name of the webhook you want to deregister.
deregisterWebhookWithThirdParty_webhookName :: Lens' DeregisterWebhookWithThirdParty (Maybe Text)

-- | The response's http status code.
deregisterWebhookWithThirdPartyResponse_httpStatus :: Lens' DeregisterWebhookWithThirdPartyResponse Int

-- | The category of the custom action that you want to delete, such as
--   source or deploy.
deleteCustomActionType_category :: Lens' DeleteCustomActionType ActionCategory

-- | The provider of the service used in the custom action, such as AWS
--   CodeDeploy.
deleteCustomActionType_provider :: Lens' DeleteCustomActionType Text

-- | The version of the custom action to delete.
deleteCustomActionType_version :: Lens' DeleteCustomActionType Text

-- | The name of the pipeline that starts processing the revision to the
--   source.
putActionRevision_pipelineName :: Lens' PutActionRevision Text

-- | The name of the stage that contains the action that acts on the
--   revision.
putActionRevision_stageName :: Lens' PutActionRevision Text

-- | The name of the action that processes the revision.
putActionRevision_actionName :: Lens' PutActionRevision Text

-- | Represents information about the version (or revision) of an action.
putActionRevision_actionRevision :: Lens' PutActionRevision ActionRevision

-- | Indicates whether the artifact revision was previously used in an
--   execution of the specified pipeline.
putActionRevisionResponse_newRevision :: Lens' PutActionRevisionResponse (Maybe Bool)

-- | The ID of the current workflow state of the pipeline.
putActionRevisionResponse_pipelineExecutionId :: Lens' PutActionRevisionResponse (Maybe Text)

-- | The response's http status code.
putActionRevisionResponse_httpStatus :: Lens' PutActionRevisionResponse Int

-- | The name of the pipeline in which you want to disable the flow of
--   artifacts from one stage to another.
disableStageTransition_pipelineName :: Lens' DisableStageTransition Text

-- | The name of the stage where you want to disable the inbound or
--   outbound transition of artifacts.
disableStageTransition_stageName :: Lens' DisableStageTransition Text

-- | Specifies whether artifacts are prevented from transitioning into the
--   stage and being processed by the actions in that stage (inbound), or
--   prevented from transitioning from the stage after they have been
--   processed by the actions in that stage (outbound).
disableStageTransition_transitionType :: Lens' DisableStageTransition StageTransitionType

-- | The reason given to the user that a stage is disabled, such as waiting
--   for manual approval or manual tests. This message is displayed in the
--   pipeline console UI.
disableStageTransition_reason :: Lens' DisableStageTransition Text

-- | The action type definition for the action type to be updated.
updateActionType_actionType :: Lens' UpdateActionType ActionTypeDeclaration

-- | Filters the list of action types to those created by a specified
--   entity.
listActionTypes_actionOwnerFilter :: Lens' ListActionTypes (Maybe ActionOwner)

-- | The Region to filter on for the list of action types.
listActionTypes_regionFilter :: Lens' ListActionTypes (Maybe Text)

-- | An identifier that was returned from the previous list action types
--   call, which can be used to return the next set of action types in the
--   list.
listActionTypes_nextToken :: Lens' ListActionTypes (Maybe Text)

-- | If the amount of returned information is significantly large, an
--   identifier is also returned. It can be used in a subsequent list
--   action types call to return the next set of action types in the list.
listActionTypesResponse_nextToken :: Lens' ListActionTypesResponse (Maybe Text)

-- | The response's http status code.
listActionTypesResponse_httpStatus :: Lens' ListActionTypesResponse Int

-- | Provides details of the action types.
listActionTypesResponse_actionTypes :: Lens' ListActionTypesResponse [ActionType]

-- | The unique system-generated ID of the job for which you want to
--   confirm receipt.
acknowledgeJob_jobId :: Lens' AcknowledgeJob Text

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Get this
--   number from the response of the PollForJobs request that returned this
--   job.
acknowledgeJob_nonce :: Lens' AcknowledgeJob Text

-- | Whether the job worker has received the specified job.
acknowledgeJobResponse_status :: Lens' AcknowledgeJobResponse (Maybe JobStatus)

-- | The response's http status code.
acknowledgeJobResponse_httpStatus :: Lens' AcknowledgeJobResponse Int

-- | The name of the pipeline in which you want to enable the flow of
--   artifacts from one stage to another.
enableStageTransition_pipelineName :: Lens' EnableStageTransition Text

-- | The name of the stage where you want to enable the transition of
--   artifacts, either into the stage (inbound) or from that stage to the
--   next stage (outbound).
enableStageTransition_stageName :: Lens' EnableStageTransition Text

-- | Specifies whether artifacts are allowed to enter the stage and be
--   processed by the actions in that stage (inbound) or whether already
--   processed artifacts are allowed to transition to the next stage
--   (outbound).
enableStageTransition_transitionType :: Lens' EnableStageTransition StageTransitionType

-- | The name of the webhook you want to delete.
deleteWebhook_name :: Lens' DeleteWebhook Text

-- | The response's http status code.
deleteWebhookResponse_httpStatus :: Lens' DeleteWebhookResponse Int

-- | The tags for the webhook.
putWebhook_tags :: Lens' PutWebhook (Maybe [Tag])

-- | The detail provided in an input file to create the webhook, such as
--   the webhook name, the pipeline name, and the action name. Give the
--   webhook a unique name that helps you identify it. You might name the
--   webhook after the pipeline and action it targets so that you can
--   easily recognize what it's used for later.
putWebhook_webhook :: Lens' PutWebhook WebhookDefinition

-- | The detail returned from creating the webhook, such as the webhook
--   name, webhook URL, and webhook ARN.
putWebhookResponse_webhook :: Lens' PutWebhookResponse (Maybe ListWebhookItem)

-- | The response's http status code.
putWebhookResponse_httpStatus :: Lens' PutWebhookResponse Int

-- | The token that was returned from the previous ListWebhooks call, which
--   can be used to return the next set of webhooks in the list.
listWebhooks_nextToken :: Lens' ListWebhooks (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned nextToken
--   value.
listWebhooks_maxResults :: Lens' ListWebhooks (Maybe Natural)

-- | If the amount of returned information is significantly large, an
--   identifier is also returned and can be used in a subsequent
--   ListWebhooks call to return the next set of webhooks in the list.
listWebhooksResponse_nextToken :: Lens' ListWebhooksResponse (Maybe Text)

-- | The JSON detail returned for each webhook in the list output for the
--   ListWebhooks call.
listWebhooksResponse_webhooks :: Lens' ListWebhooksResponse (Maybe [ListWebhookItem])

-- | The response's http status code.
listWebhooksResponse_httpStatus :: Lens' ListWebhooksResponse Int

-- | The token that was returned from the previous
--   <tt>ListActionExecutions</tt> call, which can be used to return the
--   next set of action executions in the list.
listActionExecutions_nextToken :: Lens' ListActionExecutions (Maybe Text)

-- | Input information used to filter action execution history.
listActionExecutions_filter :: Lens' ListActionExecutions (Maybe ActionExecutionFilter)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned nextToken
--   value. Action execution history is retained for up to 12 months, based
--   on action execution start times. Default value is 100.
--   
--   Detailed execution history is available for executions run on or after
--   February 21, 2019.
listActionExecutions_maxResults :: Lens' ListActionExecutions (Maybe Natural)

-- | The name of the pipeline for which you want to list action execution
--   history.
listActionExecutions_pipelineName :: Lens' ListActionExecutions Text

-- | The details for a list of recent executions, such as action execution
--   ID.
listActionExecutionsResponse_actionExecutionDetails :: Lens' ListActionExecutionsResponse (Maybe [ActionExecutionDetail])

-- | If the amount of returned information is significantly large, an
--   identifier is also returned and can be used in a subsequent
--   <tt>ListActionExecutions</tt> call to return the next set of action
--   executions in the list.
listActionExecutionsResponse_nextToken :: Lens' ListActionExecutionsResponse (Maybe Text)

-- | The response's http status code.
listActionExecutionsResponse_httpStatus :: Lens' ListActionExecutionsResponse Int

-- | Defines what kind of action can be taken in the stage. The following
--   are the valid values:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
getActionType_category :: Lens' GetActionType ActionCategory

-- | The creator of an action type that was created with any supported
--   integration model. There are two valid values: <tt>AWS</tt> and
--   <tt>ThirdParty</tt>.
getActionType_owner :: Lens' GetActionType Text

-- | The provider of the action type being called. The provider name is
--   specified when the action type is created.
getActionType_provider :: Lens' GetActionType Text

-- | A string that describes the action type version.
getActionType_version :: Lens' GetActionType Text

-- | The action type information for the requested action type, such as the
--   action type ID.
getActionTypeResponse_actionType :: Lens' GetActionTypeResponse (Maybe ActionTypeDeclaration)

-- | The response's http status code.
getActionTypeResponse_httpStatus :: Lens' GetActionTypeResponse Int

-- | Use this option to stop the pipeline execution by abandoning, rather
--   than finishing, in-progress actions.
--   
--   This option can lead to failed or out-of-sequence tasks.
stopPipelineExecution_abandon :: Lens' StopPipelineExecution (Maybe Bool)

-- | Use this option to enter comments, such as the reason the pipeline was
--   stopped.
stopPipelineExecution_reason :: Lens' StopPipelineExecution (Maybe Text)

-- | The name of the pipeline to stop.
stopPipelineExecution_pipelineName :: Lens' StopPipelineExecution Text

-- | The ID of the pipeline execution to be stopped in the current stage.
--   Use the <tt>GetPipelineState</tt> action to retrieve the current
--   pipelineExecutionId.
stopPipelineExecution_pipelineExecutionId :: Lens' StopPipelineExecution Text

-- | The unique system-generated ID of the pipeline execution that was
--   stopped.
stopPipelineExecutionResponse_pipelineExecutionId :: Lens' StopPipelineExecutionResponse (Maybe Text)

-- | The response's http status code.
stopPipelineExecutionResponse_httpStatus :: Lens' StopPipelineExecutionResponse Int

-- | The Amazon Resource Name (ARN) of the resource you want to add tags
--   to.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags you want to modify or add to the resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The Amazon Resource Name (ARN) of the resource to remove tags from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of keys for the tags to be removed from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The tags for the pipeline.
createPipeline_tags :: Lens' CreatePipeline (Maybe [Tag])

-- | Represents the structure of actions and stages to be performed in the
--   pipeline.
createPipeline_pipeline :: Lens' CreatePipeline PipelineDeclaration

-- | Represents the structure of actions and stages to be performed in the
--   pipeline.
createPipelineResponse_pipeline :: Lens' CreatePipelineResponse (Maybe PipelineDeclaration)

-- | Specifies the tags applied to the pipeline.
createPipelineResponse_tags :: Lens' CreatePipelineResponse (Maybe [Tag])

-- | The response's http status code.
createPipelineResponse_httpStatus :: Lens' CreatePipelineResponse Int

-- | The unique system-generated ID used for identifying the job.
getThirdPartyJobDetails_jobId :: Lens' GetThirdPartyJobDetails Text

-- | The clientToken portion of the clientId and clientToken pair used to
--   verify that the calling entity is allowed access to the job and its
--   details.
getThirdPartyJobDetails_clientToken :: Lens' GetThirdPartyJobDetails Text

-- | The details of the job, including any protected values defined for the
--   job.
getThirdPartyJobDetailsResponse_jobDetails :: Lens' GetThirdPartyJobDetailsResponse (Maybe ThirdPartyJobDetails)

-- | The response's http status code.
getThirdPartyJobDetailsResponse_httpStatus :: Lens' GetThirdPartyJobDetailsResponse Int

-- | A token generated by a job worker, such as an AWS CodeDeploy
--   deployment ID, that a successful job provides to identify a partner
--   action in progress. Future jobs use this token to identify the running
--   instance of the action. It can be reused to return more information
--   about the progress of the partner action. When the action is complete,
--   no continuation token should be supplied.
putThirdPartyJobSuccessResult_continuationToken :: Lens' PutThirdPartyJobSuccessResult (Maybe Text)

-- | The details of the actions taken and results produced on an artifact
--   as it passes through stages in the pipeline.
putThirdPartyJobSuccessResult_executionDetails :: Lens' PutThirdPartyJobSuccessResult (Maybe ExecutionDetails)

-- | Represents information about a current revision.
putThirdPartyJobSuccessResult_currentRevision :: Lens' PutThirdPartyJobSuccessResult (Maybe CurrentRevision)

-- | The ID of the job that successfully completed. This is the same ID
--   returned from <tt>PollForThirdPartyJobs</tt>.
putThirdPartyJobSuccessResult_jobId :: Lens' PutThirdPartyJobSuccessResult Text

-- | The clientToken portion of the clientId and clientToken pair used to
--   verify that the calling entity is allowed access to the job and its
--   details.
putThirdPartyJobSuccessResult_clientToken :: Lens' PutThirdPartyJobSuccessResult Text

-- | URLs that provide users information about this custom action.
createCustomActionType_settings :: Lens' CreateCustomActionType (Maybe ActionTypeSettings)

-- | The configuration properties for the custom action.
--   
--   You can refer to a name in the configuration properties of the custom
--   action within the URL templates by following the format of
--   {Config:name}, as long as the configuration property is both required
--   and not secret. For more information, see <a>Create a Custom Action
--   for a Pipeline</a>.
createCustomActionType_configurationProperties :: Lens' CreateCustomActionType (Maybe [ActionConfigurationProperty])

-- | The tags for the custom action.
createCustomActionType_tags :: Lens' CreateCustomActionType (Maybe [Tag])

-- | The category of the custom action, such as a build action or a test
--   action.
createCustomActionType_category :: Lens' CreateCustomActionType ActionCategory

-- | The provider of the service used in the custom action, such as AWS
--   CodeDeploy.
createCustomActionType_provider :: Lens' CreateCustomActionType Text

-- | The version identifier of the custom action.
createCustomActionType_version :: Lens' CreateCustomActionType Text

-- | The details of the input artifact for the action, such as its commit
--   ID.
createCustomActionType_inputArtifactDetails :: Lens' CreateCustomActionType ArtifactDetails

-- | The details of the output artifact of the action, such as its commit
--   ID.
createCustomActionType_outputArtifactDetails :: Lens' CreateCustomActionType ArtifactDetails

-- | Specifies the tags applied to the custom action.
createCustomActionTypeResponse_tags :: Lens' CreateCustomActionTypeResponse (Maybe [Tag])

-- | The response's http status code.
createCustomActionTypeResponse_httpStatus :: Lens' CreateCustomActionTypeResponse Int

-- | Returns information about the details of an action type.
createCustomActionTypeResponse_actionType :: Lens' CreateCustomActionTypeResponse ActionType

-- | The token that was returned from the previous
--   <tt>ListPipelineExecutions</tt> call, which can be used to return the
--   next set of pipeline executions in the list.
listPipelineExecutions_nextToken :: Lens' ListPipelineExecutions (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned nextToken
--   value. Pipeline history is limited to the most recent 12 months, based
--   on pipeline execution start times. Default value is 100.
listPipelineExecutions_maxResults :: Lens' ListPipelineExecutions (Maybe Natural)

-- | The name of the pipeline for which you want to get execution summary
--   information.
listPipelineExecutions_pipelineName :: Lens' ListPipelineExecutions Text

-- | A token that can be used in the next <tt>ListPipelineExecutions</tt>
--   call. To view all items in the list, continue to call this operation
--   with each subsequent token until no more nextToken values are
--   returned.
listPipelineExecutionsResponse_nextToken :: Lens' ListPipelineExecutionsResponse (Maybe Text)

-- | A list of executions in the history of a pipeline.
listPipelineExecutionsResponse_pipelineExecutionSummaries :: Lens' ListPipelineExecutionsResponse (Maybe [PipelineExecutionSummary])

-- | The response's http status code.
listPipelineExecutionsResponse_httpStatus :: Lens' ListPipelineExecutionsResponse Int

-- | The access key for the session.
aWSSessionCredentials_accessKeyId :: Lens' AWSSessionCredentials Text

-- | The secret access key for the session.
aWSSessionCredentials_secretAccessKey :: Lens' AWSSessionCredentials Text

-- | The token for the session.
aWSSessionCredentials_sessionToken :: Lens' AWSSessionCredentials Text

-- | The configuration data for the action.
actionConfiguration_configuration :: Lens' ActionConfiguration (Maybe (HashMap Text Text))

-- | Indicates that the property is used with <tt>PollForJobs</tt>. When
--   creating a custom action, an action can have up to one queryable
--   property. If it has one, that property must be both required and not
--   secret.
--   
--   If you create a pipeline with a custom action type, and that custom
--   action contains a queryable property, the value for that configuration
--   property is subject to other restrictions. The value must be less than
--   or equal to twenty (20) characters. The value can contain only
--   alphanumeric characters, underscores, and hyphens.
actionConfigurationProperty_queryable :: Lens' ActionConfigurationProperty (Maybe Bool)

-- | The type of the configuration property.
actionConfigurationProperty_type :: Lens' ActionConfigurationProperty (Maybe ActionConfigurationPropertyType)

-- | The description of the action configuration property that is displayed
--   to users.
actionConfigurationProperty_description :: Lens' ActionConfigurationProperty (Maybe Text)

-- | The name of the action configuration property.
actionConfigurationProperty_name :: Lens' ActionConfigurationProperty Text

-- | Whether the configuration property is a required value.
actionConfigurationProperty_required :: Lens' ActionConfigurationProperty Bool

-- | Whether the configuration property is a key.
actionConfigurationProperty_key :: Lens' ActionConfigurationProperty Bool

-- | Whether the configuration property is secret. Secrets are hidden from
--   all calls except for <tt>GetJobDetails</tt>,
--   <tt>GetThirdPartyJobDetails</tt>, <tt>PollForJobs</tt>, and
--   <tt>PollForThirdPartyJobs</tt>.
--   
--   When updating a pipeline, passing * * * * * without changing any other
--   values of the action preserves the previous value of the secret.
actionConfigurationProperty_secret :: Lens' ActionConfigurationProperty Bool

-- | The name of the action in the context of a job.
actionContext_name :: Lens' ActionContext (Maybe Text)

-- | The system-generated unique ID that corresponds to an action's
--   execution.
actionContext_actionExecutionId :: Lens' ActionContext (Maybe Text)

-- | The name or ID of the result of the action declaration, such as a test
--   or build artifact.
actionDeclaration_outputArtifacts :: Lens' ActionDeclaration (Maybe [OutputArtifact])

-- | The variable namespace associated with the action. All variables
--   produced as output by this action fall under this namespace.
actionDeclaration_namespace :: Lens' ActionDeclaration (Maybe Text)

-- | The order in which actions are run.
actionDeclaration_runOrder :: Lens' ActionDeclaration (Maybe Natural)

-- | The action declaration's AWS Region, such as us-east-1.
actionDeclaration_region :: Lens' ActionDeclaration (Maybe Text)

-- | The action's configuration. These are key-value pairs that specify
--   input values for an action. For more information, see <a>Action
--   Structure Requirements in CodePipeline</a>. For the list of
--   configuration properties for the AWS CloudFormation action type in
--   CodePipeline, see <a>Configuration Properties Reference</a> in the
--   <i>AWS CloudFormation User Guide</i>. For template snippets with
--   examples, see <a>Using Parameter Override Functions with CodePipeline
--   Pipelines</a> in the <i>AWS CloudFormation User Guide</i>.
--   
--   The values can be represented in either JSON or YAML format. For
--   example, the JSON configuration item format is as follows:
--   
--   <i>JSON:</i>
--   
--   <pre>
--   "Configuration" : { Key : Value },
--   </pre>
actionDeclaration_configuration :: Lens' ActionDeclaration (Maybe (HashMap Text Text))

-- | The name or ID of the artifact consumed by the action, such as a test
--   or build artifact.
actionDeclaration_inputArtifacts :: Lens' ActionDeclaration (Maybe [InputArtifact])

-- | The ARN of the IAM service role that performs the declared action.
--   This is assumed through the roleArn for the pipeline.
actionDeclaration_roleArn :: Lens' ActionDeclaration (Maybe Text)

-- | The action declaration's name.
actionDeclaration_name :: Lens' ActionDeclaration Text

-- | Specifies the action type and the provider of the action.
actionDeclaration_actionTypeId :: Lens' ActionDeclaration ActionTypeId

-- | The ARN of the user who last changed the pipeline.
actionExecution_lastUpdatedBy :: Lens' ActionExecution (Maybe Text)

-- | A summary of the run of the action.
actionExecution_summary :: Lens' ActionExecution (Maybe Text)

-- | The status of the action, or for a completed action, the last status
--   of the action.
actionExecution_status :: Lens' ActionExecution (Maybe ActionExecutionStatus)

-- | The last status change of the action.
actionExecution_lastStatusChange :: Lens' ActionExecution (Maybe UTCTime)

-- | The system-generated token used to identify a unique approval request.
--   The token for each open approval request can be obtained using the
--   <tt>GetPipelineState</tt> command. It is used to validate that the
--   approval request corresponding to this token is still valid.
actionExecution_token :: Lens' ActionExecution (Maybe Text)

-- | The URL of a resource external to AWS that is used when running the
--   action (for example, an external repository URL).
actionExecution_externalExecutionUrl :: Lens' ActionExecution (Maybe Text)

-- | The external ID of the run of the action.
actionExecution_externalExecutionId :: Lens' ActionExecution (Maybe Text)

-- | The details of an error returned by a URL external to AWS.
actionExecution_errorDetails :: Lens' ActionExecution (Maybe ErrorDetails)

-- | A percentage of completeness of the action as it runs.
actionExecution_percentComplete :: Lens' ActionExecution (Maybe Natural)

-- | ID of the workflow action execution in the current stage. Use the
--   GetPipelineState action to retrieve the current action execution
--   details of the current stage.
--   
--   For older executions, this field might be empty. The action execution
--   ID is available for executions run on or after March 2020.
actionExecution_actionExecutionId :: Lens' ActionExecution (Maybe Text)

-- | The status of the action execution. Status categories are
--   <tt>InProgress</tt>, <tt>Succeeded</tt>, and <tt>Failed</tt>.
actionExecutionDetail_status :: Lens' ActionExecutionDetail (Maybe ActionExecutionStatus)

-- | The start time of the action execution.
actionExecutionDetail_startTime :: Lens' ActionExecutionDetail (Maybe UTCTime)

-- | The version of the pipeline where the action was run.
actionExecutionDetail_pipelineVersion :: Lens' ActionExecutionDetail (Maybe Natural)

-- | Input details for the action execution, such as role ARN, Region, and
--   input artifacts.
actionExecutionDetail_input :: Lens' ActionExecutionDetail (Maybe ActionExecutionInput)

-- | The name of the action.
actionExecutionDetail_actionName :: Lens' ActionExecutionDetail (Maybe Text)

-- | Output details for the action execution, such as the action execution
--   result.
actionExecutionDetail_output :: Lens' ActionExecutionDetail (Maybe ActionExecutionOutput)

-- | The pipeline execution ID for the action execution.
actionExecutionDetail_pipelineExecutionId :: Lens' ActionExecutionDetail (Maybe Text)

-- | The name of the stage that contains the action.
actionExecutionDetail_stageName :: Lens' ActionExecutionDetail (Maybe Text)

-- | The last update time of the action execution.
actionExecutionDetail_lastUpdateTime :: Lens' ActionExecutionDetail (Maybe UTCTime)

-- | The action execution ID.
actionExecutionDetail_actionExecutionId :: Lens' ActionExecutionDetail (Maybe Text)

-- | The pipeline execution ID used to filter action execution history.
actionExecutionFilter_pipelineExecutionId :: Lens' ActionExecutionFilter (Maybe Text)

-- | The variable namespace associated with the action. All variables
--   produced as output by this action fall under this namespace.
actionExecutionInput_namespace :: Lens' ActionExecutionInput (Maybe Text)

-- | Configuration data for an action execution with all variable
--   references replaced with their real values for the execution.
actionExecutionInput_resolvedConfiguration :: Lens' ActionExecutionInput (Maybe (HashMap Text Text))

-- | The AWS Region for the action, such as us-east-1.
actionExecutionInput_region :: Lens' ActionExecutionInput (Maybe Text)

-- | Configuration data for an action execution.
actionExecutionInput_configuration :: Lens' ActionExecutionInput (Maybe (HashMap Text Text))

-- | Undocumented member.
actionExecutionInput_actionTypeId :: Lens' ActionExecutionInput (Maybe ActionTypeId)

-- | Details of input artifacts of the action that correspond to the action
--   execution.
actionExecutionInput_inputArtifacts :: Lens' ActionExecutionInput (Maybe [ArtifactDetail])

-- | The ARN of the IAM service role that performs the declared action.
--   This is assumed through the roleArn for the pipeline.
actionExecutionInput_roleArn :: Lens' ActionExecutionInput (Maybe Text)

-- | The outputVariables field shows the key-value pairs that were output
--   as part of that execution.
actionExecutionOutput_outputVariables :: Lens' ActionExecutionOutput (Maybe (HashMap Text Text))

-- | Details of output artifacts of the action that correspond to the
--   action execution.
actionExecutionOutput_outputArtifacts :: Lens' ActionExecutionOutput (Maybe [ArtifactDetail])

-- | Execution result information listed in the output details for an
--   action execution.
actionExecutionOutput_executionResult :: Lens' ActionExecutionOutput (Maybe ActionExecutionResult)

-- | The deepest external link to the external resource (for example, a
--   repository URL or deployment endpoint) that is used when running the
--   action.
actionExecutionResult_externalExecutionUrl :: Lens' ActionExecutionResult (Maybe Text)

-- | The action provider's external ID for the action execution.
actionExecutionResult_externalExecutionId :: Lens' ActionExecutionResult (Maybe Text)

-- | The action provider's summary for the action execution.
actionExecutionResult_externalExecutionSummary :: Lens' ActionExecutionResult (Maybe Text)

-- | The system-generated unique ID that identifies the revision number of
--   the action.
actionRevision_revisionId :: Lens' ActionRevision Text

-- | The unique identifier of the change that set the state to this
--   revision (for example, a deployment ID or timestamp).
actionRevision_revisionChangeId :: Lens' ActionRevision Text

-- | The date and time when the most recent version of the action was
--   created, in timestamp format.
actionRevision_created :: Lens' ActionRevision UTCTime

-- | A URL link for more information about the revision, such as a commit
--   details page.
actionState_revisionUrl :: Lens' ActionState (Maybe Text)

-- | A URL link for more information about the state of the action, such as
--   a deployment group details page.
actionState_entityUrl :: Lens' ActionState (Maybe Text)

-- | The name of the action.
actionState_actionName :: Lens' ActionState (Maybe Text)

-- | Represents information about the version (or revision) of an action.
actionState_currentRevision :: Lens' ActionState (Maybe ActionRevision)

-- | Represents information about the run of an action.
actionState_latestExecution :: Lens' ActionState (Maybe ActionExecution)

-- | The settings for the action type.
actionType_settings :: Lens' ActionType (Maybe ActionTypeSettings)

-- | The configuration properties for the action type.
actionType_actionConfigurationProperties :: Lens' ActionType (Maybe [ActionConfigurationProperty])

-- | Represents information about an action type.
actionType_id :: Lens' ActionType ActionTypeId

-- | The details of the input artifact for the action, such as its commit
--   ID.
actionType_inputArtifactDetails :: Lens' ActionType ArtifactDetails

-- | The details of the output artifact of the action, such as its commit
--   ID.
actionType_outputArtifactDetails :: Lens' ActionType ArtifactDetails

-- | The minimum number of artifacts that can be used with the action type.
--   For example, you should specify a minimum and maximum of zero input
--   artifacts for an action type with a category of <tt>source</tt>.
actionTypeArtifactDetails_minimumCount :: Lens' ActionTypeArtifactDetails Natural

-- | The maximum number of artifacts that can be used with the actiontype.
--   For example, you should specify a minimum and maximum of zero input
--   artifacts for an action type with a category of <tt>source</tt>.
actionTypeArtifactDetails_maximumCount :: Lens' ActionTypeArtifactDetails Natural

-- | The links associated with the action type to be updated.
actionTypeDeclaration_urls :: Lens' ActionTypeDeclaration (Maybe ActionTypeUrls)

-- | Details identifying the accounts with permissions to use the action
--   type.
actionTypeDeclaration_permissions :: Lens' ActionTypeDeclaration (Maybe ActionTypePermissions)

-- | The description for the action type to be updated.
actionTypeDeclaration_description :: Lens' ActionTypeDeclaration (Maybe Text)

-- | The properties of the action type to be updated.
actionTypeDeclaration_properties :: Lens' ActionTypeDeclaration (Maybe [ActionTypeProperty])

-- | Information about the executor for an action type that was created
--   with any supported integration model.
actionTypeDeclaration_executor :: Lens' ActionTypeDeclaration ActionTypeExecutor

-- | The action category, owner, provider, and version of the action type
--   to be updated.
actionTypeDeclaration_id :: Lens' ActionTypeDeclaration ActionTypeIdentifier

-- | Details for the artifacts, such as application files, to be worked on
--   by the action. For example, the minimum and maximum number of input
--   artifacts allowed.
actionTypeDeclaration_inputArtifactDetails :: Lens' ActionTypeDeclaration ActionTypeArtifactDetails

-- | Details for the output artifacts, such as a built application, that
--   are the result of the action. For example, the minimum and maximum
--   number of output artifacts allowed.
actionTypeDeclaration_outputArtifactDetails :: Lens' ActionTypeDeclaration ActionTypeArtifactDetails

-- | The timeout in seconds for the job. An action execution can have
--   multiple jobs. This is the timeout for a single job, not the entire
--   action execution.
actionTypeExecutor_jobTimeout :: Lens' ActionTypeExecutor (Maybe Natural)

-- | The policy statement that specifies the permissions in the
--   CodePipeline customer’s account that are needed to successfully run an
--   action.
--   
--   To grant permission to another account, specify the account ID as the
--   Principal, a domain-style identifier defined by the service, for
--   example <tt>codepipeline.amazonaws.com</tt>.
--   
--   The size of the passed JSON policy document cannot exceed 2048
--   characters.
actionTypeExecutor_policyStatementsTemplate :: Lens' ActionTypeExecutor (Maybe Text)

-- | The action configuration properties for the action type. These
--   properties are specified in the action definition when the action type
--   is created.
actionTypeExecutor_configuration :: Lens' ActionTypeExecutor ExecutorConfiguration

-- | The integration model used to create and update the action type,
--   <tt>Lambda</tt> or <tt>JobWorker</tt>.
actionTypeExecutor_type :: Lens' ActionTypeExecutor ExecutorType

-- | A category defines what kind of action can be taken in the stage, and
--   constrains the provider type for the action. Valid categories are
--   limited to one of the following values.
--   
--   <ul>
--   <li>Source</li>
--   <li>Build</li>
--   <li>Test</li>
--   <li>Deploy</li>
--   <li>Invoke</li>
--   <li>Approval</li>
--   </ul>
actionTypeId_category :: Lens' ActionTypeId ActionCategory

-- | The creator of the action being called. There are three valid values
--   for the <tt>Owner</tt> field in the action category section within
--   your pipeline structure: <tt>AWS</tt>, <tt>ThirdParty</tt>, and
--   <tt>Custom</tt>. For more information, see <a>Valid Action Types and
--   Providers in CodePipeline</a>.
actionTypeId_owner :: Lens' ActionTypeId ActionOwner

-- | The provider of the service being called by the action. Valid
--   providers are determined by the action category. For example, an
--   action in the Deploy category type might have a provider of AWS
--   CodeDeploy, which would be specified as CodeDeploy. For more
--   information, see <a>Valid Action Types and Providers in
--   CodePipeline</a>.
actionTypeId_provider :: Lens' ActionTypeId Text

-- | A string that describes the action version.
actionTypeId_version :: Lens' ActionTypeId Text

-- | Defines what kind of action can be taken in the stage, one of the
--   following:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
actionTypeIdentifier_category :: Lens' ActionTypeIdentifier ActionCategory

-- | The creator of the action type being called: <tt>AWS</tt> or
--   <tt>ThirdParty</tt>.
actionTypeIdentifier_owner :: Lens' ActionTypeIdentifier Text

-- | The provider of the action type being called. The provider name is
--   supplied when the action type is created.
actionTypeIdentifier_provider :: Lens' ActionTypeIdentifier Text

-- | A string that describes the action type version.
actionTypeIdentifier_version :: Lens' ActionTypeIdentifier Text

-- | A list of AWS account IDs with access to use the action type in their
--   pipelines.
actionTypePermissions_allowedAccounts :: Lens' ActionTypePermissions (NonEmpty Text)

-- | Indicates that the property is used with polling. An action type can
--   have up to one queryable property. If it has one, that property must
--   be both required and not secret.
actionTypeProperty_queryable :: Lens' ActionTypeProperty (Maybe Bool)

-- | The description of the property that is displayed to users.
actionTypeProperty_description :: Lens' ActionTypeProperty (Maybe Text)

-- | The property name that is displayed to users.
actionTypeProperty_name :: Lens' ActionTypeProperty Text

-- | Whether the configuration property is an optional value.
actionTypeProperty_optional :: Lens' ActionTypeProperty Bool

-- | Whether the configuration property is a key.
actionTypeProperty_key :: Lens' ActionTypeProperty Bool

-- | Whether to omit the field value entered by the customer in the log. If
--   <tt>true</tt>, the value is not saved in CloudTrail logs for the
--   action execution.
actionTypeProperty_noEcho :: Lens' ActionTypeProperty Bool

-- | The URL of a sign-up page where users can sign up for an external
--   service and perform initial configuration of the action provided by
--   that service.
actionTypeSettings_thirdPartyConfigurationUrl :: Lens' ActionTypeSettings (Maybe Text)

-- | The URL returned to the AWS CodePipeline console that contains a link
--   to the top-level landing page for the external system, such as the
--   console page for AWS CodeDeploy. This link is shown on the pipeline
--   view page in the AWS CodePipeline console and provides a link to the
--   execution entity of the external action.
actionTypeSettings_executionUrlTemplate :: Lens' ActionTypeSettings (Maybe Text)

-- | The URL returned to the AWS CodePipeline console that contains a link
--   to the page where customers can update or change the configuration of
--   the external action.
actionTypeSettings_revisionUrlTemplate :: Lens' ActionTypeSettings (Maybe Text)

-- | The URL returned to the AWS CodePipeline console that provides a deep
--   link to the resources of the external system, such as the
--   configuration page for an AWS CodeDeploy deployment group. This link
--   is provided as part of the action display in the pipeline.
actionTypeSettings_entityUrlTemplate :: Lens' ActionTypeSettings (Maybe Text)

-- | The link to an execution page for the action type in progress. For
--   example, for a CodeDeploy action, this link is shown on the pipeline
--   view page in the CodePipeline console, and it links to a CodeDeploy
--   status page.
actionTypeUrls_executionUrlTemplate :: Lens' ActionTypeUrls (Maybe Text)

-- | The URL returned to the CodePipeline console that contains a link to
--   the page where customers can update or change the configuration of the
--   external action.
actionTypeUrls_revisionUrlTemplate :: Lens' ActionTypeUrls (Maybe Text)

-- | The URL returned to the CodePipeline console that provides a deep link
--   to the resources of the external system, such as a status page. This
--   link is provided as part of the action display in the pipeline.
actionTypeUrls_entityUrlTemplate :: Lens' ActionTypeUrls (Maybe Text)

-- | The URL returned to the CodePipeline console that contains a link to
--   the page where customers can configure the external action.
actionTypeUrls_configurationUrl :: Lens' ActionTypeUrls (Maybe Text)

-- | The summary of the current status of the approval request.
approvalResult_summary :: Lens' ApprovalResult Text

-- | The response submitted by a reviewer assigned to an approval action
--   request.
approvalResult_status :: Lens' ApprovalResult ApprovalStatus

-- | The location of an artifact.
artifact_location :: Lens' Artifact (Maybe ArtifactLocation)

-- | The artifact's name.
artifact_name :: Lens' Artifact (Maybe Text)

-- | The artifact's revision ID. Depending on the type of object, this
--   could be a commit ID (GitHub) or a revision ID (Amazon S3).
artifact_revision :: Lens' Artifact (Maybe Text)

-- | The artifact object name for the action execution.
artifactDetail_name :: Lens' ArtifactDetail (Maybe Text)

-- | The Amazon S3 artifact location for the action execution.
artifactDetail_s3location :: Lens' ArtifactDetail (Maybe S3Location)

-- | The minimum number of artifacts allowed for the action type.
artifactDetails_minimumCount :: Lens' ArtifactDetails Natural

-- | The maximum number of artifacts allowed for the action type.
artifactDetails_maximumCount :: Lens' ArtifactDetails Natural

-- | The S3 bucket that contains the artifact.
artifactLocation_s3Location :: Lens' ArtifactLocation (Maybe S3ArtifactLocation)

-- | The type of artifact in the location.
artifactLocation_type :: Lens' ArtifactLocation (Maybe ArtifactLocationType)

-- | Summary information about the most recent revision of the artifact.
--   For GitHub and AWS CodeCommit repositories, the commit message. For
--   Amazon S3 buckets or actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
artifactRevision_revisionSummary :: Lens' ArtifactRevision (Maybe Text)

-- | The commit ID for the artifact revision. For artifacts stored in
--   GitHub or AWS CodeCommit repositories, the commit ID is linked to a
--   commit details page.
artifactRevision_revisionUrl :: Lens' ArtifactRevision (Maybe Text)

-- | The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
artifactRevision_created :: Lens' ArtifactRevision (Maybe UTCTime)

-- | The name of an artifact. This name might be system-generated, such as
--   "MyApp", or defined by the user when an action is created.
artifactRevision_name :: Lens' ArtifactRevision (Maybe Text)

-- | The revision ID of the artifact.
artifactRevision_revisionId :: Lens' ArtifactRevision (Maybe Text)

-- | An additional identifier for a revision, such as a commit date or, for
--   artifacts stored in Amazon S3 buckets, the ETag value.
artifactRevision_revisionChangeIdentifier :: Lens' ArtifactRevision (Maybe Text)

-- | The encryption key used to encrypt the data in the artifact store,
--   such as an AWS Key Management Service (AWS KMS) key. If this is
--   undefined, the default key for Amazon S3 is used.
artifactStore_encryptionKey :: Lens' ArtifactStore (Maybe EncryptionKey)

-- | The type of the artifact store, such as S3.
artifactStore_type :: Lens' ArtifactStore ArtifactStoreType

-- | The S3 bucket used for storing the artifacts for a pipeline. You can
--   specify the name of an S3 bucket but not a folder in the bucket. A
--   folder to contain the pipeline artifacts is created for you based on
--   the name of the pipeline. You can use any S3 bucket in the same AWS
--   Region as the pipeline to store your pipeline artifacts.
artifactStore_location :: Lens' ArtifactStore Text

-- | Reserved for future use.
blockerDeclaration_name :: Lens' BlockerDeclaration Text

-- | Reserved for future use.
blockerDeclaration_type :: Lens' BlockerDeclaration BlockerType

-- | The summary of the most recent revision of the artifact.
currentRevision_revisionSummary :: Lens' CurrentRevision (Maybe Text)

-- | The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
currentRevision_created :: Lens' CurrentRevision (Maybe UTCTime)

-- | The revision ID of the current version of an artifact.
currentRevision_revision :: Lens' CurrentRevision Text

-- | The change identifier for the current revision.
currentRevision_changeIdentifier :: Lens' CurrentRevision Text

-- | The ID used to identify the key. For an AWS KMS key, you can use the
--   key ID, the key ARN, or the alias ARN.
--   
--   Aliases are recognized only in the account that created the customer
--   master key (CMK). For cross-account actions, you can only use the key
--   ID or key ARN to identify the key.
encryptionKey_id :: Lens' EncryptionKey Text

-- | The type of encryption key, such as an AWS Key Management Service (AWS
--   KMS) key. When creating or updating a pipeline, the value must be set
--   to 'KMS'.
encryptionKey_type :: Lens' EncryptionKey EncryptionKeyType

-- | The system ID or number code of the error.
errorDetails_code :: Lens' ErrorDetails (Maybe Text)

-- | The text of the error message.
errorDetails_message :: Lens' ErrorDetails (Maybe Text)

-- | The summary of the current status of the actions.
executionDetails_summary :: Lens' ExecutionDetails (Maybe Text)

-- | The system-generated unique ID of this action used to identify this
--   job worker in any external systems, such as AWS CodeDeploy.
executionDetails_externalExecutionId :: Lens' ExecutionDetails (Maybe Text)

-- | The percentage of work completed on the action, represented on a scale
--   of 0 to 100 percent.
executionDetails_percentComplete :: Lens' ExecutionDetails (Maybe Natural)

-- | The type of change-detection method, command, or user interaction that
--   started a pipeline execution.
executionTrigger_triggerType :: Lens' ExecutionTrigger (Maybe TriggerType)

-- | Detail related to the event that started a pipeline execution, such as
--   the webhook ARN of the webhook that triggered the pipeline execution
--   or the user ARN for a user-initiated <tt>start-pipeline-execution</tt>
--   CLI command.
executionTrigger_triggerDetail :: Lens' ExecutionTrigger (Maybe Text)

-- | Details about the <tt>Lambda</tt> executor of the action type.
executorConfiguration_lambdaExecutorConfiguration :: Lens' ExecutorConfiguration (Maybe LambdaExecutorConfiguration)

-- | Details about the <tt>JobWorker</tt> executor of the action type.
executorConfiguration_jobWorkerExecutorConfiguration :: Lens' ExecutorConfiguration (Maybe JobWorkerExecutorConfiguration)

-- | The external ID of the run of the action that failed.
failureDetails_externalExecutionId :: Lens' FailureDetails (Maybe Text)

-- | The type of the failure.
failureDetails_type :: Lens' FailureDetails FailureType

-- | The message about the failure.
failureDetails_message :: Lens' FailureDetails Text

-- | The name of the artifact to be worked on (for example, "My App").
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
inputArtifact_name :: Lens' InputArtifact Text

-- | Other data about a job.
job_data :: Lens' Job (Maybe JobData)

-- | The ID of the AWS account to use when performing the job.
job_accountId :: Lens' Job (Maybe Text)

-- | The unique system-generated ID of the job.
job_id :: Lens' Job (Maybe Text)

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Use this
--   number in an AcknowledgeJob request.
job_nonce :: Lens' Job (Maybe Text)

-- | A system-generated token, such as a AWS CodeDeploy deployment ID,
--   required by a job to continue the job asynchronously.
jobData_continuationToken :: Lens' JobData (Maybe Text)

-- | The output of the job.
jobData_outputArtifacts :: Lens' JobData (Maybe [Artifact])

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifacts for the pipeline in AWS CodePipeline.
jobData_artifactCredentials :: Lens' JobData (Maybe AWSSessionCredentials)

-- | Represents information about a pipeline to a job worker.
--   
--   Includes <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt> for
--   custom jobs.
jobData_pipelineContext :: Lens' JobData (Maybe PipelineContext)

-- | Represents information about the key used to encrypt data in the
--   artifact store, such as an AWS Key Management Service (AWS KMS) key.
jobData_encryptionKey :: Lens' JobData (Maybe EncryptionKey)

-- | Represents information about an action type.
jobData_actionTypeId :: Lens' JobData (Maybe ActionTypeId)

-- | The artifact supplied to the job.
jobData_inputArtifacts :: Lens' JobData (Maybe [Artifact])

-- | Represents information about an action configuration.
jobData_actionConfiguration :: Lens' JobData (Maybe ActionConfiguration)

-- | Represents other information about a job required for a job worker to
--   complete the job.
jobDetails_data :: Lens' JobDetails (Maybe JobData)

-- | The AWS account ID associated with the job.
jobDetails_accountId :: Lens' JobDetails (Maybe Text)

-- | The unique system-generated ID of the job.
jobDetails_id :: Lens' JobDetails (Maybe Text)

-- | The accounts in which the job worker is configured and might poll for
--   jobs as part of the action execution.
jobWorkerExecutorConfiguration_pollingAccounts :: Lens' JobWorkerExecutorConfiguration (Maybe (NonEmpty Text))

-- | The service Principals in which the job worker is configured and might
--   poll for jobs as part of the action execution.
jobWorkerExecutorConfiguration_pollingServicePrincipals :: Lens' JobWorkerExecutorConfiguration (Maybe (NonEmpty Text))

-- | The ARN of the Lambda function used by the action engine.
lambdaExecutorConfiguration_lambdaFunctionArn :: Lens' LambdaExecutorConfiguration Text

-- | The Amazon Resource Name (ARN) of the webhook.
listWebhookItem_arn :: Lens' ListWebhookItem (Maybe Text)

-- | The number code of the error.
listWebhookItem_errorCode :: Lens' ListWebhookItem (Maybe Text)

-- | The date and time a webhook was last successfully triggered, in
--   timestamp format.
listWebhookItem_lastTriggered :: Lens' ListWebhookItem (Maybe UTCTime)

-- | The text of the error message about the webhook.
listWebhookItem_errorMessage :: Lens' ListWebhookItem (Maybe Text)

-- | Specifies the tags applied to the webhook.
listWebhookItem_tags :: Lens' ListWebhookItem (Maybe [Tag])

-- | The detail returned for each webhook, such as the webhook
--   authentication type and filter rules.
listWebhookItem_definition :: Lens' ListWebhookItem WebhookDefinition

-- | A unique URL generated by CodePipeline. When a POST request is made to
--   this URL, the defined pipeline is started as long as the body of the
--   post request satisfies the defined authentication and filtering
--   conditions. Deleting and re-creating a webhook makes the old URL
--   invalid and generates a new one.
listWebhookItem_url :: Lens' ListWebhookItem Text

-- | The name of the output of an artifact, such as "My App".
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
--   
--   Output artifact names must be unique within a pipeline.
outputArtifact_name :: Lens' OutputArtifact Text

-- | The stage of the pipeline.
pipelineContext_stage :: Lens' PipelineContext (Maybe StageContext)

-- | The name of the pipeline. This is a user-specified value. Pipeline
--   names must be unique across all pipeline names under an Amazon Web
--   Services account.
pipelineContext_pipelineName :: Lens' PipelineContext (Maybe Text)

-- | The context of an action to a job worker in the stage of a pipeline.
pipelineContext_action :: Lens' PipelineContext (Maybe ActionContext)

-- | The Amazon Resource Name (ARN) of the pipeline.
pipelineContext_pipelineArn :: Lens' PipelineContext (Maybe Text)

-- | The execution ID of the pipeline.
pipelineContext_pipelineExecutionId :: Lens' PipelineContext (Maybe Text)

-- | A mapping of <tt>artifactStore</tt> objects and their corresponding
--   AWS Regions. There must be an artifact store for the pipeline Region
--   and for each cross-region action in the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
pipelineDeclaration_artifactStores :: Lens' PipelineDeclaration (Maybe (HashMap Text ArtifactStore))

-- | Represents information about the S3 bucket where artifacts are stored
--   for the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
pipelineDeclaration_artifactStore :: Lens' PipelineDeclaration (Maybe ArtifactStore)

-- | The version number of the pipeline. A new pipeline always has a
--   version number of 1. This number is incremented when a pipeline is
--   updated.
pipelineDeclaration_version :: Lens' PipelineDeclaration (Maybe Natural)

-- | The name of the pipeline.
pipelineDeclaration_name :: Lens' PipelineDeclaration Text

-- | The Amazon Resource Name (ARN) for AWS CodePipeline to use to either
--   perform actions with no <tt>actionRoleArn</tt>, or to use to assume
--   roles for actions with an <tt>actionRoleArn</tt>.
pipelineDeclaration_roleArn :: Lens' PipelineDeclaration Text

-- | The stage in which to perform the action.
pipelineDeclaration_stages :: Lens' PipelineDeclaration [StageDeclaration]

-- | The status of the pipeline execution.
--   
--   <ul>
--   <li>Cancelled: The pipeline’s definition was updated before the
--   pipeline execution could be completed.</li>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
pipelineExecution_status :: Lens' PipelineExecution (Maybe PipelineExecutionStatus)

-- | The name of the pipeline with the specified pipeline execution.
pipelineExecution_pipelineName :: Lens' PipelineExecution (Maybe Text)

-- | A summary that contains a description of the pipeline execution
--   status.
pipelineExecution_statusSummary :: Lens' PipelineExecution (Maybe Text)

-- | The version number of the pipeline with the specified pipeline
--   execution.
pipelineExecution_pipelineVersion :: Lens' PipelineExecution (Maybe Natural)

-- | The ID of the pipeline execution.
pipelineExecution_pipelineExecutionId :: Lens' PipelineExecution (Maybe Text)

-- | A list of <tt>ArtifactRevision</tt> objects included in a pipeline
--   execution.
pipelineExecution_artifactRevisions :: Lens' PipelineExecution (Maybe [ArtifactRevision])

-- | The status of the pipeline execution.
--   
--   <ul>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
pipelineExecutionSummary_status :: Lens' PipelineExecutionSummary (Maybe PipelineExecutionStatus)

-- | The date and time when the pipeline execution began, in timestamp
--   format.
pipelineExecutionSummary_startTime :: Lens' PipelineExecutionSummary (Maybe UTCTime)

-- | The interaction that stopped a pipeline execution.
pipelineExecutionSummary_stopTrigger :: Lens' PipelineExecutionSummary (Maybe StopExecutionTrigger)

-- | The ID of the pipeline execution.
pipelineExecutionSummary_pipelineExecutionId :: Lens' PipelineExecutionSummary (Maybe Text)

-- | A list of the source artifact revisions that initiated a pipeline
--   execution.
pipelineExecutionSummary_sourceRevisions :: Lens' PipelineExecutionSummary (Maybe [SourceRevision])

-- | The interaction or event that started a pipeline execution, such as
--   automated change detection or a <tt>StartPipelineExecution</tt> API
--   call.
pipelineExecutionSummary_trigger :: Lens' PipelineExecutionSummary (Maybe ExecutionTrigger)

-- | The date and time of the last change to the pipeline execution, in
--   timestamp format.
pipelineExecutionSummary_lastUpdateTime :: Lens' PipelineExecutionSummary (Maybe UTCTime)

-- | The date and time the pipeline was created, in timestamp format.
pipelineMetadata_created :: Lens' PipelineMetadata (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the pipeline.
pipelineMetadata_pipelineArn :: Lens' PipelineMetadata (Maybe Text)

-- | The date and time the pipeline was last updated, in timestamp format.
pipelineMetadata_updated :: Lens' PipelineMetadata (Maybe UTCTime)

-- | The date and time the pipeline was created, in timestamp format.
pipelineSummary_created :: Lens' PipelineSummary (Maybe UTCTime)

-- | The name of the pipeline.
pipelineSummary_name :: Lens' PipelineSummary (Maybe Text)

-- | The version number of the pipeline.
pipelineSummary_version :: Lens' PipelineSummary (Maybe Natural)

-- | The date and time of the last update to the pipeline, in timestamp
--   format.
pipelineSummary_updated :: Lens' PipelineSummary (Maybe UTCTime)

-- | The name of the S3 bucket.
s3ArtifactLocation_bucketName :: Lens' S3ArtifactLocation Text

-- | The key of the object in the S3 bucket, which uniquely identifies the
--   object in the bucket.
s3ArtifactLocation_objectKey :: Lens' S3ArtifactLocation Text

-- | The Amazon S3 artifact bucket for an action's artifacts.
s3Location_bucket :: Lens' S3Location (Maybe Text)

-- | The artifact name.
s3Location_key :: Lens' S3Location (Maybe Text)

-- | Summary information about the most recent revision of the artifact.
--   For GitHub and AWS CodeCommit repositories, the commit message. For
--   Amazon S3 buckets or actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
sourceRevision_revisionSummary :: Lens' SourceRevision (Maybe Text)

-- | The commit ID for the artifact revision. For artifacts stored in
--   GitHub or AWS CodeCommit repositories, the commit ID is linked to a
--   commit details page.
sourceRevision_revisionUrl :: Lens' SourceRevision (Maybe Text)

-- | The system-generated unique ID that identifies the revision number of
--   the artifact.
sourceRevision_revisionId :: Lens' SourceRevision (Maybe Text)

-- | The name of the action that processed the revision to the source
--   artifact.
sourceRevision_actionName :: Lens' SourceRevision Text

-- | The name of the stage.
stageContext_name :: Lens' StageContext (Maybe Text)

-- | Reserved for future use.
stageDeclaration_blockers :: Lens' StageDeclaration (Maybe [BlockerDeclaration])

-- | The name of the stage.
stageDeclaration_name :: Lens' StageDeclaration Text

-- | The actions included in a stage.
stageDeclaration_actions :: Lens' StageDeclaration [ActionDeclaration]

-- | The ID of the pipeline execution associated with the stage.
stageExecution_pipelineExecutionId :: Lens' StageExecution Text

-- | The status of the stage, or for a completed stage, the last status of
--   the stage.
--   
--   A status of cancelled means that the pipeline’s definition was updated
--   before the stage execution could be completed.
stageExecution_status :: Lens' StageExecution StageExecutionStatus

-- | Undocumented member.
stageState_inboundExecution :: Lens' StageState (Maybe StageExecution)

-- | The state of the inbound transition, which is either enabled or
--   disabled.
stageState_inboundTransitionState :: Lens' StageState (Maybe TransitionState)

-- | The state of the stage.
stageState_actionStates :: Lens' StageState (Maybe [ActionState])

-- | The name of the stage.
stageState_stageName :: Lens' StageState (Maybe Text)

-- | Information about the latest execution in the stage, including its ID
--   and status.
stageState_latestExecution :: Lens' StageState (Maybe StageExecution)

-- | The user-specified reason the pipeline was stopped.
stopExecutionTrigger_reason :: Lens' StopExecutionTrigger (Maybe Text)

-- | The tag's key.
tag_key :: Lens' Tag Text

-- | The tag's value.
tag_value :: Lens' Tag Text

-- | The <tt>clientToken</tt> portion of the <tt>clientId</tt> and
--   <tt>clientToken</tt> pair used to verify that the calling entity is
--   allowed access to the job and its details.
thirdPartyJob_clientId :: Lens' ThirdPartyJob (Maybe Text)

-- | The identifier used to identify the job in AWS CodePipeline.
thirdPartyJob_jobId :: Lens' ThirdPartyJob (Maybe Text)

-- | A system-generated token, such as a AWS CodeDeploy deployment ID, that
--   a job requires to continue the job asynchronously.
thirdPartyJobData_continuationToken :: Lens' ThirdPartyJobData (Maybe Text)

-- | The name of the artifact that is the result of the action, if any.
--   This name might be system-generated, such as "MyBuiltApp", or it might
--   be defined by the user when the action is created.
thirdPartyJobData_outputArtifacts :: Lens' ThirdPartyJobData (Maybe [Artifact])

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifact for the pipeline in AWS CodePipeline.
thirdPartyJobData_artifactCredentials :: Lens' ThirdPartyJobData (Maybe AWSSessionCredentials)

-- | Represents information about a pipeline to a job worker.
--   
--   Does not include <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt>
--   for ThirdParty jobs.
thirdPartyJobData_pipelineContext :: Lens' ThirdPartyJobData (Maybe PipelineContext)

-- | The encryption key used to encrypt and decrypt data in the artifact
--   store for the pipeline, such as an AWS Key Management Service (AWS
--   KMS) key. This is optional and might not be present.
thirdPartyJobData_encryptionKey :: Lens' ThirdPartyJobData (Maybe EncryptionKey)

-- | Represents information about an action type.
thirdPartyJobData_actionTypeId :: Lens' ThirdPartyJobData (Maybe ActionTypeId)

-- | The name of the artifact that is worked on by the action, if any. This
--   name might be system-generated, such as "MyApp", or it might be
--   defined by the user when the action is created. The input artifact
--   name must match the name of an output artifact generated by an action
--   in an earlier action or stage of the pipeline.
thirdPartyJobData_inputArtifacts :: Lens' ThirdPartyJobData (Maybe [Artifact])

-- | Represents information about an action configuration.
thirdPartyJobData_actionConfiguration :: Lens' ThirdPartyJobData (Maybe ActionConfiguration)

-- | The data to be returned by the third party job worker.
thirdPartyJobDetails_data :: Lens' ThirdPartyJobDetails (Maybe ThirdPartyJobData)

-- | The identifier used to identify the job details in AWS CodePipeline.
thirdPartyJobDetails_id :: Lens' ThirdPartyJobDetails (Maybe Text)

-- | A system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Use this
--   number in an AcknowledgeThirdPartyJob request.
thirdPartyJobDetails_nonce :: Lens' ThirdPartyJobDetails (Maybe Text)

-- | Whether the transition between stages is enabled (true) or disabled
--   (false).
transitionState_enabled :: Lens' TransitionState (Maybe Bool)

-- | The user-specified reason why the transition between two stages of a
--   pipeline was disabled.
transitionState_disabledReason :: Lens' TransitionState (Maybe Text)

-- | The timestamp when the transition state was last changed.
transitionState_lastChangedAt :: Lens' TransitionState (Maybe UTCTime)

-- | The ID of the user who last changed the transition state.
transitionState_lastChangedBy :: Lens' TransitionState (Maybe Text)

-- | The property used to configure acceptance of webhooks in an IP address
--   range. For IP, only the <tt>AllowedIPRange</tt> property must be set.
--   This property must be set to a valid CIDR range.
webhookAuthConfiguration_allowedIPRange :: Lens' WebhookAuthConfiguration (Maybe Text)

-- | The property used to configure GitHub authentication. For GITHUB_HMAC,
--   only the <tt>SecretToken</tt> property must be set.
webhookAuthConfiguration_secretToken :: Lens' WebhookAuthConfiguration (Maybe Text)

-- | The name of the webhook.
webhookDefinition_name :: Lens' WebhookDefinition Text

-- | The name of the pipeline you want to connect to the webhook.
webhookDefinition_targetPipeline :: Lens' WebhookDefinition Text

-- | The name of the action in a pipeline you want to connect to the
--   webhook. The action must be from the source (first) stage of the
--   pipeline.
webhookDefinition_targetAction :: Lens' WebhookDefinition Text

-- | A list of rules applied to the body/payload sent in the POST request
--   to a webhook URL. All defined rules must pass for the request to be
--   accepted and the pipeline started.
webhookDefinition_filters :: Lens' WebhookDefinition [WebhookFilterRule]

-- | Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.
--   
--   <ul>
--   <li>For information about the authentication scheme implemented by
--   GITHUB_HMAC, see <a>Securing your webhooks</a> on the GitHub Developer
--   website.</li>
--   <li>IP rejects webhooks trigger requests unless they originate from an
--   IP address in the IP range whitelisted in the authentication
--   configuration.</li>
--   <li>UNAUTHENTICATED accepts all webhook trigger requests regardless of
--   origin.</li>
--   </ul>
webhookDefinition_authentication :: Lens' WebhookDefinition WebhookAuthenticationType

-- | Properties that configure the authentication applied to incoming
--   webhook trigger requests. The required properties depend on the
--   authentication type. For GITHUB_HMAC, only the <tt>SecretToken
--   </tt>property must be set. For IP, only the <tt>AllowedIPRange
--   </tt>property must be set to a valid CIDR range. For UNAUTHENTICATED,
--   no properties can be set.
webhookDefinition_authenticationConfiguration :: Lens' WebhookDefinition WebhookAuthConfiguration

-- | The value selected by the <tt>JsonPath</tt> expression must match what
--   is supplied in the <tt>MatchEquals</tt> field. Otherwise, the request
--   is ignored. Properties from the target action configuration can be
--   included as placeholders in this value by surrounding the action
--   configuration key with curly brackets. For example, if the value
--   supplied here is "refs/heads/{Branch}" and the target action has an
--   action configuration property called "Branch" with a value of
--   "master", the <tt>MatchEquals</tt> value is evaluated as
--   "refs/heads/master". For a list of action configuration properties for
--   built-in action types, see <a>Pipeline Structure Reference Action
--   Requirements</a>.
webhookFilterRule_matchEquals :: Lens' WebhookFilterRule (Maybe Text)

-- | A JsonPath expression that is applied to the body/payload of the
--   webhook. The value selected by the JsonPath expression must match the
--   value specified in the <tt>MatchEquals</tt> field. Otherwise, the
--   request is ignored. For more information, see <a>Java JsonPath
--   implementation</a> in GitHub.
webhookFilterRule_jsonPath :: Lens' WebhookFilterRule Text


module Network.AWS.CodePipeline.Waiters


-- | Derived from API version <tt>2015-07-09</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS CodePipeline
--   
--   <b>Overview</b>
--   
--   This is the AWS CodePipeline API Reference. This guide provides
--   descriptions of the actions and data types for AWS CodePipeline. Some
--   functionality for your pipeline can only be configured through the
--   API. For more information, see the <a>AWS CodePipeline User Guide</a>.
--   
--   You can use the AWS CodePipeline API to work with pipelines, stages,
--   actions, and transitions.
--   
--   <i>Pipelines</i> are models of automated release processes. Each
--   pipeline is uniquely named, and consists of stages, actions, and
--   transitions.
--   
--   You can work with pipelines by calling:
--   
--   <ul>
--   <li>CreatePipeline, which creates a uniquely named pipeline.</li>
--   <li>DeletePipeline, which deletes the specified pipeline.</li>
--   <li>GetPipeline, which returns information about the pipeline
--   structure and pipeline metadata, including the pipeline Amazon
--   Resource Name (ARN).</li>
--   <li>GetPipelineExecution, which returns information about a specific
--   execution of a pipeline.</li>
--   <li>GetPipelineState, which returns information about the current
--   state of the stages and actions of a pipeline.</li>
--   <li>ListActionExecutions, which returns action-level details for past
--   executions. The details include full stage and action-level details,
--   including individual action duration, status, any errors that occurred
--   during the execution, and input and output artifact location
--   details.</li>
--   <li>ListPipelines, which gets a summary of all of the pipelines
--   associated with your account.</li>
--   <li>ListPipelineExecutions, which gets a summary of the most recent
--   executions for a pipeline.</li>
--   <li>StartPipelineExecution, which runs the most recent revision of an
--   artifact through the pipeline.</li>
--   <li>StopPipelineExecution, which stops the specified pipeline
--   execution from continuing through the pipeline.</li>
--   <li>UpdatePipeline, which updates a pipeline with edits or changes to
--   the structure of the pipeline.</li>
--   </ul>
--   
--   Pipelines include <i>stages</i>. Each stage contains one or more
--   actions that must complete before the next stage begins. A stage
--   results in success or failure. If a stage fails, the pipeline stops at
--   that stage and remains stopped until either a new version of an
--   artifact appears in the source location, or a user takes action to
--   rerun the most recent artifact through the pipeline. You can call
--   GetPipelineState, which displays the status of a pipeline, including
--   the status of stages in the pipeline, or GetPipeline, which returns
--   the entire structure of the pipeline, including the stages of that
--   pipeline. For more information about the structure of stages and
--   actions, see <a>AWS CodePipeline Pipeline Structure Reference</a>.
--   
--   Pipeline stages include <i>actions</i> that are categorized into
--   categories such as source or build actions performed in a stage of a
--   pipeline. For example, you can use a source action to import artifacts
--   into a pipeline from a source such as Amazon S3. Like stages, you do
--   not work with actions directly in most cases, but you do define and
--   interact with actions when working with pipeline operations such as
--   CreatePipeline and GetPipelineState. Valid action categories are:
--   
--   <ul>
--   <li>Source</li>
--   <li>Build</li>
--   <li>Test</li>
--   <li>Deploy</li>
--   <li>Approval</li>
--   <li>Invoke</li>
--   </ul>
--   
--   Pipelines also include <i>transitions</i>, which allow the transition
--   of artifacts from one stage to the next in a pipeline after the
--   actions in one stage complete.
--   
--   You can work with transitions by calling:
--   
--   <ul>
--   <li>DisableStageTransition, which prevents artifacts from
--   transitioning to the next stage in a pipeline.</li>
--   <li>EnableStageTransition, which enables transition of artifacts
--   between stages in a pipeline.</li>
--   </ul>
--   
--   <b>Using the API to integrate with AWS CodePipeline</b>
--   
--   For third-party integrators or developers who want to create their own
--   integrations with AWS CodePipeline, the expected sequence varies from
--   the standard API user. To integrate with AWS CodePipeline, developers
--   need to work with the following items:
--   
--   <b>Jobs</b>, which are instances of an action. For example, a job for
--   a source action might import a revision of an artifact from a source.
--   
--   You can work with jobs by calling:
--   
--   <ul>
--   <li>AcknowledgeJob, which confirms whether a job worker has received
--   the specified job.</li>
--   <li>GetJobDetails, which returns the details of a job.</li>
--   <li>PollForJobs, which determines whether there are any jobs to act
--   on.</li>
--   <li>PutJobFailureResult, which provides details of a job failure.</li>
--   <li>PutJobSuccessResult, which provides details of a job success.</li>
--   </ul>
--   
--   <b>Third party jobs</b>, which are instances of an action created by a
--   partner action and integrated into AWS CodePipeline. Partner actions
--   are created by members of the AWS Partner Network.
--   
--   You can work with third party jobs by calling:
--   
--   <ul>
--   <li>AcknowledgeThirdPartyJob, which confirms whether a job worker has
--   received the specified job.</li>
--   <li>GetThirdPartyJobDetails, which requests the details of a job for a
--   partner action.</li>
--   <li>PollForThirdPartyJobs, which determines whether there are any jobs
--   to act on.</li>
--   <li>PutThirdPartyJobFailureResult, which provides details of a job
--   failure.</li>
--   <li>PutThirdPartyJobSuccessResult, which provides details of a job
--   success.</li>
--   </ul>
module Network.AWS.CodePipeline

-- | API version <tt>2015-07-09</tt> of the Amazon CodePipeline SDK
--   configuration.
defaultService :: Service

-- | The client token was specified in an invalid format
_InvalidClientTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The validation was specified in an invalid format.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The nonce was specified in an invalid format.
_InvalidNonceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified action cannot be found.
_ActionNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval request already received a response or has expired.
_InvalidApprovalTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because of an unknown error, exception, or failure.
_RequestFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Unable to stop the pipeline execution. The execution might already be
--   in a <tt>Stopped</tt> state, or it might no longer be in progress.
_PipelineExecutionNotStoppableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Reserved for future use.
_InvalidBlockerDeclarationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exceeded the total size limit for all variables in the pipeline.
_OutputVariablesSizeExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The job state was specified in an invalid format.
_InvalidJobStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tags limit for a resource has been exceeded.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your request cannot be handled because the pipeline is busy handling
--   ongoing activities. Try again later.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The job was specified in an invalid format or cannot be found.
_InvalidJobException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pipeline version was specified in an invalid format or cannot be
--   found.
_PipelineVersionNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Unable to retry. The pipeline structure or stage state might have
--   changed while actions awaited retry, or the stage contains no failed
--   actions.
_StageNotRetryableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pipeline execution was specified in an invalid format or cannot be
--   found, or an execution ID does not belong to the specified pipeline.
_PipelineExecutionNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified authentication type is in an invalid format.
_InvalidWebhookAuthenticationParametersException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified webhook was entered in an invalid format or cannot be
--   found.
_WebhookNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource tags are invalid.
_InvalidTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified action type already exists with a different definition.
_ActionTypeAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified action type cannot be found.
_ActionTypeNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Unable to modify the tag due to a simultaneous update request.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The next token was specified in an invalid format. Make sure that the
--   next token you provide is the token returned by a previous call.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The stage declaration was specified in an invalid format.
_InvalidStageDeclarationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pipeline execution is already in a <tt>Stopping</tt> state. If you
--   already chose to stop and wait, you cannot make that request again.
--   You can choose to stop and abandon now, but be aware that this option
--   can lead to failed tasks or out of sequence tasks. If you already
--   chose to stop and abandon, you cannot make that request again.
_DuplicatedStopRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified event filter rule is in an invalid format.
_InvalidWebhookFilterPatternException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The action declaration was specified in an invalid format.
_InvalidActionDeclarationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The stage was specified in an invalid format or cannot be found.
_StageNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The structure was specified in an invalid format.
_InvalidStructureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The job was specified in an invalid format or cannot be found.
_JobNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval action has already been approved or rejected.
_ApprovalAlreadyCompletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource ARN is invalid.
_InvalidArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified pipeline name is already in use.
_PipelineNameInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pipeline was specified in an invalid format or cannot be found.
_PipelineNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource was specified in an invalid format.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of pipelines associated with the AWS account has exceeded
--   the limit allowed for the account.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The stage has failed in a later run of the pipeline and the
--   pipelineExecutionId associated with the request is out of date.
_NotLatestPipelineExecutionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Represents the input of a <tt>GetPipeline</tt> action.
--   
--   <i>See:</i> <a>newGetPipeline</a> smart constructor.
data GetPipeline
GetPipeline' :: Maybe Natural -> Text -> GetPipeline

-- | Create a value of <a>GetPipeline</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:version:GetPipeline'</a>, <a>getPipeline_version</a> - The
--   version number of the pipeline. If you do not specify a version,
--   defaults to the current version.
--   
--   <a>$sel:name:GetPipeline'</a>, <a>getPipeline_name</a> - The name of
--   the pipeline for which you want to get information. Pipeline names
--   must be unique under an AWS user account.
newGetPipeline :: Text -> GetPipeline

-- | Represents the output of a <tt>GetPipeline</tt> action.
--   
--   <i>See:</i> <a>newGetPipelineResponse</a> smart constructor.
data GetPipelineResponse
GetPipelineResponse' :: Maybe PipelineDeclaration -> Maybe PipelineMetadata -> Int -> GetPipelineResponse

-- | Create a value of <a>GetPipelineResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipeline:GetPipelineResponse'</a>,
--   <a>getPipelineResponse_pipeline</a> - Represents the structure of
--   actions and stages to be performed in the pipeline.
--   
--   <a>$sel:metadata:GetPipelineResponse'</a>,
--   <a>getPipelineResponse_metadata</a> - Represents the pipeline metadata
--   information returned as part of the output of a <tt>GetPipeline</tt>
--   action.
--   
--   <a>$sel:httpStatus:GetPipelineResponse'</a>,
--   <a>getPipelineResponse_httpStatus</a> - The response's http status
--   code.
newGetPipelineResponse :: Int -> GetPipelineResponse

-- | Represents the input of a <tt>PutJobFailureResult</tt> action.
--   
--   <i>See:</i> <a>newPutJobFailureResult</a> smart constructor.
data PutJobFailureResult
PutJobFailureResult' :: Text -> FailureDetails -> PutJobFailureResult

-- | Create a value of <a>PutJobFailureResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:PutJobFailureResult'</a>,
--   <a>putJobFailureResult_jobId</a> - The unique system-generated ID of
--   the job that failed. This is the same ID returned from
--   <tt>PollForJobs</tt>.
--   
--   <a>$sel:failureDetails:PutJobFailureResult'</a>,
--   <a>putJobFailureResult_failureDetails</a> - The details about the
--   failure of a job.
newPutJobFailureResult :: Text -> FailureDetails -> PutJobFailureResult

-- | <i>See:</i> <a>newPutJobFailureResultResponse</a> smart constructor.
data PutJobFailureResultResponse
PutJobFailureResultResponse' :: PutJobFailureResultResponse

-- | Create a value of <a>PutJobFailureResultResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutJobFailureResultResponse :: PutJobFailureResultResponse

-- | Represents the input of a <tt>PutApprovalResult</tt> action.
--   
--   <i>See:</i> <a>newPutApprovalResult</a> smart constructor.
data PutApprovalResult
PutApprovalResult' :: Text -> Text -> Text -> ApprovalResult -> Text -> PutApprovalResult

-- | Create a value of <a>PutApprovalResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:PutApprovalResult'</a>,
--   <a>putApprovalResult_pipelineName</a> - The name of the pipeline that
--   contains the action.
--   
--   <a>$sel:stageName:PutApprovalResult'</a>,
--   <a>putApprovalResult_stageName</a> - The name of the stage that
--   contains the action.
--   
--   <a>$sel:actionName:PutApprovalResult'</a>,
--   <a>putApprovalResult_actionName</a> - The name of the action for which
--   approval is requested.
--   
--   <a>$sel:result:PutApprovalResult'</a>, <a>putApprovalResult_result</a>
--   - Represents information about the result of the approval request.
--   
--   <a>$sel:token:PutApprovalResult'</a>, <a>putApprovalResult_token</a> -
--   The system-generated token used to identify a unique approval request.
--   The token for each open approval request can be obtained using the
--   GetPipelineState action. It is used to validate that the approval
--   request corresponding to this token is still valid.
newPutApprovalResult :: Text -> Text -> Text -> ApprovalResult -> Text -> PutApprovalResult

-- | Represents the output of a <tt>PutApprovalResult</tt> action.
--   
--   <i>See:</i> <a>newPutApprovalResultResponse</a> smart constructor.
data PutApprovalResultResponse
PutApprovalResultResponse' :: Maybe POSIX -> Int -> PutApprovalResultResponse

-- | Create a value of <a>PutApprovalResultResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvedAt:PutApprovalResultResponse'</a>,
--   <a>putApprovalResultResponse_approvedAt</a> - The timestamp showing
--   when the approval or rejection was submitted.
--   
--   <a>$sel:httpStatus:PutApprovalResultResponse'</a>,
--   <a>putApprovalResultResponse_httpStatus</a> - The response's http
--   status code.
newPutApprovalResultResponse :: Int -> PutApprovalResultResponse

-- | Represents the input of an AcknowledgeThirdPartyJob action.
--   
--   <i>See:</i> <a>newAcknowledgeThirdPartyJob</a> smart constructor.
data AcknowledgeThirdPartyJob
AcknowledgeThirdPartyJob' :: Text -> Text -> Text -> AcknowledgeThirdPartyJob

-- | Create a value of <a>AcknowledgeThirdPartyJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:AcknowledgeThirdPartyJob'</a>,
--   <a>acknowledgeThirdPartyJob_jobId</a> - The unique system-generated ID
--   of the job.
--   
--   <a>$sel:nonce:AcknowledgeThirdPartyJob'</a>,
--   <a>acknowledgeThirdPartyJob_nonce</a> - A system-generated random
--   number that AWS CodePipeline uses to ensure that the job is being
--   worked on by only one job worker. Get this number from the response to
--   a GetThirdPartyJobDetails request.
--   
--   <a>$sel:clientToken:AcknowledgeThirdPartyJob'</a>,
--   <a>acknowledgeThirdPartyJob_clientToken</a> - The clientToken portion
--   of the clientId and clientToken pair used to verify that the calling
--   entity is allowed access to the job and its details.
newAcknowledgeThirdPartyJob :: Text -> Text -> Text -> AcknowledgeThirdPartyJob

-- | Represents the output of an AcknowledgeThirdPartyJob action.
--   
--   <i>See:</i> <a>newAcknowledgeThirdPartyJobResponse</a> smart
--   constructor.
data AcknowledgeThirdPartyJobResponse
AcknowledgeThirdPartyJobResponse' :: Maybe JobStatus -> Int -> AcknowledgeThirdPartyJobResponse

-- | Create a value of <a>AcknowledgeThirdPartyJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AcknowledgeThirdPartyJobResponse'</a>,
--   <a>acknowledgeThirdPartyJobResponse_status</a> - The status
--   information for the third party job, if any.
--   
--   <a>$sel:httpStatus:AcknowledgeThirdPartyJobResponse'</a>,
--   <a>acknowledgeThirdPartyJobResponse_httpStatus</a> - The response's
--   http status code.
newAcknowledgeThirdPartyJobResponse :: Int -> AcknowledgeThirdPartyJobResponse

-- | Represents the input of a <tt>PutThirdPartyJobFailureResult</tt>
--   action.
--   
--   <i>See:</i> <a>newPutThirdPartyJobFailureResult</a> smart constructor.
data PutThirdPartyJobFailureResult
PutThirdPartyJobFailureResult' :: Text -> Text -> FailureDetails -> PutThirdPartyJobFailureResult

-- | Create a value of <a>PutThirdPartyJobFailureResult</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:PutThirdPartyJobFailureResult'</a>,
--   <a>putThirdPartyJobFailureResult_jobId</a> - The ID of the job that
--   failed. This is the same ID returned from
--   <tt>PollForThirdPartyJobs</tt>.
--   
--   <a>$sel:clientToken:PutThirdPartyJobFailureResult'</a>,
--   <a>putThirdPartyJobFailureResult_clientToken</a> - The clientToken
--   portion of the clientId and clientToken pair used to verify that the
--   calling entity is allowed access to the job and its details.
--   
--   <a>$sel:failureDetails:PutThirdPartyJobFailureResult'</a>,
--   <a>putThirdPartyJobFailureResult_failureDetails</a> - Represents
--   information about failure details.
newPutThirdPartyJobFailureResult :: Text -> Text -> FailureDetails -> PutThirdPartyJobFailureResult

-- | <i>See:</i> <a>newPutThirdPartyJobFailureResultResponse</a> smart
--   constructor.
data PutThirdPartyJobFailureResultResponse
PutThirdPartyJobFailureResultResponse' :: PutThirdPartyJobFailureResultResponse

-- | Create a value of <a>PutThirdPartyJobFailureResultResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutThirdPartyJobFailureResultResponse :: PutThirdPartyJobFailureResultResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - The token that was returned
--   from the previous API call, which would be used to return the next
--   page of the list. The ListTagsforResource call lists all available
--   tags in one call and does not use pagination.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - The maximum number of results
--   to return in a single call.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource to get tags for.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - If the amount of
--   returned information is significantly large, an identifier is also
--   returned and can be used in a subsequent API call to return the next
--   page of the list. The ListTagsforResource call lists all available
--   tags in one call and does not use pagination.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags for the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newRegisterWebhookWithThirdParty</a> smart constructor.
data RegisterWebhookWithThirdParty
RegisterWebhookWithThirdParty' :: Maybe Text -> RegisterWebhookWithThirdParty

-- | Create a value of <a>RegisterWebhookWithThirdParty</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:webhookName:RegisterWebhookWithThirdParty'</a>,
--   <a>registerWebhookWithThirdParty_webhookName</a> - The name of an
--   existing webhook created with PutWebhook to register with a supported
--   third party.
newRegisterWebhookWithThirdParty :: RegisterWebhookWithThirdParty

-- | <i>See:</i> <a>newRegisterWebhookWithThirdPartyResponse</a> smart
--   constructor.
data RegisterWebhookWithThirdPartyResponse
RegisterWebhookWithThirdPartyResponse' :: Int -> RegisterWebhookWithThirdPartyResponse

-- | Create a value of <a>RegisterWebhookWithThirdPartyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RegisterWebhookWithThirdPartyResponse'</a>,
--   <a>registerWebhookWithThirdPartyResponse_httpStatus</a> - The
--   response's http status code.
newRegisterWebhookWithThirdPartyResponse :: Int -> RegisterWebhookWithThirdPartyResponse

-- | Represents the input of a <tt>PollForThirdPartyJobs</tt> action.
--   
--   <i>See:</i> <a>newPollForThirdPartyJobs</a> smart constructor.
data PollForThirdPartyJobs
PollForThirdPartyJobs' :: Maybe Natural -> ActionTypeId -> PollForThirdPartyJobs

-- | Create a value of <a>PollForThirdPartyJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxBatchSize:PollForThirdPartyJobs'</a>,
--   <a>pollForThirdPartyJobs_maxBatchSize</a> - The maximum number of jobs
--   to return in a poll for jobs call.
--   
--   <a>$sel:actionTypeId:PollForThirdPartyJobs'</a>,
--   <a>pollForThirdPartyJobs_actionTypeId</a> - Represents information
--   about an action type.
newPollForThirdPartyJobs :: ActionTypeId -> PollForThirdPartyJobs

-- | Represents the output of a <tt>PollForThirdPartyJobs</tt> action.
--   
--   <i>See:</i> <a>newPollForThirdPartyJobsResponse</a> smart constructor.
data PollForThirdPartyJobsResponse
PollForThirdPartyJobsResponse' :: Maybe [ThirdPartyJob] -> Int -> PollForThirdPartyJobsResponse

-- | Create a value of <a>PollForThirdPartyJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobs:PollForThirdPartyJobsResponse'</a>,
--   <a>pollForThirdPartyJobsResponse_jobs</a> - Information about the jobs
--   to take action on.
--   
--   <a>$sel:httpStatus:PollForThirdPartyJobsResponse'</a>,
--   <a>pollForThirdPartyJobsResponse_httpStatus</a> - The response's http
--   status code.
newPollForThirdPartyJobsResponse :: Int -> PollForThirdPartyJobsResponse

-- | Represents the input of a <tt>PollForJobs</tt> action.
--   
--   <i>See:</i> <a>newPollForJobs</a> smart constructor.
data PollForJobs
PollForJobs' :: Maybe Natural -> Maybe (HashMap Text Text) -> ActionTypeId -> PollForJobs

-- | Create a value of <a>PollForJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxBatchSize:PollForJobs'</a>, <a>pollForJobs_maxBatchSize</a>
--   - The maximum number of jobs to return in a poll for jobs call.
--   
--   <a>$sel:queryParam:PollForJobs'</a>, <a>pollForJobs_queryParam</a> - A
--   map of property names and values. For an action type with no queryable
--   properties, this value must be null or an empty map. For an action
--   type with a queryable property, you must supply that property as a key
--   in the map. Only jobs whose action configuration matches the mapped
--   value are returned.
--   
--   <a>$sel:actionTypeId:PollForJobs'</a>, <a>pollForJobs_actionTypeId</a>
--   - Represents information about an action type.
newPollForJobs :: ActionTypeId -> PollForJobs

-- | Represents the output of a <tt>PollForJobs</tt> action.
--   
--   <i>See:</i> <a>newPollForJobsResponse</a> smart constructor.
data PollForJobsResponse
PollForJobsResponse' :: Maybe [Job] -> Int -> PollForJobsResponse

-- | Create a value of <a>PollForJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobs:PollForJobsResponse'</a>, <a>pollForJobsResponse_jobs</a>
--   - Information about the jobs to take action on.
--   
--   <a>$sel:httpStatus:PollForJobsResponse'</a>,
--   <a>pollForJobsResponse_httpStatus</a> - The response's http status
--   code.
newPollForJobsResponse :: Int -> PollForJobsResponse

-- | Represents the input of a <tt>StartPipelineExecution</tt> action.
--   
--   <i>See:</i> <a>newStartPipelineExecution</a> smart constructor.
data StartPipelineExecution
StartPipelineExecution' :: Maybe Text -> Text -> StartPipelineExecution

-- | Create a value of <a>StartPipelineExecution</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:StartPipelineExecution'</a>,
--   <a>startPipelineExecution_clientRequestToken</a> - The
--   system-generated unique ID used to identify a unique execution
--   request.
--   
--   <a>$sel:name:StartPipelineExecution'</a>,
--   <a>startPipelineExecution_name</a> - The name of the pipeline to
--   start.
newStartPipelineExecution :: Text -> StartPipelineExecution

-- | Represents the output of a <tt>StartPipelineExecution</tt> action.
--   
--   <i>See:</i> <a>newStartPipelineExecutionResponse</a> smart
--   constructor.
data StartPipelineExecutionResponse
StartPipelineExecutionResponse' :: Maybe Text -> Int -> StartPipelineExecutionResponse

-- | Create a value of <a>StartPipelineExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecutionId:StartPipelineExecutionResponse'</a>,
--   <a>startPipelineExecutionResponse_pipelineExecutionId</a> - The unique
--   system-generated ID of the pipeline execution that was started.
--   
--   <a>$sel:httpStatus:StartPipelineExecutionResponse'</a>,
--   <a>startPipelineExecutionResponse_httpStatus</a> - The response's http
--   status code.
newStartPipelineExecutionResponse :: Int -> StartPipelineExecutionResponse

-- | Represents the input of an <tt>UpdatePipeline</tt> action.
--   
--   <i>See:</i> <a>newUpdatePipeline</a> smart constructor.
data UpdatePipeline
UpdatePipeline' :: PipelineDeclaration -> UpdatePipeline

-- | Create a value of <a>UpdatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipeline:UpdatePipeline'</a>, <a>updatePipeline_pipeline</a> -
--   The name of the pipeline to be updated.
newUpdatePipeline :: PipelineDeclaration -> UpdatePipeline

-- | Represents the output of an <tt>UpdatePipeline</tt> action.
--   
--   <i>See:</i> <a>newUpdatePipelineResponse</a> smart constructor.
data UpdatePipelineResponse
UpdatePipelineResponse' :: Maybe PipelineDeclaration -> Int -> UpdatePipelineResponse

-- | Create a value of <a>UpdatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipeline:UpdatePipeline'</a>,
--   <a>updatePipelineResponse_pipeline</a> - The structure of the updated
--   pipeline.
--   
--   <a>$sel:httpStatus:UpdatePipelineResponse'</a>,
--   <a>updatePipelineResponse_httpStatus</a> - The response's http status
--   code.
newUpdatePipelineResponse :: Int -> UpdatePipelineResponse

-- | Represents the input of a <tt>DeletePipeline</tt> action.
--   
--   <i>See:</i> <a>newDeletePipeline</a> smart constructor.
data DeletePipeline
DeletePipeline' :: Text -> DeletePipeline

-- | Create a value of <a>DeletePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeletePipeline'</a>, <a>deletePipeline_name</a> - The
--   name of the pipeline to be deleted.
newDeletePipeline :: Text -> DeletePipeline

-- | <i>See:</i> <a>newDeletePipelineResponse</a> smart constructor.
data DeletePipelineResponse
DeletePipelineResponse' :: DeletePipelineResponse

-- | Create a value of <a>DeletePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePipelineResponse :: DeletePipelineResponse

-- | Represents the input of a <tt>GetPipelineState</tt> action.
--   
--   <i>See:</i> <a>newGetPipelineState</a> smart constructor.
data GetPipelineState
GetPipelineState' :: Text -> GetPipelineState

-- | Create a value of <a>GetPipelineState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetPipelineState'</a>, <a>getPipelineState_name</a> - The
--   name of the pipeline about which you want to get information.
newGetPipelineState :: Text -> GetPipelineState

-- | Represents the output of a <tt>GetPipelineState</tt> action.
--   
--   <i>See:</i> <a>newGetPipelineStateResponse</a> smart constructor.
data GetPipelineStateResponse
GetPipelineStateResponse' :: Maybe Text -> Maybe POSIX -> Maybe [StageState] -> Maybe Natural -> Maybe POSIX -> Int -> GetPipelineStateResponse

-- | Create a value of <a>GetPipelineStateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:GetPipelineStateResponse'</a>,
--   <a>getPipelineStateResponse_pipelineName</a> - The name of the
--   pipeline for which you want to get the state.
--   
--   <a>$sel:created:GetPipelineStateResponse'</a>,
--   <a>getPipelineStateResponse_created</a> - The date and time the
--   pipeline was created, in timestamp format.
--   
--   <a>$sel:stageStates:GetPipelineStateResponse'</a>,
--   <a>getPipelineStateResponse_stageStates</a> - A list of the pipeline
--   stage output information, including stage name, state, most recent run
--   details, whether the stage is disabled, and other data.
--   
--   <a>$sel:pipelineVersion:GetPipelineStateResponse'</a>,
--   <a>getPipelineStateResponse_pipelineVersion</a> - The version number
--   of the pipeline.
--   
--   A newly created pipeline is always assigned a version number of
--   <tt>1</tt>.
--   
--   <a>$sel:updated:GetPipelineStateResponse'</a>,
--   <a>getPipelineStateResponse_updated</a> - The date and time the
--   pipeline was last updated, in timestamp format.
--   
--   <a>$sel:httpStatus:GetPipelineStateResponse'</a>,
--   <a>getPipelineStateResponse_httpStatus</a> - The response's http
--   status code.
newGetPipelineStateResponse :: Int -> GetPipelineStateResponse

-- | Represents the input of a <tt>GetJobDetails</tt> action.
--   
--   <i>See:</i> <a>newGetJobDetails</a> smart constructor.
data GetJobDetails
GetJobDetails' :: Text -> GetJobDetails

-- | Create a value of <a>GetJobDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetJobDetails'</a>, <a>getJobDetails_jobId</a> - The
--   unique system-generated ID for the job.
newGetJobDetails :: Text -> GetJobDetails

-- | Represents the output of a <tt>GetJobDetails</tt> action.
--   
--   <i>See:</i> <a>newGetJobDetailsResponse</a> smart constructor.
data GetJobDetailsResponse
GetJobDetailsResponse' :: Maybe JobDetails -> Int -> GetJobDetailsResponse

-- | Create a value of <a>GetJobDetailsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobDetails:GetJobDetailsResponse'</a>,
--   <a>getJobDetailsResponse_jobDetails</a> - The details of the job.
--   
--   If AWSSessionCredentials is used, a long-running job can call
--   <tt>GetJobDetails</tt> again to obtain new credentials.
--   
--   <a>$sel:httpStatus:GetJobDetailsResponse'</a>,
--   <a>getJobDetailsResponse_httpStatus</a> - The response's http status
--   code.
newGetJobDetailsResponse :: Int -> GetJobDetailsResponse

-- | Represents the input of a <tt>ListPipelines</tt> action.
--   
--   <i>See:</i> <a>newListPipelines</a> smart constructor.
data ListPipelines
ListPipelines' :: Maybe Text -> Maybe Natural -> ListPipelines

-- | Create a value of <a>ListPipelines</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPipelines'</a>, <a>listPipelines_nextToken</a> -
--   An identifier that was returned from the previous list pipelines call.
--   It can be used to return the next set of pipelines in the list.
--   
--   <a>$sel:maxResults:ListPipelines'</a>, <a>listPipelines_maxResults</a>
--   - The maximum number of pipelines to return in a single call. To
--   retrieve the remaining pipelines, make another call with the returned
--   nextToken value. The minimum value you can specify is 1. The maximum
--   accepted value is 1000.
newListPipelines :: ListPipelines

-- | Represents the output of a <tt>ListPipelines</tt> action.
--   
--   <i>See:</i> <a>newListPipelinesResponse</a> smart constructor.
data ListPipelinesResponse
ListPipelinesResponse' :: Maybe [PipelineSummary] -> Maybe Text -> Int -> ListPipelinesResponse

-- | Create a value of <a>ListPipelinesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelines:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_pipelines</a> - The list of pipelines.
--   
--   <a>$sel:nextToken:ListPipelines'</a>,
--   <a>listPipelinesResponse_nextToken</a> - If the amount of returned
--   information is significantly large, an identifier is also returned. It
--   can be used in a subsequent list pipelines call to return the next set
--   of pipelines in the list.
--   
--   <a>$sel:httpStatus:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_httpStatus</a> - The response's http status
--   code.
newListPipelinesResponse :: Int -> ListPipelinesResponse

-- | Represents the input of a <tt>RetryStageExecution</tt> action.
--   
--   <i>See:</i> <a>newRetryStageExecution</a> smart constructor.
data RetryStageExecution
RetryStageExecution' :: Text -> Text -> Text -> StageRetryMode -> RetryStageExecution

-- | Create a value of <a>RetryStageExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:RetryStageExecution'</a>,
--   <a>retryStageExecution_pipelineName</a> - The name of the pipeline
--   that contains the failed stage.
--   
--   <a>$sel:stageName:RetryStageExecution'</a>,
--   <a>retryStageExecution_stageName</a> - The name of the failed stage to
--   be retried.
--   
--   <a>$sel:pipelineExecutionId:RetryStageExecution'</a>,
--   <a>retryStageExecution_pipelineExecutionId</a> - The ID of the
--   pipeline execution in the failed stage to be retried. Use the
--   GetPipelineState action to retrieve the current pipelineExecutionId of
--   the failed stage
--   
--   <a>$sel:retryMode:RetryStageExecution'</a>,
--   <a>retryStageExecution_retryMode</a> - The scope of the retry attempt.
--   Currently, the only supported value is FAILED_ACTIONS.
newRetryStageExecution :: Text -> Text -> Text -> StageRetryMode -> RetryStageExecution

-- | Represents the output of a <tt>RetryStageExecution</tt> action.
--   
--   <i>See:</i> <a>newRetryStageExecutionResponse</a> smart constructor.
data RetryStageExecutionResponse
RetryStageExecutionResponse' :: Maybe Text -> Int -> RetryStageExecutionResponse

-- | Create a value of <a>RetryStageExecutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecutionId:RetryStageExecution'</a>,
--   <a>retryStageExecutionResponse_pipelineExecutionId</a> - The ID of the
--   current workflow execution in the failed stage.
--   
--   <a>$sel:httpStatus:RetryStageExecutionResponse'</a>,
--   <a>retryStageExecutionResponse_httpStatus</a> - The response's http
--   status code.
newRetryStageExecutionResponse :: Int -> RetryStageExecutionResponse

-- | Represents the input of a <tt>GetPipelineExecution</tt> action.
--   
--   <i>See:</i> <a>newGetPipelineExecution</a> smart constructor.
data GetPipelineExecution
GetPipelineExecution' :: Text -> Text -> GetPipelineExecution

-- | Create a value of <a>GetPipelineExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:GetPipelineExecution'</a>,
--   <a>getPipelineExecution_pipelineName</a> - The name of the pipeline
--   about which you want to get execution details.
--   
--   <a>$sel:pipelineExecutionId:GetPipelineExecution'</a>,
--   <a>getPipelineExecution_pipelineExecutionId</a> - The ID of the
--   pipeline execution about which you want to get execution details.
newGetPipelineExecution :: Text -> Text -> GetPipelineExecution

-- | Represents the output of a <tt>GetPipelineExecution</tt> action.
--   
--   <i>See:</i> <a>newGetPipelineExecutionResponse</a> smart constructor.
data GetPipelineExecutionResponse
GetPipelineExecutionResponse' :: Maybe PipelineExecution -> Int -> GetPipelineExecutionResponse

-- | Create a value of <a>GetPipelineExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecution:GetPipelineExecutionResponse'</a>,
--   <a>getPipelineExecutionResponse_pipelineExecution</a> - Represents
--   information about the execution of a pipeline.
--   
--   <a>$sel:httpStatus:GetPipelineExecutionResponse'</a>,
--   <a>getPipelineExecutionResponse_httpStatus</a> - The response's http
--   status code.
newGetPipelineExecutionResponse :: Int -> GetPipelineExecutionResponse

-- | Represents the input of a <tt>PutJobSuccessResult</tt> action.
--   
--   <i>See:</i> <a>newPutJobSuccessResult</a> smart constructor.
data PutJobSuccessResult
PutJobSuccessResult' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe ExecutionDetails -> Maybe CurrentRevision -> Text -> PutJobSuccessResult

-- | Create a value of <a>PutJobSuccessResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputVariables:PutJobSuccessResult'</a>,
--   <a>putJobSuccessResult_outputVariables</a> - Key-value pairs produced
--   as output by a job worker that can be made available to a downstream
--   action configuration. <tt>outputVariables</tt> can be included only
--   when there is no continuation token on the request.
--   
--   <a>$sel:continuationToken:PutJobSuccessResult'</a>,
--   <a>putJobSuccessResult_continuationToken</a> - A token generated by a
--   job worker, such as an AWS CodeDeploy deployment ID, that a successful
--   job provides to identify a custom action in progress. Future jobs use
--   this token to identify the running instance of the action. It can be
--   reused to return more information about the progress of the custom
--   action. When the action is complete, no continuation token should be
--   supplied.
--   
--   <a>$sel:executionDetails:PutJobSuccessResult'</a>,
--   <a>putJobSuccessResult_executionDetails</a> - The execution details of
--   the successful job, such as the actions taken by the job worker.
--   
--   <a>$sel:currentRevision:PutJobSuccessResult'</a>,
--   <a>putJobSuccessResult_currentRevision</a> - The ID of the current
--   revision of the artifact successfully worked on by the job.
--   
--   <a>$sel:jobId:PutJobSuccessResult'</a>,
--   <a>putJobSuccessResult_jobId</a> - The unique system-generated ID of
--   the job that succeeded. This is the same ID returned from
--   <tt>PollForJobs</tt>.
newPutJobSuccessResult :: Text -> PutJobSuccessResult

-- | <i>See:</i> <a>newPutJobSuccessResultResponse</a> smart constructor.
data PutJobSuccessResultResponse
PutJobSuccessResultResponse' :: PutJobSuccessResultResponse

-- | Create a value of <a>PutJobSuccessResultResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutJobSuccessResultResponse :: PutJobSuccessResultResponse

-- | <i>See:</i> <a>newDeregisterWebhookWithThirdParty</a> smart
--   constructor.
data DeregisterWebhookWithThirdParty
DeregisterWebhookWithThirdParty' :: Maybe Text -> DeregisterWebhookWithThirdParty

-- | Create a value of <a>DeregisterWebhookWithThirdParty</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:webhookName:DeregisterWebhookWithThirdParty'</a>,
--   <a>deregisterWebhookWithThirdParty_webhookName</a> - The name of the
--   webhook you want to deregister.
newDeregisterWebhookWithThirdParty :: DeregisterWebhookWithThirdParty

-- | <i>See:</i> <a>newDeregisterWebhookWithThirdPartyResponse</a> smart
--   constructor.
data DeregisterWebhookWithThirdPartyResponse
DeregisterWebhookWithThirdPartyResponse' :: Int -> DeregisterWebhookWithThirdPartyResponse

-- | Create a value of <a>DeregisterWebhookWithThirdPartyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeregisterWebhookWithThirdPartyResponse'</a>,
--   <a>deregisterWebhookWithThirdPartyResponse_httpStatus</a> - The
--   response's http status code.
newDeregisterWebhookWithThirdPartyResponse :: Int -> DeregisterWebhookWithThirdPartyResponse

-- | Represents the input of a <tt>DeleteCustomActionType</tt> operation.
--   The custom action will be marked as deleted.
--   
--   <i>See:</i> <a>newDeleteCustomActionType</a> smart constructor.
data DeleteCustomActionType
DeleteCustomActionType' :: ActionCategory -> Text -> Text -> DeleteCustomActionType

-- | Create a value of <a>DeleteCustomActionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:category:DeleteCustomActionType'</a>,
--   <a>deleteCustomActionType_category</a> - The category of the custom
--   action that you want to delete, such as source or deploy.
--   
--   <a>$sel:provider:DeleteCustomActionType'</a>,
--   <a>deleteCustomActionType_provider</a> - The provider of the service
--   used in the custom action, such as AWS CodeDeploy.
--   
--   <a>$sel:version:DeleteCustomActionType'</a>,
--   <a>deleteCustomActionType_version</a> - The version of the custom
--   action to delete.
newDeleteCustomActionType :: ActionCategory -> Text -> Text -> DeleteCustomActionType

-- | <i>See:</i> <a>newDeleteCustomActionTypeResponse</a> smart
--   constructor.
data DeleteCustomActionTypeResponse
DeleteCustomActionTypeResponse' :: DeleteCustomActionTypeResponse

-- | Create a value of <a>DeleteCustomActionTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCustomActionTypeResponse :: DeleteCustomActionTypeResponse

-- | Represents the input of a <tt>PutActionRevision</tt> action.
--   
--   <i>See:</i> <a>newPutActionRevision</a> smart constructor.
data PutActionRevision
PutActionRevision' :: Text -> Text -> Text -> ActionRevision -> PutActionRevision

-- | Create a value of <a>PutActionRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:PutActionRevision'</a>,
--   <a>putActionRevision_pipelineName</a> - The name of the pipeline that
--   starts processing the revision to the source.
--   
--   <a>$sel:stageName:PutActionRevision'</a>,
--   <a>putActionRevision_stageName</a> - The name of the stage that
--   contains the action that acts on the revision.
--   
--   <a>$sel:actionName:PutActionRevision'</a>,
--   <a>putActionRevision_actionName</a> - The name of the action that
--   processes the revision.
--   
--   <a>$sel:actionRevision:PutActionRevision'</a>,
--   <a>putActionRevision_actionRevision</a> - Represents information about
--   the version (or revision) of an action.
newPutActionRevision :: Text -> Text -> Text -> ActionRevision -> PutActionRevision

-- | Represents the output of a <tt>PutActionRevision</tt> action.
--   
--   <i>See:</i> <a>newPutActionRevisionResponse</a> smart constructor.
data PutActionRevisionResponse
PutActionRevisionResponse' :: Maybe Bool -> Maybe Text -> Int -> PutActionRevisionResponse

-- | Create a value of <a>PutActionRevisionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:newRevision':PutActionRevisionResponse'</a>,
--   <a>putActionRevisionResponse_newRevision</a> - Indicates whether the
--   artifact revision was previously used in an execution of the specified
--   pipeline.
--   
--   <a>$sel:pipelineExecutionId:PutActionRevisionResponse'</a>,
--   <a>putActionRevisionResponse_pipelineExecutionId</a> - The ID of the
--   current workflow state of the pipeline.
--   
--   <a>$sel:httpStatus:PutActionRevisionResponse'</a>,
--   <a>putActionRevisionResponse_httpStatus</a> - The response's http
--   status code.
newPutActionRevisionResponse :: Int -> PutActionRevisionResponse

-- | Represents the input of a <tt>DisableStageTransition</tt> action.
--   
--   <i>See:</i> <a>newDisableStageTransition</a> smart constructor.
data DisableStageTransition
DisableStageTransition' :: Text -> Text -> StageTransitionType -> Text -> DisableStageTransition

-- | Create a value of <a>DisableStageTransition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:DisableStageTransition'</a>,
--   <a>disableStageTransition_pipelineName</a> - The name of the pipeline
--   in which you want to disable the flow of artifacts from one stage to
--   another.
--   
--   <a>$sel:stageName:DisableStageTransition'</a>,
--   <a>disableStageTransition_stageName</a> - The name of the stage where
--   you want to disable the inbound or outbound transition of artifacts.
--   
--   <a>$sel:transitionType:DisableStageTransition'</a>,
--   <a>disableStageTransition_transitionType</a> - Specifies whether
--   artifacts are prevented from transitioning into the stage and being
--   processed by the actions in that stage (inbound), or prevented from
--   transitioning from the stage after they have been processed by the
--   actions in that stage (outbound).
--   
--   <a>$sel:reason:DisableStageTransition'</a>,
--   <a>disableStageTransition_reason</a> - The reason given to the user
--   that a stage is disabled, such as waiting for manual approval or
--   manual tests. This message is displayed in the pipeline console UI.
newDisableStageTransition :: Text -> Text -> StageTransitionType -> Text -> DisableStageTransition

-- | <i>See:</i> <a>newDisableStageTransitionResponse</a> smart
--   constructor.
data DisableStageTransitionResponse
DisableStageTransitionResponse' :: DisableStageTransitionResponse

-- | Create a value of <a>DisableStageTransitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisableStageTransitionResponse :: DisableStageTransitionResponse

-- | <i>See:</i> <a>newUpdateActionType</a> smart constructor.
data UpdateActionType
UpdateActionType' :: ActionTypeDeclaration -> UpdateActionType

-- | Create a value of <a>UpdateActionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionType:UpdateActionType'</a>,
--   <a>updateActionType_actionType</a> - The action type definition for
--   the action type to be updated.
newUpdateActionType :: ActionTypeDeclaration -> UpdateActionType

-- | <i>See:</i> <a>newUpdateActionTypeResponse</a> smart constructor.
data UpdateActionTypeResponse
UpdateActionTypeResponse' :: UpdateActionTypeResponse

-- | Create a value of <a>UpdateActionTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateActionTypeResponse :: UpdateActionTypeResponse

-- | Represents the input of a <tt>ListActionTypes</tt> action.
--   
--   <i>See:</i> <a>newListActionTypes</a> smart constructor.
data ListActionTypes
ListActionTypes' :: Maybe ActionOwner -> Maybe Text -> Maybe Text -> ListActionTypes

-- | Create a value of <a>ListActionTypes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionOwnerFilter:ListActionTypes'</a>,
--   <a>listActionTypes_actionOwnerFilter</a> - Filters the list of action
--   types to those created by a specified entity.
--   
--   <a>$sel:regionFilter:ListActionTypes'</a>,
--   <a>listActionTypes_regionFilter</a> - The Region to filter on for the
--   list of action types.
--   
--   <a>$sel:nextToken:ListActionTypes'</a>,
--   <a>listActionTypes_nextToken</a> - An identifier that was returned
--   from the previous list action types call, which can be used to return
--   the next set of action types in the list.
newListActionTypes :: ListActionTypes

-- | Represents the output of a <tt>ListActionTypes</tt> action.
--   
--   <i>See:</i> <a>newListActionTypesResponse</a> smart constructor.
data ListActionTypesResponse
ListActionTypesResponse' :: Maybe Text -> Int -> [ActionType] -> ListActionTypesResponse

-- | Create a value of <a>ListActionTypesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListActionTypes'</a>,
--   <a>listActionTypesResponse_nextToken</a> - If the amount of returned
--   information is significantly large, an identifier is also returned. It
--   can be used in a subsequent list action types call to return the next
--   set of action types in the list.
--   
--   <a>$sel:httpStatus:ListActionTypesResponse'</a>,
--   <a>listActionTypesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:actionTypes:ListActionTypesResponse'</a>,
--   <a>listActionTypesResponse_actionTypes</a> - Provides details of the
--   action types.
newListActionTypesResponse :: Int -> ListActionTypesResponse

-- | Represents the input of an AcknowledgeJob action.
--   
--   <i>See:</i> <a>newAcknowledgeJob</a> smart constructor.
data AcknowledgeJob
AcknowledgeJob' :: Text -> Text -> AcknowledgeJob

-- | Create a value of <a>AcknowledgeJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:AcknowledgeJob'</a>, <a>acknowledgeJob_jobId</a> - The
--   unique system-generated ID of the job for which you want to confirm
--   receipt.
--   
--   <a>$sel:nonce:AcknowledgeJob'</a>, <a>acknowledgeJob_nonce</a> - A
--   system-generated random number that AWS CodePipeline uses to ensure
--   that the job is being worked on by only one job worker. Get this
--   number from the response of the PollForJobs request that returned this
--   job.
newAcknowledgeJob :: Text -> Text -> AcknowledgeJob

-- | Represents the output of an AcknowledgeJob action.
--   
--   <i>See:</i> <a>newAcknowledgeJobResponse</a> smart constructor.
data AcknowledgeJobResponse
AcknowledgeJobResponse' :: Maybe JobStatus -> Int -> AcknowledgeJobResponse

-- | Create a value of <a>AcknowledgeJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AcknowledgeJobResponse'</a>,
--   <a>acknowledgeJobResponse_status</a> - Whether the job worker has
--   received the specified job.
--   
--   <a>$sel:httpStatus:AcknowledgeJobResponse'</a>,
--   <a>acknowledgeJobResponse_httpStatus</a> - The response's http status
--   code.
newAcknowledgeJobResponse :: Int -> AcknowledgeJobResponse

-- | Represents the input of an <tt>EnableStageTransition</tt> action.
--   
--   <i>See:</i> <a>newEnableStageTransition</a> smart constructor.
data EnableStageTransition
EnableStageTransition' :: Text -> Text -> StageTransitionType -> EnableStageTransition

-- | Create a value of <a>EnableStageTransition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:EnableStageTransition'</a>,
--   <a>enableStageTransition_pipelineName</a> - The name of the pipeline
--   in which you want to enable the flow of artifacts from one stage to
--   another.
--   
--   <a>$sel:stageName:EnableStageTransition'</a>,
--   <a>enableStageTransition_stageName</a> - The name of the stage where
--   you want to enable the transition of artifacts, either into the stage
--   (inbound) or from that stage to the next stage (outbound).
--   
--   <a>$sel:transitionType:EnableStageTransition'</a>,
--   <a>enableStageTransition_transitionType</a> - Specifies whether
--   artifacts are allowed to enter the stage and be processed by the
--   actions in that stage (inbound) or whether already processed artifacts
--   are allowed to transition to the next stage (outbound).
newEnableStageTransition :: Text -> Text -> StageTransitionType -> EnableStageTransition

-- | <i>See:</i> <a>newEnableStageTransitionResponse</a> smart constructor.
data EnableStageTransitionResponse
EnableStageTransitionResponse' :: EnableStageTransitionResponse

-- | Create a value of <a>EnableStageTransitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newEnableStageTransitionResponse :: EnableStageTransitionResponse

-- | <i>See:</i> <a>newDeleteWebhook</a> smart constructor.
data DeleteWebhook
DeleteWebhook' :: Text -> DeleteWebhook

-- | Create a value of <a>DeleteWebhook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteWebhook'</a>, <a>deleteWebhook_name</a> - The name
--   of the webhook you want to delete.
newDeleteWebhook :: Text -> DeleteWebhook

-- | <i>See:</i> <a>newDeleteWebhookResponse</a> smart constructor.
data DeleteWebhookResponse
DeleteWebhookResponse' :: Int -> DeleteWebhookResponse

-- | Create a value of <a>DeleteWebhookResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteWebhookResponse'</a>,
--   <a>deleteWebhookResponse_httpStatus</a> - The response's http status
--   code.
newDeleteWebhookResponse :: Int -> DeleteWebhookResponse

-- | <i>See:</i> <a>newPutWebhook</a> smart constructor.
data PutWebhook
PutWebhook' :: Maybe [Tag] -> WebhookDefinition -> PutWebhook

-- | Create a value of <a>PutWebhook</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PutWebhook'</a>, <a>putWebhook_tags</a> - The tags for
--   the webhook.
--   
--   <a>$sel:webhook:PutWebhook'</a>, <a>putWebhook_webhook</a> - The
--   detail provided in an input file to create the webhook, such as the
--   webhook name, the pipeline name, and the action name. Give the webhook
--   a unique name that helps you identify it. You might name the webhook
--   after the pipeline and action it targets so that you can easily
--   recognize what it's used for later.
newPutWebhook :: WebhookDefinition -> PutWebhook

-- | <i>See:</i> <a>newPutWebhookResponse</a> smart constructor.
data PutWebhookResponse
PutWebhookResponse' :: Maybe ListWebhookItem -> Int -> PutWebhookResponse

-- | Create a value of <a>PutWebhookResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:webhook:PutWebhook'</a>, <a>putWebhookResponse_webhook</a> -
--   The detail returned from creating the webhook, such as the webhook
--   name, webhook URL, and webhook ARN.
--   
--   <a>$sel:httpStatus:PutWebhookResponse'</a>,
--   <a>putWebhookResponse_httpStatus</a> - The response's http status
--   code.
newPutWebhookResponse :: Int -> PutWebhookResponse

-- | <i>See:</i> <a>newListWebhooks</a> smart constructor.
data ListWebhooks
ListWebhooks' :: Maybe Text -> Maybe Natural -> ListWebhooks

-- | Create a value of <a>ListWebhooks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWebhooks'</a>, <a>listWebhooks_nextToken</a> -
--   The token that was returned from the previous ListWebhooks call, which
--   can be used to return the next set of webhooks in the list.
--   
--   <a>$sel:maxResults:ListWebhooks'</a>, <a>listWebhooks_maxResults</a> -
--   The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned nextToken
--   value.
newListWebhooks :: ListWebhooks

-- | <i>See:</i> <a>newListWebhooksResponse</a> smart constructor.
data ListWebhooksResponse
ListWebhooksResponse' :: Maybe Text -> Maybe [ListWebhookItem] -> Int -> ListWebhooksResponse

-- | Create a value of <a>ListWebhooksResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWebhooks'</a>,
--   <a>listWebhooksResponse_nextToken</a> - If the amount of returned
--   information is significantly large, an identifier is also returned and
--   can be used in a subsequent ListWebhooks call to return the next set
--   of webhooks in the list.
--   
--   <a>$sel:webhooks:ListWebhooksResponse'</a>,
--   <a>listWebhooksResponse_webhooks</a> - The JSON detail returned for
--   each webhook in the list output for the ListWebhooks call.
--   
--   <a>$sel:httpStatus:ListWebhooksResponse'</a>,
--   <a>listWebhooksResponse_httpStatus</a> - The response's http status
--   code.
newListWebhooksResponse :: Int -> ListWebhooksResponse

-- | <i>See:</i> <a>newListActionExecutions</a> smart constructor.
data ListActionExecutions
ListActionExecutions' :: Maybe Text -> Maybe ActionExecutionFilter -> Maybe Natural -> Text -> ListActionExecutions

-- | Create a value of <a>ListActionExecutions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListActionExecutions'</a>,
--   <a>listActionExecutions_nextToken</a> - The token that was returned
--   from the previous <tt>ListActionExecutions</tt> call, which can be
--   used to return the next set of action executions in the list.
--   
--   <a>$sel:filter':ListActionExecutions'</a>,
--   <a>listActionExecutions_filter</a> - Input information used to filter
--   action execution history.
--   
--   <a>$sel:maxResults:ListActionExecutions'</a>,
--   <a>listActionExecutions_maxResults</a> - The maximum number of results
--   to return in a single call. To retrieve the remaining results, make
--   another call with the returned nextToken value. Action execution
--   history is retained for up to 12 months, based on action execution
--   start times. Default value is 100.
--   
--   Detailed execution history is available for executions run on or after
--   February 21, 2019.
--   
--   <a>$sel:pipelineName:ListActionExecutions'</a>,
--   <a>listActionExecutions_pipelineName</a> - The name of the pipeline
--   for which you want to list action execution history.
newListActionExecutions :: Text -> ListActionExecutions

-- | <i>See:</i> <a>newListActionExecutionsResponse</a> smart constructor.
data ListActionExecutionsResponse
ListActionExecutionsResponse' :: Maybe [ActionExecutionDetail] -> Maybe Text -> Int -> ListActionExecutionsResponse

-- | Create a value of <a>ListActionExecutionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionExecutionDetails:ListActionExecutionsResponse'</a>,
--   <a>listActionExecutionsResponse_actionExecutionDetails</a> - The
--   details for a list of recent executions, such as action execution ID.
--   
--   <a>$sel:nextToken:ListActionExecutions'</a>,
--   <a>listActionExecutionsResponse_nextToken</a> - If the amount of
--   returned information is significantly large, an identifier is also
--   returned and can be used in a subsequent <tt>ListActionExecutions</tt>
--   call to return the next set of action executions in the list.
--   
--   <a>$sel:httpStatus:ListActionExecutionsResponse'</a>,
--   <a>listActionExecutionsResponse_httpStatus</a> - The response's http
--   status code.
newListActionExecutionsResponse :: Int -> ListActionExecutionsResponse

-- | <i>See:</i> <a>newGetActionType</a> smart constructor.
data GetActionType
GetActionType' :: ActionCategory -> Text -> Text -> Text -> GetActionType

-- | Create a value of <a>GetActionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:category:GetActionType'</a>, <a>getActionType_category</a> -
--   Defines what kind of action can be taken in the stage. The following
--   are the valid values:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
--   
--   <a>$sel:owner:GetActionType'</a>, <a>getActionType_owner</a> - The
--   creator of an action type that was created with any supported
--   integration model. There are two valid values: <tt>AWS</tt> and
--   <tt>ThirdParty</tt>.
--   
--   <a>$sel:provider:GetActionType'</a>, <a>getActionType_provider</a> -
--   The provider of the action type being called. The provider name is
--   specified when the action type is created.
--   
--   <a>$sel:version:GetActionType'</a>, <a>getActionType_version</a> - A
--   string that describes the action type version.
newGetActionType :: ActionCategory -> Text -> Text -> Text -> GetActionType

-- | <i>See:</i> <a>newGetActionTypeResponse</a> smart constructor.
data GetActionTypeResponse
GetActionTypeResponse' :: Maybe ActionTypeDeclaration -> Int -> GetActionTypeResponse

-- | Create a value of <a>GetActionTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionType:GetActionTypeResponse'</a>,
--   <a>getActionTypeResponse_actionType</a> - The action type information
--   for the requested action type, such as the action type ID.
--   
--   <a>$sel:httpStatus:GetActionTypeResponse'</a>,
--   <a>getActionTypeResponse_httpStatus</a> - The response's http status
--   code.
newGetActionTypeResponse :: Int -> GetActionTypeResponse

-- | <i>See:</i> <a>newStopPipelineExecution</a> smart constructor.
data StopPipelineExecution
StopPipelineExecution' :: Maybe Bool -> Maybe Text -> Text -> Text -> StopPipelineExecution

-- | Create a value of <a>StopPipelineExecution</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:abandon:StopPipelineExecution'</a>,
--   <a>stopPipelineExecution_abandon</a> - Use this option to stop the
--   pipeline execution by abandoning, rather than finishing, in-progress
--   actions.
--   
--   This option can lead to failed or out-of-sequence tasks.
--   
--   <a>$sel:reason:StopPipelineExecution'</a>,
--   <a>stopPipelineExecution_reason</a> - Use this option to enter
--   comments, such as the reason the pipeline was stopped.
--   
--   <a>$sel:pipelineName:StopPipelineExecution'</a>,
--   <a>stopPipelineExecution_pipelineName</a> - The name of the pipeline
--   to stop.
--   
--   <a>$sel:pipelineExecutionId:StopPipelineExecution'</a>,
--   <a>stopPipelineExecution_pipelineExecutionId</a> - The ID of the
--   pipeline execution to be stopped in the current stage. Use the
--   <tt>GetPipelineState</tt> action to retrieve the current
--   pipelineExecutionId.
newStopPipelineExecution :: Text -> Text -> StopPipelineExecution

-- | <i>See:</i> <a>newStopPipelineExecutionResponse</a> smart constructor.
data StopPipelineExecutionResponse
StopPipelineExecutionResponse' :: Maybe Text -> Int -> StopPipelineExecutionResponse

-- | Create a value of <a>StopPipelineExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecutionId:StopPipelineExecution'</a>,
--   <a>stopPipelineExecutionResponse_pipelineExecutionId</a> - The unique
--   system-generated ID of the pipeline execution that was stopped.
--   
--   <a>$sel:httpStatus:StopPipelineExecutionResponse'</a>,
--   <a>stopPipelineExecutionResponse_httpStatus</a> - The response's http
--   status code.
newStopPipelineExecutionResponse :: Int -> StopPipelineExecutionResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource you want to add tags
--   to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags you
--   want to modify or add to the resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to remove tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of keys for the tags to be removed from the resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | Represents the input of a <tt>CreatePipeline</tt> action.
--   
--   <i>See:</i> <a>newCreatePipeline</a> smart constructor.
data CreatePipeline
CreatePipeline' :: Maybe [Tag] -> PipelineDeclaration -> CreatePipeline

-- | Create a value of <a>CreatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreatePipeline'</a>, <a>createPipeline_tags</a> - The
--   tags for the pipeline.
--   
--   <a>$sel:pipeline:CreatePipeline'</a>, <a>createPipeline_pipeline</a> -
--   Represents the structure of actions and stages to be performed in the
--   pipeline.
newCreatePipeline :: PipelineDeclaration -> CreatePipeline

-- | Represents the output of a <tt>CreatePipeline</tt> action.
--   
--   <i>See:</i> <a>newCreatePipelineResponse</a> smart constructor.
data CreatePipelineResponse
CreatePipelineResponse' :: Maybe PipelineDeclaration -> Maybe [Tag] -> Int -> CreatePipelineResponse

-- | Create a value of <a>CreatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipeline:CreatePipeline'</a>,
--   <a>createPipelineResponse_pipeline</a> - Represents the structure of
--   actions and stages to be performed in the pipeline.
--   
--   <a>$sel:tags:CreatePipeline'</a>, <a>createPipelineResponse_tags</a> -
--   Specifies the tags applied to the pipeline.
--   
--   <a>$sel:httpStatus:CreatePipelineResponse'</a>,
--   <a>createPipelineResponse_httpStatus</a> - The response's http status
--   code.
newCreatePipelineResponse :: Int -> CreatePipelineResponse

-- | Represents the input of a <tt>GetThirdPartyJobDetails</tt> action.
--   
--   <i>See:</i> <a>newGetThirdPartyJobDetails</a> smart constructor.
data GetThirdPartyJobDetails
GetThirdPartyJobDetails' :: Text -> Text -> GetThirdPartyJobDetails

-- | Create a value of <a>GetThirdPartyJobDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:GetThirdPartyJobDetails'</a>,
--   <a>getThirdPartyJobDetails_jobId</a> - The unique system-generated ID
--   used for identifying the job.
--   
--   <a>$sel:clientToken:GetThirdPartyJobDetails'</a>,
--   <a>getThirdPartyJobDetails_clientToken</a> - The clientToken portion
--   of the clientId and clientToken pair used to verify that the calling
--   entity is allowed access to the job and its details.
newGetThirdPartyJobDetails :: Text -> Text -> GetThirdPartyJobDetails

-- | Represents the output of a <tt>GetThirdPartyJobDetails</tt> action.
--   
--   <i>See:</i> <a>newGetThirdPartyJobDetailsResponse</a> smart
--   constructor.
data GetThirdPartyJobDetailsResponse
GetThirdPartyJobDetailsResponse' :: Maybe ThirdPartyJobDetails -> Int -> GetThirdPartyJobDetailsResponse

-- | Create a value of <a>GetThirdPartyJobDetailsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobDetails:GetThirdPartyJobDetailsResponse'</a>,
--   <a>getThirdPartyJobDetailsResponse_jobDetails</a> - The details of the
--   job, including any protected values defined for the job.
--   
--   <a>$sel:httpStatus:GetThirdPartyJobDetailsResponse'</a>,
--   <a>getThirdPartyJobDetailsResponse_httpStatus</a> - The response's
--   http status code.
newGetThirdPartyJobDetailsResponse :: Int -> GetThirdPartyJobDetailsResponse

-- | Represents the input of a <tt>PutThirdPartyJobSuccessResult</tt>
--   action.
--   
--   <i>See:</i> <a>newPutThirdPartyJobSuccessResult</a> smart constructor.
data PutThirdPartyJobSuccessResult
PutThirdPartyJobSuccessResult' :: Maybe Text -> Maybe ExecutionDetails -> Maybe CurrentRevision -> Text -> Text -> PutThirdPartyJobSuccessResult

-- | Create a value of <a>PutThirdPartyJobSuccessResult</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:continuationToken:PutThirdPartyJobSuccessResult'</a>,
--   <a>putThirdPartyJobSuccessResult_continuationToken</a> - A token
--   generated by a job worker, such as an AWS CodeDeploy deployment ID,
--   that a successful job provides to identify a partner action in
--   progress. Future jobs use this token to identify the running instance
--   of the action. It can be reused to return more information about the
--   progress of the partner action. When the action is complete, no
--   continuation token should be supplied.
--   
--   <a>$sel:executionDetails:PutThirdPartyJobSuccessResult'</a>,
--   <a>putThirdPartyJobSuccessResult_executionDetails</a> - The details of
--   the actions taken and results produced on an artifact as it passes
--   through stages in the pipeline.
--   
--   <a>$sel:currentRevision:PutThirdPartyJobSuccessResult'</a>,
--   <a>putThirdPartyJobSuccessResult_currentRevision</a> - Represents
--   information about a current revision.
--   
--   <a>$sel:jobId:PutThirdPartyJobSuccessResult'</a>,
--   <a>putThirdPartyJobSuccessResult_jobId</a> - The ID of the job that
--   successfully completed. This is the same ID returned from
--   <tt>PollForThirdPartyJobs</tt>.
--   
--   <a>$sel:clientToken:PutThirdPartyJobSuccessResult'</a>,
--   <a>putThirdPartyJobSuccessResult_clientToken</a> - The clientToken
--   portion of the clientId and clientToken pair used to verify that the
--   calling entity is allowed access to the job and its details.
newPutThirdPartyJobSuccessResult :: Text -> Text -> PutThirdPartyJobSuccessResult

-- | <i>See:</i> <a>newPutThirdPartyJobSuccessResultResponse</a> smart
--   constructor.
data PutThirdPartyJobSuccessResultResponse
PutThirdPartyJobSuccessResultResponse' :: PutThirdPartyJobSuccessResultResponse

-- | Create a value of <a>PutThirdPartyJobSuccessResultResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutThirdPartyJobSuccessResultResponse :: PutThirdPartyJobSuccessResultResponse

-- | Represents the input of a CreateCustomActionType operation.
--   
--   <i>See:</i> <a>newCreateCustomActionType</a> smart constructor.
data CreateCustomActionType
CreateCustomActionType' :: Maybe ActionTypeSettings -> Maybe [ActionConfigurationProperty] -> Maybe [Tag] -> ActionCategory -> Text -> Text -> ArtifactDetails -> ArtifactDetails -> CreateCustomActionType

-- | Create a value of <a>CreateCustomActionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:settings:CreateCustomActionType'</a>,
--   <a>createCustomActionType_settings</a> - URLs that provide users
--   information about this custom action.
--   
--   <a>$sel:configurationProperties:CreateCustomActionType'</a>,
--   <a>createCustomActionType_configurationProperties</a> - The
--   configuration properties for the custom action.
--   
--   You can refer to a name in the configuration properties of the custom
--   action within the URL templates by following the format of
--   {Config:name}, as long as the configuration property is both required
--   and not secret. For more information, see <a>Create a Custom Action
--   for a Pipeline</a>.
--   
--   <a>$sel:tags:CreateCustomActionType'</a>,
--   <a>createCustomActionType_tags</a> - The tags for the custom action.
--   
--   <a>$sel:category:CreateCustomActionType'</a>,
--   <a>createCustomActionType_category</a> - The category of the custom
--   action, such as a build action or a test action.
--   
--   <a>$sel:provider:CreateCustomActionType'</a>,
--   <a>createCustomActionType_provider</a> - The provider of the service
--   used in the custom action, such as AWS CodeDeploy.
--   
--   <a>$sel:version:CreateCustomActionType'</a>,
--   <a>createCustomActionType_version</a> - The version identifier of the
--   custom action.
--   
--   <a>$sel:inputArtifactDetails:CreateCustomActionType'</a>,
--   <a>createCustomActionType_inputArtifactDetails</a> - The details of
--   the input artifact for the action, such as its commit ID.
--   
--   <a>$sel:outputArtifactDetails:CreateCustomActionType'</a>,
--   <a>createCustomActionType_outputArtifactDetails</a> - The details of
--   the output artifact of the action, such as its commit ID.
newCreateCustomActionType :: ActionCategory -> Text -> Text -> ArtifactDetails -> ArtifactDetails -> CreateCustomActionType

-- | Represents the output of a <tt>CreateCustomActionType</tt> operation.
--   
--   <i>See:</i> <a>newCreateCustomActionTypeResponse</a> smart
--   constructor.
data CreateCustomActionTypeResponse
CreateCustomActionTypeResponse' :: Maybe [Tag] -> Int -> ActionType -> CreateCustomActionTypeResponse

-- | Create a value of <a>CreateCustomActionTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateCustomActionType'</a>,
--   <a>createCustomActionTypeResponse_tags</a> - Specifies the tags
--   applied to the custom action.
--   
--   <a>$sel:httpStatus:CreateCustomActionTypeResponse'</a>,
--   <a>createCustomActionTypeResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:actionType:CreateCustomActionTypeResponse'</a>,
--   <a>createCustomActionTypeResponse_actionType</a> - Returns information
--   about the details of an action type.
newCreateCustomActionTypeResponse :: Int -> ActionType -> CreateCustomActionTypeResponse

-- | Represents the input of a <tt>ListPipelineExecutions</tt> action.
--   
--   <i>See:</i> <a>newListPipelineExecutions</a> smart constructor.
data ListPipelineExecutions
ListPipelineExecutions' :: Maybe Text -> Maybe Natural -> Text -> ListPipelineExecutions

-- | Create a value of <a>ListPipelineExecutions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPipelineExecutions'</a>,
--   <a>listPipelineExecutions_nextToken</a> - The token that was returned
--   from the previous <tt>ListPipelineExecutions</tt> call, which can be
--   used to return the next set of pipeline executions in the list.
--   
--   <a>$sel:maxResults:ListPipelineExecutions'</a>,
--   <a>listPipelineExecutions_maxResults</a> - The maximum number of
--   results to return in a single call. To retrieve the remaining results,
--   make another call with the returned nextToken value. Pipeline history
--   is limited to the most recent 12 months, based on pipeline execution
--   start times. Default value is 100.
--   
--   <a>$sel:pipelineName:ListPipelineExecutions'</a>,
--   <a>listPipelineExecutions_pipelineName</a> - The name of the pipeline
--   for which you want to get execution summary information.
newListPipelineExecutions :: Text -> ListPipelineExecutions

-- | Represents the output of a <tt>ListPipelineExecutions</tt> action.
--   
--   <i>See:</i> <a>newListPipelineExecutionsResponse</a> smart
--   constructor.
data ListPipelineExecutionsResponse
ListPipelineExecutionsResponse' :: Maybe Text -> Maybe [PipelineExecutionSummary] -> Int -> ListPipelineExecutionsResponse

-- | Create a value of <a>ListPipelineExecutionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPipelineExecutions'</a>,
--   <a>listPipelineExecutionsResponse_nextToken</a> - A token that can be
--   used in the next <tt>ListPipelineExecutions</tt> call. To view all
--   items in the list, continue to call this operation with each
--   subsequent token until no more nextToken values are returned.
--   
--   
--   <a>$sel:pipelineExecutionSummaries:ListPipelineExecutionsResponse'</a>,
--   <a>listPipelineExecutionsResponse_pipelineExecutionSummaries</a> - A
--   list of executions in the history of a pipeline.
--   
--   <a>$sel:httpStatus:ListPipelineExecutionsResponse'</a>,
--   <a>listPipelineExecutionsResponse_httpStatus</a> - The response's http
--   status code.
newListPipelineExecutionsResponse :: Int -> ListPipelineExecutionsResponse
newtype ActionCategory
ActionCategory' :: Text -> ActionCategory
[fromActionCategory] :: ActionCategory -> Text
pattern ActionCategory_Approval :: ActionCategory
pattern ActionCategory_Build :: ActionCategory
pattern ActionCategory_Deploy :: ActionCategory
pattern ActionCategory_Invoke :: ActionCategory
pattern ActionCategory_Source :: ActionCategory
pattern ActionCategory_Test :: ActionCategory
newtype ActionConfigurationPropertyType
ActionConfigurationPropertyType' :: Text -> ActionConfigurationPropertyType
[fromActionConfigurationPropertyType] :: ActionConfigurationPropertyType -> Text
pattern ActionConfigurationPropertyType_Boolean :: ActionConfigurationPropertyType
pattern ActionConfigurationPropertyType_Number :: ActionConfigurationPropertyType
pattern ActionConfigurationPropertyType_String :: ActionConfigurationPropertyType
newtype ActionExecutionStatus
ActionExecutionStatus' :: Text -> ActionExecutionStatus
[fromActionExecutionStatus] :: ActionExecutionStatus -> Text
pattern ActionExecutionStatus_Abandoned :: ActionExecutionStatus
pattern ActionExecutionStatus_Failed :: ActionExecutionStatus
pattern ActionExecutionStatus_InProgress :: ActionExecutionStatus
pattern ActionExecutionStatus_Succeeded :: ActionExecutionStatus
newtype ActionOwner
ActionOwner' :: Text -> ActionOwner
[fromActionOwner] :: ActionOwner -> Text
pattern ActionOwner_AWS :: ActionOwner
pattern ActionOwner_Custom :: ActionOwner
pattern ActionOwner_ThirdParty :: ActionOwner
newtype ApprovalStatus
ApprovalStatus' :: Text -> ApprovalStatus
[fromApprovalStatus] :: ApprovalStatus -> Text
pattern ApprovalStatus_Approved :: ApprovalStatus
pattern ApprovalStatus_Rejected :: ApprovalStatus
newtype ArtifactLocationType
ArtifactLocationType' :: Text -> ArtifactLocationType
[fromArtifactLocationType] :: ArtifactLocationType -> Text
pattern ArtifactLocationType_S3 :: ArtifactLocationType
newtype ArtifactStoreType
ArtifactStoreType' :: Text -> ArtifactStoreType
[fromArtifactStoreType] :: ArtifactStoreType -> Text
pattern ArtifactStoreType_S3 :: ArtifactStoreType
newtype BlockerType
BlockerType' :: Text -> BlockerType
[fromBlockerType] :: BlockerType -> Text
pattern BlockerType_Schedule :: BlockerType
newtype EncryptionKeyType
EncryptionKeyType' :: Text -> EncryptionKeyType
[fromEncryptionKeyType] :: EncryptionKeyType -> Text
pattern EncryptionKeyType_KMS :: EncryptionKeyType
newtype ExecutorType
ExecutorType' :: Text -> ExecutorType
[fromExecutorType] :: ExecutorType -> Text
pattern ExecutorType_JobWorker :: ExecutorType
pattern ExecutorType_Lambda :: ExecutorType
newtype FailureType
FailureType' :: Text -> FailureType
[fromFailureType] :: FailureType -> Text
pattern FailureType_ConfigurationError :: FailureType
pattern FailureType_JobFailed :: FailureType
pattern FailureType_PermissionError :: FailureType
pattern FailureType_RevisionOutOfSync :: FailureType
pattern FailureType_RevisionUnavailable :: FailureType
pattern FailureType_SystemUnavailable :: FailureType
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_Created :: JobStatus
pattern JobStatus_Dispatched :: JobStatus
pattern JobStatus_Failed :: JobStatus
pattern JobStatus_InProgress :: JobStatus
pattern JobStatus_Queued :: JobStatus
pattern JobStatus_Succeeded :: JobStatus
pattern JobStatus_TimedOut :: JobStatus
newtype PipelineExecutionStatus
PipelineExecutionStatus' :: Text -> PipelineExecutionStatus
[fromPipelineExecutionStatus] :: PipelineExecutionStatus -> Text
pattern PipelineExecutionStatus_Cancelled :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Failed :: PipelineExecutionStatus
pattern PipelineExecutionStatus_InProgress :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Stopped :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Stopping :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Succeeded :: PipelineExecutionStatus
pattern PipelineExecutionStatus_Superseded :: PipelineExecutionStatus
newtype StageExecutionStatus
StageExecutionStatus' :: Text -> StageExecutionStatus
[fromStageExecutionStatus] :: StageExecutionStatus -> Text
pattern StageExecutionStatus_Cancelled :: StageExecutionStatus
pattern StageExecutionStatus_Failed :: StageExecutionStatus
pattern StageExecutionStatus_InProgress :: StageExecutionStatus
pattern StageExecutionStatus_Stopped :: StageExecutionStatus
pattern StageExecutionStatus_Stopping :: StageExecutionStatus
pattern StageExecutionStatus_Succeeded :: StageExecutionStatus
newtype StageRetryMode
StageRetryMode' :: Text -> StageRetryMode
[fromStageRetryMode] :: StageRetryMode -> Text
pattern StageRetryMode_FAILED_ACTIONS :: StageRetryMode
newtype StageTransitionType
StageTransitionType' :: Text -> StageTransitionType
[fromStageTransitionType] :: StageTransitionType -> Text
pattern StageTransitionType_Inbound :: StageTransitionType
pattern StageTransitionType_Outbound :: StageTransitionType
newtype TriggerType
TriggerType' :: Text -> TriggerType
[fromTriggerType] :: TriggerType -> Text
pattern TriggerType_CloudWatchEvent :: TriggerType
pattern TriggerType_CreatePipeline :: TriggerType
pattern TriggerType_PollForSourceChanges :: TriggerType
pattern TriggerType_PutActionRevision :: TriggerType
pattern TriggerType_StartPipelineExecution :: TriggerType
pattern TriggerType_Webhook :: TriggerType
newtype WebhookAuthenticationType
WebhookAuthenticationType' :: Text -> WebhookAuthenticationType
[fromWebhookAuthenticationType] :: WebhookAuthenticationType -> Text
pattern WebhookAuthenticationType_GITHUB_HMAC :: WebhookAuthenticationType
pattern WebhookAuthenticationType_IP :: WebhookAuthenticationType
pattern WebhookAuthenticationType_UNAUTHENTICATED :: WebhookAuthenticationType

-- | Represents an AWS session credentials object. These credentials are
--   temporary credentials that are issued by AWS Secure Token Service
--   (STS). They can be used to access input and output artifacts in the S3
--   bucket used to store artifact for the pipeline in AWS CodePipeline.
--   
--   <i>See:</i> <a>newAWSSessionCredentials</a> smart constructor.
data AWSSessionCredentials
AWSSessionCredentials' :: Sensitive Text -> Sensitive Text -> Sensitive Text -> AWSSessionCredentials

-- | Create a value of <a>AWSSessionCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessKeyId:AWSSessionCredentials'</a>,
--   <a>aWSSessionCredentials_accessKeyId</a> - The access key for the
--   session.
--   
--   <a>$sel:secretAccessKey:AWSSessionCredentials'</a>,
--   <a>aWSSessionCredentials_secretAccessKey</a> - The secret access key
--   for the session.
--   
--   <a>$sel:sessionToken:AWSSessionCredentials'</a>,
--   <a>aWSSessionCredentials_sessionToken</a> - The token for the session.
newAWSSessionCredentials :: Text -> Text -> Text -> AWSSessionCredentials

-- | Represents information about an action configuration.
--   
--   <i>See:</i> <a>newActionConfiguration</a> smart constructor.
data ActionConfiguration
ActionConfiguration' :: Maybe (HashMap Text Text) -> ActionConfiguration

-- | Create a value of <a>ActionConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:ActionConfiguration'</a>,
--   <a>actionConfiguration_configuration</a> - The configuration data for
--   the action.
newActionConfiguration :: ActionConfiguration

-- | Represents information about an action configuration property.
--   
--   <i>See:</i> <a>newActionConfigurationProperty</a> smart constructor.
data ActionConfigurationProperty
ActionConfigurationProperty' :: Maybe Bool -> Maybe ActionConfigurationPropertyType -> Maybe Text -> Text -> Bool -> Bool -> Bool -> ActionConfigurationProperty

-- | Create a value of <a>ActionConfigurationProperty</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryable:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_queryable</a> - Indicates that the
--   property is used with <tt>PollForJobs</tt>. When creating a custom
--   action, an action can have up to one queryable property. If it has
--   one, that property must be both required and not secret.
--   
--   If you create a pipeline with a custom action type, and that custom
--   action contains a queryable property, the value for that configuration
--   property is subject to other restrictions. The value must be less than
--   or equal to twenty (20) characters. The value can contain only
--   alphanumeric characters, underscores, and hyphens.
--   
--   <a>$sel:type':ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_type</a> - The type of the
--   configuration property.
--   
--   <a>$sel:description:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_description</a> - The description of
--   the action configuration property that is displayed to users.
--   
--   <a>$sel:name:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_name</a> - The name of the action
--   configuration property.
--   
--   <a>$sel:required:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_required</a> - Whether the
--   configuration property is a required value.
--   
--   <a>$sel:key:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_key</a> - Whether the configuration
--   property is a key.
--   
--   <a>$sel:secret:ActionConfigurationProperty'</a>,
--   <a>actionConfigurationProperty_secret</a> - Whether the configuration
--   property is secret. Secrets are hidden from all calls except for
--   <tt>GetJobDetails</tt>, <tt>GetThirdPartyJobDetails</tt>,
--   <tt>PollForJobs</tt>, and <tt>PollForThirdPartyJobs</tt>.
--   
--   When updating a pipeline, passing * * * * * without changing any other
--   values of the action preserves the previous value of the secret.
newActionConfigurationProperty :: Text -> Bool -> Bool -> Bool -> ActionConfigurationProperty

-- | Represents the context of an action in the stage of a pipeline to a
--   job worker.
--   
--   <i>See:</i> <a>newActionContext</a> smart constructor.
data ActionContext
ActionContext' :: Maybe Text -> Maybe Text -> ActionContext

-- | Create a value of <a>ActionContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ActionContext'</a>, <a>actionContext_name</a> - The name
--   of the action in the context of a job.
--   
--   <a>$sel:actionExecutionId:ActionContext'</a>,
--   <a>actionContext_actionExecutionId</a> - The system-generated unique
--   ID that corresponds to an action's execution.
newActionContext :: ActionContext

-- | Represents information about an action declaration.
--   
--   <i>See:</i> <a>newActionDeclaration</a> smart constructor.
data ActionDeclaration
ActionDeclaration' :: Maybe [OutputArtifact] -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe [InputArtifact] -> Maybe Text -> Text -> ActionTypeId -> ActionDeclaration

-- | Create a value of <a>ActionDeclaration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputArtifacts:ActionDeclaration'</a>,
--   <a>actionDeclaration_outputArtifacts</a> - The name or ID of the
--   result of the action declaration, such as a test or build artifact.
--   
--   <a>$sel:namespace:ActionDeclaration'</a>,
--   <a>actionDeclaration_namespace</a> - The variable namespace associated
--   with the action. All variables produced as output by this action fall
--   under this namespace.
--   
--   <a>$sel:runOrder:ActionDeclaration'</a>,
--   <a>actionDeclaration_runOrder</a> - The order in which actions are
--   run.
--   
--   <a>$sel:region:ActionDeclaration'</a>, <a>actionDeclaration_region</a>
--   - The action declaration's AWS Region, such as us-east-1.
--   
--   <a>$sel:configuration:ActionDeclaration'</a>,
--   <a>actionDeclaration_configuration</a> - The action's configuration.
--   These are key-value pairs that specify input values for an action. For
--   more information, see <a>Action Structure Requirements in
--   CodePipeline</a>. For the list of configuration properties for the AWS
--   CloudFormation action type in CodePipeline, see <a>Configuration
--   Properties Reference</a> in the <i>AWS CloudFormation User Guide</i>.
--   For template snippets with examples, see <a>Using Parameter Override
--   Functions with CodePipeline Pipelines</a> in the <i>AWS CloudFormation
--   User Guide</i>.
--   
--   The values can be represented in either JSON or YAML format. For
--   example, the JSON configuration item format is as follows:
--   
--   <i>JSON:</i>
--   
--   <pre>
--   "Configuration" : { Key : Value },
--   </pre>
--   
--   <a>$sel:inputArtifacts:ActionDeclaration'</a>,
--   <a>actionDeclaration_inputArtifacts</a> - The name or ID of the
--   artifact consumed by the action, such as a test or build artifact.
--   
--   <a>$sel:roleArn:ActionDeclaration'</a>,
--   <a>actionDeclaration_roleArn</a> - The ARN of the IAM service role
--   that performs the declared action. This is assumed through the roleArn
--   for the pipeline.
--   
--   <a>$sel:name:ActionDeclaration'</a>, <a>actionDeclaration_name</a> -
--   The action declaration's name.
--   
--   <a>$sel:actionTypeId:ActionDeclaration'</a>,
--   <a>actionDeclaration_actionTypeId</a> - Specifies the action type and
--   the provider of the action.
newActionDeclaration :: Text -> ActionTypeId -> ActionDeclaration

-- | Represents information about the run of an action.
--   
--   <i>See:</i> <a>newActionExecution</a> smart constructor.
data ActionExecution
ActionExecution' :: Maybe Text -> Maybe Text -> Maybe ActionExecutionStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ErrorDetails -> Maybe Natural -> Maybe Text -> ActionExecution

-- | Create a value of <a>ActionExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedBy:ActionExecution'</a>,
--   <a>actionExecution_lastUpdatedBy</a> - The ARN of the user who last
--   changed the pipeline.
--   
--   <a>$sel:summary:ActionExecution'</a>, <a>actionExecution_summary</a> -
--   A summary of the run of the action.
--   
--   <a>$sel:status:ActionExecution'</a>, <a>actionExecution_status</a> -
--   The status of the action, or for a completed action, the last status
--   of the action.
--   
--   <a>$sel:lastStatusChange:ActionExecution'</a>,
--   <a>actionExecution_lastStatusChange</a> - The last status change of
--   the action.
--   
--   <a>$sel:token:ActionExecution'</a>, <a>actionExecution_token</a> - The
--   system-generated token used to identify a unique approval request. The
--   token for each open approval request can be obtained using the
--   <tt>GetPipelineState</tt> command. It is used to validate that the
--   approval request corresponding to this token is still valid.
--   
--   <a>$sel:externalExecutionUrl:ActionExecution'</a>,
--   <a>actionExecution_externalExecutionUrl</a> - The URL of a resource
--   external to AWS that is used when running the action (for example, an
--   external repository URL).
--   
--   <a>$sel:externalExecutionId:ActionExecution'</a>,
--   <a>actionExecution_externalExecutionId</a> - The external ID of the
--   run of the action.
--   
--   <a>$sel:errorDetails:ActionExecution'</a>,
--   <a>actionExecution_errorDetails</a> - The details of an error returned
--   by a URL external to AWS.
--   
--   <a>$sel:percentComplete:ActionExecution'</a>,
--   <a>actionExecution_percentComplete</a> - A percentage of completeness
--   of the action as it runs.
--   
--   <a>$sel:actionExecutionId:ActionExecution'</a>,
--   <a>actionExecution_actionExecutionId</a> - ID of the workflow action
--   execution in the current stage. Use the GetPipelineState action to
--   retrieve the current action execution details of the current stage.
--   
--   For older executions, this field might be empty. The action execution
--   ID is available for executions run on or after March 2020.
newActionExecution :: ActionExecution

-- | Returns information about an execution of an action, including the
--   action execution ID, and the name, version, and timing of the action.
--   
--   <i>See:</i> <a>newActionExecutionDetail</a> smart constructor.
data ActionExecutionDetail
ActionExecutionDetail' :: Maybe ActionExecutionStatus -> Maybe POSIX -> Maybe Natural -> Maybe ActionExecutionInput -> Maybe Text -> Maybe ActionExecutionOutput -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> ActionExecutionDetail

-- | Create a value of <a>ActionExecutionDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_status</a> - The status of the action
--   execution. Status categories are <tt>InProgress</tt>,
--   <tt>Succeeded</tt>, and <tt>Failed</tt>.
--   
--   <a>$sel:startTime:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_startTime</a> - The start time of the action
--   execution.
--   
--   <a>$sel:pipelineVersion:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_pipelineVersion</a> - The version of the
--   pipeline where the action was run.
--   
--   <a>$sel:input:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_input</a> - Input details for the action
--   execution, such as role ARN, Region, and input artifacts.
--   
--   <a>$sel:actionName:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_actionName</a> - The name of the action.
--   
--   <a>$sel:output:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_output</a> - Output details for the action
--   execution, such as the action execution result.
--   
--   <a>$sel:pipelineExecutionId:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_pipelineExecutionId</a> - The pipeline
--   execution ID for the action execution.
--   
--   <a>$sel:stageName:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_stageName</a> - The name of the stage that
--   contains the action.
--   
--   <a>$sel:lastUpdateTime:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_lastUpdateTime</a> - The last update time of
--   the action execution.
--   
--   <a>$sel:actionExecutionId:ActionExecutionDetail'</a>,
--   <a>actionExecutionDetail_actionExecutionId</a> - The action execution
--   ID.
newActionExecutionDetail :: ActionExecutionDetail

-- | Filter values for the action execution.
--   
--   <i>See:</i> <a>newActionExecutionFilter</a> smart constructor.
data ActionExecutionFilter
ActionExecutionFilter' :: Maybe Text -> ActionExecutionFilter

-- | Create a value of <a>ActionExecutionFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecutionId:ActionExecutionFilter'</a>,
--   <a>actionExecutionFilter_pipelineExecutionId</a> - The pipeline
--   execution ID used to filter action execution history.
newActionExecutionFilter :: ActionExecutionFilter

-- | Input information used for an action execution.
--   
--   <i>See:</i> <a>newActionExecutionInput</a> smart constructor.
data ActionExecutionInput
ActionExecutionInput' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ActionTypeId -> Maybe [ArtifactDetail] -> Maybe Text -> ActionExecutionInput

-- | Create a value of <a>ActionExecutionInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_namespace</a> - The variable namespace
--   associated with the action. All variables produced as output by this
--   action fall under this namespace.
--   
--   <a>$sel:resolvedConfiguration:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_resolvedConfiguration</a> - Configuration data
--   for an action execution with all variable references replaced with
--   their real values for the execution.
--   
--   <a>$sel:region:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_region</a> - The AWS Region for the action,
--   such as us-east-1.
--   
--   <a>$sel:configuration:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_configuration</a> - Configuration data for an
--   action execution.
--   
--   <a>$sel:actionTypeId:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_actionTypeId</a> - Undocumented member.
--   
--   <a>$sel:inputArtifacts:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_inputArtifacts</a> - Details of input
--   artifacts of the action that correspond to the action execution.
--   
--   <a>$sel:roleArn:ActionExecutionInput'</a>,
--   <a>actionExecutionInput_roleArn</a> - The ARN of the IAM service role
--   that performs the declared action. This is assumed through the roleArn
--   for the pipeline.
newActionExecutionInput :: ActionExecutionInput

-- | Output details listed for an action execution, such as the action
--   execution result.
--   
--   <i>See:</i> <a>newActionExecutionOutput</a> smart constructor.
data ActionExecutionOutput
ActionExecutionOutput' :: Maybe (HashMap Text Text) -> Maybe [ArtifactDetail] -> Maybe ActionExecutionResult -> ActionExecutionOutput

-- | Create a value of <a>ActionExecutionOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputVariables:ActionExecutionOutput'</a>,
--   <a>actionExecutionOutput_outputVariables</a> - The outputVariables
--   field shows the key-value pairs that were output as part of that
--   execution.
--   
--   <a>$sel:outputArtifacts:ActionExecutionOutput'</a>,
--   <a>actionExecutionOutput_outputArtifacts</a> - Details of output
--   artifacts of the action that correspond to the action execution.
--   
--   <a>$sel:executionResult:ActionExecutionOutput'</a>,
--   <a>actionExecutionOutput_executionResult</a> - Execution result
--   information listed in the output details for an action execution.
newActionExecutionOutput :: ActionExecutionOutput

-- | Execution result information, such as the external execution ID.
--   
--   <i>See:</i> <a>newActionExecutionResult</a> smart constructor.
data ActionExecutionResult
ActionExecutionResult' :: Maybe Text -> Maybe Text -> Maybe Text -> ActionExecutionResult

-- | Create a value of <a>ActionExecutionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalExecutionUrl:ActionExecutionResult'</a>,
--   <a>actionExecutionResult_externalExecutionUrl</a> - The deepest
--   external link to the external resource (for example, a repository URL
--   or deployment endpoint) that is used when running the action.
--   
--   <a>$sel:externalExecutionId:ActionExecutionResult'</a>,
--   <a>actionExecutionResult_externalExecutionId</a> - The action
--   provider's external ID for the action execution.
--   
--   <a>$sel:externalExecutionSummary:ActionExecutionResult'</a>,
--   <a>actionExecutionResult_externalExecutionSummary</a> - The action
--   provider's summary for the action execution.
newActionExecutionResult :: ActionExecutionResult

-- | Represents information about the version (or revision) of an action.
--   
--   <i>See:</i> <a>newActionRevision</a> smart constructor.
data ActionRevision
ActionRevision' :: Text -> Text -> POSIX -> ActionRevision

-- | Create a value of <a>ActionRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionId:ActionRevision'</a>,
--   <a>actionRevision_revisionId</a> - The system-generated unique ID that
--   identifies the revision number of the action.
--   
--   <a>$sel:revisionChangeId:ActionRevision'</a>,
--   <a>actionRevision_revisionChangeId</a> - The unique identifier of the
--   change that set the state to this revision (for example, a deployment
--   ID or timestamp).
--   
--   <a>$sel:created:ActionRevision'</a>, <a>actionRevision_created</a> -
--   The date and time when the most recent version of the action was
--   created, in timestamp format.
newActionRevision :: Text -> Text -> UTCTime -> ActionRevision

-- | Represents information about the state of an action.
--   
--   <i>See:</i> <a>newActionState</a> smart constructor.
data ActionState
ActionState' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ActionRevision -> Maybe ActionExecution -> ActionState

-- | Create a value of <a>ActionState</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionUrl:ActionState'</a>, <a>actionState_revisionUrl</a> -
--   A URL link for more information about the revision, such as a commit
--   details page.
--   
--   <a>$sel:entityUrl:ActionState'</a>, <a>actionState_entityUrl</a> - A
--   URL link for more information about the state of the action, such as a
--   deployment group details page.
--   
--   <a>$sel:actionName:ActionState'</a>, <a>actionState_actionName</a> -
--   The name of the action.
--   
--   <a>$sel:currentRevision:ActionState'</a>,
--   <a>actionState_currentRevision</a> - Represents information about the
--   version (or revision) of an action.
--   
--   <a>$sel:latestExecution:ActionState'</a>,
--   <a>actionState_latestExecution</a> - Represents information about the
--   run of an action.
newActionState :: ActionState

-- | Returns information about the details of an action type.
--   
--   <i>See:</i> <a>newActionType</a> smart constructor.
data ActionType
ActionType' :: Maybe ActionTypeSettings -> Maybe [ActionConfigurationProperty] -> ActionTypeId -> ArtifactDetails -> ArtifactDetails -> ActionType

-- | Create a value of <a>ActionType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:settings:ActionType'</a>, <a>actionType_settings</a> - The
--   settings for the action type.
--   
--   <a>$sel:actionConfigurationProperties:ActionType'</a>,
--   <a>actionType_actionConfigurationProperties</a> - The configuration
--   properties for the action type.
--   
--   <a>$sel:id:ActionType'</a>, <a>actionType_id</a> - Represents
--   information about an action type.
--   
--   <a>$sel:inputArtifactDetails:ActionType'</a>,
--   <a>actionType_inputArtifactDetails</a> - The details of the input
--   artifact for the action, such as its commit ID.
--   
--   <a>$sel:outputArtifactDetails:ActionType'</a>,
--   <a>actionType_outputArtifactDetails</a> - The details of the output
--   artifact of the action, such as its commit ID.
newActionType :: ActionTypeId -> ArtifactDetails -> ArtifactDetails -> ActionType

-- | Information about parameters for artifacts associated with the action
--   type, such as the minimum and maximum artifacts allowed.
--   
--   <i>See:</i> <a>newActionTypeArtifactDetails</a> smart constructor.
data ActionTypeArtifactDetails
ActionTypeArtifactDetails' :: Natural -> Natural -> ActionTypeArtifactDetails

-- | Create a value of <a>ActionTypeArtifactDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCount:ActionTypeArtifactDetails'</a>,
--   <a>actionTypeArtifactDetails_minimumCount</a> - The minimum number of
--   artifacts that can be used with the action type. For example, you
--   should specify a minimum and maximum of zero input artifacts for an
--   action type with a category of <tt>source</tt>.
--   
--   <a>$sel:maximumCount:ActionTypeArtifactDetails'</a>,
--   <a>actionTypeArtifactDetails_maximumCount</a> - The maximum number of
--   artifacts that can be used with the actiontype. For example, you
--   should specify a minimum and maximum of zero input artifacts for an
--   action type with a category of <tt>source</tt>.
newActionTypeArtifactDetails :: Natural -> Natural -> ActionTypeArtifactDetails

-- | The parameters for the action type definition that are provided when
--   the action type is created or updated.
--   
--   <i>See:</i> <a>newActionTypeDeclaration</a> smart constructor.
data ActionTypeDeclaration
ActionTypeDeclaration' :: Maybe ActionTypeUrls -> Maybe ActionTypePermissions -> Maybe Text -> Maybe [ActionTypeProperty] -> ActionTypeExecutor -> ActionTypeIdentifier -> ActionTypeArtifactDetails -> ActionTypeArtifactDetails -> ActionTypeDeclaration

-- | Create a value of <a>ActionTypeDeclaration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:urls:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_urls</a> - The links associated with the
--   action type to be updated.
--   
--   <a>$sel:permissions:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_permissions</a> - Details identifying the
--   accounts with permissions to use the action type.
--   
--   <a>$sel:description:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_description</a> - The description for the
--   action type to be updated.
--   
--   <a>$sel:properties:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_properties</a> - The properties of the action
--   type to be updated.
--   
--   <a>$sel:executor:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_executor</a> - Information about the executor
--   for an action type that was created with any supported integration
--   model.
--   
--   <a>$sel:id:ActionTypeDeclaration'</a>, <a>actionTypeDeclaration_id</a>
--   - The action category, owner, provider, and version of the action type
--   to be updated.
--   
--   <a>$sel:inputArtifactDetails:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_inputArtifactDetails</a> - Details for the
--   artifacts, such as application files, to be worked on by the action.
--   For example, the minimum and maximum number of input artifacts
--   allowed.
--   
--   <a>$sel:outputArtifactDetails:ActionTypeDeclaration'</a>,
--   <a>actionTypeDeclaration_outputArtifactDetails</a> - Details for the
--   output artifacts, such as a built application, that are the result of
--   the action. For example, the minimum and maximum number of output
--   artifacts allowed.
newActionTypeDeclaration :: ActionTypeExecutor -> ActionTypeIdentifier -> ActionTypeArtifactDetails -> ActionTypeArtifactDetails -> ActionTypeDeclaration

-- | The action engine, or executor, for an action type created for a
--   provider, where the action is to be used by customers of the provider.
--   The action engine is associated with the model used to create and
--   update the action, such as the Lambda integration model.
--   
--   <i>See:</i> <a>newActionTypeExecutor</a> smart constructor.
data ActionTypeExecutor
ActionTypeExecutor' :: Maybe Natural -> Maybe Text -> ExecutorConfiguration -> ExecutorType -> ActionTypeExecutor

-- | Create a value of <a>ActionTypeExecutor</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobTimeout:ActionTypeExecutor'</a>,
--   <a>actionTypeExecutor_jobTimeout</a> - The timeout in seconds for the
--   job. An action execution can have multiple jobs. This is the timeout
--   for a single job, not the entire action execution.
--   
--   <a>$sel:policyStatementsTemplate:ActionTypeExecutor'</a>,
--   <a>actionTypeExecutor_policyStatementsTemplate</a> - The policy
--   statement that specifies the permissions in the CodePipeline
--   customer’s account that are needed to successfully run an action.
--   
--   To grant permission to another account, specify the account ID as the
--   Principal, a domain-style identifier defined by the service, for
--   example <tt>codepipeline.amazonaws.com</tt>.
--   
--   The size of the passed JSON policy document cannot exceed 2048
--   characters.
--   
--   <a>$sel:configuration:ActionTypeExecutor'</a>,
--   <a>actionTypeExecutor_configuration</a> - The action configuration
--   properties for the action type. These properties are specified in the
--   action definition when the action type is created.
--   
--   <a>$sel:type':ActionTypeExecutor'</a>, <a>actionTypeExecutor_type</a>
--   - The integration model used to create and update the action type,
--   <tt>Lambda</tt> or <tt>JobWorker</tt>.
newActionTypeExecutor :: ExecutorConfiguration -> ExecutorType -> ActionTypeExecutor

-- | Represents information about an action type.
--   
--   <i>See:</i> <a>newActionTypeId</a> smart constructor.
data ActionTypeId
ActionTypeId' :: ActionCategory -> ActionOwner -> Text -> Text -> ActionTypeId

-- | Create a value of <a>ActionTypeId</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:category:ActionTypeId'</a>, <a>actionTypeId_category</a> - A
--   category defines what kind of action can be taken in the stage, and
--   constrains the provider type for the action. Valid categories are
--   limited to one of the following values.
--   
--   <ul>
--   <li>Source</li>
--   <li>Build</li>
--   <li>Test</li>
--   <li>Deploy</li>
--   <li>Invoke</li>
--   <li>Approval</li>
--   </ul>
--   
--   <a>$sel:owner:ActionTypeId'</a>, <a>actionTypeId_owner</a> - The
--   creator of the action being called. There are three valid values for
--   the <tt>Owner</tt> field in the action category section within your
--   pipeline structure: <tt>AWS</tt>, <tt>ThirdParty</tt>, and
--   <tt>Custom</tt>. For more information, see <a>Valid Action Types and
--   Providers in CodePipeline</a>.
--   
--   <a>$sel:provider:ActionTypeId'</a>, <a>actionTypeId_provider</a> - The
--   provider of the service being called by the action. Valid providers
--   are determined by the action category. For example, an action in the
--   Deploy category type might have a provider of AWS CodeDeploy, which
--   would be specified as CodeDeploy. For more information, see <a>Valid
--   Action Types and Providers in CodePipeline</a>.
--   
--   <a>$sel:version:ActionTypeId'</a>, <a>actionTypeId_version</a> - A
--   string that describes the action version.
newActionTypeId :: ActionCategory -> ActionOwner -> Text -> Text -> ActionTypeId

-- | Specifies the category, owner, provider, and version of the action
--   type.
--   
--   <i>See:</i> <a>newActionTypeIdentifier</a> smart constructor.
data ActionTypeIdentifier
ActionTypeIdentifier' :: ActionCategory -> Text -> Text -> Text -> ActionTypeIdentifier

-- | Create a value of <a>ActionTypeIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:category:ActionTypeIdentifier'</a>,
--   <a>actionTypeIdentifier_category</a> - Defines what kind of action can
--   be taken in the stage, one of the following:
--   
--   <ul>
--   <li><pre>Source</pre></li>
--   <li><pre>Build</pre></li>
--   <li><pre>Test</pre></li>
--   <li><pre>Deploy</pre></li>
--   <li><pre>Approval</pre></li>
--   <li><pre>Invoke</pre></li>
--   </ul>
--   
--   <a>$sel:owner:ActionTypeIdentifier'</a>,
--   <a>actionTypeIdentifier_owner</a> - The creator of the action type
--   being called: <tt>AWS</tt> or <tt>ThirdParty</tt>.
--   
--   <a>$sel:provider:ActionTypeIdentifier'</a>,
--   <a>actionTypeIdentifier_provider</a> - The provider of the action type
--   being called. The provider name is supplied when the action type is
--   created.
--   
--   <a>$sel:version:ActionTypeIdentifier'</a>,
--   <a>actionTypeIdentifier_version</a> - A string that describes the
--   action type version.
newActionTypeIdentifier :: ActionCategory -> Text -> Text -> Text -> ActionTypeIdentifier

-- | Details identifying the users with permissions to use the action type.
--   
--   <i>See:</i> <a>newActionTypePermissions</a> smart constructor.
data ActionTypePermissions
ActionTypePermissions' :: NonEmpty Text -> ActionTypePermissions

-- | Create a value of <a>ActionTypePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowedAccounts:ActionTypePermissions'</a>,
--   <a>actionTypePermissions_allowedAccounts</a> - A list of AWS account
--   IDs with access to use the action type in their pipelines.
newActionTypePermissions :: NonEmpty Text -> ActionTypePermissions

-- | Represents information about each property specified in the action
--   configuration, such as the description and key name that display for
--   the customer using the action type.
--   
--   <i>See:</i> <a>newActionTypeProperty</a> smart constructor.
data ActionTypeProperty
ActionTypeProperty' :: Maybe Bool -> Maybe Text -> Text -> Bool -> Bool -> Bool -> ActionTypeProperty

-- | Create a value of <a>ActionTypeProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryable:ActionTypeProperty'</a>,
--   <a>actionTypeProperty_queryable</a> - Indicates that the property is
--   used with polling. An action type can have up to one queryable
--   property. If it has one, that property must be both required and not
--   secret.
--   
--   <a>$sel:description:ActionTypeProperty'</a>,
--   <a>actionTypeProperty_description</a> - The description of the
--   property that is displayed to users.
--   
--   <a>$sel:name:ActionTypeProperty'</a>, <a>actionTypeProperty_name</a> -
--   The property name that is displayed to users.
--   
--   <a>$sel:optional:ActionTypeProperty'</a>,
--   <a>actionTypeProperty_optional</a> - Whether the configuration
--   property is an optional value.
--   
--   <a>$sel:key:ActionTypeProperty'</a>, <a>actionTypeProperty_key</a> -
--   Whether the configuration property is a key.
--   
--   <a>$sel:noEcho:ActionTypeProperty'</a>,
--   <a>actionTypeProperty_noEcho</a> - Whether to omit the field value
--   entered by the customer in the log. If <tt>true</tt>, the value is not
--   saved in CloudTrail logs for the action execution.
newActionTypeProperty :: Text -> Bool -> Bool -> Bool -> ActionTypeProperty

-- | Returns information about the settings for an action type.
--   
--   <i>See:</i> <a>newActionTypeSettings</a> smart constructor.
data ActionTypeSettings
ActionTypeSettings' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ActionTypeSettings

-- | Create a value of <a>ActionTypeSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thirdPartyConfigurationUrl:ActionTypeSettings'</a>,
--   <a>actionTypeSettings_thirdPartyConfigurationUrl</a> - The URL of a
--   sign-up page where users can sign up for an external service and
--   perform initial configuration of the action provided by that service.
--   
--   <a>$sel:executionUrlTemplate:ActionTypeSettings'</a>,
--   <a>actionTypeSettings_executionUrlTemplate</a> - The URL returned to
--   the AWS CodePipeline console that contains a link to the top-level
--   landing page for the external system, such as the console page for AWS
--   CodeDeploy. This link is shown on the pipeline view page in the AWS
--   CodePipeline console and provides a link to the execution entity of
--   the external action.
--   
--   <a>$sel:revisionUrlTemplate:ActionTypeSettings'</a>,
--   <a>actionTypeSettings_revisionUrlTemplate</a> - The URL returned to
--   the AWS CodePipeline console that contains a link to the page where
--   customers can update or change the configuration of the external
--   action.
--   
--   <a>$sel:entityUrlTemplate:ActionTypeSettings'</a>,
--   <a>actionTypeSettings_entityUrlTemplate</a> - The URL returned to the
--   AWS CodePipeline console that provides a deep link to the resources of
--   the external system, such as the configuration page for an AWS
--   CodeDeploy deployment group. This link is provided as part of the
--   action display in the pipeline.
newActionTypeSettings :: ActionTypeSettings

-- | Returns information about URLs for web pages that display to customers
--   as links on the pipeline view, such as an external configuration page
--   for the action type.
--   
--   <i>See:</i> <a>newActionTypeUrls</a> smart constructor.
data ActionTypeUrls
ActionTypeUrls' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ActionTypeUrls

-- | Create a value of <a>ActionTypeUrls</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executionUrlTemplate:ActionTypeUrls'</a>,
--   <a>actionTypeUrls_executionUrlTemplate</a> - The link to an execution
--   page for the action type in progress. For example, for a CodeDeploy
--   action, this link is shown on the pipeline view page in the
--   CodePipeline console, and it links to a CodeDeploy status page.
--   
--   <a>$sel:revisionUrlTemplate:ActionTypeUrls'</a>,
--   <a>actionTypeUrls_revisionUrlTemplate</a> - The URL returned to the
--   CodePipeline console that contains a link to the page where customers
--   can update or change the configuration of the external action.
--   
--   <a>$sel:entityUrlTemplate:ActionTypeUrls'</a>,
--   <a>actionTypeUrls_entityUrlTemplate</a> - The URL returned to the
--   CodePipeline console that provides a deep link to the resources of the
--   external system, such as a status page. This link is provided as part
--   of the action display in the pipeline.
--   
--   <a>$sel:configurationUrl:ActionTypeUrls'</a>,
--   <a>actionTypeUrls_configurationUrl</a> - The URL returned to the
--   CodePipeline console that contains a link to the page where customers
--   can configure the external action.
newActionTypeUrls :: ActionTypeUrls

-- | Represents information about the result of an approval request.
--   
--   <i>See:</i> <a>newApprovalResult</a> smart constructor.
data ApprovalResult
ApprovalResult' :: Text -> ApprovalStatus -> ApprovalResult

-- | Create a value of <a>ApprovalResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:ApprovalResult'</a>, <a>approvalResult_summary</a> -
--   The summary of the current status of the approval request.
--   
--   <a>$sel:status:ApprovalResult'</a>, <a>approvalResult_status</a> - The
--   response submitted by a reviewer assigned to an approval action
--   request.
newApprovalResult :: Text -> ApprovalStatus -> ApprovalResult

-- | Represents information about an artifact that is worked on by actions
--   in the pipeline.
--   
--   <i>See:</i> <a>newArtifact</a> smart constructor.
data Artifact
Artifact' :: Maybe ArtifactLocation -> Maybe Text -> Maybe Text -> Artifact

-- | Create a value of <a>Artifact</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:Artifact'</a>, <a>artifact_location</a> - The
--   location of an artifact.
--   
--   <a>$sel:name:Artifact'</a>, <a>artifact_name</a> - The artifact's
--   name.
--   
--   <a>$sel:revision:Artifact'</a>, <a>artifact_revision</a> - The
--   artifact's revision ID. Depending on the type of object, this could be
--   a commit ID (GitHub) or a revision ID (Amazon S3).
newArtifact :: Artifact

-- | Artifact details for the action execution, such as the artifact
--   location.
--   
--   <i>See:</i> <a>newArtifactDetail</a> smart constructor.
data ArtifactDetail
ArtifactDetail' :: Maybe Text -> Maybe S3Location -> ArtifactDetail

-- | Create a value of <a>ArtifactDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ArtifactDetail'</a>, <a>artifactDetail_name</a> - The
--   artifact object name for the action execution.
--   
--   <a>$sel:s3location:ArtifactDetail'</a>,
--   <a>artifactDetail_s3location</a> - The Amazon S3 artifact location for
--   the action execution.
newArtifactDetail :: ArtifactDetail

-- | Returns information about the details of an artifact.
--   
--   <i>See:</i> <a>newArtifactDetails</a> smart constructor.
data ArtifactDetails
ArtifactDetails' :: Natural -> Natural -> ArtifactDetails

-- | Create a value of <a>ArtifactDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCount:ArtifactDetails'</a>,
--   <a>artifactDetails_minimumCount</a> - The minimum number of artifacts
--   allowed for the action type.
--   
--   <a>$sel:maximumCount:ArtifactDetails'</a>,
--   <a>artifactDetails_maximumCount</a> - The maximum number of artifacts
--   allowed for the action type.
newArtifactDetails :: Natural -> Natural -> ArtifactDetails

-- | Represents information about the location of an artifact.
--   
--   <i>See:</i> <a>newArtifactLocation</a> smart constructor.
data ArtifactLocation
ArtifactLocation' :: Maybe S3ArtifactLocation -> Maybe ArtifactLocationType -> ArtifactLocation

-- | Create a value of <a>ArtifactLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Location:ArtifactLocation'</a>,
--   <a>artifactLocation_s3Location</a> - The S3 bucket that contains the
--   artifact.
--   
--   <a>$sel:type':ArtifactLocation'</a>, <a>artifactLocation_type</a> -
--   The type of artifact in the location.
newArtifactLocation :: ArtifactLocation

-- | Represents revision details of an artifact.
--   
--   <i>See:</i> <a>newArtifactRevision</a> smart constructor.
data ArtifactRevision
ArtifactRevision' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> ArtifactRevision

-- | Create a value of <a>ArtifactRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionSummary:ArtifactRevision'</a>,
--   <a>artifactRevision_revisionSummary</a> - Summary information about
--   the most recent revision of the artifact. For GitHub and AWS
--   CodeCommit repositories, the commit message. For Amazon S3 buckets or
--   actions, the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
--   
--   <a>$sel:revisionUrl:ArtifactRevision'</a>,
--   <a>artifactRevision_revisionUrl</a> - The commit ID for the artifact
--   revision. For artifacts stored in GitHub or AWS CodeCommit
--   repositories, the commit ID is linked to a commit details page.
--   
--   <a>$sel:created:ArtifactRevision'</a>, <a>artifactRevision_created</a>
--   - The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
--   
--   <a>$sel:name:ArtifactRevision'</a>, <a>artifactRevision_name</a> - The
--   name of an artifact. This name might be system-generated, such as
--   "MyApp", or defined by the user when an action is created.
--   
--   <a>$sel:revisionId:ArtifactRevision'</a>,
--   <a>artifactRevision_revisionId</a> - The revision ID of the artifact.
--   
--   <a>$sel:revisionChangeIdentifier:ArtifactRevision'</a>,
--   <a>artifactRevision_revisionChangeIdentifier</a> - An additional
--   identifier for a revision, such as a commit date or, for artifacts
--   stored in Amazon S3 buckets, the ETag value.
newArtifactRevision :: ArtifactRevision

-- | The S3 bucket where artifacts for the pipeline are stored.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
--   
--   <i>See:</i> <a>newArtifactStore</a> smart constructor.
data ArtifactStore
ArtifactStore' :: Maybe EncryptionKey -> ArtifactStoreType -> Text -> ArtifactStore

-- | Create a value of <a>ArtifactStore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKey:ArtifactStore'</a>,
--   <a>artifactStore_encryptionKey</a> - The encryption key used to
--   encrypt the data in the artifact store, such as an AWS Key Management
--   Service (AWS KMS) key. If this is undefined, the default key for
--   Amazon S3 is used.
--   
--   <a>$sel:type':ArtifactStore'</a>, <a>artifactStore_type</a> - The type
--   of the artifact store, such as S3.
--   
--   <a>$sel:location:ArtifactStore'</a>, <a>artifactStore_location</a> -
--   The S3 bucket used for storing the artifacts for a pipeline. You can
--   specify the name of an S3 bucket but not a folder in the bucket. A
--   folder to contain the pipeline artifacts is created for you based on
--   the name of the pipeline. You can use any S3 bucket in the same AWS
--   Region as the pipeline to store your pipeline artifacts.
newArtifactStore :: ArtifactStoreType -> Text -> ArtifactStore

-- | Reserved for future use.
--   
--   <i>See:</i> <a>newBlockerDeclaration</a> smart constructor.
data BlockerDeclaration
BlockerDeclaration' :: Text -> BlockerType -> BlockerDeclaration

-- | Create a value of <a>BlockerDeclaration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BlockerDeclaration'</a>, <a>blockerDeclaration_name</a> -
--   Reserved for future use.
--   
--   <a>$sel:type':BlockerDeclaration'</a>, <a>blockerDeclaration_type</a>
--   - Reserved for future use.
newBlockerDeclaration :: Text -> BlockerType -> BlockerDeclaration

-- | Represents information about a current revision.
--   
--   <i>See:</i> <a>newCurrentRevision</a> smart constructor.
data CurrentRevision
CurrentRevision' :: Maybe Text -> Maybe POSIX -> Text -> Text -> CurrentRevision

-- | Create a value of <a>CurrentRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionSummary:CurrentRevision'</a>,
--   <a>currentRevision_revisionSummary</a> - The summary of the most
--   recent revision of the artifact.
--   
--   <a>$sel:created:CurrentRevision'</a>, <a>currentRevision_created</a> -
--   The date and time when the most recent revision of the artifact was
--   created, in timestamp format.
--   
--   <a>$sel:revision:CurrentRevision'</a>, <a>currentRevision_revision</a>
--   - The revision ID of the current version of an artifact.
--   
--   <a>$sel:changeIdentifier:CurrentRevision'</a>,
--   <a>currentRevision_changeIdentifier</a> - The change identifier for
--   the current revision.
newCurrentRevision :: Text -> Text -> CurrentRevision

-- | Represents information about the key used to encrypt data in the
--   artifact store, such as an AWS Key Management Service (AWS KMS) key.
--   
--   <i>See:</i> <a>newEncryptionKey</a> smart constructor.
data EncryptionKey
EncryptionKey' :: Text -> EncryptionKeyType -> EncryptionKey

-- | Create a value of <a>EncryptionKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:EncryptionKey'</a>, <a>encryptionKey_id</a> - The ID used
--   to identify the key. For an AWS KMS key, you can use the key ID, the
--   key ARN, or the alias ARN.
--   
--   Aliases are recognized only in the account that created the customer
--   master key (CMK). For cross-account actions, you can only use the key
--   ID or key ARN to identify the key.
--   
--   <a>$sel:type':EncryptionKey'</a>, <a>encryptionKey_type</a> - The type
--   of encryption key, such as an AWS Key Management Service (AWS KMS)
--   key. When creating or updating a pipeline, the value must be set to
--   'KMS'.
newEncryptionKey :: Text -> EncryptionKeyType -> EncryptionKey

-- | Represents information about an error in AWS CodePipeline.
--   
--   <i>See:</i> <a>newErrorDetails</a> smart constructor.
data ErrorDetails
ErrorDetails' :: Maybe Text -> Maybe Text -> ErrorDetails

-- | Create a value of <a>ErrorDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:ErrorDetails'</a>, <a>errorDetails_code</a> - The system
--   ID or number code of the error.
--   
--   <a>$sel:message:ErrorDetails'</a>, <a>errorDetails_message</a> - The
--   text of the error message.
newErrorDetails :: ErrorDetails

-- | The details of the actions taken and results produced on an artifact
--   as it passes through stages in the pipeline.
--   
--   <i>See:</i> <a>newExecutionDetails</a> smart constructor.
data ExecutionDetails
ExecutionDetails' :: Maybe Text -> Maybe Text -> Maybe Natural -> ExecutionDetails

-- | Create a value of <a>ExecutionDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:ExecutionDetails'</a>, <a>executionDetails_summary</a>
--   - The summary of the current status of the actions.
--   
--   <a>$sel:externalExecutionId:ExecutionDetails'</a>,
--   <a>executionDetails_externalExecutionId</a> - The system-generated
--   unique ID of this action used to identify this job worker in any
--   external systems, such as AWS CodeDeploy.
--   
--   <a>$sel:percentComplete:ExecutionDetails'</a>,
--   <a>executionDetails_percentComplete</a> - The percentage of work
--   completed on the action, represented on a scale of 0 to 100 percent.
newExecutionDetails :: ExecutionDetails

-- | The interaction or event that started a pipeline execution.
--   
--   <i>See:</i> <a>newExecutionTrigger</a> smart constructor.
data ExecutionTrigger
ExecutionTrigger' :: Maybe TriggerType -> Maybe Text -> ExecutionTrigger

-- | Create a value of <a>ExecutionTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerType:ExecutionTrigger'</a>,
--   <a>executionTrigger_triggerType</a> - The type of change-detection
--   method, command, or user interaction that started a pipeline
--   execution.
--   
--   <a>$sel:triggerDetail:ExecutionTrigger'</a>,
--   <a>executionTrigger_triggerDetail</a> - Detail related to the event
--   that started a pipeline execution, such as the webhook ARN of the
--   webhook that triggered the pipeline execution or the user ARN for a
--   user-initiated <tt>start-pipeline-execution</tt> CLI command.
newExecutionTrigger :: ExecutionTrigger

-- | The action engine, or executor, related to the supported integration
--   model used to create and update the action type. The available
--   executor types are <tt>Lambda</tt> and <tt>JobWorker</tt>.
--   
--   <i>See:</i> <a>newExecutorConfiguration</a> smart constructor.
data ExecutorConfiguration
ExecutorConfiguration' :: Maybe LambdaExecutorConfiguration -> Maybe JobWorkerExecutorConfiguration -> ExecutorConfiguration

-- | Create a value of <a>ExecutorConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaExecutorConfiguration:ExecutorConfiguration'</a>,
--   <a>executorConfiguration_lambdaExecutorConfiguration</a> - Details
--   about the <tt>Lambda</tt> executor of the action type.
--   
--   <a>$sel:jobWorkerExecutorConfiguration:ExecutorConfiguration'</a>,
--   <a>executorConfiguration_jobWorkerExecutorConfiguration</a> - Details
--   about the <tt>JobWorker</tt> executor of the action type.
newExecutorConfiguration :: ExecutorConfiguration

-- | Represents information about failure details.
--   
--   <i>See:</i> <a>newFailureDetails</a> smart constructor.
data FailureDetails
FailureDetails' :: Maybe Text -> FailureType -> Text -> FailureDetails

-- | Create a value of <a>FailureDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalExecutionId:FailureDetails'</a>,
--   <a>failureDetails_externalExecutionId</a> - The external ID of the run
--   of the action that failed.
--   
--   <a>$sel:type':FailureDetails'</a>, <a>failureDetails_type</a> - The
--   type of the failure.
--   
--   <a>$sel:message:FailureDetails'</a>, <a>failureDetails_message</a> -
--   The message about the failure.
newFailureDetails :: FailureType -> Text -> FailureDetails

-- | Represents information about an artifact to be worked on, such as a
--   test or build artifact.
--   
--   <i>See:</i> <a>newInputArtifact</a> smart constructor.
data InputArtifact
InputArtifact' :: Text -> InputArtifact

-- | Create a value of <a>InputArtifact</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InputArtifact'</a>, <a>inputArtifact_name</a> - The name
--   of the artifact to be worked on (for example, "My App").
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
newInputArtifact :: Text -> InputArtifact

-- | Represents information about a job.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe JobData -> Maybe Text -> Maybe Text -> Maybe Text -> Job

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':Job'</a>, <a>job_data</a> - Other data about a job.
--   
--   <a>$sel:accountId:Job'</a>, <a>job_accountId</a> - The ID of the AWS
--   account to use when performing the job.
--   
--   <a>$sel:id:Job'</a>, <a>job_id</a> - The unique system-generated ID of
--   the job.
--   
--   <a>$sel:nonce:Job'</a>, <a>job_nonce</a> - A system-generated random
--   number that AWS CodePipeline uses to ensure that the job is being
--   worked on by only one job worker. Use this number in an AcknowledgeJob
--   request.
newJob :: Job

-- | Represents other information about a job required for a job worker to
--   complete the job.
--   
--   <i>See:</i> <a>newJobData</a> smart constructor.
data JobData
JobData' :: Maybe Text -> Maybe [Artifact] -> Maybe (Sensitive AWSSessionCredentials) -> Maybe PipelineContext -> Maybe EncryptionKey -> Maybe ActionTypeId -> Maybe [Artifact] -> Maybe ActionConfiguration -> JobData

-- | Create a value of <a>JobData</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:continuationToken:JobData'</a>,
--   <a>jobData_continuationToken</a> - A system-generated token, such as a
--   AWS CodeDeploy deployment ID, required by a job to continue the job
--   asynchronously.
--   
--   <a>$sel:outputArtifacts:JobData'</a>, <a>jobData_outputArtifacts</a> -
--   The output of the job.
--   
--   <a>$sel:artifactCredentials:JobData'</a>,
--   <a>jobData_artifactCredentials</a> - Represents an AWS session
--   credentials object. These credentials are temporary credentials that
--   are issued by AWS Secure Token Service (STS). They can be used to
--   access input and output artifacts in the S3 bucket used to store
--   artifacts for the pipeline in AWS CodePipeline.
--   
--   <a>$sel:pipelineContext:JobData'</a>, <a>jobData_pipelineContext</a> -
--   Represents information about a pipeline to a job worker.
--   
--   Includes <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt> for
--   custom jobs.
--   
--   <a>$sel:encryptionKey:JobData'</a>, <a>jobData_encryptionKey</a> -
--   Represents information about the key used to encrypt data in the
--   artifact store, such as an AWS Key Management Service (AWS KMS) key.
--   
--   <a>$sel:actionTypeId:JobData'</a>, <a>jobData_actionTypeId</a> -
--   Represents information about an action type.
--   
--   <a>$sel:inputArtifacts:JobData'</a>, <a>jobData_inputArtifacts</a> -
--   The artifact supplied to the job.
--   
--   <a>$sel:actionConfiguration:JobData'</a>,
--   <a>jobData_actionConfiguration</a> - Represents information about an
--   action configuration.
newJobData :: JobData

-- | Represents information about the details of a job.
--   
--   <i>See:</i> <a>newJobDetails</a> smart constructor.
data JobDetails
JobDetails' :: Maybe JobData -> Maybe Text -> Maybe Text -> JobDetails

-- | Create a value of <a>JobDetails</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':JobDetails'</a>, <a>jobDetails_data</a> - Represents
--   other information about a job required for a job worker to complete
--   the job.
--   
--   <a>$sel:accountId:JobDetails'</a>, <a>jobDetails_accountId</a> - The
--   AWS account ID associated with the job.
--   
--   <a>$sel:id:JobDetails'</a>, <a>jobDetails_id</a> - The unique
--   system-generated ID of the job.
newJobDetails :: JobDetails

-- | Details about the polling configuration for the <tt>JobWorker</tt>
--   action engine, or executor.
--   
--   <i>See:</i> <a>newJobWorkerExecutorConfiguration</a> smart
--   constructor.
data JobWorkerExecutorConfiguration
JobWorkerExecutorConfiguration' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> JobWorkerExecutorConfiguration

-- | Create a value of <a>JobWorkerExecutorConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pollingAccounts:JobWorkerExecutorConfiguration'</a>,
--   <a>jobWorkerExecutorConfiguration_pollingAccounts</a> - The accounts
--   in which the job worker is configured and might poll for jobs as part
--   of the action execution.
--   
--   <a>$sel:pollingServicePrincipals:JobWorkerExecutorConfiguration'</a>,
--   <a>jobWorkerExecutorConfiguration_pollingServicePrincipals</a> - The
--   service Principals in which the job worker is configured and might
--   poll for jobs as part of the action execution.
newJobWorkerExecutorConfiguration :: JobWorkerExecutorConfiguration

-- | Details about the configuration for the <tt>Lambda</tt> action engine,
--   or executor.
--   
--   <i>See:</i> <a>newLambdaExecutorConfiguration</a> smart constructor.
data LambdaExecutorConfiguration
LambdaExecutorConfiguration' :: Text -> LambdaExecutorConfiguration

-- | Create a value of <a>LambdaExecutorConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaFunctionArn:LambdaExecutorConfiguration'</a>,
--   <a>lambdaExecutorConfiguration_lambdaFunctionArn</a> - The ARN of the
--   Lambda function used by the action engine.
newLambdaExecutorConfiguration :: Text -> LambdaExecutorConfiguration

-- | The detail returned for each webhook after listing webhooks, such as
--   the webhook URL, the webhook name, and the webhook ARN.
--   
--   <i>See:</i> <a>newListWebhookItem</a> smart constructor.
data ListWebhookItem
ListWebhookItem' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe [Tag] -> WebhookDefinition -> Text -> ListWebhookItem

-- | Create a value of <a>ListWebhookItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ListWebhookItem'</a>, <a>listWebhookItem_arn</a> - The
--   Amazon Resource Name (ARN) of the webhook.
--   
--   <a>$sel:errorCode:ListWebhookItem'</a>,
--   <a>listWebhookItem_errorCode</a> - The number code of the error.
--   
--   <a>$sel:lastTriggered:ListWebhookItem'</a>,
--   <a>listWebhookItem_lastTriggered</a> - The date and time a webhook was
--   last successfully triggered, in timestamp format.
--   
--   <a>$sel:errorMessage:ListWebhookItem'</a>,
--   <a>listWebhookItem_errorMessage</a> - The text of the error message
--   about the webhook.
--   
--   <a>$sel:tags:ListWebhookItem'</a>, <a>listWebhookItem_tags</a> -
--   Specifies the tags applied to the webhook.
--   
--   <a>$sel:definition:ListWebhookItem'</a>,
--   <a>listWebhookItem_definition</a> - The detail returned for each
--   webhook, such as the webhook authentication type and filter rules.
--   
--   <a>$sel:url:ListWebhookItem'</a>, <a>listWebhookItem_url</a> - A
--   unique URL generated by CodePipeline. When a POST request is made to
--   this URL, the defined pipeline is started as long as the body of the
--   post request satisfies the defined authentication and filtering
--   conditions. Deleting and re-creating a webhook makes the old URL
--   invalid and generates a new one.
newListWebhookItem :: WebhookDefinition -> Text -> ListWebhookItem

-- | Represents information about the output of an action.
--   
--   <i>See:</i> <a>newOutputArtifact</a> smart constructor.
data OutputArtifact
OutputArtifact' :: Text -> OutputArtifact

-- | Create a value of <a>OutputArtifact</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:OutputArtifact'</a>, <a>outputArtifact_name</a> - The
--   name of the output of an artifact, such as "My App".
--   
--   The input artifact of an action must exactly match the output artifact
--   declared in a preceding action, but the input artifact does not have
--   to be the next action in strict sequence from the action that provided
--   the output artifact. Actions in parallel can declare different output
--   artifacts, which are in turn consumed by different following actions.
--   
--   Output artifact names must be unique within a pipeline.
newOutputArtifact :: Text -> OutputArtifact

-- | Represents information about a pipeline to a job worker.
--   
--   PipelineContext contains <tt>pipelineArn</tt> and
--   <tt>pipelineExecutionId</tt> for custom action jobs. The
--   <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt> fields are not
--   populated for ThirdParty action jobs.
--   
--   <i>See:</i> <a>newPipelineContext</a> smart constructor.
data PipelineContext
PipelineContext' :: Maybe StageContext -> Maybe Text -> Maybe ActionContext -> Maybe Text -> Maybe Text -> PipelineContext

-- | Create a value of <a>PipelineContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:PipelineContext'</a>, <a>pipelineContext_stage</a> - The
--   stage of the pipeline.
--   
--   <a>$sel:pipelineName:PipelineContext'</a>,
--   <a>pipelineContext_pipelineName</a> - The name of the pipeline. This
--   is a user-specified value. Pipeline names must be unique across all
--   pipeline names under an Amazon Web Services account.
--   
--   <a>$sel:action:PipelineContext'</a>, <a>pipelineContext_action</a> -
--   The context of an action to a job worker in the stage of a pipeline.
--   
--   <a>$sel:pipelineArn:PipelineContext'</a>,
--   <a>pipelineContext_pipelineArn</a> - The Amazon Resource Name (ARN) of
--   the pipeline.
--   
--   <a>$sel:pipelineExecutionId:PipelineContext'</a>,
--   <a>pipelineContext_pipelineExecutionId</a> - The execution ID of the
--   pipeline.
newPipelineContext :: PipelineContext

-- | Represents the structure of actions and stages to be performed in the
--   pipeline.
--   
--   <i>See:</i> <a>newPipelineDeclaration</a> smart constructor.
data PipelineDeclaration
PipelineDeclaration' :: Maybe (HashMap Text ArtifactStore) -> Maybe ArtifactStore -> Maybe Natural -> Text -> Text -> [StageDeclaration] -> PipelineDeclaration

-- | Create a value of <a>PipelineDeclaration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:artifactStores:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_artifactStores</a> - A mapping of
--   <tt>artifactStore</tt> objects and their corresponding AWS Regions.
--   There must be an artifact store for the pipeline Region and for each
--   cross-region action in the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
--   
--   <a>$sel:artifactStore:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_artifactStore</a> - Represents information
--   about the S3 bucket where artifacts are stored for the pipeline.
--   
--   You must include either <tt>artifactStore</tt> or
--   <tt>artifactStores</tt> in your pipeline, but you cannot use both. If
--   you create a cross-region action in your pipeline, you must use
--   <tt>artifactStores</tt>.
--   
--   <a>$sel:version:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_version</a> - The version number of the
--   pipeline. A new pipeline always has a version number of 1. This number
--   is incremented when a pipeline is updated.
--   
--   <a>$sel:name:PipelineDeclaration'</a>, <a>pipelineDeclaration_name</a>
--   - The name of the pipeline.
--   
--   <a>$sel:roleArn:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_roleArn</a> - The Amazon Resource Name (ARN)
--   for AWS CodePipeline to use to either perform actions with no
--   <tt>actionRoleArn</tt>, or to use to assume roles for actions with an
--   <tt>actionRoleArn</tt>.
--   
--   <a>$sel:stages:PipelineDeclaration'</a>,
--   <a>pipelineDeclaration_stages</a> - The stage in which to perform the
--   action.
newPipelineDeclaration :: Text -> Text -> PipelineDeclaration

-- | Represents information about an execution of a pipeline.
--   
--   <i>See:</i> <a>newPipelineExecution</a> smart constructor.
data PipelineExecution
PipelineExecution' :: Maybe PipelineExecutionStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe [ArtifactRevision] -> PipelineExecution

-- | Create a value of <a>PipelineExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PipelineExecution'</a>, <a>pipelineExecution_status</a>
--   - The status of the pipeline execution.
--   
--   <ul>
--   <li>Cancelled: The pipeline’s definition was updated before the
--   pipeline execution could be completed.</li>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
--   
--   <a>$sel:pipelineName:PipelineExecution'</a>,
--   <a>pipelineExecution_pipelineName</a> - The name of the pipeline with
--   the specified pipeline execution.
--   
--   <a>$sel:statusSummary:PipelineExecution'</a>,
--   <a>pipelineExecution_statusSummary</a> - A summary that contains a
--   description of the pipeline execution status.
--   
--   <a>$sel:pipelineVersion:PipelineExecution'</a>,
--   <a>pipelineExecution_pipelineVersion</a> - The version number of the
--   pipeline with the specified pipeline execution.
--   
--   <a>$sel:pipelineExecutionId:PipelineExecution'</a>,
--   <a>pipelineExecution_pipelineExecutionId</a> - The ID of the pipeline
--   execution.
--   
--   <a>$sel:artifactRevisions:PipelineExecution'</a>,
--   <a>pipelineExecution_artifactRevisions</a> - A list of
--   <tt>ArtifactRevision</tt> objects included in a pipeline execution.
newPipelineExecution :: PipelineExecution

-- | Summary information about a pipeline execution.
--   
--   <i>See:</i> <a>newPipelineExecutionSummary</a> smart constructor.
data PipelineExecutionSummary
PipelineExecutionSummary' :: Maybe PipelineExecutionStatus -> Maybe POSIX -> Maybe StopExecutionTrigger -> Maybe Text -> Maybe [SourceRevision] -> Maybe ExecutionTrigger -> Maybe POSIX -> PipelineExecutionSummary

-- | Create a value of <a>PipelineExecutionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_status</a> - The status of the pipeline
--   execution.
--   
--   <ul>
--   <li>InProgress: The pipeline execution is currently running.</li>
--   <li>Stopped: The pipeline execution was manually stopped. For more
--   information, see <a>Stopped Executions</a>.</li>
--   <li>Stopping: The pipeline execution received a request to be manually
--   stopped. Depending on the selected stop mode, the execution is either
--   completing or abandoning in-progress actions. For more information,
--   see <a>Stopped Executions</a>.</li>
--   <li>Succeeded: The pipeline execution was completed successfully.</li>
--   <li>Superseded: While this pipeline execution was waiting for the next
--   stage to be completed, a newer pipeline execution advanced and
--   continued through the pipeline instead. For more information, see
--   <a>Superseded Executions</a>.</li>
--   <li>Failed: The pipeline execution was not completed
--   successfully.</li>
--   </ul>
--   
--   <a>$sel:startTime:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_startTime</a> - The date and time when the
--   pipeline execution began, in timestamp format.
--   
--   <a>$sel:stopTrigger:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_stopTrigger</a> - The interaction that
--   stopped a pipeline execution.
--   
--   <a>$sel:pipelineExecutionId:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_pipelineExecutionId</a> - The ID of the
--   pipeline execution.
--   
--   <a>$sel:sourceRevisions:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_sourceRevisions</a> - A list of the source
--   artifact revisions that initiated a pipeline execution.
--   
--   <a>$sel:trigger:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_trigger</a> - The interaction or event
--   that started a pipeline execution, such as automated change detection
--   or a <tt>StartPipelineExecution</tt> API call.
--   
--   <a>$sel:lastUpdateTime:PipelineExecutionSummary'</a>,
--   <a>pipelineExecutionSummary_lastUpdateTime</a> - The date and time of
--   the last change to the pipeline execution, in timestamp format.
newPipelineExecutionSummary :: PipelineExecutionSummary

-- | Information about a pipeline.
--   
--   <i>See:</i> <a>newPipelineMetadata</a> smart constructor.
data PipelineMetadata
PipelineMetadata' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> PipelineMetadata

-- | Create a value of <a>PipelineMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:created:PipelineMetadata'</a>, <a>pipelineMetadata_created</a>
--   - The date and time the pipeline was created, in timestamp format.
--   
--   <a>$sel:pipelineArn:PipelineMetadata'</a>,
--   <a>pipelineMetadata_pipelineArn</a> - The Amazon Resource Name (ARN)
--   of the pipeline.
--   
--   <a>$sel:updated:PipelineMetadata'</a>, <a>pipelineMetadata_updated</a>
--   - The date and time the pipeline was last updated, in timestamp
--   format.
newPipelineMetadata :: PipelineMetadata

-- | Returns a summary of a pipeline.
--   
--   <i>See:</i> <a>newPipelineSummary</a> smart constructor.
data PipelineSummary
PipelineSummary' :: Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe POSIX -> PipelineSummary

-- | Create a value of <a>PipelineSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:created:PipelineSummary'</a>, <a>pipelineSummary_created</a> -
--   The date and time the pipeline was created, in timestamp format.
--   
--   <a>$sel:name:PipelineSummary'</a>, <a>pipelineSummary_name</a> - The
--   name of the pipeline.
--   
--   <a>$sel:version:PipelineSummary'</a>, <a>pipelineSummary_version</a> -
--   The version number of the pipeline.
--   
--   <a>$sel:updated:PipelineSummary'</a>, <a>pipelineSummary_updated</a> -
--   The date and time of the last update to the pipeline, in timestamp
--   format.
newPipelineSummary :: PipelineSummary

-- | The location of the S3 bucket that contains a revision.
--   
--   <i>See:</i> <a>newS3ArtifactLocation</a> smart constructor.
data S3ArtifactLocation
S3ArtifactLocation' :: Text -> Text -> S3ArtifactLocation

-- | Create a value of <a>S3ArtifactLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketName:S3ArtifactLocation'</a>,
--   <a>s3ArtifactLocation_bucketName</a> - The name of the S3 bucket.
--   
--   <a>$sel:objectKey:S3ArtifactLocation'</a>,
--   <a>s3ArtifactLocation_objectKey</a> - The key of the object in the S3
--   bucket, which uniquely identifies the object in the bucket.
newS3ArtifactLocation :: Text -> Text -> S3ArtifactLocation

-- | The Amazon S3 artifact location for an action's artifacts.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Maybe Text -> S3Location

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:S3Location'</a>, <a>s3Location_bucket</a> - The Amazon
--   S3 artifact bucket for an action's artifacts.
--   
--   <a>$sel:key:S3Location'</a>, <a>s3Location_key</a> - The artifact
--   name.
newS3Location :: S3Location

-- | Information about the version (or revision) of a source artifact that
--   initiated a pipeline execution.
--   
--   <i>See:</i> <a>newSourceRevision</a> smart constructor.
data SourceRevision
SourceRevision' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> SourceRevision

-- | Create a value of <a>SourceRevision</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionSummary:SourceRevision'</a>,
--   <a>sourceRevision_revisionSummary</a> - Summary information about the
--   most recent revision of the artifact. For GitHub and AWS CodeCommit
--   repositories, the commit message. For Amazon S3 buckets or actions,
--   the user-provided content of a
--   <tt>codepipeline-artifact-revision-summary</tt> key specified in the
--   object metadata.
--   
--   <a>$sel:revisionUrl:SourceRevision'</a>,
--   <a>sourceRevision_revisionUrl</a> - The commit ID for the artifact
--   revision. For artifacts stored in GitHub or AWS CodeCommit
--   repositories, the commit ID is linked to a commit details page.
--   
--   <a>$sel:revisionId:SourceRevision'</a>,
--   <a>sourceRevision_revisionId</a> - The system-generated unique ID that
--   identifies the revision number of the artifact.
--   
--   <a>$sel:actionName:SourceRevision'</a>,
--   <a>sourceRevision_actionName</a> - The name of the action that
--   processed the revision to the source artifact.
newSourceRevision :: Text -> SourceRevision

-- | Represents information about a stage to a job worker.
--   
--   <i>See:</i> <a>newStageContext</a> smart constructor.
data StageContext
StageContext' :: Maybe Text -> StageContext

-- | Create a value of <a>StageContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StageContext'</a>, <a>stageContext_name</a> - The name of
--   the stage.
newStageContext :: StageContext

-- | Represents information about a stage and its definition.
--   
--   <i>See:</i> <a>newStageDeclaration</a> smart constructor.
data StageDeclaration
StageDeclaration' :: Maybe [BlockerDeclaration] -> Text -> [ActionDeclaration] -> StageDeclaration

-- | Create a value of <a>StageDeclaration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockers:StageDeclaration'</a>,
--   <a>stageDeclaration_blockers</a> - Reserved for future use.
--   
--   <a>$sel:name:StageDeclaration'</a>, <a>stageDeclaration_name</a> - The
--   name of the stage.
--   
--   <a>$sel:actions:StageDeclaration'</a>, <a>stageDeclaration_actions</a>
--   - The actions included in a stage.
newStageDeclaration :: Text -> StageDeclaration

-- | Represents information about the run of a stage.
--   
--   <i>See:</i> <a>newStageExecution</a> smart constructor.
data StageExecution
StageExecution' :: Text -> StageExecutionStatus -> StageExecution

-- | Create a value of <a>StageExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineExecutionId:StageExecution'</a>,
--   <a>stageExecution_pipelineExecutionId</a> - The ID of the pipeline
--   execution associated with the stage.
--   
--   <a>$sel:status:StageExecution'</a>, <a>stageExecution_status</a> - The
--   status of the stage, or for a completed stage, the last status of the
--   stage.
--   
--   A status of cancelled means that the pipeline’s definition was updated
--   before the stage execution could be completed.
newStageExecution :: Text -> StageExecutionStatus -> StageExecution

-- | Represents information about the state of the stage.
--   
--   <i>See:</i> <a>newStageState</a> smart constructor.
data StageState
StageState' :: Maybe StageExecution -> Maybe TransitionState -> Maybe [ActionState] -> Maybe Text -> Maybe StageExecution -> StageState

-- | Create a value of <a>StageState</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inboundExecution:StageState'</a>,
--   <a>stageState_inboundExecution</a> - Undocumented member.
--   
--   <a>$sel:inboundTransitionState:StageState'</a>,
--   <a>stageState_inboundTransitionState</a> - The state of the inbound
--   transition, which is either enabled or disabled.
--   
--   <a>$sel:actionStates:StageState'</a>, <a>stageState_actionStates</a> -
--   The state of the stage.
--   
--   <a>$sel:stageName:StageState'</a>, <a>stageState_stageName</a> - The
--   name of the stage.
--   
--   <a>$sel:latestExecution:StageState'</a>,
--   <a>stageState_latestExecution</a> - Information about the latest
--   execution in the stage, including its ID and status.
newStageState :: StageState

-- | The interaction that stopped a pipeline execution.
--   
--   <i>See:</i> <a>newStopExecutionTrigger</a> smart constructor.
data StopExecutionTrigger
StopExecutionTrigger' :: Maybe Text -> StopExecutionTrigger

-- | Create a value of <a>StopExecutionTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:StopExecutionTrigger'</a>,
--   <a>stopExecutionTrigger_reason</a> - The user-specified reason the
--   pipeline was stopped.
newStopExecutionTrigger :: StopExecutionTrigger

-- | A tag is a key-value pair that is used to manage the resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Text -> Text -> Tag

-- | A response to a <tt>PollForThirdPartyJobs</tt> request returned by AWS
--   CodePipeline when there is a job to be worked on by a partner action.
--   
--   <i>See:</i> <a>newThirdPartyJob</a> smart constructor.
data ThirdPartyJob
ThirdPartyJob' :: Maybe Text -> Maybe Text -> ThirdPartyJob

-- | Create a value of <a>ThirdPartyJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:ThirdPartyJob'</a>, <a>thirdPartyJob_clientId</a> -
--   The <tt>clientToken</tt> portion of the <tt>clientId</tt> and
--   <tt>clientToken</tt> pair used to verify that the calling entity is
--   allowed access to the job and its details.
--   
--   <a>$sel:jobId:ThirdPartyJob'</a>, <a>thirdPartyJob_jobId</a> - The
--   identifier used to identify the job in AWS CodePipeline.
newThirdPartyJob :: ThirdPartyJob

-- | Represents information about the job data for a partner action.
--   
--   <i>See:</i> <a>newThirdPartyJobData</a> smart constructor.
data ThirdPartyJobData
ThirdPartyJobData' :: Maybe Text -> Maybe [Artifact] -> Maybe (Sensitive AWSSessionCredentials) -> Maybe PipelineContext -> Maybe EncryptionKey -> Maybe ActionTypeId -> Maybe [Artifact] -> Maybe ActionConfiguration -> ThirdPartyJobData

-- | Create a value of <a>ThirdPartyJobData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:continuationToken:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_continuationToken</a> - A system-generated token,
--   such as a AWS CodeDeploy deployment ID, that a job requires to
--   continue the job asynchronously.
--   
--   <a>$sel:outputArtifacts:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_outputArtifacts</a> - The name of the artifact
--   that is the result of the action, if any. This name might be
--   system-generated, such as "MyBuiltApp", or it might be defined by the
--   user when the action is created.
--   
--   <a>$sel:artifactCredentials:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_artifactCredentials</a> - Represents an AWS
--   session credentials object. These credentials are temporary
--   credentials that are issued by AWS Secure Token Service (STS). They
--   can be used to access input and output artifacts in the S3 bucket used
--   to store artifact for the pipeline in AWS CodePipeline.
--   
--   <a>$sel:pipelineContext:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_pipelineContext</a> - Represents information
--   about a pipeline to a job worker.
--   
--   Does not include <tt>pipelineArn</tt> and <tt>pipelineExecutionId</tt>
--   for ThirdParty jobs.
--   
--   <a>$sel:encryptionKey:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_encryptionKey</a> - The encryption key used to
--   encrypt and decrypt data in the artifact store for the pipeline, such
--   as an AWS Key Management Service (AWS KMS) key. This is optional and
--   might not be present.
--   
--   <a>$sel:actionTypeId:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_actionTypeId</a> - Represents information about
--   an action type.
--   
--   <a>$sel:inputArtifacts:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_inputArtifacts</a> - The name of the artifact
--   that is worked on by the action, if any. This name might be
--   system-generated, such as "MyApp", or it might be defined by the user
--   when the action is created. The input artifact name must match the
--   name of an output artifact generated by an action in an earlier action
--   or stage of the pipeline.
--   
--   <a>$sel:actionConfiguration:ThirdPartyJobData'</a>,
--   <a>thirdPartyJobData_actionConfiguration</a> - Represents information
--   about an action configuration.
newThirdPartyJobData :: ThirdPartyJobData

-- | The details of a job sent in response to a
--   <tt>GetThirdPartyJobDetails</tt> request.
--   
--   <i>See:</i> <a>newThirdPartyJobDetails</a> smart constructor.
data ThirdPartyJobDetails
ThirdPartyJobDetails' :: Maybe ThirdPartyJobData -> Maybe Text -> Maybe Text -> ThirdPartyJobDetails

-- | Create a value of <a>ThirdPartyJobDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':ThirdPartyJobDetails'</a>,
--   <a>thirdPartyJobDetails_data</a> - The data to be returned by the
--   third party job worker.
--   
--   <a>$sel:id:ThirdPartyJobDetails'</a>, <a>thirdPartyJobDetails_id</a> -
--   The identifier used to identify the job details in AWS CodePipeline.
--   
--   <a>$sel:nonce:ThirdPartyJobDetails'</a>,
--   <a>thirdPartyJobDetails_nonce</a> - A system-generated random number
--   that AWS CodePipeline uses to ensure that the job is being worked on
--   by only one job worker. Use this number in an AcknowledgeThirdPartyJob
--   request.
newThirdPartyJobDetails :: ThirdPartyJobDetails

-- | Represents information about the state of transitions between one
--   stage and another stage.
--   
--   <i>See:</i> <a>newTransitionState</a> smart constructor.
data TransitionState
TransitionState' :: Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> TransitionState

-- | Create a value of <a>TransitionState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:TransitionState'</a>, <a>transitionState_enabled</a> -
--   Whether the transition between stages is enabled (true) or disabled
--   (false).
--   
--   <a>$sel:disabledReason:TransitionState'</a>,
--   <a>transitionState_disabledReason</a> - The user-specified reason why
--   the transition between two stages of a pipeline was disabled.
--   
--   <a>$sel:lastChangedAt:TransitionState'</a>,
--   <a>transitionState_lastChangedAt</a> - The timestamp when the
--   transition state was last changed.
--   
--   <a>$sel:lastChangedBy:TransitionState'</a>,
--   <a>transitionState_lastChangedBy</a> - The ID of the user who last
--   changed the transition state.
newTransitionState :: TransitionState

-- | The authentication applied to incoming webhook trigger requests.
--   
--   <i>See:</i> <a>newWebhookAuthConfiguration</a> smart constructor.
data WebhookAuthConfiguration
WebhookAuthConfiguration' :: Maybe Text -> Maybe Text -> WebhookAuthConfiguration

-- | Create a value of <a>WebhookAuthConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowedIPRange:WebhookAuthConfiguration'</a>,
--   <a>webhookAuthConfiguration_allowedIPRange</a> - The property used to
--   configure acceptance of webhooks in an IP address range. For IP, only
--   the <tt>AllowedIPRange</tt> property must be set. This property must
--   be set to a valid CIDR range.
--   
--   <a>$sel:secretToken:WebhookAuthConfiguration'</a>,
--   <a>webhookAuthConfiguration_secretToken</a> - The property used to
--   configure GitHub authentication. For GITHUB_HMAC, only the
--   <tt>SecretToken</tt> property must be set.
newWebhookAuthConfiguration :: WebhookAuthConfiguration

-- | Represents information about a webhook and its definition.
--   
--   <i>See:</i> <a>newWebhookDefinition</a> smart constructor.
data WebhookDefinition
WebhookDefinition' :: Text -> Text -> Text -> [WebhookFilterRule] -> WebhookAuthenticationType -> WebhookAuthConfiguration -> WebhookDefinition

-- | Create a value of <a>WebhookDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:WebhookDefinition'</a>, <a>webhookDefinition_name</a> -
--   The name of the webhook.
--   
--   <a>$sel:targetPipeline:WebhookDefinition'</a>,
--   <a>webhookDefinition_targetPipeline</a> - The name of the pipeline you
--   want to connect to the webhook.
--   
--   <a>$sel:targetAction:WebhookDefinition'</a>,
--   <a>webhookDefinition_targetAction</a> - The name of the action in a
--   pipeline you want to connect to the webhook. The action must be from
--   the source (first) stage of the pipeline.
--   
--   <a>$sel:filters:WebhookDefinition'</a>,
--   <a>webhookDefinition_filters</a> - A list of rules applied to the
--   body/payload sent in the POST request to a webhook URL. All defined
--   rules must pass for the request to be accepted and the pipeline
--   started.
--   
--   <a>$sel:authentication:WebhookDefinition'</a>,
--   <a>webhookDefinition_authentication</a> - Supported options are
--   GITHUB_HMAC, IP, and UNAUTHENTICATED.
--   
--   <ul>
--   <li>For information about the authentication scheme implemented by
--   GITHUB_HMAC, see <a>Securing your webhooks</a> on the GitHub Developer
--   website.</li>
--   <li>IP rejects webhooks trigger requests unless they originate from an
--   IP address in the IP range whitelisted in the authentication
--   configuration.</li>
--   <li>UNAUTHENTICATED accepts all webhook trigger requests regardless of
--   origin.</li>
--   </ul>
--   
--   <a>$sel:authenticationConfiguration:WebhookDefinition'</a>,
--   <a>webhookDefinition_authenticationConfiguration</a> - Properties that
--   configure the authentication applied to incoming webhook trigger
--   requests. The required properties depend on the authentication type.
--   For GITHUB_HMAC, only the <tt>SecretToken </tt>property must be set.
--   For IP, only the <tt>AllowedIPRange </tt>property must be set to a
--   valid CIDR range. For UNAUTHENTICATED, no properties can be set.
newWebhookDefinition :: Text -> Text -> Text -> WebhookAuthenticationType -> WebhookAuthConfiguration -> WebhookDefinition

-- | The event criteria that specify when a webhook notification is sent to
--   your URL.
--   
--   <i>See:</i> <a>newWebhookFilterRule</a> smart constructor.
data WebhookFilterRule
WebhookFilterRule' :: Maybe Text -> Text -> WebhookFilterRule

-- | Create a value of <a>WebhookFilterRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchEquals:WebhookFilterRule'</a>,
--   <a>webhookFilterRule_matchEquals</a> - The value selected by the
--   <tt>JsonPath</tt> expression must match what is supplied in the
--   <tt>MatchEquals</tt> field. Otherwise, the request is ignored.
--   Properties from the target action configuration can be included as
--   placeholders in this value by surrounding the action configuration key
--   with curly brackets. For example, if the value supplied here is
--   "refs/heads/{Branch}" and the target action has an action
--   configuration property called "Branch" with a value of "master", the
--   <tt>MatchEquals</tt> value is evaluated as "refs/heads/master". For a
--   list of action configuration properties for built-in action types, see
--   <a>Pipeline Structure Reference Action Requirements</a>.
--   
--   <a>$sel:jsonPath:WebhookFilterRule'</a>,
--   <a>webhookFilterRule_jsonPath</a> - A JsonPath expression that is
--   applied to the body/payload of the webhook. The value selected by the
--   JsonPath expression must match the value specified in the
--   <tt>MatchEquals</tt> field. Otherwise, the request is ignored. For
--   more information, see <a>Java JsonPath implementation</a> in GitHub.
newWebhookFilterRule :: Text -> WebhookFilterRule
