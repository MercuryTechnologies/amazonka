-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-personalizeZSamazonka-personalize
@version 2.0


module Amazonka.Personalize.Types.AlgorithmImage

-- | Describes an algorithm image.
--   
--   <i>See:</i> <a>newAlgorithmImage</a> smart constructor.
data AlgorithmImage
AlgorithmImage' :: Maybe Text -> Text -> AlgorithmImage

-- | The name of the algorithm image.
[$sel:name:AlgorithmImage'] :: AlgorithmImage -> Maybe Text

-- | The URI of the Docker container for the algorithm image.
[$sel:dockerURI:AlgorithmImage'] :: AlgorithmImage -> Text

-- | Create a value of <a>AlgorithmImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AlgorithmImage'</a>, <a>algorithmImage_name</a> - The
--   name of the algorithm image.
--   
--   <a>$sel:dockerURI:AlgorithmImage'</a>, <a>algorithmImage_dockerURI</a>
--   - The URI of the Docker container for the algorithm image.
newAlgorithmImage :: Text -> AlgorithmImage

-- | The name of the algorithm image.
algorithmImage_name :: Lens' AlgorithmImage (Maybe Text)

-- | The URI of the Docker container for the algorithm image.
algorithmImage_dockerURI :: Lens' AlgorithmImage Text
instance GHC.Generics.Generic Amazonka.Personalize.Types.AlgorithmImage.AlgorithmImage
instance GHC.Show.Show Amazonka.Personalize.Types.AlgorithmImage.AlgorithmImage
instance GHC.Read.Read Amazonka.Personalize.Types.AlgorithmImage.AlgorithmImage
instance GHC.Classes.Eq Amazonka.Personalize.Types.AlgorithmImage.AlgorithmImage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.AlgorithmImage.AlgorithmImage
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.AlgorithmImage.AlgorithmImage
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.AlgorithmImage.AlgorithmImage


module Amazonka.Personalize.Types.AutoMLConfig

-- | When the solution performs AutoML (<tt>performAutoML</tt> is true in
--   CreateSolution), Amazon Personalize determines which recipe, from the
--   specified list, optimizes the given metric. Amazon Personalize then
--   uses that recipe for the solution.
--   
--   <i>See:</i> <a>newAutoMLConfig</a> smart constructor.
data AutoMLConfig
AutoMLConfig' :: Maybe [Text] -> Maybe Text -> AutoMLConfig

-- | The list of candidate recipes.
[$sel:recipeList:AutoMLConfig'] :: AutoMLConfig -> Maybe [Text]

-- | The metric to optimize.
[$sel:metricName:AutoMLConfig'] :: AutoMLConfig -> Maybe Text

-- | Create a value of <a>AutoMLConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeList:AutoMLConfig'</a>, <a>autoMLConfig_recipeList</a> -
--   The list of candidate recipes.
--   
--   <a>$sel:metricName:AutoMLConfig'</a>, <a>autoMLConfig_metricName</a> -
--   The metric to optimize.
newAutoMLConfig :: AutoMLConfig

-- | The list of candidate recipes.
autoMLConfig_recipeList :: Lens' AutoMLConfig (Maybe [Text])

-- | The metric to optimize.
autoMLConfig_metricName :: Lens' AutoMLConfig (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.AutoMLConfig.AutoMLConfig
instance GHC.Show.Show Amazonka.Personalize.Types.AutoMLConfig.AutoMLConfig
instance GHC.Read.Read Amazonka.Personalize.Types.AutoMLConfig.AutoMLConfig
instance GHC.Classes.Eq Amazonka.Personalize.Types.AutoMLConfig.AutoMLConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.AutoMLConfig.AutoMLConfig
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.AutoMLConfig.AutoMLConfig
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.AutoMLConfig.AutoMLConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.AutoMLConfig.AutoMLConfig


module Amazonka.Personalize.Types.AutoMLResult

-- | When the solution performs AutoML (<tt>performAutoML</tt> is true in
--   CreateSolution), specifies the recipe that best optimized the
--   specified metric.
--   
--   <i>See:</i> <a>newAutoMLResult</a> smart constructor.
data AutoMLResult
AutoMLResult' :: Maybe Text -> AutoMLResult

-- | The Amazon Resource Name (ARN) of the best recipe.
[$sel:bestRecipeArn:AutoMLResult'] :: AutoMLResult -> Maybe Text

-- | Create a value of <a>AutoMLResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bestRecipeArn:AutoMLResult'</a>,
--   <a>autoMLResult_bestRecipeArn</a> - The Amazon Resource Name (ARN) of
--   the best recipe.
newAutoMLResult :: AutoMLResult

-- | The Amazon Resource Name (ARN) of the best recipe.
autoMLResult_bestRecipeArn :: Lens' AutoMLResult (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.AutoMLResult.AutoMLResult
instance GHC.Show.Show Amazonka.Personalize.Types.AutoMLResult.AutoMLResult
instance GHC.Read.Read Amazonka.Personalize.Types.AutoMLResult.AutoMLResult
instance GHC.Classes.Eq Amazonka.Personalize.Types.AutoMLResult.AutoMLResult
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.AutoMLResult.AutoMLResult
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.AutoMLResult.AutoMLResult
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.AutoMLResult.AutoMLResult


module Amazonka.Personalize.Types.BatchInferenceJobConfig

-- | The configuration details of a batch inference job.
--   
--   <i>See:</i> <a>newBatchInferenceJobConfig</a> smart constructor.
data BatchInferenceJobConfig
BatchInferenceJobConfig' :: Maybe (HashMap Text Text) -> BatchInferenceJobConfig

-- | A string to string map specifying the exploration configuration
--   hyperparameters, including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. See <a>User-Personalization</a>.
[$sel:itemExplorationConfig:BatchInferenceJobConfig'] :: BatchInferenceJobConfig -> Maybe (HashMap Text Text)

-- | Create a value of <a>BatchInferenceJobConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:itemExplorationConfig:BatchInferenceJobConfig'</a>,
--   <a>batchInferenceJobConfig_itemExplorationConfig</a> - A string to
--   string map specifying the exploration configuration hyperparameters,
--   including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. See <a>User-Personalization</a>.
newBatchInferenceJobConfig :: BatchInferenceJobConfig

-- | A string to string map specifying the exploration configuration
--   hyperparameters, including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. See <a>User-Personalization</a>.
batchInferenceJobConfig_itemExplorationConfig :: Lens' BatchInferenceJobConfig (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.Personalize.Types.BatchInferenceJobConfig.BatchInferenceJobConfig
instance GHC.Show.Show Amazonka.Personalize.Types.BatchInferenceJobConfig.BatchInferenceJobConfig
instance GHC.Read.Read Amazonka.Personalize.Types.BatchInferenceJobConfig.BatchInferenceJobConfig
instance GHC.Classes.Eq Amazonka.Personalize.Types.BatchInferenceJobConfig.BatchInferenceJobConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.BatchInferenceJobConfig.BatchInferenceJobConfig
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.BatchInferenceJobConfig.BatchInferenceJobConfig
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.BatchInferenceJobConfig.BatchInferenceJobConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.BatchInferenceJobConfig.BatchInferenceJobConfig


module Amazonka.Personalize.Types.BatchInferenceJobSummary

-- | A truncated version of the BatchInferenceJob datatype. The
--   ListBatchInferenceJobs operation returns a list of batch inference job
--   summaries.
--   
--   <i>See:</i> <a>newBatchInferenceJobSummary</a> smart constructor.
data BatchInferenceJobSummary
BatchInferenceJobSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> BatchInferenceJobSummary

-- | If the batch inference job failed, the reason for the failure.
[$sel:failureReason:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe Text

-- | The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
[$sel:status:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe Text

-- | The name of the batch inference job.
[$sel:jobName:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe Text

-- | The time at which the batch inference job was last updated.
[$sel:lastUpdatedDateTime:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the batch inference job.
[$sel:batchInferenceJobArn:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe Text

-- | The time at which the batch inference job was created.
[$sel:creationDateTime:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe POSIX

-- | The ARN of the solution version used by the batch inference job.
[$sel:solutionVersionArn:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe Text

-- | Create a value of <a>BatchInferenceJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_failureReason</a> - If the batch inference
--   job failed, the reason for the failure.
--   
--   <a>$sel:status:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_status</a> - The status of the batch
--   inference job. The status is one of the following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
--   
--   <a>$sel:jobName:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_jobName</a> - The name of the batch
--   inference job.
--   
--   <a>$sel:lastUpdatedDateTime:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_lastUpdatedDateTime</a> - The time at
--   which the batch inference job was last updated.
--   
--   <a>$sel:batchInferenceJobArn:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_batchInferenceJobArn</a> - The Amazon
--   Resource Name (ARN) of the batch inference job.
--   
--   <a>$sel:creationDateTime:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_creationDateTime</a> - The time at which
--   the batch inference job was created.
--   
--   <a>$sel:solutionVersionArn:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_solutionVersionArn</a> - The ARN of the
--   solution version used by the batch inference job.
newBatchInferenceJobSummary :: BatchInferenceJobSummary

-- | If the batch inference job failed, the reason for the failure.
batchInferenceJobSummary_failureReason :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
batchInferenceJobSummary_status :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | The name of the batch inference job.
batchInferenceJobSummary_jobName :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | The time at which the batch inference job was last updated.
batchInferenceJobSummary_lastUpdatedDateTime :: Lens' BatchInferenceJobSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the batch inference job.
batchInferenceJobSummary_batchInferenceJobArn :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | The time at which the batch inference job was created.
batchInferenceJobSummary_creationDateTime :: Lens' BatchInferenceJobSummary (Maybe UTCTime)

-- | The ARN of the solution version used by the batch inference job.
batchInferenceJobSummary_solutionVersionArn :: Lens' BatchInferenceJobSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.BatchInferenceJobSummary.BatchInferenceJobSummary
instance GHC.Show.Show Amazonka.Personalize.Types.BatchInferenceJobSummary.BatchInferenceJobSummary
instance GHC.Read.Read Amazonka.Personalize.Types.BatchInferenceJobSummary.BatchInferenceJobSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.BatchInferenceJobSummary.BatchInferenceJobSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.BatchInferenceJobSummary.BatchInferenceJobSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.BatchInferenceJobSummary.BatchInferenceJobSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.BatchInferenceJobSummary.BatchInferenceJobSummary


module Amazonka.Personalize.Types.CampaignConfig

-- | The configuration details of a campaign.
--   
--   <i>See:</i> <a>newCampaignConfig</a> smart constructor.
data CampaignConfig
CampaignConfig' :: Maybe (HashMap Text Text) -> CampaignConfig

-- | A string to string map specifying the exploration configuration
--   hyperparameters, including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. Provide <tt>itemExplorationConfig</tt> data only if your
--   solution uses the <a>User-Personalization</a> recipe.
[$sel:itemExplorationConfig:CampaignConfig'] :: CampaignConfig -> Maybe (HashMap Text Text)

-- | Create a value of <a>CampaignConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:itemExplorationConfig:CampaignConfig'</a>,
--   <a>campaignConfig_itemExplorationConfig</a> - A string to string map
--   specifying the exploration configuration hyperparameters, including
--   <tt>explorationWeight</tt> and <tt>explorationItemAgeCutOff</tt>, you
--   want to use to configure the amount of item exploration Amazon
--   Personalize uses when recommending items. Provide
--   <tt>itemExplorationConfig</tt> data only if your solution uses the
--   <a>User-Personalization</a> recipe.
newCampaignConfig :: CampaignConfig

-- | A string to string map specifying the exploration configuration
--   hyperparameters, including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. Provide <tt>itemExplorationConfig</tt> data only if your
--   solution uses the <a>User-Personalization</a> recipe.
campaignConfig_itemExplorationConfig :: Lens' CampaignConfig (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.Personalize.Types.CampaignConfig.CampaignConfig
instance GHC.Show.Show Amazonka.Personalize.Types.CampaignConfig.CampaignConfig
instance GHC.Read.Read Amazonka.Personalize.Types.CampaignConfig.CampaignConfig
instance GHC.Classes.Eq Amazonka.Personalize.Types.CampaignConfig.CampaignConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.CampaignConfig.CampaignConfig
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.CampaignConfig.CampaignConfig
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.CampaignConfig.CampaignConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.CampaignConfig.CampaignConfig


module Amazonka.Personalize.Types.CampaignSummary

-- | Provides a summary of the properties of a campaign. For a complete
--   listing, call the DescribeCampaign API.
--   
--   <i>See:</i> <a>newCampaignSummary</a> smart constructor.
data CampaignSummary
CampaignSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> CampaignSummary

-- | If a campaign fails, the reason behind the failure.
[$sel:failureReason:CampaignSummary'] :: CampaignSummary -> Maybe Text

-- | The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:CampaignSummary'] :: CampaignSummary -> Maybe Text

-- | The date and time (in Unix time) that the campaign was last updated.
[$sel:lastUpdatedDateTime:CampaignSummary'] :: CampaignSummary -> Maybe POSIX

-- | The name of the campaign.
[$sel:name:CampaignSummary'] :: CampaignSummary -> Maybe Text

-- | The date and time (in Unix time) that the campaign was created.
[$sel:creationDateTime:CampaignSummary'] :: CampaignSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the campaign.
[$sel:campaignArn:CampaignSummary'] :: CampaignSummary -> Maybe Text

-- | Create a value of <a>CampaignSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:CampaignSummary'</a>,
--   <a>campaignSummary_failureReason</a> - If a campaign fails, the reason
--   behind the failure.
--   
--   <a>$sel:status:CampaignSummary'</a>, <a>campaignSummary_status</a> -
--   The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:CampaignSummary'</a>,
--   <a>campaignSummary_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the campaign was last updated.
--   
--   <a>$sel:name:CampaignSummary'</a>, <a>campaignSummary_name</a> - The
--   name of the campaign.
--   
--   <a>$sel:creationDateTime:CampaignSummary'</a>,
--   <a>campaignSummary_creationDateTime</a> - The date and time (in Unix
--   time) that the campaign was created.
--   
--   <a>$sel:campaignArn:CampaignSummary'</a>,
--   <a>campaignSummary_campaignArn</a> - The Amazon Resource Name (ARN) of
--   the campaign.
newCampaignSummary :: CampaignSummary

-- | If a campaign fails, the reason behind the failure.
campaignSummary_failureReason :: Lens' CampaignSummary (Maybe Text)

-- | The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
campaignSummary_status :: Lens' CampaignSummary (Maybe Text)

-- | The date and time (in Unix time) that the campaign was last updated.
campaignSummary_lastUpdatedDateTime :: Lens' CampaignSummary (Maybe UTCTime)

-- | The name of the campaign.
campaignSummary_name :: Lens' CampaignSummary (Maybe Text)

-- | The date and time (in Unix time) that the campaign was created.
campaignSummary_creationDateTime :: Lens' CampaignSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the campaign.
campaignSummary_campaignArn :: Lens' CampaignSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.CampaignSummary.CampaignSummary
instance GHC.Show.Show Amazonka.Personalize.Types.CampaignSummary.CampaignSummary
instance GHC.Read.Read Amazonka.Personalize.Types.CampaignSummary.CampaignSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.CampaignSummary.CampaignSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.CampaignSummary.CampaignSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.CampaignSummary.CampaignSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.CampaignSummary.CampaignSummary


module Amazonka.Personalize.Types.CampaignUpdateSummary

-- | Provides a summary of the properties of a campaign update. For a
--   complete listing, call the DescribeCampaign API.
--   
--   <i>See:</i> <a>newCampaignUpdateSummary</a> smart constructor.
data CampaignUpdateSummary
CampaignUpdateSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe CampaignConfig -> Maybe Natural -> Maybe POSIX -> Maybe Text -> CampaignUpdateSummary

-- | If a campaign update fails, the reason behind the failure.
[$sel:failureReason:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe Text

-- | The status of the campaign update.
--   
--   A campaign update can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe Text

-- | The date and time (in Unix time) that the campaign update was last
--   updated.
[$sel:lastUpdatedDateTime:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe POSIX
[$sel:campaignConfig:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe CampaignConfig

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second that Amazon Personalize will support.
[$sel:minProvisionedTPS:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe Natural

-- | The date and time (in Unix time) that the campaign update was created.
[$sel:creationDateTime:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the deployed solution version.
[$sel:solutionVersionArn:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe Text

-- | Create a value of <a>CampaignUpdateSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_failureReason</a> - If a campaign update
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_status</a> - The status of the campaign
--   update.
--   
--   A campaign update can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the campaign update was last updated.
--   
--   <a>$sel:campaignConfig:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_campaignConfig</a> - Undocumented member.
--   
--   <a>$sel:minProvisionedTPS:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_minProvisionedTPS</a> - Specifies the
--   requested minimum provisioned transactions (recommendations) per
--   second that Amazon Personalize will support.
--   
--   <a>$sel:creationDateTime:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_creationDateTime</a> - The date and time (in
--   Unix time) that the campaign update was created.
--   
--   <a>$sel:solutionVersionArn:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_solutionVersionArn</a> - The Amazon Resource
--   Name (ARN) of the deployed solution version.
newCampaignUpdateSummary :: CampaignUpdateSummary

-- | If a campaign update fails, the reason behind the failure.
campaignUpdateSummary_failureReason :: Lens' CampaignUpdateSummary (Maybe Text)

-- | The status of the campaign update.
--   
--   A campaign update can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
campaignUpdateSummary_status :: Lens' CampaignUpdateSummary (Maybe Text)

-- | The date and time (in Unix time) that the campaign update was last
--   updated.
campaignUpdateSummary_lastUpdatedDateTime :: Lens' CampaignUpdateSummary (Maybe UTCTime)

-- | Undocumented member.
campaignUpdateSummary_campaignConfig :: Lens' CampaignUpdateSummary (Maybe CampaignConfig)

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second that Amazon Personalize will support.
campaignUpdateSummary_minProvisionedTPS :: Lens' CampaignUpdateSummary (Maybe Natural)

-- | The date and time (in Unix time) that the campaign update was created.
campaignUpdateSummary_creationDateTime :: Lens' CampaignUpdateSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the deployed solution version.
campaignUpdateSummary_solutionVersionArn :: Lens' CampaignUpdateSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.CampaignUpdateSummary.CampaignUpdateSummary
instance GHC.Show.Show Amazonka.Personalize.Types.CampaignUpdateSummary.CampaignUpdateSummary
instance GHC.Read.Read Amazonka.Personalize.Types.CampaignUpdateSummary.CampaignUpdateSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.CampaignUpdateSummary.CampaignUpdateSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.CampaignUpdateSummary.CampaignUpdateSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.CampaignUpdateSummary.CampaignUpdateSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.CampaignUpdateSummary.CampaignUpdateSummary


module Amazonka.Personalize.Types.Campaign

-- | Describes a deployed solution version, otherwise known as a campaign.
--   For more information on campaigns, see CreateCampaign.
--   
--   <i>See:</i> <a>newCampaign</a> smart constructor.
data Campaign
Campaign' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe CampaignConfig -> Maybe CampaignUpdateSummary -> Maybe Text -> Maybe Natural -> Maybe POSIX -> Maybe Text -> Maybe Text -> Campaign

-- | If a campaign fails, the reason behind the failure.
[$sel:failureReason:Campaign'] :: Campaign -> Maybe Text

-- | The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:Campaign'] :: Campaign -> Maybe Text

-- | The date and time (in Unix format) that the campaign was last updated.
[$sel:lastUpdatedDateTime:Campaign'] :: Campaign -> Maybe POSIX

-- | The configuration details of a campaign.
[$sel:campaignConfig:Campaign'] :: Campaign -> Maybe CampaignConfig
[$sel:latestCampaignUpdate:Campaign'] :: Campaign -> Maybe CampaignUpdateSummary

-- | The name of the campaign.
[$sel:name:Campaign'] :: Campaign -> Maybe Text

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second.
[$sel:minProvisionedTPS:Campaign'] :: Campaign -> Maybe Natural

-- | The date and time (in Unix format) that the campaign was created.
[$sel:creationDateTime:Campaign'] :: Campaign -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the campaign.
[$sel:campaignArn:Campaign'] :: Campaign -> Maybe Text

-- | The Amazon Resource Name (ARN) of a specific version of the solution.
[$sel:solutionVersionArn:Campaign'] :: Campaign -> Maybe Text

-- | Create a value of <a>Campaign</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:Campaign'</a>, <a>campaign_failureReason</a> -
--   If a campaign fails, the reason behind the failure.
--   
--   <a>$sel:status:Campaign'</a>, <a>campaign_status</a> - The status of
--   the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:Campaign'</a>,
--   <a>campaign_lastUpdatedDateTime</a> - The date and time (in Unix
--   format) that the campaign was last updated.
--   
--   <a>$sel:campaignConfig:Campaign'</a>, <a>campaign_campaignConfig</a> -
--   The configuration details of a campaign.
--   
--   <a>$sel:latestCampaignUpdate:Campaign'</a>,
--   <a>campaign_latestCampaignUpdate</a> - Undocumented member.
--   
--   <a>$sel:name:Campaign'</a>, <a>campaign_name</a> - The name of the
--   campaign.
--   
--   <a>$sel:minProvisionedTPS:Campaign'</a>,
--   <a>campaign_minProvisionedTPS</a> - Specifies the requested minimum
--   provisioned transactions (recommendations) per second.
--   
--   <a>$sel:creationDateTime:Campaign'</a>,
--   <a>campaign_creationDateTime</a> - The date and time (in Unix format)
--   that the campaign was created.
--   
--   <a>$sel:campaignArn:Campaign'</a>, <a>campaign_campaignArn</a> - The
--   Amazon Resource Name (ARN) of the campaign.
--   
--   <a>$sel:solutionVersionArn:Campaign'</a>,
--   <a>campaign_solutionVersionArn</a> - The Amazon Resource Name (ARN) of
--   a specific version of the solution.
newCampaign :: Campaign

-- | If a campaign fails, the reason behind the failure.
campaign_failureReason :: Lens' Campaign (Maybe Text)

-- | The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
campaign_status :: Lens' Campaign (Maybe Text)

-- | The date and time (in Unix format) that the campaign was last updated.
campaign_lastUpdatedDateTime :: Lens' Campaign (Maybe UTCTime)

-- | The configuration details of a campaign.
campaign_campaignConfig :: Lens' Campaign (Maybe CampaignConfig)

-- | Undocumented member.
campaign_latestCampaignUpdate :: Lens' Campaign (Maybe CampaignUpdateSummary)

-- | The name of the campaign.
campaign_name :: Lens' Campaign (Maybe Text)

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second.
campaign_minProvisionedTPS :: Lens' Campaign (Maybe Natural)

-- | The date and time (in Unix format) that the campaign was created.
campaign_creationDateTime :: Lens' Campaign (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the campaign.
campaign_campaignArn :: Lens' Campaign (Maybe Text)

-- | The Amazon Resource Name (ARN) of a specific version of the solution.
campaign_solutionVersionArn :: Lens' Campaign (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.Campaign.Campaign
instance GHC.Show.Show Amazonka.Personalize.Types.Campaign.Campaign
instance GHC.Read.Read Amazonka.Personalize.Types.Campaign.Campaign
instance GHC.Classes.Eq Amazonka.Personalize.Types.Campaign.Campaign
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.Campaign.Campaign
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.Campaign.Campaign
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.Campaign.Campaign


module Amazonka.Personalize.Types.CategoricalHyperParameterRange

-- | Provides the name and range of a categorical hyperparameter.
--   
--   <i>See:</i> <a>newCategoricalHyperParameterRange</a> smart
--   constructor.
data CategoricalHyperParameterRange
CategoricalHyperParameterRange' :: Maybe [Text] -> Maybe Text -> CategoricalHyperParameterRange

-- | A list of the categories for the hyperparameter.
[$sel:values:CategoricalHyperParameterRange'] :: CategoricalHyperParameterRange -> Maybe [Text]

-- | The name of the hyperparameter.
[$sel:name:CategoricalHyperParameterRange'] :: CategoricalHyperParameterRange -> Maybe Text

-- | Create a value of <a>CategoricalHyperParameterRange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:CategoricalHyperParameterRange'</a>,
--   <a>categoricalHyperParameterRange_values</a> - A list of the
--   categories for the hyperparameter.
--   
--   <a>$sel:name:CategoricalHyperParameterRange'</a>,
--   <a>categoricalHyperParameterRange_name</a> - The name of the
--   hyperparameter.
newCategoricalHyperParameterRange :: CategoricalHyperParameterRange

-- | A list of the categories for the hyperparameter.
categoricalHyperParameterRange_values :: Lens' CategoricalHyperParameterRange (Maybe [Text])

-- | The name of the hyperparameter.
categoricalHyperParameterRange_name :: Lens' CategoricalHyperParameterRange (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.CategoricalHyperParameterRange.CategoricalHyperParameterRange
instance GHC.Show.Show Amazonka.Personalize.Types.CategoricalHyperParameterRange.CategoricalHyperParameterRange
instance GHC.Read.Read Amazonka.Personalize.Types.CategoricalHyperParameterRange.CategoricalHyperParameterRange
instance GHC.Classes.Eq Amazonka.Personalize.Types.CategoricalHyperParameterRange.CategoricalHyperParameterRange
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.CategoricalHyperParameterRange.CategoricalHyperParameterRange
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.CategoricalHyperParameterRange.CategoricalHyperParameterRange
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.CategoricalHyperParameterRange.CategoricalHyperParameterRange
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.CategoricalHyperParameterRange.CategoricalHyperParameterRange


module Amazonka.Personalize.Types.ContinuousHyperParameterRange

-- | Provides the name and range of a continuous hyperparameter.
--   
--   <i>See:</i> <a>newContinuousHyperParameterRange</a> smart constructor.
data ContinuousHyperParameterRange
ContinuousHyperParameterRange' :: Maybe Double -> Maybe Text -> Maybe Double -> ContinuousHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
[$sel:maxValue:ContinuousHyperParameterRange'] :: ContinuousHyperParameterRange -> Maybe Double

-- | The name of the hyperparameter.
[$sel:name:ContinuousHyperParameterRange'] :: ContinuousHyperParameterRange -> Maybe Text

-- | The minimum allowable value for the hyperparameter.
[$sel:minValue:ContinuousHyperParameterRange'] :: ContinuousHyperParameterRange -> Maybe Double

-- | Create a value of <a>ContinuousHyperParameterRange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:ContinuousHyperParameterRange'</a>,
--   <a>continuousHyperParameterRange_maxValue</a> - The maximum allowable
--   value for the hyperparameter.
--   
--   <a>$sel:name:ContinuousHyperParameterRange'</a>,
--   <a>continuousHyperParameterRange_name</a> - The name of the
--   hyperparameter.
--   
--   <a>$sel:minValue:ContinuousHyperParameterRange'</a>,
--   <a>continuousHyperParameterRange_minValue</a> - The minimum allowable
--   value for the hyperparameter.
newContinuousHyperParameterRange :: ContinuousHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
continuousHyperParameterRange_maxValue :: Lens' ContinuousHyperParameterRange (Maybe Double)

-- | The name of the hyperparameter.
continuousHyperParameterRange_name :: Lens' ContinuousHyperParameterRange (Maybe Text)

-- | The minimum allowable value for the hyperparameter.
continuousHyperParameterRange_minValue :: Lens' ContinuousHyperParameterRange (Maybe Double)
instance GHC.Generics.Generic Amazonka.Personalize.Types.ContinuousHyperParameterRange.ContinuousHyperParameterRange
instance GHC.Show.Show Amazonka.Personalize.Types.ContinuousHyperParameterRange.ContinuousHyperParameterRange
instance GHC.Read.Read Amazonka.Personalize.Types.ContinuousHyperParameterRange.ContinuousHyperParameterRange
instance GHC.Classes.Eq Amazonka.Personalize.Types.ContinuousHyperParameterRange.ContinuousHyperParameterRange
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.ContinuousHyperParameterRange.ContinuousHyperParameterRange
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.ContinuousHyperParameterRange.ContinuousHyperParameterRange
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.ContinuousHyperParameterRange.ContinuousHyperParameterRange
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.ContinuousHyperParameterRange.ContinuousHyperParameterRange


module Amazonka.Personalize.Types.DataSource

-- | Describes the data source that contains the data to upload to a
--   dataset.
--   
--   <i>See:</i> <a>newDataSource</a> smart constructor.
data DataSource
DataSource' :: Maybe Text -> DataSource

-- | The path to the Amazon S3 bucket where the data that you want to
--   upload to your dataset is stored. For example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
[$sel:dataLocation:DataSource'] :: DataSource -> Maybe Text

-- | Create a value of <a>DataSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLocation:DataSource'</a>, <a>dataSource_dataLocation</a> -
--   The path to the Amazon S3 bucket where the data that you want to
--   upload to your dataset is stored. For example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
newDataSource :: DataSource

-- | The path to the Amazon S3 bucket where the data that you want to
--   upload to your dataset is stored. For example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
dataSource_dataLocation :: Lens' DataSource (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DataSource.DataSource
instance GHC.Show.Show Amazonka.Personalize.Types.DataSource.DataSource
instance GHC.Read.Read Amazonka.Personalize.Types.DataSource.DataSource
instance GHC.Classes.Eq Amazonka.Personalize.Types.DataSource.DataSource
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DataSource.DataSource
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DataSource.DataSource
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DataSource.DataSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.DataSource.DataSource


module Amazonka.Personalize.Types.Dataset

-- | Provides metadata for a dataset.
--   
--   <i>See:</i> <a>newDataset</a> smart constructor.
data Dataset
Dataset' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Dataset

-- | The status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:Dataset'] :: Dataset -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset that you want metadata
--   for.
[$sel:datasetArn:Dataset'] :: Dataset -> Maybe Text

-- | A time stamp that shows when the dataset was updated.
[$sel:lastUpdatedDateTime:Dataset'] :: Dataset -> Maybe POSIX

-- | The ARN of the associated schema.
[$sel:schemaArn:Dataset'] :: Dataset -> Maybe Text

-- | The name of the dataset.
[$sel:name:Dataset'] :: Dataset -> Maybe Text

-- | One of the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
[$sel:datasetType:Dataset'] :: Dataset -> Maybe Text

-- | The creation date and time (in Unix time) of the dataset.
[$sel:creationDateTime:Dataset'] :: Dataset -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset group.
[$sel:datasetGroupArn:Dataset'] :: Dataset -> Maybe Text

-- | Create a value of <a>Dataset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Dataset'</a>, <a>dataset_status</a> - The status of the
--   dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:datasetArn:Dataset'</a>, <a>dataset_datasetArn</a> - The
--   Amazon Resource Name (ARN) of the dataset that you want metadata for.
--   
--   <a>$sel:lastUpdatedDateTime:Dataset'</a>,
--   <a>dataset_lastUpdatedDateTime</a> - A time stamp that shows when the
--   dataset was updated.
--   
--   <a>$sel:schemaArn:Dataset'</a>, <a>dataset_schemaArn</a> - The ARN of
--   the associated schema.
--   
--   <a>$sel:name:Dataset'</a>, <a>dataset_name</a> - The name of the
--   dataset.
--   
--   <a>$sel:datasetType:Dataset'</a>, <a>dataset_datasetType</a> - One of
--   the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
--   
--   <a>$sel:creationDateTime:Dataset'</a>, <a>dataset_creationDateTime</a>
--   - The creation date and time (in Unix time) of the dataset.
--   
--   <a>$sel:datasetGroupArn:Dataset'</a>, <a>dataset_datasetGroupArn</a> -
--   The Amazon Resource Name (ARN) of the dataset group.
newDataset :: Dataset

-- | The status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
dataset_status :: Lens' Dataset (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset that you want metadata
--   for.
dataset_datasetArn :: Lens' Dataset (Maybe Text)

-- | A time stamp that shows when the dataset was updated.
dataset_lastUpdatedDateTime :: Lens' Dataset (Maybe UTCTime)

-- | The ARN of the associated schema.
dataset_schemaArn :: Lens' Dataset (Maybe Text)

-- | The name of the dataset.
dataset_name :: Lens' Dataset (Maybe Text)

-- | One of the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
dataset_datasetType :: Lens' Dataset (Maybe Text)

-- | The creation date and time (in Unix time) of the dataset.
dataset_creationDateTime :: Lens' Dataset (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group.
dataset_datasetGroupArn :: Lens' Dataset (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.Dataset.Dataset
instance GHC.Show.Show Amazonka.Personalize.Types.Dataset.Dataset
instance GHC.Read.Read Amazonka.Personalize.Types.Dataset.Dataset
instance GHC.Classes.Eq Amazonka.Personalize.Types.Dataset.Dataset
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.Dataset.Dataset
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.Dataset.Dataset
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.Dataset.Dataset


module Amazonka.Personalize.Types.DatasetExportJobSummary

-- | Provides a summary of the properties of a dataset export job. For a
--   complete listing, call the DescribeDatasetExportJob API.
--   
--   <i>See:</i> <a>newDatasetExportJobSummary</a> smart constructor.
data DatasetExportJobSummary
DatasetExportJobSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> DatasetExportJobSummary

-- | If a dataset export job fails, the reason behind the failure.
[$sel:failureReason:DatasetExportJobSummary'] :: DatasetExportJobSummary -> Maybe Text

-- | The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
[$sel:status:DatasetExportJobSummary'] :: DatasetExportJobSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset export job.
[$sel:datasetExportJobArn:DatasetExportJobSummary'] :: DatasetExportJobSummary -> Maybe Text

-- | The name of the dataset export job.
[$sel:jobName:DatasetExportJobSummary'] :: DatasetExportJobSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset export job status
--   was last updated.
[$sel:lastUpdatedDateTime:DatasetExportJobSummary'] :: DatasetExportJobSummary -> Maybe POSIX

-- | The date and time (in Unix time) that the dataset export job was
--   created.
[$sel:creationDateTime:DatasetExportJobSummary'] :: DatasetExportJobSummary -> Maybe POSIX

-- | Create a value of <a>DatasetExportJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_failureReason</a> - If a dataset export job
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_status</a> - The status of the dataset
--   export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:datasetExportJobArn:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_datasetExportJobArn</a> - The Amazon
--   Resource Name (ARN) of the dataset export job.
--   
--   <a>$sel:jobName:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_jobName</a> - The name of the dataset
--   export job.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the dataset export job status was last updated.
--   
--   <a>$sel:creationDateTime:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_creationDateTime</a> - The date and time
--   (in Unix time) that the dataset export job was created.
newDatasetExportJobSummary :: DatasetExportJobSummary

-- | If a dataset export job fails, the reason behind the failure.
datasetExportJobSummary_failureReason :: Lens' DatasetExportJobSummary (Maybe Text)

-- | The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
datasetExportJobSummary_status :: Lens' DatasetExportJobSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset export job.
datasetExportJobSummary_datasetExportJobArn :: Lens' DatasetExportJobSummary (Maybe Text)

-- | The name of the dataset export job.
datasetExportJobSummary_jobName :: Lens' DatasetExportJobSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset export job status
--   was last updated.
datasetExportJobSummary_lastUpdatedDateTime :: Lens' DatasetExportJobSummary (Maybe UTCTime)

-- | The date and time (in Unix time) that the dataset export job was
--   created.
datasetExportJobSummary_creationDateTime :: Lens' DatasetExportJobSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DatasetExportJobSummary.DatasetExportJobSummary
instance GHC.Show.Show Amazonka.Personalize.Types.DatasetExportJobSummary.DatasetExportJobSummary
instance GHC.Read.Read Amazonka.Personalize.Types.DatasetExportJobSummary.DatasetExportJobSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.DatasetExportJobSummary.DatasetExportJobSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DatasetExportJobSummary.DatasetExportJobSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DatasetExportJobSummary.DatasetExportJobSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DatasetExportJobSummary.DatasetExportJobSummary


module Amazonka.Personalize.Types.DatasetGroup

-- | A dataset group is a collection of related datasets (Interactions,
--   User, and Item). You create a dataset group by calling
--   CreateDatasetGroup. You then create a dataset and add it to a dataset
--   group by calling CreateDataset. The dataset group is used to create
--   and train a solution by calling CreateSolution. A dataset group can
--   contain only one of each type of dataset.
--   
--   You can specify an Key Management Service (KMS) key to encrypt the
--   datasets in the group.
--   
--   <i>See:</i> <a>newDatasetGroup</a> smart constructor.
data DatasetGroup
DatasetGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> DatasetGroup

-- | If creating a dataset group fails, provides the reason why.
[$sel:failureReason:DatasetGroup'] :: DatasetGroup -> Maybe Text

-- | The current status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
[$sel:status:DatasetGroup'] :: DatasetGroup -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   used to encrypt the datasets.
[$sel:kmsKeyArn:DatasetGroup'] :: DatasetGroup -> Maybe Text

-- | The last update date and time (in Unix time) of the dataset group.
[$sel:lastUpdatedDateTime:DatasetGroup'] :: DatasetGroup -> Maybe POSIX

-- | The name of the dataset group.
[$sel:name:DatasetGroup'] :: DatasetGroup -> Maybe Text

-- | The creation date and time (in Unix time) of the dataset group.
[$sel:creationDateTime:DatasetGroup'] :: DatasetGroup -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset group.
[$sel:datasetGroupArn:DatasetGroup'] :: DatasetGroup -> Maybe Text

-- | The ARN of the IAM role that has permissions to create the dataset
--   group.
[$sel:roleArn:DatasetGroup'] :: DatasetGroup -> Maybe Text

-- | Create a value of <a>DatasetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetGroup'</a>,
--   <a>datasetGroup_failureReason</a> - If creating a dataset group fails,
--   provides the reason why.
--   
--   <a>$sel:status:DatasetGroup'</a>, <a>datasetGroup_status</a> - The
--   current status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
--   
--   <a>$sel:kmsKeyArn:DatasetGroup'</a>, <a>datasetGroup_kmsKeyArn</a> -
--   The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   used to encrypt the datasets.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetGroup'</a>,
--   <a>datasetGroup_lastUpdatedDateTime</a> - The last update date and
--   time (in Unix time) of the dataset group.
--   
--   <a>$sel:name:DatasetGroup'</a>, <a>datasetGroup_name</a> - The name of
--   the dataset group.
--   
--   <a>$sel:creationDateTime:DatasetGroup'</a>,
--   <a>datasetGroup_creationDateTime</a> - The creation date and time (in
--   Unix time) of the dataset group.
--   
--   <a>$sel:datasetGroupArn:DatasetGroup'</a>,
--   <a>datasetGroup_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group.
--   
--   <a>$sel:roleArn:DatasetGroup'</a>, <a>datasetGroup_roleArn</a> - The
--   ARN of the IAM role that has permissions to create the dataset group.
newDatasetGroup :: DatasetGroup

-- | If creating a dataset group fails, provides the reason why.
datasetGroup_failureReason :: Lens' DatasetGroup (Maybe Text)

-- | The current status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
datasetGroup_status :: Lens' DatasetGroup (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   used to encrypt the datasets.
datasetGroup_kmsKeyArn :: Lens' DatasetGroup (Maybe Text)

-- | The last update date and time (in Unix time) of the dataset group.
datasetGroup_lastUpdatedDateTime :: Lens' DatasetGroup (Maybe UTCTime)

-- | The name of the dataset group.
datasetGroup_name :: Lens' DatasetGroup (Maybe Text)

-- | The creation date and time (in Unix time) of the dataset group.
datasetGroup_creationDateTime :: Lens' DatasetGroup (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group.
datasetGroup_datasetGroupArn :: Lens' DatasetGroup (Maybe Text)

-- | The ARN of the IAM role that has permissions to create the dataset
--   group.
datasetGroup_roleArn :: Lens' DatasetGroup (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DatasetGroup.DatasetGroup
instance GHC.Show.Show Amazonka.Personalize.Types.DatasetGroup.DatasetGroup
instance GHC.Read.Read Amazonka.Personalize.Types.DatasetGroup.DatasetGroup
instance GHC.Classes.Eq Amazonka.Personalize.Types.DatasetGroup.DatasetGroup
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DatasetGroup.DatasetGroup
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DatasetGroup.DatasetGroup
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DatasetGroup.DatasetGroup


module Amazonka.Personalize.Types.DatasetGroupSummary

-- | Provides a summary of the properties of a dataset group. For a
--   complete listing, call the DescribeDatasetGroup API.
--   
--   <i>See:</i> <a>newDatasetGroupSummary</a> smart constructor.
data DatasetGroupSummary
DatasetGroupSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> DatasetGroupSummary

-- | If creating a dataset group fails, the reason behind the failure.
[$sel:failureReason:DatasetGroupSummary'] :: DatasetGroupSummary -> Maybe Text

-- | The status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
[$sel:status:DatasetGroupSummary'] :: DatasetGroupSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset group was last
--   updated.
[$sel:lastUpdatedDateTime:DatasetGroupSummary'] :: DatasetGroupSummary -> Maybe POSIX

-- | The name of the dataset group.
[$sel:name:DatasetGroupSummary'] :: DatasetGroupSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset group was created.
[$sel:creationDateTime:DatasetGroupSummary'] :: DatasetGroupSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset group.
[$sel:datasetGroupArn:DatasetGroupSummary'] :: DatasetGroupSummary -> Maybe Text

-- | Create a value of <a>DatasetGroupSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_failureReason</a> - If creating a dataset group
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_status</a> - The status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the dataset group was last updated.
--   
--   <a>$sel:name:DatasetGroupSummary'</a>, <a>datasetGroupSummary_name</a>
--   - The name of the dataset group.
--   
--   <a>$sel:creationDateTime:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_creationDateTime</a> - The date and time (in
--   Unix time) that the dataset group was created.
--   
--   <a>$sel:datasetGroupArn:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_datasetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the dataset group.
newDatasetGroupSummary :: DatasetGroupSummary

-- | If creating a dataset group fails, the reason behind the failure.
datasetGroupSummary_failureReason :: Lens' DatasetGroupSummary (Maybe Text)

-- | The status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
datasetGroupSummary_status :: Lens' DatasetGroupSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset group was last
--   updated.
datasetGroupSummary_lastUpdatedDateTime :: Lens' DatasetGroupSummary (Maybe UTCTime)

-- | The name of the dataset group.
datasetGroupSummary_name :: Lens' DatasetGroupSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset group was created.
datasetGroupSummary_creationDateTime :: Lens' DatasetGroupSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group.
datasetGroupSummary_datasetGroupArn :: Lens' DatasetGroupSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DatasetGroupSummary.DatasetGroupSummary
instance GHC.Show.Show Amazonka.Personalize.Types.DatasetGroupSummary.DatasetGroupSummary
instance GHC.Read.Read Amazonka.Personalize.Types.DatasetGroupSummary.DatasetGroupSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.DatasetGroupSummary.DatasetGroupSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DatasetGroupSummary.DatasetGroupSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DatasetGroupSummary.DatasetGroupSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DatasetGroupSummary.DatasetGroupSummary


module Amazonka.Personalize.Types.DatasetImportJob

-- | Describes a job that imports training data from a data source (Amazon
--   S3 bucket) to an Amazon Personalize dataset. For more information, see
--   CreateDatasetImportJob.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <i>See:</i> <a>newDatasetImportJob</a> smart constructor.
data DatasetImportJob
DatasetImportJob' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe DataSource -> Maybe POSIX -> Maybe Text -> DatasetImportJob

-- | If a dataset import job fails, provides the reason why.
[$sel:failureReason:DatasetImportJob'] :: DatasetImportJob -> Maybe Text

-- | The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
[$sel:status:DatasetImportJob'] :: DatasetImportJob -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset that receives the
--   imported data.
[$sel:datasetArn:DatasetImportJob'] :: DatasetImportJob -> Maybe Text

-- | The name of the import job.
[$sel:jobName:DatasetImportJob'] :: DatasetImportJob -> Maybe Text

-- | The date and time (in Unix time) the dataset was last updated.
[$sel:lastUpdatedDateTime:DatasetImportJob'] :: DatasetImportJob -> Maybe POSIX

-- | The ARN of the dataset import job.
[$sel:datasetImportJobArn:DatasetImportJob'] :: DatasetImportJob -> Maybe Text

-- | The Amazon S3 bucket that contains the training data to import.
[$sel:dataSource:DatasetImportJob'] :: DatasetImportJob -> Maybe DataSource

-- | The creation date and time (in Unix time) of the dataset import job.
[$sel:creationDateTime:DatasetImportJob'] :: DatasetImportJob -> Maybe POSIX

-- | The ARN of the IAM role that has permissions to read from the Amazon
--   S3 data source.
[$sel:roleArn:DatasetImportJob'] :: DatasetImportJob -> Maybe Text

-- | Create a value of <a>DatasetImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetImportJob'</a>,
--   <a>datasetImportJob_failureReason</a> - If a dataset import job fails,
--   provides the reason why.
--   
--   <a>$sel:status:DatasetImportJob'</a>, <a>datasetImportJob_status</a> -
--   The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:datasetArn:DatasetImportJob'</a>,
--   <a>datasetImportJob_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the dataset that receives the imported data.
--   
--   <a>$sel:jobName:DatasetImportJob'</a>, <a>datasetImportJob_jobName</a>
--   - The name of the import job.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetImportJob'</a>,
--   <a>datasetImportJob_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) the dataset was last updated.
--   
--   <a>$sel:datasetImportJobArn:DatasetImportJob'</a>,
--   <a>datasetImportJob_datasetImportJobArn</a> - The ARN of the dataset
--   import job.
--   
--   <a>$sel:dataSource:DatasetImportJob'</a>,
--   <a>datasetImportJob_dataSource</a> - The Amazon S3 bucket that
--   contains the training data to import.
--   
--   <a>$sel:creationDateTime:DatasetImportJob'</a>,
--   <a>datasetImportJob_creationDateTime</a> - The creation date and time
--   (in Unix time) of the dataset import job.
--   
--   <a>$sel:roleArn:DatasetImportJob'</a>, <a>datasetImportJob_roleArn</a>
--   - The ARN of the IAM role that has permissions to read from the Amazon
--   S3 data source.
newDatasetImportJob :: DatasetImportJob

-- | If a dataset import job fails, provides the reason why.
datasetImportJob_failureReason :: Lens' DatasetImportJob (Maybe Text)

-- | The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
datasetImportJob_status :: Lens' DatasetImportJob (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset that receives the
--   imported data.
datasetImportJob_datasetArn :: Lens' DatasetImportJob (Maybe Text)

-- | The name of the import job.
datasetImportJob_jobName :: Lens' DatasetImportJob (Maybe Text)

-- | The date and time (in Unix time) the dataset was last updated.
datasetImportJob_lastUpdatedDateTime :: Lens' DatasetImportJob (Maybe UTCTime)

-- | The ARN of the dataset import job.
datasetImportJob_datasetImportJobArn :: Lens' DatasetImportJob (Maybe Text)

-- | The Amazon S3 bucket that contains the training data to import.
datasetImportJob_dataSource :: Lens' DatasetImportJob (Maybe DataSource)

-- | The creation date and time (in Unix time) of the dataset import job.
datasetImportJob_creationDateTime :: Lens' DatasetImportJob (Maybe UTCTime)

-- | The ARN of the IAM role that has permissions to read from the Amazon
--   S3 data source.
datasetImportJob_roleArn :: Lens' DatasetImportJob (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DatasetImportJob.DatasetImportJob
instance GHC.Show.Show Amazonka.Personalize.Types.DatasetImportJob.DatasetImportJob
instance GHC.Read.Read Amazonka.Personalize.Types.DatasetImportJob.DatasetImportJob
instance GHC.Classes.Eq Amazonka.Personalize.Types.DatasetImportJob.DatasetImportJob
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DatasetImportJob.DatasetImportJob
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DatasetImportJob.DatasetImportJob
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DatasetImportJob.DatasetImportJob


module Amazonka.Personalize.Types.DatasetImportJobSummary

-- | Provides a summary of the properties of a dataset import job. For a
--   complete listing, call the DescribeDatasetImportJob API.
--   
--   <i>See:</i> <a>newDatasetImportJobSummary</a> smart constructor.
data DatasetImportJobSummary
DatasetImportJobSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> DatasetImportJobSummary

-- | If a dataset import job fails, the reason behind the failure.
[$sel:failureReason:DatasetImportJobSummary'] :: DatasetImportJobSummary -> Maybe Text

-- | The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
[$sel:status:DatasetImportJobSummary'] :: DatasetImportJobSummary -> Maybe Text

-- | The name of the dataset import job.
[$sel:jobName:DatasetImportJobSummary'] :: DatasetImportJobSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset import job status
--   was last updated.
[$sel:lastUpdatedDateTime:DatasetImportJobSummary'] :: DatasetImportJobSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset import job.
[$sel:datasetImportJobArn:DatasetImportJobSummary'] :: DatasetImportJobSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset import job was
--   created.
[$sel:creationDateTime:DatasetImportJobSummary'] :: DatasetImportJobSummary -> Maybe POSIX

-- | Create a value of <a>DatasetImportJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_failureReason</a> - If a dataset import job
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_status</a> - The status of the dataset
--   import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:jobName:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_jobName</a> - The name of the dataset
--   import job.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the dataset import job status was last updated.
--   
--   <a>$sel:datasetImportJobArn:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_datasetImportJobArn</a> - The Amazon
--   Resource Name (ARN) of the dataset import job.
--   
--   <a>$sel:creationDateTime:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_creationDateTime</a> - The date and time
--   (in Unix time) that the dataset import job was created.
newDatasetImportJobSummary :: DatasetImportJobSummary

-- | If a dataset import job fails, the reason behind the failure.
datasetImportJobSummary_failureReason :: Lens' DatasetImportJobSummary (Maybe Text)

-- | The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
datasetImportJobSummary_status :: Lens' DatasetImportJobSummary (Maybe Text)

-- | The name of the dataset import job.
datasetImportJobSummary_jobName :: Lens' DatasetImportJobSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset import job status
--   was last updated.
datasetImportJobSummary_lastUpdatedDateTime :: Lens' DatasetImportJobSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset import job.
datasetImportJobSummary_datasetImportJobArn :: Lens' DatasetImportJobSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset import job was
--   created.
datasetImportJobSummary_creationDateTime :: Lens' DatasetImportJobSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DatasetImportJobSummary.DatasetImportJobSummary
instance GHC.Show.Show Amazonka.Personalize.Types.DatasetImportJobSummary.DatasetImportJobSummary
instance GHC.Read.Read Amazonka.Personalize.Types.DatasetImportJobSummary.DatasetImportJobSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.DatasetImportJobSummary.DatasetImportJobSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DatasetImportJobSummary.DatasetImportJobSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DatasetImportJobSummary.DatasetImportJobSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DatasetImportJobSummary.DatasetImportJobSummary


module Amazonka.Personalize.Types.DatasetSchema

-- | Describes the schema for a dataset. For more information on schemas,
--   see CreateSchema.
--   
--   <i>See:</i> <a>newDatasetSchema</a> smart constructor.
data DatasetSchema
DatasetSchema' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> DatasetSchema

-- | The date and time (in Unix time) that the schema was last updated.
[$sel:lastUpdatedDateTime:DatasetSchema'] :: DatasetSchema -> Maybe POSIX

-- | The schema.
[$sel:schema:DatasetSchema'] :: DatasetSchema -> Maybe Text

-- | The Amazon Resource Name (ARN) of the schema.
[$sel:schemaArn:DatasetSchema'] :: DatasetSchema -> Maybe Text

-- | The name of the schema.
[$sel:name:DatasetSchema'] :: DatasetSchema -> Maybe Text

-- | The date and time (in Unix time) that the schema was created.
[$sel:creationDateTime:DatasetSchema'] :: DatasetSchema -> Maybe POSIX

-- | Create a value of <a>DatasetSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedDateTime:DatasetSchema'</a>,
--   <a>datasetSchema_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the schema was last updated.
--   
--   <a>$sel:schema:DatasetSchema'</a>, <a>datasetSchema_schema</a> - The
--   schema.
--   
--   <a>$sel:schemaArn:DatasetSchema'</a>, <a>datasetSchema_schemaArn</a> -
--   The Amazon Resource Name (ARN) of the schema.
--   
--   <a>$sel:name:DatasetSchema'</a>, <a>datasetSchema_name</a> - The name
--   of the schema.
--   
--   <a>$sel:creationDateTime:DatasetSchema'</a>,
--   <a>datasetSchema_creationDateTime</a> - The date and time (in Unix
--   time) that the schema was created.
newDatasetSchema :: DatasetSchema

-- | The date and time (in Unix time) that the schema was last updated.
datasetSchema_lastUpdatedDateTime :: Lens' DatasetSchema (Maybe UTCTime)

-- | The schema.
datasetSchema_schema :: Lens' DatasetSchema (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema.
datasetSchema_schemaArn :: Lens' DatasetSchema (Maybe Text)

-- | The name of the schema.
datasetSchema_name :: Lens' DatasetSchema (Maybe Text)

-- | The date and time (in Unix time) that the schema was created.
datasetSchema_creationDateTime :: Lens' DatasetSchema (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DatasetSchema.DatasetSchema
instance GHC.Show.Show Amazonka.Personalize.Types.DatasetSchema.DatasetSchema
instance GHC.Read.Read Amazonka.Personalize.Types.DatasetSchema.DatasetSchema
instance GHC.Classes.Eq Amazonka.Personalize.Types.DatasetSchema.DatasetSchema
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DatasetSchema.DatasetSchema
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DatasetSchema.DatasetSchema
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DatasetSchema.DatasetSchema


module Amazonka.Personalize.Types.DatasetSchemaSummary

-- | Provides a summary of the properties of a dataset schema. For a
--   complete listing, call the DescribeSchema API.
--   
--   <i>See:</i> <a>newDatasetSchemaSummary</a> smart constructor.
data DatasetSchemaSummary
DatasetSchemaSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> DatasetSchemaSummary

-- | The date and time (in Unix time) that the schema was last updated.
[$sel:lastUpdatedDateTime:DatasetSchemaSummary'] :: DatasetSchemaSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the schema.
[$sel:schemaArn:DatasetSchemaSummary'] :: DatasetSchemaSummary -> Maybe Text

-- | The name of the schema.
[$sel:name:DatasetSchemaSummary'] :: DatasetSchemaSummary -> Maybe Text

-- | The date and time (in Unix time) that the schema was created.
[$sel:creationDateTime:DatasetSchemaSummary'] :: DatasetSchemaSummary -> Maybe POSIX

-- | Create a value of <a>DatasetSchemaSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedDateTime:DatasetSchemaSummary'</a>,
--   <a>datasetSchemaSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the schema was last updated.
--   
--   <a>$sel:schemaArn:DatasetSchemaSummary'</a>,
--   <a>datasetSchemaSummary_schemaArn</a> - The Amazon Resource Name (ARN)
--   of the schema.
--   
--   <a>$sel:name:DatasetSchemaSummary'</a>,
--   <a>datasetSchemaSummary_name</a> - The name of the schema.
--   
--   <a>$sel:creationDateTime:DatasetSchemaSummary'</a>,
--   <a>datasetSchemaSummary_creationDateTime</a> - The date and time (in
--   Unix time) that the schema was created.
newDatasetSchemaSummary :: DatasetSchemaSummary

-- | The date and time (in Unix time) that the schema was last updated.
datasetSchemaSummary_lastUpdatedDateTime :: Lens' DatasetSchemaSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the schema.
datasetSchemaSummary_schemaArn :: Lens' DatasetSchemaSummary (Maybe Text)

-- | The name of the schema.
datasetSchemaSummary_name :: Lens' DatasetSchemaSummary (Maybe Text)

-- | The date and time (in Unix time) that the schema was created.
datasetSchemaSummary_creationDateTime :: Lens' DatasetSchemaSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DatasetSchemaSummary.DatasetSchemaSummary
instance GHC.Show.Show Amazonka.Personalize.Types.DatasetSchemaSummary.DatasetSchemaSummary
instance GHC.Read.Read Amazonka.Personalize.Types.DatasetSchemaSummary.DatasetSchemaSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.DatasetSchemaSummary.DatasetSchemaSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DatasetSchemaSummary.DatasetSchemaSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DatasetSchemaSummary.DatasetSchemaSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DatasetSchemaSummary.DatasetSchemaSummary


module Amazonka.Personalize.Types.DatasetSummary

-- | Provides a summary of the properties of a dataset. For a complete
--   listing, call the DescribeDataset API.
--   
--   <i>See:</i> <a>newDatasetSummary</a> smart constructor.
data DatasetSummary
DatasetSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> DatasetSummary

-- | The status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset.
[$sel:datasetArn:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset was last updated.
[$sel:lastUpdatedDateTime:DatasetSummary'] :: DatasetSummary -> Maybe POSIX

-- | The name of the dataset.
[$sel:name:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | The dataset type. One of the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   <li>Event-Interactions</li>
--   </ul>
[$sel:datasetType:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset was created.
[$sel:creationDateTime:DatasetSummary'] :: DatasetSummary -> Maybe POSIX

-- | Create a value of <a>DatasetSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DatasetSummary'</a>, <a>datasetSummary_status</a> - The
--   status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:datasetArn:DatasetSummary'</a>,
--   <a>datasetSummary_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the dataset.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetSummary'</a>,
--   <a>datasetSummary_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the dataset was last updated.
--   
--   <a>$sel:name:DatasetSummary'</a>, <a>datasetSummary_name</a> - The
--   name of the dataset.
--   
--   <a>$sel:datasetType:DatasetSummary'</a>,
--   <a>datasetSummary_datasetType</a> - The dataset type. One of the
--   following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   <li>Event-Interactions</li>
--   </ul>
--   
--   <a>$sel:creationDateTime:DatasetSummary'</a>,
--   <a>datasetSummary_creationDateTime</a> - The date and time (in Unix
--   time) that the dataset was created.
newDatasetSummary :: DatasetSummary

-- | The status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
datasetSummary_status :: Lens' DatasetSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset.
datasetSummary_datasetArn :: Lens' DatasetSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset was last updated.
datasetSummary_lastUpdatedDateTime :: Lens' DatasetSummary (Maybe UTCTime)

-- | The name of the dataset.
datasetSummary_name :: Lens' DatasetSummary (Maybe Text)

-- | The dataset type. One of the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   <li>Event-Interactions</li>
--   </ul>
datasetSummary_datasetType :: Lens' DatasetSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset was created.
datasetSummary_creationDateTime :: Lens' DatasetSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DatasetSummary.DatasetSummary
instance GHC.Show.Show Amazonka.Personalize.Types.DatasetSummary.DatasetSummary
instance GHC.Read.Read Amazonka.Personalize.Types.DatasetSummary.DatasetSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.DatasetSummary.DatasetSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DatasetSummary.DatasetSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DatasetSummary.DatasetSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DatasetSummary.DatasetSummary


module Amazonka.Personalize.Types.DefaultCategoricalHyperParameterRange

-- | Provides the name and default range of a categorical hyperparameter
--   and whether the hyperparameter is tunable. A tunable hyperparameter
--   can have its value determined during hyperparameter optimization
--   (HPO).
--   
--   <i>See:</i> <a>newDefaultCategoricalHyperParameterRange</a> smart
--   constructor.
data DefaultCategoricalHyperParameterRange
DefaultCategoricalHyperParameterRange' :: Maybe Bool -> Maybe [Text] -> Maybe Text -> DefaultCategoricalHyperParameterRange

-- | Whether the hyperparameter is tunable.
[$sel:isTunable:DefaultCategoricalHyperParameterRange'] :: DefaultCategoricalHyperParameterRange -> Maybe Bool

-- | A list of the categories for the hyperparameter.
[$sel:values:DefaultCategoricalHyperParameterRange'] :: DefaultCategoricalHyperParameterRange -> Maybe [Text]

-- | The name of the hyperparameter.
[$sel:name:DefaultCategoricalHyperParameterRange'] :: DefaultCategoricalHyperParameterRange -> Maybe Text

-- | Create a value of <a>DefaultCategoricalHyperParameterRange</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isTunable:DefaultCategoricalHyperParameterRange'</a>,
--   <a>defaultCategoricalHyperParameterRange_isTunable</a> - Whether the
--   hyperparameter is tunable.
--   
--   <a>$sel:values:DefaultCategoricalHyperParameterRange'</a>,
--   <a>defaultCategoricalHyperParameterRange_values</a> - A list of the
--   categories for the hyperparameter.
--   
--   <a>$sel:name:DefaultCategoricalHyperParameterRange'</a>,
--   <a>defaultCategoricalHyperParameterRange_name</a> - The name of the
--   hyperparameter.
newDefaultCategoricalHyperParameterRange :: DefaultCategoricalHyperParameterRange

-- | Whether the hyperparameter is tunable.
defaultCategoricalHyperParameterRange_isTunable :: Lens' DefaultCategoricalHyperParameterRange (Maybe Bool)

-- | A list of the categories for the hyperparameter.
defaultCategoricalHyperParameterRange_values :: Lens' DefaultCategoricalHyperParameterRange (Maybe [Text])

-- | The name of the hyperparameter.
defaultCategoricalHyperParameterRange_name :: Lens' DefaultCategoricalHyperParameterRange (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DefaultCategoricalHyperParameterRange.DefaultCategoricalHyperParameterRange
instance GHC.Show.Show Amazonka.Personalize.Types.DefaultCategoricalHyperParameterRange.DefaultCategoricalHyperParameterRange
instance GHC.Read.Read Amazonka.Personalize.Types.DefaultCategoricalHyperParameterRange.DefaultCategoricalHyperParameterRange
instance GHC.Classes.Eq Amazonka.Personalize.Types.DefaultCategoricalHyperParameterRange.DefaultCategoricalHyperParameterRange
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DefaultCategoricalHyperParameterRange.DefaultCategoricalHyperParameterRange
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DefaultCategoricalHyperParameterRange.DefaultCategoricalHyperParameterRange
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DefaultCategoricalHyperParameterRange.DefaultCategoricalHyperParameterRange


module Amazonka.Personalize.Types.DefaultContinuousHyperParameterRange

-- | Provides the name and default range of a continuous hyperparameter and
--   whether the hyperparameter is tunable. A tunable hyperparameter can
--   have its value determined during hyperparameter optimization (HPO).
--   
--   <i>See:</i> <a>newDefaultContinuousHyperParameterRange</a> smart
--   constructor.
data DefaultContinuousHyperParameterRange
DefaultContinuousHyperParameterRange' :: Maybe Double -> Maybe Bool -> Maybe Text -> Maybe Double -> DefaultContinuousHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
[$sel:maxValue:DefaultContinuousHyperParameterRange'] :: DefaultContinuousHyperParameterRange -> Maybe Double

-- | Whether the hyperparameter is tunable.
[$sel:isTunable:DefaultContinuousHyperParameterRange'] :: DefaultContinuousHyperParameterRange -> Maybe Bool

-- | The name of the hyperparameter.
[$sel:name:DefaultContinuousHyperParameterRange'] :: DefaultContinuousHyperParameterRange -> Maybe Text

-- | The minimum allowable value for the hyperparameter.
[$sel:minValue:DefaultContinuousHyperParameterRange'] :: DefaultContinuousHyperParameterRange -> Maybe Double

-- | Create a value of <a>DefaultContinuousHyperParameterRange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:DefaultContinuousHyperParameterRange'</a>,
--   <a>defaultContinuousHyperParameterRange_maxValue</a> - The maximum
--   allowable value for the hyperparameter.
--   
--   <a>$sel:isTunable:DefaultContinuousHyperParameterRange'</a>,
--   <a>defaultContinuousHyperParameterRange_isTunable</a> - Whether the
--   hyperparameter is tunable.
--   
--   <a>$sel:name:DefaultContinuousHyperParameterRange'</a>,
--   <a>defaultContinuousHyperParameterRange_name</a> - The name of the
--   hyperparameter.
--   
--   <a>$sel:minValue:DefaultContinuousHyperParameterRange'</a>,
--   <a>defaultContinuousHyperParameterRange_minValue</a> - The minimum
--   allowable value for the hyperparameter.
newDefaultContinuousHyperParameterRange :: DefaultContinuousHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
defaultContinuousHyperParameterRange_maxValue :: Lens' DefaultContinuousHyperParameterRange (Maybe Double)

-- | Whether the hyperparameter is tunable.
defaultContinuousHyperParameterRange_isTunable :: Lens' DefaultContinuousHyperParameterRange (Maybe Bool)

-- | The name of the hyperparameter.
defaultContinuousHyperParameterRange_name :: Lens' DefaultContinuousHyperParameterRange (Maybe Text)

-- | The minimum allowable value for the hyperparameter.
defaultContinuousHyperParameterRange_minValue :: Lens' DefaultContinuousHyperParameterRange (Maybe Double)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DefaultContinuousHyperParameterRange.DefaultContinuousHyperParameterRange
instance GHC.Show.Show Amazonka.Personalize.Types.DefaultContinuousHyperParameterRange.DefaultContinuousHyperParameterRange
instance GHC.Read.Read Amazonka.Personalize.Types.DefaultContinuousHyperParameterRange.DefaultContinuousHyperParameterRange
instance GHC.Classes.Eq Amazonka.Personalize.Types.DefaultContinuousHyperParameterRange.DefaultContinuousHyperParameterRange
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DefaultContinuousHyperParameterRange.DefaultContinuousHyperParameterRange
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DefaultContinuousHyperParameterRange.DefaultContinuousHyperParameterRange
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DefaultContinuousHyperParameterRange.DefaultContinuousHyperParameterRange


module Amazonka.Personalize.Types.DefaultIntegerHyperParameterRange

-- | Provides the name and default range of a integer-valued hyperparameter
--   and whether the hyperparameter is tunable. A tunable hyperparameter
--   can have its value determined during hyperparameter optimization
--   (HPO).
--   
--   <i>See:</i> <a>newDefaultIntegerHyperParameterRange</a> smart
--   constructor.
data DefaultIntegerHyperParameterRange
DefaultIntegerHyperParameterRange' :: Maybe Int -> Maybe Bool -> Maybe Text -> Maybe Int -> DefaultIntegerHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
[$sel:maxValue:DefaultIntegerHyperParameterRange'] :: DefaultIntegerHyperParameterRange -> Maybe Int

-- | Indicates whether the hyperparameter is tunable.
[$sel:isTunable:DefaultIntegerHyperParameterRange'] :: DefaultIntegerHyperParameterRange -> Maybe Bool

-- | The name of the hyperparameter.
[$sel:name:DefaultIntegerHyperParameterRange'] :: DefaultIntegerHyperParameterRange -> Maybe Text

-- | The minimum allowable value for the hyperparameter.
[$sel:minValue:DefaultIntegerHyperParameterRange'] :: DefaultIntegerHyperParameterRange -> Maybe Int

-- | Create a value of <a>DefaultIntegerHyperParameterRange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:DefaultIntegerHyperParameterRange'</a>,
--   <a>defaultIntegerHyperParameterRange_maxValue</a> - The maximum
--   allowable value for the hyperparameter.
--   
--   <a>$sel:isTunable:DefaultIntegerHyperParameterRange'</a>,
--   <a>defaultIntegerHyperParameterRange_isTunable</a> - Indicates whether
--   the hyperparameter is tunable.
--   
--   <a>$sel:name:DefaultIntegerHyperParameterRange'</a>,
--   <a>defaultIntegerHyperParameterRange_name</a> - The name of the
--   hyperparameter.
--   
--   <a>$sel:minValue:DefaultIntegerHyperParameterRange'</a>,
--   <a>defaultIntegerHyperParameterRange_minValue</a> - The minimum
--   allowable value for the hyperparameter.
newDefaultIntegerHyperParameterRange :: DefaultIntegerHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
defaultIntegerHyperParameterRange_maxValue :: Lens' DefaultIntegerHyperParameterRange (Maybe Int)

-- | Indicates whether the hyperparameter is tunable.
defaultIntegerHyperParameterRange_isTunable :: Lens' DefaultIntegerHyperParameterRange (Maybe Bool)

-- | The name of the hyperparameter.
defaultIntegerHyperParameterRange_name :: Lens' DefaultIntegerHyperParameterRange (Maybe Text)

-- | The minimum allowable value for the hyperparameter.
defaultIntegerHyperParameterRange_minValue :: Lens' DefaultIntegerHyperParameterRange (Maybe Int)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DefaultIntegerHyperParameterRange.DefaultIntegerHyperParameterRange
instance GHC.Show.Show Amazonka.Personalize.Types.DefaultIntegerHyperParameterRange.DefaultIntegerHyperParameterRange
instance GHC.Read.Read Amazonka.Personalize.Types.DefaultIntegerHyperParameterRange.DefaultIntegerHyperParameterRange
instance GHC.Classes.Eq Amazonka.Personalize.Types.DefaultIntegerHyperParameterRange.DefaultIntegerHyperParameterRange
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DefaultIntegerHyperParameterRange.DefaultIntegerHyperParameterRange
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DefaultIntegerHyperParameterRange.DefaultIntegerHyperParameterRange
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DefaultIntegerHyperParameterRange.DefaultIntegerHyperParameterRange


module Amazonka.Personalize.Types.DefaultHyperParameterRanges

-- | Specifies the hyperparameters and their default ranges.
--   Hyperparameters can be categorical, continuous, or integer-valued.
--   
--   <i>See:</i> <a>newDefaultHyperParameterRanges</a> smart constructor.
data DefaultHyperParameterRanges
DefaultHyperParameterRanges' :: Maybe [DefaultIntegerHyperParameterRange] -> Maybe [DefaultCategoricalHyperParameterRange] -> Maybe [DefaultContinuousHyperParameterRange] -> DefaultHyperParameterRanges

-- | The integer-valued hyperparameters and their default ranges.
[$sel:integerHyperParameterRanges:DefaultHyperParameterRanges'] :: DefaultHyperParameterRanges -> Maybe [DefaultIntegerHyperParameterRange]

-- | The categorical hyperparameters and their default ranges.
[$sel:categoricalHyperParameterRanges:DefaultHyperParameterRanges'] :: DefaultHyperParameterRanges -> Maybe [DefaultCategoricalHyperParameterRange]

-- | The continuous hyperparameters and their default ranges.
[$sel:continuousHyperParameterRanges:DefaultHyperParameterRanges'] :: DefaultHyperParameterRanges -> Maybe [DefaultContinuousHyperParameterRange]

-- | Create a value of <a>DefaultHyperParameterRanges</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerHyperParameterRanges:DefaultHyperParameterRanges'</a>,
--   <a>defaultHyperParameterRanges_integerHyperParameterRanges</a> - The
--   integer-valued hyperparameters and their default ranges.
--   
--   
--   <a>$sel:categoricalHyperParameterRanges:DefaultHyperParameterRanges'</a>,
--   <a>defaultHyperParameterRanges_categoricalHyperParameterRanges</a> -
--   The categorical hyperparameters and their default ranges.
--   
--   
--   <a>$sel:continuousHyperParameterRanges:DefaultHyperParameterRanges'</a>,
--   <a>defaultHyperParameterRanges_continuousHyperParameterRanges</a> -
--   The continuous hyperparameters and their default ranges.
newDefaultHyperParameterRanges :: DefaultHyperParameterRanges

-- | The integer-valued hyperparameters and their default ranges.
defaultHyperParameterRanges_integerHyperParameterRanges :: Lens' DefaultHyperParameterRanges (Maybe [DefaultIntegerHyperParameterRange])

-- | The categorical hyperparameters and their default ranges.
defaultHyperParameterRanges_categoricalHyperParameterRanges :: Lens' DefaultHyperParameterRanges (Maybe [DefaultCategoricalHyperParameterRange])

-- | The continuous hyperparameters and their default ranges.
defaultHyperParameterRanges_continuousHyperParameterRanges :: Lens' DefaultHyperParameterRanges (Maybe [DefaultContinuousHyperParameterRange])
instance GHC.Generics.Generic Amazonka.Personalize.Types.DefaultHyperParameterRanges.DefaultHyperParameterRanges
instance GHC.Show.Show Amazonka.Personalize.Types.DefaultHyperParameterRanges.DefaultHyperParameterRanges
instance GHC.Read.Read Amazonka.Personalize.Types.DefaultHyperParameterRanges.DefaultHyperParameterRanges
instance GHC.Classes.Eq Amazonka.Personalize.Types.DefaultHyperParameterRanges.DefaultHyperParameterRanges
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DefaultHyperParameterRanges.DefaultHyperParameterRanges
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DefaultHyperParameterRanges.DefaultHyperParameterRanges
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DefaultHyperParameterRanges.DefaultHyperParameterRanges


module Amazonka.Personalize.Types.Algorithm

-- | Describes a custom algorithm.
--   
--   <i>See:</i> <a>newAlgorithm</a> smart constructor.
data Algorithm
Algorithm' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe DefaultHyperParameterRanges -> Maybe AlgorithmImage -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe (HashMap Text Text) -> Maybe Text -> Algorithm

-- | Specifies the default hyperparameters.
[$sel:defaultHyperParameters:Algorithm'] :: Algorithm -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the algorithm.
[$sel:algorithmArn:Algorithm'] :: Algorithm -> Maybe Text

-- | The training input mode.
[$sel:trainingInputMode:Algorithm'] :: Algorithm -> Maybe Text

-- | Specifies the default hyperparameters, their ranges, and whether they
--   are tunable. A tunable hyperparameter can have its value determined
--   during hyperparameter optimization (HPO).
[$sel:defaultHyperParameterRanges:Algorithm'] :: Algorithm -> Maybe DefaultHyperParameterRanges

-- | The URI of the Docker container for the algorithm image.
[$sel:algorithmImage:Algorithm'] :: Algorithm -> Maybe AlgorithmImage

-- | The date and time (in Unix time) that the algorithm was last updated.
[$sel:lastUpdatedDateTime:Algorithm'] :: Algorithm -> Maybe POSIX

-- | The name of the algorithm.
[$sel:name:Algorithm'] :: Algorithm -> Maybe Text

-- | The date and time (in Unix time) that the algorithm was created.
[$sel:creationDateTime:Algorithm'] :: Algorithm -> Maybe POSIX

-- | Specifies the default maximum number of training jobs and parallel
--   training jobs.
[$sel:defaultResourceConfig:Algorithm'] :: Algorithm -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the role.
[$sel:roleArn:Algorithm'] :: Algorithm -> Maybe Text

-- | Create a value of <a>Algorithm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultHyperParameters:Algorithm'</a>,
--   <a>algorithm_defaultHyperParameters</a> - Specifies the default
--   hyperparameters.
--   
--   <a>$sel:algorithmArn:Algorithm'</a>, <a>algorithm_algorithmArn</a> -
--   The Amazon Resource Name (ARN) of the algorithm.
--   
--   <a>$sel:trainingInputMode:Algorithm'</a>,
--   <a>algorithm_trainingInputMode</a> - The training input mode.
--   
--   <a>$sel:defaultHyperParameterRanges:Algorithm'</a>,
--   <a>algorithm_defaultHyperParameterRanges</a> - Specifies the default
--   hyperparameters, their ranges, and whether they are tunable. A tunable
--   hyperparameter can have its value determined during hyperparameter
--   optimization (HPO).
--   
--   <a>$sel:algorithmImage:Algorithm'</a>, <a>algorithm_algorithmImage</a>
--   - The URI of the Docker container for the algorithm image.
--   
--   <a>$sel:lastUpdatedDateTime:Algorithm'</a>,
--   <a>algorithm_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the algorithm was last updated.
--   
--   <a>$sel:name:Algorithm'</a>, <a>algorithm_name</a> - The name of the
--   algorithm.
--   
--   <a>$sel:creationDateTime:Algorithm'</a>,
--   <a>algorithm_creationDateTime</a> - The date and time (in Unix time)
--   that the algorithm was created.
--   
--   <a>$sel:defaultResourceConfig:Algorithm'</a>,
--   <a>algorithm_defaultResourceConfig</a> - Specifies the default maximum
--   number of training jobs and parallel training jobs.
--   
--   <a>$sel:roleArn:Algorithm'</a>, <a>algorithm_roleArn</a> - The Amazon
--   Resource Name (ARN) of the role.
newAlgorithm :: Algorithm

-- | Specifies the default hyperparameters.
algorithm_defaultHyperParameters :: Lens' Algorithm (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the algorithm.
algorithm_algorithmArn :: Lens' Algorithm (Maybe Text)

-- | The training input mode.
algorithm_trainingInputMode :: Lens' Algorithm (Maybe Text)

-- | Specifies the default hyperparameters, their ranges, and whether they
--   are tunable. A tunable hyperparameter can have its value determined
--   during hyperparameter optimization (HPO).
algorithm_defaultHyperParameterRanges :: Lens' Algorithm (Maybe DefaultHyperParameterRanges)

-- | The URI of the Docker container for the algorithm image.
algorithm_algorithmImage :: Lens' Algorithm (Maybe AlgorithmImage)

-- | The date and time (in Unix time) that the algorithm was last updated.
algorithm_lastUpdatedDateTime :: Lens' Algorithm (Maybe UTCTime)

-- | The name of the algorithm.
algorithm_name :: Lens' Algorithm (Maybe Text)

-- | The date and time (in Unix time) that the algorithm was created.
algorithm_creationDateTime :: Lens' Algorithm (Maybe UTCTime)

-- | Specifies the default maximum number of training jobs and parallel
--   training jobs.
algorithm_defaultResourceConfig :: Lens' Algorithm (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the role.
algorithm_roleArn :: Lens' Algorithm (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.Algorithm.Algorithm
instance GHC.Show.Show Amazonka.Personalize.Types.Algorithm.Algorithm
instance GHC.Read.Read Amazonka.Personalize.Types.Algorithm.Algorithm
instance GHC.Classes.Eq Amazonka.Personalize.Types.Algorithm.Algorithm
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.Algorithm.Algorithm
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.Algorithm.Algorithm
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.Algorithm.Algorithm


module Amazonka.Personalize.Types.EventTracker

-- | Provides information about an event tracker.
--   
--   <i>See:</i> <a>newEventTracker</a> smart constructor.
data EventTracker
EventTracker' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> EventTracker

-- | The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:EventTracker'] :: EventTracker -> Maybe Text

-- | The ID of the event tracker. Include this ID in requests to the
--   <a>PutEvents</a> API.
[$sel:trackingId:EventTracker'] :: EventTracker -> Maybe Text

-- | The date and time (in Unix time) that the event tracker was last
--   updated.
[$sel:lastUpdatedDateTime:EventTracker'] :: EventTracker -> Maybe POSIX

-- | The Amazon Web Services account that owns the event tracker.
[$sel:accountId:EventTracker'] :: EventTracker -> Maybe Text

-- | The name of the event tracker.
[$sel:name:EventTracker'] :: EventTracker -> Maybe Text

-- | The date and time (in Unix format) that the event tracker was created.
[$sel:creationDateTime:EventTracker'] :: EventTracker -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset group that receives the
--   event data.
[$sel:datasetGroupArn:EventTracker'] :: EventTracker -> Maybe Text

-- | The ARN of the event tracker.
[$sel:eventTrackerArn:EventTracker'] :: EventTracker -> Maybe Text

-- | Create a value of <a>EventTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:EventTracker'</a>, <a>eventTracker_status</a> - The
--   status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:trackingId:EventTracker'</a>, <a>eventTracker_trackingId</a> -
--   The ID of the event tracker. Include this ID in requests to the
--   <a>PutEvents</a> API.
--   
--   <a>$sel:lastUpdatedDateTime:EventTracker'</a>,
--   <a>eventTracker_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the event tracker was last updated.
--   
--   <a>$sel:accountId:EventTracker'</a>, <a>eventTracker_accountId</a> -
--   The Amazon Web Services account that owns the event tracker.
--   
--   <a>$sel:name:EventTracker'</a>, <a>eventTracker_name</a> - The name of
--   the event tracker.
--   
--   <a>$sel:creationDateTime:EventTracker'</a>,
--   <a>eventTracker_creationDateTime</a> - The date and time (in Unix
--   format) that the event tracker was created.
--   
--   <a>$sel:datasetGroupArn:EventTracker'</a>,
--   <a>eventTracker_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group that receives the event data.
--   
--   <a>$sel:eventTrackerArn:EventTracker'</a>,
--   <a>eventTracker_eventTrackerArn</a> - The ARN of the event tracker.
newEventTracker :: EventTracker

-- | The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
eventTracker_status :: Lens' EventTracker (Maybe Text)

-- | The ID of the event tracker. Include this ID in requests to the
--   <a>PutEvents</a> API.
eventTracker_trackingId :: Lens' EventTracker (Maybe Text)

-- | The date and time (in Unix time) that the event tracker was last
--   updated.
eventTracker_lastUpdatedDateTime :: Lens' EventTracker (Maybe UTCTime)

-- | The Amazon Web Services account that owns the event tracker.
eventTracker_accountId :: Lens' EventTracker (Maybe Text)

-- | The name of the event tracker.
eventTracker_name :: Lens' EventTracker (Maybe Text)

-- | The date and time (in Unix format) that the event tracker was created.
eventTracker_creationDateTime :: Lens' EventTracker (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group that receives the
--   event data.
eventTracker_datasetGroupArn :: Lens' EventTracker (Maybe Text)

-- | The ARN of the event tracker.
eventTracker_eventTrackerArn :: Lens' EventTracker (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.EventTracker.EventTracker
instance GHC.Show.Show Amazonka.Personalize.Types.EventTracker.EventTracker
instance GHC.Read.Read Amazonka.Personalize.Types.EventTracker.EventTracker
instance GHC.Classes.Eq Amazonka.Personalize.Types.EventTracker.EventTracker
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.EventTracker.EventTracker
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.EventTracker.EventTracker
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.EventTracker.EventTracker


module Amazonka.Personalize.Types.EventTrackerSummary

-- | Provides a summary of the properties of an event tracker. For a
--   complete listing, call the DescribeEventTracker API.
--   
--   <i>See:</i> <a>newEventTrackerSummary</a> smart constructor.
data EventTrackerSummary
EventTrackerSummary' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> EventTrackerSummary

-- | The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:EventTrackerSummary'] :: EventTrackerSummary -> Maybe Text

-- | The date and time (in Unix time) that the event tracker was last
--   updated.
[$sel:lastUpdatedDateTime:EventTrackerSummary'] :: EventTrackerSummary -> Maybe POSIX

-- | The name of the event tracker.
[$sel:name:EventTrackerSummary'] :: EventTrackerSummary -> Maybe Text

-- | The date and time (in Unix time) that the event tracker was created.
[$sel:creationDateTime:EventTrackerSummary'] :: EventTrackerSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the event tracker.
[$sel:eventTrackerArn:EventTrackerSummary'] :: EventTrackerSummary -> Maybe Text

-- | Create a value of <a>EventTrackerSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:EventTrackerSummary'</a>,
--   <a>eventTrackerSummary_status</a> - The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:EventTrackerSummary'</a>,
--   <a>eventTrackerSummary_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the event tracker was last updated.
--   
--   <a>$sel:name:EventTrackerSummary'</a>, <a>eventTrackerSummary_name</a>
--   - The name of the event tracker.
--   
--   <a>$sel:creationDateTime:EventTrackerSummary'</a>,
--   <a>eventTrackerSummary_creationDateTime</a> - The date and time (in
--   Unix time) that the event tracker was created.
--   
--   <a>$sel:eventTrackerArn:EventTrackerSummary'</a>,
--   <a>eventTrackerSummary_eventTrackerArn</a> - The Amazon Resource Name
--   (ARN) of the event tracker.
newEventTrackerSummary :: EventTrackerSummary

-- | The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
eventTrackerSummary_status :: Lens' EventTrackerSummary (Maybe Text)

-- | The date and time (in Unix time) that the event tracker was last
--   updated.
eventTrackerSummary_lastUpdatedDateTime :: Lens' EventTrackerSummary (Maybe UTCTime)

-- | The name of the event tracker.
eventTrackerSummary_name :: Lens' EventTrackerSummary (Maybe Text)

-- | The date and time (in Unix time) that the event tracker was created.
eventTrackerSummary_creationDateTime :: Lens' EventTrackerSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the event tracker.
eventTrackerSummary_eventTrackerArn :: Lens' EventTrackerSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.EventTrackerSummary.EventTrackerSummary
instance GHC.Show.Show Amazonka.Personalize.Types.EventTrackerSummary.EventTrackerSummary
instance GHC.Read.Read Amazonka.Personalize.Types.EventTrackerSummary.EventTrackerSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.EventTrackerSummary.EventTrackerSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.EventTrackerSummary.EventTrackerSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.EventTrackerSummary.EventTrackerSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.EventTrackerSummary.EventTrackerSummary


module Amazonka.Personalize.Types.FeatureTransformation

-- | Provides feature transformation information. Feature transformation is
--   the process of modifying raw input data into a form more suitable for
--   model training.
--   
--   <i>See:</i> <a>newFeatureTransformation</a> smart constructor.
data FeatureTransformation
FeatureTransformation' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe (HashMap Text Text) -> FeatureTransformation

-- | The status of the feature transformation.
--   
--   A feature transformation can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
[$sel:status:FeatureTransformation'] :: FeatureTransformation -> Maybe Text

-- | The Amazon Resource Name (ARN) of the FeatureTransformation object.
[$sel:featureTransformationArn:FeatureTransformation'] :: FeatureTransformation -> Maybe Text

-- | The last update date and time (in Unix time) of the feature
--   transformation.
[$sel:lastUpdatedDateTime:FeatureTransformation'] :: FeatureTransformation -> Maybe POSIX

-- | The name of the feature transformation.
[$sel:name:FeatureTransformation'] :: FeatureTransformation -> Maybe Text

-- | The creation date and time (in Unix time) of the feature
--   transformation.
[$sel:creationDateTime:FeatureTransformation'] :: FeatureTransformation -> Maybe POSIX

-- | Provides the default parameters for feature transformation.
[$sel:defaultParameters:FeatureTransformation'] :: FeatureTransformation -> Maybe (HashMap Text Text)

-- | Create a value of <a>FeatureTransformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:FeatureTransformation'</a>,
--   <a>featureTransformation_status</a> - The status of the feature
--   transformation.
--   
--   A feature transformation can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:featureTransformationArn:FeatureTransformation'</a>,
--   <a>featureTransformation_featureTransformationArn</a> - The Amazon
--   Resource Name (ARN) of the FeatureTransformation object.
--   
--   <a>$sel:lastUpdatedDateTime:FeatureTransformation'</a>,
--   <a>featureTransformation_lastUpdatedDateTime</a> - The last update
--   date and time (in Unix time) of the feature transformation.
--   
--   <a>$sel:name:FeatureTransformation'</a>,
--   <a>featureTransformation_name</a> - The name of the feature
--   transformation.
--   
--   <a>$sel:creationDateTime:FeatureTransformation'</a>,
--   <a>featureTransformation_creationDateTime</a> - The creation date and
--   time (in Unix time) of the feature transformation.
--   
--   <a>$sel:defaultParameters:FeatureTransformation'</a>,
--   <a>featureTransformation_defaultParameters</a> - Provides the default
--   parameters for feature transformation.
newFeatureTransformation :: FeatureTransformation

-- | The status of the feature transformation.
--   
--   A feature transformation can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
featureTransformation_status :: Lens' FeatureTransformation (Maybe Text)

-- | The Amazon Resource Name (ARN) of the FeatureTransformation object.
featureTransformation_featureTransformationArn :: Lens' FeatureTransformation (Maybe Text)

-- | The last update date and time (in Unix time) of the feature
--   transformation.
featureTransformation_lastUpdatedDateTime :: Lens' FeatureTransformation (Maybe UTCTime)

-- | The name of the feature transformation.
featureTransformation_name :: Lens' FeatureTransformation (Maybe Text)

-- | The creation date and time (in Unix time) of the feature
--   transformation.
featureTransformation_creationDateTime :: Lens' FeatureTransformation (Maybe UTCTime)

-- | Provides the default parameters for feature transformation.
featureTransformation_defaultParameters :: Lens' FeatureTransformation (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.Personalize.Types.FeatureTransformation.FeatureTransformation
instance GHC.Show.Show Amazonka.Personalize.Types.FeatureTransformation.FeatureTransformation
instance GHC.Read.Read Amazonka.Personalize.Types.FeatureTransformation.FeatureTransformation
instance GHC.Classes.Eq Amazonka.Personalize.Types.FeatureTransformation.FeatureTransformation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.FeatureTransformation.FeatureTransformation
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.FeatureTransformation.FeatureTransformation
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.FeatureTransformation.FeatureTransformation


module Amazonka.Personalize.Types.Filter

-- | Contains information on a recommendation filter, including its ARN,
--   status, and filter expression.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Filter

-- | If the filter failed, the reason for its failure.
[$sel:failureReason:Filter'] :: Filter -> Maybe Text

-- | The status of the filter.
[$sel:status:Filter'] :: Filter -> Maybe Text

-- | Specifies the type of item interactions to filter out of
--   recommendation results. The filter expression must follow specific
--   format rules. For information about filter expression structure and
--   syntax, see filter-expressions.
[$sel:filterExpression:Filter'] :: Filter -> Maybe (Sensitive Text)

-- | The time at which the filter was last updated.
[$sel:lastUpdatedDateTime:Filter'] :: Filter -> Maybe POSIX

-- | The name of the filter.
[$sel:name:Filter'] :: Filter -> Maybe Text

-- | The ARN of the filter.
[$sel:filterArn:Filter'] :: Filter -> Maybe Text

-- | The time at which the filter was created.
[$sel:creationDateTime:Filter'] :: Filter -> Maybe POSIX

-- | The ARN of the dataset group to which the filter belongs.
[$sel:datasetGroupArn:Filter'] :: Filter -> Maybe Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:Filter'</a>, <a>filter_failureReason</a> - If
--   the filter failed, the reason for its failure.
--   
--   <a>$sel:status:Filter'</a>, <a>filter_status</a> - The status of the
--   filter.
--   
--   <a>$sel:filterExpression:Filter'</a>, <a>filter_filterExpression</a> -
--   Specifies the type of item interactions to filter out of
--   recommendation results. The filter expression must follow specific
--   format rules. For information about filter expression structure and
--   syntax, see filter-expressions.
--   
--   <a>$sel:lastUpdatedDateTime:Filter'</a>,
--   <a>filter_lastUpdatedDateTime</a> - The time at which the filter was
--   last updated.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
--   
--   <a>$sel:filterArn:Filter'</a>, <a>filter_filterArn</a> - The ARN of
--   the filter.
--   
--   <a>$sel:creationDateTime:Filter'</a>, <a>filter_creationDateTime</a> -
--   The time at which the filter was created.
--   
--   <a>$sel:datasetGroupArn:Filter'</a>, <a>filter_datasetGroupArn</a> -
--   The ARN of the dataset group to which the filter belongs.
newFilter :: Filter

-- | If the filter failed, the reason for its failure.
filter_failureReason :: Lens' Filter (Maybe Text)

-- | The status of the filter.
filter_status :: Lens' Filter (Maybe Text)

-- | Specifies the type of item interactions to filter out of
--   recommendation results. The filter expression must follow specific
--   format rules. For information about filter expression structure and
--   syntax, see filter-expressions.
filter_filterExpression :: Lens' Filter (Maybe Text)

-- | The time at which the filter was last updated.
filter_lastUpdatedDateTime :: Lens' Filter (Maybe UTCTime)

-- | The name of the filter.
filter_name :: Lens' Filter (Maybe Text)

-- | The ARN of the filter.
filter_filterArn :: Lens' Filter (Maybe Text)

-- | The time at which the filter was created.
filter_creationDateTime :: Lens' Filter (Maybe UTCTime)

-- | The ARN of the dataset group to which the filter belongs.
filter_datasetGroupArn :: Lens' Filter (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.Filter.Filter
instance GHC.Show.Show Amazonka.Personalize.Types.Filter.Filter
instance GHC.Classes.Eq Amazonka.Personalize.Types.Filter.Filter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.Filter.Filter
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.Filter.Filter
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.Filter.Filter


module Amazonka.Personalize.Types.FilterSummary

-- | A short summary of a filter's attributes.
--   
--   <i>See:</i> <a>newFilterSummary</a> smart constructor.
data FilterSummary
FilterSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> FilterSummary

-- | If the filter failed, the reason for the failure.
[$sel:failureReason:FilterSummary'] :: FilterSummary -> Maybe Text

-- | The status of the filter.
[$sel:status:FilterSummary'] :: FilterSummary -> Maybe Text

-- | The time at which the filter was last updated.
[$sel:lastUpdatedDateTime:FilterSummary'] :: FilterSummary -> Maybe POSIX

-- | The name of the filter.
[$sel:name:FilterSummary'] :: FilterSummary -> Maybe Text

-- | The ARN of the filter.
[$sel:filterArn:FilterSummary'] :: FilterSummary -> Maybe Text

-- | The time at which the filter was created.
[$sel:creationDateTime:FilterSummary'] :: FilterSummary -> Maybe POSIX

-- | The ARN of the dataset group to which the filter belongs.
[$sel:datasetGroupArn:FilterSummary'] :: FilterSummary -> Maybe Text

-- | Create a value of <a>FilterSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:FilterSummary'</a>,
--   <a>filterSummary_failureReason</a> - If the filter failed, the reason
--   for the failure.
--   
--   <a>$sel:status:FilterSummary'</a>, <a>filterSummary_status</a> - The
--   status of the filter.
--   
--   <a>$sel:lastUpdatedDateTime:FilterSummary'</a>,
--   <a>filterSummary_lastUpdatedDateTime</a> - The time at which the
--   filter was last updated.
--   
--   <a>$sel:name:FilterSummary'</a>, <a>filterSummary_name</a> - The name
--   of the filter.
--   
--   <a>$sel:filterArn:FilterSummary'</a>, <a>filterSummary_filterArn</a> -
--   The ARN of the filter.
--   
--   <a>$sel:creationDateTime:FilterSummary'</a>,
--   <a>filterSummary_creationDateTime</a> - The time at which the filter
--   was created.
--   
--   <a>$sel:datasetGroupArn:FilterSummary'</a>,
--   <a>filterSummary_datasetGroupArn</a> - The ARN of the dataset group to
--   which the filter belongs.
newFilterSummary :: FilterSummary

-- | If the filter failed, the reason for the failure.
filterSummary_failureReason :: Lens' FilterSummary (Maybe Text)

-- | The status of the filter.
filterSummary_status :: Lens' FilterSummary (Maybe Text)

-- | The time at which the filter was last updated.
filterSummary_lastUpdatedDateTime :: Lens' FilterSummary (Maybe UTCTime)

-- | The name of the filter.
filterSummary_name :: Lens' FilterSummary (Maybe Text)

-- | The ARN of the filter.
filterSummary_filterArn :: Lens' FilterSummary (Maybe Text)

-- | The time at which the filter was created.
filterSummary_creationDateTime :: Lens' FilterSummary (Maybe UTCTime)

-- | The ARN of the dataset group to which the filter belongs.
filterSummary_datasetGroupArn :: Lens' FilterSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.FilterSummary.FilterSummary
instance GHC.Show.Show Amazonka.Personalize.Types.FilterSummary.FilterSummary
instance GHC.Read.Read Amazonka.Personalize.Types.FilterSummary.FilterSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.FilterSummary.FilterSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.FilterSummary.FilterSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.FilterSummary.FilterSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.FilterSummary.FilterSummary


module Amazonka.Personalize.Types.HPOObjective

-- | The metric to optimize during hyperparameter optimization (HPO).
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
--   
--   <i>See:</i> <a>newHPOObjective</a> smart constructor.
data HPOObjective
HPOObjective' :: Maybe Text -> Maybe Text -> Maybe Text -> HPOObjective

-- | The name of the metric.
[$sel:metricName:HPOObjective'] :: HPOObjective -> Maybe Text

-- | The type of the metric. Valid values are <tt>Maximize</tt> and
--   <tt>Minimize</tt>.
[$sel:type':HPOObjective'] :: HPOObjective -> Maybe Text

-- | A regular expression for finding the metric in the training job logs.
[$sel:metricRegex:HPOObjective'] :: HPOObjective -> Maybe Text

-- | Create a value of <a>HPOObjective</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricName:HPOObjective'</a>, <a>hPOObjective_metricName</a> -
--   The name of the metric.
--   
--   <a>$sel:type':HPOObjective'</a>, <a>hPOObjective_type</a> - The type
--   of the metric. Valid values are <tt>Maximize</tt> and
--   <tt>Minimize</tt>.
--   
--   <a>$sel:metricRegex:HPOObjective'</a>, <a>hPOObjective_metricRegex</a>
--   - A regular expression for finding the metric in the training job
--   logs.
newHPOObjective :: HPOObjective

-- | The name of the metric.
hPOObjective_metricName :: Lens' HPOObjective (Maybe Text)

-- | The type of the metric. Valid values are <tt>Maximize</tt> and
--   <tt>Minimize</tt>.
hPOObjective_type :: Lens' HPOObjective (Maybe Text)

-- | A regular expression for finding the metric in the training job logs.
hPOObjective_metricRegex :: Lens' HPOObjective (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.HPOObjective.HPOObjective
instance GHC.Show.Show Amazonka.Personalize.Types.HPOObjective.HPOObjective
instance GHC.Read.Read Amazonka.Personalize.Types.HPOObjective.HPOObjective
instance GHC.Classes.Eq Amazonka.Personalize.Types.HPOObjective.HPOObjective
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.HPOObjective.HPOObjective
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.HPOObjective.HPOObjective
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.HPOObjective.HPOObjective
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.HPOObjective.HPOObjective


module Amazonka.Personalize.Types.HPOResourceConfig

-- | Describes the resource configuration for hyperparameter optimization
--   (HPO).
--   
--   <i>See:</i> <a>newHPOResourceConfig</a> smart constructor.
data HPOResourceConfig
HPOResourceConfig' :: Maybe Text -> Maybe Text -> HPOResourceConfig

-- | The maximum number of training jobs when you create a solution
--   version. The maximum value for <tt>maxNumberOfTrainingJobs</tt> is
--   <tt>40</tt>.
[$sel:maxNumberOfTrainingJobs:HPOResourceConfig'] :: HPOResourceConfig -> Maybe Text

-- | The maximum number of parallel training jobs when you create a
--   solution version. The maximum value for
--   <tt>maxParallelTrainingJobs</tt> is <tt>10</tt>.
[$sel:maxParallelTrainingJobs:HPOResourceConfig'] :: HPOResourceConfig -> Maybe Text

-- | Create a value of <a>HPOResourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxNumberOfTrainingJobs:HPOResourceConfig'</a>,
--   <a>hPOResourceConfig_maxNumberOfTrainingJobs</a> - The maximum number
--   of training jobs when you create a solution version. The maximum value
--   for <tt>maxNumberOfTrainingJobs</tt> is <tt>40</tt>.
--   
--   <a>$sel:maxParallelTrainingJobs:HPOResourceConfig'</a>,
--   <a>hPOResourceConfig_maxParallelTrainingJobs</a> - The maximum number
--   of parallel training jobs when you create a solution version. The
--   maximum value for <tt>maxParallelTrainingJobs</tt> is <tt>10</tt>.
newHPOResourceConfig :: HPOResourceConfig

-- | The maximum number of training jobs when you create a solution
--   version. The maximum value for <tt>maxNumberOfTrainingJobs</tt> is
--   <tt>40</tt>.
hPOResourceConfig_maxNumberOfTrainingJobs :: Lens' HPOResourceConfig (Maybe Text)

-- | The maximum number of parallel training jobs when you create a
--   solution version. The maximum value for
--   <tt>maxParallelTrainingJobs</tt> is <tt>10</tt>.
hPOResourceConfig_maxParallelTrainingJobs :: Lens' HPOResourceConfig (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.HPOResourceConfig.HPOResourceConfig
instance GHC.Show.Show Amazonka.Personalize.Types.HPOResourceConfig.HPOResourceConfig
instance GHC.Read.Read Amazonka.Personalize.Types.HPOResourceConfig.HPOResourceConfig
instance GHC.Classes.Eq Amazonka.Personalize.Types.HPOResourceConfig.HPOResourceConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.HPOResourceConfig.HPOResourceConfig
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.HPOResourceConfig.HPOResourceConfig
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.HPOResourceConfig.HPOResourceConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.HPOResourceConfig.HPOResourceConfig


module Amazonka.Personalize.Types.IngestionMode
newtype IngestionMode
IngestionMode' :: Text -> IngestionMode
[fromIngestionMode] :: IngestionMode -> Text
pattern IngestionMode_ALL :: IngestionMode
pattern IngestionMode_BULK :: IngestionMode
pattern IngestionMode_PUT :: IngestionMode
instance Amazonka.Data.XML.ToXML Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Amazonka.Data.XML.FromXML Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Amazonka.Data.Headers.ToHeader Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Amazonka.Data.Log.ToLog Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Amazonka.Data.Text.ToText Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Amazonka.Data.Text.FromText Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance GHC.Generics.Generic Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance GHC.Classes.Ord Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance GHC.Classes.Eq Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance GHC.Read.Read Amazonka.Personalize.Types.IngestionMode.IngestionMode
instance GHC.Show.Show Amazonka.Personalize.Types.IngestionMode.IngestionMode


module Amazonka.Personalize.Types.IntegerHyperParameterRange

-- | Provides the name and range of an integer-valued hyperparameter.
--   
--   <i>See:</i> <a>newIntegerHyperParameterRange</a> smart constructor.
data IntegerHyperParameterRange
IntegerHyperParameterRange' :: Maybe Int -> Maybe Text -> Maybe Int -> IntegerHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
[$sel:maxValue:IntegerHyperParameterRange'] :: IntegerHyperParameterRange -> Maybe Int

-- | The name of the hyperparameter.
[$sel:name:IntegerHyperParameterRange'] :: IntegerHyperParameterRange -> Maybe Text

-- | The minimum allowable value for the hyperparameter.
[$sel:minValue:IntegerHyperParameterRange'] :: IntegerHyperParameterRange -> Maybe Int

-- | Create a value of <a>IntegerHyperParameterRange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:IntegerHyperParameterRange'</a>,
--   <a>integerHyperParameterRange_maxValue</a> - The maximum allowable
--   value for the hyperparameter.
--   
--   <a>$sel:name:IntegerHyperParameterRange'</a>,
--   <a>integerHyperParameterRange_name</a> - The name of the
--   hyperparameter.
--   
--   <a>$sel:minValue:IntegerHyperParameterRange'</a>,
--   <a>integerHyperParameterRange_minValue</a> - The minimum allowable
--   value for the hyperparameter.
newIntegerHyperParameterRange :: IntegerHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
integerHyperParameterRange_maxValue :: Lens' IntegerHyperParameterRange (Maybe Int)

-- | The name of the hyperparameter.
integerHyperParameterRange_name :: Lens' IntegerHyperParameterRange (Maybe Text)

-- | The minimum allowable value for the hyperparameter.
integerHyperParameterRange_minValue :: Lens' IntegerHyperParameterRange (Maybe Int)
instance GHC.Generics.Generic Amazonka.Personalize.Types.IntegerHyperParameterRange.IntegerHyperParameterRange
instance GHC.Show.Show Amazonka.Personalize.Types.IntegerHyperParameterRange.IntegerHyperParameterRange
instance GHC.Read.Read Amazonka.Personalize.Types.IntegerHyperParameterRange.IntegerHyperParameterRange
instance GHC.Classes.Eq Amazonka.Personalize.Types.IntegerHyperParameterRange.IntegerHyperParameterRange
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.IntegerHyperParameterRange.IntegerHyperParameterRange
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.IntegerHyperParameterRange.IntegerHyperParameterRange
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.IntegerHyperParameterRange.IntegerHyperParameterRange
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.IntegerHyperParameterRange.IntegerHyperParameterRange


module Amazonka.Personalize.Types.HyperParameterRanges

-- | Specifies the hyperparameters and their ranges. Hyperparameters can be
--   categorical, continuous, or integer-valued.
--   
--   <i>See:</i> <a>newHyperParameterRanges</a> smart constructor.
data HyperParameterRanges
HyperParameterRanges' :: Maybe [IntegerHyperParameterRange] -> Maybe [CategoricalHyperParameterRange] -> Maybe [ContinuousHyperParameterRange] -> HyperParameterRanges

-- | The integer-valued hyperparameters and their ranges.
[$sel:integerHyperParameterRanges:HyperParameterRanges'] :: HyperParameterRanges -> Maybe [IntegerHyperParameterRange]

-- | The categorical hyperparameters and their ranges.
[$sel:categoricalHyperParameterRanges:HyperParameterRanges'] :: HyperParameterRanges -> Maybe [CategoricalHyperParameterRange]

-- | The continuous hyperparameters and their ranges.
[$sel:continuousHyperParameterRanges:HyperParameterRanges'] :: HyperParameterRanges -> Maybe [ContinuousHyperParameterRange]

-- | Create a value of <a>HyperParameterRanges</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerHyperParameterRanges:HyperParameterRanges'</a>,
--   <a>hyperParameterRanges_integerHyperParameterRanges</a> - The
--   integer-valued hyperparameters and their ranges.
--   
--   <a>$sel:categoricalHyperParameterRanges:HyperParameterRanges'</a>,
--   <a>hyperParameterRanges_categoricalHyperParameterRanges</a> - The
--   categorical hyperparameters and their ranges.
--   
--   <a>$sel:continuousHyperParameterRanges:HyperParameterRanges'</a>,
--   <a>hyperParameterRanges_continuousHyperParameterRanges</a> - The
--   continuous hyperparameters and their ranges.
newHyperParameterRanges :: HyperParameterRanges

-- | The integer-valued hyperparameters and their ranges.
hyperParameterRanges_integerHyperParameterRanges :: Lens' HyperParameterRanges (Maybe [IntegerHyperParameterRange])

-- | The categorical hyperparameters and their ranges.
hyperParameterRanges_categoricalHyperParameterRanges :: Lens' HyperParameterRanges (Maybe [CategoricalHyperParameterRange])

-- | The continuous hyperparameters and their ranges.
hyperParameterRanges_continuousHyperParameterRanges :: Lens' HyperParameterRanges (Maybe [ContinuousHyperParameterRange])
instance GHC.Generics.Generic Amazonka.Personalize.Types.HyperParameterRanges.HyperParameterRanges
instance GHC.Show.Show Amazonka.Personalize.Types.HyperParameterRanges.HyperParameterRanges
instance GHC.Read.Read Amazonka.Personalize.Types.HyperParameterRanges.HyperParameterRanges
instance GHC.Classes.Eq Amazonka.Personalize.Types.HyperParameterRanges.HyperParameterRanges
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.HyperParameterRanges.HyperParameterRanges
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.HyperParameterRanges.HyperParameterRanges
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.HyperParameterRanges.HyperParameterRanges
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.HyperParameterRanges.HyperParameterRanges


module Amazonka.Personalize.Types.HPOConfig

-- | Describes the properties for hyperparameter optimization (HPO).
--   
--   <i>See:</i> <a>newHPOConfig</a> smart constructor.
data HPOConfig
HPOConfig' :: Maybe HyperParameterRanges -> Maybe HPOResourceConfig -> Maybe HPOObjective -> HPOConfig

-- | The hyperparameters and their allowable ranges.
[$sel:algorithmHyperParameterRanges:HPOConfig'] :: HPOConfig -> Maybe HyperParameterRanges

-- | Describes the resource configuration for HPO.
[$sel:hpoResourceConfig:HPOConfig'] :: HPOConfig -> Maybe HPOResourceConfig

-- | The metric to optimize during HPO.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
[$sel:hpoObjective:HPOConfig'] :: HPOConfig -> Maybe HPOObjective

-- | Create a value of <a>HPOConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithmHyperParameterRanges:HPOConfig'</a>,
--   <a>hPOConfig_algorithmHyperParameterRanges</a> - The hyperparameters
--   and their allowable ranges.
--   
--   <a>$sel:hpoResourceConfig:HPOConfig'</a>,
--   <a>hPOConfig_hpoResourceConfig</a> - Describes the resource
--   configuration for HPO.
--   
--   <a>$sel:hpoObjective:HPOConfig'</a>, <a>hPOConfig_hpoObjective</a> -
--   The metric to optimize during HPO.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
newHPOConfig :: HPOConfig

-- | The hyperparameters and their allowable ranges.
hPOConfig_algorithmHyperParameterRanges :: Lens' HPOConfig (Maybe HyperParameterRanges)

-- | Describes the resource configuration for HPO.
hPOConfig_hpoResourceConfig :: Lens' HPOConfig (Maybe HPOResourceConfig)

-- | The metric to optimize during HPO.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
hPOConfig_hpoObjective :: Lens' HPOConfig (Maybe HPOObjective)
instance GHC.Generics.Generic Amazonka.Personalize.Types.HPOConfig.HPOConfig
instance GHC.Show.Show Amazonka.Personalize.Types.HPOConfig.HPOConfig
instance GHC.Read.Read Amazonka.Personalize.Types.HPOConfig.HPOConfig
instance GHC.Classes.Eq Amazonka.Personalize.Types.HPOConfig.HPOConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.HPOConfig.HPOConfig
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.HPOConfig.HPOConfig
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.HPOConfig.HPOConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.HPOConfig.HPOConfig


module Amazonka.Personalize.Types.ObjectiveSensitivity
newtype ObjectiveSensitivity
ObjectiveSensitivity' :: Text -> ObjectiveSensitivity
[fromObjectiveSensitivity] :: ObjectiveSensitivity -> Text
pattern ObjectiveSensitivity_HIGH :: ObjectiveSensitivity
pattern ObjectiveSensitivity_LOW :: ObjectiveSensitivity
pattern ObjectiveSensitivity_MEDIUM :: ObjectiveSensitivity
pattern ObjectiveSensitivity_OFF :: ObjectiveSensitivity
instance Amazonka.Data.XML.ToXML Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Amazonka.Data.XML.FromXML Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Amazonka.Data.Headers.ToHeader Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Amazonka.Data.Log.ToLog Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Amazonka.Data.ByteString.ToByteString Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Amazonka.Data.Text.ToText Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Amazonka.Data.Text.FromText Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance GHC.Generics.Generic Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance GHC.Classes.Ord Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance GHC.Classes.Eq Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance GHC.Read.Read Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity
instance GHC.Show.Show Amazonka.Personalize.Types.ObjectiveSensitivity.ObjectiveSensitivity


module Amazonka.Personalize.Types.OptimizationObjective

-- | Describes the additional objective for the solution, such as
--   maximizing streaming minutes or increasing revenue. For more
--   information see <a>Optimizing a solution</a>.
--   
--   <i>See:</i> <a>newOptimizationObjective</a> smart constructor.
data OptimizationObjective
OptimizationObjective' :: Maybe Text -> Maybe ObjectiveSensitivity -> OptimizationObjective

-- | The numerical metadata column in an Items dataset related to the
--   optimization objective. For example, VIDEO_LENGTH (to maximize
--   streaming minutes), or PRICE (to maximize revenue).
[$sel:itemAttribute:OptimizationObjective'] :: OptimizationObjective -> Maybe Text

-- | Specifies how Amazon Personalize balances the importance of your
--   optimization objective versus relevance.
[$sel:objectiveSensitivity:OptimizationObjective'] :: OptimizationObjective -> Maybe ObjectiveSensitivity

-- | Create a value of <a>OptimizationObjective</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:itemAttribute:OptimizationObjective'</a>,
--   <a>optimizationObjective_itemAttribute</a> - The numerical metadata
--   column in an Items dataset related to the optimization objective. For
--   example, VIDEO_LENGTH (to maximize streaming minutes), or PRICE (to
--   maximize revenue).
--   
--   <a>$sel:objectiveSensitivity:OptimizationObjective'</a>,
--   <a>optimizationObjective_objectiveSensitivity</a> - Specifies how
--   Amazon Personalize balances the importance of your optimization
--   objective versus relevance.
newOptimizationObjective :: OptimizationObjective

-- | The numerical metadata column in an Items dataset related to the
--   optimization objective. For example, VIDEO_LENGTH (to maximize
--   streaming minutes), or PRICE (to maximize revenue).
optimizationObjective_itemAttribute :: Lens' OptimizationObjective (Maybe Text)

-- | Specifies how Amazon Personalize balances the importance of your
--   optimization objective versus relevance.
optimizationObjective_objectiveSensitivity :: Lens' OptimizationObjective (Maybe ObjectiveSensitivity)
instance GHC.Generics.Generic Amazonka.Personalize.Types.OptimizationObjective.OptimizationObjective
instance GHC.Show.Show Amazonka.Personalize.Types.OptimizationObjective.OptimizationObjective
instance GHC.Read.Read Amazonka.Personalize.Types.OptimizationObjective.OptimizationObjective
instance GHC.Classes.Eq Amazonka.Personalize.Types.OptimizationObjective.OptimizationObjective
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.OptimizationObjective.OptimizationObjective
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.OptimizationObjective.OptimizationObjective
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.OptimizationObjective.OptimizationObjective
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.OptimizationObjective.OptimizationObjective


module Amazonka.Personalize.Types.Recipe

-- | Provides information about a recipe. Each recipe provides an algorithm
--   that Amazon Personalize uses in model training when you use the
--   CreateSolution operation.
--   
--   <i>See:</i> <a>newRecipe</a> smart constructor.
data Recipe
Recipe' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Recipe

-- | The status of the recipe.
[$sel:status:Recipe'] :: Recipe -> Maybe Text

-- | The Amazon Resource Name (ARN) of the algorithm that Amazon
--   Personalize uses to train the model.
[$sel:algorithmArn:Recipe'] :: Recipe -> Maybe Text

-- | The Amazon Resource Name (ARN) of the recipe.
[$sel:recipeArn:Recipe'] :: Recipe -> Maybe Text

-- | The ARN of the FeatureTransformation object.
[$sel:featureTransformationArn:Recipe'] :: Recipe -> Maybe Text

-- | The date and time (in Unix format) that the recipe was last updated.
[$sel:lastUpdatedDateTime:Recipe'] :: Recipe -> Maybe POSIX

-- | The name of the recipe.
[$sel:name:Recipe'] :: Recipe -> Maybe Text

-- | The date and time (in Unix format) that the recipe was created.
[$sel:creationDateTime:Recipe'] :: Recipe -> Maybe POSIX

-- | One of the following values:
--   
--   <ul>
--   <li>PERSONALIZED_RANKING</li>
--   <li>RELATED_ITEMS</li>
--   <li>USER_PERSONALIZATION</li>
--   </ul>
[$sel:recipeType:Recipe'] :: Recipe -> Maybe Text

-- | The description of the recipe.
[$sel:description:Recipe'] :: Recipe -> Maybe Text

-- | Create a value of <a>Recipe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Recipe'</a>, <a>recipe_status</a> - The status of the
--   recipe.
--   
--   <a>$sel:algorithmArn:Recipe'</a>, <a>recipe_algorithmArn</a> - The
--   Amazon Resource Name (ARN) of the algorithm that Amazon Personalize
--   uses to train the model.
--   
--   <a>$sel:recipeArn:Recipe'</a>, <a>recipe_recipeArn</a> - The Amazon
--   Resource Name (ARN) of the recipe.
--   
--   <a>$sel:featureTransformationArn:Recipe'</a>,
--   <a>recipe_featureTransformationArn</a> - The ARN of the
--   FeatureTransformation object.
--   
--   <a>$sel:lastUpdatedDateTime:Recipe'</a>,
--   <a>recipe_lastUpdatedDateTime</a> - The date and time (in Unix format)
--   that the recipe was last updated.
--   
--   <a>$sel:name:Recipe'</a>, <a>recipe_name</a> - The name of the recipe.
--   
--   <a>$sel:creationDateTime:Recipe'</a>, <a>recipe_creationDateTime</a> -
--   The date and time (in Unix format) that the recipe was created.
--   
--   <a>$sel:recipeType:Recipe'</a>, <a>recipe_recipeType</a> - One of the
--   following values:
--   
--   <ul>
--   <li>PERSONALIZED_RANKING</li>
--   <li>RELATED_ITEMS</li>
--   <li>USER_PERSONALIZATION</li>
--   </ul>
--   
--   <a>$sel:description:Recipe'</a>, <a>recipe_description</a> - The
--   description of the recipe.
newRecipe :: Recipe

-- | The status of the recipe.
recipe_status :: Lens' Recipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the algorithm that Amazon
--   Personalize uses to train the model.
recipe_algorithmArn :: Lens' Recipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the recipe.
recipe_recipeArn :: Lens' Recipe (Maybe Text)

-- | The ARN of the FeatureTransformation object.
recipe_featureTransformationArn :: Lens' Recipe (Maybe Text)

-- | The date and time (in Unix format) that the recipe was last updated.
recipe_lastUpdatedDateTime :: Lens' Recipe (Maybe UTCTime)

-- | The name of the recipe.
recipe_name :: Lens' Recipe (Maybe Text)

-- | The date and time (in Unix format) that the recipe was created.
recipe_creationDateTime :: Lens' Recipe (Maybe UTCTime)

-- | One of the following values:
--   
--   <ul>
--   <li>PERSONALIZED_RANKING</li>
--   <li>RELATED_ITEMS</li>
--   <li>USER_PERSONALIZATION</li>
--   </ul>
recipe_recipeType :: Lens' Recipe (Maybe Text)

-- | The description of the recipe.
recipe_description :: Lens' Recipe (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.Recipe.Recipe
instance GHC.Show.Show Amazonka.Personalize.Types.Recipe.Recipe
instance GHC.Read.Read Amazonka.Personalize.Types.Recipe.Recipe
instance GHC.Classes.Eq Amazonka.Personalize.Types.Recipe.Recipe
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.Recipe.Recipe
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.Recipe.Recipe
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.Recipe.Recipe


module Amazonka.Personalize.Types.RecipeProvider
newtype RecipeProvider
RecipeProvider' :: Text -> RecipeProvider
[fromRecipeProvider] :: RecipeProvider -> Text
pattern RecipeProvider_SERVICE :: RecipeProvider
instance Amazonka.Data.XML.ToXML Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Amazonka.Data.XML.FromXML Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Amazonka.Data.Headers.ToHeader Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Amazonka.Data.Log.ToLog Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Amazonka.Data.ByteString.ToByteString Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Amazonka.Data.Text.ToText Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Amazonka.Data.Text.FromText Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance GHC.Generics.Generic Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance GHC.Classes.Ord Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance GHC.Classes.Eq Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance GHC.Read.Read Amazonka.Personalize.Types.RecipeProvider.RecipeProvider
instance GHC.Show.Show Amazonka.Personalize.Types.RecipeProvider.RecipeProvider


module Amazonka.Personalize.Types.RecipeSummary

-- | Provides a summary of the properties of a recipe. For a complete
--   listing, call the DescribeRecipe API.
--   
--   <i>See:</i> <a>newRecipeSummary</a> smart constructor.
data RecipeSummary
RecipeSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> RecipeSummary

-- | The status of the recipe.
[$sel:status:RecipeSummary'] :: RecipeSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the recipe.
[$sel:recipeArn:RecipeSummary'] :: RecipeSummary -> Maybe Text

-- | The date and time (in Unix time) that the recipe was last updated.
[$sel:lastUpdatedDateTime:RecipeSummary'] :: RecipeSummary -> Maybe POSIX

-- | The name of the recipe.
[$sel:name:RecipeSummary'] :: RecipeSummary -> Maybe Text

-- | The date and time (in Unix time) that the recipe was created.
[$sel:creationDateTime:RecipeSummary'] :: RecipeSummary -> Maybe POSIX

-- | Create a value of <a>RecipeSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RecipeSummary'</a>, <a>recipeSummary_status</a> - The
--   status of the recipe.
--   
--   <a>$sel:recipeArn:RecipeSummary'</a>, <a>recipeSummary_recipeArn</a> -
--   The Amazon Resource Name (ARN) of the recipe.
--   
--   <a>$sel:lastUpdatedDateTime:RecipeSummary'</a>,
--   <a>recipeSummary_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the recipe was last updated.
--   
--   <a>$sel:name:RecipeSummary'</a>, <a>recipeSummary_name</a> - The name
--   of the recipe.
--   
--   <a>$sel:creationDateTime:RecipeSummary'</a>,
--   <a>recipeSummary_creationDateTime</a> - The date and time (in Unix
--   time) that the recipe was created.
newRecipeSummary :: RecipeSummary

-- | The status of the recipe.
recipeSummary_status :: Lens' RecipeSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the recipe.
recipeSummary_recipeArn :: Lens' RecipeSummary (Maybe Text)

-- | The date and time (in Unix time) that the recipe was last updated.
recipeSummary_lastUpdatedDateTime :: Lens' RecipeSummary (Maybe UTCTime)

-- | The name of the recipe.
recipeSummary_name :: Lens' RecipeSummary (Maybe Text)

-- | The date and time (in Unix time) that the recipe was created.
recipeSummary_creationDateTime :: Lens' RecipeSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.Personalize.Types.RecipeSummary.RecipeSummary
instance GHC.Show.Show Amazonka.Personalize.Types.RecipeSummary.RecipeSummary
instance GHC.Read.Read Amazonka.Personalize.Types.RecipeSummary.RecipeSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.RecipeSummary.RecipeSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.RecipeSummary.RecipeSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.RecipeSummary.RecipeSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.RecipeSummary.RecipeSummary


module Amazonka.Personalize.Types.S3DataConfig

-- | The configuration details of an Amazon S3 input or output bucket.
--   
--   <i>See:</i> <a>newS3DataConfig</a> smart constructor.
data S3DataConfig
S3DataConfig' :: Maybe Text -> Text -> S3DataConfig

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   that Amazon Personalize uses to encrypt or decrypt the input and
--   output files of a batch inference job.
[$sel:kmsKeyArn:S3DataConfig'] :: S3DataConfig -> Maybe Text

-- | The file path of the Amazon S3 bucket.
[$sel:path:S3DataConfig'] :: S3DataConfig -> Text

-- | Create a value of <a>S3DataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:S3DataConfig'</a>, <a>s3DataConfig_kmsKeyArn</a> -
--   The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   that Amazon Personalize uses to encrypt or decrypt the input and
--   output files of a batch inference job.
--   
--   <a>$sel:path:S3DataConfig'</a>, <a>s3DataConfig_path</a> - The file
--   path of the Amazon S3 bucket.
newS3DataConfig :: Text -> S3DataConfig

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   that Amazon Personalize uses to encrypt or decrypt the input and
--   output files of a batch inference job.
s3DataConfig_kmsKeyArn :: Lens' S3DataConfig (Maybe Text)

-- | The file path of the Amazon S3 bucket.
s3DataConfig_path :: Lens' S3DataConfig Text
instance GHC.Generics.Generic Amazonka.Personalize.Types.S3DataConfig.S3DataConfig
instance GHC.Show.Show Amazonka.Personalize.Types.S3DataConfig.S3DataConfig
instance GHC.Read.Read Amazonka.Personalize.Types.S3DataConfig.S3DataConfig
instance GHC.Classes.Eq Amazonka.Personalize.Types.S3DataConfig.S3DataConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.S3DataConfig.S3DataConfig
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.S3DataConfig.S3DataConfig
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.S3DataConfig.S3DataConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.S3DataConfig.S3DataConfig


module Amazonka.Personalize.Types.DatasetExportJobOutput

-- | The output configuration parameters of a dataset export job.
--   
--   <i>See:</i> <a>newDatasetExportJobOutput</a> smart constructor.
data DatasetExportJobOutput
DatasetExportJobOutput' :: S3DataConfig -> DatasetExportJobOutput
[$sel:s3DataDestination:DatasetExportJobOutput'] :: DatasetExportJobOutput -> S3DataConfig

-- | Create a value of <a>DatasetExportJobOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3DataDestination:DatasetExportJobOutput'</a>,
--   <a>datasetExportJobOutput_s3DataDestination</a> - Undocumented member.
newDatasetExportJobOutput :: S3DataConfig -> DatasetExportJobOutput

-- | Undocumented member.
datasetExportJobOutput_s3DataDestination :: Lens' DatasetExportJobOutput S3DataConfig
instance GHC.Generics.Generic Amazonka.Personalize.Types.DatasetExportJobOutput.DatasetExportJobOutput
instance GHC.Show.Show Amazonka.Personalize.Types.DatasetExportJobOutput.DatasetExportJobOutput
instance GHC.Read.Read Amazonka.Personalize.Types.DatasetExportJobOutput.DatasetExportJobOutput
instance GHC.Classes.Eq Amazonka.Personalize.Types.DatasetExportJobOutput.DatasetExportJobOutput
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DatasetExportJobOutput.DatasetExportJobOutput
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DatasetExportJobOutput.DatasetExportJobOutput
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DatasetExportJobOutput.DatasetExportJobOutput
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.DatasetExportJobOutput.DatasetExportJobOutput


module Amazonka.Personalize.Types.DatasetExportJob

-- | Describes a job that exports a dataset to an Amazon S3 bucket. For
--   more information, see CreateDatasetExportJob.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <i>See:</i> <a>newDatasetExportJob</a> smart constructor.
data DatasetExportJob
DatasetExportJob' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DatasetExportJobOutput -> Maybe Text -> Maybe POSIX -> Maybe IngestionMode -> Maybe POSIX -> Maybe Text -> DatasetExportJob

-- | If a dataset export job fails, provides the reason why.
[$sel:failureReason:DatasetExportJob'] :: DatasetExportJob -> Maybe Text

-- | The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
[$sel:status:DatasetExportJob'] :: DatasetExportJob -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset export job.
[$sel:datasetExportJobArn:DatasetExportJob'] :: DatasetExportJob -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset to export.
[$sel:datasetArn:DatasetExportJob'] :: DatasetExportJob -> Maybe Text

-- | The path to the Amazon S3 bucket where the job's output is stored. For
--   example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
[$sel:jobOutput:DatasetExportJob'] :: DatasetExportJob -> Maybe DatasetExportJobOutput

-- | The name of the export job.
[$sel:jobName:DatasetExportJob'] :: DatasetExportJob -> Maybe Text

-- | The date and time (in Unix time) the status of the dataset export job
--   was last updated.
[$sel:lastUpdatedDateTime:DatasetExportJob'] :: DatasetExportJob -> Maybe POSIX

-- | The data to export, based on how you imported the data. You can choose
--   to export <tt>BULK</tt> data that you imported using a dataset import
--   job, <tt>PUT</tt> data that you imported incrementally (using the
--   console, PutEvents, PutUsers and PutItems operations), or <tt>ALL</tt>
--   for both types. The default value is <tt>PUT</tt>.
[$sel:ingestionMode:DatasetExportJob'] :: DatasetExportJob -> Maybe IngestionMode

-- | The creation date and time (in Unix time) of the dataset export job.
[$sel:creationDateTime:DatasetExportJob'] :: DatasetExportJob -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the IAM service role that has
--   permissions to add data to your output Amazon S3 bucket.
[$sel:roleArn:DatasetExportJob'] :: DatasetExportJob -> Maybe Text

-- | Create a value of <a>DatasetExportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetExportJob'</a>,
--   <a>datasetExportJob_failureReason</a> - If a dataset export job fails,
--   provides the reason why.
--   
--   <a>$sel:status:DatasetExportJob'</a>, <a>datasetExportJob_status</a> -
--   The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:datasetExportJobArn:DatasetExportJob'</a>,
--   <a>datasetExportJob_datasetExportJobArn</a> - The Amazon Resource Name
--   (ARN) of the dataset export job.
--   
--   <a>$sel:datasetArn:DatasetExportJob'</a>,
--   <a>datasetExportJob_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the dataset to export.
--   
--   <a>$sel:jobOutput:DatasetExportJob'</a>,
--   <a>datasetExportJob_jobOutput</a> - The path to the Amazon S3 bucket
--   where the job's output is stored. For example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
--   
--   <a>$sel:jobName:DatasetExportJob'</a>, <a>datasetExportJob_jobName</a>
--   - The name of the export job.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetExportJob'</a>,
--   <a>datasetExportJob_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) the status of the dataset export job was last updated.
--   
--   <a>$sel:ingestionMode:DatasetExportJob'</a>,
--   <a>datasetExportJob_ingestionMode</a> - The data to export, based on
--   how you imported the data. You can choose to export <tt>BULK</tt> data
--   that you imported using a dataset import job, <tt>PUT</tt> data that
--   you imported incrementally (using the console, PutEvents, PutUsers and
--   PutItems operations), or <tt>ALL</tt> for both types. The default
--   value is <tt>PUT</tt>.
--   
--   <a>$sel:creationDateTime:DatasetExportJob'</a>,
--   <a>datasetExportJob_creationDateTime</a> - The creation date and time
--   (in Unix time) of the dataset export job.
--   
--   <a>$sel:roleArn:DatasetExportJob'</a>, <a>datasetExportJob_roleArn</a>
--   - The Amazon Resource Name (ARN) of the IAM service role that has
--   permissions to add data to your output Amazon S3 bucket.
newDatasetExportJob :: DatasetExportJob

-- | If a dataset export job fails, provides the reason why.
datasetExportJob_failureReason :: Lens' DatasetExportJob (Maybe Text)

-- | The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
datasetExportJob_status :: Lens' DatasetExportJob (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset export job.
datasetExportJob_datasetExportJobArn :: Lens' DatasetExportJob (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset to export.
datasetExportJob_datasetArn :: Lens' DatasetExportJob (Maybe Text)

-- | The path to the Amazon S3 bucket where the job's output is stored. For
--   example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
datasetExportJob_jobOutput :: Lens' DatasetExportJob (Maybe DatasetExportJobOutput)

-- | The name of the export job.
datasetExportJob_jobName :: Lens' DatasetExportJob (Maybe Text)

-- | The date and time (in Unix time) the status of the dataset export job
--   was last updated.
datasetExportJob_lastUpdatedDateTime :: Lens' DatasetExportJob (Maybe UTCTime)

-- | The data to export, based on how you imported the data. You can choose
--   to export <tt>BULK</tt> data that you imported using a dataset import
--   job, <tt>PUT</tt> data that you imported incrementally (using the
--   console, PutEvents, PutUsers and PutItems operations), or <tt>ALL</tt>
--   for both types. The default value is <tt>PUT</tt>.
datasetExportJob_ingestionMode :: Lens' DatasetExportJob (Maybe IngestionMode)

-- | The creation date and time (in Unix time) of the dataset export job.
datasetExportJob_creationDateTime :: Lens' DatasetExportJob (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the IAM service role that has
--   permissions to add data to your output Amazon S3 bucket.
datasetExportJob_roleArn :: Lens' DatasetExportJob (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.DatasetExportJob.DatasetExportJob
instance GHC.Show.Show Amazonka.Personalize.Types.DatasetExportJob.DatasetExportJob
instance GHC.Read.Read Amazonka.Personalize.Types.DatasetExportJob.DatasetExportJob
instance GHC.Classes.Eq Amazonka.Personalize.Types.DatasetExportJob.DatasetExportJob
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.DatasetExportJob.DatasetExportJob
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.DatasetExportJob.DatasetExportJob
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.DatasetExportJob.DatasetExportJob


module Amazonka.Personalize.Types.BatchInferenceJobOutput

-- | The output configuration parameters of a batch inference job.
--   
--   <i>See:</i> <a>newBatchInferenceJobOutput</a> smart constructor.
data BatchInferenceJobOutput
BatchInferenceJobOutput' :: S3DataConfig -> BatchInferenceJobOutput

-- | Information on the Amazon S3 bucket in which the batch inference job's
--   output is stored.
[$sel:s3DataDestination:BatchInferenceJobOutput'] :: BatchInferenceJobOutput -> S3DataConfig

-- | Create a value of <a>BatchInferenceJobOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3DataDestination:BatchInferenceJobOutput'</a>,
--   <a>batchInferenceJobOutput_s3DataDestination</a> - Information on the
--   Amazon S3 bucket in which the batch inference job's output is stored.
newBatchInferenceJobOutput :: S3DataConfig -> BatchInferenceJobOutput

-- | Information on the Amazon S3 bucket in which the batch inference job's
--   output is stored.
batchInferenceJobOutput_s3DataDestination :: Lens' BatchInferenceJobOutput S3DataConfig
instance GHC.Generics.Generic Amazonka.Personalize.Types.BatchInferenceJobOutput.BatchInferenceJobOutput
instance GHC.Show.Show Amazonka.Personalize.Types.BatchInferenceJobOutput.BatchInferenceJobOutput
instance GHC.Read.Read Amazonka.Personalize.Types.BatchInferenceJobOutput.BatchInferenceJobOutput
instance GHC.Classes.Eq Amazonka.Personalize.Types.BatchInferenceJobOutput.BatchInferenceJobOutput
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.BatchInferenceJobOutput.BatchInferenceJobOutput
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.BatchInferenceJobOutput.BatchInferenceJobOutput
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.BatchInferenceJobOutput.BatchInferenceJobOutput
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.BatchInferenceJobOutput.BatchInferenceJobOutput


module Amazonka.Personalize.Types.BatchInferenceJobInput

-- | The input configuration of a batch inference job.
--   
--   <i>See:</i> <a>newBatchInferenceJobInput</a> smart constructor.
data BatchInferenceJobInput
BatchInferenceJobInput' :: S3DataConfig -> BatchInferenceJobInput

-- | The URI of the Amazon S3 location that contains your input data. The
--   Amazon S3 bucket must be in the same region as the API endpoint you
--   are calling.
[$sel:s3DataSource:BatchInferenceJobInput'] :: BatchInferenceJobInput -> S3DataConfig

-- | Create a value of <a>BatchInferenceJobInput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3DataSource:BatchInferenceJobInput'</a>,
--   <a>batchInferenceJobInput_s3DataSource</a> - The URI of the Amazon S3
--   location that contains your input data. The Amazon S3 bucket must be
--   in the same region as the API endpoint you are calling.
newBatchInferenceJobInput :: S3DataConfig -> BatchInferenceJobInput

-- | The URI of the Amazon S3 location that contains your input data. The
--   Amazon S3 bucket must be in the same region as the API endpoint you
--   are calling.
batchInferenceJobInput_s3DataSource :: Lens' BatchInferenceJobInput S3DataConfig
instance GHC.Generics.Generic Amazonka.Personalize.Types.BatchInferenceJobInput.BatchInferenceJobInput
instance GHC.Show.Show Amazonka.Personalize.Types.BatchInferenceJobInput.BatchInferenceJobInput
instance GHC.Read.Read Amazonka.Personalize.Types.BatchInferenceJobInput.BatchInferenceJobInput
instance GHC.Classes.Eq Amazonka.Personalize.Types.BatchInferenceJobInput.BatchInferenceJobInput
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.BatchInferenceJobInput.BatchInferenceJobInput
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.BatchInferenceJobInput.BatchInferenceJobInput
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.BatchInferenceJobInput.BatchInferenceJobInput
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.BatchInferenceJobInput.BatchInferenceJobInput


module Amazonka.Personalize.Types.BatchInferenceJob

-- | Contains information on a batch inference job.
--   
--   <i>See:</i> <a>newBatchInferenceJob</a> smart constructor.
data BatchInferenceJob
BatchInferenceJob' :: Maybe Text -> Maybe Text -> Maybe BatchInferenceJobOutput -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe BatchInferenceJobConfig -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe BatchInferenceJobInput -> BatchInferenceJob

-- | If the batch inference job failed, the reason for the failure.
[$sel:failureReason:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
[$sel:status:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The Amazon S3 bucket that contains the output data generated by the
--   batch inference job.
[$sel:jobOutput:BatchInferenceJob'] :: BatchInferenceJob -> Maybe BatchInferenceJobOutput

-- | The name of the batch inference job.
[$sel:jobName:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The time at which the batch inference job was last updated.
[$sel:lastUpdatedDateTime:BatchInferenceJob'] :: BatchInferenceJob -> Maybe POSIX

-- | The number of recommendations generated by the batch inference job.
--   This number includes the error messages generated for failed input
--   records.
[$sel:numResults:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Int

-- | A string to string map of the configuration details of a batch
--   inference job.
[$sel:batchInferenceJobConfig:BatchInferenceJob'] :: BatchInferenceJob -> Maybe BatchInferenceJobConfig

-- | The Amazon Resource Name (ARN) of the batch inference job.
[$sel:batchInferenceJobArn:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The ARN of the filter used on the batch inference job.
[$sel:filterArn:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The time at which the batch inference job was created.
[$sel:creationDateTime:BatchInferenceJob'] :: BatchInferenceJob -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the solution version from which the
--   batch inference job was created.
[$sel:solutionVersionArn:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The ARN of the Amazon Identity and Access Management (IAM) role that
--   requested the batch inference job.
[$sel:roleArn:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The Amazon S3 path that leads to the input data used to generate the
--   batch inference job.
[$sel:jobInput:BatchInferenceJob'] :: BatchInferenceJob -> Maybe BatchInferenceJobInput

-- | Create a value of <a>BatchInferenceJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_failureReason</a> - If the batch inference job
--   failed, the reason for the failure.
--   
--   <a>$sel:status:BatchInferenceJob'</a>, <a>batchInferenceJob_status</a>
--   - The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
--   
--   <a>$sel:jobOutput:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_jobOutput</a> - The Amazon S3 bucket that
--   contains the output data generated by the batch inference job.
--   
--   <a>$sel:jobName:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_jobName</a> - The name of the batch inference
--   job.
--   
--   <a>$sel:lastUpdatedDateTime:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_lastUpdatedDateTime</a> - The time at which the
--   batch inference job was last updated.
--   
--   <a>$sel:numResults:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_numResults</a> - The number of recommendations
--   generated by the batch inference job. This number includes the error
--   messages generated for failed input records.
--   
--   <a>$sel:batchInferenceJobConfig:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_batchInferenceJobConfig</a> - A string to string
--   map of the configuration details of a batch inference job.
--   
--   <a>$sel:batchInferenceJobArn:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_batchInferenceJobArn</a> - The Amazon Resource
--   Name (ARN) of the batch inference job.
--   
--   <a>$sel:filterArn:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_filterArn</a> - The ARN of the filter used on the
--   batch inference job.
--   
--   <a>$sel:creationDateTime:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_creationDateTime</a> - The time at which the
--   batch inference job was created.
--   
--   <a>$sel:solutionVersionArn:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_solutionVersionArn</a> - The Amazon Resource Name
--   (ARN) of the solution version from which the batch inference job was
--   created.
--   
--   <a>$sel:roleArn:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_roleArn</a> - The ARN of the Amazon Identity and
--   Access Management (IAM) role that requested the batch inference job.
--   
--   <a>$sel:jobInput:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_jobInput</a> - The Amazon S3 path that leads to
--   the input data used to generate the batch inference job.
newBatchInferenceJob :: BatchInferenceJob

-- | If the batch inference job failed, the reason for the failure.
batchInferenceJob_failureReason :: Lens' BatchInferenceJob (Maybe Text)

-- | The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
batchInferenceJob_status :: Lens' BatchInferenceJob (Maybe Text)

-- | The Amazon S3 bucket that contains the output data generated by the
--   batch inference job.
batchInferenceJob_jobOutput :: Lens' BatchInferenceJob (Maybe BatchInferenceJobOutput)

-- | The name of the batch inference job.
batchInferenceJob_jobName :: Lens' BatchInferenceJob (Maybe Text)

-- | The time at which the batch inference job was last updated.
batchInferenceJob_lastUpdatedDateTime :: Lens' BatchInferenceJob (Maybe UTCTime)

-- | The number of recommendations generated by the batch inference job.
--   This number includes the error messages generated for failed input
--   records.
batchInferenceJob_numResults :: Lens' BatchInferenceJob (Maybe Int)

-- | A string to string map of the configuration details of a batch
--   inference job.
batchInferenceJob_batchInferenceJobConfig :: Lens' BatchInferenceJob (Maybe BatchInferenceJobConfig)

-- | The Amazon Resource Name (ARN) of the batch inference job.
batchInferenceJob_batchInferenceJobArn :: Lens' BatchInferenceJob (Maybe Text)

-- | The ARN of the filter used on the batch inference job.
batchInferenceJob_filterArn :: Lens' BatchInferenceJob (Maybe Text)

-- | The time at which the batch inference job was created.
batchInferenceJob_creationDateTime :: Lens' BatchInferenceJob (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the solution version from which the
--   batch inference job was created.
batchInferenceJob_solutionVersionArn :: Lens' BatchInferenceJob (Maybe Text)

-- | The ARN of the Amazon Identity and Access Management (IAM) role that
--   requested the batch inference job.
batchInferenceJob_roleArn :: Lens' BatchInferenceJob (Maybe Text)

-- | The Amazon S3 path that leads to the input data used to generate the
--   batch inference job.
batchInferenceJob_jobInput :: Lens' BatchInferenceJob (Maybe BatchInferenceJobInput)
instance GHC.Generics.Generic Amazonka.Personalize.Types.BatchInferenceJob.BatchInferenceJob
instance GHC.Show.Show Amazonka.Personalize.Types.BatchInferenceJob.BatchInferenceJob
instance GHC.Read.Read Amazonka.Personalize.Types.BatchInferenceJob.BatchInferenceJob
instance GHC.Classes.Eq Amazonka.Personalize.Types.BatchInferenceJob.BatchInferenceJob
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.BatchInferenceJob.BatchInferenceJob
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.BatchInferenceJob.BatchInferenceJob
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.BatchInferenceJob.BatchInferenceJob


module Amazonka.Personalize.Types.SolutionConfig

-- | Describes the configuration properties for the solution.
--   
--   <i>See:</i> <a>newSolutionConfig</a> smart constructor.
data SolutionConfig
SolutionConfig' :: Maybe (HashMap Text Text) -> Maybe HPOConfig -> Maybe Text -> Maybe AutoMLConfig -> Maybe (HashMap Text Text) -> Maybe OptimizationObjective -> SolutionConfig

-- | Lists the feature transformation parameters.
[$sel:featureTransformationParameters:SolutionConfig'] :: SolutionConfig -> Maybe (HashMap Text Text)

-- | Describes the properties for hyperparameter optimization (HPO).
[$sel:hpoConfig:SolutionConfig'] :: SolutionConfig -> Maybe HPOConfig

-- | Only events with a value greater than or equal to this threshold are
--   used for training a model.
[$sel:eventValueThreshold:SolutionConfig'] :: SolutionConfig -> Maybe Text

-- | The AutoMLConfig object containing a list of recipes to search when
--   AutoML is performed.
[$sel:autoMLConfig:SolutionConfig'] :: SolutionConfig -> Maybe AutoMLConfig

-- | Lists the hyperparameter names and ranges.
[$sel:algorithmHyperParameters:SolutionConfig'] :: SolutionConfig -> Maybe (HashMap Text Text)

-- | Describes the additional objective for the solution, such as
--   maximizing streaming minutes or increasing revenue. For more
--   information see <a>Optimizing a solution</a>.
[$sel:optimizationObjective:SolutionConfig'] :: SolutionConfig -> Maybe OptimizationObjective

-- | Create a value of <a>SolutionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:featureTransformationParameters:SolutionConfig'</a>,
--   <a>solutionConfig_featureTransformationParameters</a> - Lists the
--   feature transformation parameters.
--   
--   <a>$sel:hpoConfig:SolutionConfig'</a>, <a>solutionConfig_hpoConfig</a>
--   - Describes the properties for hyperparameter optimization (HPO).
--   
--   <a>$sel:eventValueThreshold:SolutionConfig'</a>,
--   <a>solutionConfig_eventValueThreshold</a> - Only events with a value
--   greater than or equal to this threshold are used for training a model.
--   
--   <a>$sel:autoMLConfig:SolutionConfig'</a>,
--   <a>solutionConfig_autoMLConfig</a> - The AutoMLConfig object
--   containing a list of recipes to search when AutoML is performed.
--   
--   <a>$sel:algorithmHyperParameters:SolutionConfig'</a>,
--   <a>solutionConfig_algorithmHyperParameters</a> - Lists the
--   hyperparameter names and ranges.
--   
--   <a>$sel:optimizationObjective:SolutionConfig'</a>,
--   <a>solutionConfig_optimizationObjective</a> - Describes the additional
--   objective for the solution, such as maximizing streaming minutes or
--   increasing revenue. For more information see <a>Optimizing a
--   solution</a>.
newSolutionConfig :: SolutionConfig

-- | Lists the feature transformation parameters.
solutionConfig_featureTransformationParameters :: Lens' SolutionConfig (Maybe (HashMap Text Text))

-- | Describes the properties for hyperparameter optimization (HPO).
solutionConfig_hpoConfig :: Lens' SolutionConfig (Maybe HPOConfig)

-- | Only events with a value greater than or equal to this threshold are
--   used for training a model.
solutionConfig_eventValueThreshold :: Lens' SolutionConfig (Maybe Text)

-- | The AutoMLConfig object containing a list of recipes to search when
--   AutoML is performed.
solutionConfig_autoMLConfig :: Lens' SolutionConfig (Maybe AutoMLConfig)

-- | Lists the hyperparameter names and ranges.
solutionConfig_algorithmHyperParameters :: Lens' SolutionConfig (Maybe (HashMap Text Text))

-- | Describes the additional objective for the solution, such as
--   maximizing streaming minutes or increasing revenue. For more
--   information see <a>Optimizing a solution</a>.
solutionConfig_optimizationObjective :: Lens' SolutionConfig (Maybe OptimizationObjective)
instance GHC.Generics.Generic Amazonka.Personalize.Types.SolutionConfig.SolutionConfig
instance GHC.Show.Show Amazonka.Personalize.Types.SolutionConfig.SolutionConfig
instance GHC.Read.Read Amazonka.Personalize.Types.SolutionConfig.SolutionConfig
instance GHC.Classes.Eq Amazonka.Personalize.Types.SolutionConfig.SolutionConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.SolutionConfig.SolutionConfig
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.SolutionConfig.SolutionConfig
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.SolutionConfig.SolutionConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.SolutionConfig.SolutionConfig


module Amazonka.Personalize.Types.SolutionSummary

-- | Provides a summary of the properties of a solution. For a complete
--   listing, call the DescribeSolution API.
--   
--   <i>See:</i> <a>newSolutionSummary</a> smart constructor.
data SolutionSummary
SolutionSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> SolutionSummary

-- | The Amazon Resource Name (ARN) of the solution.
[$sel:solutionArn:SolutionSummary'] :: SolutionSummary -> Maybe Text

-- | The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:SolutionSummary'] :: SolutionSummary -> Maybe Text

-- | The date and time (in Unix time) that the solution was last updated.
[$sel:lastUpdatedDateTime:SolutionSummary'] :: SolutionSummary -> Maybe POSIX

-- | The name of the solution.
[$sel:name:SolutionSummary'] :: SolutionSummary -> Maybe Text

-- | The date and time (in Unix time) that the solution was created.
[$sel:creationDateTime:SolutionSummary'] :: SolutionSummary -> Maybe POSIX

-- | Create a value of <a>SolutionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:SolutionSummary'</a>,
--   <a>solutionSummary_solutionArn</a> - The Amazon Resource Name (ARN) of
--   the solution.
--   
--   <a>$sel:status:SolutionSummary'</a>, <a>solutionSummary_status</a> -
--   The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:SolutionSummary'</a>,
--   <a>solutionSummary_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the solution was last updated.
--   
--   <a>$sel:name:SolutionSummary'</a>, <a>solutionSummary_name</a> - The
--   name of the solution.
--   
--   <a>$sel:creationDateTime:SolutionSummary'</a>,
--   <a>solutionSummary_creationDateTime</a> - The date and time (in Unix
--   time) that the solution was created.
newSolutionSummary :: SolutionSummary

-- | The Amazon Resource Name (ARN) of the solution.
solutionSummary_solutionArn :: Lens' SolutionSummary (Maybe Text)

-- | The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
solutionSummary_status :: Lens' SolutionSummary (Maybe Text)

-- | The date and time (in Unix time) that the solution was last updated.
solutionSummary_lastUpdatedDateTime :: Lens' SolutionSummary (Maybe UTCTime)

-- | The name of the solution.
solutionSummary_name :: Lens' SolutionSummary (Maybe Text)

-- | The date and time (in Unix time) that the solution was created.
solutionSummary_creationDateTime :: Lens' SolutionSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.Personalize.Types.SolutionSummary.SolutionSummary
instance GHC.Show.Show Amazonka.Personalize.Types.SolutionSummary.SolutionSummary
instance GHC.Read.Read Amazonka.Personalize.Types.SolutionSummary.SolutionSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.SolutionSummary.SolutionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.SolutionSummary.SolutionSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.SolutionSummary.SolutionSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.SolutionSummary.SolutionSummary


module Amazonka.Personalize.Types.SolutionVersionSummary

-- | Provides a summary of the properties of a solution version. For a
--   complete listing, call the DescribeSolutionVersion API.
--   
--   <i>See:</i> <a>newSolutionVersionSummary</a> smart constructor.
data SolutionVersionSummary
SolutionVersionSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> SolutionVersionSummary

-- | If a solution version fails, the reason behind the failure.
[$sel:failureReason:SolutionVersionSummary'] :: SolutionVersionSummary -> Maybe Text

-- | The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
[$sel:status:SolutionVersionSummary'] :: SolutionVersionSummary -> Maybe Text

-- | The date and time (in Unix time) that the solution version was last
--   updated.
[$sel:lastUpdatedDateTime:SolutionVersionSummary'] :: SolutionVersionSummary -> Maybe POSIX

-- | The date and time (in Unix time) that this version of a solution was
--   created.
[$sel:creationDateTime:SolutionVersionSummary'] :: SolutionVersionSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the solution version.
[$sel:solutionVersionArn:SolutionVersionSummary'] :: SolutionVersionSummary -> Maybe Text

-- | Create a value of <a>SolutionVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_failureReason</a> - If a solution version
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_status</a> - The status of the solution
--   version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the solution version was last updated.
--   
--   <a>$sel:creationDateTime:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_creationDateTime</a> - The date and time (in
--   Unix time) that this version of a solution was created.
--   
--   <a>$sel:solutionVersionArn:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_solutionVersionArn</a> - The Amazon Resource
--   Name (ARN) of the solution version.
newSolutionVersionSummary :: SolutionVersionSummary

-- | If a solution version fails, the reason behind the failure.
solutionVersionSummary_failureReason :: Lens' SolutionVersionSummary (Maybe Text)

-- | The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
solutionVersionSummary_status :: Lens' SolutionVersionSummary (Maybe Text)

-- | The date and time (in Unix time) that the solution version was last
--   updated.
solutionVersionSummary_lastUpdatedDateTime :: Lens' SolutionVersionSummary (Maybe UTCTime)

-- | The date and time (in Unix time) that this version of a solution was
--   created.
solutionVersionSummary_creationDateTime :: Lens' SolutionVersionSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the solution version.
solutionVersionSummary_solutionVersionArn :: Lens' SolutionVersionSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.SolutionVersionSummary.SolutionVersionSummary
instance GHC.Show.Show Amazonka.Personalize.Types.SolutionVersionSummary.SolutionVersionSummary
instance GHC.Read.Read Amazonka.Personalize.Types.SolutionVersionSummary.SolutionVersionSummary
instance GHC.Classes.Eq Amazonka.Personalize.Types.SolutionVersionSummary.SolutionVersionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.SolutionVersionSummary.SolutionVersionSummary
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.SolutionVersionSummary.SolutionVersionSummary
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.SolutionVersionSummary.SolutionVersionSummary


module Amazonka.Personalize.Types.Solution

-- | An object that provides information about a solution. A solution is a
--   trained model that can be deployed as a campaign.
--   
--   <i>See:</i> <a>newSolution</a> smart constructor.
data Solution
Solution' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe AutoMLResult -> Maybe POSIX -> Maybe Text -> Maybe SolutionVersionSummary -> Maybe SolutionConfig -> Maybe Bool -> Solution

-- | The ARN of the solution.
[$sel:solutionArn:Solution'] :: Solution -> Maybe Text

-- | The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:Solution'] :: Solution -> Maybe Text

-- | When true, Amazon Personalize performs a search for the best
--   USER_PERSONALIZATION recipe from the list specified in the solution
--   configuration (<tt>recipeArn</tt> must not be specified). When false
--   (the default), Amazon Personalize uses <tt>recipeArn</tt> for
--   training.
[$sel:performAutoML:Solution'] :: Solution -> Maybe Bool

-- | The ARN of the recipe used to create the solution.
[$sel:recipeArn:Solution'] :: Solution -> Maybe Text

-- | The date and time (in Unix time) that the solution was last updated.
[$sel:lastUpdatedDateTime:Solution'] :: Solution -> Maybe POSIX

-- | The event type (for example, 'click' or 'like') that is used for
--   training the model. If no <tt>eventType</tt> is provided, Amazon
--   Personalize uses all interactions for training with equal weight
--   regardless of type.
[$sel:eventType:Solution'] :: Solution -> Maybe Text

-- | The name of the solution.
[$sel:name:Solution'] :: Solution -> Maybe Text

-- | When <tt>performAutoML</tt> is true, specifies the best recipe found.
[$sel:autoMLResult:Solution'] :: Solution -> Maybe AutoMLResult

-- | The creation date and time (in Unix time) of the solution.
[$sel:creationDateTime:Solution'] :: Solution -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset group that provides the
--   training data.
[$sel:datasetGroupArn:Solution'] :: Solution -> Maybe Text

-- | Describes the latest version of the solution, including the status and
--   the ARN.
[$sel:latestSolutionVersion:Solution'] :: Solution -> Maybe SolutionVersionSummary

-- | Describes the configuration properties for the solution.
[$sel:solutionConfig:Solution'] :: Solution -> Maybe SolutionConfig

-- | Whether to perform hyperparameter optimization (HPO) on the chosen
--   recipe. The default is <tt>false</tt>.
[$sel:performHPO:Solution'] :: Solution -> Maybe Bool

-- | Create a value of <a>Solution</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:Solution'</a>, <a>solution_solutionArn</a> - The
--   ARN of the solution.
--   
--   <a>$sel:status:Solution'</a>, <a>solution_status</a> - The status of
--   the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:performAutoML:Solution'</a>, <a>solution_performAutoML</a> -
--   When true, Amazon Personalize performs a search for the best
--   USER_PERSONALIZATION recipe from the list specified in the solution
--   configuration (<tt>recipeArn</tt> must not be specified). When false
--   (the default), Amazon Personalize uses <tt>recipeArn</tt> for
--   training.
--   
--   <a>$sel:recipeArn:Solution'</a>, <a>solution_recipeArn</a> - The ARN
--   of the recipe used to create the solution.
--   
--   <a>$sel:lastUpdatedDateTime:Solution'</a>,
--   <a>solution_lastUpdatedDateTime</a> - The date and time (in Unix time)
--   that the solution was last updated.
--   
--   <a>$sel:eventType:Solution'</a>, <a>solution_eventType</a> - The event
--   type (for example, 'click' or 'like') that is used for training the
--   model. If no <tt>eventType</tt> is provided, Amazon Personalize uses
--   all interactions for training with equal weight regardless of type.
--   
--   <a>$sel:name:Solution'</a>, <a>solution_name</a> - The name of the
--   solution.
--   
--   <a>$sel:autoMLResult:Solution'</a>, <a>solution_autoMLResult</a> -
--   When <tt>performAutoML</tt> is true, specifies the best recipe found.
--   
--   <a>$sel:creationDateTime:Solution'</a>,
--   <a>solution_creationDateTime</a> - The creation date and time (in Unix
--   time) of the solution.
--   
--   <a>$sel:datasetGroupArn:Solution'</a>, <a>solution_datasetGroupArn</a>
--   - The Amazon Resource Name (ARN) of the dataset group that provides
--   the training data.
--   
--   <a>$sel:latestSolutionVersion:Solution'</a>,
--   <a>solution_latestSolutionVersion</a> - Describes the latest version
--   of the solution, including the status and the ARN.
--   
--   <a>$sel:solutionConfig:Solution'</a>, <a>solution_solutionConfig</a> -
--   Describes the configuration properties for the solution.
--   
--   <a>$sel:performHPO:Solution'</a>, <a>solution_performHPO</a> - Whether
--   to perform hyperparameter optimization (HPO) on the chosen recipe. The
--   default is <tt>false</tt>.
newSolution :: Solution

-- | The ARN of the solution.
solution_solutionArn :: Lens' Solution (Maybe Text)

-- | The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
solution_status :: Lens' Solution (Maybe Text)

-- | When true, Amazon Personalize performs a search for the best
--   USER_PERSONALIZATION recipe from the list specified in the solution
--   configuration (<tt>recipeArn</tt> must not be specified). When false
--   (the default), Amazon Personalize uses <tt>recipeArn</tt> for
--   training.
solution_performAutoML :: Lens' Solution (Maybe Bool)

-- | The ARN of the recipe used to create the solution.
solution_recipeArn :: Lens' Solution (Maybe Text)

-- | The date and time (in Unix time) that the solution was last updated.
solution_lastUpdatedDateTime :: Lens' Solution (Maybe UTCTime)

-- | The event type (for example, 'click' or 'like') that is used for
--   training the model. If no <tt>eventType</tt> is provided, Amazon
--   Personalize uses all interactions for training with equal weight
--   regardless of type.
solution_eventType :: Lens' Solution (Maybe Text)

-- | The name of the solution.
solution_name :: Lens' Solution (Maybe Text)

-- | When <tt>performAutoML</tt> is true, specifies the best recipe found.
solution_autoMLResult :: Lens' Solution (Maybe AutoMLResult)

-- | The creation date and time (in Unix time) of the solution.
solution_creationDateTime :: Lens' Solution (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group that provides the
--   training data.
solution_datasetGroupArn :: Lens' Solution (Maybe Text)

-- | Describes the latest version of the solution, including the status and
--   the ARN.
solution_latestSolutionVersion :: Lens' Solution (Maybe SolutionVersionSummary)

-- | Describes the configuration properties for the solution.
solution_solutionConfig :: Lens' Solution (Maybe SolutionConfig)

-- | Whether to perform hyperparameter optimization (HPO) on the chosen
--   recipe. The default is <tt>false</tt>.
solution_performHPO :: Lens' Solution (Maybe Bool)
instance GHC.Generics.Generic Amazonka.Personalize.Types.Solution.Solution
instance GHC.Show.Show Amazonka.Personalize.Types.Solution.Solution
instance GHC.Read.Read Amazonka.Personalize.Types.Solution.Solution
instance GHC.Classes.Eq Amazonka.Personalize.Types.Solution.Solution
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.Solution.Solution
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.Solution.Solution
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.Solution.Solution


module Amazonka.Personalize.Types.TrainingMode
newtype TrainingMode
TrainingMode' :: Text -> TrainingMode
[fromTrainingMode] :: TrainingMode -> Text
pattern TrainingMode_FULL :: TrainingMode
pattern TrainingMode_UPDATE :: TrainingMode
instance Amazonka.Data.XML.ToXML Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Amazonka.Data.XML.FromXML Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Amazonka.Data.Headers.ToHeader Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Amazonka.Data.Log.ToLog Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Amazonka.Data.Text.ToText Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Amazonka.Data.Text.FromText Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance GHC.Generics.Generic Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance GHC.Classes.Ord Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance GHC.Classes.Eq Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance GHC.Read.Read Amazonka.Personalize.Types.TrainingMode.TrainingMode
instance GHC.Show.Show Amazonka.Personalize.Types.TrainingMode.TrainingMode


module Amazonka.Personalize.Types.TunedHPOParams

-- | If hyperparameter optimization (HPO) was performed, contains the
--   hyperparameter values of the best performing model.
--   
--   <i>See:</i> <a>newTunedHPOParams</a> smart constructor.
data TunedHPOParams
TunedHPOParams' :: Maybe (HashMap Text Text) -> TunedHPOParams

-- | A list of the hyperparameter values of the best performing model.
[$sel:algorithmHyperParameters:TunedHPOParams'] :: TunedHPOParams -> Maybe (HashMap Text Text)

-- | Create a value of <a>TunedHPOParams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithmHyperParameters:TunedHPOParams'</a>,
--   <a>tunedHPOParams_algorithmHyperParameters</a> - A list of the
--   hyperparameter values of the best performing model.
newTunedHPOParams :: TunedHPOParams

-- | A list of the hyperparameter values of the best performing model.
tunedHPOParams_algorithmHyperParameters :: Lens' TunedHPOParams (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.Personalize.Types.TunedHPOParams.TunedHPOParams
instance GHC.Show.Show Amazonka.Personalize.Types.TunedHPOParams.TunedHPOParams
instance GHC.Read.Read Amazonka.Personalize.Types.TunedHPOParams.TunedHPOParams
instance GHC.Classes.Eq Amazonka.Personalize.Types.TunedHPOParams.TunedHPOParams
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.TunedHPOParams.TunedHPOParams
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.TunedHPOParams.TunedHPOParams
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.TunedHPOParams.TunedHPOParams


module Amazonka.Personalize.Types.SolutionVersion

-- | An object that provides information about a specific version of a
--   Solution.
--   
--   <i>See:</i> <a>newSolutionVersion</a> smart constructor.
data SolutionVersion
SolutionVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe TunedHPOParams -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe TrainingMode -> Maybe Double -> Maybe SolutionConfig -> Maybe Bool -> Maybe Text -> SolutionVersion

-- | If training a solution version fails, the reason for the failure.
[$sel:failureReason:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | The ARN of the solution.
[$sel:solutionArn:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   <li>CREATE STOPPING</li>
--   <li>CREATE STOPPED</li>
--   </ul>
[$sel:status:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | When true, Amazon Personalize searches for the most optimal recipe
--   according to the solution configuration. When false (the default),
--   Amazon Personalize uses <tt>recipeArn</tt>.
[$sel:performAutoML:SolutionVersion'] :: SolutionVersion -> Maybe Bool

-- | If hyperparameter optimization was performed, contains the
--   hyperparameter values of the best performing model.
[$sel:tunedHPOParams:SolutionVersion'] :: SolutionVersion -> Maybe TunedHPOParams

-- | The ARN of the recipe used in the solution.
[$sel:recipeArn:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | The date and time (in Unix time) that the solution was last updated.
[$sel:lastUpdatedDateTime:SolutionVersion'] :: SolutionVersion -> Maybe POSIX

-- | The event type (for example, 'click' or 'like') that is used for
--   training the model.
[$sel:eventType:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | The date and time (in Unix time) that this version of the solution was
--   created.
[$sel:creationDateTime:SolutionVersion'] :: SolutionVersion -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset group providing the
--   training data.
[$sel:datasetGroupArn:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | The scope of training to be performed when creating the solution
--   version. The <tt>FULL</tt> option trains the solution version based on
--   the entirety of the input solution's training data, while the
--   <tt>UPDATE</tt> option processes only the data that has changed in
--   comparison to the input solution. Choose <tt>UPDATE</tt> when you want
--   to incrementally update your solution version instead of creating an
--   entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
[$sel:trainingMode:SolutionVersion'] :: SolutionVersion -> Maybe TrainingMode

-- | The time used to train the model. You are billed for the time it takes
--   to train a model. This field is visible only after Amazon Personalize
--   successfully trains a model.
[$sel:trainingHours:SolutionVersion'] :: SolutionVersion -> Maybe Double

-- | Describes the configuration properties for the solution.
[$sel:solutionConfig:SolutionVersion'] :: SolutionVersion -> Maybe SolutionConfig

-- | Whether to perform hyperparameter optimization (HPO) on the chosen
--   recipe. The default is <tt>false</tt>.
[$sel:performHPO:SolutionVersion'] :: SolutionVersion -> Maybe Bool

-- | The ARN of the solution version.
[$sel:solutionVersionArn:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | Create a value of <a>SolutionVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:SolutionVersion'</a>,
--   <a>solutionVersion_failureReason</a> - If training a solution version
--   fails, the reason for the failure.
--   
--   <a>$sel:solutionArn:SolutionVersion'</a>,
--   <a>solutionVersion_solutionArn</a> - The ARN of the solution.
--   
--   <a>$sel:status:SolutionVersion'</a>, <a>solutionVersion_status</a> -
--   The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   <li>CREATE STOPPING</li>
--   <li>CREATE STOPPED</li>
--   </ul>
--   
--   <a>$sel:performAutoML:SolutionVersion'</a>,
--   <a>solutionVersion_performAutoML</a> - When true, Amazon Personalize
--   searches for the most optimal recipe according to the solution
--   configuration. When false (the default), Amazon Personalize uses
--   <tt>recipeArn</tt>.
--   
--   <a>$sel:tunedHPOParams:SolutionVersion'</a>,
--   <a>solutionVersion_tunedHPOParams</a> - If hyperparameter optimization
--   was performed, contains the hyperparameter values of the best
--   performing model.
--   
--   <a>$sel:recipeArn:SolutionVersion'</a>,
--   <a>solutionVersion_recipeArn</a> - The ARN of the recipe used in the
--   solution.
--   
--   <a>$sel:lastUpdatedDateTime:SolutionVersion'</a>,
--   <a>solutionVersion_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the solution was last updated.
--   
--   <a>$sel:eventType:SolutionVersion'</a>,
--   <a>solutionVersion_eventType</a> - The event type (for example,
--   'click' or 'like') that is used for training the model.
--   
--   <a>$sel:creationDateTime:SolutionVersion'</a>,
--   <a>solutionVersion_creationDateTime</a> - The date and time (in Unix
--   time) that this version of the solution was created.
--   
--   <a>$sel:datasetGroupArn:SolutionVersion'</a>,
--   <a>solutionVersion_datasetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the dataset group providing the training data.
--   
--   <a>$sel:trainingMode:SolutionVersion'</a>,
--   <a>solutionVersion_trainingMode</a> - The scope of training to be
--   performed when creating the solution version. The <tt>FULL</tt> option
--   trains the solution version based on the entirety of the input
--   solution's training data, while the <tt>UPDATE</tt> option processes
--   only the data that has changed in comparison to the input solution.
--   Choose <tt>UPDATE</tt> when you want to incrementally update your
--   solution version instead of creating an entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
--   
--   <a>$sel:trainingHours:SolutionVersion'</a>,
--   <a>solutionVersion_trainingHours</a> - The time used to train the
--   model. You are billed for the time it takes to train a model. This
--   field is visible only after Amazon Personalize successfully trains a
--   model.
--   
--   <a>$sel:solutionConfig:SolutionVersion'</a>,
--   <a>solutionVersion_solutionConfig</a> - Describes the configuration
--   properties for the solution.
--   
--   <a>$sel:performHPO:SolutionVersion'</a>,
--   <a>solutionVersion_performHPO</a> - Whether to perform hyperparameter
--   optimization (HPO) on the chosen recipe. The default is
--   <tt>false</tt>.
--   
--   <a>$sel:solutionVersionArn:SolutionVersion'</a>,
--   <a>solutionVersion_solutionVersionArn</a> - The ARN of the solution
--   version.
newSolutionVersion :: SolutionVersion

-- | If training a solution version fails, the reason for the failure.
solutionVersion_failureReason :: Lens' SolutionVersion (Maybe Text)

-- | The ARN of the solution.
solutionVersion_solutionArn :: Lens' SolutionVersion (Maybe Text)

-- | The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   <li>CREATE STOPPING</li>
--   <li>CREATE STOPPED</li>
--   </ul>
solutionVersion_status :: Lens' SolutionVersion (Maybe Text)

-- | When true, Amazon Personalize searches for the most optimal recipe
--   according to the solution configuration. When false (the default),
--   Amazon Personalize uses <tt>recipeArn</tt>.
solutionVersion_performAutoML :: Lens' SolutionVersion (Maybe Bool)

-- | If hyperparameter optimization was performed, contains the
--   hyperparameter values of the best performing model.
solutionVersion_tunedHPOParams :: Lens' SolutionVersion (Maybe TunedHPOParams)

-- | The ARN of the recipe used in the solution.
solutionVersion_recipeArn :: Lens' SolutionVersion (Maybe Text)

-- | The date and time (in Unix time) that the solution was last updated.
solutionVersion_lastUpdatedDateTime :: Lens' SolutionVersion (Maybe UTCTime)

-- | The event type (for example, 'click' or 'like') that is used for
--   training the model.
solutionVersion_eventType :: Lens' SolutionVersion (Maybe Text)

-- | The date and time (in Unix time) that this version of the solution was
--   created.
solutionVersion_creationDateTime :: Lens' SolutionVersion (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group providing the
--   training data.
solutionVersion_datasetGroupArn :: Lens' SolutionVersion (Maybe Text)

-- | The scope of training to be performed when creating the solution
--   version. The <tt>FULL</tt> option trains the solution version based on
--   the entirety of the input solution's training data, while the
--   <tt>UPDATE</tt> option processes only the data that has changed in
--   comparison to the input solution. Choose <tt>UPDATE</tt> when you want
--   to incrementally update your solution version instead of creating an
--   entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
solutionVersion_trainingMode :: Lens' SolutionVersion (Maybe TrainingMode)

-- | The time used to train the model. You are billed for the time it takes
--   to train a model. This field is visible only after Amazon Personalize
--   successfully trains a model.
solutionVersion_trainingHours :: Lens' SolutionVersion (Maybe Double)

-- | Describes the configuration properties for the solution.
solutionVersion_solutionConfig :: Lens' SolutionVersion (Maybe SolutionConfig)

-- | Whether to perform hyperparameter optimization (HPO) on the chosen
--   recipe. The default is <tt>false</tt>.
solutionVersion_performHPO :: Lens' SolutionVersion (Maybe Bool)

-- | The ARN of the solution version.
solutionVersion_solutionVersionArn :: Lens' SolutionVersion (Maybe Text)
instance GHC.Generics.Generic Amazonka.Personalize.Types.SolutionVersion.SolutionVersion
instance GHC.Show.Show Amazonka.Personalize.Types.SolutionVersion.SolutionVersion
instance GHC.Read.Read Amazonka.Personalize.Types.SolutionVersion.SolutionVersion
instance GHC.Classes.Eq Amazonka.Personalize.Types.SolutionVersion.SolutionVersion
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Personalize.Types.SolutionVersion.SolutionVersion
instance Data.Hashable.Class.Hashable Amazonka.Personalize.Types.SolutionVersion.SolutionVersion
instance Control.DeepSeq.NFData Amazonka.Personalize.Types.SolutionVersion.SolutionVersion


module Amazonka.Personalize.Types

-- | API version <tt>2018-05-22</tt> of the Amazon Personalize SDK
--   configuration.
defaultService :: Service

-- | The specified resource already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The token is not valid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Provide a valid value for the field or parameter.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Could not find the specified resource.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The limit on the number of requests per second has been exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource is in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError
newtype IngestionMode
IngestionMode' :: Text -> IngestionMode
[fromIngestionMode] :: IngestionMode -> Text
pattern IngestionMode_ALL :: IngestionMode
pattern IngestionMode_BULK :: IngestionMode
pattern IngestionMode_PUT :: IngestionMode
newtype ObjectiveSensitivity
ObjectiveSensitivity' :: Text -> ObjectiveSensitivity
[fromObjectiveSensitivity] :: ObjectiveSensitivity -> Text
pattern ObjectiveSensitivity_HIGH :: ObjectiveSensitivity
pattern ObjectiveSensitivity_LOW :: ObjectiveSensitivity
pattern ObjectiveSensitivity_MEDIUM :: ObjectiveSensitivity
pattern ObjectiveSensitivity_OFF :: ObjectiveSensitivity
newtype RecipeProvider
RecipeProvider' :: Text -> RecipeProvider
[fromRecipeProvider] :: RecipeProvider -> Text
pattern RecipeProvider_SERVICE :: RecipeProvider
newtype TrainingMode
TrainingMode' :: Text -> TrainingMode
[fromTrainingMode] :: TrainingMode -> Text
pattern TrainingMode_FULL :: TrainingMode
pattern TrainingMode_UPDATE :: TrainingMode

-- | Describes a custom algorithm.
--   
--   <i>See:</i> <a>newAlgorithm</a> smart constructor.
data Algorithm
Algorithm' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe DefaultHyperParameterRanges -> Maybe AlgorithmImage -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe (HashMap Text Text) -> Maybe Text -> Algorithm

-- | Specifies the default hyperparameters.
[$sel:defaultHyperParameters:Algorithm'] :: Algorithm -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the algorithm.
[$sel:algorithmArn:Algorithm'] :: Algorithm -> Maybe Text

-- | The training input mode.
[$sel:trainingInputMode:Algorithm'] :: Algorithm -> Maybe Text

-- | Specifies the default hyperparameters, their ranges, and whether they
--   are tunable. A tunable hyperparameter can have its value determined
--   during hyperparameter optimization (HPO).
[$sel:defaultHyperParameterRanges:Algorithm'] :: Algorithm -> Maybe DefaultHyperParameterRanges

-- | The URI of the Docker container for the algorithm image.
[$sel:algorithmImage:Algorithm'] :: Algorithm -> Maybe AlgorithmImage

-- | The date and time (in Unix time) that the algorithm was last updated.
[$sel:lastUpdatedDateTime:Algorithm'] :: Algorithm -> Maybe POSIX

-- | The name of the algorithm.
[$sel:name:Algorithm'] :: Algorithm -> Maybe Text

-- | The date and time (in Unix time) that the algorithm was created.
[$sel:creationDateTime:Algorithm'] :: Algorithm -> Maybe POSIX

-- | Specifies the default maximum number of training jobs and parallel
--   training jobs.
[$sel:defaultResourceConfig:Algorithm'] :: Algorithm -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the role.
[$sel:roleArn:Algorithm'] :: Algorithm -> Maybe Text

-- | Create a value of <a>Algorithm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultHyperParameters:Algorithm'</a>,
--   <a>algorithm_defaultHyperParameters</a> - Specifies the default
--   hyperparameters.
--   
--   <a>$sel:algorithmArn:Algorithm'</a>, <a>algorithm_algorithmArn</a> -
--   The Amazon Resource Name (ARN) of the algorithm.
--   
--   <a>$sel:trainingInputMode:Algorithm'</a>,
--   <a>algorithm_trainingInputMode</a> - The training input mode.
--   
--   <a>$sel:defaultHyperParameterRanges:Algorithm'</a>,
--   <a>algorithm_defaultHyperParameterRanges</a> - Specifies the default
--   hyperparameters, their ranges, and whether they are tunable. A tunable
--   hyperparameter can have its value determined during hyperparameter
--   optimization (HPO).
--   
--   <a>$sel:algorithmImage:Algorithm'</a>, <a>algorithm_algorithmImage</a>
--   - The URI of the Docker container for the algorithm image.
--   
--   <a>$sel:lastUpdatedDateTime:Algorithm'</a>,
--   <a>algorithm_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the algorithm was last updated.
--   
--   <a>$sel:name:Algorithm'</a>, <a>algorithm_name</a> - The name of the
--   algorithm.
--   
--   <a>$sel:creationDateTime:Algorithm'</a>,
--   <a>algorithm_creationDateTime</a> - The date and time (in Unix time)
--   that the algorithm was created.
--   
--   <a>$sel:defaultResourceConfig:Algorithm'</a>,
--   <a>algorithm_defaultResourceConfig</a> - Specifies the default maximum
--   number of training jobs and parallel training jobs.
--   
--   <a>$sel:roleArn:Algorithm'</a>, <a>algorithm_roleArn</a> - The Amazon
--   Resource Name (ARN) of the role.
newAlgorithm :: Algorithm

-- | Specifies the default hyperparameters.
algorithm_defaultHyperParameters :: Lens' Algorithm (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the algorithm.
algorithm_algorithmArn :: Lens' Algorithm (Maybe Text)

-- | The training input mode.
algorithm_trainingInputMode :: Lens' Algorithm (Maybe Text)

-- | Specifies the default hyperparameters, their ranges, and whether they
--   are tunable. A tunable hyperparameter can have its value determined
--   during hyperparameter optimization (HPO).
algorithm_defaultHyperParameterRanges :: Lens' Algorithm (Maybe DefaultHyperParameterRanges)

-- | The URI of the Docker container for the algorithm image.
algorithm_algorithmImage :: Lens' Algorithm (Maybe AlgorithmImage)

-- | The date and time (in Unix time) that the algorithm was last updated.
algorithm_lastUpdatedDateTime :: Lens' Algorithm (Maybe UTCTime)

-- | The name of the algorithm.
algorithm_name :: Lens' Algorithm (Maybe Text)

-- | The date and time (in Unix time) that the algorithm was created.
algorithm_creationDateTime :: Lens' Algorithm (Maybe UTCTime)

-- | Specifies the default maximum number of training jobs and parallel
--   training jobs.
algorithm_defaultResourceConfig :: Lens' Algorithm (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the role.
algorithm_roleArn :: Lens' Algorithm (Maybe Text)

-- | Describes an algorithm image.
--   
--   <i>See:</i> <a>newAlgorithmImage</a> smart constructor.
data AlgorithmImage
AlgorithmImage' :: Maybe Text -> Text -> AlgorithmImage

-- | The name of the algorithm image.
[$sel:name:AlgorithmImage'] :: AlgorithmImage -> Maybe Text

-- | The URI of the Docker container for the algorithm image.
[$sel:dockerURI:AlgorithmImage'] :: AlgorithmImage -> Text

-- | Create a value of <a>AlgorithmImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AlgorithmImage'</a>, <a>algorithmImage_name</a> - The
--   name of the algorithm image.
--   
--   <a>$sel:dockerURI:AlgorithmImage'</a>, <a>algorithmImage_dockerURI</a>
--   - The URI of the Docker container for the algorithm image.
newAlgorithmImage :: Text -> AlgorithmImage

-- | The name of the algorithm image.
algorithmImage_name :: Lens' AlgorithmImage (Maybe Text)

-- | The URI of the Docker container for the algorithm image.
algorithmImage_dockerURI :: Lens' AlgorithmImage Text

-- | When the solution performs AutoML (<tt>performAutoML</tt> is true in
--   CreateSolution), Amazon Personalize determines which recipe, from the
--   specified list, optimizes the given metric. Amazon Personalize then
--   uses that recipe for the solution.
--   
--   <i>See:</i> <a>newAutoMLConfig</a> smart constructor.
data AutoMLConfig
AutoMLConfig' :: Maybe [Text] -> Maybe Text -> AutoMLConfig

-- | The list of candidate recipes.
[$sel:recipeList:AutoMLConfig'] :: AutoMLConfig -> Maybe [Text]

-- | The metric to optimize.
[$sel:metricName:AutoMLConfig'] :: AutoMLConfig -> Maybe Text

-- | Create a value of <a>AutoMLConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeList:AutoMLConfig'</a>, <a>autoMLConfig_recipeList</a> -
--   The list of candidate recipes.
--   
--   <a>$sel:metricName:AutoMLConfig'</a>, <a>autoMLConfig_metricName</a> -
--   The metric to optimize.
newAutoMLConfig :: AutoMLConfig

-- | The list of candidate recipes.
autoMLConfig_recipeList :: Lens' AutoMLConfig (Maybe [Text])

-- | The metric to optimize.
autoMLConfig_metricName :: Lens' AutoMLConfig (Maybe Text)

-- | When the solution performs AutoML (<tt>performAutoML</tt> is true in
--   CreateSolution), specifies the recipe that best optimized the
--   specified metric.
--   
--   <i>See:</i> <a>newAutoMLResult</a> smart constructor.
data AutoMLResult
AutoMLResult' :: Maybe Text -> AutoMLResult

-- | The Amazon Resource Name (ARN) of the best recipe.
[$sel:bestRecipeArn:AutoMLResult'] :: AutoMLResult -> Maybe Text

-- | Create a value of <a>AutoMLResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bestRecipeArn:AutoMLResult'</a>,
--   <a>autoMLResult_bestRecipeArn</a> - The Amazon Resource Name (ARN) of
--   the best recipe.
newAutoMLResult :: AutoMLResult

-- | The Amazon Resource Name (ARN) of the best recipe.
autoMLResult_bestRecipeArn :: Lens' AutoMLResult (Maybe Text)

-- | Contains information on a batch inference job.
--   
--   <i>See:</i> <a>newBatchInferenceJob</a> smart constructor.
data BatchInferenceJob
BatchInferenceJob' :: Maybe Text -> Maybe Text -> Maybe BatchInferenceJobOutput -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe BatchInferenceJobConfig -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe BatchInferenceJobInput -> BatchInferenceJob

-- | If the batch inference job failed, the reason for the failure.
[$sel:failureReason:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
[$sel:status:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The Amazon S3 bucket that contains the output data generated by the
--   batch inference job.
[$sel:jobOutput:BatchInferenceJob'] :: BatchInferenceJob -> Maybe BatchInferenceJobOutput

-- | The name of the batch inference job.
[$sel:jobName:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The time at which the batch inference job was last updated.
[$sel:lastUpdatedDateTime:BatchInferenceJob'] :: BatchInferenceJob -> Maybe POSIX

-- | The number of recommendations generated by the batch inference job.
--   This number includes the error messages generated for failed input
--   records.
[$sel:numResults:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Int

-- | A string to string map of the configuration details of a batch
--   inference job.
[$sel:batchInferenceJobConfig:BatchInferenceJob'] :: BatchInferenceJob -> Maybe BatchInferenceJobConfig

-- | The Amazon Resource Name (ARN) of the batch inference job.
[$sel:batchInferenceJobArn:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The ARN of the filter used on the batch inference job.
[$sel:filterArn:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The time at which the batch inference job was created.
[$sel:creationDateTime:BatchInferenceJob'] :: BatchInferenceJob -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the solution version from which the
--   batch inference job was created.
[$sel:solutionVersionArn:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The ARN of the Amazon Identity and Access Management (IAM) role that
--   requested the batch inference job.
[$sel:roleArn:BatchInferenceJob'] :: BatchInferenceJob -> Maybe Text

-- | The Amazon S3 path that leads to the input data used to generate the
--   batch inference job.
[$sel:jobInput:BatchInferenceJob'] :: BatchInferenceJob -> Maybe BatchInferenceJobInput

-- | Create a value of <a>BatchInferenceJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_failureReason</a> - If the batch inference job
--   failed, the reason for the failure.
--   
--   <a>$sel:status:BatchInferenceJob'</a>, <a>batchInferenceJob_status</a>
--   - The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
--   
--   <a>$sel:jobOutput:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_jobOutput</a> - The Amazon S3 bucket that
--   contains the output data generated by the batch inference job.
--   
--   <a>$sel:jobName:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_jobName</a> - The name of the batch inference
--   job.
--   
--   <a>$sel:lastUpdatedDateTime:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_lastUpdatedDateTime</a> - The time at which the
--   batch inference job was last updated.
--   
--   <a>$sel:numResults:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_numResults</a> - The number of recommendations
--   generated by the batch inference job. This number includes the error
--   messages generated for failed input records.
--   
--   <a>$sel:batchInferenceJobConfig:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_batchInferenceJobConfig</a> - A string to string
--   map of the configuration details of a batch inference job.
--   
--   <a>$sel:batchInferenceJobArn:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_batchInferenceJobArn</a> - The Amazon Resource
--   Name (ARN) of the batch inference job.
--   
--   <a>$sel:filterArn:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_filterArn</a> - The ARN of the filter used on the
--   batch inference job.
--   
--   <a>$sel:creationDateTime:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_creationDateTime</a> - The time at which the
--   batch inference job was created.
--   
--   <a>$sel:solutionVersionArn:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_solutionVersionArn</a> - The Amazon Resource Name
--   (ARN) of the solution version from which the batch inference job was
--   created.
--   
--   <a>$sel:roleArn:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_roleArn</a> - The ARN of the Amazon Identity and
--   Access Management (IAM) role that requested the batch inference job.
--   
--   <a>$sel:jobInput:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_jobInput</a> - The Amazon S3 path that leads to
--   the input data used to generate the batch inference job.
newBatchInferenceJob :: BatchInferenceJob

-- | If the batch inference job failed, the reason for the failure.
batchInferenceJob_failureReason :: Lens' BatchInferenceJob (Maybe Text)

-- | The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
batchInferenceJob_status :: Lens' BatchInferenceJob (Maybe Text)

-- | The Amazon S3 bucket that contains the output data generated by the
--   batch inference job.
batchInferenceJob_jobOutput :: Lens' BatchInferenceJob (Maybe BatchInferenceJobOutput)

-- | The name of the batch inference job.
batchInferenceJob_jobName :: Lens' BatchInferenceJob (Maybe Text)

-- | The time at which the batch inference job was last updated.
batchInferenceJob_lastUpdatedDateTime :: Lens' BatchInferenceJob (Maybe UTCTime)

-- | The number of recommendations generated by the batch inference job.
--   This number includes the error messages generated for failed input
--   records.
batchInferenceJob_numResults :: Lens' BatchInferenceJob (Maybe Int)

-- | A string to string map of the configuration details of a batch
--   inference job.
batchInferenceJob_batchInferenceJobConfig :: Lens' BatchInferenceJob (Maybe BatchInferenceJobConfig)

-- | The Amazon Resource Name (ARN) of the batch inference job.
batchInferenceJob_batchInferenceJobArn :: Lens' BatchInferenceJob (Maybe Text)

-- | The ARN of the filter used on the batch inference job.
batchInferenceJob_filterArn :: Lens' BatchInferenceJob (Maybe Text)

-- | The time at which the batch inference job was created.
batchInferenceJob_creationDateTime :: Lens' BatchInferenceJob (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the solution version from which the
--   batch inference job was created.
batchInferenceJob_solutionVersionArn :: Lens' BatchInferenceJob (Maybe Text)

-- | The ARN of the Amazon Identity and Access Management (IAM) role that
--   requested the batch inference job.
batchInferenceJob_roleArn :: Lens' BatchInferenceJob (Maybe Text)

-- | The Amazon S3 path that leads to the input data used to generate the
--   batch inference job.
batchInferenceJob_jobInput :: Lens' BatchInferenceJob (Maybe BatchInferenceJobInput)

-- | The configuration details of a batch inference job.
--   
--   <i>See:</i> <a>newBatchInferenceJobConfig</a> smart constructor.
data BatchInferenceJobConfig
BatchInferenceJobConfig' :: Maybe (HashMap Text Text) -> BatchInferenceJobConfig

-- | A string to string map specifying the exploration configuration
--   hyperparameters, including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. See <a>User-Personalization</a>.
[$sel:itemExplorationConfig:BatchInferenceJobConfig'] :: BatchInferenceJobConfig -> Maybe (HashMap Text Text)

-- | Create a value of <a>BatchInferenceJobConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:itemExplorationConfig:BatchInferenceJobConfig'</a>,
--   <a>batchInferenceJobConfig_itemExplorationConfig</a> - A string to
--   string map specifying the exploration configuration hyperparameters,
--   including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. See <a>User-Personalization</a>.
newBatchInferenceJobConfig :: BatchInferenceJobConfig

-- | A string to string map specifying the exploration configuration
--   hyperparameters, including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. See <a>User-Personalization</a>.
batchInferenceJobConfig_itemExplorationConfig :: Lens' BatchInferenceJobConfig (Maybe (HashMap Text Text))

-- | The input configuration of a batch inference job.
--   
--   <i>See:</i> <a>newBatchInferenceJobInput</a> smart constructor.
data BatchInferenceJobInput
BatchInferenceJobInput' :: S3DataConfig -> BatchInferenceJobInput

-- | The URI of the Amazon S3 location that contains your input data. The
--   Amazon S3 bucket must be in the same region as the API endpoint you
--   are calling.
[$sel:s3DataSource:BatchInferenceJobInput'] :: BatchInferenceJobInput -> S3DataConfig

-- | Create a value of <a>BatchInferenceJobInput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3DataSource:BatchInferenceJobInput'</a>,
--   <a>batchInferenceJobInput_s3DataSource</a> - The URI of the Amazon S3
--   location that contains your input data. The Amazon S3 bucket must be
--   in the same region as the API endpoint you are calling.
newBatchInferenceJobInput :: S3DataConfig -> BatchInferenceJobInput

-- | The URI of the Amazon S3 location that contains your input data. The
--   Amazon S3 bucket must be in the same region as the API endpoint you
--   are calling.
batchInferenceJobInput_s3DataSource :: Lens' BatchInferenceJobInput S3DataConfig

-- | The output configuration parameters of a batch inference job.
--   
--   <i>See:</i> <a>newBatchInferenceJobOutput</a> smart constructor.
data BatchInferenceJobOutput
BatchInferenceJobOutput' :: S3DataConfig -> BatchInferenceJobOutput

-- | Information on the Amazon S3 bucket in which the batch inference job's
--   output is stored.
[$sel:s3DataDestination:BatchInferenceJobOutput'] :: BatchInferenceJobOutput -> S3DataConfig

-- | Create a value of <a>BatchInferenceJobOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3DataDestination:BatchInferenceJobOutput'</a>,
--   <a>batchInferenceJobOutput_s3DataDestination</a> - Information on the
--   Amazon S3 bucket in which the batch inference job's output is stored.
newBatchInferenceJobOutput :: S3DataConfig -> BatchInferenceJobOutput

-- | Information on the Amazon S3 bucket in which the batch inference job's
--   output is stored.
batchInferenceJobOutput_s3DataDestination :: Lens' BatchInferenceJobOutput S3DataConfig

-- | A truncated version of the BatchInferenceJob datatype. The
--   ListBatchInferenceJobs operation returns a list of batch inference job
--   summaries.
--   
--   <i>See:</i> <a>newBatchInferenceJobSummary</a> smart constructor.
data BatchInferenceJobSummary
BatchInferenceJobSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> BatchInferenceJobSummary

-- | If the batch inference job failed, the reason for the failure.
[$sel:failureReason:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe Text

-- | The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
[$sel:status:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe Text

-- | The name of the batch inference job.
[$sel:jobName:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe Text

-- | The time at which the batch inference job was last updated.
[$sel:lastUpdatedDateTime:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the batch inference job.
[$sel:batchInferenceJobArn:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe Text

-- | The time at which the batch inference job was created.
[$sel:creationDateTime:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe POSIX

-- | The ARN of the solution version used by the batch inference job.
[$sel:solutionVersionArn:BatchInferenceJobSummary'] :: BatchInferenceJobSummary -> Maybe Text

-- | Create a value of <a>BatchInferenceJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_failureReason</a> - If the batch inference
--   job failed, the reason for the failure.
--   
--   <a>$sel:status:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_status</a> - The status of the batch
--   inference job. The status is one of the following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
--   
--   <a>$sel:jobName:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_jobName</a> - The name of the batch
--   inference job.
--   
--   <a>$sel:lastUpdatedDateTime:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_lastUpdatedDateTime</a> - The time at
--   which the batch inference job was last updated.
--   
--   <a>$sel:batchInferenceJobArn:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_batchInferenceJobArn</a> - The Amazon
--   Resource Name (ARN) of the batch inference job.
--   
--   <a>$sel:creationDateTime:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_creationDateTime</a> - The time at which
--   the batch inference job was created.
--   
--   <a>$sel:solutionVersionArn:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_solutionVersionArn</a> - The ARN of the
--   solution version used by the batch inference job.
newBatchInferenceJobSummary :: BatchInferenceJobSummary

-- | If the batch inference job failed, the reason for the failure.
batchInferenceJobSummary_failureReason :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
batchInferenceJobSummary_status :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | The name of the batch inference job.
batchInferenceJobSummary_jobName :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | The time at which the batch inference job was last updated.
batchInferenceJobSummary_lastUpdatedDateTime :: Lens' BatchInferenceJobSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the batch inference job.
batchInferenceJobSummary_batchInferenceJobArn :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | The time at which the batch inference job was created.
batchInferenceJobSummary_creationDateTime :: Lens' BatchInferenceJobSummary (Maybe UTCTime)

-- | The ARN of the solution version used by the batch inference job.
batchInferenceJobSummary_solutionVersionArn :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | Describes a deployed solution version, otherwise known as a campaign.
--   For more information on campaigns, see CreateCampaign.
--   
--   <i>See:</i> <a>newCampaign</a> smart constructor.
data Campaign
Campaign' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe CampaignConfig -> Maybe CampaignUpdateSummary -> Maybe Text -> Maybe Natural -> Maybe POSIX -> Maybe Text -> Maybe Text -> Campaign

-- | If a campaign fails, the reason behind the failure.
[$sel:failureReason:Campaign'] :: Campaign -> Maybe Text

-- | The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:Campaign'] :: Campaign -> Maybe Text

-- | The date and time (in Unix format) that the campaign was last updated.
[$sel:lastUpdatedDateTime:Campaign'] :: Campaign -> Maybe POSIX

-- | The configuration details of a campaign.
[$sel:campaignConfig:Campaign'] :: Campaign -> Maybe CampaignConfig
[$sel:latestCampaignUpdate:Campaign'] :: Campaign -> Maybe CampaignUpdateSummary

-- | The name of the campaign.
[$sel:name:Campaign'] :: Campaign -> Maybe Text

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second.
[$sel:minProvisionedTPS:Campaign'] :: Campaign -> Maybe Natural

-- | The date and time (in Unix format) that the campaign was created.
[$sel:creationDateTime:Campaign'] :: Campaign -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the campaign.
[$sel:campaignArn:Campaign'] :: Campaign -> Maybe Text

-- | The Amazon Resource Name (ARN) of a specific version of the solution.
[$sel:solutionVersionArn:Campaign'] :: Campaign -> Maybe Text

-- | Create a value of <a>Campaign</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:Campaign'</a>, <a>campaign_failureReason</a> -
--   If a campaign fails, the reason behind the failure.
--   
--   <a>$sel:status:Campaign'</a>, <a>campaign_status</a> - The status of
--   the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:Campaign'</a>,
--   <a>campaign_lastUpdatedDateTime</a> - The date and time (in Unix
--   format) that the campaign was last updated.
--   
--   <a>$sel:campaignConfig:Campaign'</a>, <a>campaign_campaignConfig</a> -
--   The configuration details of a campaign.
--   
--   <a>$sel:latestCampaignUpdate:Campaign'</a>,
--   <a>campaign_latestCampaignUpdate</a> - Undocumented member.
--   
--   <a>$sel:name:Campaign'</a>, <a>campaign_name</a> - The name of the
--   campaign.
--   
--   <a>$sel:minProvisionedTPS:Campaign'</a>,
--   <a>campaign_minProvisionedTPS</a> - Specifies the requested minimum
--   provisioned transactions (recommendations) per second.
--   
--   <a>$sel:creationDateTime:Campaign'</a>,
--   <a>campaign_creationDateTime</a> - The date and time (in Unix format)
--   that the campaign was created.
--   
--   <a>$sel:campaignArn:Campaign'</a>, <a>campaign_campaignArn</a> - The
--   Amazon Resource Name (ARN) of the campaign.
--   
--   <a>$sel:solutionVersionArn:Campaign'</a>,
--   <a>campaign_solutionVersionArn</a> - The Amazon Resource Name (ARN) of
--   a specific version of the solution.
newCampaign :: Campaign

-- | If a campaign fails, the reason behind the failure.
campaign_failureReason :: Lens' Campaign (Maybe Text)

-- | The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
campaign_status :: Lens' Campaign (Maybe Text)

-- | The date and time (in Unix format) that the campaign was last updated.
campaign_lastUpdatedDateTime :: Lens' Campaign (Maybe UTCTime)

-- | The configuration details of a campaign.
campaign_campaignConfig :: Lens' Campaign (Maybe CampaignConfig)

-- | Undocumented member.
campaign_latestCampaignUpdate :: Lens' Campaign (Maybe CampaignUpdateSummary)

-- | The name of the campaign.
campaign_name :: Lens' Campaign (Maybe Text)

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second.
campaign_minProvisionedTPS :: Lens' Campaign (Maybe Natural)

-- | The date and time (in Unix format) that the campaign was created.
campaign_creationDateTime :: Lens' Campaign (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the campaign.
campaign_campaignArn :: Lens' Campaign (Maybe Text)

-- | The Amazon Resource Name (ARN) of a specific version of the solution.
campaign_solutionVersionArn :: Lens' Campaign (Maybe Text)

-- | The configuration details of a campaign.
--   
--   <i>See:</i> <a>newCampaignConfig</a> smart constructor.
data CampaignConfig
CampaignConfig' :: Maybe (HashMap Text Text) -> CampaignConfig

-- | A string to string map specifying the exploration configuration
--   hyperparameters, including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. Provide <tt>itemExplorationConfig</tt> data only if your
--   solution uses the <a>User-Personalization</a> recipe.
[$sel:itemExplorationConfig:CampaignConfig'] :: CampaignConfig -> Maybe (HashMap Text Text)

-- | Create a value of <a>CampaignConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:itemExplorationConfig:CampaignConfig'</a>,
--   <a>campaignConfig_itemExplorationConfig</a> - A string to string map
--   specifying the exploration configuration hyperparameters, including
--   <tt>explorationWeight</tt> and <tt>explorationItemAgeCutOff</tt>, you
--   want to use to configure the amount of item exploration Amazon
--   Personalize uses when recommending items. Provide
--   <tt>itemExplorationConfig</tt> data only if your solution uses the
--   <a>User-Personalization</a> recipe.
newCampaignConfig :: CampaignConfig

-- | A string to string map specifying the exploration configuration
--   hyperparameters, including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. Provide <tt>itemExplorationConfig</tt> data only if your
--   solution uses the <a>User-Personalization</a> recipe.
campaignConfig_itemExplorationConfig :: Lens' CampaignConfig (Maybe (HashMap Text Text))

-- | Provides a summary of the properties of a campaign. For a complete
--   listing, call the DescribeCampaign API.
--   
--   <i>See:</i> <a>newCampaignSummary</a> smart constructor.
data CampaignSummary
CampaignSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> CampaignSummary

-- | If a campaign fails, the reason behind the failure.
[$sel:failureReason:CampaignSummary'] :: CampaignSummary -> Maybe Text

-- | The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:CampaignSummary'] :: CampaignSummary -> Maybe Text

-- | The date and time (in Unix time) that the campaign was last updated.
[$sel:lastUpdatedDateTime:CampaignSummary'] :: CampaignSummary -> Maybe POSIX

-- | The name of the campaign.
[$sel:name:CampaignSummary'] :: CampaignSummary -> Maybe Text

-- | The date and time (in Unix time) that the campaign was created.
[$sel:creationDateTime:CampaignSummary'] :: CampaignSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the campaign.
[$sel:campaignArn:CampaignSummary'] :: CampaignSummary -> Maybe Text

-- | Create a value of <a>CampaignSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:CampaignSummary'</a>,
--   <a>campaignSummary_failureReason</a> - If a campaign fails, the reason
--   behind the failure.
--   
--   <a>$sel:status:CampaignSummary'</a>, <a>campaignSummary_status</a> -
--   The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:CampaignSummary'</a>,
--   <a>campaignSummary_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the campaign was last updated.
--   
--   <a>$sel:name:CampaignSummary'</a>, <a>campaignSummary_name</a> - The
--   name of the campaign.
--   
--   <a>$sel:creationDateTime:CampaignSummary'</a>,
--   <a>campaignSummary_creationDateTime</a> - The date and time (in Unix
--   time) that the campaign was created.
--   
--   <a>$sel:campaignArn:CampaignSummary'</a>,
--   <a>campaignSummary_campaignArn</a> - The Amazon Resource Name (ARN) of
--   the campaign.
newCampaignSummary :: CampaignSummary

-- | If a campaign fails, the reason behind the failure.
campaignSummary_failureReason :: Lens' CampaignSummary (Maybe Text)

-- | The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
campaignSummary_status :: Lens' CampaignSummary (Maybe Text)

-- | The date and time (in Unix time) that the campaign was last updated.
campaignSummary_lastUpdatedDateTime :: Lens' CampaignSummary (Maybe UTCTime)

-- | The name of the campaign.
campaignSummary_name :: Lens' CampaignSummary (Maybe Text)

-- | The date and time (in Unix time) that the campaign was created.
campaignSummary_creationDateTime :: Lens' CampaignSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the campaign.
campaignSummary_campaignArn :: Lens' CampaignSummary (Maybe Text)

-- | Provides a summary of the properties of a campaign update. For a
--   complete listing, call the DescribeCampaign API.
--   
--   <i>See:</i> <a>newCampaignUpdateSummary</a> smart constructor.
data CampaignUpdateSummary
CampaignUpdateSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe CampaignConfig -> Maybe Natural -> Maybe POSIX -> Maybe Text -> CampaignUpdateSummary

-- | If a campaign update fails, the reason behind the failure.
[$sel:failureReason:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe Text

-- | The status of the campaign update.
--   
--   A campaign update can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe Text

-- | The date and time (in Unix time) that the campaign update was last
--   updated.
[$sel:lastUpdatedDateTime:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe POSIX
[$sel:campaignConfig:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe CampaignConfig

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second that Amazon Personalize will support.
[$sel:minProvisionedTPS:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe Natural

-- | The date and time (in Unix time) that the campaign update was created.
[$sel:creationDateTime:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the deployed solution version.
[$sel:solutionVersionArn:CampaignUpdateSummary'] :: CampaignUpdateSummary -> Maybe Text

-- | Create a value of <a>CampaignUpdateSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_failureReason</a> - If a campaign update
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_status</a> - The status of the campaign
--   update.
--   
--   A campaign update can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the campaign update was last updated.
--   
--   <a>$sel:campaignConfig:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_campaignConfig</a> - Undocumented member.
--   
--   <a>$sel:minProvisionedTPS:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_minProvisionedTPS</a> - Specifies the
--   requested minimum provisioned transactions (recommendations) per
--   second that Amazon Personalize will support.
--   
--   <a>$sel:creationDateTime:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_creationDateTime</a> - The date and time (in
--   Unix time) that the campaign update was created.
--   
--   <a>$sel:solutionVersionArn:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_solutionVersionArn</a> - The Amazon Resource
--   Name (ARN) of the deployed solution version.
newCampaignUpdateSummary :: CampaignUpdateSummary

-- | If a campaign update fails, the reason behind the failure.
campaignUpdateSummary_failureReason :: Lens' CampaignUpdateSummary (Maybe Text)

-- | The status of the campaign update.
--   
--   A campaign update can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
campaignUpdateSummary_status :: Lens' CampaignUpdateSummary (Maybe Text)

-- | The date and time (in Unix time) that the campaign update was last
--   updated.
campaignUpdateSummary_lastUpdatedDateTime :: Lens' CampaignUpdateSummary (Maybe UTCTime)

-- | Undocumented member.
campaignUpdateSummary_campaignConfig :: Lens' CampaignUpdateSummary (Maybe CampaignConfig)

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second that Amazon Personalize will support.
campaignUpdateSummary_minProvisionedTPS :: Lens' CampaignUpdateSummary (Maybe Natural)

-- | The date and time (in Unix time) that the campaign update was created.
campaignUpdateSummary_creationDateTime :: Lens' CampaignUpdateSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the deployed solution version.
campaignUpdateSummary_solutionVersionArn :: Lens' CampaignUpdateSummary (Maybe Text)

-- | Provides the name and range of a categorical hyperparameter.
--   
--   <i>See:</i> <a>newCategoricalHyperParameterRange</a> smart
--   constructor.
data CategoricalHyperParameterRange
CategoricalHyperParameterRange' :: Maybe [Text] -> Maybe Text -> CategoricalHyperParameterRange

-- | A list of the categories for the hyperparameter.
[$sel:values:CategoricalHyperParameterRange'] :: CategoricalHyperParameterRange -> Maybe [Text]

-- | The name of the hyperparameter.
[$sel:name:CategoricalHyperParameterRange'] :: CategoricalHyperParameterRange -> Maybe Text

-- | Create a value of <a>CategoricalHyperParameterRange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:CategoricalHyperParameterRange'</a>,
--   <a>categoricalHyperParameterRange_values</a> - A list of the
--   categories for the hyperparameter.
--   
--   <a>$sel:name:CategoricalHyperParameterRange'</a>,
--   <a>categoricalHyperParameterRange_name</a> - The name of the
--   hyperparameter.
newCategoricalHyperParameterRange :: CategoricalHyperParameterRange

-- | A list of the categories for the hyperparameter.
categoricalHyperParameterRange_values :: Lens' CategoricalHyperParameterRange (Maybe [Text])

-- | The name of the hyperparameter.
categoricalHyperParameterRange_name :: Lens' CategoricalHyperParameterRange (Maybe Text)

-- | Provides the name and range of a continuous hyperparameter.
--   
--   <i>See:</i> <a>newContinuousHyperParameterRange</a> smart constructor.
data ContinuousHyperParameterRange
ContinuousHyperParameterRange' :: Maybe Double -> Maybe Text -> Maybe Double -> ContinuousHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
[$sel:maxValue:ContinuousHyperParameterRange'] :: ContinuousHyperParameterRange -> Maybe Double

-- | The name of the hyperparameter.
[$sel:name:ContinuousHyperParameterRange'] :: ContinuousHyperParameterRange -> Maybe Text

-- | The minimum allowable value for the hyperparameter.
[$sel:minValue:ContinuousHyperParameterRange'] :: ContinuousHyperParameterRange -> Maybe Double

-- | Create a value of <a>ContinuousHyperParameterRange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:ContinuousHyperParameterRange'</a>,
--   <a>continuousHyperParameterRange_maxValue</a> - The maximum allowable
--   value for the hyperparameter.
--   
--   <a>$sel:name:ContinuousHyperParameterRange'</a>,
--   <a>continuousHyperParameterRange_name</a> - The name of the
--   hyperparameter.
--   
--   <a>$sel:minValue:ContinuousHyperParameterRange'</a>,
--   <a>continuousHyperParameterRange_minValue</a> - The minimum allowable
--   value for the hyperparameter.
newContinuousHyperParameterRange :: ContinuousHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
continuousHyperParameterRange_maxValue :: Lens' ContinuousHyperParameterRange (Maybe Double)

-- | The name of the hyperparameter.
continuousHyperParameterRange_name :: Lens' ContinuousHyperParameterRange (Maybe Text)

-- | The minimum allowable value for the hyperparameter.
continuousHyperParameterRange_minValue :: Lens' ContinuousHyperParameterRange (Maybe Double)

-- | Describes the data source that contains the data to upload to a
--   dataset.
--   
--   <i>See:</i> <a>newDataSource</a> smart constructor.
data DataSource
DataSource' :: Maybe Text -> DataSource

-- | The path to the Amazon S3 bucket where the data that you want to
--   upload to your dataset is stored. For example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
[$sel:dataLocation:DataSource'] :: DataSource -> Maybe Text

-- | Create a value of <a>DataSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLocation:DataSource'</a>, <a>dataSource_dataLocation</a> -
--   The path to the Amazon S3 bucket where the data that you want to
--   upload to your dataset is stored. For example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
newDataSource :: DataSource

-- | The path to the Amazon S3 bucket where the data that you want to
--   upload to your dataset is stored. For example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
dataSource_dataLocation :: Lens' DataSource (Maybe Text)

-- | Provides metadata for a dataset.
--   
--   <i>See:</i> <a>newDataset</a> smart constructor.
data Dataset
Dataset' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Dataset

-- | The status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:Dataset'] :: Dataset -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset that you want metadata
--   for.
[$sel:datasetArn:Dataset'] :: Dataset -> Maybe Text

-- | A time stamp that shows when the dataset was updated.
[$sel:lastUpdatedDateTime:Dataset'] :: Dataset -> Maybe POSIX

-- | The ARN of the associated schema.
[$sel:schemaArn:Dataset'] :: Dataset -> Maybe Text

-- | The name of the dataset.
[$sel:name:Dataset'] :: Dataset -> Maybe Text

-- | One of the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
[$sel:datasetType:Dataset'] :: Dataset -> Maybe Text

-- | The creation date and time (in Unix time) of the dataset.
[$sel:creationDateTime:Dataset'] :: Dataset -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset group.
[$sel:datasetGroupArn:Dataset'] :: Dataset -> Maybe Text

-- | Create a value of <a>Dataset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Dataset'</a>, <a>dataset_status</a> - The status of the
--   dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:datasetArn:Dataset'</a>, <a>dataset_datasetArn</a> - The
--   Amazon Resource Name (ARN) of the dataset that you want metadata for.
--   
--   <a>$sel:lastUpdatedDateTime:Dataset'</a>,
--   <a>dataset_lastUpdatedDateTime</a> - A time stamp that shows when the
--   dataset was updated.
--   
--   <a>$sel:schemaArn:Dataset'</a>, <a>dataset_schemaArn</a> - The ARN of
--   the associated schema.
--   
--   <a>$sel:name:Dataset'</a>, <a>dataset_name</a> - The name of the
--   dataset.
--   
--   <a>$sel:datasetType:Dataset'</a>, <a>dataset_datasetType</a> - One of
--   the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
--   
--   <a>$sel:creationDateTime:Dataset'</a>, <a>dataset_creationDateTime</a>
--   - The creation date and time (in Unix time) of the dataset.
--   
--   <a>$sel:datasetGroupArn:Dataset'</a>, <a>dataset_datasetGroupArn</a> -
--   The Amazon Resource Name (ARN) of the dataset group.
newDataset :: Dataset

-- | The status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
dataset_status :: Lens' Dataset (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset that you want metadata
--   for.
dataset_datasetArn :: Lens' Dataset (Maybe Text)

-- | A time stamp that shows when the dataset was updated.
dataset_lastUpdatedDateTime :: Lens' Dataset (Maybe UTCTime)

-- | The ARN of the associated schema.
dataset_schemaArn :: Lens' Dataset (Maybe Text)

-- | The name of the dataset.
dataset_name :: Lens' Dataset (Maybe Text)

-- | One of the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
dataset_datasetType :: Lens' Dataset (Maybe Text)

-- | The creation date and time (in Unix time) of the dataset.
dataset_creationDateTime :: Lens' Dataset (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group.
dataset_datasetGroupArn :: Lens' Dataset (Maybe Text)

-- | Describes a job that exports a dataset to an Amazon S3 bucket. For
--   more information, see CreateDatasetExportJob.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <i>See:</i> <a>newDatasetExportJob</a> smart constructor.
data DatasetExportJob
DatasetExportJob' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DatasetExportJobOutput -> Maybe Text -> Maybe POSIX -> Maybe IngestionMode -> Maybe POSIX -> Maybe Text -> DatasetExportJob

-- | If a dataset export job fails, provides the reason why.
[$sel:failureReason:DatasetExportJob'] :: DatasetExportJob -> Maybe Text

-- | The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
[$sel:status:DatasetExportJob'] :: DatasetExportJob -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset export job.
[$sel:datasetExportJobArn:DatasetExportJob'] :: DatasetExportJob -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset to export.
[$sel:datasetArn:DatasetExportJob'] :: DatasetExportJob -> Maybe Text

-- | The path to the Amazon S3 bucket where the job's output is stored. For
--   example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
[$sel:jobOutput:DatasetExportJob'] :: DatasetExportJob -> Maybe DatasetExportJobOutput

-- | The name of the export job.
[$sel:jobName:DatasetExportJob'] :: DatasetExportJob -> Maybe Text

-- | The date and time (in Unix time) the status of the dataset export job
--   was last updated.
[$sel:lastUpdatedDateTime:DatasetExportJob'] :: DatasetExportJob -> Maybe POSIX

-- | The data to export, based on how you imported the data. You can choose
--   to export <tt>BULK</tt> data that you imported using a dataset import
--   job, <tt>PUT</tt> data that you imported incrementally (using the
--   console, PutEvents, PutUsers and PutItems operations), or <tt>ALL</tt>
--   for both types. The default value is <tt>PUT</tt>.
[$sel:ingestionMode:DatasetExportJob'] :: DatasetExportJob -> Maybe IngestionMode

-- | The creation date and time (in Unix time) of the dataset export job.
[$sel:creationDateTime:DatasetExportJob'] :: DatasetExportJob -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the IAM service role that has
--   permissions to add data to your output Amazon S3 bucket.
[$sel:roleArn:DatasetExportJob'] :: DatasetExportJob -> Maybe Text

-- | Create a value of <a>DatasetExportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetExportJob'</a>,
--   <a>datasetExportJob_failureReason</a> - If a dataset export job fails,
--   provides the reason why.
--   
--   <a>$sel:status:DatasetExportJob'</a>, <a>datasetExportJob_status</a> -
--   The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:datasetExportJobArn:DatasetExportJob'</a>,
--   <a>datasetExportJob_datasetExportJobArn</a> - The Amazon Resource Name
--   (ARN) of the dataset export job.
--   
--   <a>$sel:datasetArn:DatasetExportJob'</a>,
--   <a>datasetExportJob_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the dataset to export.
--   
--   <a>$sel:jobOutput:DatasetExportJob'</a>,
--   <a>datasetExportJob_jobOutput</a> - The path to the Amazon S3 bucket
--   where the job's output is stored. For example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
--   
--   <a>$sel:jobName:DatasetExportJob'</a>, <a>datasetExportJob_jobName</a>
--   - The name of the export job.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetExportJob'</a>,
--   <a>datasetExportJob_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) the status of the dataset export job was last updated.
--   
--   <a>$sel:ingestionMode:DatasetExportJob'</a>,
--   <a>datasetExportJob_ingestionMode</a> - The data to export, based on
--   how you imported the data. You can choose to export <tt>BULK</tt> data
--   that you imported using a dataset import job, <tt>PUT</tt> data that
--   you imported incrementally (using the console, PutEvents, PutUsers and
--   PutItems operations), or <tt>ALL</tt> for both types. The default
--   value is <tt>PUT</tt>.
--   
--   <a>$sel:creationDateTime:DatasetExportJob'</a>,
--   <a>datasetExportJob_creationDateTime</a> - The creation date and time
--   (in Unix time) of the dataset export job.
--   
--   <a>$sel:roleArn:DatasetExportJob'</a>, <a>datasetExportJob_roleArn</a>
--   - The Amazon Resource Name (ARN) of the IAM service role that has
--   permissions to add data to your output Amazon S3 bucket.
newDatasetExportJob :: DatasetExportJob

-- | If a dataset export job fails, provides the reason why.
datasetExportJob_failureReason :: Lens' DatasetExportJob (Maybe Text)

-- | The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
datasetExportJob_status :: Lens' DatasetExportJob (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset export job.
datasetExportJob_datasetExportJobArn :: Lens' DatasetExportJob (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset to export.
datasetExportJob_datasetArn :: Lens' DatasetExportJob (Maybe Text)

-- | The path to the Amazon S3 bucket where the job's output is stored. For
--   example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
datasetExportJob_jobOutput :: Lens' DatasetExportJob (Maybe DatasetExportJobOutput)

-- | The name of the export job.
datasetExportJob_jobName :: Lens' DatasetExportJob (Maybe Text)

-- | The date and time (in Unix time) the status of the dataset export job
--   was last updated.
datasetExportJob_lastUpdatedDateTime :: Lens' DatasetExportJob (Maybe UTCTime)

-- | The data to export, based on how you imported the data. You can choose
--   to export <tt>BULK</tt> data that you imported using a dataset import
--   job, <tt>PUT</tt> data that you imported incrementally (using the
--   console, PutEvents, PutUsers and PutItems operations), or <tt>ALL</tt>
--   for both types. The default value is <tt>PUT</tt>.
datasetExportJob_ingestionMode :: Lens' DatasetExportJob (Maybe IngestionMode)

-- | The creation date and time (in Unix time) of the dataset export job.
datasetExportJob_creationDateTime :: Lens' DatasetExportJob (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the IAM service role that has
--   permissions to add data to your output Amazon S3 bucket.
datasetExportJob_roleArn :: Lens' DatasetExportJob (Maybe Text)

-- | The output configuration parameters of a dataset export job.
--   
--   <i>See:</i> <a>newDatasetExportJobOutput</a> smart constructor.
data DatasetExportJobOutput
DatasetExportJobOutput' :: S3DataConfig -> DatasetExportJobOutput
[$sel:s3DataDestination:DatasetExportJobOutput'] :: DatasetExportJobOutput -> S3DataConfig

-- | Create a value of <a>DatasetExportJobOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3DataDestination:DatasetExportJobOutput'</a>,
--   <a>datasetExportJobOutput_s3DataDestination</a> - Undocumented member.
newDatasetExportJobOutput :: S3DataConfig -> DatasetExportJobOutput

-- | Undocumented member.
datasetExportJobOutput_s3DataDestination :: Lens' DatasetExportJobOutput S3DataConfig

-- | Provides a summary of the properties of a dataset export job. For a
--   complete listing, call the DescribeDatasetExportJob API.
--   
--   <i>See:</i> <a>newDatasetExportJobSummary</a> smart constructor.
data DatasetExportJobSummary
DatasetExportJobSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> DatasetExportJobSummary

-- | If a dataset export job fails, the reason behind the failure.
[$sel:failureReason:DatasetExportJobSummary'] :: DatasetExportJobSummary -> Maybe Text

-- | The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
[$sel:status:DatasetExportJobSummary'] :: DatasetExportJobSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset export job.
[$sel:datasetExportJobArn:DatasetExportJobSummary'] :: DatasetExportJobSummary -> Maybe Text

-- | The name of the dataset export job.
[$sel:jobName:DatasetExportJobSummary'] :: DatasetExportJobSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset export job status
--   was last updated.
[$sel:lastUpdatedDateTime:DatasetExportJobSummary'] :: DatasetExportJobSummary -> Maybe POSIX

-- | The date and time (in Unix time) that the dataset export job was
--   created.
[$sel:creationDateTime:DatasetExportJobSummary'] :: DatasetExportJobSummary -> Maybe POSIX

-- | Create a value of <a>DatasetExportJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_failureReason</a> - If a dataset export job
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_status</a> - The status of the dataset
--   export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:datasetExportJobArn:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_datasetExportJobArn</a> - The Amazon
--   Resource Name (ARN) of the dataset export job.
--   
--   <a>$sel:jobName:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_jobName</a> - The name of the dataset
--   export job.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the dataset export job status was last updated.
--   
--   <a>$sel:creationDateTime:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_creationDateTime</a> - The date and time
--   (in Unix time) that the dataset export job was created.
newDatasetExportJobSummary :: DatasetExportJobSummary

-- | If a dataset export job fails, the reason behind the failure.
datasetExportJobSummary_failureReason :: Lens' DatasetExportJobSummary (Maybe Text)

-- | The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
datasetExportJobSummary_status :: Lens' DatasetExportJobSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset export job.
datasetExportJobSummary_datasetExportJobArn :: Lens' DatasetExportJobSummary (Maybe Text)

-- | The name of the dataset export job.
datasetExportJobSummary_jobName :: Lens' DatasetExportJobSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset export job status
--   was last updated.
datasetExportJobSummary_lastUpdatedDateTime :: Lens' DatasetExportJobSummary (Maybe UTCTime)

-- | The date and time (in Unix time) that the dataset export job was
--   created.
datasetExportJobSummary_creationDateTime :: Lens' DatasetExportJobSummary (Maybe UTCTime)

-- | A dataset group is a collection of related datasets (Interactions,
--   User, and Item). You create a dataset group by calling
--   CreateDatasetGroup. You then create a dataset and add it to a dataset
--   group by calling CreateDataset. The dataset group is used to create
--   and train a solution by calling CreateSolution. A dataset group can
--   contain only one of each type of dataset.
--   
--   You can specify an Key Management Service (KMS) key to encrypt the
--   datasets in the group.
--   
--   <i>See:</i> <a>newDatasetGroup</a> smart constructor.
data DatasetGroup
DatasetGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> DatasetGroup

-- | If creating a dataset group fails, provides the reason why.
[$sel:failureReason:DatasetGroup'] :: DatasetGroup -> Maybe Text

-- | The current status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
[$sel:status:DatasetGroup'] :: DatasetGroup -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   used to encrypt the datasets.
[$sel:kmsKeyArn:DatasetGroup'] :: DatasetGroup -> Maybe Text

-- | The last update date and time (in Unix time) of the dataset group.
[$sel:lastUpdatedDateTime:DatasetGroup'] :: DatasetGroup -> Maybe POSIX

-- | The name of the dataset group.
[$sel:name:DatasetGroup'] :: DatasetGroup -> Maybe Text

-- | The creation date and time (in Unix time) of the dataset group.
[$sel:creationDateTime:DatasetGroup'] :: DatasetGroup -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset group.
[$sel:datasetGroupArn:DatasetGroup'] :: DatasetGroup -> Maybe Text

-- | The ARN of the IAM role that has permissions to create the dataset
--   group.
[$sel:roleArn:DatasetGroup'] :: DatasetGroup -> Maybe Text

-- | Create a value of <a>DatasetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetGroup'</a>,
--   <a>datasetGroup_failureReason</a> - If creating a dataset group fails,
--   provides the reason why.
--   
--   <a>$sel:status:DatasetGroup'</a>, <a>datasetGroup_status</a> - The
--   current status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
--   
--   <a>$sel:kmsKeyArn:DatasetGroup'</a>, <a>datasetGroup_kmsKeyArn</a> -
--   The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   used to encrypt the datasets.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetGroup'</a>,
--   <a>datasetGroup_lastUpdatedDateTime</a> - The last update date and
--   time (in Unix time) of the dataset group.
--   
--   <a>$sel:name:DatasetGroup'</a>, <a>datasetGroup_name</a> - The name of
--   the dataset group.
--   
--   <a>$sel:creationDateTime:DatasetGroup'</a>,
--   <a>datasetGroup_creationDateTime</a> - The creation date and time (in
--   Unix time) of the dataset group.
--   
--   <a>$sel:datasetGroupArn:DatasetGroup'</a>,
--   <a>datasetGroup_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group.
--   
--   <a>$sel:roleArn:DatasetGroup'</a>, <a>datasetGroup_roleArn</a> - The
--   ARN of the IAM role that has permissions to create the dataset group.
newDatasetGroup :: DatasetGroup

-- | If creating a dataset group fails, provides the reason why.
datasetGroup_failureReason :: Lens' DatasetGroup (Maybe Text)

-- | The current status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
datasetGroup_status :: Lens' DatasetGroup (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   used to encrypt the datasets.
datasetGroup_kmsKeyArn :: Lens' DatasetGroup (Maybe Text)

-- | The last update date and time (in Unix time) of the dataset group.
datasetGroup_lastUpdatedDateTime :: Lens' DatasetGroup (Maybe UTCTime)

-- | The name of the dataset group.
datasetGroup_name :: Lens' DatasetGroup (Maybe Text)

-- | The creation date and time (in Unix time) of the dataset group.
datasetGroup_creationDateTime :: Lens' DatasetGroup (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group.
datasetGroup_datasetGroupArn :: Lens' DatasetGroup (Maybe Text)

-- | The ARN of the IAM role that has permissions to create the dataset
--   group.
datasetGroup_roleArn :: Lens' DatasetGroup (Maybe Text)

-- | Provides a summary of the properties of a dataset group. For a
--   complete listing, call the DescribeDatasetGroup API.
--   
--   <i>See:</i> <a>newDatasetGroupSummary</a> smart constructor.
data DatasetGroupSummary
DatasetGroupSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> DatasetGroupSummary

-- | If creating a dataset group fails, the reason behind the failure.
[$sel:failureReason:DatasetGroupSummary'] :: DatasetGroupSummary -> Maybe Text

-- | The status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
[$sel:status:DatasetGroupSummary'] :: DatasetGroupSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset group was last
--   updated.
[$sel:lastUpdatedDateTime:DatasetGroupSummary'] :: DatasetGroupSummary -> Maybe POSIX

-- | The name of the dataset group.
[$sel:name:DatasetGroupSummary'] :: DatasetGroupSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset group was created.
[$sel:creationDateTime:DatasetGroupSummary'] :: DatasetGroupSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset group.
[$sel:datasetGroupArn:DatasetGroupSummary'] :: DatasetGroupSummary -> Maybe Text

-- | Create a value of <a>DatasetGroupSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_failureReason</a> - If creating a dataset group
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_status</a> - The status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the dataset group was last updated.
--   
--   <a>$sel:name:DatasetGroupSummary'</a>, <a>datasetGroupSummary_name</a>
--   - The name of the dataset group.
--   
--   <a>$sel:creationDateTime:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_creationDateTime</a> - The date and time (in
--   Unix time) that the dataset group was created.
--   
--   <a>$sel:datasetGroupArn:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_datasetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the dataset group.
newDatasetGroupSummary :: DatasetGroupSummary

-- | If creating a dataset group fails, the reason behind the failure.
datasetGroupSummary_failureReason :: Lens' DatasetGroupSummary (Maybe Text)

-- | The status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
datasetGroupSummary_status :: Lens' DatasetGroupSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset group was last
--   updated.
datasetGroupSummary_lastUpdatedDateTime :: Lens' DatasetGroupSummary (Maybe UTCTime)

-- | The name of the dataset group.
datasetGroupSummary_name :: Lens' DatasetGroupSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset group was created.
datasetGroupSummary_creationDateTime :: Lens' DatasetGroupSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group.
datasetGroupSummary_datasetGroupArn :: Lens' DatasetGroupSummary (Maybe Text)

-- | Describes a job that imports training data from a data source (Amazon
--   S3 bucket) to an Amazon Personalize dataset. For more information, see
--   CreateDatasetImportJob.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <i>See:</i> <a>newDatasetImportJob</a> smart constructor.
data DatasetImportJob
DatasetImportJob' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe DataSource -> Maybe POSIX -> Maybe Text -> DatasetImportJob

-- | If a dataset import job fails, provides the reason why.
[$sel:failureReason:DatasetImportJob'] :: DatasetImportJob -> Maybe Text

-- | The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
[$sel:status:DatasetImportJob'] :: DatasetImportJob -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset that receives the
--   imported data.
[$sel:datasetArn:DatasetImportJob'] :: DatasetImportJob -> Maybe Text

-- | The name of the import job.
[$sel:jobName:DatasetImportJob'] :: DatasetImportJob -> Maybe Text

-- | The date and time (in Unix time) the dataset was last updated.
[$sel:lastUpdatedDateTime:DatasetImportJob'] :: DatasetImportJob -> Maybe POSIX

-- | The ARN of the dataset import job.
[$sel:datasetImportJobArn:DatasetImportJob'] :: DatasetImportJob -> Maybe Text

-- | The Amazon S3 bucket that contains the training data to import.
[$sel:dataSource:DatasetImportJob'] :: DatasetImportJob -> Maybe DataSource

-- | The creation date and time (in Unix time) of the dataset import job.
[$sel:creationDateTime:DatasetImportJob'] :: DatasetImportJob -> Maybe POSIX

-- | The ARN of the IAM role that has permissions to read from the Amazon
--   S3 data source.
[$sel:roleArn:DatasetImportJob'] :: DatasetImportJob -> Maybe Text

-- | Create a value of <a>DatasetImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetImportJob'</a>,
--   <a>datasetImportJob_failureReason</a> - If a dataset import job fails,
--   provides the reason why.
--   
--   <a>$sel:status:DatasetImportJob'</a>, <a>datasetImportJob_status</a> -
--   The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:datasetArn:DatasetImportJob'</a>,
--   <a>datasetImportJob_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the dataset that receives the imported data.
--   
--   <a>$sel:jobName:DatasetImportJob'</a>, <a>datasetImportJob_jobName</a>
--   - The name of the import job.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetImportJob'</a>,
--   <a>datasetImportJob_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) the dataset was last updated.
--   
--   <a>$sel:datasetImportJobArn:DatasetImportJob'</a>,
--   <a>datasetImportJob_datasetImportJobArn</a> - The ARN of the dataset
--   import job.
--   
--   <a>$sel:dataSource:DatasetImportJob'</a>,
--   <a>datasetImportJob_dataSource</a> - The Amazon S3 bucket that
--   contains the training data to import.
--   
--   <a>$sel:creationDateTime:DatasetImportJob'</a>,
--   <a>datasetImportJob_creationDateTime</a> - The creation date and time
--   (in Unix time) of the dataset import job.
--   
--   <a>$sel:roleArn:DatasetImportJob'</a>, <a>datasetImportJob_roleArn</a>
--   - The ARN of the IAM role that has permissions to read from the Amazon
--   S3 data source.
newDatasetImportJob :: DatasetImportJob

-- | If a dataset import job fails, provides the reason why.
datasetImportJob_failureReason :: Lens' DatasetImportJob (Maybe Text)

-- | The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
datasetImportJob_status :: Lens' DatasetImportJob (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset that receives the
--   imported data.
datasetImportJob_datasetArn :: Lens' DatasetImportJob (Maybe Text)

-- | The name of the import job.
datasetImportJob_jobName :: Lens' DatasetImportJob (Maybe Text)

-- | The date and time (in Unix time) the dataset was last updated.
datasetImportJob_lastUpdatedDateTime :: Lens' DatasetImportJob (Maybe UTCTime)

-- | The ARN of the dataset import job.
datasetImportJob_datasetImportJobArn :: Lens' DatasetImportJob (Maybe Text)

-- | The Amazon S3 bucket that contains the training data to import.
datasetImportJob_dataSource :: Lens' DatasetImportJob (Maybe DataSource)

-- | The creation date and time (in Unix time) of the dataset import job.
datasetImportJob_creationDateTime :: Lens' DatasetImportJob (Maybe UTCTime)

-- | The ARN of the IAM role that has permissions to read from the Amazon
--   S3 data source.
datasetImportJob_roleArn :: Lens' DatasetImportJob (Maybe Text)

-- | Provides a summary of the properties of a dataset import job. For a
--   complete listing, call the DescribeDatasetImportJob API.
--   
--   <i>See:</i> <a>newDatasetImportJobSummary</a> smart constructor.
data DatasetImportJobSummary
DatasetImportJobSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> DatasetImportJobSummary

-- | If a dataset import job fails, the reason behind the failure.
[$sel:failureReason:DatasetImportJobSummary'] :: DatasetImportJobSummary -> Maybe Text

-- | The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
[$sel:status:DatasetImportJobSummary'] :: DatasetImportJobSummary -> Maybe Text

-- | The name of the dataset import job.
[$sel:jobName:DatasetImportJobSummary'] :: DatasetImportJobSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset import job status
--   was last updated.
[$sel:lastUpdatedDateTime:DatasetImportJobSummary'] :: DatasetImportJobSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset import job.
[$sel:datasetImportJobArn:DatasetImportJobSummary'] :: DatasetImportJobSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset import job was
--   created.
[$sel:creationDateTime:DatasetImportJobSummary'] :: DatasetImportJobSummary -> Maybe POSIX

-- | Create a value of <a>DatasetImportJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_failureReason</a> - If a dataset import job
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_status</a> - The status of the dataset
--   import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:jobName:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_jobName</a> - The name of the dataset
--   import job.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the dataset import job status was last updated.
--   
--   <a>$sel:datasetImportJobArn:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_datasetImportJobArn</a> - The Amazon
--   Resource Name (ARN) of the dataset import job.
--   
--   <a>$sel:creationDateTime:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_creationDateTime</a> - The date and time
--   (in Unix time) that the dataset import job was created.
newDatasetImportJobSummary :: DatasetImportJobSummary

-- | If a dataset import job fails, the reason behind the failure.
datasetImportJobSummary_failureReason :: Lens' DatasetImportJobSummary (Maybe Text)

-- | The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
datasetImportJobSummary_status :: Lens' DatasetImportJobSummary (Maybe Text)

-- | The name of the dataset import job.
datasetImportJobSummary_jobName :: Lens' DatasetImportJobSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset import job status
--   was last updated.
datasetImportJobSummary_lastUpdatedDateTime :: Lens' DatasetImportJobSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset import job.
datasetImportJobSummary_datasetImportJobArn :: Lens' DatasetImportJobSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset import job was
--   created.
datasetImportJobSummary_creationDateTime :: Lens' DatasetImportJobSummary (Maybe UTCTime)

-- | Describes the schema for a dataset. For more information on schemas,
--   see CreateSchema.
--   
--   <i>See:</i> <a>newDatasetSchema</a> smart constructor.
data DatasetSchema
DatasetSchema' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> DatasetSchema

-- | The date and time (in Unix time) that the schema was last updated.
[$sel:lastUpdatedDateTime:DatasetSchema'] :: DatasetSchema -> Maybe POSIX

-- | The schema.
[$sel:schema:DatasetSchema'] :: DatasetSchema -> Maybe Text

-- | The Amazon Resource Name (ARN) of the schema.
[$sel:schemaArn:DatasetSchema'] :: DatasetSchema -> Maybe Text

-- | The name of the schema.
[$sel:name:DatasetSchema'] :: DatasetSchema -> Maybe Text

-- | The date and time (in Unix time) that the schema was created.
[$sel:creationDateTime:DatasetSchema'] :: DatasetSchema -> Maybe POSIX

-- | Create a value of <a>DatasetSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedDateTime:DatasetSchema'</a>,
--   <a>datasetSchema_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the schema was last updated.
--   
--   <a>$sel:schema:DatasetSchema'</a>, <a>datasetSchema_schema</a> - The
--   schema.
--   
--   <a>$sel:schemaArn:DatasetSchema'</a>, <a>datasetSchema_schemaArn</a> -
--   The Amazon Resource Name (ARN) of the schema.
--   
--   <a>$sel:name:DatasetSchema'</a>, <a>datasetSchema_name</a> - The name
--   of the schema.
--   
--   <a>$sel:creationDateTime:DatasetSchema'</a>,
--   <a>datasetSchema_creationDateTime</a> - The date and time (in Unix
--   time) that the schema was created.
newDatasetSchema :: DatasetSchema

-- | The date and time (in Unix time) that the schema was last updated.
datasetSchema_lastUpdatedDateTime :: Lens' DatasetSchema (Maybe UTCTime)

-- | The schema.
datasetSchema_schema :: Lens' DatasetSchema (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema.
datasetSchema_schemaArn :: Lens' DatasetSchema (Maybe Text)

-- | The name of the schema.
datasetSchema_name :: Lens' DatasetSchema (Maybe Text)

-- | The date and time (in Unix time) that the schema was created.
datasetSchema_creationDateTime :: Lens' DatasetSchema (Maybe UTCTime)

-- | Provides a summary of the properties of a dataset schema. For a
--   complete listing, call the DescribeSchema API.
--   
--   <i>See:</i> <a>newDatasetSchemaSummary</a> smart constructor.
data DatasetSchemaSummary
DatasetSchemaSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> DatasetSchemaSummary

-- | The date and time (in Unix time) that the schema was last updated.
[$sel:lastUpdatedDateTime:DatasetSchemaSummary'] :: DatasetSchemaSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the schema.
[$sel:schemaArn:DatasetSchemaSummary'] :: DatasetSchemaSummary -> Maybe Text

-- | The name of the schema.
[$sel:name:DatasetSchemaSummary'] :: DatasetSchemaSummary -> Maybe Text

-- | The date and time (in Unix time) that the schema was created.
[$sel:creationDateTime:DatasetSchemaSummary'] :: DatasetSchemaSummary -> Maybe POSIX

-- | Create a value of <a>DatasetSchemaSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedDateTime:DatasetSchemaSummary'</a>,
--   <a>datasetSchemaSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the schema was last updated.
--   
--   <a>$sel:schemaArn:DatasetSchemaSummary'</a>,
--   <a>datasetSchemaSummary_schemaArn</a> - The Amazon Resource Name (ARN)
--   of the schema.
--   
--   <a>$sel:name:DatasetSchemaSummary'</a>,
--   <a>datasetSchemaSummary_name</a> - The name of the schema.
--   
--   <a>$sel:creationDateTime:DatasetSchemaSummary'</a>,
--   <a>datasetSchemaSummary_creationDateTime</a> - The date and time (in
--   Unix time) that the schema was created.
newDatasetSchemaSummary :: DatasetSchemaSummary

-- | The date and time (in Unix time) that the schema was last updated.
datasetSchemaSummary_lastUpdatedDateTime :: Lens' DatasetSchemaSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the schema.
datasetSchemaSummary_schemaArn :: Lens' DatasetSchemaSummary (Maybe Text)

-- | The name of the schema.
datasetSchemaSummary_name :: Lens' DatasetSchemaSummary (Maybe Text)

-- | The date and time (in Unix time) that the schema was created.
datasetSchemaSummary_creationDateTime :: Lens' DatasetSchemaSummary (Maybe UTCTime)

-- | Provides a summary of the properties of a dataset. For a complete
--   listing, call the DescribeDataset API.
--   
--   <i>See:</i> <a>newDatasetSummary</a> smart constructor.
data DatasetSummary
DatasetSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> DatasetSummary

-- | The status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset.
[$sel:datasetArn:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset was last updated.
[$sel:lastUpdatedDateTime:DatasetSummary'] :: DatasetSummary -> Maybe POSIX

-- | The name of the dataset.
[$sel:name:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | The dataset type. One of the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   <li>Event-Interactions</li>
--   </ul>
[$sel:datasetType:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | The date and time (in Unix time) that the dataset was created.
[$sel:creationDateTime:DatasetSummary'] :: DatasetSummary -> Maybe POSIX

-- | Create a value of <a>DatasetSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DatasetSummary'</a>, <a>datasetSummary_status</a> - The
--   status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:datasetArn:DatasetSummary'</a>,
--   <a>datasetSummary_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the dataset.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetSummary'</a>,
--   <a>datasetSummary_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the dataset was last updated.
--   
--   <a>$sel:name:DatasetSummary'</a>, <a>datasetSummary_name</a> - The
--   name of the dataset.
--   
--   <a>$sel:datasetType:DatasetSummary'</a>,
--   <a>datasetSummary_datasetType</a> - The dataset type. One of the
--   following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   <li>Event-Interactions</li>
--   </ul>
--   
--   <a>$sel:creationDateTime:DatasetSummary'</a>,
--   <a>datasetSummary_creationDateTime</a> - The date and time (in Unix
--   time) that the dataset was created.
newDatasetSummary :: DatasetSummary

-- | The status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
datasetSummary_status :: Lens' DatasetSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset.
datasetSummary_datasetArn :: Lens' DatasetSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset was last updated.
datasetSummary_lastUpdatedDateTime :: Lens' DatasetSummary (Maybe UTCTime)

-- | The name of the dataset.
datasetSummary_name :: Lens' DatasetSummary (Maybe Text)

-- | The dataset type. One of the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   <li>Event-Interactions</li>
--   </ul>
datasetSummary_datasetType :: Lens' DatasetSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset was created.
datasetSummary_creationDateTime :: Lens' DatasetSummary (Maybe UTCTime)

-- | Provides the name and default range of a categorical hyperparameter
--   and whether the hyperparameter is tunable. A tunable hyperparameter
--   can have its value determined during hyperparameter optimization
--   (HPO).
--   
--   <i>See:</i> <a>newDefaultCategoricalHyperParameterRange</a> smart
--   constructor.
data DefaultCategoricalHyperParameterRange
DefaultCategoricalHyperParameterRange' :: Maybe Bool -> Maybe [Text] -> Maybe Text -> DefaultCategoricalHyperParameterRange

-- | Whether the hyperparameter is tunable.
[$sel:isTunable:DefaultCategoricalHyperParameterRange'] :: DefaultCategoricalHyperParameterRange -> Maybe Bool

-- | A list of the categories for the hyperparameter.
[$sel:values:DefaultCategoricalHyperParameterRange'] :: DefaultCategoricalHyperParameterRange -> Maybe [Text]

-- | The name of the hyperparameter.
[$sel:name:DefaultCategoricalHyperParameterRange'] :: DefaultCategoricalHyperParameterRange -> Maybe Text

-- | Create a value of <a>DefaultCategoricalHyperParameterRange</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isTunable:DefaultCategoricalHyperParameterRange'</a>,
--   <a>defaultCategoricalHyperParameterRange_isTunable</a> - Whether the
--   hyperparameter is tunable.
--   
--   <a>$sel:values:DefaultCategoricalHyperParameterRange'</a>,
--   <a>defaultCategoricalHyperParameterRange_values</a> - A list of the
--   categories for the hyperparameter.
--   
--   <a>$sel:name:DefaultCategoricalHyperParameterRange'</a>,
--   <a>defaultCategoricalHyperParameterRange_name</a> - The name of the
--   hyperparameter.
newDefaultCategoricalHyperParameterRange :: DefaultCategoricalHyperParameterRange

-- | Whether the hyperparameter is tunable.
defaultCategoricalHyperParameterRange_isTunable :: Lens' DefaultCategoricalHyperParameterRange (Maybe Bool)

-- | A list of the categories for the hyperparameter.
defaultCategoricalHyperParameterRange_values :: Lens' DefaultCategoricalHyperParameterRange (Maybe [Text])

-- | The name of the hyperparameter.
defaultCategoricalHyperParameterRange_name :: Lens' DefaultCategoricalHyperParameterRange (Maybe Text)

-- | Provides the name and default range of a continuous hyperparameter and
--   whether the hyperparameter is tunable. A tunable hyperparameter can
--   have its value determined during hyperparameter optimization (HPO).
--   
--   <i>See:</i> <a>newDefaultContinuousHyperParameterRange</a> smart
--   constructor.
data DefaultContinuousHyperParameterRange
DefaultContinuousHyperParameterRange' :: Maybe Double -> Maybe Bool -> Maybe Text -> Maybe Double -> DefaultContinuousHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
[$sel:maxValue:DefaultContinuousHyperParameterRange'] :: DefaultContinuousHyperParameterRange -> Maybe Double

-- | Whether the hyperparameter is tunable.
[$sel:isTunable:DefaultContinuousHyperParameterRange'] :: DefaultContinuousHyperParameterRange -> Maybe Bool

-- | The name of the hyperparameter.
[$sel:name:DefaultContinuousHyperParameterRange'] :: DefaultContinuousHyperParameterRange -> Maybe Text

-- | The minimum allowable value for the hyperparameter.
[$sel:minValue:DefaultContinuousHyperParameterRange'] :: DefaultContinuousHyperParameterRange -> Maybe Double

-- | Create a value of <a>DefaultContinuousHyperParameterRange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:DefaultContinuousHyperParameterRange'</a>,
--   <a>defaultContinuousHyperParameterRange_maxValue</a> - The maximum
--   allowable value for the hyperparameter.
--   
--   <a>$sel:isTunable:DefaultContinuousHyperParameterRange'</a>,
--   <a>defaultContinuousHyperParameterRange_isTunable</a> - Whether the
--   hyperparameter is tunable.
--   
--   <a>$sel:name:DefaultContinuousHyperParameterRange'</a>,
--   <a>defaultContinuousHyperParameterRange_name</a> - The name of the
--   hyperparameter.
--   
--   <a>$sel:minValue:DefaultContinuousHyperParameterRange'</a>,
--   <a>defaultContinuousHyperParameterRange_minValue</a> - The minimum
--   allowable value for the hyperparameter.
newDefaultContinuousHyperParameterRange :: DefaultContinuousHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
defaultContinuousHyperParameterRange_maxValue :: Lens' DefaultContinuousHyperParameterRange (Maybe Double)

-- | Whether the hyperparameter is tunable.
defaultContinuousHyperParameterRange_isTunable :: Lens' DefaultContinuousHyperParameterRange (Maybe Bool)

-- | The name of the hyperparameter.
defaultContinuousHyperParameterRange_name :: Lens' DefaultContinuousHyperParameterRange (Maybe Text)

-- | The minimum allowable value for the hyperparameter.
defaultContinuousHyperParameterRange_minValue :: Lens' DefaultContinuousHyperParameterRange (Maybe Double)

-- | Specifies the hyperparameters and their default ranges.
--   Hyperparameters can be categorical, continuous, or integer-valued.
--   
--   <i>See:</i> <a>newDefaultHyperParameterRanges</a> smart constructor.
data DefaultHyperParameterRanges
DefaultHyperParameterRanges' :: Maybe [DefaultIntegerHyperParameterRange] -> Maybe [DefaultCategoricalHyperParameterRange] -> Maybe [DefaultContinuousHyperParameterRange] -> DefaultHyperParameterRanges

-- | The integer-valued hyperparameters and their default ranges.
[$sel:integerHyperParameterRanges:DefaultHyperParameterRanges'] :: DefaultHyperParameterRanges -> Maybe [DefaultIntegerHyperParameterRange]

-- | The categorical hyperparameters and their default ranges.
[$sel:categoricalHyperParameterRanges:DefaultHyperParameterRanges'] :: DefaultHyperParameterRanges -> Maybe [DefaultCategoricalHyperParameterRange]

-- | The continuous hyperparameters and their default ranges.
[$sel:continuousHyperParameterRanges:DefaultHyperParameterRanges'] :: DefaultHyperParameterRanges -> Maybe [DefaultContinuousHyperParameterRange]

-- | Create a value of <a>DefaultHyperParameterRanges</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerHyperParameterRanges:DefaultHyperParameterRanges'</a>,
--   <a>defaultHyperParameterRanges_integerHyperParameterRanges</a> - The
--   integer-valued hyperparameters and their default ranges.
--   
--   
--   <a>$sel:categoricalHyperParameterRanges:DefaultHyperParameterRanges'</a>,
--   <a>defaultHyperParameterRanges_categoricalHyperParameterRanges</a> -
--   The categorical hyperparameters and their default ranges.
--   
--   
--   <a>$sel:continuousHyperParameterRanges:DefaultHyperParameterRanges'</a>,
--   <a>defaultHyperParameterRanges_continuousHyperParameterRanges</a> -
--   The continuous hyperparameters and their default ranges.
newDefaultHyperParameterRanges :: DefaultHyperParameterRanges

-- | The integer-valued hyperparameters and their default ranges.
defaultHyperParameterRanges_integerHyperParameterRanges :: Lens' DefaultHyperParameterRanges (Maybe [DefaultIntegerHyperParameterRange])

-- | The categorical hyperparameters and their default ranges.
defaultHyperParameterRanges_categoricalHyperParameterRanges :: Lens' DefaultHyperParameterRanges (Maybe [DefaultCategoricalHyperParameterRange])

-- | The continuous hyperparameters and their default ranges.
defaultHyperParameterRanges_continuousHyperParameterRanges :: Lens' DefaultHyperParameterRanges (Maybe [DefaultContinuousHyperParameterRange])

-- | Provides the name and default range of a integer-valued hyperparameter
--   and whether the hyperparameter is tunable. A tunable hyperparameter
--   can have its value determined during hyperparameter optimization
--   (HPO).
--   
--   <i>See:</i> <a>newDefaultIntegerHyperParameterRange</a> smart
--   constructor.
data DefaultIntegerHyperParameterRange
DefaultIntegerHyperParameterRange' :: Maybe Int -> Maybe Bool -> Maybe Text -> Maybe Int -> DefaultIntegerHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
[$sel:maxValue:DefaultIntegerHyperParameterRange'] :: DefaultIntegerHyperParameterRange -> Maybe Int

-- | Indicates whether the hyperparameter is tunable.
[$sel:isTunable:DefaultIntegerHyperParameterRange'] :: DefaultIntegerHyperParameterRange -> Maybe Bool

-- | The name of the hyperparameter.
[$sel:name:DefaultIntegerHyperParameterRange'] :: DefaultIntegerHyperParameterRange -> Maybe Text

-- | The minimum allowable value for the hyperparameter.
[$sel:minValue:DefaultIntegerHyperParameterRange'] :: DefaultIntegerHyperParameterRange -> Maybe Int

-- | Create a value of <a>DefaultIntegerHyperParameterRange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:DefaultIntegerHyperParameterRange'</a>,
--   <a>defaultIntegerHyperParameterRange_maxValue</a> - The maximum
--   allowable value for the hyperparameter.
--   
--   <a>$sel:isTunable:DefaultIntegerHyperParameterRange'</a>,
--   <a>defaultIntegerHyperParameterRange_isTunable</a> - Indicates whether
--   the hyperparameter is tunable.
--   
--   <a>$sel:name:DefaultIntegerHyperParameterRange'</a>,
--   <a>defaultIntegerHyperParameterRange_name</a> - The name of the
--   hyperparameter.
--   
--   <a>$sel:minValue:DefaultIntegerHyperParameterRange'</a>,
--   <a>defaultIntegerHyperParameterRange_minValue</a> - The minimum
--   allowable value for the hyperparameter.
newDefaultIntegerHyperParameterRange :: DefaultIntegerHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
defaultIntegerHyperParameterRange_maxValue :: Lens' DefaultIntegerHyperParameterRange (Maybe Int)

-- | Indicates whether the hyperparameter is tunable.
defaultIntegerHyperParameterRange_isTunable :: Lens' DefaultIntegerHyperParameterRange (Maybe Bool)

-- | The name of the hyperparameter.
defaultIntegerHyperParameterRange_name :: Lens' DefaultIntegerHyperParameterRange (Maybe Text)

-- | The minimum allowable value for the hyperparameter.
defaultIntegerHyperParameterRange_minValue :: Lens' DefaultIntegerHyperParameterRange (Maybe Int)

-- | Provides information about an event tracker.
--   
--   <i>See:</i> <a>newEventTracker</a> smart constructor.
data EventTracker
EventTracker' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> EventTracker

-- | The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:EventTracker'] :: EventTracker -> Maybe Text

-- | The ID of the event tracker. Include this ID in requests to the
--   <a>PutEvents</a> API.
[$sel:trackingId:EventTracker'] :: EventTracker -> Maybe Text

-- | The date and time (in Unix time) that the event tracker was last
--   updated.
[$sel:lastUpdatedDateTime:EventTracker'] :: EventTracker -> Maybe POSIX

-- | The Amazon Web Services account that owns the event tracker.
[$sel:accountId:EventTracker'] :: EventTracker -> Maybe Text

-- | The name of the event tracker.
[$sel:name:EventTracker'] :: EventTracker -> Maybe Text

-- | The date and time (in Unix format) that the event tracker was created.
[$sel:creationDateTime:EventTracker'] :: EventTracker -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset group that receives the
--   event data.
[$sel:datasetGroupArn:EventTracker'] :: EventTracker -> Maybe Text

-- | The ARN of the event tracker.
[$sel:eventTrackerArn:EventTracker'] :: EventTracker -> Maybe Text

-- | Create a value of <a>EventTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:EventTracker'</a>, <a>eventTracker_status</a> - The
--   status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:trackingId:EventTracker'</a>, <a>eventTracker_trackingId</a> -
--   The ID of the event tracker. Include this ID in requests to the
--   <a>PutEvents</a> API.
--   
--   <a>$sel:lastUpdatedDateTime:EventTracker'</a>,
--   <a>eventTracker_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the event tracker was last updated.
--   
--   <a>$sel:accountId:EventTracker'</a>, <a>eventTracker_accountId</a> -
--   The Amazon Web Services account that owns the event tracker.
--   
--   <a>$sel:name:EventTracker'</a>, <a>eventTracker_name</a> - The name of
--   the event tracker.
--   
--   <a>$sel:creationDateTime:EventTracker'</a>,
--   <a>eventTracker_creationDateTime</a> - The date and time (in Unix
--   format) that the event tracker was created.
--   
--   <a>$sel:datasetGroupArn:EventTracker'</a>,
--   <a>eventTracker_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group that receives the event data.
--   
--   <a>$sel:eventTrackerArn:EventTracker'</a>,
--   <a>eventTracker_eventTrackerArn</a> - The ARN of the event tracker.
newEventTracker :: EventTracker

-- | The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
eventTracker_status :: Lens' EventTracker (Maybe Text)

-- | The ID of the event tracker. Include this ID in requests to the
--   <a>PutEvents</a> API.
eventTracker_trackingId :: Lens' EventTracker (Maybe Text)

-- | The date and time (in Unix time) that the event tracker was last
--   updated.
eventTracker_lastUpdatedDateTime :: Lens' EventTracker (Maybe UTCTime)

-- | The Amazon Web Services account that owns the event tracker.
eventTracker_accountId :: Lens' EventTracker (Maybe Text)

-- | The name of the event tracker.
eventTracker_name :: Lens' EventTracker (Maybe Text)

-- | The date and time (in Unix format) that the event tracker was created.
eventTracker_creationDateTime :: Lens' EventTracker (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group that receives the
--   event data.
eventTracker_datasetGroupArn :: Lens' EventTracker (Maybe Text)

-- | The ARN of the event tracker.
eventTracker_eventTrackerArn :: Lens' EventTracker (Maybe Text)

-- | Provides a summary of the properties of an event tracker. For a
--   complete listing, call the DescribeEventTracker API.
--   
--   <i>See:</i> <a>newEventTrackerSummary</a> smart constructor.
data EventTrackerSummary
EventTrackerSummary' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> EventTrackerSummary

-- | The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:EventTrackerSummary'] :: EventTrackerSummary -> Maybe Text

-- | The date and time (in Unix time) that the event tracker was last
--   updated.
[$sel:lastUpdatedDateTime:EventTrackerSummary'] :: EventTrackerSummary -> Maybe POSIX

-- | The name of the event tracker.
[$sel:name:EventTrackerSummary'] :: EventTrackerSummary -> Maybe Text

-- | The date and time (in Unix time) that the event tracker was created.
[$sel:creationDateTime:EventTrackerSummary'] :: EventTrackerSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the event tracker.
[$sel:eventTrackerArn:EventTrackerSummary'] :: EventTrackerSummary -> Maybe Text

-- | Create a value of <a>EventTrackerSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:EventTrackerSummary'</a>,
--   <a>eventTrackerSummary_status</a> - The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:EventTrackerSummary'</a>,
--   <a>eventTrackerSummary_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the event tracker was last updated.
--   
--   <a>$sel:name:EventTrackerSummary'</a>, <a>eventTrackerSummary_name</a>
--   - The name of the event tracker.
--   
--   <a>$sel:creationDateTime:EventTrackerSummary'</a>,
--   <a>eventTrackerSummary_creationDateTime</a> - The date and time (in
--   Unix time) that the event tracker was created.
--   
--   <a>$sel:eventTrackerArn:EventTrackerSummary'</a>,
--   <a>eventTrackerSummary_eventTrackerArn</a> - The Amazon Resource Name
--   (ARN) of the event tracker.
newEventTrackerSummary :: EventTrackerSummary

-- | The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
eventTrackerSummary_status :: Lens' EventTrackerSummary (Maybe Text)

-- | The date and time (in Unix time) that the event tracker was last
--   updated.
eventTrackerSummary_lastUpdatedDateTime :: Lens' EventTrackerSummary (Maybe UTCTime)

-- | The name of the event tracker.
eventTrackerSummary_name :: Lens' EventTrackerSummary (Maybe Text)

-- | The date and time (in Unix time) that the event tracker was created.
eventTrackerSummary_creationDateTime :: Lens' EventTrackerSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the event tracker.
eventTrackerSummary_eventTrackerArn :: Lens' EventTrackerSummary (Maybe Text)

-- | Provides feature transformation information. Feature transformation is
--   the process of modifying raw input data into a form more suitable for
--   model training.
--   
--   <i>See:</i> <a>newFeatureTransformation</a> smart constructor.
data FeatureTransformation
FeatureTransformation' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe (HashMap Text Text) -> FeatureTransformation

-- | The status of the feature transformation.
--   
--   A feature transformation can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
[$sel:status:FeatureTransformation'] :: FeatureTransformation -> Maybe Text

-- | The Amazon Resource Name (ARN) of the FeatureTransformation object.
[$sel:featureTransformationArn:FeatureTransformation'] :: FeatureTransformation -> Maybe Text

-- | The last update date and time (in Unix time) of the feature
--   transformation.
[$sel:lastUpdatedDateTime:FeatureTransformation'] :: FeatureTransformation -> Maybe POSIX

-- | The name of the feature transformation.
[$sel:name:FeatureTransformation'] :: FeatureTransformation -> Maybe Text

-- | The creation date and time (in Unix time) of the feature
--   transformation.
[$sel:creationDateTime:FeatureTransformation'] :: FeatureTransformation -> Maybe POSIX

-- | Provides the default parameters for feature transformation.
[$sel:defaultParameters:FeatureTransformation'] :: FeatureTransformation -> Maybe (HashMap Text Text)

-- | Create a value of <a>FeatureTransformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:FeatureTransformation'</a>,
--   <a>featureTransformation_status</a> - The status of the feature
--   transformation.
--   
--   A feature transformation can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:featureTransformationArn:FeatureTransformation'</a>,
--   <a>featureTransformation_featureTransformationArn</a> - The Amazon
--   Resource Name (ARN) of the FeatureTransformation object.
--   
--   <a>$sel:lastUpdatedDateTime:FeatureTransformation'</a>,
--   <a>featureTransformation_lastUpdatedDateTime</a> - The last update
--   date and time (in Unix time) of the feature transformation.
--   
--   <a>$sel:name:FeatureTransformation'</a>,
--   <a>featureTransformation_name</a> - The name of the feature
--   transformation.
--   
--   <a>$sel:creationDateTime:FeatureTransformation'</a>,
--   <a>featureTransformation_creationDateTime</a> - The creation date and
--   time (in Unix time) of the feature transformation.
--   
--   <a>$sel:defaultParameters:FeatureTransformation'</a>,
--   <a>featureTransformation_defaultParameters</a> - Provides the default
--   parameters for feature transformation.
newFeatureTransformation :: FeatureTransformation

-- | The status of the feature transformation.
--   
--   A feature transformation can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
featureTransformation_status :: Lens' FeatureTransformation (Maybe Text)

-- | The Amazon Resource Name (ARN) of the FeatureTransformation object.
featureTransformation_featureTransformationArn :: Lens' FeatureTransformation (Maybe Text)

-- | The last update date and time (in Unix time) of the feature
--   transformation.
featureTransformation_lastUpdatedDateTime :: Lens' FeatureTransformation (Maybe UTCTime)

-- | The name of the feature transformation.
featureTransformation_name :: Lens' FeatureTransformation (Maybe Text)

-- | The creation date and time (in Unix time) of the feature
--   transformation.
featureTransformation_creationDateTime :: Lens' FeatureTransformation (Maybe UTCTime)

-- | Provides the default parameters for feature transformation.
featureTransformation_defaultParameters :: Lens' FeatureTransformation (Maybe (HashMap Text Text))

-- | Contains information on a recommendation filter, including its ARN,
--   status, and filter expression.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Filter

-- | If the filter failed, the reason for its failure.
[$sel:failureReason:Filter'] :: Filter -> Maybe Text

-- | The status of the filter.
[$sel:status:Filter'] :: Filter -> Maybe Text

-- | Specifies the type of item interactions to filter out of
--   recommendation results. The filter expression must follow specific
--   format rules. For information about filter expression structure and
--   syntax, see filter-expressions.
[$sel:filterExpression:Filter'] :: Filter -> Maybe (Sensitive Text)

-- | The time at which the filter was last updated.
[$sel:lastUpdatedDateTime:Filter'] :: Filter -> Maybe POSIX

-- | The name of the filter.
[$sel:name:Filter'] :: Filter -> Maybe Text

-- | The ARN of the filter.
[$sel:filterArn:Filter'] :: Filter -> Maybe Text

-- | The time at which the filter was created.
[$sel:creationDateTime:Filter'] :: Filter -> Maybe POSIX

-- | The ARN of the dataset group to which the filter belongs.
[$sel:datasetGroupArn:Filter'] :: Filter -> Maybe Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:Filter'</a>, <a>filter_failureReason</a> - If
--   the filter failed, the reason for its failure.
--   
--   <a>$sel:status:Filter'</a>, <a>filter_status</a> - The status of the
--   filter.
--   
--   <a>$sel:filterExpression:Filter'</a>, <a>filter_filterExpression</a> -
--   Specifies the type of item interactions to filter out of
--   recommendation results. The filter expression must follow specific
--   format rules. For information about filter expression structure and
--   syntax, see filter-expressions.
--   
--   <a>$sel:lastUpdatedDateTime:Filter'</a>,
--   <a>filter_lastUpdatedDateTime</a> - The time at which the filter was
--   last updated.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
--   
--   <a>$sel:filterArn:Filter'</a>, <a>filter_filterArn</a> - The ARN of
--   the filter.
--   
--   <a>$sel:creationDateTime:Filter'</a>, <a>filter_creationDateTime</a> -
--   The time at which the filter was created.
--   
--   <a>$sel:datasetGroupArn:Filter'</a>, <a>filter_datasetGroupArn</a> -
--   The ARN of the dataset group to which the filter belongs.
newFilter :: Filter

-- | If the filter failed, the reason for its failure.
filter_failureReason :: Lens' Filter (Maybe Text)

-- | The status of the filter.
filter_status :: Lens' Filter (Maybe Text)

-- | Specifies the type of item interactions to filter out of
--   recommendation results. The filter expression must follow specific
--   format rules. For information about filter expression structure and
--   syntax, see filter-expressions.
filter_filterExpression :: Lens' Filter (Maybe Text)

-- | The time at which the filter was last updated.
filter_lastUpdatedDateTime :: Lens' Filter (Maybe UTCTime)

-- | The name of the filter.
filter_name :: Lens' Filter (Maybe Text)

-- | The ARN of the filter.
filter_filterArn :: Lens' Filter (Maybe Text)

-- | The time at which the filter was created.
filter_creationDateTime :: Lens' Filter (Maybe UTCTime)

-- | The ARN of the dataset group to which the filter belongs.
filter_datasetGroupArn :: Lens' Filter (Maybe Text)

-- | A short summary of a filter's attributes.
--   
--   <i>See:</i> <a>newFilterSummary</a> smart constructor.
data FilterSummary
FilterSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> FilterSummary

-- | If the filter failed, the reason for the failure.
[$sel:failureReason:FilterSummary'] :: FilterSummary -> Maybe Text

-- | The status of the filter.
[$sel:status:FilterSummary'] :: FilterSummary -> Maybe Text

-- | The time at which the filter was last updated.
[$sel:lastUpdatedDateTime:FilterSummary'] :: FilterSummary -> Maybe POSIX

-- | The name of the filter.
[$sel:name:FilterSummary'] :: FilterSummary -> Maybe Text

-- | The ARN of the filter.
[$sel:filterArn:FilterSummary'] :: FilterSummary -> Maybe Text

-- | The time at which the filter was created.
[$sel:creationDateTime:FilterSummary'] :: FilterSummary -> Maybe POSIX

-- | The ARN of the dataset group to which the filter belongs.
[$sel:datasetGroupArn:FilterSummary'] :: FilterSummary -> Maybe Text

-- | Create a value of <a>FilterSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:FilterSummary'</a>,
--   <a>filterSummary_failureReason</a> - If the filter failed, the reason
--   for the failure.
--   
--   <a>$sel:status:FilterSummary'</a>, <a>filterSummary_status</a> - The
--   status of the filter.
--   
--   <a>$sel:lastUpdatedDateTime:FilterSummary'</a>,
--   <a>filterSummary_lastUpdatedDateTime</a> - The time at which the
--   filter was last updated.
--   
--   <a>$sel:name:FilterSummary'</a>, <a>filterSummary_name</a> - The name
--   of the filter.
--   
--   <a>$sel:filterArn:FilterSummary'</a>, <a>filterSummary_filterArn</a> -
--   The ARN of the filter.
--   
--   <a>$sel:creationDateTime:FilterSummary'</a>,
--   <a>filterSummary_creationDateTime</a> - The time at which the filter
--   was created.
--   
--   <a>$sel:datasetGroupArn:FilterSummary'</a>,
--   <a>filterSummary_datasetGroupArn</a> - The ARN of the dataset group to
--   which the filter belongs.
newFilterSummary :: FilterSummary

-- | If the filter failed, the reason for the failure.
filterSummary_failureReason :: Lens' FilterSummary (Maybe Text)

-- | The status of the filter.
filterSummary_status :: Lens' FilterSummary (Maybe Text)

-- | The time at which the filter was last updated.
filterSummary_lastUpdatedDateTime :: Lens' FilterSummary (Maybe UTCTime)

-- | The name of the filter.
filterSummary_name :: Lens' FilterSummary (Maybe Text)

-- | The ARN of the filter.
filterSummary_filterArn :: Lens' FilterSummary (Maybe Text)

-- | The time at which the filter was created.
filterSummary_creationDateTime :: Lens' FilterSummary (Maybe UTCTime)

-- | The ARN of the dataset group to which the filter belongs.
filterSummary_datasetGroupArn :: Lens' FilterSummary (Maybe Text)

-- | Describes the properties for hyperparameter optimization (HPO).
--   
--   <i>See:</i> <a>newHPOConfig</a> smart constructor.
data HPOConfig
HPOConfig' :: Maybe HyperParameterRanges -> Maybe HPOResourceConfig -> Maybe HPOObjective -> HPOConfig

-- | The hyperparameters and their allowable ranges.
[$sel:algorithmHyperParameterRanges:HPOConfig'] :: HPOConfig -> Maybe HyperParameterRanges

-- | Describes the resource configuration for HPO.
[$sel:hpoResourceConfig:HPOConfig'] :: HPOConfig -> Maybe HPOResourceConfig

-- | The metric to optimize during HPO.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
[$sel:hpoObjective:HPOConfig'] :: HPOConfig -> Maybe HPOObjective

-- | Create a value of <a>HPOConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithmHyperParameterRanges:HPOConfig'</a>,
--   <a>hPOConfig_algorithmHyperParameterRanges</a> - The hyperparameters
--   and their allowable ranges.
--   
--   <a>$sel:hpoResourceConfig:HPOConfig'</a>,
--   <a>hPOConfig_hpoResourceConfig</a> - Describes the resource
--   configuration for HPO.
--   
--   <a>$sel:hpoObjective:HPOConfig'</a>, <a>hPOConfig_hpoObjective</a> -
--   The metric to optimize during HPO.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
newHPOConfig :: HPOConfig

-- | The hyperparameters and their allowable ranges.
hPOConfig_algorithmHyperParameterRanges :: Lens' HPOConfig (Maybe HyperParameterRanges)

-- | Describes the resource configuration for HPO.
hPOConfig_hpoResourceConfig :: Lens' HPOConfig (Maybe HPOResourceConfig)

-- | The metric to optimize during HPO.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
hPOConfig_hpoObjective :: Lens' HPOConfig (Maybe HPOObjective)

-- | The metric to optimize during hyperparameter optimization (HPO).
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
--   
--   <i>See:</i> <a>newHPOObjective</a> smart constructor.
data HPOObjective
HPOObjective' :: Maybe Text -> Maybe Text -> Maybe Text -> HPOObjective

-- | The name of the metric.
[$sel:metricName:HPOObjective'] :: HPOObjective -> Maybe Text

-- | The type of the metric. Valid values are <tt>Maximize</tt> and
--   <tt>Minimize</tt>.
[$sel:type':HPOObjective'] :: HPOObjective -> Maybe Text

-- | A regular expression for finding the metric in the training job logs.
[$sel:metricRegex:HPOObjective'] :: HPOObjective -> Maybe Text

-- | Create a value of <a>HPOObjective</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricName:HPOObjective'</a>, <a>hPOObjective_metricName</a> -
--   The name of the metric.
--   
--   <a>$sel:type':HPOObjective'</a>, <a>hPOObjective_type</a> - The type
--   of the metric. Valid values are <tt>Maximize</tt> and
--   <tt>Minimize</tt>.
--   
--   <a>$sel:metricRegex:HPOObjective'</a>, <a>hPOObjective_metricRegex</a>
--   - A regular expression for finding the metric in the training job
--   logs.
newHPOObjective :: HPOObjective

-- | The name of the metric.
hPOObjective_metricName :: Lens' HPOObjective (Maybe Text)

-- | The type of the metric. Valid values are <tt>Maximize</tt> and
--   <tt>Minimize</tt>.
hPOObjective_type :: Lens' HPOObjective (Maybe Text)

-- | A regular expression for finding the metric in the training job logs.
hPOObjective_metricRegex :: Lens' HPOObjective (Maybe Text)

-- | Describes the resource configuration for hyperparameter optimization
--   (HPO).
--   
--   <i>See:</i> <a>newHPOResourceConfig</a> smart constructor.
data HPOResourceConfig
HPOResourceConfig' :: Maybe Text -> Maybe Text -> HPOResourceConfig

-- | The maximum number of training jobs when you create a solution
--   version. The maximum value for <tt>maxNumberOfTrainingJobs</tt> is
--   <tt>40</tt>.
[$sel:maxNumberOfTrainingJobs:HPOResourceConfig'] :: HPOResourceConfig -> Maybe Text

-- | The maximum number of parallel training jobs when you create a
--   solution version. The maximum value for
--   <tt>maxParallelTrainingJobs</tt> is <tt>10</tt>.
[$sel:maxParallelTrainingJobs:HPOResourceConfig'] :: HPOResourceConfig -> Maybe Text

-- | Create a value of <a>HPOResourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxNumberOfTrainingJobs:HPOResourceConfig'</a>,
--   <a>hPOResourceConfig_maxNumberOfTrainingJobs</a> - The maximum number
--   of training jobs when you create a solution version. The maximum value
--   for <tt>maxNumberOfTrainingJobs</tt> is <tt>40</tt>.
--   
--   <a>$sel:maxParallelTrainingJobs:HPOResourceConfig'</a>,
--   <a>hPOResourceConfig_maxParallelTrainingJobs</a> - The maximum number
--   of parallel training jobs when you create a solution version. The
--   maximum value for <tt>maxParallelTrainingJobs</tt> is <tt>10</tt>.
newHPOResourceConfig :: HPOResourceConfig

-- | The maximum number of training jobs when you create a solution
--   version. The maximum value for <tt>maxNumberOfTrainingJobs</tt> is
--   <tt>40</tt>.
hPOResourceConfig_maxNumberOfTrainingJobs :: Lens' HPOResourceConfig (Maybe Text)

-- | The maximum number of parallel training jobs when you create a
--   solution version. The maximum value for
--   <tt>maxParallelTrainingJobs</tt> is <tt>10</tt>.
hPOResourceConfig_maxParallelTrainingJobs :: Lens' HPOResourceConfig (Maybe Text)

-- | Specifies the hyperparameters and their ranges. Hyperparameters can be
--   categorical, continuous, or integer-valued.
--   
--   <i>See:</i> <a>newHyperParameterRanges</a> smart constructor.
data HyperParameterRanges
HyperParameterRanges' :: Maybe [IntegerHyperParameterRange] -> Maybe [CategoricalHyperParameterRange] -> Maybe [ContinuousHyperParameterRange] -> HyperParameterRanges

-- | The integer-valued hyperparameters and their ranges.
[$sel:integerHyperParameterRanges:HyperParameterRanges'] :: HyperParameterRanges -> Maybe [IntegerHyperParameterRange]

-- | The categorical hyperparameters and their ranges.
[$sel:categoricalHyperParameterRanges:HyperParameterRanges'] :: HyperParameterRanges -> Maybe [CategoricalHyperParameterRange]

-- | The continuous hyperparameters and their ranges.
[$sel:continuousHyperParameterRanges:HyperParameterRanges'] :: HyperParameterRanges -> Maybe [ContinuousHyperParameterRange]

-- | Create a value of <a>HyperParameterRanges</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerHyperParameterRanges:HyperParameterRanges'</a>,
--   <a>hyperParameterRanges_integerHyperParameterRanges</a> - The
--   integer-valued hyperparameters and their ranges.
--   
--   <a>$sel:categoricalHyperParameterRanges:HyperParameterRanges'</a>,
--   <a>hyperParameterRanges_categoricalHyperParameterRanges</a> - The
--   categorical hyperparameters and their ranges.
--   
--   <a>$sel:continuousHyperParameterRanges:HyperParameterRanges'</a>,
--   <a>hyperParameterRanges_continuousHyperParameterRanges</a> - The
--   continuous hyperparameters and their ranges.
newHyperParameterRanges :: HyperParameterRanges

-- | The integer-valued hyperparameters and their ranges.
hyperParameterRanges_integerHyperParameterRanges :: Lens' HyperParameterRanges (Maybe [IntegerHyperParameterRange])

-- | The categorical hyperparameters and their ranges.
hyperParameterRanges_categoricalHyperParameterRanges :: Lens' HyperParameterRanges (Maybe [CategoricalHyperParameterRange])

-- | The continuous hyperparameters and their ranges.
hyperParameterRanges_continuousHyperParameterRanges :: Lens' HyperParameterRanges (Maybe [ContinuousHyperParameterRange])

-- | Provides the name and range of an integer-valued hyperparameter.
--   
--   <i>See:</i> <a>newIntegerHyperParameterRange</a> smart constructor.
data IntegerHyperParameterRange
IntegerHyperParameterRange' :: Maybe Int -> Maybe Text -> Maybe Int -> IntegerHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
[$sel:maxValue:IntegerHyperParameterRange'] :: IntegerHyperParameterRange -> Maybe Int

-- | The name of the hyperparameter.
[$sel:name:IntegerHyperParameterRange'] :: IntegerHyperParameterRange -> Maybe Text

-- | The minimum allowable value for the hyperparameter.
[$sel:minValue:IntegerHyperParameterRange'] :: IntegerHyperParameterRange -> Maybe Int

-- | Create a value of <a>IntegerHyperParameterRange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:IntegerHyperParameterRange'</a>,
--   <a>integerHyperParameterRange_maxValue</a> - The maximum allowable
--   value for the hyperparameter.
--   
--   <a>$sel:name:IntegerHyperParameterRange'</a>,
--   <a>integerHyperParameterRange_name</a> - The name of the
--   hyperparameter.
--   
--   <a>$sel:minValue:IntegerHyperParameterRange'</a>,
--   <a>integerHyperParameterRange_minValue</a> - The minimum allowable
--   value for the hyperparameter.
newIntegerHyperParameterRange :: IntegerHyperParameterRange

-- | The maximum allowable value for the hyperparameter.
integerHyperParameterRange_maxValue :: Lens' IntegerHyperParameterRange (Maybe Int)

-- | The name of the hyperparameter.
integerHyperParameterRange_name :: Lens' IntegerHyperParameterRange (Maybe Text)

-- | The minimum allowable value for the hyperparameter.
integerHyperParameterRange_minValue :: Lens' IntegerHyperParameterRange (Maybe Int)

-- | Describes the additional objective for the solution, such as
--   maximizing streaming minutes or increasing revenue. For more
--   information see <a>Optimizing a solution</a>.
--   
--   <i>See:</i> <a>newOptimizationObjective</a> smart constructor.
data OptimizationObjective
OptimizationObjective' :: Maybe Text -> Maybe ObjectiveSensitivity -> OptimizationObjective

-- | The numerical metadata column in an Items dataset related to the
--   optimization objective. For example, VIDEO_LENGTH (to maximize
--   streaming minutes), or PRICE (to maximize revenue).
[$sel:itemAttribute:OptimizationObjective'] :: OptimizationObjective -> Maybe Text

-- | Specifies how Amazon Personalize balances the importance of your
--   optimization objective versus relevance.
[$sel:objectiveSensitivity:OptimizationObjective'] :: OptimizationObjective -> Maybe ObjectiveSensitivity

-- | Create a value of <a>OptimizationObjective</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:itemAttribute:OptimizationObjective'</a>,
--   <a>optimizationObjective_itemAttribute</a> - The numerical metadata
--   column in an Items dataset related to the optimization objective. For
--   example, VIDEO_LENGTH (to maximize streaming minutes), or PRICE (to
--   maximize revenue).
--   
--   <a>$sel:objectiveSensitivity:OptimizationObjective'</a>,
--   <a>optimizationObjective_objectiveSensitivity</a> - Specifies how
--   Amazon Personalize balances the importance of your optimization
--   objective versus relevance.
newOptimizationObjective :: OptimizationObjective

-- | The numerical metadata column in an Items dataset related to the
--   optimization objective. For example, VIDEO_LENGTH (to maximize
--   streaming minutes), or PRICE (to maximize revenue).
optimizationObjective_itemAttribute :: Lens' OptimizationObjective (Maybe Text)

-- | Specifies how Amazon Personalize balances the importance of your
--   optimization objective versus relevance.
optimizationObjective_objectiveSensitivity :: Lens' OptimizationObjective (Maybe ObjectiveSensitivity)

-- | Provides information about a recipe. Each recipe provides an algorithm
--   that Amazon Personalize uses in model training when you use the
--   CreateSolution operation.
--   
--   <i>See:</i> <a>newRecipe</a> smart constructor.
data Recipe
Recipe' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Recipe

-- | The status of the recipe.
[$sel:status:Recipe'] :: Recipe -> Maybe Text

-- | The Amazon Resource Name (ARN) of the algorithm that Amazon
--   Personalize uses to train the model.
[$sel:algorithmArn:Recipe'] :: Recipe -> Maybe Text

-- | The Amazon Resource Name (ARN) of the recipe.
[$sel:recipeArn:Recipe'] :: Recipe -> Maybe Text

-- | The ARN of the FeatureTransformation object.
[$sel:featureTransformationArn:Recipe'] :: Recipe -> Maybe Text

-- | The date and time (in Unix format) that the recipe was last updated.
[$sel:lastUpdatedDateTime:Recipe'] :: Recipe -> Maybe POSIX

-- | The name of the recipe.
[$sel:name:Recipe'] :: Recipe -> Maybe Text

-- | The date and time (in Unix format) that the recipe was created.
[$sel:creationDateTime:Recipe'] :: Recipe -> Maybe POSIX

-- | One of the following values:
--   
--   <ul>
--   <li>PERSONALIZED_RANKING</li>
--   <li>RELATED_ITEMS</li>
--   <li>USER_PERSONALIZATION</li>
--   </ul>
[$sel:recipeType:Recipe'] :: Recipe -> Maybe Text

-- | The description of the recipe.
[$sel:description:Recipe'] :: Recipe -> Maybe Text

-- | Create a value of <a>Recipe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Recipe'</a>, <a>recipe_status</a> - The status of the
--   recipe.
--   
--   <a>$sel:algorithmArn:Recipe'</a>, <a>recipe_algorithmArn</a> - The
--   Amazon Resource Name (ARN) of the algorithm that Amazon Personalize
--   uses to train the model.
--   
--   <a>$sel:recipeArn:Recipe'</a>, <a>recipe_recipeArn</a> - The Amazon
--   Resource Name (ARN) of the recipe.
--   
--   <a>$sel:featureTransformationArn:Recipe'</a>,
--   <a>recipe_featureTransformationArn</a> - The ARN of the
--   FeatureTransformation object.
--   
--   <a>$sel:lastUpdatedDateTime:Recipe'</a>,
--   <a>recipe_lastUpdatedDateTime</a> - The date and time (in Unix format)
--   that the recipe was last updated.
--   
--   <a>$sel:name:Recipe'</a>, <a>recipe_name</a> - The name of the recipe.
--   
--   <a>$sel:creationDateTime:Recipe'</a>, <a>recipe_creationDateTime</a> -
--   The date and time (in Unix format) that the recipe was created.
--   
--   <a>$sel:recipeType:Recipe'</a>, <a>recipe_recipeType</a> - One of the
--   following values:
--   
--   <ul>
--   <li>PERSONALIZED_RANKING</li>
--   <li>RELATED_ITEMS</li>
--   <li>USER_PERSONALIZATION</li>
--   </ul>
--   
--   <a>$sel:description:Recipe'</a>, <a>recipe_description</a> - The
--   description of the recipe.
newRecipe :: Recipe

-- | The status of the recipe.
recipe_status :: Lens' Recipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the algorithm that Amazon
--   Personalize uses to train the model.
recipe_algorithmArn :: Lens' Recipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the recipe.
recipe_recipeArn :: Lens' Recipe (Maybe Text)

-- | The ARN of the FeatureTransformation object.
recipe_featureTransformationArn :: Lens' Recipe (Maybe Text)

-- | The date and time (in Unix format) that the recipe was last updated.
recipe_lastUpdatedDateTime :: Lens' Recipe (Maybe UTCTime)

-- | The name of the recipe.
recipe_name :: Lens' Recipe (Maybe Text)

-- | The date and time (in Unix format) that the recipe was created.
recipe_creationDateTime :: Lens' Recipe (Maybe UTCTime)

-- | One of the following values:
--   
--   <ul>
--   <li>PERSONALIZED_RANKING</li>
--   <li>RELATED_ITEMS</li>
--   <li>USER_PERSONALIZATION</li>
--   </ul>
recipe_recipeType :: Lens' Recipe (Maybe Text)

-- | The description of the recipe.
recipe_description :: Lens' Recipe (Maybe Text)

-- | Provides a summary of the properties of a recipe. For a complete
--   listing, call the DescribeRecipe API.
--   
--   <i>See:</i> <a>newRecipeSummary</a> smart constructor.
data RecipeSummary
RecipeSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> RecipeSummary

-- | The status of the recipe.
[$sel:status:RecipeSummary'] :: RecipeSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the recipe.
[$sel:recipeArn:RecipeSummary'] :: RecipeSummary -> Maybe Text

-- | The date and time (in Unix time) that the recipe was last updated.
[$sel:lastUpdatedDateTime:RecipeSummary'] :: RecipeSummary -> Maybe POSIX

-- | The name of the recipe.
[$sel:name:RecipeSummary'] :: RecipeSummary -> Maybe Text

-- | The date and time (in Unix time) that the recipe was created.
[$sel:creationDateTime:RecipeSummary'] :: RecipeSummary -> Maybe POSIX

-- | Create a value of <a>RecipeSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RecipeSummary'</a>, <a>recipeSummary_status</a> - The
--   status of the recipe.
--   
--   <a>$sel:recipeArn:RecipeSummary'</a>, <a>recipeSummary_recipeArn</a> -
--   The Amazon Resource Name (ARN) of the recipe.
--   
--   <a>$sel:lastUpdatedDateTime:RecipeSummary'</a>,
--   <a>recipeSummary_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the recipe was last updated.
--   
--   <a>$sel:name:RecipeSummary'</a>, <a>recipeSummary_name</a> - The name
--   of the recipe.
--   
--   <a>$sel:creationDateTime:RecipeSummary'</a>,
--   <a>recipeSummary_creationDateTime</a> - The date and time (in Unix
--   time) that the recipe was created.
newRecipeSummary :: RecipeSummary

-- | The status of the recipe.
recipeSummary_status :: Lens' RecipeSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the recipe.
recipeSummary_recipeArn :: Lens' RecipeSummary (Maybe Text)

-- | The date and time (in Unix time) that the recipe was last updated.
recipeSummary_lastUpdatedDateTime :: Lens' RecipeSummary (Maybe UTCTime)

-- | The name of the recipe.
recipeSummary_name :: Lens' RecipeSummary (Maybe Text)

-- | The date and time (in Unix time) that the recipe was created.
recipeSummary_creationDateTime :: Lens' RecipeSummary (Maybe UTCTime)

-- | The configuration details of an Amazon S3 input or output bucket.
--   
--   <i>See:</i> <a>newS3DataConfig</a> smart constructor.
data S3DataConfig
S3DataConfig' :: Maybe Text -> Text -> S3DataConfig

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   that Amazon Personalize uses to encrypt or decrypt the input and
--   output files of a batch inference job.
[$sel:kmsKeyArn:S3DataConfig'] :: S3DataConfig -> Maybe Text

-- | The file path of the Amazon S3 bucket.
[$sel:path:S3DataConfig'] :: S3DataConfig -> Text

-- | Create a value of <a>S3DataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:S3DataConfig'</a>, <a>s3DataConfig_kmsKeyArn</a> -
--   The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   that Amazon Personalize uses to encrypt or decrypt the input and
--   output files of a batch inference job.
--   
--   <a>$sel:path:S3DataConfig'</a>, <a>s3DataConfig_path</a> - The file
--   path of the Amazon S3 bucket.
newS3DataConfig :: Text -> S3DataConfig

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   that Amazon Personalize uses to encrypt or decrypt the input and
--   output files of a batch inference job.
s3DataConfig_kmsKeyArn :: Lens' S3DataConfig (Maybe Text)

-- | The file path of the Amazon S3 bucket.
s3DataConfig_path :: Lens' S3DataConfig Text

-- | An object that provides information about a solution. A solution is a
--   trained model that can be deployed as a campaign.
--   
--   <i>See:</i> <a>newSolution</a> smart constructor.
data Solution
Solution' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe AutoMLResult -> Maybe POSIX -> Maybe Text -> Maybe SolutionVersionSummary -> Maybe SolutionConfig -> Maybe Bool -> Solution

-- | The ARN of the solution.
[$sel:solutionArn:Solution'] :: Solution -> Maybe Text

-- | The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:Solution'] :: Solution -> Maybe Text

-- | When true, Amazon Personalize performs a search for the best
--   USER_PERSONALIZATION recipe from the list specified in the solution
--   configuration (<tt>recipeArn</tt> must not be specified). When false
--   (the default), Amazon Personalize uses <tt>recipeArn</tt> for
--   training.
[$sel:performAutoML:Solution'] :: Solution -> Maybe Bool

-- | The ARN of the recipe used to create the solution.
[$sel:recipeArn:Solution'] :: Solution -> Maybe Text

-- | The date and time (in Unix time) that the solution was last updated.
[$sel:lastUpdatedDateTime:Solution'] :: Solution -> Maybe POSIX

-- | The event type (for example, 'click' or 'like') that is used for
--   training the model. If no <tt>eventType</tt> is provided, Amazon
--   Personalize uses all interactions for training with equal weight
--   regardless of type.
[$sel:eventType:Solution'] :: Solution -> Maybe Text

-- | The name of the solution.
[$sel:name:Solution'] :: Solution -> Maybe Text

-- | When <tt>performAutoML</tt> is true, specifies the best recipe found.
[$sel:autoMLResult:Solution'] :: Solution -> Maybe AutoMLResult

-- | The creation date and time (in Unix time) of the solution.
[$sel:creationDateTime:Solution'] :: Solution -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset group that provides the
--   training data.
[$sel:datasetGroupArn:Solution'] :: Solution -> Maybe Text

-- | Describes the latest version of the solution, including the status and
--   the ARN.
[$sel:latestSolutionVersion:Solution'] :: Solution -> Maybe SolutionVersionSummary

-- | Describes the configuration properties for the solution.
[$sel:solutionConfig:Solution'] :: Solution -> Maybe SolutionConfig

-- | Whether to perform hyperparameter optimization (HPO) on the chosen
--   recipe. The default is <tt>false</tt>.
[$sel:performHPO:Solution'] :: Solution -> Maybe Bool

-- | Create a value of <a>Solution</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:Solution'</a>, <a>solution_solutionArn</a> - The
--   ARN of the solution.
--   
--   <a>$sel:status:Solution'</a>, <a>solution_status</a> - The status of
--   the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:performAutoML:Solution'</a>, <a>solution_performAutoML</a> -
--   When true, Amazon Personalize performs a search for the best
--   USER_PERSONALIZATION recipe from the list specified in the solution
--   configuration (<tt>recipeArn</tt> must not be specified). When false
--   (the default), Amazon Personalize uses <tt>recipeArn</tt> for
--   training.
--   
--   <a>$sel:recipeArn:Solution'</a>, <a>solution_recipeArn</a> - The ARN
--   of the recipe used to create the solution.
--   
--   <a>$sel:lastUpdatedDateTime:Solution'</a>,
--   <a>solution_lastUpdatedDateTime</a> - The date and time (in Unix time)
--   that the solution was last updated.
--   
--   <a>$sel:eventType:Solution'</a>, <a>solution_eventType</a> - The event
--   type (for example, 'click' or 'like') that is used for training the
--   model. If no <tt>eventType</tt> is provided, Amazon Personalize uses
--   all interactions for training with equal weight regardless of type.
--   
--   <a>$sel:name:Solution'</a>, <a>solution_name</a> - The name of the
--   solution.
--   
--   <a>$sel:autoMLResult:Solution'</a>, <a>solution_autoMLResult</a> -
--   When <tt>performAutoML</tt> is true, specifies the best recipe found.
--   
--   <a>$sel:creationDateTime:Solution'</a>,
--   <a>solution_creationDateTime</a> - The creation date and time (in Unix
--   time) of the solution.
--   
--   <a>$sel:datasetGroupArn:Solution'</a>, <a>solution_datasetGroupArn</a>
--   - The Amazon Resource Name (ARN) of the dataset group that provides
--   the training data.
--   
--   <a>$sel:latestSolutionVersion:Solution'</a>,
--   <a>solution_latestSolutionVersion</a> - Describes the latest version
--   of the solution, including the status and the ARN.
--   
--   <a>$sel:solutionConfig:Solution'</a>, <a>solution_solutionConfig</a> -
--   Describes the configuration properties for the solution.
--   
--   <a>$sel:performHPO:Solution'</a>, <a>solution_performHPO</a> - Whether
--   to perform hyperparameter optimization (HPO) on the chosen recipe. The
--   default is <tt>false</tt>.
newSolution :: Solution

-- | The ARN of the solution.
solution_solutionArn :: Lens' Solution (Maybe Text)

-- | The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
solution_status :: Lens' Solution (Maybe Text)

-- | When true, Amazon Personalize performs a search for the best
--   USER_PERSONALIZATION recipe from the list specified in the solution
--   configuration (<tt>recipeArn</tt> must not be specified). When false
--   (the default), Amazon Personalize uses <tt>recipeArn</tt> for
--   training.
solution_performAutoML :: Lens' Solution (Maybe Bool)

-- | The ARN of the recipe used to create the solution.
solution_recipeArn :: Lens' Solution (Maybe Text)

-- | The date and time (in Unix time) that the solution was last updated.
solution_lastUpdatedDateTime :: Lens' Solution (Maybe UTCTime)

-- | The event type (for example, 'click' or 'like') that is used for
--   training the model. If no <tt>eventType</tt> is provided, Amazon
--   Personalize uses all interactions for training with equal weight
--   regardless of type.
solution_eventType :: Lens' Solution (Maybe Text)

-- | The name of the solution.
solution_name :: Lens' Solution (Maybe Text)

-- | When <tt>performAutoML</tt> is true, specifies the best recipe found.
solution_autoMLResult :: Lens' Solution (Maybe AutoMLResult)

-- | The creation date and time (in Unix time) of the solution.
solution_creationDateTime :: Lens' Solution (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group that provides the
--   training data.
solution_datasetGroupArn :: Lens' Solution (Maybe Text)

-- | Describes the latest version of the solution, including the status and
--   the ARN.
solution_latestSolutionVersion :: Lens' Solution (Maybe SolutionVersionSummary)

-- | Describes the configuration properties for the solution.
solution_solutionConfig :: Lens' Solution (Maybe SolutionConfig)

-- | Whether to perform hyperparameter optimization (HPO) on the chosen
--   recipe. The default is <tt>false</tt>.
solution_performHPO :: Lens' Solution (Maybe Bool)

-- | Describes the configuration properties for the solution.
--   
--   <i>See:</i> <a>newSolutionConfig</a> smart constructor.
data SolutionConfig
SolutionConfig' :: Maybe (HashMap Text Text) -> Maybe HPOConfig -> Maybe Text -> Maybe AutoMLConfig -> Maybe (HashMap Text Text) -> Maybe OptimizationObjective -> SolutionConfig

-- | Lists the feature transformation parameters.
[$sel:featureTransformationParameters:SolutionConfig'] :: SolutionConfig -> Maybe (HashMap Text Text)

-- | Describes the properties for hyperparameter optimization (HPO).
[$sel:hpoConfig:SolutionConfig'] :: SolutionConfig -> Maybe HPOConfig

-- | Only events with a value greater than or equal to this threshold are
--   used for training a model.
[$sel:eventValueThreshold:SolutionConfig'] :: SolutionConfig -> Maybe Text

-- | The AutoMLConfig object containing a list of recipes to search when
--   AutoML is performed.
[$sel:autoMLConfig:SolutionConfig'] :: SolutionConfig -> Maybe AutoMLConfig

-- | Lists the hyperparameter names and ranges.
[$sel:algorithmHyperParameters:SolutionConfig'] :: SolutionConfig -> Maybe (HashMap Text Text)

-- | Describes the additional objective for the solution, such as
--   maximizing streaming minutes or increasing revenue. For more
--   information see <a>Optimizing a solution</a>.
[$sel:optimizationObjective:SolutionConfig'] :: SolutionConfig -> Maybe OptimizationObjective

-- | Create a value of <a>SolutionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:featureTransformationParameters:SolutionConfig'</a>,
--   <a>solutionConfig_featureTransformationParameters</a> - Lists the
--   feature transformation parameters.
--   
--   <a>$sel:hpoConfig:SolutionConfig'</a>, <a>solutionConfig_hpoConfig</a>
--   - Describes the properties for hyperparameter optimization (HPO).
--   
--   <a>$sel:eventValueThreshold:SolutionConfig'</a>,
--   <a>solutionConfig_eventValueThreshold</a> - Only events with a value
--   greater than or equal to this threshold are used for training a model.
--   
--   <a>$sel:autoMLConfig:SolutionConfig'</a>,
--   <a>solutionConfig_autoMLConfig</a> - The AutoMLConfig object
--   containing a list of recipes to search when AutoML is performed.
--   
--   <a>$sel:algorithmHyperParameters:SolutionConfig'</a>,
--   <a>solutionConfig_algorithmHyperParameters</a> - Lists the
--   hyperparameter names and ranges.
--   
--   <a>$sel:optimizationObjective:SolutionConfig'</a>,
--   <a>solutionConfig_optimizationObjective</a> - Describes the additional
--   objective for the solution, such as maximizing streaming minutes or
--   increasing revenue. For more information see <a>Optimizing a
--   solution</a>.
newSolutionConfig :: SolutionConfig

-- | Lists the feature transformation parameters.
solutionConfig_featureTransformationParameters :: Lens' SolutionConfig (Maybe (HashMap Text Text))

-- | Describes the properties for hyperparameter optimization (HPO).
solutionConfig_hpoConfig :: Lens' SolutionConfig (Maybe HPOConfig)

-- | Only events with a value greater than or equal to this threshold are
--   used for training a model.
solutionConfig_eventValueThreshold :: Lens' SolutionConfig (Maybe Text)

-- | The AutoMLConfig object containing a list of recipes to search when
--   AutoML is performed.
solutionConfig_autoMLConfig :: Lens' SolutionConfig (Maybe AutoMLConfig)

-- | Lists the hyperparameter names and ranges.
solutionConfig_algorithmHyperParameters :: Lens' SolutionConfig (Maybe (HashMap Text Text))

-- | Describes the additional objective for the solution, such as
--   maximizing streaming minutes or increasing revenue. For more
--   information see <a>Optimizing a solution</a>.
solutionConfig_optimizationObjective :: Lens' SolutionConfig (Maybe OptimizationObjective)

-- | Provides a summary of the properties of a solution. For a complete
--   listing, call the DescribeSolution API.
--   
--   <i>See:</i> <a>newSolutionSummary</a> smart constructor.
data SolutionSummary
SolutionSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> SolutionSummary

-- | The Amazon Resource Name (ARN) of the solution.
[$sel:solutionArn:SolutionSummary'] :: SolutionSummary -> Maybe Text

-- | The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
[$sel:status:SolutionSummary'] :: SolutionSummary -> Maybe Text

-- | The date and time (in Unix time) that the solution was last updated.
[$sel:lastUpdatedDateTime:SolutionSummary'] :: SolutionSummary -> Maybe POSIX

-- | The name of the solution.
[$sel:name:SolutionSummary'] :: SolutionSummary -> Maybe Text

-- | The date and time (in Unix time) that the solution was created.
[$sel:creationDateTime:SolutionSummary'] :: SolutionSummary -> Maybe POSIX

-- | Create a value of <a>SolutionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:SolutionSummary'</a>,
--   <a>solutionSummary_solutionArn</a> - The Amazon Resource Name (ARN) of
--   the solution.
--   
--   <a>$sel:status:SolutionSummary'</a>, <a>solutionSummary_status</a> -
--   The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:SolutionSummary'</a>,
--   <a>solutionSummary_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the solution was last updated.
--   
--   <a>$sel:name:SolutionSummary'</a>, <a>solutionSummary_name</a> - The
--   name of the solution.
--   
--   <a>$sel:creationDateTime:SolutionSummary'</a>,
--   <a>solutionSummary_creationDateTime</a> - The date and time (in Unix
--   time) that the solution was created.
newSolutionSummary :: SolutionSummary

-- | The Amazon Resource Name (ARN) of the solution.
solutionSummary_solutionArn :: Lens' SolutionSummary (Maybe Text)

-- | The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
solutionSummary_status :: Lens' SolutionSummary (Maybe Text)

-- | The date and time (in Unix time) that the solution was last updated.
solutionSummary_lastUpdatedDateTime :: Lens' SolutionSummary (Maybe UTCTime)

-- | The name of the solution.
solutionSummary_name :: Lens' SolutionSummary (Maybe Text)

-- | The date and time (in Unix time) that the solution was created.
solutionSummary_creationDateTime :: Lens' SolutionSummary (Maybe UTCTime)

-- | An object that provides information about a specific version of a
--   Solution.
--   
--   <i>See:</i> <a>newSolutionVersion</a> smart constructor.
data SolutionVersion
SolutionVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe TunedHPOParams -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe TrainingMode -> Maybe Double -> Maybe SolutionConfig -> Maybe Bool -> Maybe Text -> SolutionVersion

-- | If training a solution version fails, the reason for the failure.
[$sel:failureReason:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | The ARN of the solution.
[$sel:solutionArn:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   <li>CREATE STOPPING</li>
--   <li>CREATE STOPPED</li>
--   </ul>
[$sel:status:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | When true, Amazon Personalize searches for the most optimal recipe
--   according to the solution configuration. When false (the default),
--   Amazon Personalize uses <tt>recipeArn</tt>.
[$sel:performAutoML:SolutionVersion'] :: SolutionVersion -> Maybe Bool

-- | If hyperparameter optimization was performed, contains the
--   hyperparameter values of the best performing model.
[$sel:tunedHPOParams:SolutionVersion'] :: SolutionVersion -> Maybe TunedHPOParams

-- | The ARN of the recipe used in the solution.
[$sel:recipeArn:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | The date and time (in Unix time) that the solution was last updated.
[$sel:lastUpdatedDateTime:SolutionVersion'] :: SolutionVersion -> Maybe POSIX

-- | The event type (for example, 'click' or 'like') that is used for
--   training the model.
[$sel:eventType:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | The date and time (in Unix time) that this version of the solution was
--   created.
[$sel:creationDateTime:SolutionVersion'] :: SolutionVersion -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the dataset group providing the
--   training data.
[$sel:datasetGroupArn:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | The scope of training to be performed when creating the solution
--   version. The <tt>FULL</tt> option trains the solution version based on
--   the entirety of the input solution's training data, while the
--   <tt>UPDATE</tt> option processes only the data that has changed in
--   comparison to the input solution. Choose <tt>UPDATE</tt> when you want
--   to incrementally update your solution version instead of creating an
--   entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
[$sel:trainingMode:SolutionVersion'] :: SolutionVersion -> Maybe TrainingMode

-- | The time used to train the model. You are billed for the time it takes
--   to train a model. This field is visible only after Amazon Personalize
--   successfully trains a model.
[$sel:trainingHours:SolutionVersion'] :: SolutionVersion -> Maybe Double

-- | Describes the configuration properties for the solution.
[$sel:solutionConfig:SolutionVersion'] :: SolutionVersion -> Maybe SolutionConfig

-- | Whether to perform hyperparameter optimization (HPO) on the chosen
--   recipe. The default is <tt>false</tt>.
[$sel:performHPO:SolutionVersion'] :: SolutionVersion -> Maybe Bool

-- | The ARN of the solution version.
[$sel:solutionVersionArn:SolutionVersion'] :: SolutionVersion -> Maybe Text

-- | Create a value of <a>SolutionVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:SolutionVersion'</a>,
--   <a>solutionVersion_failureReason</a> - If training a solution version
--   fails, the reason for the failure.
--   
--   <a>$sel:solutionArn:SolutionVersion'</a>,
--   <a>solutionVersion_solutionArn</a> - The ARN of the solution.
--   
--   <a>$sel:status:SolutionVersion'</a>, <a>solutionVersion_status</a> -
--   The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   <li>CREATE STOPPING</li>
--   <li>CREATE STOPPED</li>
--   </ul>
--   
--   <a>$sel:performAutoML:SolutionVersion'</a>,
--   <a>solutionVersion_performAutoML</a> - When true, Amazon Personalize
--   searches for the most optimal recipe according to the solution
--   configuration. When false (the default), Amazon Personalize uses
--   <tt>recipeArn</tt>.
--   
--   <a>$sel:tunedHPOParams:SolutionVersion'</a>,
--   <a>solutionVersion_tunedHPOParams</a> - If hyperparameter optimization
--   was performed, contains the hyperparameter values of the best
--   performing model.
--   
--   <a>$sel:recipeArn:SolutionVersion'</a>,
--   <a>solutionVersion_recipeArn</a> - The ARN of the recipe used in the
--   solution.
--   
--   <a>$sel:lastUpdatedDateTime:SolutionVersion'</a>,
--   <a>solutionVersion_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the solution was last updated.
--   
--   <a>$sel:eventType:SolutionVersion'</a>,
--   <a>solutionVersion_eventType</a> - The event type (for example,
--   'click' or 'like') that is used for training the model.
--   
--   <a>$sel:creationDateTime:SolutionVersion'</a>,
--   <a>solutionVersion_creationDateTime</a> - The date and time (in Unix
--   time) that this version of the solution was created.
--   
--   <a>$sel:datasetGroupArn:SolutionVersion'</a>,
--   <a>solutionVersion_datasetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the dataset group providing the training data.
--   
--   <a>$sel:trainingMode:SolutionVersion'</a>,
--   <a>solutionVersion_trainingMode</a> - The scope of training to be
--   performed when creating the solution version. The <tt>FULL</tt> option
--   trains the solution version based on the entirety of the input
--   solution's training data, while the <tt>UPDATE</tt> option processes
--   only the data that has changed in comparison to the input solution.
--   Choose <tt>UPDATE</tt> when you want to incrementally update your
--   solution version instead of creating an entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
--   
--   <a>$sel:trainingHours:SolutionVersion'</a>,
--   <a>solutionVersion_trainingHours</a> - The time used to train the
--   model. You are billed for the time it takes to train a model. This
--   field is visible only after Amazon Personalize successfully trains a
--   model.
--   
--   <a>$sel:solutionConfig:SolutionVersion'</a>,
--   <a>solutionVersion_solutionConfig</a> - Describes the configuration
--   properties for the solution.
--   
--   <a>$sel:performHPO:SolutionVersion'</a>,
--   <a>solutionVersion_performHPO</a> - Whether to perform hyperparameter
--   optimization (HPO) on the chosen recipe. The default is
--   <tt>false</tt>.
--   
--   <a>$sel:solutionVersionArn:SolutionVersion'</a>,
--   <a>solutionVersion_solutionVersionArn</a> - The ARN of the solution
--   version.
newSolutionVersion :: SolutionVersion

-- | If training a solution version fails, the reason for the failure.
solutionVersion_failureReason :: Lens' SolutionVersion (Maybe Text)

-- | The ARN of the solution.
solutionVersion_solutionArn :: Lens' SolutionVersion (Maybe Text)

-- | The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   <li>CREATE STOPPING</li>
--   <li>CREATE STOPPED</li>
--   </ul>
solutionVersion_status :: Lens' SolutionVersion (Maybe Text)

-- | When true, Amazon Personalize searches for the most optimal recipe
--   according to the solution configuration. When false (the default),
--   Amazon Personalize uses <tt>recipeArn</tt>.
solutionVersion_performAutoML :: Lens' SolutionVersion (Maybe Bool)

-- | If hyperparameter optimization was performed, contains the
--   hyperparameter values of the best performing model.
solutionVersion_tunedHPOParams :: Lens' SolutionVersion (Maybe TunedHPOParams)

-- | The ARN of the recipe used in the solution.
solutionVersion_recipeArn :: Lens' SolutionVersion (Maybe Text)

-- | The date and time (in Unix time) that the solution was last updated.
solutionVersion_lastUpdatedDateTime :: Lens' SolutionVersion (Maybe UTCTime)

-- | The event type (for example, 'click' or 'like') that is used for
--   training the model.
solutionVersion_eventType :: Lens' SolutionVersion (Maybe Text)

-- | The date and time (in Unix time) that this version of the solution was
--   created.
solutionVersion_creationDateTime :: Lens' SolutionVersion (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group providing the
--   training data.
solutionVersion_datasetGroupArn :: Lens' SolutionVersion (Maybe Text)

-- | The scope of training to be performed when creating the solution
--   version. The <tt>FULL</tt> option trains the solution version based on
--   the entirety of the input solution's training data, while the
--   <tt>UPDATE</tt> option processes only the data that has changed in
--   comparison to the input solution. Choose <tt>UPDATE</tt> when you want
--   to incrementally update your solution version instead of creating an
--   entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
solutionVersion_trainingMode :: Lens' SolutionVersion (Maybe TrainingMode)

-- | The time used to train the model. You are billed for the time it takes
--   to train a model. This field is visible only after Amazon Personalize
--   successfully trains a model.
solutionVersion_trainingHours :: Lens' SolutionVersion (Maybe Double)

-- | Describes the configuration properties for the solution.
solutionVersion_solutionConfig :: Lens' SolutionVersion (Maybe SolutionConfig)

-- | Whether to perform hyperparameter optimization (HPO) on the chosen
--   recipe. The default is <tt>false</tt>.
solutionVersion_performHPO :: Lens' SolutionVersion (Maybe Bool)

-- | The ARN of the solution version.
solutionVersion_solutionVersionArn :: Lens' SolutionVersion (Maybe Text)

-- | Provides a summary of the properties of a solution version. For a
--   complete listing, call the DescribeSolutionVersion API.
--   
--   <i>See:</i> <a>newSolutionVersionSummary</a> smart constructor.
data SolutionVersionSummary
SolutionVersionSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> SolutionVersionSummary

-- | If a solution version fails, the reason behind the failure.
[$sel:failureReason:SolutionVersionSummary'] :: SolutionVersionSummary -> Maybe Text

-- | The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
[$sel:status:SolutionVersionSummary'] :: SolutionVersionSummary -> Maybe Text

-- | The date and time (in Unix time) that the solution version was last
--   updated.
[$sel:lastUpdatedDateTime:SolutionVersionSummary'] :: SolutionVersionSummary -> Maybe POSIX

-- | The date and time (in Unix time) that this version of a solution was
--   created.
[$sel:creationDateTime:SolutionVersionSummary'] :: SolutionVersionSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the solution version.
[$sel:solutionVersionArn:SolutionVersionSummary'] :: SolutionVersionSummary -> Maybe Text

-- | Create a value of <a>SolutionVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_failureReason</a> - If a solution version
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_status</a> - The status of the solution
--   version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the solution version was last updated.
--   
--   <a>$sel:creationDateTime:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_creationDateTime</a> - The date and time (in
--   Unix time) that this version of a solution was created.
--   
--   <a>$sel:solutionVersionArn:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_solutionVersionArn</a> - The Amazon Resource
--   Name (ARN) of the solution version.
newSolutionVersionSummary :: SolutionVersionSummary

-- | If a solution version fails, the reason behind the failure.
solutionVersionSummary_failureReason :: Lens' SolutionVersionSummary (Maybe Text)

-- | The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
solutionVersionSummary_status :: Lens' SolutionVersionSummary (Maybe Text)

-- | The date and time (in Unix time) that the solution version was last
--   updated.
solutionVersionSummary_lastUpdatedDateTime :: Lens' SolutionVersionSummary (Maybe UTCTime)

-- | The date and time (in Unix time) that this version of a solution was
--   created.
solutionVersionSummary_creationDateTime :: Lens' SolutionVersionSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the solution version.
solutionVersionSummary_solutionVersionArn :: Lens' SolutionVersionSummary (Maybe Text)

-- | If hyperparameter optimization (HPO) was performed, contains the
--   hyperparameter values of the best performing model.
--   
--   <i>See:</i> <a>newTunedHPOParams</a> smart constructor.
data TunedHPOParams
TunedHPOParams' :: Maybe (HashMap Text Text) -> TunedHPOParams

-- | A list of the hyperparameter values of the best performing model.
[$sel:algorithmHyperParameters:TunedHPOParams'] :: TunedHPOParams -> Maybe (HashMap Text Text)

-- | Create a value of <a>TunedHPOParams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithmHyperParameters:TunedHPOParams'</a>,
--   <a>tunedHPOParams_algorithmHyperParameters</a> - A list of the
--   hyperparameter values of the best performing model.
newTunedHPOParams :: TunedHPOParams

-- | A list of the hyperparameter values of the best performing model.
tunedHPOParams_algorithmHyperParameters :: Lens' TunedHPOParams (Maybe (HashMap Text Text))


-- | Stops creating a solution version that is in a state of CREATE_PENDING
--   or CREATE IN_PROGRESS.
--   
--   Depending on the current state of the solution version, the solution
--   version state changes as follows:
--   
--   <ul>
--   <li>CREATE_PENDING &gt; CREATE_STOPPEDor</li>
--   <li>CREATE_IN_PROGRESS &gt; CREATE_STOPPING &gt; CREATE_STOPPED</li>
--   </ul>
--   
--   You are billed for all of the training completed up until you stop the
--   solution version creation. You cannot resume creating a solution
--   version once it has been stopped.
module Amazonka.Personalize.StopSolutionVersionCreation

-- | <i>See:</i> <a>newStopSolutionVersionCreation</a> smart constructor.
data StopSolutionVersionCreation
StopSolutionVersionCreation' :: Text -> StopSolutionVersionCreation

-- | The Amazon Resource Name (ARN) of the solution version you want to
--   stop creating.
[$sel:solutionVersionArn:StopSolutionVersionCreation'] :: StopSolutionVersionCreation -> Text

-- | Create a value of <a>StopSolutionVersionCreation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionVersionArn:StopSolutionVersionCreation'</a>,
--   <a>stopSolutionVersionCreation_solutionVersionArn</a> - The Amazon
--   Resource Name (ARN) of the solution version you want to stop creating.
newStopSolutionVersionCreation :: Text -> StopSolutionVersionCreation

-- | The Amazon Resource Name (ARN) of the solution version you want to
--   stop creating.
stopSolutionVersionCreation_solutionVersionArn :: Lens' StopSolutionVersionCreation Text

-- | <i>See:</i> <a>newStopSolutionVersionCreationResponse</a> smart
--   constructor.
data StopSolutionVersionCreationResponse
StopSolutionVersionCreationResponse' :: StopSolutionVersionCreationResponse

-- | Create a value of <a>StopSolutionVersionCreationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStopSolutionVersionCreationResponse :: StopSolutionVersionCreationResponse
instance GHC.Generics.Generic Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreation
instance GHC.Show.Show Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreation
instance GHC.Read.Read Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreation
instance GHC.Classes.Eq Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreation
instance GHC.Generics.Generic Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreationResponse
instance GHC.Show.Show Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreationResponse
instance GHC.Read.Read Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreationResponse
instance GHC.Classes.Eq Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreationResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreation
instance Control.DeepSeq.NFData Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreationResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreation
instance Control.DeepSeq.NFData Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreation
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreation
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreation
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.StopSolutionVersionCreation.StopSolutionVersionCreation


-- | Returns a list of solutions that use the given dataset group. When a
--   dataset group is not specified, all the solutions associated with the
--   account are listed. The response provides the properties for each
--   solution, including the Amazon Resource Name (ARN). For more
--   information on solutions, see CreateSolution.
--   
--   This operation returns paginated results.
module Amazonka.Personalize.ListSolutions

-- | <i>See:</i> <a>newListSolutions</a> smart constructor.
data ListSolutions
ListSolutions' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListSolutions

-- | A token returned from the previous call to <tt>ListSolutions</tt> for
--   getting the next set of solutions (if they exist).
[$sel:nextToken:ListSolutions'] :: ListSolutions -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset group.
[$sel:datasetGroupArn:ListSolutions'] :: ListSolutions -> Maybe Text

-- | The maximum number of solutions to return.
[$sel:maxResults:ListSolutions'] :: ListSolutions -> Maybe Natural

-- | Create a value of <a>ListSolutions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSolutions'</a>, <a>listSolutions_nextToken</a> -
--   A token returned from the previous call to <tt>ListSolutions</tt> for
--   getting the next set of solutions (if they exist).
--   
--   <a>$sel:datasetGroupArn:ListSolutions'</a>,
--   <a>listSolutions_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group.
--   
--   <a>$sel:maxResults:ListSolutions'</a>, <a>listSolutions_maxResults</a>
--   - The maximum number of solutions to return.
newListSolutions :: ListSolutions

-- | A token returned from the previous call to <tt>ListSolutions</tt> for
--   getting the next set of solutions (if they exist).
listSolutions_nextToken :: Lens' ListSolutions (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset group.
listSolutions_datasetGroupArn :: Lens' ListSolutions (Maybe Text)

-- | The maximum number of solutions to return.
listSolutions_maxResults :: Lens' ListSolutions (Maybe Natural)

-- | <i>See:</i> <a>newListSolutionsResponse</a> smart constructor.
data ListSolutionsResponse
ListSolutionsResponse' :: Maybe Text -> Maybe [SolutionSummary] -> Int -> ListSolutionsResponse

-- | A token for getting the next set of solutions (if they exist).
[$sel:nextToken:ListSolutionsResponse'] :: ListSolutionsResponse -> Maybe Text

-- | A list of the current solutions.
[$sel:solutions:ListSolutionsResponse'] :: ListSolutionsResponse -> Maybe [SolutionSummary]

-- | The response's http status code.
[$sel:httpStatus:ListSolutionsResponse'] :: ListSolutionsResponse -> Int

-- | Create a value of <a>ListSolutionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSolutions'</a>,
--   <a>listSolutionsResponse_nextToken</a> - A token for getting the next
--   set of solutions (if they exist).
--   
--   <a>$sel:solutions:ListSolutionsResponse'</a>,
--   <a>listSolutionsResponse_solutions</a> - A list of the current
--   solutions.
--   
--   <a>$sel:httpStatus:ListSolutionsResponse'</a>,
--   <a>listSolutionsResponse_httpStatus</a> - The response's http status
--   code.
newListSolutionsResponse :: Int -> ListSolutionsResponse

-- | A token for getting the next set of solutions (if they exist).
listSolutionsResponse_nextToken :: Lens' ListSolutionsResponse (Maybe Text)

-- | A list of the current solutions.
listSolutionsResponse_solutions :: Lens' ListSolutionsResponse (Maybe [SolutionSummary])

-- | The response's http status code.
listSolutionsResponse_httpStatus :: Lens' ListSolutionsResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.ListSolutions.ListSolutions
instance GHC.Show.Show Amazonka.Personalize.ListSolutions.ListSolutions
instance GHC.Read.Read Amazonka.Personalize.ListSolutions.ListSolutions
instance GHC.Classes.Eq Amazonka.Personalize.ListSolutions.ListSolutions
instance GHC.Generics.Generic Amazonka.Personalize.ListSolutions.ListSolutionsResponse
instance GHC.Show.Show Amazonka.Personalize.ListSolutions.ListSolutionsResponse
instance GHC.Read.Read Amazonka.Personalize.ListSolutions.ListSolutionsResponse
instance GHC.Classes.Eq Amazonka.Personalize.ListSolutions.ListSolutionsResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.ListSolutions.ListSolutions
instance Control.DeepSeq.NFData Amazonka.Personalize.ListSolutions.ListSolutionsResponse
instance Amazonka.Pager.AWSPager Amazonka.Personalize.ListSolutions.ListSolutions
instance Data.Hashable.Class.Hashable Amazonka.Personalize.ListSolutions.ListSolutions
instance Control.DeepSeq.NFData Amazonka.Personalize.ListSolutions.ListSolutions
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.ListSolutions.ListSolutions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.ListSolutions.ListSolutions
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.ListSolutions.ListSolutions
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.ListSolutions.ListSolutions


-- | Returns a list of solution versions for the given solution. When a
--   solution is not specified, all the solution versions associated with
--   the account are listed. The response provides the properties for each
--   solution version, including the Amazon Resource Name (ARN). For more
--   information on solutions, see CreateSolution.
--   
--   This operation returns paginated results.
module Amazonka.Personalize.ListSolutionVersions

-- | <i>See:</i> <a>newListSolutionVersions</a> smart constructor.
data ListSolutionVersions
ListSolutionVersions' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListSolutionVersions

-- | The Amazon Resource Name (ARN) of the solution.
[$sel:solutionArn:ListSolutionVersions'] :: ListSolutionVersions -> Maybe Text

-- | A token returned from the previous call to
--   <tt>ListSolutionVersions</tt> for getting the next set of solution
--   versions (if they exist).
[$sel:nextToken:ListSolutionVersions'] :: ListSolutionVersions -> Maybe Text

-- | The maximum number of solution versions to return.
[$sel:maxResults:ListSolutionVersions'] :: ListSolutionVersions -> Maybe Natural

-- | Create a value of <a>ListSolutionVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:ListSolutionVersions'</a>,
--   <a>listSolutionVersions_solutionArn</a> - The Amazon Resource Name
--   (ARN) of the solution.
--   
--   <a>$sel:nextToken:ListSolutionVersions'</a>,
--   <a>listSolutionVersions_nextToken</a> - A token returned from the
--   previous call to <tt>ListSolutionVersions</tt> for getting the next
--   set of solution versions (if they exist).
--   
--   <a>$sel:maxResults:ListSolutionVersions'</a>,
--   <a>listSolutionVersions_maxResults</a> - The maximum number of
--   solution versions to return.
newListSolutionVersions :: ListSolutionVersions

-- | The Amazon Resource Name (ARN) of the solution.
listSolutionVersions_solutionArn :: Lens' ListSolutionVersions (Maybe Text)

-- | A token returned from the previous call to
--   <tt>ListSolutionVersions</tt> for getting the next set of solution
--   versions (if they exist).
listSolutionVersions_nextToken :: Lens' ListSolutionVersions (Maybe Text)

-- | The maximum number of solution versions to return.
listSolutionVersions_maxResults :: Lens' ListSolutionVersions (Maybe Natural)

-- | <i>See:</i> <a>newListSolutionVersionsResponse</a> smart constructor.
data ListSolutionVersionsResponse
ListSolutionVersionsResponse' :: Maybe Text -> Maybe [SolutionVersionSummary] -> Int -> ListSolutionVersionsResponse

-- | A token for getting the next set of solution versions (if they exist).
[$sel:nextToken:ListSolutionVersionsResponse'] :: ListSolutionVersionsResponse -> Maybe Text

-- | A list of solution versions describing the version properties.
[$sel:solutionVersions:ListSolutionVersionsResponse'] :: ListSolutionVersionsResponse -> Maybe [SolutionVersionSummary]

-- | The response's http status code.
[$sel:httpStatus:ListSolutionVersionsResponse'] :: ListSolutionVersionsResponse -> Int

-- | Create a value of <a>ListSolutionVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSolutionVersions'</a>,
--   <a>listSolutionVersionsResponse_nextToken</a> - A token for getting
--   the next set of solution versions (if they exist).
--   
--   <a>$sel:solutionVersions:ListSolutionVersionsResponse'</a>,
--   <a>listSolutionVersionsResponse_solutionVersions</a> - A list of
--   solution versions describing the version properties.
--   
--   <a>$sel:httpStatus:ListSolutionVersionsResponse'</a>,
--   <a>listSolutionVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListSolutionVersionsResponse :: Int -> ListSolutionVersionsResponse

-- | A token for getting the next set of solution versions (if they exist).
listSolutionVersionsResponse_nextToken :: Lens' ListSolutionVersionsResponse (Maybe Text)

-- | A list of solution versions describing the version properties.
listSolutionVersionsResponse_solutionVersions :: Lens' ListSolutionVersionsResponse (Maybe [SolutionVersionSummary])

-- | The response's http status code.
listSolutionVersionsResponse_httpStatus :: Lens' ListSolutionVersionsResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.ListSolutionVersions.ListSolutionVersions
instance GHC.Show.Show Amazonka.Personalize.ListSolutionVersions.ListSolutionVersions
instance GHC.Read.Read Amazonka.Personalize.ListSolutionVersions.ListSolutionVersions
instance GHC.Classes.Eq Amazonka.Personalize.ListSolutionVersions.ListSolutionVersions
instance GHC.Generics.Generic Amazonka.Personalize.ListSolutionVersions.ListSolutionVersionsResponse
instance GHC.Show.Show Amazonka.Personalize.ListSolutionVersions.ListSolutionVersionsResponse
instance GHC.Read.Read Amazonka.Personalize.ListSolutionVersions.ListSolutionVersionsResponse
instance GHC.Classes.Eq Amazonka.Personalize.ListSolutionVersions.ListSolutionVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.ListSolutionVersions.ListSolutionVersions
instance Control.DeepSeq.NFData Amazonka.Personalize.ListSolutionVersions.ListSolutionVersionsResponse
instance Amazonka.Pager.AWSPager Amazonka.Personalize.ListSolutionVersions.ListSolutionVersions
instance Data.Hashable.Class.Hashable Amazonka.Personalize.ListSolutionVersions.ListSolutionVersions
instance Control.DeepSeq.NFData Amazonka.Personalize.ListSolutionVersions.ListSolutionVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.ListSolutionVersions.ListSolutionVersions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.ListSolutionVersions.ListSolutionVersions
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.ListSolutionVersions.ListSolutionVersions
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.ListSolutionVersions.ListSolutionVersions


-- | Returns the list of schemas associated with the account. The response
--   provides the properties for each schema, including the Amazon Resource
--   Name (ARN). For more information on schemas, see CreateSchema.
--   
--   This operation returns paginated results.
module Amazonka.Personalize.ListSchemas

-- | <i>See:</i> <a>newListSchemas</a> smart constructor.
data ListSchemas
ListSchemas' :: Maybe Text -> Maybe Natural -> ListSchemas

-- | A token returned from the previous call to <tt>ListSchemas</tt> for
--   getting the next set of schemas (if they exist).
[$sel:nextToken:ListSchemas'] :: ListSchemas -> Maybe Text

-- | The maximum number of schemas to return.
[$sel:maxResults:ListSchemas'] :: ListSchemas -> Maybe Natural

-- | Create a value of <a>ListSchemas</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSchemas'</a>, <a>listSchemas_nextToken</a> - A
--   token returned from the previous call to <tt>ListSchemas</tt> for
--   getting the next set of schemas (if they exist).
--   
--   <a>$sel:maxResults:ListSchemas'</a>, <a>listSchemas_maxResults</a> -
--   The maximum number of schemas to return.
newListSchemas :: ListSchemas

-- | A token returned from the previous call to <tt>ListSchemas</tt> for
--   getting the next set of schemas (if they exist).
listSchemas_nextToken :: Lens' ListSchemas (Maybe Text)

-- | The maximum number of schemas to return.
listSchemas_maxResults :: Lens' ListSchemas (Maybe Natural)

-- | <i>See:</i> <a>newListSchemasResponse</a> smart constructor.
data ListSchemasResponse
ListSchemasResponse' :: Maybe [DatasetSchemaSummary] -> Maybe Text -> Int -> ListSchemasResponse

-- | A list of schemas.
[$sel:schemas:ListSchemasResponse'] :: ListSchemasResponse -> Maybe [DatasetSchemaSummary]

-- | A token used to get the next set of schemas (if they exist).
[$sel:nextToken:ListSchemasResponse'] :: ListSchemasResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListSchemasResponse'] :: ListSchemasResponse -> Int

-- | Create a value of <a>ListSchemasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemas:ListSchemasResponse'</a>,
--   <a>listSchemasResponse_schemas</a> - A list of schemas.
--   
--   <a>$sel:nextToken:ListSchemas'</a>,
--   <a>listSchemasResponse_nextToken</a> - A token used to get the next
--   set of schemas (if they exist).
--   
--   <a>$sel:httpStatus:ListSchemasResponse'</a>,
--   <a>listSchemasResponse_httpStatus</a> - The response's http status
--   code.
newListSchemasResponse :: Int -> ListSchemasResponse

-- | A list of schemas.
listSchemasResponse_schemas :: Lens' ListSchemasResponse (Maybe [DatasetSchemaSummary])

-- | A token used to get the next set of schemas (if they exist).
listSchemasResponse_nextToken :: Lens' ListSchemasResponse (Maybe Text)

-- | The response's http status code.
listSchemasResponse_httpStatus :: Lens' ListSchemasResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.ListSchemas.ListSchemas
instance GHC.Show.Show Amazonka.Personalize.ListSchemas.ListSchemas
instance GHC.Read.Read Amazonka.Personalize.ListSchemas.ListSchemas
instance GHC.Classes.Eq Amazonka.Personalize.ListSchemas.ListSchemas
instance GHC.Generics.Generic Amazonka.Personalize.ListSchemas.ListSchemasResponse
instance GHC.Show.Show Amazonka.Personalize.ListSchemas.ListSchemasResponse
instance GHC.Read.Read Amazonka.Personalize.ListSchemas.ListSchemasResponse
instance GHC.Classes.Eq Amazonka.Personalize.ListSchemas.ListSchemasResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.ListSchemas.ListSchemas
instance Control.DeepSeq.NFData Amazonka.Personalize.ListSchemas.ListSchemasResponse
instance Amazonka.Pager.AWSPager Amazonka.Personalize.ListSchemas.ListSchemas
instance Data.Hashable.Class.Hashable Amazonka.Personalize.ListSchemas.ListSchemas
instance Control.DeepSeq.NFData Amazonka.Personalize.ListSchemas.ListSchemas
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.ListSchemas.ListSchemas
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.ListSchemas.ListSchemas
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.ListSchemas.ListSchemas
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.ListSchemas.ListSchemas


-- | Returns a list of available recipes. The response provides the
--   properties for each recipe, including the recipe's Amazon Resource
--   Name (ARN).
--   
--   This operation returns paginated results.
module Amazonka.Personalize.ListRecipes

-- | <i>See:</i> <a>newListRecipes</a> smart constructor.
data ListRecipes
ListRecipes' :: Maybe Text -> Maybe Natural -> Maybe RecipeProvider -> ListRecipes

-- | A token returned from the previous call to <tt>ListRecipes</tt> for
--   getting the next set of recipes (if they exist).
[$sel:nextToken:ListRecipes'] :: ListRecipes -> Maybe Text

-- | The maximum number of recipes to return.
[$sel:maxResults:ListRecipes'] :: ListRecipes -> Maybe Natural

-- | The default is <tt>SERVICE</tt>.
[$sel:recipeProvider:ListRecipes'] :: ListRecipes -> Maybe RecipeProvider

-- | Create a value of <a>ListRecipes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecipes'</a>, <a>listRecipes_nextToken</a> - A
--   token returned from the previous call to <tt>ListRecipes</tt> for
--   getting the next set of recipes (if they exist).
--   
--   <a>$sel:maxResults:ListRecipes'</a>, <a>listRecipes_maxResults</a> -
--   The maximum number of recipes to return.
--   
--   <a>$sel:recipeProvider:ListRecipes'</a>,
--   <a>listRecipes_recipeProvider</a> - The default is <tt>SERVICE</tt>.
newListRecipes :: ListRecipes

-- | A token returned from the previous call to <tt>ListRecipes</tt> for
--   getting the next set of recipes (if they exist).
listRecipes_nextToken :: Lens' ListRecipes (Maybe Text)

-- | The maximum number of recipes to return.
listRecipes_maxResults :: Lens' ListRecipes (Maybe Natural)

-- | The default is <tt>SERVICE</tt>.
listRecipes_recipeProvider :: Lens' ListRecipes (Maybe RecipeProvider)

-- | <i>See:</i> <a>newListRecipesResponse</a> smart constructor.
data ListRecipesResponse
ListRecipesResponse' :: Maybe Text -> Maybe [RecipeSummary] -> Int -> ListRecipesResponse

-- | A token for getting the next set of recipes.
[$sel:nextToken:ListRecipesResponse'] :: ListRecipesResponse -> Maybe Text

-- | The list of available recipes.
[$sel:recipes:ListRecipesResponse'] :: ListRecipesResponse -> Maybe [RecipeSummary]

-- | The response's http status code.
[$sel:httpStatus:ListRecipesResponse'] :: ListRecipesResponse -> Int

-- | Create a value of <a>ListRecipesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecipes'</a>,
--   <a>listRecipesResponse_nextToken</a> - A token for getting the next
--   set of recipes.
--   
--   <a>$sel:recipes:ListRecipesResponse'</a>,
--   <a>listRecipesResponse_recipes</a> - The list of available recipes.
--   
--   <a>$sel:httpStatus:ListRecipesResponse'</a>,
--   <a>listRecipesResponse_httpStatus</a> - The response's http status
--   code.
newListRecipesResponse :: Int -> ListRecipesResponse

-- | A token for getting the next set of recipes.
listRecipesResponse_nextToken :: Lens' ListRecipesResponse (Maybe Text)

-- | The list of available recipes.
listRecipesResponse_recipes :: Lens' ListRecipesResponse (Maybe [RecipeSummary])

-- | The response's http status code.
listRecipesResponse_httpStatus :: Lens' ListRecipesResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.ListRecipes.ListRecipes
instance GHC.Show.Show Amazonka.Personalize.ListRecipes.ListRecipes
instance GHC.Read.Read Amazonka.Personalize.ListRecipes.ListRecipes
instance GHC.Classes.Eq Amazonka.Personalize.ListRecipes.ListRecipes
instance GHC.Generics.Generic Amazonka.Personalize.ListRecipes.ListRecipesResponse
instance GHC.Show.Show Amazonka.Personalize.ListRecipes.ListRecipesResponse
instance GHC.Read.Read Amazonka.Personalize.ListRecipes.ListRecipesResponse
instance GHC.Classes.Eq Amazonka.Personalize.ListRecipes.ListRecipesResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.ListRecipes.ListRecipes
instance Control.DeepSeq.NFData Amazonka.Personalize.ListRecipes.ListRecipesResponse
instance Amazonka.Pager.AWSPager Amazonka.Personalize.ListRecipes.ListRecipes
instance Data.Hashable.Class.Hashable Amazonka.Personalize.ListRecipes.ListRecipes
instance Control.DeepSeq.NFData Amazonka.Personalize.ListRecipes.ListRecipes
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.ListRecipes.ListRecipes
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.ListRecipes.ListRecipes
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.ListRecipes.ListRecipes
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.ListRecipes.ListRecipes


-- | Lists all filters that belong to a given dataset group.
--   
--   This operation returns paginated results.
module Amazonka.Personalize.ListFilters

-- | <i>See:</i> <a>newListFilters</a> smart constructor.
data ListFilters
ListFilters' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListFilters

-- | A token returned from the previous call to <tt>ListFilters</tt> for
--   getting the next set of filters (if they exist).
[$sel:nextToken:ListFilters'] :: ListFilters -> Maybe Text

-- | The ARN of the dataset group that contains the filters.
[$sel:datasetGroupArn:ListFilters'] :: ListFilters -> Maybe Text

-- | The maximum number of filters to return.
[$sel:maxResults:ListFilters'] :: ListFilters -> Maybe Natural

-- | Create a value of <a>ListFilters</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFilters'</a>, <a>listFilters_nextToken</a> - A
--   token returned from the previous call to <tt>ListFilters</tt> for
--   getting the next set of filters (if they exist).
--   
--   <a>$sel:datasetGroupArn:ListFilters'</a>,
--   <a>listFilters_datasetGroupArn</a> - The ARN of the dataset group that
--   contains the filters.
--   
--   <a>$sel:maxResults:ListFilters'</a>, <a>listFilters_maxResults</a> -
--   The maximum number of filters to return.
newListFilters :: ListFilters

-- | A token returned from the previous call to <tt>ListFilters</tt> for
--   getting the next set of filters (if they exist).
listFilters_nextToken :: Lens' ListFilters (Maybe Text)

-- | The ARN of the dataset group that contains the filters.
listFilters_datasetGroupArn :: Lens' ListFilters (Maybe Text)

-- | The maximum number of filters to return.
listFilters_maxResults :: Lens' ListFilters (Maybe Natural)

-- | <i>See:</i> <a>newListFiltersResponse</a> smart constructor.
data ListFiltersResponse
ListFiltersResponse' :: Maybe [FilterSummary] -> Maybe Text -> Int -> ListFiltersResponse

-- | A list of returned filters.
[$sel:filters:ListFiltersResponse'] :: ListFiltersResponse -> Maybe [FilterSummary]

-- | A token for getting the next set of filters (if they exist).
[$sel:nextToken:ListFiltersResponse'] :: ListFiltersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListFiltersResponse'] :: ListFiltersResponse -> Int

-- | Create a value of <a>ListFiltersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListFiltersResponse'</a>,
--   <a>listFiltersResponse_filters</a> - A list of returned filters.
--   
--   <a>$sel:nextToken:ListFilters'</a>,
--   <a>listFiltersResponse_nextToken</a> - A token for getting the next
--   set of filters (if they exist).
--   
--   <a>$sel:httpStatus:ListFiltersResponse'</a>,
--   <a>listFiltersResponse_httpStatus</a> - The response's http status
--   code.
newListFiltersResponse :: Int -> ListFiltersResponse

-- | A list of returned filters.
listFiltersResponse_filters :: Lens' ListFiltersResponse (Maybe [FilterSummary])

-- | A token for getting the next set of filters (if they exist).
listFiltersResponse_nextToken :: Lens' ListFiltersResponse (Maybe Text)

-- | The response's http status code.
listFiltersResponse_httpStatus :: Lens' ListFiltersResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.ListFilters.ListFilters
instance GHC.Show.Show Amazonka.Personalize.ListFilters.ListFilters
instance GHC.Read.Read Amazonka.Personalize.ListFilters.ListFilters
instance GHC.Classes.Eq Amazonka.Personalize.ListFilters.ListFilters
instance GHC.Generics.Generic Amazonka.Personalize.ListFilters.ListFiltersResponse
instance GHC.Show.Show Amazonka.Personalize.ListFilters.ListFiltersResponse
instance GHC.Read.Read Amazonka.Personalize.ListFilters.ListFiltersResponse
instance GHC.Classes.Eq Amazonka.Personalize.ListFilters.ListFiltersResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.ListFilters.ListFilters
instance Control.DeepSeq.NFData Amazonka.Personalize.ListFilters.ListFiltersResponse
instance Amazonka.Pager.AWSPager Amazonka.Personalize.ListFilters.ListFilters
instance Data.Hashable.Class.Hashable Amazonka.Personalize.ListFilters.ListFilters
instance Control.DeepSeq.NFData Amazonka.Personalize.ListFilters.ListFilters
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.ListFilters.ListFilters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.ListFilters.ListFilters
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.ListFilters.ListFilters
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.ListFilters.ListFilters


-- | Returns the list of event trackers associated with the account. The
--   response provides the properties for each event tracker, including the
--   Amazon Resource Name (ARN) and tracking ID. For more information on
--   event trackers, see CreateEventTracker.
--   
--   This operation returns paginated results.
module Amazonka.Personalize.ListEventTrackers

-- | <i>See:</i> <a>newListEventTrackers</a> smart constructor.
data ListEventTrackers
ListEventTrackers' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListEventTrackers

-- | A token returned from the previous call to <tt>ListEventTrackers</tt>
--   for getting the next set of event trackers (if they exist).
[$sel:nextToken:ListEventTrackers'] :: ListEventTrackers -> Maybe Text

-- | The ARN of a dataset group used to filter the response.
[$sel:datasetGroupArn:ListEventTrackers'] :: ListEventTrackers -> Maybe Text

-- | The maximum number of event trackers to return.
[$sel:maxResults:ListEventTrackers'] :: ListEventTrackers -> Maybe Natural

-- | Create a value of <a>ListEventTrackers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEventTrackers'</a>,
--   <a>listEventTrackers_nextToken</a> - A token returned from the
--   previous call to <tt>ListEventTrackers</tt> for getting the next set
--   of event trackers (if they exist).
--   
--   <a>$sel:datasetGroupArn:ListEventTrackers'</a>,
--   <a>listEventTrackers_datasetGroupArn</a> - The ARN of a dataset group
--   used to filter the response.
--   
--   <a>$sel:maxResults:ListEventTrackers'</a>,
--   <a>listEventTrackers_maxResults</a> - The maximum number of event
--   trackers to return.
newListEventTrackers :: ListEventTrackers

-- | A token returned from the previous call to <tt>ListEventTrackers</tt>
--   for getting the next set of event trackers (if they exist).
listEventTrackers_nextToken :: Lens' ListEventTrackers (Maybe Text)

-- | The ARN of a dataset group used to filter the response.
listEventTrackers_datasetGroupArn :: Lens' ListEventTrackers (Maybe Text)

-- | The maximum number of event trackers to return.
listEventTrackers_maxResults :: Lens' ListEventTrackers (Maybe Natural)

-- | <i>See:</i> <a>newListEventTrackersResponse</a> smart constructor.
data ListEventTrackersResponse
ListEventTrackersResponse' :: Maybe [EventTrackerSummary] -> Maybe Text -> Int -> ListEventTrackersResponse

-- | A list of event trackers.
[$sel:eventTrackers:ListEventTrackersResponse'] :: ListEventTrackersResponse -> Maybe [EventTrackerSummary]

-- | A token for getting the next set of event trackers (if they exist).
[$sel:nextToken:ListEventTrackersResponse'] :: ListEventTrackersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListEventTrackersResponse'] :: ListEventTrackersResponse -> Int

-- | Create a value of <a>ListEventTrackersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTrackers:ListEventTrackersResponse'</a>,
--   <a>listEventTrackersResponse_eventTrackers</a> - A list of event
--   trackers.
--   
--   <a>$sel:nextToken:ListEventTrackers'</a>,
--   <a>listEventTrackersResponse_nextToken</a> - A token for getting the
--   next set of event trackers (if they exist).
--   
--   <a>$sel:httpStatus:ListEventTrackersResponse'</a>,
--   <a>listEventTrackersResponse_httpStatus</a> - The response's http
--   status code.
newListEventTrackersResponse :: Int -> ListEventTrackersResponse

-- | A list of event trackers.
listEventTrackersResponse_eventTrackers :: Lens' ListEventTrackersResponse (Maybe [EventTrackerSummary])

-- | A token for getting the next set of event trackers (if they exist).
listEventTrackersResponse_nextToken :: Lens' ListEventTrackersResponse (Maybe Text)

-- | The response's http status code.
listEventTrackersResponse_httpStatus :: Lens' ListEventTrackersResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.ListEventTrackers.ListEventTrackers
instance GHC.Show.Show Amazonka.Personalize.ListEventTrackers.ListEventTrackers
instance GHC.Read.Read Amazonka.Personalize.ListEventTrackers.ListEventTrackers
instance GHC.Classes.Eq Amazonka.Personalize.ListEventTrackers.ListEventTrackers
instance GHC.Generics.Generic Amazonka.Personalize.ListEventTrackers.ListEventTrackersResponse
instance GHC.Show.Show Amazonka.Personalize.ListEventTrackers.ListEventTrackersResponse
instance GHC.Read.Read Amazonka.Personalize.ListEventTrackers.ListEventTrackersResponse
instance GHC.Classes.Eq Amazonka.Personalize.ListEventTrackers.ListEventTrackersResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.ListEventTrackers.ListEventTrackers
instance Control.DeepSeq.NFData Amazonka.Personalize.ListEventTrackers.ListEventTrackersResponse
instance Amazonka.Pager.AWSPager Amazonka.Personalize.ListEventTrackers.ListEventTrackers
instance Data.Hashable.Class.Hashable Amazonka.Personalize.ListEventTrackers.ListEventTrackers
instance Control.DeepSeq.NFData Amazonka.Personalize.ListEventTrackers.ListEventTrackers
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.ListEventTrackers.ListEventTrackers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.ListEventTrackers.ListEventTrackers
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.ListEventTrackers.ListEventTrackers
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.ListEventTrackers.ListEventTrackers


-- | Returns the list of datasets contained in the given dataset group. The
--   response provides the properties for each dataset, including the
--   Amazon Resource Name (ARN). For more information on datasets, see
--   CreateDataset.
--   
--   This operation returns paginated results.
module Amazonka.Personalize.ListDatasets

-- | <i>See:</i> <a>newListDatasets</a> smart constructor.
data ListDatasets
ListDatasets' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDatasets

-- | A token returned from the previous call to
--   <tt>ListDatasetImportJobs</tt> for getting the next set of dataset
--   import jobs (if they exist).
[$sel:nextToken:ListDatasets'] :: ListDatasets -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dataset group that contains the
--   datasets to list.
[$sel:datasetGroupArn:ListDatasets'] :: ListDatasets -> Maybe Text

-- | The maximum number of datasets to return.
[$sel:maxResults:ListDatasets'] :: ListDatasets -> Maybe Natural

-- | Create a value of <a>ListDatasets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>, <a>listDatasets_nextToken</a> - A
--   token returned from the previous call to
--   <tt>ListDatasetImportJobs</tt> for getting the next set of dataset
--   import jobs (if they exist).
--   
--   <a>$sel:datasetGroupArn:ListDatasets'</a>,
--   <a>listDatasets_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group that contains the datasets to list.
--   
--   <a>$sel:maxResults:ListDatasets'</a>, <a>listDatasets_maxResults</a> -
--   The maximum number of datasets to return.
newListDatasets :: ListDatasets

-- | A token returned from the previous call to
--   <tt>ListDatasetImportJobs</tt> for getting the next set of dataset
--   import jobs (if they exist).
listDatasets_nextToken :: Lens' ListDatasets (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset group that contains the
--   datasets to list.
listDatasets_datasetGroupArn :: Lens' ListDatasets (Maybe Text)

-- | The maximum number of datasets to return.
listDatasets_maxResults :: Lens' ListDatasets (Maybe Natural)

-- | <i>See:</i> <a>newListDatasetsResponse</a> smart constructor.
data ListDatasetsResponse
ListDatasetsResponse' :: Maybe Text -> Maybe [DatasetSummary] -> Int -> ListDatasetsResponse

-- | A token for getting the next set of datasets (if they exist).
[$sel:nextToken:ListDatasetsResponse'] :: ListDatasetsResponse -> Maybe Text

-- | An array of <tt>Dataset</tt> objects. Each object provides metadata
--   information.
[$sel:datasets:ListDatasetsResponse'] :: ListDatasetsResponse -> Maybe [DatasetSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDatasetsResponse'] :: ListDatasetsResponse -> Int

-- | Create a value of <a>ListDatasetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>,
--   <a>listDatasetsResponse_nextToken</a> - A token for getting the next
--   set of datasets (if they exist).
--   
--   <a>$sel:datasets:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_datasets</a> - An array of <tt>Dataset</tt>
--   objects. Each object provides metadata information.
--   
--   <a>$sel:httpStatus:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_httpStatus</a> - The response's http status
--   code.
newListDatasetsResponse :: Int -> ListDatasetsResponse

-- | A token for getting the next set of datasets (if they exist).
listDatasetsResponse_nextToken :: Lens' ListDatasetsResponse (Maybe Text)

-- | An array of <tt>Dataset</tt> objects. Each object provides metadata
--   information.
listDatasetsResponse_datasets :: Lens' ListDatasetsResponse (Maybe [DatasetSummary])

-- | The response's http status code.
listDatasetsResponse_httpStatus :: Lens' ListDatasetsResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.ListDatasets.ListDatasets
instance GHC.Show.Show Amazonka.Personalize.ListDatasets.ListDatasets
instance GHC.Read.Read Amazonka.Personalize.ListDatasets.ListDatasets
instance GHC.Classes.Eq Amazonka.Personalize.ListDatasets.ListDatasets
instance GHC.Generics.Generic Amazonka.Personalize.ListDatasets.ListDatasetsResponse
instance GHC.Show.Show Amazonka.Personalize.ListDatasets.ListDatasetsResponse
instance GHC.Read.Read Amazonka.Personalize.ListDatasets.ListDatasetsResponse
instance GHC.Classes.Eq Amazonka.Personalize.ListDatasets.ListDatasetsResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.ListDatasets.ListDatasets
instance Control.DeepSeq.NFData Amazonka.Personalize.ListDatasets.ListDatasetsResponse
instance Amazonka.Pager.AWSPager Amazonka.Personalize.ListDatasets.ListDatasets
instance Data.Hashable.Class.Hashable Amazonka.Personalize.ListDatasets.ListDatasets
instance Control.DeepSeq.NFData Amazonka.Personalize.ListDatasets.ListDatasets
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.ListDatasets.ListDatasets
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.ListDatasets.ListDatasets
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.ListDatasets.ListDatasets
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.ListDatasets.ListDatasets


-- | Returns a list of dataset import jobs that use the given dataset. When
--   a dataset is not specified, all the dataset import jobs associated
--   with the account are listed. The response provides the properties for
--   each dataset import job, including the Amazon Resource Name (ARN). For
--   more information on dataset import jobs, see CreateDatasetImportJob.
--   For more information on datasets, see CreateDataset.
--   
--   This operation returns paginated results.
module Amazonka.Personalize.ListDatasetImportJobs

-- | <i>See:</i> <a>newListDatasetImportJobs</a> smart constructor.
data ListDatasetImportJobs
ListDatasetImportJobs' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDatasetImportJobs

-- | The Amazon Resource Name (ARN) of the dataset to list the dataset
--   import jobs for.
[$sel:datasetArn:ListDatasetImportJobs'] :: ListDatasetImportJobs -> Maybe Text

-- | A token returned from the previous call to
--   <tt>ListDatasetImportJobs</tt> for getting the next set of dataset
--   import jobs (if they exist).
[$sel:nextToken:ListDatasetImportJobs'] :: ListDatasetImportJobs -> Maybe Text

-- | The maximum number of dataset import jobs to return.
[$sel:maxResults:ListDatasetImportJobs'] :: ListDatasetImportJobs -> Maybe Natural

-- | Create a value of <a>ListDatasetImportJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetArn:ListDatasetImportJobs'</a>,
--   <a>listDatasetImportJobs_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset to list the dataset import jobs for.
--   
--   <a>$sel:nextToken:ListDatasetImportJobs'</a>,
--   <a>listDatasetImportJobs_nextToken</a> - A token returned from the
--   previous call to <tt>ListDatasetImportJobs</tt> for getting the next
--   set of dataset import jobs (if they exist).
--   
--   <a>$sel:maxResults:ListDatasetImportJobs'</a>,
--   <a>listDatasetImportJobs_maxResults</a> - The maximum number of
--   dataset import jobs to return.
newListDatasetImportJobs :: ListDatasetImportJobs

-- | The Amazon Resource Name (ARN) of the dataset to list the dataset
--   import jobs for.
listDatasetImportJobs_datasetArn :: Lens' ListDatasetImportJobs (Maybe Text)

-- | A token returned from the previous call to
--   <tt>ListDatasetImportJobs</tt> for getting the next set of dataset
--   import jobs (if they exist).
listDatasetImportJobs_nextToken :: Lens' ListDatasetImportJobs (Maybe Text)

-- | The maximum number of dataset import jobs to return.
listDatasetImportJobs_maxResults :: Lens' ListDatasetImportJobs (Maybe Natural)

-- | <i>See:</i> <a>newListDatasetImportJobsResponse</a> smart constructor.
data ListDatasetImportJobsResponse
ListDatasetImportJobsResponse' :: Maybe [DatasetImportJobSummary] -> Maybe Text -> Int -> ListDatasetImportJobsResponse

-- | The list of dataset import jobs.
[$sel:datasetImportJobs:ListDatasetImportJobsResponse'] :: ListDatasetImportJobsResponse -> Maybe [DatasetImportJobSummary]

-- | A token for getting the next set of dataset import jobs (if they
--   exist).
[$sel:nextToken:ListDatasetImportJobsResponse'] :: ListDatasetImportJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDatasetImportJobsResponse'] :: ListDatasetImportJobsResponse -> Int

-- | Create a value of <a>ListDatasetImportJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetImportJobs:ListDatasetImportJobsResponse'</a>,
--   <a>listDatasetImportJobsResponse_datasetImportJobs</a> - The list of
--   dataset import jobs.
--   
--   <a>$sel:nextToken:ListDatasetImportJobs'</a>,
--   <a>listDatasetImportJobsResponse_nextToken</a> - A token for getting
--   the next set of dataset import jobs (if they exist).
--   
--   <a>$sel:httpStatus:ListDatasetImportJobsResponse'</a>,
--   <a>listDatasetImportJobsResponse_httpStatus</a> - The response's http
--   status code.
newListDatasetImportJobsResponse :: Int -> ListDatasetImportJobsResponse

-- | The list of dataset import jobs.
listDatasetImportJobsResponse_datasetImportJobs :: Lens' ListDatasetImportJobsResponse (Maybe [DatasetImportJobSummary])

-- | A token for getting the next set of dataset import jobs (if they
--   exist).
listDatasetImportJobsResponse_nextToken :: Lens' ListDatasetImportJobsResponse (Maybe Text)

-- | The response's http status code.
listDatasetImportJobsResponse_httpStatus :: Lens' ListDatasetImportJobsResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobs
instance GHC.Show.Show Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobs
instance GHC.Read.Read Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobs
instance GHC.Classes.Eq Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobs
instance GHC.Generics.Generic Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobsResponse
instance GHC.Show.Show Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobsResponse
instance GHC.Read.Read Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobsResponse
instance GHC.Classes.Eq Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobs
instance Control.DeepSeq.NFData Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobsResponse
instance Amazonka.Pager.AWSPager Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobs
instance Data.Hashable.Class.Hashable Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobs
instance Control.DeepSeq.NFData Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobs
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobs
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.ListDatasetImportJobs.ListDatasetImportJobs


-- | Returns a list of dataset groups. The response provides the properties
--   for each dataset group, including the Amazon Resource Name (ARN). For
--   more information on dataset groups, see CreateDatasetGroup.
--   
--   This operation returns paginated results.
module Amazonka.Personalize.ListDatasetGroups

-- | <i>See:</i> <a>newListDatasetGroups</a> smart constructor.
data ListDatasetGroups
ListDatasetGroups' :: Maybe Text -> Maybe Natural -> ListDatasetGroups

-- | A token returned from the previous call to <tt>ListDatasetGroups</tt>
--   for getting the next set of dataset groups (if they exist).
[$sel:nextToken:ListDatasetGroups'] :: ListDatasetGroups -> Maybe Text

-- | The maximum number of dataset groups to return.
[$sel:maxResults:ListDatasetGroups'] :: ListDatasetGroups -> Maybe Natural

-- | Create a value of <a>ListDatasetGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasetGroups'</a>,
--   <a>listDatasetGroups_nextToken</a> - A token returned from the
--   previous call to <tt>ListDatasetGroups</tt> for getting the next set
--   of dataset groups (if they exist).
--   
--   <a>$sel:maxResults:ListDatasetGroups'</a>,
--   <a>listDatasetGroups_maxResults</a> - The maximum number of dataset
--   groups to return.
newListDatasetGroups :: ListDatasetGroups

-- | A token returned from the previous call to <tt>ListDatasetGroups</tt>
--   for getting the next set of dataset groups (if they exist).
listDatasetGroups_nextToken :: Lens' ListDatasetGroups (Maybe Text)

-- | The maximum number of dataset groups to return.
listDatasetGroups_maxResults :: Lens' ListDatasetGroups (Maybe Natural)

-- | <i>See:</i> <a>newListDatasetGroupsResponse</a> smart constructor.
data ListDatasetGroupsResponse
ListDatasetGroupsResponse' :: Maybe Text -> Maybe [DatasetGroupSummary] -> Int -> ListDatasetGroupsResponse

-- | A token for getting the next set of dataset groups (if they exist).
[$sel:nextToken:ListDatasetGroupsResponse'] :: ListDatasetGroupsResponse -> Maybe Text

-- | The list of your dataset groups.
[$sel:datasetGroups:ListDatasetGroupsResponse'] :: ListDatasetGroupsResponse -> Maybe [DatasetGroupSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDatasetGroupsResponse'] :: ListDatasetGroupsResponse -> Int

-- | Create a value of <a>ListDatasetGroupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasetGroups'</a>,
--   <a>listDatasetGroupsResponse_nextToken</a> - A token for getting the
--   next set of dataset groups (if they exist).
--   
--   <a>$sel:datasetGroups:ListDatasetGroupsResponse'</a>,
--   <a>listDatasetGroupsResponse_datasetGroups</a> - The list of your
--   dataset groups.
--   
--   <a>$sel:httpStatus:ListDatasetGroupsResponse'</a>,
--   <a>listDatasetGroupsResponse_httpStatus</a> - The response's http
--   status code.
newListDatasetGroupsResponse :: Int -> ListDatasetGroupsResponse

-- | A token for getting the next set of dataset groups (if they exist).
listDatasetGroupsResponse_nextToken :: Lens' ListDatasetGroupsResponse (Maybe Text)

-- | The list of your dataset groups.
listDatasetGroupsResponse_datasetGroups :: Lens' ListDatasetGroupsResponse (Maybe [DatasetGroupSummary])

-- | The response's http status code.
listDatasetGroupsResponse_httpStatus :: Lens' ListDatasetGroupsResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.ListDatasetGroups.ListDatasetGroups
instance GHC.Show.Show Amazonka.Personalize.ListDatasetGroups.ListDatasetGroups
instance GHC.Read.Read Amazonka.Personalize.ListDatasetGroups.ListDatasetGroups
instance GHC.Classes.Eq Amazonka.Personalize.ListDatasetGroups.ListDatasetGroups
instance GHC.Generics.Generic Amazonka.Personalize.ListDatasetGroups.ListDatasetGroupsResponse
instance GHC.Show.Show Amazonka.Personalize.ListDatasetGroups.ListDatasetGroupsResponse
instance GHC.Read.Read Amazonka.Personalize.ListDatasetGroups.ListDatasetGroupsResponse
instance GHC.Classes.Eq Amazonka.Personalize.ListDatasetGroups.ListDatasetGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.ListDatasetGroups.ListDatasetGroups
instance Control.DeepSeq.NFData Amazonka.Personalize.ListDatasetGroups.ListDatasetGroupsResponse
instance Amazonka.Pager.AWSPager Amazonka.Personalize.ListDatasetGroups.ListDatasetGroups
instance Data.Hashable.Class.Hashable Amazonka.Personalize.ListDatasetGroups.ListDatasetGroups
instance Control.DeepSeq.NFData Amazonka.Personalize.ListDatasetGroups.ListDatasetGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.ListDatasetGroups.ListDatasetGroups
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.ListDatasetGroups.ListDatasetGroups
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.ListDatasetGroups.ListDatasetGroups
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.ListDatasetGroups.ListDatasetGroups


-- | Returns a list of dataset export jobs that use the given dataset. When
--   a dataset is not specified, all the dataset export jobs associated
--   with the account are listed. The response provides the properties for
--   each dataset export job, including the Amazon Resource Name (ARN). For
--   more information on dataset export jobs, see CreateDatasetExportJob.
--   For more information on datasets, see CreateDataset.
--   
--   This operation returns paginated results.
module Amazonka.Personalize.ListDatasetExportJobs

-- | <i>See:</i> <a>newListDatasetExportJobs</a> smart constructor.
data ListDatasetExportJobs
ListDatasetExportJobs' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDatasetExportJobs

-- | The Amazon Resource Name (ARN) of the dataset to list the dataset
--   export jobs for.
[$sel:datasetArn:ListDatasetExportJobs'] :: ListDatasetExportJobs -> Maybe Text

-- | A token returned from the previous call to
--   <tt>ListDatasetExportJobs</tt> for getting the next set of dataset
--   export jobs (if they exist).
[$sel:nextToken:ListDatasetExportJobs'] :: ListDatasetExportJobs -> Maybe Text

-- | The maximum number of dataset export jobs to return.
[$sel:maxResults:ListDatasetExportJobs'] :: ListDatasetExportJobs -> Maybe Natural

-- | Create a value of <a>ListDatasetExportJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetArn:ListDatasetExportJobs'</a>,
--   <a>listDatasetExportJobs_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset to list the dataset export jobs for.
--   
--   <a>$sel:nextToken:ListDatasetExportJobs'</a>,
--   <a>listDatasetExportJobs_nextToken</a> - A token returned from the
--   previous call to <tt>ListDatasetExportJobs</tt> for getting the next
--   set of dataset export jobs (if they exist).
--   
--   <a>$sel:maxResults:ListDatasetExportJobs'</a>,
--   <a>listDatasetExportJobs_maxResults</a> - The maximum number of
--   dataset export jobs to return.
newListDatasetExportJobs :: ListDatasetExportJobs

-- | The Amazon Resource Name (ARN) of the dataset to list the dataset
--   export jobs for.
listDatasetExportJobs_datasetArn :: Lens' ListDatasetExportJobs (Maybe Text)

-- | A token returned from the previous call to
--   <tt>ListDatasetExportJobs</tt> for getting the next set of dataset
--   export jobs (if they exist).
listDatasetExportJobs_nextToken :: Lens' ListDatasetExportJobs (Maybe Text)

-- | The maximum number of dataset export jobs to return.
listDatasetExportJobs_maxResults :: Lens' ListDatasetExportJobs (Maybe Natural)

-- | <i>See:</i> <a>newListDatasetExportJobsResponse</a> smart constructor.
data ListDatasetExportJobsResponse
ListDatasetExportJobsResponse' :: Maybe Text -> Maybe [DatasetExportJobSummary] -> Int -> ListDatasetExportJobsResponse

-- | A token for getting the next set of dataset export jobs (if they
--   exist).
[$sel:nextToken:ListDatasetExportJobsResponse'] :: ListDatasetExportJobsResponse -> Maybe Text

-- | The list of dataset export jobs.
[$sel:datasetExportJobs:ListDatasetExportJobsResponse'] :: ListDatasetExportJobsResponse -> Maybe [DatasetExportJobSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDatasetExportJobsResponse'] :: ListDatasetExportJobsResponse -> Int

-- | Create a value of <a>ListDatasetExportJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasetExportJobs'</a>,
--   <a>listDatasetExportJobsResponse_nextToken</a> - A token for getting
--   the next set of dataset export jobs (if they exist).
--   
--   <a>$sel:datasetExportJobs:ListDatasetExportJobsResponse'</a>,
--   <a>listDatasetExportJobsResponse_datasetExportJobs</a> - The list of
--   dataset export jobs.
--   
--   <a>$sel:httpStatus:ListDatasetExportJobsResponse'</a>,
--   <a>listDatasetExportJobsResponse_httpStatus</a> - The response's http
--   status code.
newListDatasetExportJobsResponse :: Int -> ListDatasetExportJobsResponse

-- | A token for getting the next set of dataset export jobs (if they
--   exist).
listDatasetExportJobsResponse_nextToken :: Lens' ListDatasetExportJobsResponse (Maybe Text)

-- | The list of dataset export jobs.
listDatasetExportJobsResponse_datasetExportJobs :: Lens' ListDatasetExportJobsResponse (Maybe [DatasetExportJobSummary])

-- | The response's http status code.
listDatasetExportJobsResponse_httpStatus :: Lens' ListDatasetExportJobsResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobs
instance GHC.Show.Show Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobs
instance GHC.Read.Read Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobs
instance GHC.Classes.Eq Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobs
instance GHC.Generics.Generic Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobsResponse
instance GHC.Show.Show Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobsResponse
instance GHC.Read.Read Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobsResponse
instance GHC.Classes.Eq Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobs
instance Control.DeepSeq.NFData Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobsResponse
instance Amazonka.Pager.AWSPager Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobs
instance Data.Hashable.Class.Hashable Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobs
instance Control.DeepSeq.NFData Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobs
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobs
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.ListDatasetExportJobs.ListDatasetExportJobs


-- | Returns a list of campaigns that use the given solution. When a
--   solution is not specified, all the campaigns associated with the
--   account are listed. The response provides the properties for each
--   campaign, including the Amazon Resource Name (ARN). For more
--   information on campaigns, see CreateCampaign.
--   
--   This operation returns paginated results.
module Amazonka.Personalize.ListCampaigns

-- | <i>See:</i> <a>newListCampaigns</a> smart constructor.
data ListCampaigns
ListCampaigns' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListCampaigns

-- | The Amazon Resource Name (ARN) of the solution to list the campaigns
--   for. When a solution is not specified, all the campaigns associated
--   with the account are listed.
[$sel:solutionArn:ListCampaigns'] :: ListCampaigns -> Maybe Text

-- | A token returned from the previous call to <tt>ListCampaigns</tt> for
--   getting the next set of campaigns (if they exist).
[$sel:nextToken:ListCampaigns'] :: ListCampaigns -> Maybe Text

-- | The maximum number of campaigns to return.
[$sel:maxResults:ListCampaigns'] :: ListCampaigns -> Maybe Natural

-- | Create a value of <a>ListCampaigns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:ListCampaigns'</a>,
--   <a>listCampaigns_solutionArn</a> - The Amazon Resource Name (ARN) of
--   the solution to list the campaigns for. When a solution is not
--   specified, all the campaigns associated with the account are listed.
--   
--   <a>$sel:nextToken:ListCampaigns'</a>, <a>listCampaigns_nextToken</a> -
--   A token returned from the previous call to <tt>ListCampaigns</tt> for
--   getting the next set of campaigns (if they exist).
--   
--   <a>$sel:maxResults:ListCampaigns'</a>, <a>listCampaigns_maxResults</a>
--   - The maximum number of campaigns to return.
newListCampaigns :: ListCampaigns

-- | The Amazon Resource Name (ARN) of the solution to list the campaigns
--   for. When a solution is not specified, all the campaigns associated
--   with the account are listed.
listCampaigns_solutionArn :: Lens' ListCampaigns (Maybe Text)

-- | A token returned from the previous call to <tt>ListCampaigns</tt> for
--   getting the next set of campaigns (if they exist).
listCampaigns_nextToken :: Lens' ListCampaigns (Maybe Text)

-- | The maximum number of campaigns to return.
listCampaigns_maxResults :: Lens' ListCampaigns (Maybe Natural)

-- | <i>See:</i> <a>newListCampaignsResponse</a> smart constructor.
data ListCampaignsResponse
ListCampaignsResponse' :: Maybe [CampaignSummary] -> Maybe Text -> Int -> ListCampaignsResponse

-- | A list of the campaigns.
[$sel:campaigns:ListCampaignsResponse'] :: ListCampaignsResponse -> Maybe [CampaignSummary]

-- | A token for getting the next set of campaigns (if they exist).
[$sel:nextToken:ListCampaignsResponse'] :: ListCampaignsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListCampaignsResponse'] :: ListCampaignsResponse -> Int

-- | Create a value of <a>ListCampaignsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaigns:ListCampaignsResponse'</a>,
--   <a>listCampaignsResponse_campaigns</a> - A list of the campaigns.
--   
--   <a>$sel:nextToken:ListCampaigns'</a>,
--   <a>listCampaignsResponse_nextToken</a> - A token for getting the next
--   set of campaigns (if they exist).
--   
--   <a>$sel:httpStatus:ListCampaignsResponse'</a>,
--   <a>listCampaignsResponse_httpStatus</a> - The response's http status
--   code.
newListCampaignsResponse :: Int -> ListCampaignsResponse

-- | A list of the campaigns.
listCampaignsResponse_campaigns :: Lens' ListCampaignsResponse (Maybe [CampaignSummary])

-- | A token for getting the next set of campaigns (if they exist).
listCampaignsResponse_nextToken :: Lens' ListCampaignsResponse (Maybe Text)

-- | The response's http status code.
listCampaignsResponse_httpStatus :: Lens' ListCampaignsResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.ListCampaigns.ListCampaigns
instance GHC.Show.Show Amazonka.Personalize.ListCampaigns.ListCampaigns
instance GHC.Read.Read Amazonka.Personalize.ListCampaigns.ListCampaigns
instance GHC.Classes.Eq Amazonka.Personalize.ListCampaigns.ListCampaigns
instance GHC.Generics.Generic Amazonka.Personalize.ListCampaigns.ListCampaignsResponse
instance GHC.Show.Show Amazonka.Personalize.ListCampaigns.ListCampaignsResponse
instance GHC.Read.Read Amazonka.Personalize.ListCampaigns.ListCampaignsResponse
instance GHC.Classes.Eq Amazonka.Personalize.ListCampaigns.ListCampaignsResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.ListCampaigns.ListCampaigns
instance Control.DeepSeq.NFData Amazonka.Personalize.ListCampaigns.ListCampaignsResponse
instance Amazonka.Pager.AWSPager Amazonka.Personalize.ListCampaigns.ListCampaigns
instance Data.Hashable.Class.Hashable Amazonka.Personalize.ListCampaigns.ListCampaigns
instance Control.DeepSeq.NFData Amazonka.Personalize.ListCampaigns.ListCampaigns
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.ListCampaigns.ListCampaigns
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.ListCampaigns.ListCampaigns
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.ListCampaigns.ListCampaigns
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.ListCampaigns.ListCampaigns


-- | Gets a list of the batch inference jobs that have been performed off
--   of a solution version.
--   
--   This operation returns paginated results.
module Amazonka.Personalize.ListBatchInferenceJobs

-- | <i>See:</i> <a>newListBatchInferenceJobs</a> smart constructor.
data ListBatchInferenceJobs
ListBatchInferenceJobs' :: Maybe Text -> Maybe Natural -> Maybe Text -> ListBatchInferenceJobs

-- | The token to request the next page of results.
[$sel:nextToken:ListBatchInferenceJobs'] :: ListBatchInferenceJobs -> Maybe Text

-- | The maximum number of batch inference job results to return in each
--   page. The default value is 100.
[$sel:maxResults:ListBatchInferenceJobs'] :: ListBatchInferenceJobs -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the solution version from which the
--   batch inference jobs were created.
[$sel:solutionVersionArn:ListBatchInferenceJobs'] :: ListBatchInferenceJobs -> Maybe Text

-- | Create a value of <a>ListBatchInferenceJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBatchInferenceJobs'</a>,
--   <a>listBatchInferenceJobs_nextToken</a> - The token to request the
--   next page of results.
--   
--   <a>$sel:maxResults:ListBatchInferenceJobs'</a>,
--   <a>listBatchInferenceJobs_maxResults</a> - The maximum number of batch
--   inference job results to return in each page. The default value is
--   100.
--   
--   <a>$sel:solutionVersionArn:ListBatchInferenceJobs'</a>,
--   <a>listBatchInferenceJobs_solutionVersionArn</a> - The Amazon Resource
--   Name (ARN) of the solution version from which the batch inference jobs
--   were created.
newListBatchInferenceJobs :: ListBatchInferenceJobs

-- | The token to request the next page of results.
listBatchInferenceJobs_nextToken :: Lens' ListBatchInferenceJobs (Maybe Text)

-- | The maximum number of batch inference job results to return in each
--   page. The default value is 100.
listBatchInferenceJobs_maxResults :: Lens' ListBatchInferenceJobs (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the solution version from which the
--   batch inference jobs were created.
listBatchInferenceJobs_solutionVersionArn :: Lens' ListBatchInferenceJobs (Maybe Text)

-- | <i>See:</i> <a>newListBatchInferenceJobsResponse</a> smart
--   constructor.
data ListBatchInferenceJobsResponse
ListBatchInferenceJobsResponse' :: Maybe [BatchInferenceJobSummary] -> Maybe Text -> Int -> ListBatchInferenceJobsResponse

-- | A list containing information on each job that is returned.
[$sel:batchInferenceJobs:ListBatchInferenceJobsResponse'] :: ListBatchInferenceJobsResponse -> Maybe [BatchInferenceJobSummary]

-- | The token to use to retrieve the next page of results. The value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListBatchInferenceJobsResponse'] :: ListBatchInferenceJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListBatchInferenceJobsResponse'] :: ListBatchInferenceJobsResponse -> Int

-- | Create a value of <a>ListBatchInferenceJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchInferenceJobs:ListBatchInferenceJobsResponse'</a>,
--   <a>listBatchInferenceJobsResponse_batchInferenceJobs</a> - A list
--   containing information on each job that is returned.
--   
--   <a>$sel:nextToken:ListBatchInferenceJobs'</a>,
--   <a>listBatchInferenceJobsResponse_nextToken</a> - The token to use to
--   retrieve the next page of results. The value is <tt>null</tt> when
--   there are no more results to return.
--   
--   <a>$sel:httpStatus:ListBatchInferenceJobsResponse'</a>,
--   <a>listBatchInferenceJobsResponse_httpStatus</a> - The response's http
--   status code.
newListBatchInferenceJobsResponse :: Int -> ListBatchInferenceJobsResponse

-- | A list containing information on each job that is returned.
listBatchInferenceJobsResponse_batchInferenceJobs :: Lens' ListBatchInferenceJobsResponse (Maybe [BatchInferenceJobSummary])

-- | The token to use to retrieve the next page of results. The value is
--   <tt>null</tt> when there are no more results to return.
listBatchInferenceJobsResponse_nextToken :: Lens' ListBatchInferenceJobsResponse (Maybe Text)

-- | The response's http status code.
listBatchInferenceJobsResponse_httpStatus :: Lens' ListBatchInferenceJobsResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobs
instance GHC.Show.Show Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobs
instance GHC.Read.Read Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobs
instance GHC.Classes.Eq Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobs
instance GHC.Generics.Generic Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobsResponse
instance GHC.Show.Show Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobsResponse
instance GHC.Read.Read Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobsResponse
instance GHC.Classes.Eq Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobs
instance Control.DeepSeq.NFData Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobsResponse
instance Amazonka.Pager.AWSPager Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobs
instance Data.Hashable.Class.Hashable Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobs
instance Control.DeepSeq.NFData Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobs
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobs
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.ListBatchInferenceJobs.ListBatchInferenceJobs


-- | Gets the metrics for the specified solution version.
module Amazonka.Personalize.GetSolutionMetrics

-- | <i>See:</i> <a>newGetSolutionMetrics</a> smart constructor.
data GetSolutionMetrics
GetSolutionMetrics' :: Text -> GetSolutionMetrics

-- | The Amazon Resource Name (ARN) of the solution version for which to
--   get metrics.
[$sel:solutionVersionArn:GetSolutionMetrics'] :: GetSolutionMetrics -> Text

-- | Create a value of <a>GetSolutionMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionVersionArn:GetSolutionMetrics'</a>,
--   <a>getSolutionMetrics_solutionVersionArn</a> - The Amazon Resource
--   Name (ARN) of the solution version for which to get metrics.
newGetSolutionMetrics :: Text -> GetSolutionMetrics

-- | The Amazon Resource Name (ARN) of the solution version for which to
--   get metrics.
getSolutionMetrics_solutionVersionArn :: Lens' GetSolutionMetrics Text

-- | <i>See:</i> <a>newGetSolutionMetricsResponse</a> smart constructor.
data GetSolutionMetricsResponse
GetSolutionMetricsResponse' :: Maybe (HashMap Text Double) -> Maybe Text -> Int -> GetSolutionMetricsResponse

-- | The metrics for the solution version.
[$sel:metrics:GetSolutionMetricsResponse'] :: GetSolutionMetricsResponse -> Maybe (HashMap Text Double)

-- | The same solution version ARN as specified in the request.
[$sel:solutionVersionArn:GetSolutionMetricsResponse'] :: GetSolutionMetricsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSolutionMetricsResponse'] :: GetSolutionMetricsResponse -> Int

-- | Create a value of <a>GetSolutionMetricsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metrics:GetSolutionMetricsResponse'</a>,
--   <a>getSolutionMetricsResponse_metrics</a> - The metrics for the
--   solution version.
--   
--   <a>$sel:solutionVersionArn:GetSolutionMetrics'</a>,
--   <a>getSolutionMetricsResponse_solutionVersionArn</a> - The same
--   solution version ARN as specified in the request.
--   
--   <a>$sel:httpStatus:GetSolutionMetricsResponse'</a>,
--   <a>getSolutionMetricsResponse_httpStatus</a> - The response's http
--   status code.
newGetSolutionMetricsResponse :: Int -> GetSolutionMetricsResponse

-- | The metrics for the solution version.
getSolutionMetricsResponse_metrics :: Lens' GetSolutionMetricsResponse (Maybe (HashMap Text Double))

-- | The same solution version ARN as specified in the request.
getSolutionMetricsResponse_solutionVersionArn :: Lens' GetSolutionMetricsResponse (Maybe Text)

-- | The response's http status code.
getSolutionMetricsResponse_httpStatus :: Lens' GetSolutionMetricsResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetrics
instance GHC.Show.Show Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetrics
instance GHC.Read.Read Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetrics
instance GHC.Classes.Eq Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetrics
instance GHC.Generics.Generic Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetricsResponse
instance GHC.Show.Show Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetricsResponse
instance GHC.Read.Read Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetricsResponse
instance GHC.Classes.Eq Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetricsResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetrics
instance Control.DeepSeq.NFData Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetricsResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetrics
instance Control.DeepSeq.NFData Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetrics
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetrics
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetrics
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetrics
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.GetSolutionMetrics.GetSolutionMetrics


-- | Describes a specific version of a solution. For more information on
--   solutions, see CreateSolution.
module Amazonka.Personalize.DescribeSolutionVersion

-- | <i>See:</i> <a>newDescribeSolutionVersion</a> smart constructor.
data DescribeSolutionVersion
DescribeSolutionVersion' :: Text -> DescribeSolutionVersion

-- | The Amazon Resource Name (ARN) of the solution version.
[$sel:solutionVersionArn:DescribeSolutionVersion'] :: DescribeSolutionVersion -> Text

-- | Create a value of <a>DescribeSolutionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionVersionArn:DescribeSolutionVersion'</a>,
--   <a>describeSolutionVersion_solutionVersionArn</a> - The Amazon
--   Resource Name (ARN) of the solution version.
newDescribeSolutionVersion :: Text -> DescribeSolutionVersion

-- | The Amazon Resource Name (ARN) of the solution version.
describeSolutionVersion_solutionVersionArn :: Lens' DescribeSolutionVersion Text

-- | <i>See:</i> <a>newDescribeSolutionVersionResponse</a> smart
--   constructor.
data DescribeSolutionVersionResponse
DescribeSolutionVersionResponse' :: Maybe SolutionVersion -> Int -> DescribeSolutionVersionResponse

-- | The solution version.
[$sel:solutionVersion:DescribeSolutionVersionResponse'] :: DescribeSolutionVersionResponse -> Maybe SolutionVersion

-- | The response's http status code.
[$sel:httpStatus:DescribeSolutionVersionResponse'] :: DescribeSolutionVersionResponse -> Int

-- | Create a value of <a>DescribeSolutionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionVersion:DescribeSolutionVersionResponse'</a>,
--   <a>describeSolutionVersionResponse_solutionVersion</a> - The solution
--   version.
--   
--   <a>$sel:httpStatus:DescribeSolutionVersionResponse'</a>,
--   <a>describeSolutionVersionResponse_httpStatus</a> - The response's
--   http status code.
newDescribeSolutionVersionResponse :: Int -> DescribeSolutionVersionResponse

-- | The solution version.
describeSolutionVersionResponse_solutionVersion :: Lens' DescribeSolutionVersionResponse (Maybe SolutionVersion)

-- | The response's http status code.
describeSolutionVersionResponse_httpStatus :: Lens' DescribeSolutionVersionResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersion
instance GHC.Show.Show Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersion
instance GHC.Read.Read Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersion
instance GHC.Classes.Eq Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersion
instance GHC.Generics.Generic Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersionResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersionResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersionResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersion
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersion
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersion
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersion
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeSolutionVersion.DescribeSolutionVersion


-- | Describes a solution. For more information on solutions, see
--   CreateSolution.
module Amazonka.Personalize.DescribeSolution

-- | <i>See:</i> <a>newDescribeSolution</a> smart constructor.
data DescribeSolution
DescribeSolution' :: Text -> DescribeSolution

-- | The Amazon Resource Name (ARN) of the solution to describe.
[$sel:solutionArn:DescribeSolution'] :: DescribeSolution -> Text

-- | Create a value of <a>DescribeSolution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:DescribeSolution'</a>,
--   <a>describeSolution_solutionArn</a> - The Amazon Resource Name (ARN)
--   of the solution to describe.
newDescribeSolution :: Text -> DescribeSolution

-- | The Amazon Resource Name (ARN) of the solution to describe.
describeSolution_solutionArn :: Lens' DescribeSolution Text

-- | <i>See:</i> <a>newDescribeSolutionResponse</a> smart constructor.
data DescribeSolutionResponse
DescribeSolutionResponse' :: Maybe Solution -> Int -> DescribeSolutionResponse

-- | An object that describes the solution.
[$sel:solution:DescribeSolutionResponse'] :: DescribeSolutionResponse -> Maybe Solution

-- | The response's http status code.
[$sel:httpStatus:DescribeSolutionResponse'] :: DescribeSolutionResponse -> Int

-- | Create a value of <a>DescribeSolutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solution:DescribeSolutionResponse'</a>,
--   <a>describeSolutionResponse_solution</a> - An object that describes
--   the solution.
--   
--   <a>$sel:httpStatus:DescribeSolutionResponse'</a>,
--   <a>describeSolutionResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSolutionResponse :: Int -> DescribeSolutionResponse

-- | An object that describes the solution.
describeSolutionResponse_solution :: Lens' DescribeSolutionResponse (Maybe Solution)

-- | The response's http status code.
describeSolutionResponse_httpStatus :: Lens' DescribeSolutionResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeSolution.DescribeSolution
instance GHC.Show.Show Amazonka.Personalize.DescribeSolution.DescribeSolution
instance GHC.Read.Read Amazonka.Personalize.DescribeSolution.DescribeSolution
instance GHC.Classes.Eq Amazonka.Personalize.DescribeSolution.DescribeSolution
instance GHC.Generics.Generic Amazonka.Personalize.DescribeSolution.DescribeSolutionResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeSolution.DescribeSolutionResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeSolution.DescribeSolutionResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeSolution.DescribeSolutionResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeSolution.DescribeSolution
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeSolution.DescribeSolutionResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeSolution.DescribeSolution
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeSolution.DescribeSolution
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeSolution.DescribeSolution
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeSolution.DescribeSolution
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeSolution.DescribeSolution
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeSolution.DescribeSolution


-- | Describes a schema. For more information on schemas, see CreateSchema.
module Amazonka.Personalize.DescribeSchema

-- | <i>See:</i> <a>newDescribeSchema</a> smart constructor.
data DescribeSchema
DescribeSchema' :: Text -> DescribeSchema

-- | The Amazon Resource Name (ARN) of the schema to retrieve.
[$sel:schemaArn:DescribeSchema'] :: DescribeSchema -> Text

-- | Create a value of <a>DescribeSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:DescribeSchema'</a>, <a>describeSchema_schemaArn</a>
--   - The Amazon Resource Name (ARN) of the schema to retrieve.
newDescribeSchema :: Text -> DescribeSchema

-- | The Amazon Resource Name (ARN) of the schema to retrieve.
describeSchema_schemaArn :: Lens' DescribeSchema Text

-- | <i>See:</i> <a>newDescribeSchemaResponse</a> smart constructor.
data DescribeSchemaResponse
DescribeSchemaResponse' :: Maybe DatasetSchema -> Int -> DescribeSchemaResponse

-- | The requested schema.
[$sel:schema:DescribeSchemaResponse'] :: DescribeSchemaResponse -> Maybe DatasetSchema

-- | The response's http status code.
[$sel:httpStatus:DescribeSchemaResponse'] :: DescribeSchemaResponse -> Int

-- | Create a value of <a>DescribeSchemaResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:DescribeSchemaResponse'</a>,
--   <a>describeSchemaResponse_schema</a> - The requested schema.
--   
--   <a>$sel:httpStatus:DescribeSchemaResponse'</a>,
--   <a>describeSchemaResponse_httpStatus</a> - The response's http status
--   code.
newDescribeSchemaResponse :: Int -> DescribeSchemaResponse

-- | The requested schema.
describeSchemaResponse_schema :: Lens' DescribeSchemaResponse (Maybe DatasetSchema)

-- | The response's http status code.
describeSchemaResponse_httpStatus :: Lens' DescribeSchemaResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeSchema.DescribeSchema
instance GHC.Show.Show Amazonka.Personalize.DescribeSchema.DescribeSchema
instance GHC.Read.Read Amazonka.Personalize.DescribeSchema.DescribeSchema
instance GHC.Classes.Eq Amazonka.Personalize.DescribeSchema.DescribeSchema
instance GHC.Generics.Generic Amazonka.Personalize.DescribeSchema.DescribeSchemaResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeSchema.DescribeSchemaResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeSchema.DescribeSchemaResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeSchema.DescribeSchemaResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeSchema.DescribeSchema
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeSchema.DescribeSchemaResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeSchema.DescribeSchema
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeSchema.DescribeSchema
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeSchema.DescribeSchema
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeSchema.DescribeSchema
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeSchema.DescribeSchema
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeSchema.DescribeSchema


-- | Describes a recipe.
--   
--   A recipe contains three items:
--   
--   <ul>
--   <li>An algorithm that trains a model.</li>
--   <li>Hyperparameters that govern the training.</li>
--   <li>Feature transformation information for modifying the input data
--   before training.</li>
--   </ul>
--   
--   Amazon Personalize provides a set of predefined recipes. You specify a
--   recipe when you create a solution with the CreateSolution API.
--   <tt>CreateSolution</tt> trains a model by using the algorithm in the
--   specified recipe and a training dataset. The solution, when deployed
--   as a campaign, can provide recommendations using the
--   <a>GetRecommendations</a> API.
module Amazonka.Personalize.DescribeRecipe

-- | <i>See:</i> <a>newDescribeRecipe</a> smart constructor.
data DescribeRecipe
DescribeRecipe' :: Text -> DescribeRecipe

-- | The Amazon Resource Name (ARN) of the recipe to describe.
[$sel:recipeArn:DescribeRecipe'] :: DescribeRecipe -> Text

-- | Create a value of <a>DescribeRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeArn:DescribeRecipe'</a>, <a>describeRecipe_recipeArn</a>
--   - The Amazon Resource Name (ARN) of the recipe to describe.
newDescribeRecipe :: Text -> DescribeRecipe

-- | The Amazon Resource Name (ARN) of the recipe to describe.
describeRecipe_recipeArn :: Lens' DescribeRecipe Text

-- | <i>See:</i> <a>newDescribeRecipeResponse</a> smart constructor.
data DescribeRecipeResponse
DescribeRecipeResponse' :: Maybe Recipe -> Int -> DescribeRecipeResponse

-- | An object that describes the recipe.
[$sel:recipe:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Maybe Recipe

-- | The response's http status code.
[$sel:httpStatus:DescribeRecipeResponse'] :: DescribeRecipeResponse -> Int

-- | Create a value of <a>DescribeRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipe:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_recipe</a> - An object that describes the
--   recipe.
--   
--   <a>$sel:httpStatus:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_httpStatus</a> - The response's http status
--   code.
newDescribeRecipeResponse :: Int -> DescribeRecipeResponse

-- | An object that describes the recipe.
describeRecipeResponse_recipe :: Lens' DescribeRecipeResponse (Maybe Recipe)

-- | The response's http status code.
describeRecipeResponse_httpStatus :: Lens' DescribeRecipeResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeRecipe.DescribeRecipe
instance GHC.Show.Show Amazonka.Personalize.DescribeRecipe.DescribeRecipe
instance GHC.Read.Read Amazonka.Personalize.DescribeRecipe.DescribeRecipe
instance GHC.Classes.Eq Amazonka.Personalize.DescribeRecipe.DescribeRecipe
instance GHC.Generics.Generic Amazonka.Personalize.DescribeRecipe.DescribeRecipeResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeRecipe.DescribeRecipeResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeRecipe.DescribeRecipeResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeRecipe.DescribeRecipeResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeRecipe.DescribeRecipe
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeRecipe.DescribeRecipeResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeRecipe.DescribeRecipe
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeRecipe.DescribeRecipe
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeRecipe.DescribeRecipe
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeRecipe.DescribeRecipe
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeRecipe.DescribeRecipe
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeRecipe.DescribeRecipe


-- | Describes a filter's properties.
module Amazonka.Personalize.DescribeFilter

-- | <i>See:</i> <a>newDescribeFilter</a> smart constructor.
data DescribeFilter
DescribeFilter' :: Text -> DescribeFilter

-- | The ARN of the filter to describe.
[$sel:filterArn:DescribeFilter'] :: DescribeFilter -> Text

-- | Create a value of <a>DescribeFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterArn:DescribeFilter'</a>, <a>describeFilter_filterArn</a>
--   - The ARN of the filter to describe.
newDescribeFilter :: Text -> DescribeFilter

-- | The ARN of the filter to describe.
describeFilter_filterArn :: Lens' DescribeFilter Text

-- | <i>See:</i> <a>newDescribeFilterResponse</a> smart constructor.
data DescribeFilterResponse
DescribeFilterResponse' :: Maybe Filter -> Int -> DescribeFilterResponse

-- | The filter's details.
[$sel:filter':DescribeFilterResponse'] :: DescribeFilterResponse -> Maybe Filter

-- | The response's http status code.
[$sel:httpStatus:DescribeFilterResponse'] :: DescribeFilterResponse -> Int

-- | Create a value of <a>DescribeFilterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filter':DescribeFilterResponse'</a>,
--   <a>describeFilterResponse_filter</a> - The filter's details.
--   
--   <a>$sel:httpStatus:DescribeFilterResponse'</a>,
--   <a>describeFilterResponse_httpStatus</a> - The response's http status
--   code.
newDescribeFilterResponse :: Int -> DescribeFilterResponse

-- | The filter's details.
describeFilterResponse_filter :: Lens' DescribeFilterResponse (Maybe Filter)

-- | The response's http status code.
describeFilterResponse_httpStatus :: Lens' DescribeFilterResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeFilter.DescribeFilter
instance GHC.Show.Show Amazonka.Personalize.DescribeFilter.DescribeFilter
instance GHC.Read.Read Amazonka.Personalize.DescribeFilter.DescribeFilter
instance GHC.Classes.Eq Amazonka.Personalize.DescribeFilter.DescribeFilter
instance GHC.Generics.Generic Amazonka.Personalize.DescribeFilter.DescribeFilterResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeFilter.DescribeFilterResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeFilter.DescribeFilterResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeFilter.DescribeFilter
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeFilter.DescribeFilterResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeFilter.DescribeFilter
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeFilter.DescribeFilter
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeFilter.DescribeFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeFilter.DescribeFilter
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeFilter.DescribeFilter
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeFilter.DescribeFilter


-- | Describes the given feature transformation.
module Amazonka.Personalize.DescribeFeatureTransformation

-- | <i>See:</i> <a>newDescribeFeatureTransformation</a> smart constructor.
data DescribeFeatureTransformation
DescribeFeatureTransformation' :: Text -> DescribeFeatureTransformation

-- | The Amazon Resource Name (ARN) of the feature transformation to
--   describe.
[$sel:featureTransformationArn:DescribeFeatureTransformation'] :: DescribeFeatureTransformation -> Text

-- | Create a value of <a>DescribeFeatureTransformation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:featureTransformationArn:DescribeFeatureTransformation'</a>,
--   <a>describeFeatureTransformation_featureTransformationArn</a> - The
--   Amazon Resource Name (ARN) of the feature transformation to describe.
newDescribeFeatureTransformation :: Text -> DescribeFeatureTransformation

-- | The Amazon Resource Name (ARN) of the feature transformation to
--   describe.
describeFeatureTransformation_featureTransformationArn :: Lens' DescribeFeatureTransformation Text

-- | <i>See:</i> <a>newDescribeFeatureTransformationResponse</a> smart
--   constructor.
data DescribeFeatureTransformationResponse
DescribeFeatureTransformationResponse' :: Maybe FeatureTransformation -> Int -> DescribeFeatureTransformationResponse

-- | A listing of the FeatureTransformation properties.
[$sel:featureTransformation:DescribeFeatureTransformationResponse'] :: DescribeFeatureTransformationResponse -> Maybe FeatureTransformation

-- | The response's http status code.
[$sel:httpStatus:DescribeFeatureTransformationResponse'] :: DescribeFeatureTransformationResponse -> Int

-- | Create a value of <a>DescribeFeatureTransformationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:featureTransformation:DescribeFeatureTransformationResponse'</a>,
--   <a>describeFeatureTransformationResponse_featureTransformation</a> - A
--   listing of the FeatureTransformation properties.
--   
--   <a>$sel:httpStatus:DescribeFeatureTransformationResponse'</a>,
--   <a>describeFeatureTransformationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeFeatureTransformationResponse :: Int -> DescribeFeatureTransformationResponse

-- | A listing of the FeatureTransformation properties.
describeFeatureTransformationResponse_featureTransformation :: Lens' DescribeFeatureTransformationResponse (Maybe FeatureTransformation)

-- | The response's http status code.
describeFeatureTransformationResponse_httpStatus :: Lens' DescribeFeatureTransformationResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformation
instance GHC.Show.Show Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformation
instance GHC.Read.Read Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformation
instance GHC.Classes.Eq Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformation
instance GHC.Generics.Generic Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformationResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformationResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformationResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformationResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformation
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformationResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformation
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformation
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformation
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformation
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeFeatureTransformation.DescribeFeatureTransformation


-- | Describes an event tracker. The response includes the
--   <tt>trackingId</tt> and <tt>status</tt> of the event tracker. For more
--   information on event trackers, see CreateEventTracker.
module Amazonka.Personalize.DescribeEventTracker

-- | <i>See:</i> <a>newDescribeEventTracker</a> smart constructor.
data DescribeEventTracker
DescribeEventTracker' :: Text -> DescribeEventTracker

-- | The Amazon Resource Name (ARN) of the event tracker to describe.
[$sel:eventTrackerArn:DescribeEventTracker'] :: DescribeEventTracker -> Text

-- | Create a value of <a>DescribeEventTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTrackerArn:DescribeEventTracker'</a>,
--   <a>describeEventTracker_eventTrackerArn</a> - The Amazon Resource Name
--   (ARN) of the event tracker to describe.
newDescribeEventTracker :: Text -> DescribeEventTracker

-- | The Amazon Resource Name (ARN) of the event tracker to describe.
describeEventTracker_eventTrackerArn :: Lens' DescribeEventTracker Text

-- | <i>See:</i> <a>newDescribeEventTrackerResponse</a> smart constructor.
data DescribeEventTrackerResponse
DescribeEventTrackerResponse' :: Maybe EventTracker -> Int -> DescribeEventTrackerResponse

-- | An object that describes the event tracker.
[$sel:eventTracker:DescribeEventTrackerResponse'] :: DescribeEventTrackerResponse -> Maybe EventTracker

-- | The response's http status code.
[$sel:httpStatus:DescribeEventTrackerResponse'] :: DescribeEventTrackerResponse -> Int

-- | Create a value of <a>DescribeEventTrackerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTracker:DescribeEventTrackerResponse'</a>,
--   <a>describeEventTrackerResponse_eventTracker</a> - An object that
--   describes the event tracker.
--   
--   <a>$sel:httpStatus:DescribeEventTrackerResponse'</a>,
--   <a>describeEventTrackerResponse_httpStatus</a> - The response's http
--   status code.
newDescribeEventTrackerResponse :: Int -> DescribeEventTrackerResponse

-- | An object that describes the event tracker.
describeEventTrackerResponse_eventTracker :: Lens' DescribeEventTrackerResponse (Maybe EventTracker)

-- | The response's http status code.
describeEventTrackerResponse_httpStatus :: Lens' DescribeEventTrackerResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeEventTracker.DescribeEventTracker
instance GHC.Show.Show Amazonka.Personalize.DescribeEventTracker.DescribeEventTracker
instance GHC.Read.Read Amazonka.Personalize.DescribeEventTracker.DescribeEventTracker
instance GHC.Classes.Eq Amazonka.Personalize.DescribeEventTracker.DescribeEventTracker
instance GHC.Generics.Generic Amazonka.Personalize.DescribeEventTracker.DescribeEventTrackerResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeEventTracker.DescribeEventTrackerResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeEventTracker.DescribeEventTrackerResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeEventTracker.DescribeEventTrackerResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeEventTracker.DescribeEventTracker
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeEventTracker.DescribeEventTrackerResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeEventTracker.DescribeEventTracker
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeEventTracker.DescribeEventTracker
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeEventTracker.DescribeEventTracker
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeEventTracker.DescribeEventTracker
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeEventTracker.DescribeEventTracker
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeEventTracker.DescribeEventTracker


-- | Describes the dataset import job created by CreateDatasetImportJob,
--   including the import job status.
module Amazonka.Personalize.DescribeDatasetImportJob

-- | <i>See:</i> <a>newDescribeDatasetImportJob</a> smart constructor.
data DescribeDatasetImportJob
DescribeDatasetImportJob' :: Text -> DescribeDatasetImportJob

-- | The Amazon Resource Name (ARN) of the dataset import job to describe.
[$sel:datasetImportJobArn:DescribeDatasetImportJob'] :: DescribeDatasetImportJob -> Text

-- | Create a value of <a>DescribeDatasetImportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetImportJobArn:DescribeDatasetImportJob'</a>,
--   <a>describeDatasetImportJob_datasetImportJobArn</a> - The Amazon
--   Resource Name (ARN) of the dataset import job to describe.
newDescribeDatasetImportJob :: Text -> DescribeDatasetImportJob

-- | The Amazon Resource Name (ARN) of the dataset import job to describe.
describeDatasetImportJob_datasetImportJobArn :: Lens' DescribeDatasetImportJob Text

-- | <i>See:</i> <a>newDescribeDatasetImportJobResponse</a> smart
--   constructor.
data DescribeDatasetImportJobResponse
DescribeDatasetImportJobResponse' :: Maybe DatasetImportJob -> Int -> DescribeDatasetImportJobResponse

-- | Information about the dataset import job, including the status.
--   
--   The status is one of the following values:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
[$sel:datasetImportJob:DescribeDatasetImportJobResponse'] :: DescribeDatasetImportJobResponse -> Maybe DatasetImportJob

-- | The response's http status code.
[$sel:httpStatus:DescribeDatasetImportJobResponse'] :: DescribeDatasetImportJobResponse -> Int

-- | Create a value of <a>DescribeDatasetImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetImportJob:DescribeDatasetImportJobResponse'</a>,
--   <a>describeDatasetImportJobResponse_datasetImportJob</a> - Information
--   about the dataset import job, including the status.
--   
--   The status is one of the following values:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DescribeDatasetImportJobResponse'</a>,
--   <a>describeDatasetImportJobResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDatasetImportJobResponse :: Int -> DescribeDatasetImportJobResponse

-- | Information about the dataset import job, including the status.
--   
--   The status is one of the following values:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
describeDatasetImportJobResponse_datasetImportJob :: Lens' DescribeDatasetImportJobResponse (Maybe DatasetImportJob)

-- | The response's http status code.
describeDatasetImportJobResponse_httpStatus :: Lens' DescribeDatasetImportJobResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJob
instance GHC.Show.Show Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJob
instance GHC.Read.Read Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJob
instance GHC.Classes.Eq Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJob
instance GHC.Generics.Generic Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJobResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJobResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJobResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJob
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJob
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJob
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJob
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeDatasetImportJob.DescribeDatasetImportJob


-- | Describes the given dataset group. For more information on dataset
--   groups, see CreateDatasetGroup.
module Amazonka.Personalize.DescribeDatasetGroup

-- | <i>See:</i> <a>newDescribeDatasetGroup</a> smart constructor.
data DescribeDatasetGroup
DescribeDatasetGroup' :: Text -> DescribeDatasetGroup

-- | The Amazon Resource Name (ARN) of the dataset group to describe.
[$sel:datasetGroupArn:DescribeDatasetGroup'] :: DescribeDatasetGroup -> Text

-- | Create a value of <a>DescribeDatasetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetGroupArn:DescribeDatasetGroup'</a>,
--   <a>describeDatasetGroup_datasetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the dataset group to describe.
newDescribeDatasetGroup :: Text -> DescribeDatasetGroup

-- | The Amazon Resource Name (ARN) of the dataset group to describe.
describeDatasetGroup_datasetGroupArn :: Lens' DescribeDatasetGroup Text

-- | <i>See:</i> <a>newDescribeDatasetGroupResponse</a> smart constructor.
data DescribeDatasetGroupResponse
DescribeDatasetGroupResponse' :: Maybe DatasetGroup -> Int -> DescribeDatasetGroupResponse

-- | A listing of the dataset group's properties.
[$sel:datasetGroup:DescribeDatasetGroupResponse'] :: DescribeDatasetGroupResponse -> Maybe DatasetGroup

-- | The response's http status code.
[$sel:httpStatus:DescribeDatasetGroupResponse'] :: DescribeDatasetGroupResponse -> Int

-- | Create a value of <a>DescribeDatasetGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetGroup:DescribeDatasetGroupResponse'</a>,
--   <a>describeDatasetGroupResponse_datasetGroup</a> - A listing of the
--   dataset group's properties.
--   
--   <a>$sel:httpStatus:DescribeDatasetGroupResponse'</a>,
--   <a>describeDatasetGroupResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDatasetGroupResponse :: Int -> DescribeDatasetGroupResponse

-- | A listing of the dataset group's properties.
describeDatasetGroupResponse_datasetGroup :: Lens' DescribeDatasetGroupResponse (Maybe DatasetGroup)

-- | The response's http status code.
describeDatasetGroupResponse_httpStatus :: Lens' DescribeDatasetGroupResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroup
instance GHC.Show.Show Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroup
instance GHC.Read.Read Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroup
instance GHC.Classes.Eq Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroup
instance GHC.Generics.Generic Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroupResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroupResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroupResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroup
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroup
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroup
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroup
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeDatasetGroup.DescribeDatasetGroup


-- | Describes the dataset export job created by CreateDatasetExportJob,
--   including the export job status.
module Amazonka.Personalize.DescribeDatasetExportJob

-- | <i>See:</i> <a>newDescribeDatasetExportJob</a> smart constructor.
data DescribeDatasetExportJob
DescribeDatasetExportJob' :: Text -> DescribeDatasetExportJob

-- | The Amazon Resource Name (ARN) of the dataset export job to describe.
[$sel:datasetExportJobArn:DescribeDatasetExportJob'] :: DescribeDatasetExportJob -> Text

-- | Create a value of <a>DescribeDatasetExportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetExportJobArn:DescribeDatasetExportJob'</a>,
--   <a>describeDatasetExportJob_datasetExportJobArn</a> - The Amazon
--   Resource Name (ARN) of the dataset export job to describe.
newDescribeDatasetExportJob :: Text -> DescribeDatasetExportJob

-- | The Amazon Resource Name (ARN) of the dataset export job to describe.
describeDatasetExportJob_datasetExportJobArn :: Lens' DescribeDatasetExportJob Text

-- | <i>See:</i> <a>newDescribeDatasetExportJobResponse</a> smart
--   constructor.
data DescribeDatasetExportJobResponse
DescribeDatasetExportJobResponse' :: Maybe DatasetExportJob -> Int -> DescribeDatasetExportJobResponse

-- | Information about the dataset export job, including the status.
--   
--   The status is one of the following values:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
[$sel:datasetExportJob:DescribeDatasetExportJobResponse'] :: DescribeDatasetExportJobResponse -> Maybe DatasetExportJob

-- | The response's http status code.
[$sel:httpStatus:DescribeDatasetExportJobResponse'] :: DescribeDatasetExportJobResponse -> Int

-- | Create a value of <a>DescribeDatasetExportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetExportJob:DescribeDatasetExportJobResponse'</a>,
--   <a>describeDatasetExportJobResponse_datasetExportJob</a> - Information
--   about the dataset export job, including the status.
--   
--   The status is one of the following values:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DescribeDatasetExportJobResponse'</a>,
--   <a>describeDatasetExportJobResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDatasetExportJobResponse :: Int -> DescribeDatasetExportJobResponse

-- | Information about the dataset export job, including the status.
--   
--   The status is one of the following values:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
describeDatasetExportJobResponse_datasetExportJob :: Lens' DescribeDatasetExportJobResponse (Maybe DatasetExportJob)

-- | The response's http status code.
describeDatasetExportJobResponse_httpStatus :: Lens' DescribeDatasetExportJobResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJob
instance GHC.Show.Show Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJob
instance GHC.Read.Read Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJob
instance GHC.Classes.Eq Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJob
instance GHC.Generics.Generic Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJobResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJobResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJobResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJob
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJob
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJob
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJob
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeDatasetExportJob.DescribeDatasetExportJob


-- | Describes the given dataset. For more information on datasets, see
--   CreateDataset.
module Amazonka.Personalize.DescribeDataset

-- | <i>See:</i> <a>newDescribeDataset</a> smart constructor.
data DescribeDataset
DescribeDataset' :: Text -> DescribeDataset

-- | The Amazon Resource Name (ARN) of the dataset to describe.
[$sel:datasetArn:DescribeDataset'] :: DescribeDataset -> Text

-- | Create a value of <a>DescribeDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetArn:DescribeDataset'</a>,
--   <a>describeDataset_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the dataset to describe.
newDescribeDataset :: Text -> DescribeDataset

-- | The Amazon Resource Name (ARN) of the dataset to describe.
describeDataset_datasetArn :: Lens' DescribeDataset Text

-- | <i>See:</i> <a>newDescribeDatasetResponse</a> smart constructor.
data DescribeDatasetResponse
DescribeDatasetResponse' :: Maybe Dataset -> Int -> DescribeDatasetResponse

-- | A listing of the dataset's properties.
[$sel:dataset:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe Dataset

-- | The response's http status code.
[$sel:httpStatus:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Int

-- | Create a value of <a>DescribeDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataset:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_dataset</a> - A listing of the dataset's
--   properties.
--   
--   <a>$sel:httpStatus:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDatasetResponse :: Int -> DescribeDatasetResponse

-- | A listing of the dataset's properties.
describeDatasetResponse_dataset :: Lens' DescribeDatasetResponse (Maybe Dataset)

-- | The response's http status code.
describeDatasetResponse_httpStatus :: Lens' DescribeDatasetResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeDataset.DescribeDataset
instance GHC.Show.Show Amazonka.Personalize.DescribeDataset.DescribeDataset
instance GHC.Read.Read Amazonka.Personalize.DescribeDataset.DescribeDataset
instance GHC.Classes.Eq Amazonka.Personalize.DescribeDataset.DescribeDataset
instance GHC.Generics.Generic Amazonka.Personalize.DescribeDataset.DescribeDatasetResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeDataset.DescribeDatasetResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeDataset.DescribeDatasetResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeDataset.DescribeDatasetResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeDataset.DescribeDataset
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeDataset.DescribeDatasetResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeDataset.DescribeDataset
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeDataset.DescribeDataset
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeDataset.DescribeDataset
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeDataset.DescribeDataset
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeDataset.DescribeDataset
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeDataset.DescribeDataset


-- | Describes the given campaign, including its status.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   When the <tt>status</tt> is <tt>CREATE FAILED</tt>, the response
--   includes the <tt>failureReason</tt> key, which describes why.
--   
--   For more information on campaigns, see CreateCampaign.
module Amazonka.Personalize.DescribeCampaign

-- | <i>See:</i> <a>newDescribeCampaign</a> smart constructor.
data DescribeCampaign
DescribeCampaign' :: Text -> DescribeCampaign

-- | The Amazon Resource Name (ARN) of the campaign.
[$sel:campaignArn:DescribeCampaign'] :: DescribeCampaign -> Text

-- | Create a value of <a>DescribeCampaign</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaignArn:DescribeCampaign'</a>,
--   <a>describeCampaign_campaignArn</a> - The Amazon Resource Name (ARN)
--   of the campaign.
newDescribeCampaign :: Text -> DescribeCampaign

-- | The Amazon Resource Name (ARN) of the campaign.
describeCampaign_campaignArn :: Lens' DescribeCampaign Text

-- | <i>See:</i> <a>newDescribeCampaignResponse</a> smart constructor.
data DescribeCampaignResponse
DescribeCampaignResponse' :: Maybe Campaign -> Int -> DescribeCampaignResponse

-- | The properties of the campaign.
[$sel:campaign:DescribeCampaignResponse'] :: DescribeCampaignResponse -> Maybe Campaign

-- | The response's http status code.
[$sel:httpStatus:DescribeCampaignResponse'] :: DescribeCampaignResponse -> Int

-- | Create a value of <a>DescribeCampaignResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaign:DescribeCampaignResponse'</a>,
--   <a>describeCampaignResponse_campaign</a> - The properties of the
--   campaign.
--   
--   <a>$sel:httpStatus:DescribeCampaignResponse'</a>,
--   <a>describeCampaignResponse_httpStatus</a> - The response's http
--   status code.
newDescribeCampaignResponse :: Int -> DescribeCampaignResponse

-- | The properties of the campaign.
describeCampaignResponse_campaign :: Lens' DescribeCampaignResponse (Maybe Campaign)

-- | The response's http status code.
describeCampaignResponse_httpStatus :: Lens' DescribeCampaignResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeCampaign.DescribeCampaign
instance GHC.Show.Show Amazonka.Personalize.DescribeCampaign.DescribeCampaign
instance GHC.Read.Read Amazonka.Personalize.DescribeCampaign.DescribeCampaign
instance GHC.Classes.Eq Amazonka.Personalize.DescribeCampaign.DescribeCampaign
instance GHC.Generics.Generic Amazonka.Personalize.DescribeCampaign.DescribeCampaignResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeCampaign.DescribeCampaignResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeCampaign.DescribeCampaignResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeCampaign.DescribeCampaignResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeCampaign.DescribeCampaign
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeCampaign.DescribeCampaignResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeCampaign.DescribeCampaign
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeCampaign.DescribeCampaign
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeCampaign.DescribeCampaign
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeCampaign.DescribeCampaign
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeCampaign.DescribeCampaign
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeCampaign.DescribeCampaign


-- | Gets the properties of a batch inference job including name, Amazon
--   Resource Name (ARN), status, input and output configurations, and the
--   ARN of the solution version used to generate the recommendations.
module Amazonka.Personalize.DescribeBatchInferenceJob

-- | <i>See:</i> <a>newDescribeBatchInferenceJob</a> smart constructor.
data DescribeBatchInferenceJob
DescribeBatchInferenceJob' :: Text -> DescribeBatchInferenceJob

-- | The ARN of the batch inference job to describe.
[$sel:batchInferenceJobArn:DescribeBatchInferenceJob'] :: DescribeBatchInferenceJob -> Text

-- | Create a value of <a>DescribeBatchInferenceJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchInferenceJobArn:DescribeBatchInferenceJob'</a>,
--   <a>describeBatchInferenceJob_batchInferenceJobArn</a> - The ARN of the
--   batch inference job to describe.
newDescribeBatchInferenceJob :: Text -> DescribeBatchInferenceJob

-- | The ARN of the batch inference job to describe.
describeBatchInferenceJob_batchInferenceJobArn :: Lens' DescribeBatchInferenceJob Text

-- | <i>See:</i> <a>newDescribeBatchInferenceJobResponse</a> smart
--   constructor.
data DescribeBatchInferenceJobResponse
DescribeBatchInferenceJobResponse' :: Maybe BatchInferenceJob -> Int -> DescribeBatchInferenceJobResponse

-- | Information on the specified batch inference job.
[$sel:batchInferenceJob:DescribeBatchInferenceJobResponse'] :: DescribeBatchInferenceJobResponse -> Maybe BatchInferenceJob

-- | The response's http status code.
[$sel:httpStatus:DescribeBatchInferenceJobResponse'] :: DescribeBatchInferenceJobResponse -> Int

-- | Create a value of <a>DescribeBatchInferenceJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchInferenceJob:DescribeBatchInferenceJobResponse'</a>,
--   <a>describeBatchInferenceJobResponse_batchInferenceJob</a> -
--   Information on the specified batch inference job.
--   
--   <a>$sel:httpStatus:DescribeBatchInferenceJobResponse'</a>,
--   <a>describeBatchInferenceJobResponse_httpStatus</a> - The response's
--   http status code.
newDescribeBatchInferenceJobResponse :: Int -> DescribeBatchInferenceJobResponse

-- | Information on the specified batch inference job.
describeBatchInferenceJobResponse_batchInferenceJob :: Lens' DescribeBatchInferenceJobResponse (Maybe BatchInferenceJob)

-- | The response's http status code.
describeBatchInferenceJobResponse_httpStatus :: Lens' DescribeBatchInferenceJobResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJob
instance GHC.Show.Show Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJob
instance GHC.Read.Read Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJob
instance GHC.Classes.Eq Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJob
instance GHC.Generics.Generic Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJobResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJobResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJobResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJob
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJob
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJob
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJob
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeBatchInferenceJob.DescribeBatchInferenceJob


-- | Describes the given algorithm.
module Amazonka.Personalize.DescribeAlgorithm

-- | <i>See:</i> <a>newDescribeAlgorithm</a> smart constructor.
data DescribeAlgorithm
DescribeAlgorithm' :: Text -> DescribeAlgorithm

-- | The Amazon Resource Name (ARN) of the algorithm to describe.
[$sel:algorithmArn:DescribeAlgorithm'] :: DescribeAlgorithm -> Text

-- | Create a value of <a>DescribeAlgorithm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithmArn:DescribeAlgorithm'</a>,
--   <a>describeAlgorithm_algorithmArn</a> - The Amazon Resource Name (ARN)
--   of the algorithm to describe.
newDescribeAlgorithm :: Text -> DescribeAlgorithm

-- | The Amazon Resource Name (ARN) of the algorithm to describe.
describeAlgorithm_algorithmArn :: Lens' DescribeAlgorithm Text

-- | <i>See:</i> <a>newDescribeAlgorithmResponse</a> smart constructor.
data DescribeAlgorithmResponse
DescribeAlgorithmResponse' :: Maybe Algorithm -> Int -> DescribeAlgorithmResponse

-- | A listing of the properties of the algorithm.
[$sel:algorithm:DescribeAlgorithmResponse'] :: DescribeAlgorithmResponse -> Maybe Algorithm

-- | The response's http status code.
[$sel:httpStatus:DescribeAlgorithmResponse'] :: DescribeAlgorithmResponse -> Int

-- | Create a value of <a>DescribeAlgorithmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithm:DescribeAlgorithmResponse'</a>,
--   <a>describeAlgorithmResponse_algorithm</a> - A listing of the
--   properties of the algorithm.
--   
--   <a>$sel:httpStatus:DescribeAlgorithmResponse'</a>,
--   <a>describeAlgorithmResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAlgorithmResponse :: Int -> DescribeAlgorithmResponse

-- | A listing of the properties of the algorithm.
describeAlgorithmResponse_algorithm :: Lens' DescribeAlgorithmResponse (Maybe Algorithm)

-- | The response's http status code.
describeAlgorithmResponse_httpStatus :: Lens' DescribeAlgorithmResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithm
instance GHC.Show.Show Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithm
instance GHC.Read.Read Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithm
instance GHC.Classes.Eq Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithm
instance GHC.Generics.Generic Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithmResponse
instance GHC.Show.Show Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithmResponse
instance GHC.Read.Read Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithmResponse
instance GHC.Classes.Eq Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithmResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithm
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithmResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithm
instance Control.DeepSeq.NFData Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithm
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithm
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithm
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithm
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DescribeAlgorithm.DescribeAlgorithm


-- | Deletes all versions of a solution and the <tt>Solution</tt> object
--   itself. Before deleting a solution, you must delete all campaigns
--   based on the solution. To determine what campaigns are using the
--   solution, call ListCampaigns and supply the Amazon Resource Name (ARN)
--   of the solution. You can't delete a solution if an associated
--   <tt>SolutionVersion</tt> is in the CREATE PENDING or IN PROGRESS
--   state. For more information on solutions, see CreateSolution.
module Amazonka.Personalize.DeleteSolution

-- | <i>See:</i> <a>newDeleteSolution</a> smart constructor.
data DeleteSolution
DeleteSolution' :: Text -> DeleteSolution

-- | The ARN of the solution to delete.
[$sel:solutionArn:DeleteSolution'] :: DeleteSolution -> Text

-- | Create a value of <a>DeleteSolution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:DeleteSolution'</a>,
--   <a>deleteSolution_solutionArn</a> - The ARN of the solution to delete.
newDeleteSolution :: Text -> DeleteSolution

-- | The ARN of the solution to delete.
deleteSolution_solutionArn :: Lens' DeleteSolution Text

-- | <i>See:</i> <a>newDeleteSolutionResponse</a> smart constructor.
data DeleteSolutionResponse
DeleteSolutionResponse' :: DeleteSolutionResponse

-- | Create a value of <a>DeleteSolutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSolutionResponse :: DeleteSolutionResponse
instance GHC.Generics.Generic Amazonka.Personalize.DeleteSolution.DeleteSolution
instance GHC.Show.Show Amazonka.Personalize.DeleteSolution.DeleteSolution
instance GHC.Read.Read Amazonka.Personalize.DeleteSolution.DeleteSolution
instance GHC.Classes.Eq Amazonka.Personalize.DeleteSolution.DeleteSolution
instance GHC.Generics.Generic Amazonka.Personalize.DeleteSolution.DeleteSolutionResponse
instance GHC.Show.Show Amazonka.Personalize.DeleteSolution.DeleteSolutionResponse
instance GHC.Read.Read Amazonka.Personalize.DeleteSolution.DeleteSolutionResponse
instance GHC.Classes.Eq Amazonka.Personalize.DeleteSolution.DeleteSolutionResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DeleteSolution.DeleteSolution
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteSolution.DeleteSolutionResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DeleteSolution.DeleteSolution
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteSolution.DeleteSolution
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DeleteSolution.DeleteSolution
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DeleteSolution.DeleteSolution
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DeleteSolution.DeleteSolution
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DeleteSolution.DeleteSolution


-- | Deletes a schema. Before deleting a schema, you must delete all
--   datasets referencing the schema. For more information on schemas, see
--   CreateSchema.
module Amazonka.Personalize.DeleteSchema

-- | <i>See:</i> <a>newDeleteSchema</a> smart constructor.
data DeleteSchema
DeleteSchema' :: Text -> DeleteSchema

-- | The Amazon Resource Name (ARN) of the schema to delete.
[$sel:schemaArn:DeleteSchema'] :: DeleteSchema -> Text

-- | Create a value of <a>DeleteSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:DeleteSchema'</a>, <a>deleteSchema_schemaArn</a> -
--   The Amazon Resource Name (ARN) of the schema to delete.
newDeleteSchema :: Text -> DeleteSchema

-- | The Amazon Resource Name (ARN) of the schema to delete.
deleteSchema_schemaArn :: Lens' DeleteSchema Text

-- | <i>See:</i> <a>newDeleteSchemaResponse</a> smart constructor.
data DeleteSchemaResponse
DeleteSchemaResponse' :: DeleteSchemaResponse

-- | Create a value of <a>DeleteSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSchemaResponse :: DeleteSchemaResponse
instance GHC.Generics.Generic Amazonka.Personalize.DeleteSchema.DeleteSchema
instance GHC.Show.Show Amazonka.Personalize.DeleteSchema.DeleteSchema
instance GHC.Read.Read Amazonka.Personalize.DeleteSchema.DeleteSchema
instance GHC.Classes.Eq Amazonka.Personalize.DeleteSchema.DeleteSchema
instance GHC.Generics.Generic Amazonka.Personalize.DeleteSchema.DeleteSchemaResponse
instance GHC.Show.Show Amazonka.Personalize.DeleteSchema.DeleteSchemaResponse
instance GHC.Read.Read Amazonka.Personalize.DeleteSchema.DeleteSchemaResponse
instance GHC.Classes.Eq Amazonka.Personalize.DeleteSchema.DeleteSchemaResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DeleteSchema.DeleteSchema
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteSchema.DeleteSchemaResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DeleteSchema.DeleteSchema
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteSchema.DeleteSchema
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DeleteSchema.DeleteSchema
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DeleteSchema.DeleteSchema
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DeleteSchema.DeleteSchema
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DeleteSchema.DeleteSchema


-- | Deletes a filter.
module Amazonka.Personalize.DeleteFilter

-- | <i>See:</i> <a>newDeleteFilter</a> smart constructor.
data DeleteFilter
DeleteFilter' :: Text -> DeleteFilter

-- | The ARN of the filter to delete.
[$sel:filterArn:DeleteFilter'] :: DeleteFilter -> Text

-- | Create a value of <a>DeleteFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterArn:DeleteFilter'</a>, <a>deleteFilter_filterArn</a> -
--   The ARN of the filter to delete.
newDeleteFilter :: Text -> DeleteFilter

-- | The ARN of the filter to delete.
deleteFilter_filterArn :: Lens' DeleteFilter Text

-- | <i>See:</i> <a>newDeleteFilterResponse</a> smart constructor.
data DeleteFilterResponse
DeleteFilterResponse' :: DeleteFilterResponse

-- | Create a value of <a>DeleteFilterResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFilterResponse :: DeleteFilterResponse
instance GHC.Generics.Generic Amazonka.Personalize.DeleteFilter.DeleteFilter
instance GHC.Show.Show Amazonka.Personalize.DeleteFilter.DeleteFilter
instance GHC.Read.Read Amazonka.Personalize.DeleteFilter.DeleteFilter
instance GHC.Classes.Eq Amazonka.Personalize.DeleteFilter.DeleteFilter
instance GHC.Generics.Generic Amazonka.Personalize.DeleteFilter.DeleteFilterResponse
instance GHC.Show.Show Amazonka.Personalize.DeleteFilter.DeleteFilterResponse
instance GHC.Read.Read Amazonka.Personalize.DeleteFilter.DeleteFilterResponse
instance GHC.Classes.Eq Amazonka.Personalize.DeleteFilter.DeleteFilterResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DeleteFilter.DeleteFilter
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteFilter.DeleteFilterResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DeleteFilter.DeleteFilter
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteFilter.DeleteFilter
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DeleteFilter.DeleteFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DeleteFilter.DeleteFilter
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DeleteFilter.DeleteFilter
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DeleteFilter.DeleteFilter


-- | Deletes the event tracker. Does not delete the event-interactions
--   dataset from the associated dataset group. For more information on
--   event trackers, see CreateEventTracker.
module Amazonka.Personalize.DeleteEventTracker

-- | <i>See:</i> <a>newDeleteEventTracker</a> smart constructor.
data DeleteEventTracker
DeleteEventTracker' :: Text -> DeleteEventTracker

-- | The Amazon Resource Name (ARN) of the event tracker to delete.
[$sel:eventTrackerArn:DeleteEventTracker'] :: DeleteEventTracker -> Text

-- | Create a value of <a>DeleteEventTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTrackerArn:DeleteEventTracker'</a>,
--   <a>deleteEventTracker_eventTrackerArn</a> - The Amazon Resource Name
--   (ARN) of the event tracker to delete.
newDeleteEventTracker :: Text -> DeleteEventTracker

-- | The Amazon Resource Name (ARN) of the event tracker to delete.
deleteEventTracker_eventTrackerArn :: Lens' DeleteEventTracker Text

-- | <i>See:</i> <a>newDeleteEventTrackerResponse</a> smart constructor.
data DeleteEventTrackerResponse
DeleteEventTrackerResponse' :: DeleteEventTrackerResponse

-- | Create a value of <a>DeleteEventTrackerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteEventTrackerResponse :: DeleteEventTrackerResponse
instance GHC.Generics.Generic Amazonka.Personalize.DeleteEventTracker.DeleteEventTracker
instance GHC.Show.Show Amazonka.Personalize.DeleteEventTracker.DeleteEventTracker
instance GHC.Read.Read Amazonka.Personalize.DeleteEventTracker.DeleteEventTracker
instance GHC.Classes.Eq Amazonka.Personalize.DeleteEventTracker.DeleteEventTracker
instance GHC.Generics.Generic Amazonka.Personalize.DeleteEventTracker.DeleteEventTrackerResponse
instance GHC.Show.Show Amazonka.Personalize.DeleteEventTracker.DeleteEventTrackerResponse
instance GHC.Read.Read Amazonka.Personalize.DeleteEventTracker.DeleteEventTrackerResponse
instance GHC.Classes.Eq Amazonka.Personalize.DeleteEventTracker.DeleteEventTrackerResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DeleteEventTracker.DeleteEventTracker
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteEventTracker.DeleteEventTrackerResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DeleteEventTracker.DeleteEventTracker
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteEventTracker.DeleteEventTracker
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DeleteEventTracker.DeleteEventTracker
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DeleteEventTracker.DeleteEventTracker
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DeleteEventTracker.DeleteEventTracker
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DeleteEventTracker.DeleteEventTracker


-- | Deletes a dataset group. Before you delete a dataset group, you must
--   delete the following:
--   
--   <ul>
--   <li>All associated event trackers.</li>
--   <li>All associated solutions.</li>
--   <li>All datasets in the dataset group.</li>
--   </ul>
module Amazonka.Personalize.DeleteDatasetGroup

-- | <i>See:</i> <a>newDeleteDatasetGroup</a> smart constructor.
data DeleteDatasetGroup
DeleteDatasetGroup' :: Text -> DeleteDatasetGroup

-- | The ARN of the dataset group to delete.
[$sel:datasetGroupArn:DeleteDatasetGroup'] :: DeleteDatasetGroup -> Text

-- | Create a value of <a>DeleteDatasetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetGroupArn:DeleteDatasetGroup'</a>,
--   <a>deleteDatasetGroup_datasetGroupArn</a> - The ARN of the dataset
--   group to delete.
newDeleteDatasetGroup :: Text -> DeleteDatasetGroup

-- | The ARN of the dataset group to delete.
deleteDatasetGroup_datasetGroupArn :: Lens' DeleteDatasetGroup Text

-- | <i>See:</i> <a>newDeleteDatasetGroupResponse</a> smart constructor.
data DeleteDatasetGroupResponse
DeleteDatasetGroupResponse' :: DeleteDatasetGroupResponse

-- | Create a value of <a>DeleteDatasetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDatasetGroupResponse :: DeleteDatasetGroupResponse
instance GHC.Generics.Generic Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroup
instance GHC.Show.Show Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroup
instance GHC.Read.Read Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroup
instance GHC.Classes.Eq Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroup
instance GHC.Generics.Generic Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroupResponse
instance GHC.Show.Show Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroupResponse
instance GHC.Read.Read Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroupResponse
instance GHC.Classes.Eq Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroup
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroup
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroup
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroup
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DeleteDatasetGroup.DeleteDatasetGroup


-- | Deletes a dataset. You can't delete a dataset if an associated
--   <tt>DatasetImportJob</tt> or <tt>SolutionVersion</tt> is in the CREATE
--   PENDING or IN PROGRESS state. For more information on datasets, see
--   CreateDataset.
module Amazonka.Personalize.DeleteDataset

-- | <i>See:</i> <a>newDeleteDataset</a> smart constructor.
data DeleteDataset
DeleteDataset' :: Text -> DeleteDataset

-- | The Amazon Resource Name (ARN) of the dataset to delete.
[$sel:datasetArn:DeleteDataset'] :: DeleteDataset -> Text

-- | Create a value of <a>DeleteDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetArn:DeleteDataset'</a>, <a>deleteDataset_datasetArn</a>
--   - The Amazon Resource Name (ARN) of the dataset to delete.
newDeleteDataset :: Text -> DeleteDataset

-- | The Amazon Resource Name (ARN) of the dataset to delete.
deleteDataset_datasetArn :: Lens' DeleteDataset Text

-- | <i>See:</i> <a>newDeleteDatasetResponse</a> smart constructor.
data DeleteDatasetResponse
DeleteDatasetResponse' :: DeleteDatasetResponse

-- | Create a value of <a>DeleteDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDatasetResponse :: DeleteDatasetResponse
instance GHC.Generics.Generic Amazonka.Personalize.DeleteDataset.DeleteDataset
instance GHC.Show.Show Amazonka.Personalize.DeleteDataset.DeleteDataset
instance GHC.Read.Read Amazonka.Personalize.DeleteDataset.DeleteDataset
instance GHC.Classes.Eq Amazonka.Personalize.DeleteDataset.DeleteDataset
instance GHC.Generics.Generic Amazonka.Personalize.DeleteDataset.DeleteDatasetResponse
instance GHC.Show.Show Amazonka.Personalize.DeleteDataset.DeleteDatasetResponse
instance GHC.Read.Read Amazonka.Personalize.DeleteDataset.DeleteDatasetResponse
instance GHC.Classes.Eq Amazonka.Personalize.DeleteDataset.DeleteDatasetResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DeleteDataset.DeleteDataset
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteDataset.DeleteDatasetResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DeleteDataset.DeleteDataset
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteDataset.DeleteDataset
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DeleteDataset.DeleteDataset
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DeleteDataset.DeleteDataset
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DeleteDataset.DeleteDataset
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DeleteDataset.DeleteDataset


-- | Removes a campaign by deleting the solution deployment. The solution
--   that the campaign is based on is not deleted and can be redeployed
--   when needed. A deleted campaign can no longer be specified in a
--   <a>GetRecommendations</a> request. For more information on campaigns,
--   see CreateCampaign.
module Amazonka.Personalize.DeleteCampaign

-- | <i>See:</i> <a>newDeleteCampaign</a> smart constructor.
data DeleteCampaign
DeleteCampaign' :: Text -> DeleteCampaign

-- | The Amazon Resource Name (ARN) of the campaign to delete.
[$sel:campaignArn:DeleteCampaign'] :: DeleteCampaign -> Text

-- | Create a value of <a>DeleteCampaign</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaignArn:DeleteCampaign'</a>,
--   <a>deleteCampaign_campaignArn</a> - The Amazon Resource Name (ARN) of
--   the campaign to delete.
newDeleteCampaign :: Text -> DeleteCampaign

-- | The Amazon Resource Name (ARN) of the campaign to delete.
deleteCampaign_campaignArn :: Lens' DeleteCampaign Text

-- | <i>See:</i> <a>newDeleteCampaignResponse</a> smart constructor.
data DeleteCampaignResponse
DeleteCampaignResponse' :: DeleteCampaignResponse

-- | Create a value of <a>DeleteCampaignResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCampaignResponse :: DeleteCampaignResponse
instance GHC.Generics.Generic Amazonka.Personalize.DeleteCampaign.DeleteCampaign
instance GHC.Show.Show Amazonka.Personalize.DeleteCampaign.DeleteCampaign
instance GHC.Read.Read Amazonka.Personalize.DeleteCampaign.DeleteCampaign
instance GHC.Classes.Eq Amazonka.Personalize.DeleteCampaign.DeleteCampaign
instance GHC.Generics.Generic Amazonka.Personalize.DeleteCampaign.DeleteCampaignResponse
instance GHC.Show.Show Amazonka.Personalize.DeleteCampaign.DeleteCampaignResponse
instance GHC.Read.Read Amazonka.Personalize.DeleteCampaign.DeleteCampaignResponse
instance GHC.Classes.Eq Amazonka.Personalize.DeleteCampaign.DeleteCampaignResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.DeleteCampaign.DeleteCampaign
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteCampaign.DeleteCampaignResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.DeleteCampaign.DeleteCampaign
instance Control.DeepSeq.NFData Amazonka.Personalize.DeleteCampaign.DeleteCampaign
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.DeleteCampaign.DeleteCampaign
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.DeleteCampaign.DeleteCampaign
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.DeleteCampaign.DeleteCampaign
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.DeleteCampaign.DeleteCampaign


-- | Trains or retrains an active solution. A solution is created using the
--   CreateSolution operation and must be in the ACTIVE state before
--   calling <tt>CreateSolutionVersion</tt>. A new version of the solution
--   is created every time you call this operation.
--   
--   <b>Status</b>
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   <li>CREATE STOPPING</li>
--   <li>CREATE STOPPED</li>
--   </ul>
--   
--   To get the status of the version, call DescribeSolutionVersion. Wait
--   until the status shows as ACTIVE before calling
--   <tt>CreateCampaign</tt>.
--   
--   If the status shows as CREATE FAILED, the response includes a
--   <tt>failureReason</tt> key, which describes why the job failed.
--   
--   <b>Related APIs</b>
--   
--   <ul>
--   <li>ListSolutionVersions</li>
--   <li>DescribeSolutionVersion</li>
--   <li>ListSolutions</li>
--   <li>CreateSolution</li>
--   <li>DescribeSolution</li>
--   <li>DeleteSolution</li>
--   </ul>
module Amazonka.Personalize.CreateSolutionVersion

-- | <i>See:</i> <a>newCreateSolutionVersion</a> smart constructor.
data CreateSolutionVersion
CreateSolutionVersion' :: Maybe TrainingMode -> Text -> CreateSolutionVersion

-- | The scope of training to be performed when creating the solution
--   version. The <tt>FULL</tt> option trains the solution version based on
--   the entirety of the input solution's training data, while the
--   <tt>UPDATE</tt> option processes only the data that has changed in
--   comparison to the input solution. Choose <tt>UPDATE</tt> when you want
--   to incrementally update your solution version instead of creating an
--   entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
[$sel:trainingMode:CreateSolutionVersion'] :: CreateSolutionVersion -> Maybe TrainingMode

-- | The Amazon Resource Name (ARN) of the solution containing the training
--   configuration information.
[$sel:solutionArn:CreateSolutionVersion'] :: CreateSolutionVersion -> Text

-- | Create a value of <a>CreateSolutionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trainingMode:CreateSolutionVersion'</a>,
--   <a>createSolutionVersion_trainingMode</a> - The scope of training to
--   be performed when creating the solution version. The <tt>FULL</tt>
--   option trains the solution version based on the entirety of the input
--   solution's training data, while the <tt>UPDATE</tt> option processes
--   only the data that has changed in comparison to the input solution.
--   Choose <tt>UPDATE</tt> when you want to incrementally update your
--   solution version instead of creating an entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
--   
--   <a>$sel:solutionArn:CreateSolutionVersion'</a>,
--   <a>createSolutionVersion_solutionArn</a> - The Amazon Resource Name
--   (ARN) of the solution containing the training configuration
--   information.
newCreateSolutionVersion :: Text -> CreateSolutionVersion

-- | The scope of training to be performed when creating the solution
--   version. The <tt>FULL</tt> option trains the solution version based on
--   the entirety of the input solution's training data, while the
--   <tt>UPDATE</tt> option processes only the data that has changed in
--   comparison to the input solution. Choose <tt>UPDATE</tt> when you want
--   to incrementally update your solution version instead of creating an
--   entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
createSolutionVersion_trainingMode :: Lens' CreateSolutionVersion (Maybe TrainingMode)

-- | The Amazon Resource Name (ARN) of the solution containing the training
--   configuration information.
createSolutionVersion_solutionArn :: Lens' CreateSolutionVersion Text

-- | <i>See:</i> <a>newCreateSolutionVersionResponse</a> smart constructor.
data CreateSolutionVersionResponse
CreateSolutionVersionResponse' :: Maybe Text -> Int -> CreateSolutionVersionResponse

-- | The ARN of the new solution version.
[$sel:solutionVersionArn:CreateSolutionVersionResponse'] :: CreateSolutionVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateSolutionVersionResponse'] :: CreateSolutionVersionResponse -> Int

-- | Create a value of <a>CreateSolutionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionVersionArn:CreateSolutionVersionResponse'</a>,
--   <a>createSolutionVersionResponse_solutionVersionArn</a> - The ARN of
--   the new solution version.
--   
--   <a>$sel:httpStatus:CreateSolutionVersionResponse'</a>,
--   <a>createSolutionVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateSolutionVersionResponse :: Int -> CreateSolutionVersionResponse

-- | The ARN of the new solution version.
createSolutionVersionResponse_solutionVersionArn :: Lens' CreateSolutionVersionResponse (Maybe Text)

-- | The response's http status code.
createSolutionVersionResponse_httpStatus :: Lens' CreateSolutionVersionResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersion
instance GHC.Show.Show Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersion
instance GHC.Read.Read Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersion
instance GHC.Classes.Eq Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersion
instance GHC.Generics.Generic Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersionResponse
instance GHC.Show.Show Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersionResponse
instance GHC.Read.Read Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersionResponse
instance GHC.Classes.Eq Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersion
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersion
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersion
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersion
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.CreateSolutionVersion.CreateSolutionVersion


-- | Creates the configuration for training a model. A trained model is
--   known as a solution. After the configuration is created, you train the
--   model (create a solution) by calling the CreateSolutionVersion
--   operation. Every time you call <tt>CreateSolutionVersion</tt>, a new
--   version of the solution is created.
--   
--   After creating a solution version, you check its accuracy by calling
--   GetSolutionMetrics. When you are satisfied with the version, you
--   deploy it using CreateCampaign. The campaign provides recommendations
--   to a client through the <a>GetRecommendations</a> API.
--   
--   To train a model, Amazon Personalize requires training data and a
--   recipe. The training data comes from the dataset group that you
--   provide in the request. A recipe specifies the training algorithm and
--   a feature transformation. You can specify one of the predefined
--   recipes provided by Amazon Personalize. Alternatively, you can specify
--   <tt>performAutoML</tt> and Amazon Personalize will analyze your data
--   and select the optimum USER_PERSONALIZATION recipe for you.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> for solution hyperparameter optimization at this
--   time.
--   
--   <b>Status</b>
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   To get the status of the solution, call DescribeSolution. Wait until
--   the status shows as ACTIVE before calling
--   <tt>CreateSolutionVersion</tt>.
--   
--   <b>Related APIs</b>
--   
--   <ul>
--   <li>ListSolutions</li>
--   <li>CreateSolutionVersion</li>
--   <li>DescribeSolution</li>
--   <li>DeleteSolution</li>
--   <li>ListSolutionVersions</li>
--   <li>DescribeSolutionVersion</li>
--   </ul>
module Amazonka.Personalize.CreateSolution

-- | <i>See:</i> <a>newCreateSolution</a> smart constructor.
data CreateSolution
CreateSolution' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe SolutionConfig -> Maybe Bool -> Text -> Text -> CreateSolution

-- | Whether to perform automated machine learning (AutoML). The default is
--   <tt>false</tt>. For this case, you must specify <tt>recipeArn</tt>.
--   
--   When set to <tt>true</tt>, Amazon Personalize analyzes your training
--   data and selects the optimal USER_PERSONALIZATION recipe and
--   hyperparameters. In this case, you must omit <tt>recipeArn</tt>.
--   Amazon Personalize determines the optimal recipe by running tests with
--   different values for the hyperparameters. AutoML lengthens the
--   training process as compared to selecting a specific recipe.
[$sel:performAutoML:CreateSolution'] :: CreateSolution -> Maybe Bool

-- | The ARN of the recipe to use for model training. Only specified when
--   <tt>performAutoML</tt> is false.
[$sel:recipeArn:CreateSolution'] :: CreateSolution -> Maybe Text

-- | When your have multiple event types (using an <tt>EVENT_TYPE</tt>
--   schema field), this parameter specifies which event type (for example,
--   'click' or 'like') is used for training the model.
--   
--   If you do not provide an <tt>eventType</tt>, Amazon Personalize will
--   use all interactions for training with equal weight regardless of
--   type.
[$sel:eventType:CreateSolution'] :: CreateSolution -> Maybe Text

-- | The configuration to use with the solution. When
--   <tt>performAutoML</tt> is set to true, Amazon Personalize only
--   evaluates the <tt>autoMLConfig</tt> section of the solution
--   configuration.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
[$sel:solutionConfig:CreateSolution'] :: CreateSolution -> Maybe SolutionConfig

-- | Whether to perform hyperparameter optimization (HPO) on the specified
--   or selected recipe. The default is <tt>false</tt>.
--   
--   When performing AutoML, this parameter is always <tt>true</tt> and you
--   should not set it to <tt>false</tt>.
[$sel:performHPO:CreateSolution'] :: CreateSolution -> Maybe Bool

-- | The name for the solution.
[$sel:name:CreateSolution'] :: CreateSolution -> Text

-- | The Amazon Resource Name (ARN) of the dataset group that provides the
--   training data.
[$sel:datasetGroupArn:CreateSolution'] :: CreateSolution -> Text

-- | Create a value of <a>CreateSolution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:performAutoML:CreateSolution'</a>,
--   <a>createSolution_performAutoML</a> - Whether to perform automated
--   machine learning (AutoML). The default is <tt>false</tt>. For this
--   case, you must specify <tt>recipeArn</tt>.
--   
--   When set to <tt>true</tt>, Amazon Personalize analyzes your training
--   data and selects the optimal USER_PERSONALIZATION recipe and
--   hyperparameters. In this case, you must omit <tt>recipeArn</tt>.
--   Amazon Personalize determines the optimal recipe by running tests with
--   different values for the hyperparameters. AutoML lengthens the
--   training process as compared to selecting a specific recipe.
--   
--   <a>$sel:recipeArn:CreateSolution'</a>, <a>createSolution_recipeArn</a>
--   - The ARN of the recipe to use for model training. Only specified when
--   <tt>performAutoML</tt> is false.
--   
--   <a>$sel:eventType:CreateSolution'</a>, <a>createSolution_eventType</a>
--   - When your have multiple event types (using an <tt>EVENT_TYPE</tt>
--   schema field), this parameter specifies which event type (for example,
--   'click' or 'like') is used for training the model.
--   
--   If you do not provide an <tt>eventType</tt>, Amazon Personalize will
--   use all interactions for training with equal weight regardless of
--   type.
--   
--   <a>$sel:solutionConfig:CreateSolution'</a>,
--   <a>createSolution_solutionConfig</a> - The configuration to use with
--   the solution. When <tt>performAutoML</tt> is set to true, Amazon
--   Personalize only evaluates the <tt>autoMLConfig</tt> section of the
--   solution configuration.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
--   
--   <a>$sel:performHPO:CreateSolution'</a>,
--   <a>createSolution_performHPO</a> - Whether to perform hyperparameter
--   optimization (HPO) on the specified or selected recipe. The default is
--   <tt>false</tt>.
--   
--   When performing AutoML, this parameter is always <tt>true</tt> and you
--   should not set it to <tt>false</tt>.
--   
--   <a>$sel:name:CreateSolution'</a>, <a>createSolution_name</a> - The
--   name for the solution.
--   
--   <a>$sel:datasetGroupArn:CreateSolution'</a>,
--   <a>createSolution_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group that provides the training data.
newCreateSolution :: Text -> Text -> CreateSolution

-- | Whether to perform automated machine learning (AutoML). The default is
--   <tt>false</tt>. For this case, you must specify <tt>recipeArn</tt>.
--   
--   When set to <tt>true</tt>, Amazon Personalize analyzes your training
--   data and selects the optimal USER_PERSONALIZATION recipe and
--   hyperparameters. In this case, you must omit <tt>recipeArn</tt>.
--   Amazon Personalize determines the optimal recipe by running tests with
--   different values for the hyperparameters. AutoML lengthens the
--   training process as compared to selecting a specific recipe.
createSolution_performAutoML :: Lens' CreateSolution (Maybe Bool)

-- | The ARN of the recipe to use for model training. Only specified when
--   <tt>performAutoML</tt> is false.
createSolution_recipeArn :: Lens' CreateSolution (Maybe Text)

-- | When your have multiple event types (using an <tt>EVENT_TYPE</tt>
--   schema field), this parameter specifies which event type (for example,
--   'click' or 'like') is used for training the model.
--   
--   If you do not provide an <tt>eventType</tt>, Amazon Personalize will
--   use all interactions for training with equal weight regardless of
--   type.
createSolution_eventType :: Lens' CreateSolution (Maybe Text)

-- | The configuration to use with the solution. When
--   <tt>performAutoML</tt> is set to true, Amazon Personalize only
--   evaluates the <tt>autoMLConfig</tt> section of the solution
--   configuration.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
createSolution_solutionConfig :: Lens' CreateSolution (Maybe SolutionConfig)

-- | Whether to perform hyperparameter optimization (HPO) on the specified
--   or selected recipe. The default is <tt>false</tt>.
--   
--   When performing AutoML, this parameter is always <tt>true</tt> and you
--   should not set it to <tt>false</tt>.
createSolution_performHPO :: Lens' CreateSolution (Maybe Bool)

-- | The name for the solution.
createSolution_name :: Lens' CreateSolution Text

-- | The Amazon Resource Name (ARN) of the dataset group that provides the
--   training data.
createSolution_datasetGroupArn :: Lens' CreateSolution Text

-- | <i>See:</i> <a>newCreateSolutionResponse</a> smart constructor.
data CreateSolutionResponse
CreateSolutionResponse' :: Maybe Text -> Int -> CreateSolutionResponse

-- | The ARN of the solution.
[$sel:solutionArn:CreateSolutionResponse'] :: CreateSolutionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateSolutionResponse'] :: CreateSolutionResponse -> Int

-- | Create a value of <a>CreateSolutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:CreateSolutionResponse'</a>,
--   <a>createSolutionResponse_solutionArn</a> - The ARN of the solution.
--   
--   <a>$sel:httpStatus:CreateSolutionResponse'</a>,
--   <a>createSolutionResponse_httpStatus</a> - The response's http status
--   code.
newCreateSolutionResponse :: Int -> CreateSolutionResponse

-- | The ARN of the solution.
createSolutionResponse_solutionArn :: Lens' CreateSolutionResponse (Maybe Text)

-- | The response's http status code.
createSolutionResponse_httpStatus :: Lens' CreateSolutionResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.CreateSolution.CreateSolution
instance GHC.Show.Show Amazonka.Personalize.CreateSolution.CreateSolution
instance GHC.Read.Read Amazonka.Personalize.CreateSolution.CreateSolution
instance GHC.Classes.Eq Amazonka.Personalize.CreateSolution.CreateSolution
instance GHC.Generics.Generic Amazonka.Personalize.CreateSolution.CreateSolutionResponse
instance GHC.Show.Show Amazonka.Personalize.CreateSolution.CreateSolutionResponse
instance GHC.Read.Read Amazonka.Personalize.CreateSolution.CreateSolutionResponse
instance GHC.Classes.Eq Amazonka.Personalize.CreateSolution.CreateSolutionResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.CreateSolution.CreateSolution
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateSolution.CreateSolutionResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.CreateSolution.CreateSolution
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateSolution.CreateSolution
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.CreateSolution.CreateSolution
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.CreateSolution.CreateSolution
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.CreateSolution.CreateSolution
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.CreateSolution.CreateSolution


-- | Creates an Amazon Personalize schema from the specified schema string.
--   The schema you create must be in Avro JSON format.
--   
--   Amazon Personalize recognizes three schema variants. Each schema is
--   associated with a dataset type and has a set of required field and
--   keywords. You specify a schema when you call CreateDataset.
--   
--   <b>Related APIs</b>
--   
--   <ul>
--   <li>ListSchemas</li>
--   <li>DescribeSchema</li>
--   <li>DeleteSchema</li>
--   </ul>
module Amazonka.Personalize.CreateSchema

-- | <i>See:</i> <a>newCreateSchema</a> smart constructor.
data CreateSchema
CreateSchema' :: Text -> Text -> CreateSchema

-- | The name for the schema.
[$sel:name:CreateSchema'] :: CreateSchema -> Text

-- | A schema in Avro JSON format.
[$sel:schema:CreateSchema'] :: CreateSchema -> Text

-- | Create a value of <a>CreateSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateSchema'</a>, <a>createSchema_name</a> - The name
--   for the schema.
--   
--   <a>$sel:schema:CreateSchema'</a>, <a>createSchema_schema</a> - A
--   schema in Avro JSON format.
newCreateSchema :: Text -> Text -> CreateSchema

-- | The name for the schema.
createSchema_name :: Lens' CreateSchema Text

-- | A schema in Avro JSON format.
createSchema_schema :: Lens' CreateSchema Text

-- | <i>See:</i> <a>newCreateSchemaResponse</a> smart constructor.
data CreateSchemaResponse
CreateSchemaResponse' :: Maybe Text -> Int -> CreateSchemaResponse

-- | The Amazon Resource Name (ARN) of the created schema.
[$sel:schemaArn:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateSchemaResponse'] :: CreateSchemaResponse -> Int

-- | Create a value of <a>CreateSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaArn</a> - The Amazon Resource Name (ARN)
--   of the created schema.
--   
--   <a>$sel:httpStatus:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_httpStatus</a> - The response's http status
--   code.
newCreateSchemaResponse :: Int -> CreateSchemaResponse

-- | The Amazon Resource Name (ARN) of the created schema.
createSchemaResponse_schemaArn :: Lens' CreateSchemaResponse (Maybe Text)

-- | The response's http status code.
createSchemaResponse_httpStatus :: Lens' CreateSchemaResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.CreateSchema.CreateSchema
instance GHC.Show.Show Amazonka.Personalize.CreateSchema.CreateSchema
instance GHC.Read.Read Amazonka.Personalize.CreateSchema.CreateSchema
instance GHC.Classes.Eq Amazonka.Personalize.CreateSchema.CreateSchema
instance GHC.Generics.Generic Amazonka.Personalize.CreateSchema.CreateSchemaResponse
instance GHC.Show.Show Amazonka.Personalize.CreateSchema.CreateSchemaResponse
instance GHC.Read.Read Amazonka.Personalize.CreateSchema.CreateSchemaResponse
instance GHC.Classes.Eq Amazonka.Personalize.CreateSchema.CreateSchemaResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.CreateSchema.CreateSchema
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateSchema.CreateSchemaResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.CreateSchema.CreateSchema
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateSchema.CreateSchema
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.CreateSchema.CreateSchema
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.CreateSchema.CreateSchema
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.CreateSchema.CreateSchema
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.CreateSchema.CreateSchema


-- | Creates a recommendation filter. For more information, see filter.
module Amazonka.Personalize.CreateFilter

-- | <i>See:</i> <a>newCreateFilter</a> smart constructor.
data CreateFilter
CreateFilter' :: Text -> Text -> Sensitive Text -> CreateFilter

-- | The name of the filter to create.
[$sel:name:CreateFilter'] :: CreateFilter -> Text

-- | The ARN of the dataset group that the filter will belong to.
[$sel:datasetGroupArn:CreateFilter'] :: CreateFilter -> Text

-- | The filter expression defines which items are included or excluded
--   from recommendations. Filter expression must follow specific format
--   rules. For information about filter expression structure and syntax,
--   see filter-expressions.
[$sel:filterExpression:CreateFilter'] :: CreateFilter -> Sensitive Text

-- | Create a value of <a>CreateFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateFilter'</a>, <a>createFilter_name</a> - The name of
--   the filter to create.
--   
--   <a>$sel:datasetGroupArn:CreateFilter'</a>,
--   <a>createFilter_datasetGroupArn</a> - The ARN of the dataset group
--   that the filter will belong to.
--   
--   <a>$sel:filterExpression:CreateFilter'</a>,
--   <a>createFilter_filterExpression</a> - The filter expression defines
--   which items are included or excluded from recommendations. Filter
--   expression must follow specific format rules. For information about
--   filter expression structure and syntax, see filter-expressions.
newCreateFilter :: Text -> Text -> Text -> CreateFilter

-- | The name of the filter to create.
createFilter_name :: Lens' CreateFilter Text

-- | The ARN of the dataset group that the filter will belong to.
createFilter_datasetGroupArn :: Lens' CreateFilter Text

-- | The filter expression defines which items are included or excluded
--   from recommendations. Filter expression must follow specific format
--   rules. For information about filter expression structure and syntax,
--   see filter-expressions.
createFilter_filterExpression :: Lens' CreateFilter Text

-- | <i>See:</i> <a>newCreateFilterResponse</a> smart constructor.
data CreateFilterResponse
CreateFilterResponse' :: Maybe Text -> Int -> CreateFilterResponse

-- | The ARN of the new filter.
[$sel:filterArn:CreateFilterResponse'] :: CreateFilterResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateFilterResponse'] :: CreateFilterResponse -> Int

-- | Create a value of <a>CreateFilterResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterArn:CreateFilterResponse'</a>,
--   <a>createFilterResponse_filterArn</a> - The ARN of the new filter.
--   
--   <a>$sel:httpStatus:CreateFilterResponse'</a>,
--   <a>createFilterResponse_httpStatus</a> - The response's http status
--   code.
newCreateFilterResponse :: Int -> CreateFilterResponse

-- | The ARN of the new filter.
createFilterResponse_filterArn :: Lens' CreateFilterResponse (Maybe Text)

-- | The response's http status code.
createFilterResponse_httpStatus :: Lens' CreateFilterResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.CreateFilter.CreateFilter
instance GHC.Show.Show Amazonka.Personalize.CreateFilter.CreateFilter
instance GHC.Classes.Eq Amazonka.Personalize.CreateFilter.CreateFilter
instance GHC.Generics.Generic Amazonka.Personalize.CreateFilter.CreateFilterResponse
instance GHC.Show.Show Amazonka.Personalize.CreateFilter.CreateFilterResponse
instance GHC.Read.Read Amazonka.Personalize.CreateFilter.CreateFilterResponse
instance GHC.Classes.Eq Amazonka.Personalize.CreateFilter.CreateFilterResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.CreateFilter.CreateFilter
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateFilter.CreateFilterResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.CreateFilter.CreateFilter
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateFilter.CreateFilter
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.CreateFilter.CreateFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.CreateFilter.CreateFilter
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.CreateFilter.CreateFilter
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.CreateFilter.CreateFilter


-- | Creates an event tracker that you use when adding event data to a
--   specified dataset group using the <a>PutEvents</a> API.
--   
--   Only one event tracker can be associated with a dataset group. You
--   will get an error if you call <tt>CreateEventTracker</tt> using the
--   same dataset group as an existing event tracker.
--   
--   When you create an event tracker, the response includes a tracking ID,
--   which you pass as a parameter when you use the <a>PutEvents</a>
--   operation. Amazon Personalize then appends the event data to the
--   Interactions dataset of the dataset group you specify in your event
--   tracker.
--   
--   The event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   To get the status of the event tracker, call DescribeEventTracker.
--   
--   The event tracker must be in the ACTIVE state before using the
--   tracking ID.
--   
--   <b>Related APIs</b>
--   
--   <ul>
--   <li>ListEventTrackers</li>
--   <li>DescribeEventTracker</li>
--   <li>DeleteEventTracker</li>
--   </ul>
module Amazonka.Personalize.CreateEventTracker

-- | <i>See:</i> <a>newCreateEventTracker</a> smart constructor.
data CreateEventTracker
CreateEventTracker' :: Text -> Text -> CreateEventTracker

-- | The name for the event tracker.
[$sel:name:CreateEventTracker'] :: CreateEventTracker -> Text

-- | The Amazon Resource Name (ARN) of the dataset group that receives the
--   event data.
[$sel:datasetGroupArn:CreateEventTracker'] :: CreateEventTracker -> Text

-- | Create a value of <a>CreateEventTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateEventTracker'</a>, <a>createEventTracker_name</a> -
--   The name for the event tracker.
--   
--   <a>$sel:datasetGroupArn:CreateEventTracker'</a>,
--   <a>createEventTracker_datasetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the dataset group that receives the event data.
newCreateEventTracker :: Text -> Text -> CreateEventTracker

-- | The name for the event tracker.
createEventTracker_name :: Lens' CreateEventTracker Text

-- | The Amazon Resource Name (ARN) of the dataset group that receives the
--   event data.
createEventTracker_datasetGroupArn :: Lens' CreateEventTracker Text

-- | <i>See:</i> <a>newCreateEventTrackerResponse</a> smart constructor.
data CreateEventTrackerResponse
CreateEventTrackerResponse' :: Maybe Text -> Maybe Text -> Int -> CreateEventTrackerResponse

-- | The ID of the event tracker. Include this ID in requests to the
--   <a>PutEvents</a> API.
[$sel:trackingId:CreateEventTrackerResponse'] :: CreateEventTrackerResponse -> Maybe Text

-- | The ARN of the event tracker.
[$sel:eventTrackerArn:CreateEventTrackerResponse'] :: CreateEventTrackerResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateEventTrackerResponse'] :: CreateEventTrackerResponse -> Int

-- | Create a value of <a>CreateEventTrackerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trackingId:CreateEventTrackerResponse'</a>,
--   <a>createEventTrackerResponse_trackingId</a> - The ID of the event
--   tracker. Include this ID in requests to the <a>PutEvents</a> API.
--   
--   <a>$sel:eventTrackerArn:CreateEventTrackerResponse'</a>,
--   <a>createEventTrackerResponse_eventTrackerArn</a> - The ARN of the
--   event tracker.
--   
--   <a>$sel:httpStatus:CreateEventTrackerResponse'</a>,
--   <a>createEventTrackerResponse_httpStatus</a> - The response's http
--   status code.
newCreateEventTrackerResponse :: Int -> CreateEventTrackerResponse

-- | The ID of the event tracker. Include this ID in requests to the
--   <a>PutEvents</a> API.
createEventTrackerResponse_trackingId :: Lens' CreateEventTrackerResponse (Maybe Text)

-- | The ARN of the event tracker.
createEventTrackerResponse_eventTrackerArn :: Lens' CreateEventTrackerResponse (Maybe Text)

-- | The response's http status code.
createEventTrackerResponse_httpStatus :: Lens' CreateEventTrackerResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.CreateEventTracker.CreateEventTracker
instance GHC.Show.Show Amazonka.Personalize.CreateEventTracker.CreateEventTracker
instance GHC.Read.Read Amazonka.Personalize.CreateEventTracker.CreateEventTracker
instance GHC.Classes.Eq Amazonka.Personalize.CreateEventTracker.CreateEventTracker
instance GHC.Generics.Generic Amazonka.Personalize.CreateEventTracker.CreateEventTrackerResponse
instance GHC.Show.Show Amazonka.Personalize.CreateEventTracker.CreateEventTrackerResponse
instance GHC.Read.Read Amazonka.Personalize.CreateEventTracker.CreateEventTrackerResponse
instance GHC.Classes.Eq Amazonka.Personalize.CreateEventTracker.CreateEventTrackerResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.CreateEventTracker.CreateEventTracker
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateEventTracker.CreateEventTrackerResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.CreateEventTracker.CreateEventTracker
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateEventTracker.CreateEventTracker
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.CreateEventTracker.CreateEventTracker
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.CreateEventTracker.CreateEventTracker
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.CreateEventTracker.CreateEventTracker
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.CreateEventTracker.CreateEventTracker


-- | Creates a job that imports training data from your data source (an
--   Amazon S3 bucket) to an Amazon Personalize dataset. To allow Amazon
--   Personalize to import the training data, you must specify an IAM
--   service role that has permission to read from the data source, as
--   Amazon Personalize makes a copy of your data and processes it
--   internally. For information on granting access to your Amazon S3
--   bucket, see <a>Giving Amazon Personalize Access to Amazon S3
--   Resources</a>.
--   
--   The dataset import job replaces any existing data in the dataset that
--   you imported in bulk.
--   
--   <b>Status</b>
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   To get the status of the import job, call DescribeDatasetImportJob,
--   providing the Amazon Resource Name (ARN) of the dataset import job.
--   The dataset import is complete when the status shows as ACTIVE. If the
--   status shows as CREATE FAILED, the response includes a
--   <tt>failureReason</tt> key, which describes why the job failed.
--   
--   Importing takes time. You must wait until the status shows as ACTIVE
--   before training a model using the dataset.
--   
--   <b>Related APIs</b>
--   
--   <ul>
--   <li>ListDatasetImportJobs</li>
--   <li>DescribeDatasetImportJob</li>
--   </ul>
module Amazonka.Personalize.CreateDatasetImportJob

-- | <i>See:</i> <a>newCreateDatasetImportJob</a> smart constructor.
data CreateDatasetImportJob
CreateDatasetImportJob' :: Text -> Text -> DataSource -> Text -> CreateDatasetImportJob

-- | The name for the dataset import job.
[$sel:jobName:CreateDatasetImportJob'] :: CreateDatasetImportJob -> Text

-- | The ARN of the dataset that receives the imported data.
[$sel:datasetArn:CreateDatasetImportJob'] :: CreateDatasetImportJob -> Text

-- | The Amazon S3 bucket that contains the training data to import.
[$sel:dataSource:CreateDatasetImportJob'] :: CreateDatasetImportJob -> DataSource

-- | The ARN of the IAM role that has permissions to read from the Amazon
--   S3 data source.
[$sel:roleArn:CreateDatasetImportJob'] :: CreateDatasetImportJob -> Text

-- | Create a value of <a>CreateDatasetImportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:CreateDatasetImportJob'</a>,
--   <a>createDatasetImportJob_jobName</a> - The name for the dataset
--   import job.
--   
--   <a>$sel:datasetArn:CreateDatasetImportJob'</a>,
--   <a>createDatasetImportJob_datasetArn</a> - The ARN of the dataset that
--   receives the imported data.
--   
--   <a>$sel:dataSource:CreateDatasetImportJob'</a>,
--   <a>createDatasetImportJob_dataSource</a> - The Amazon S3 bucket that
--   contains the training data to import.
--   
--   <a>$sel:roleArn:CreateDatasetImportJob'</a>,
--   <a>createDatasetImportJob_roleArn</a> - The ARN of the IAM role that
--   has permissions to read from the Amazon S3 data source.
newCreateDatasetImportJob :: Text -> Text -> DataSource -> Text -> CreateDatasetImportJob

-- | The name for the dataset import job.
createDatasetImportJob_jobName :: Lens' CreateDatasetImportJob Text

-- | The ARN of the dataset that receives the imported data.
createDatasetImportJob_datasetArn :: Lens' CreateDatasetImportJob Text

-- | The Amazon S3 bucket that contains the training data to import.
createDatasetImportJob_dataSource :: Lens' CreateDatasetImportJob DataSource

-- | The ARN of the IAM role that has permissions to read from the Amazon
--   S3 data source.
createDatasetImportJob_roleArn :: Lens' CreateDatasetImportJob Text

-- | <i>See:</i> <a>newCreateDatasetImportJobResponse</a> smart
--   constructor.
data CreateDatasetImportJobResponse
CreateDatasetImportJobResponse' :: Maybe Text -> Int -> CreateDatasetImportJobResponse

-- | The ARN of the dataset import job.
[$sel:datasetImportJobArn:CreateDatasetImportJobResponse'] :: CreateDatasetImportJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDatasetImportJobResponse'] :: CreateDatasetImportJobResponse -> Int

-- | Create a value of <a>CreateDatasetImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetImportJobArn:CreateDatasetImportJobResponse'</a>,
--   <a>createDatasetImportJobResponse_datasetImportJobArn</a> - The ARN of
--   the dataset import job.
--   
--   <a>$sel:httpStatus:CreateDatasetImportJobResponse'</a>,
--   <a>createDatasetImportJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateDatasetImportJobResponse :: Int -> CreateDatasetImportJobResponse

-- | The ARN of the dataset import job.
createDatasetImportJobResponse_datasetImportJobArn :: Lens' CreateDatasetImportJobResponse (Maybe Text)

-- | The response's http status code.
createDatasetImportJobResponse_httpStatus :: Lens' CreateDatasetImportJobResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJob
instance GHC.Show.Show Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJob
instance GHC.Read.Read Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJob
instance GHC.Classes.Eq Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJob
instance GHC.Generics.Generic Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJobResponse
instance GHC.Show.Show Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJobResponse
instance GHC.Read.Read Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJobResponse
instance GHC.Classes.Eq Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJob
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJob
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJob
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJob
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.CreateDatasetImportJob.CreateDatasetImportJob


-- | Creates an empty dataset group. A dataset group contains related
--   datasets that supply data for training a model. A dataset group can
--   contain at most three datasets, one for each type of dataset:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
--   
--   To train a model (create a solution), a dataset group that contains an
--   <tt>Interactions</tt> dataset is required. Call CreateDataset to add a
--   dataset to the group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
--   
--   To get the status of the dataset group, call DescribeDatasetGroup. If
--   the status shows as CREATE FAILED, the response includes a
--   <tt>failureReason</tt> key, which describes why the creation failed.
--   
--   You must wait until the <tt>status</tt> of the dataset group is
--   <tt>ACTIVE</tt> before adding a dataset to the group.
--   
--   You can specify an Key Management Service (KMS) key to encrypt the
--   datasets in the group. If you specify a KMS key, you must also include
--   an Identity and Access Management (IAM) role that has permission to
--   access the key.
--   
--   <b>APIs that require a dataset group ARN in the request</b>
--   
--   <ul>
--   <li>CreateDataset</li>
--   <li>CreateEventTracker</li>
--   <li>CreateSolution</li>
--   </ul>
--   
--   <b>Related APIs</b>
--   
--   <ul>
--   <li>ListDatasetGroups</li>
--   <li>DescribeDatasetGroup</li>
--   <li>DeleteDatasetGroup</li>
--   </ul>
module Amazonka.Personalize.CreateDatasetGroup

-- | <i>See:</i> <a>newCreateDatasetGroup</a> smart constructor.
data CreateDatasetGroup
CreateDatasetGroup' :: Maybe Text -> Maybe Text -> Text -> CreateDatasetGroup

-- | The Amazon Resource Name (ARN) of a Key Management Service (KMS) key
--   used to encrypt the datasets.
[$sel:kmsKeyArn:CreateDatasetGroup'] :: CreateDatasetGroup -> Maybe Text

-- | The ARN of the Identity and Access Management (IAM) role that has
--   permissions to access the Key Management Service (KMS) key. Supplying
--   an IAM role is only valid when also specifying a KMS key.
[$sel:roleArn:CreateDatasetGroup'] :: CreateDatasetGroup -> Maybe Text

-- | The name for the new dataset group.
[$sel:name:CreateDatasetGroup'] :: CreateDatasetGroup -> Text

-- | Create a value of <a>CreateDatasetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:CreateDatasetGroup'</a>,
--   <a>createDatasetGroup_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of a Key Management Service (KMS) key used to encrypt the datasets.
--   
--   <a>$sel:roleArn:CreateDatasetGroup'</a>,
--   <a>createDatasetGroup_roleArn</a> - The ARN of the Identity and Access
--   Management (IAM) role that has permissions to access the Key
--   Management Service (KMS) key. Supplying an IAM role is only valid when
--   also specifying a KMS key.
--   
--   <a>$sel:name:CreateDatasetGroup'</a>, <a>createDatasetGroup_name</a> -
--   The name for the new dataset group.
newCreateDatasetGroup :: Text -> CreateDatasetGroup

-- | The Amazon Resource Name (ARN) of a Key Management Service (KMS) key
--   used to encrypt the datasets.
createDatasetGroup_kmsKeyArn :: Lens' CreateDatasetGroup (Maybe Text)

-- | The ARN of the Identity and Access Management (IAM) role that has
--   permissions to access the Key Management Service (KMS) key. Supplying
--   an IAM role is only valid when also specifying a KMS key.
createDatasetGroup_roleArn :: Lens' CreateDatasetGroup (Maybe Text)

-- | The name for the new dataset group.
createDatasetGroup_name :: Lens' CreateDatasetGroup Text

-- | <i>See:</i> <a>newCreateDatasetGroupResponse</a> smart constructor.
data CreateDatasetGroupResponse
CreateDatasetGroupResponse' :: Maybe Text -> Int -> CreateDatasetGroupResponse

-- | The Amazon Resource Name (ARN) of the new dataset group.
[$sel:datasetGroupArn:CreateDatasetGroupResponse'] :: CreateDatasetGroupResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDatasetGroupResponse'] :: CreateDatasetGroupResponse -> Int

-- | Create a value of <a>CreateDatasetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetGroupArn:CreateDatasetGroupResponse'</a>,
--   <a>createDatasetGroupResponse_datasetGroupArn</a> - The Amazon
--   Resource Name (ARN) of the new dataset group.
--   
--   <a>$sel:httpStatus:CreateDatasetGroupResponse'</a>,
--   <a>createDatasetGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateDatasetGroupResponse :: Int -> CreateDatasetGroupResponse

-- | The Amazon Resource Name (ARN) of the new dataset group.
createDatasetGroupResponse_datasetGroupArn :: Lens' CreateDatasetGroupResponse (Maybe Text)

-- | The response's http status code.
createDatasetGroupResponse_httpStatus :: Lens' CreateDatasetGroupResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroup
instance GHC.Show.Show Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroup
instance GHC.Read.Read Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroup
instance GHC.Classes.Eq Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroup
instance GHC.Generics.Generic Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroupResponse
instance GHC.Show.Show Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroupResponse
instance GHC.Read.Read Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroupResponse
instance GHC.Classes.Eq Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroup
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroup
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroup
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroup
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.CreateDatasetGroup.CreateDatasetGroup


-- | Creates a job that exports data from your dataset to an Amazon S3
--   bucket. To allow Amazon Personalize to export the training data, you
--   must specify an service-linked IAM role that gives Amazon Personalize
--   <tt>PutObject</tt> permissions for your Amazon S3 bucket. For
--   information, see <a>Exporting a dataset</a> in the Amazon Personalize
--   developer guide.
--   
--   <b>Status</b>
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   To get the status of the export job, call DescribeDatasetExportJob,
--   and specify the Amazon Resource Name (ARN) of the dataset export job.
--   The dataset export is complete when the status shows as ACTIVE. If the
--   status shows as CREATE FAILED, the response includes a
--   <tt>failureReason</tt> key, which describes why the job failed.
module Amazonka.Personalize.CreateDatasetExportJob

-- | <i>See:</i> <a>newCreateDatasetExportJob</a> smart constructor.
data CreateDatasetExportJob
CreateDatasetExportJob' :: Maybe IngestionMode -> Text -> Text -> Text -> DatasetExportJobOutput -> CreateDatasetExportJob

-- | The data to export, based on how you imported the data. You can choose
--   to export only <tt>BULK</tt> data that you imported using a dataset
--   import job, only <tt>PUT</tt> data that you imported incrementally
--   (using the console, PutEvents, PutUsers and PutItems operations), or
--   <tt>ALL</tt> for both types. The default value is <tt>PUT</tt>.
[$sel:ingestionMode:CreateDatasetExportJob'] :: CreateDatasetExportJob -> Maybe IngestionMode

-- | The name for the dataset export job.
[$sel:jobName:CreateDatasetExportJob'] :: CreateDatasetExportJob -> Text

-- | The Amazon Resource Name (ARN) of the dataset that contains the data
--   to export.
[$sel:datasetArn:CreateDatasetExportJob'] :: CreateDatasetExportJob -> Text

-- | The Amazon Resource Name (ARN) of the IAM service role that has
--   permissions to add data to your output Amazon S3 bucket.
[$sel:roleArn:CreateDatasetExportJob'] :: CreateDatasetExportJob -> Text

-- | The path to the Amazon S3 bucket where the job's output is stored.
[$sel:jobOutput:CreateDatasetExportJob'] :: CreateDatasetExportJob -> DatasetExportJobOutput

-- | Create a value of <a>CreateDatasetExportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionMode:CreateDatasetExportJob'</a>,
--   <a>createDatasetExportJob_ingestionMode</a> - The data to export,
--   based on how you imported the data. You can choose to export only
--   <tt>BULK</tt> data that you imported using a dataset import job, only
--   <tt>PUT</tt> data that you imported incrementally (using the console,
--   PutEvents, PutUsers and PutItems operations), or <tt>ALL</tt> for both
--   types. The default value is <tt>PUT</tt>.
--   
--   <a>$sel:jobName:CreateDatasetExportJob'</a>,
--   <a>createDatasetExportJob_jobName</a> - The name for the dataset
--   export job.
--   
--   <a>$sel:datasetArn:CreateDatasetExportJob'</a>,
--   <a>createDatasetExportJob_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset that contains the data to export.
--   
--   <a>$sel:roleArn:CreateDatasetExportJob'</a>,
--   <a>createDatasetExportJob_roleArn</a> - The Amazon Resource Name (ARN)
--   of the IAM service role that has permissions to add data to your
--   output Amazon S3 bucket.
--   
--   <a>$sel:jobOutput:CreateDatasetExportJob'</a>,
--   <a>createDatasetExportJob_jobOutput</a> - The path to the Amazon S3
--   bucket where the job's output is stored.
newCreateDatasetExportJob :: Text -> Text -> Text -> DatasetExportJobOutput -> CreateDatasetExportJob

-- | The data to export, based on how you imported the data. You can choose
--   to export only <tt>BULK</tt> data that you imported using a dataset
--   import job, only <tt>PUT</tt> data that you imported incrementally
--   (using the console, PutEvents, PutUsers and PutItems operations), or
--   <tt>ALL</tt> for both types. The default value is <tt>PUT</tt>.
createDatasetExportJob_ingestionMode :: Lens' CreateDatasetExportJob (Maybe IngestionMode)

-- | The name for the dataset export job.
createDatasetExportJob_jobName :: Lens' CreateDatasetExportJob Text

-- | The Amazon Resource Name (ARN) of the dataset that contains the data
--   to export.
createDatasetExportJob_datasetArn :: Lens' CreateDatasetExportJob Text

-- | The Amazon Resource Name (ARN) of the IAM service role that has
--   permissions to add data to your output Amazon S3 bucket.
createDatasetExportJob_roleArn :: Lens' CreateDatasetExportJob Text

-- | The path to the Amazon S3 bucket where the job's output is stored.
createDatasetExportJob_jobOutput :: Lens' CreateDatasetExportJob DatasetExportJobOutput

-- | <i>See:</i> <a>newCreateDatasetExportJobResponse</a> smart
--   constructor.
data CreateDatasetExportJobResponse
CreateDatasetExportJobResponse' :: Maybe Text -> Int -> CreateDatasetExportJobResponse

-- | The Amazon Resource Name (ARN) of the dataset export job.
[$sel:datasetExportJobArn:CreateDatasetExportJobResponse'] :: CreateDatasetExportJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDatasetExportJobResponse'] :: CreateDatasetExportJobResponse -> Int

-- | Create a value of <a>CreateDatasetExportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetExportJobArn:CreateDatasetExportJobResponse'</a>,
--   <a>createDatasetExportJobResponse_datasetExportJobArn</a> - The Amazon
--   Resource Name (ARN) of the dataset export job.
--   
--   <a>$sel:httpStatus:CreateDatasetExportJobResponse'</a>,
--   <a>createDatasetExportJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateDatasetExportJobResponse :: Int -> CreateDatasetExportJobResponse

-- | The Amazon Resource Name (ARN) of the dataset export job.
createDatasetExportJobResponse_datasetExportJobArn :: Lens' CreateDatasetExportJobResponse (Maybe Text)

-- | The response's http status code.
createDatasetExportJobResponse_httpStatus :: Lens' CreateDatasetExportJobResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJob
instance GHC.Show.Show Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJob
instance GHC.Read.Read Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJob
instance GHC.Classes.Eq Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJob
instance GHC.Generics.Generic Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJobResponse
instance GHC.Show.Show Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJobResponse
instance GHC.Read.Read Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJobResponse
instance GHC.Classes.Eq Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJob
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJob
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJob
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJob
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.CreateDatasetExportJob.CreateDatasetExportJob


-- | Creates an empty dataset and adds it to the specified dataset group.
--   Use CreateDatasetImportJob to import your training data to a dataset.
--   
--   There are three types of datasets:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
--   
--   Each dataset type has an associated schema with required field types.
--   Only the <tt>Interactions</tt> dataset is required in order to train a
--   model (also referred to as creating a solution).
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   To get the status of the dataset, call DescribeDataset.
--   
--   <b>Related APIs</b>
--   
--   <ul>
--   <li>CreateDatasetGroup</li>
--   <li>ListDatasets</li>
--   <li>DescribeDataset</li>
--   <li>DeleteDataset</li>
--   </ul>
module Amazonka.Personalize.CreateDataset

-- | <i>See:</i> <a>newCreateDataset</a> smart constructor.
data CreateDataset
CreateDataset' :: Text -> Text -> Text -> Text -> CreateDataset

-- | The name for the dataset.
[$sel:name:CreateDataset'] :: CreateDataset -> Text

-- | The ARN of the schema to associate with the dataset. The schema
--   defines the dataset fields.
[$sel:schemaArn:CreateDataset'] :: CreateDataset -> Text

-- | The Amazon Resource Name (ARN) of the dataset group to add the dataset
--   to.
[$sel:datasetGroupArn:CreateDataset'] :: CreateDataset -> Text

-- | The type of dataset.
--   
--   One of the following (case insensitive) values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
[$sel:datasetType:CreateDataset'] :: CreateDataset -> Text

-- | Create a value of <a>CreateDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateDataset'</a>, <a>createDataset_name</a> - The name
--   for the dataset.
--   
--   <a>$sel:schemaArn:CreateDataset'</a>, <a>createDataset_schemaArn</a> -
--   The ARN of the schema to associate with the dataset. The schema
--   defines the dataset fields.
--   
--   <a>$sel:datasetGroupArn:CreateDataset'</a>,
--   <a>createDataset_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group to add the dataset to.
--   
--   <a>$sel:datasetType:CreateDataset'</a>,
--   <a>createDataset_datasetType</a> - The type of dataset.
--   
--   One of the following (case insensitive) values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
newCreateDataset :: Text -> Text -> Text -> Text -> CreateDataset

-- | The name for the dataset.
createDataset_name :: Lens' CreateDataset Text

-- | The ARN of the schema to associate with the dataset. The schema
--   defines the dataset fields.
createDataset_schemaArn :: Lens' CreateDataset Text

-- | The Amazon Resource Name (ARN) of the dataset group to add the dataset
--   to.
createDataset_datasetGroupArn :: Lens' CreateDataset Text

-- | The type of dataset.
--   
--   One of the following (case insensitive) values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
createDataset_datasetType :: Lens' CreateDataset Text

-- | <i>See:</i> <a>newCreateDatasetResponse</a> smart constructor.
data CreateDatasetResponse
CreateDatasetResponse' :: Maybe Text -> Int -> CreateDatasetResponse

-- | The ARN of the dataset.
[$sel:datasetArn:CreateDatasetResponse'] :: CreateDatasetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDatasetResponse'] :: CreateDatasetResponse -> Int

-- | Create a value of <a>CreateDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetArn:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_datasetArn</a> - The ARN of the dataset.
--   
--   <a>$sel:httpStatus:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_httpStatus</a> - The response's http status
--   code.
newCreateDatasetResponse :: Int -> CreateDatasetResponse

-- | The ARN of the dataset.
createDatasetResponse_datasetArn :: Lens' CreateDatasetResponse (Maybe Text)

-- | The response's http status code.
createDatasetResponse_httpStatus :: Lens' CreateDatasetResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.CreateDataset.CreateDataset
instance GHC.Show.Show Amazonka.Personalize.CreateDataset.CreateDataset
instance GHC.Read.Read Amazonka.Personalize.CreateDataset.CreateDataset
instance GHC.Classes.Eq Amazonka.Personalize.CreateDataset.CreateDataset
instance GHC.Generics.Generic Amazonka.Personalize.CreateDataset.CreateDatasetResponse
instance GHC.Show.Show Amazonka.Personalize.CreateDataset.CreateDatasetResponse
instance GHC.Read.Read Amazonka.Personalize.CreateDataset.CreateDatasetResponse
instance GHC.Classes.Eq Amazonka.Personalize.CreateDataset.CreateDatasetResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.CreateDataset.CreateDataset
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateDataset.CreateDatasetResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.CreateDataset.CreateDataset
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateDataset.CreateDataset
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.CreateDataset.CreateDataset
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.CreateDataset.CreateDataset
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.CreateDataset.CreateDataset
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.CreateDataset.CreateDataset


-- | Creates a campaign by deploying a solution version. When a client
--   calls the <a>GetRecommendations</a> and <a>GetPersonalizedRanking</a>
--   APIs, a campaign is specified in the request.
--   
--   <b>Minimum Provisioned TPS and Auto-Scaling</b>
--   
--   A transaction is a single <tt>GetRecommendations</tt> or
--   <tt>GetPersonalizedRanking</tt> call. Transactions per second (TPS) is
--   the throughput and unit of billing for Amazon Personalize. The minimum
--   provisioned TPS (<tt>minProvisionedTPS</tt>) specifies the baseline
--   throughput provisioned by Amazon Personalize, and thus, the minimum
--   billing charge.
--   
--   If your TPS increases beyond <tt>minProvisionedTPS</tt>, Amazon
--   Personalize auto-scales the provisioned capacity up and down, but
--   never below <tt>minProvisionedTPS</tt>. There's a short time delay
--   while the capacity is increased that might cause loss of transactions.
--   
--   The actual TPS used is calculated as the average requests/second
--   within a 5-minute window. You pay for maximum of either the minimum
--   provisioned TPS or the actual TPS. We recommend starting with a low
--   <tt>minProvisionedTPS</tt>, track your usage using Amazon CloudWatch
--   metrics, and then increase the <tt>minProvisionedTPS</tt> as
--   necessary.
--   
--   <b>Status</b>
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   To get the campaign status, call DescribeCampaign.
--   
--   Wait until the <tt>status</tt> of the campaign is <tt>ACTIVE</tt>
--   before asking the campaign for recommendations.
--   
--   <b>Related APIs</b>
--   
--   <ul>
--   <li>ListCampaigns</li>
--   <li>DescribeCampaign</li>
--   <li>UpdateCampaign</li>
--   <li>DeleteCampaign</li>
--   </ul>
module Amazonka.Personalize.CreateCampaign

-- | <i>See:</i> <a>newCreateCampaign</a> smart constructor.
data CreateCampaign
CreateCampaign' :: Maybe CampaignConfig -> Maybe Natural -> Text -> Text -> CreateCampaign

-- | The configuration details of a campaign.
[$sel:campaignConfig:CreateCampaign'] :: CreateCampaign -> Maybe CampaignConfig

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second that Amazon Personalize will support.
[$sel:minProvisionedTPS:CreateCampaign'] :: CreateCampaign -> Maybe Natural

-- | A name for the new campaign. The campaign name must be unique within
--   your account.
[$sel:name:CreateCampaign'] :: CreateCampaign -> Text

-- | The Amazon Resource Name (ARN) of the solution version to deploy.
[$sel:solutionVersionArn:CreateCampaign'] :: CreateCampaign -> Text

-- | Create a value of <a>CreateCampaign</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaignConfig:CreateCampaign'</a>,
--   <a>createCampaign_campaignConfig</a> - The configuration details of a
--   campaign.
--   
--   <a>$sel:minProvisionedTPS:CreateCampaign'</a>,
--   <a>createCampaign_minProvisionedTPS</a> - Specifies the requested
--   minimum provisioned transactions (recommendations) per second that
--   Amazon Personalize will support.
--   
--   <a>$sel:name:CreateCampaign'</a>, <a>createCampaign_name</a> - A name
--   for the new campaign. The campaign name must be unique within your
--   account.
--   
--   <a>$sel:solutionVersionArn:CreateCampaign'</a>,
--   <a>createCampaign_solutionVersionArn</a> - The Amazon Resource Name
--   (ARN) of the solution version to deploy.
newCreateCampaign :: Text -> Text -> CreateCampaign

-- | The configuration details of a campaign.
createCampaign_campaignConfig :: Lens' CreateCampaign (Maybe CampaignConfig)

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second that Amazon Personalize will support.
createCampaign_minProvisionedTPS :: Lens' CreateCampaign (Maybe Natural)

-- | A name for the new campaign. The campaign name must be unique within
--   your account.
createCampaign_name :: Lens' CreateCampaign Text

-- | The Amazon Resource Name (ARN) of the solution version to deploy.
createCampaign_solutionVersionArn :: Lens' CreateCampaign Text

-- | <i>See:</i> <a>newCreateCampaignResponse</a> smart constructor.
data CreateCampaignResponse
CreateCampaignResponse' :: Maybe Text -> Int -> CreateCampaignResponse

-- | The Amazon Resource Name (ARN) of the campaign.
[$sel:campaignArn:CreateCampaignResponse'] :: CreateCampaignResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateCampaignResponse'] :: CreateCampaignResponse -> Int

-- | Create a value of <a>CreateCampaignResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaignArn:CreateCampaignResponse'</a>,
--   <a>createCampaignResponse_campaignArn</a> - The Amazon Resource Name
--   (ARN) of the campaign.
--   
--   <a>$sel:httpStatus:CreateCampaignResponse'</a>,
--   <a>createCampaignResponse_httpStatus</a> - The response's http status
--   code.
newCreateCampaignResponse :: Int -> CreateCampaignResponse

-- | The Amazon Resource Name (ARN) of the campaign.
createCampaignResponse_campaignArn :: Lens' CreateCampaignResponse (Maybe Text)

-- | The response's http status code.
createCampaignResponse_httpStatus :: Lens' CreateCampaignResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.CreateCampaign.CreateCampaign
instance GHC.Show.Show Amazonka.Personalize.CreateCampaign.CreateCampaign
instance GHC.Read.Read Amazonka.Personalize.CreateCampaign.CreateCampaign
instance GHC.Classes.Eq Amazonka.Personalize.CreateCampaign.CreateCampaign
instance GHC.Generics.Generic Amazonka.Personalize.CreateCampaign.CreateCampaignResponse
instance GHC.Show.Show Amazonka.Personalize.CreateCampaign.CreateCampaignResponse
instance GHC.Read.Read Amazonka.Personalize.CreateCampaign.CreateCampaignResponse
instance GHC.Classes.Eq Amazonka.Personalize.CreateCampaign.CreateCampaignResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.CreateCampaign.CreateCampaign
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateCampaign.CreateCampaignResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.CreateCampaign.CreateCampaign
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateCampaign.CreateCampaign
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.CreateCampaign.CreateCampaign
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.CreateCampaign.CreateCampaign
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.CreateCampaign.CreateCampaign
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.CreateCampaign.CreateCampaign


-- | Creates a batch inference job. The operation can handle up to 50
--   million records and the input file must be in JSON format. For more
--   information, see recommendations-batch.
module Amazonka.Personalize.CreateBatchInferenceJob

-- | <i>See:</i> <a>newCreateBatchInferenceJob</a> smart constructor.
data CreateBatchInferenceJob
CreateBatchInferenceJob' :: Maybe Int -> Maybe BatchInferenceJobConfig -> Maybe Text -> Text -> Text -> BatchInferenceJobInput -> BatchInferenceJobOutput -> Text -> CreateBatchInferenceJob

-- | The number of recommendations to retreive.
[$sel:numResults:CreateBatchInferenceJob'] :: CreateBatchInferenceJob -> Maybe Int

-- | The configuration details of a batch inference job.
[$sel:batchInferenceJobConfig:CreateBatchInferenceJob'] :: CreateBatchInferenceJob -> Maybe BatchInferenceJobConfig

-- | The ARN of the filter to apply to the batch inference job. For more
--   information on using filters, see <a>Filtering Batch
--   Recommendations</a>..
[$sel:filterArn:CreateBatchInferenceJob'] :: CreateBatchInferenceJob -> Maybe Text

-- | The name of the batch inference job to create.
[$sel:jobName:CreateBatchInferenceJob'] :: CreateBatchInferenceJob -> Text

-- | The Amazon Resource Name (ARN) of the solution version that will be
--   used to generate the batch inference recommendations.
[$sel:solutionVersionArn:CreateBatchInferenceJob'] :: CreateBatchInferenceJob -> Text

-- | The Amazon S3 path that leads to the input file to base your
--   recommendations on. The input material must be in JSON format.
[$sel:jobInput:CreateBatchInferenceJob'] :: CreateBatchInferenceJob -> BatchInferenceJobInput

-- | The path to the Amazon S3 bucket where the job's output will be
--   stored.
[$sel:jobOutput:CreateBatchInferenceJob'] :: CreateBatchInferenceJob -> BatchInferenceJobOutput

-- | The ARN of the Amazon Identity and Access Management role that has
--   permissions to read and write to your input and output Amazon S3
--   buckets respectively.
[$sel:roleArn:CreateBatchInferenceJob'] :: CreateBatchInferenceJob -> Text

-- | Create a value of <a>CreateBatchInferenceJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numResults:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_numResults</a> - The number of
--   recommendations to retreive.
--   
--   <a>$sel:batchInferenceJobConfig:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_batchInferenceJobConfig</a> - The
--   configuration details of a batch inference job.
--   
--   <a>$sel:filterArn:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_filterArn</a> - The ARN of the filter to
--   apply to the batch inference job. For more information on using
--   filters, see <a>Filtering Batch Recommendations</a>..
--   
--   <a>$sel:jobName:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_jobName</a> - The name of the batch
--   inference job to create.
--   
--   <a>$sel:solutionVersionArn:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_solutionVersionArn</a> - The Amazon
--   Resource Name (ARN) of the solution version that will be used to
--   generate the batch inference recommendations.
--   
--   <a>$sel:jobInput:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_jobInput</a> - The Amazon S3 path that
--   leads to the input file to base your recommendations on. The input
--   material must be in JSON format.
--   
--   <a>$sel:jobOutput:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_jobOutput</a> - The path to the Amazon S3
--   bucket where the job's output will be stored.
--   
--   <a>$sel:roleArn:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_roleArn</a> - The ARN of the Amazon
--   Identity and Access Management role that has permissions to read and
--   write to your input and output Amazon S3 buckets respectively.
newCreateBatchInferenceJob :: Text -> Text -> BatchInferenceJobInput -> BatchInferenceJobOutput -> Text -> CreateBatchInferenceJob

-- | The number of recommendations to retreive.
createBatchInferenceJob_numResults :: Lens' CreateBatchInferenceJob (Maybe Int)

-- | The configuration details of a batch inference job.
createBatchInferenceJob_batchInferenceJobConfig :: Lens' CreateBatchInferenceJob (Maybe BatchInferenceJobConfig)

-- | The ARN of the filter to apply to the batch inference job. For more
--   information on using filters, see <a>Filtering Batch
--   Recommendations</a>..
createBatchInferenceJob_filterArn :: Lens' CreateBatchInferenceJob (Maybe Text)

-- | The name of the batch inference job to create.
createBatchInferenceJob_jobName :: Lens' CreateBatchInferenceJob Text

-- | The Amazon Resource Name (ARN) of the solution version that will be
--   used to generate the batch inference recommendations.
createBatchInferenceJob_solutionVersionArn :: Lens' CreateBatchInferenceJob Text

-- | The Amazon S3 path that leads to the input file to base your
--   recommendations on. The input material must be in JSON format.
createBatchInferenceJob_jobInput :: Lens' CreateBatchInferenceJob BatchInferenceJobInput

-- | The path to the Amazon S3 bucket where the job's output will be
--   stored.
createBatchInferenceJob_jobOutput :: Lens' CreateBatchInferenceJob BatchInferenceJobOutput

-- | The ARN of the Amazon Identity and Access Management role that has
--   permissions to read and write to your input and output Amazon S3
--   buckets respectively.
createBatchInferenceJob_roleArn :: Lens' CreateBatchInferenceJob Text

-- | <i>See:</i> <a>newCreateBatchInferenceJobResponse</a> smart
--   constructor.
data CreateBatchInferenceJobResponse
CreateBatchInferenceJobResponse' :: Maybe Text -> Int -> CreateBatchInferenceJobResponse

-- | The ARN of the batch inference job.
[$sel:batchInferenceJobArn:CreateBatchInferenceJobResponse'] :: CreateBatchInferenceJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateBatchInferenceJobResponse'] :: CreateBatchInferenceJobResponse -> Int

-- | Create a value of <a>CreateBatchInferenceJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchInferenceJobArn:CreateBatchInferenceJobResponse'</a>,
--   <a>createBatchInferenceJobResponse_batchInferenceJobArn</a> - The ARN
--   of the batch inference job.
--   
--   <a>$sel:httpStatus:CreateBatchInferenceJobResponse'</a>,
--   <a>createBatchInferenceJobResponse_httpStatus</a> - The response's
--   http status code.
newCreateBatchInferenceJobResponse :: Int -> CreateBatchInferenceJobResponse

-- | The ARN of the batch inference job.
createBatchInferenceJobResponse_batchInferenceJobArn :: Lens' CreateBatchInferenceJobResponse (Maybe Text)

-- | The response's http status code.
createBatchInferenceJobResponse_httpStatus :: Lens' CreateBatchInferenceJobResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJob
instance GHC.Show.Show Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJob
instance GHC.Read.Read Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJob
instance GHC.Classes.Eq Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJob
instance GHC.Generics.Generic Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJobResponse
instance GHC.Show.Show Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJobResponse
instance GHC.Read.Read Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJobResponse
instance GHC.Classes.Eq Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJob
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJob
instance Control.DeepSeq.NFData Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJob
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJob
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.CreateBatchInferenceJob.CreateBatchInferenceJob


-- | Updates a campaign by either deploying a new solution or changing the
--   value of the campaign's <tt>minProvisionedTPS</tt> parameter.
--   
--   To update a campaign, the campaign status must be ACTIVE or CREATE
--   FAILED. Check the campaign status using the DescribeCampaign API.
--   
--   You must wait until the <tt>status</tt> of the updated campaign is
--   <tt>ACTIVE</tt> before asking the campaign for recommendations.
--   
--   For more information on campaigns, see CreateCampaign.
module Amazonka.Personalize.UpdateCampaign

-- | <i>See:</i> <a>newUpdateCampaign</a> smart constructor.
data UpdateCampaign
UpdateCampaign' :: Maybe CampaignConfig -> Maybe Natural -> Maybe Text -> Text -> UpdateCampaign

-- | The configuration details of a campaign.
[$sel:campaignConfig:UpdateCampaign'] :: UpdateCampaign -> Maybe CampaignConfig

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second that Amazon Personalize will support.
[$sel:minProvisionedTPS:UpdateCampaign'] :: UpdateCampaign -> Maybe Natural

-- | The ARN of a new solution version to deploy.
[$sel:solutionVersionArn:UpdateCampaign'] :: UpdateCampaign -> Maybe Text

-- | The Amazon Resource Name (ARN) of the campaign.
[$sel:campaignArn:UpdateCampaign'] :: UpdateCampaign -> Text

-- | Create a value of <a>UpdateCampaign</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaignConfig:UpdateCampaign'</a>,
--   <a>updateCampaign_campaignConfig</a> - The configuration details of a
--   campaign.
--   
--   <a>$sel:minProvisionedTPS:UpdateCampaign'</a>,
--   <a>updateCampaign_minProvisionedTPS</a> - Specifies the requested
--   minimum provisioned transactions (recommendations) per second that
--   Amazon Personalize will support.
--   
--   <a>$sel:solutionVersionArn:UpdateCampaign'</a>,
--   <a>updateCampaign_solutionVersionArn</a> - The ARN of a new solution
--   version to deploy.
--   
--   <a>$sel:campaignArn:UpdateCampaign'</a>,
--   <a>updateCampaign_campaignArn</a> - The Amazon Resource Name (ARN) of
--   the campaign.
newUpdateCampaign :: Text -> UpdateCampaign

-- | The configuration details of a campaign.
updateCampaign_campaignConfig :: Lens' UpdateCampaign (Maybe CampaignConfig)

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second that Amazon Personalize will support.
updateCampaign_minProvisionedTPS :: Lens' UpdateCampaign (Maybe Natural)

-- | The ARN of a new solution version to deploy.
updateCampaign_solutionVersionArn :: Lens' UpdateCampaign (Maybe Text)

-- | The Amazon Resource Name (ARN) of the campaign.
updateCampaign_campaignArn :: Lens' UpdateCampaign Text

-- | <i>See:</i> <a>newUpdateCampaignResponse</a> smart constructor.
data UpdateCampaignResponse
UpdateCampaignResponse' :: Maybe Text -> Int -> UpdateCampaignResponse

-- | The same campaign ARN as given in the request.
[$sel:campaignArn:UpdateCampaignResponse'] :: UpdateCampaignResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateCampaignResponse'] :: UpdateCampaignResponse -> Int

-- | Create a value of <a>UpdateCampaignResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaignArn:UpdateCampaign'</a>,
--   <a>updateCampaignResponse_campaignArn</a> - The same campaign ARN as
--   given in the request.
--   
--   <a>$sel:httpStatus:UpdateCampaignResponse'</a>,
--   <a>updateCampaignResponse_httpStatus</a> - The response's http status
--   code.
newUpdateCampaignResponse :: Int -> UpdateCampaignResponse

-- | The same campaign ARN as given in the request.
updateCampaignResponse_campaignArn :: Lens' UpdateCampaignResponse (Maybe Text)

-- | The response's http status code.
updateCampaignResponse_httpStatus :: Lens' UpdateCampaignResponse Int
instance GHC.Generics.Generic Amazonka.Personalize.UpdateCampaign.UpdateCampaign
instance GHC.Show.Show Amazonka.Personalize.UpdateCampaign.UpdateCampaign
instance GHC.Read.Read Amazonka.Personalize.UpdateCampaign.UpdateCampaign
instance GHC.Classes.Eq Amazonka.Personalize.UpdateCampaign.UpdateCampaign
instance GHC.Generics.Generic Amazonka.Personalize.UpdateCampaign.UpdateCampaignResponse
instance GHC.Show.Show Amazonka.Personalize.UpdateCampaign.UpdateCampaignResponse
instance GHC.Read.Read Amazonka.Personalize.UpdateCampaign.UpdateCampaignResponse
instance GHC.Classes.Eq Amazonka.Personalize.UpdateCampaign.UpdateCampaignResponse
instance Amazonka.Types.AWSRequest Amazonka.Personalize.UpdateCampaign.UpdateCampaign
instance Control.DeepSeq.NFData Amazonka.Personalize.UpdateCampaign.UpdateCampaignResponse
instance Data.Hashable.Class.Hashable Amazonka.Personalize.UpdateCampaign.UpdateCampaign
instance Control.DeepSeq.NFData Amazonka.Personalize.UpdateCampaign.UpdateCampaign
instance Amazonka.Data.Headers.ToHeaders Amazonka.Personalize.UpdateCampaign.UpdateCampaign
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Personalize.UpdateCampaign.UpdateCampaign
instance Amazonka.Data.Path.ToPath Amazonka.Personalize.UpdateCampaign.UpdateCampaign
instance Amazonka.Data.Query.ToQuery Amazonka.Personalize.UpdateCampaign.UpdateCampaign


module Amazonka.Personalize.Lens

-- | A token returned from the previous call to <tt>ListDatasetGroups</tt>
--   for getting the next set of dataset groups (if they exist).
listDatasetGroups_nextToken :: Lens' ListDatasetGroups (Maybe Text)

-- | The maximum number of dataset groups to return.
listDatasetGroups_maxResults :: Lens' ListDatasetGroups (Maybe Natural)

-- | A token for getting the next set of dataset groups (if they exist).
listDatasetGroupsResponse_nextToken :: Lens' ListDatasetGroupsResponse (Maybe Text)

-- | The list of your dataset groups.
listDatasetGroupsResponse_datasetGroups :: Lens' ListDatasetGroupsResponse (Maybe [DatasetGroupSummary])

-- | The response's http status code.
listDatasetGroupsResponse_httpStatus :: Lens' ListDatasetGroupsResponse Int

-- | The number of recommendations to retreive.
createBatchInferenceJob_numResults :: Lens' CreateBatchInferenceJob (Maybe Int)

-- | The configuration details of a batch inference job.
createBatchInferenceJob_batchInferenceJobConfig :: Lens' CreateBatchInferenceJob (Maybe BatchInferenceJobConfig)

-- | The ARN of the filter to apply to the batch inference job. For more
--   information on using filters, see <a>Filtering Batch
--   Recommendations</a>..
createBatchInferenceJob_filterArn :: Lens' CreateBatchInferenceJob (Maybe Text)

-- | The name of the batch inference job to create.
createBatchInferenceJob_jobName :: Lens' CreateBatchInferenceJob Text

-- | The Amazon Resource Name (ARN) of the solution version that will be
--   used to generate the batch inference recommendations.
createBatchInferenceJob_solutionVersionArn :: Lens' CreateBatchInferenceJob Text

-- | The Amazon S3 path that leads to the input file to base your
--   recommendations on. The input material must be in JSON format.
createBatchInferenceJob_jobInput :: Lens' CreateBatchInferenceJob BatchInferenceJobInput

-- | The path to the Amazon S3 bucket where the job's output will be
--   stored.
createBatchInferenceJob_jobOutput :: Lens' CreateBatchInferenceJob BatchInferenceJobOutput

-- | The ARN of the Amazon Identity and Access Management role that has
--   permissions to read and write to your input and output Amazon S3
--   buckets respectively.
createBatchInferenceJob_roleArn :: Lens' CreateBatchInferenceJob Text

-- | The ARN of the batch inference job.
createBatchInferenceJobResponse_batchInferenceJobArn :: Lens' CreateBatchInferenceJobResponse (Maybe Text)

-- | The response's http status code.
createBatchInferenceJobResponse_httpStatus :: Lens' CreateBatchInferenceJobResponse Int

-- | The name of the filter to create.
createFilter_name :: Lens' CreateFilter Text

-- | The ARN of the dataset group that the filter will belong to.
createFilter_datasetGroupArn :: Lens' CreateFilter Text

-- | The filter expression defines which items are included or excluded
--   from recommendations. Filter expression must follow specific format
--   rules. For information about filter expression structure and syntax,
--   see filter-expressions.
createFilter_filterExpression :: Lens' CreateFilter Text

-- | The ARN of the new filter.
createFilterResponse_filterArn :: Lens' CreateFilterResponse (Maybe Text)

-- | The response's http status code.
createFilterResponse_httpStatus :: Lens' CreateFilterResponse Int

-- | The name for the dataset import job.
createDatasetImportJob_jobName :: Lens' CreateDatasetImportJob Text

-- | The ARN of the dataset that receives the imported data.
createDatasetImportJob_datasetArn :: Lens' CreateDatasetImportJob Text

-- | The Amazon S3 bucket that contains the training data to import.
createDatasetImportJob_dataSource :: Lens' CreateDatasetImportJob DataSource

-- | The ARN of the IAM role that has permissions to read from the Amazon
--   S3 data source.
createDatasetImportJob_roleArn :: Lens' CreateDatasetImportJob Text

-- | The ARN of the dataset import job.
createDatasetImportJobResponse_datasetImportJobArn :: Lens' CreateDatasetImportJobResponse (Maybe Text)

-- | The response's http status code.
createDatasetImportJobResponse_httpStatus :: Lens' CreateDatasetImportJobResponse Int

-- | The Amazon Resource Name (ARN) of the solution to describe.
describeSolution_solutionArn :: Lens' DescribeSolution Text

-- | An object that describes the solution.
describeSolutionResponse_solution :: Lens' DescribeSolutionResponse (Maybe Solution)

-- | The response's http status code.
describeSolutionResponse_httpStatus :: Lens' DescribeSolutionResponse Int

-- | The Amazon Resource Name (ARN) of the dataset export job to describe.
describeDatasetExportJob_datasetExportJobArn :: Lens' DescribeDatasetExportJob Text

-- | Information about the dataset export job, including the status.
--   
--   The status is one of the following values:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
describeDatasetExportJobResponse_datasetExportJob :: Lens' DescribeDatasetExportJobResponse (Maybe DatasetExportJob)

-- | The response's http status code.
describeDatasetExportJobResponse_httpStatus :: Lens' DescribeDatasetExportJobResponse Int

-- | The Amazon Resource Name (ARN) of the campaign to delete.
deleteCampaign_campaignArn :: Lens' DeleteCampaign Text

-- | The configuration details of a campaign.
updateCampaign_campaignConfig :: Lens' UpdateCampaign (Maybe CampaignConfig)

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second that Amazon Personalize will support.
updateCampaign_minProvisionedTPS :: Lens' UpdateCampaign (Maybe Natural)

-- | The ARN of a new solution version to deploy.
updateCampaign_solutionVersionArn :: Lens' UpdateCampaign (Maybe Text)

-- | The Amazon Resource Name (ARN) of the campaign.
updateCampaign_campaignArn :: Lens' UpdateCampaign Text

-- | The same campaign ARN as given in the request.
updateCampaignResponse_campaignArn :: Lens' UpdateCampaignResponse (Maybe Text)

-- | The response's http status code.
updateCampaignResponse_httpStatus :: Lens' UpdateCampaignResponse Int

-- | The Amazon Resource Name (ARN) of the solution to list the campaigns
--   for. When a solution is not specified, all the campaigns associated
--   with the account are listed.
listCampaigns_solutionArn :: Lens' ListCampaigns (Maybe Text)

-- | A token returned from the previous call to <tt>ListCampaigns</tt> for
--   getting the next set of campaigns (if they exist).
listCampaigns_nextToken :: Lens' ListCampaigns (Maybe Text)

-- | The maximum number of campaigns to return.
listCampaigns_maxResults :: Lens' ListCampaigns (Maybe Natural)

-- | A list of the campaigns.
listCampaignsResponse_campaigns :: Lens' ListCampaignsResponse (Maybe [CampaignSummary])

-- | A token for getting the next set of campaigns (if they exist).
listCampaignsResponse_nextToken :: Lens' ListCampaignsResponse (Maybe Text)

-- | The response's http status code.
listCampaignsResponse_httpStatus :: Lens' ListCampaignsResponse Int

-- | The Amazon Resource Name (ARN) of the dataset to describe.
describeDataset_datasetArn :: Lens' DescribeDataset Text

-- | A listing of the dataset's properties.
describeDatasetResponse_dataset :: Lens' DescribeDatasetResponse (Maybe Dataset)

-- | The response's http status code.
describeDatasetResponse_httpStatus :: Lens' DescribeDatasetResponse Int

-- | The scope of training to be performed when creating the solution
--   version. The <tt>FULL</tt> option trains the solution version based on
--   the entirety of the input solution's training data, while the
--   <tt>UPDATE</tt> option processes only the data that has changed in
--   comparison to the input solution. Choose <tt>UPDATE</tt> when you want
--   to incrementally update your solution version instead of creating an
--   entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
createSolutionVersion_trainingMode :: Lens' CreateSolutionVersion (Maybe TrainingMode)

-- | The Amazon Resource Name (ARN) of the solution containing the training
--   configuration information.
createSolutionVersion_solutionArn :: Lens' CreateSolutionVersion Text

-- | The ARN of the new solution version.
createSolutionVersionResponse_solutionVersionArn :: Lens' CreateSolutionVersionResponse (Maybe Text)

-- | The response's http status code.
createSolutionVersionResponse_httpStatus :: Lens' CreateSolutionVersionResponse Int

-- | The Amazon Resource Name (ARN) of the solution version you want to
--   stop creating.
stopSolutionVersionCreation_solutionVersionArn :: Lens' StopSolutionVersionCreation Text

-- | The configuration details of a campaign.
createCampaign_campaignConfig :: Lens' CreateCampaign (Maybe CampaignConfig)

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second that Amazon Personalize will support.
createCampaign_minProvisionedTPS :: Lens' CreateCampaign (Maybe Natural)

-- | A name for the new campaign. The campaign name must be unique within
--   your account.
createCampaign_name :: Lens' CreateCampaign Text

-- | The Amazon Resource Name (ARN) of the solution version to deploy.
createCampaign_solutionVersionArn :: Lens' CreateCampaign Text

-- | The Amazon Resource Name (ARN) of the campaign.
createCampaignResponse_campaignArn :: Lens' CreateCampaignResponse (Maybe Text)

-- | The response's http status code.
createCampaignResponse_httpStatus :: Lens' CreateCampaignResponse Int

-- | The ARN of the filter to describe.
describeFilter_filterArn :: Lens' DescribeFilter Text

-- | The filter's details.
describeFilterResponse_filter :: Lens' DescribeFilterResponse (Maybe Filter)

-- | The response's http status code.
describeFilterResponse_httpStatus :: Lens' DescribeFilterResponse Int

-- | A token returned from the previous call to <tt>ListEventTrackers</tt>
--   for getting the next set of event trackers (if they exist).
listEventTrackers_nextToken :: Lens' ListEventTrackers (Maybe Text)

-- | The ARN of a dataset group used to filter the response.
listEventTrackers_datasetGroupArn :: Lens' ListEventTrackers (Maybe Text)

-- | The maximum number of event trackers to return.
listEventTrackers_maxResults :: Lens' ListEventTrackers (Maybe Natural)

-- | A list of event trackers.
listEventTrackersResponse_eventTrackers :: Lens' ListEventTrackersResponse (Maybe [EventTrackerSummary])

-- | A token for getting the next set of event trackers (if they exist).
listEventTrackersResponse_nextToken :: Lens' ListEventTrackersResponse (Maybe Text)

-- | The response's http status code.
listEventTrackersResponse_httpStatus :: Lens' ListEventTrackersResponse Int

-- | The data to export, based on how you imported the data. You can choose
--   to export only <tt>BULK</tt> data that you imported using a dataset
--   import job, only <tt>PUT</tt> data that you imported incrementally
--   (using the console, PutEvents, PutUsers and PutItems operations), or
--   <tt>ALL</tt> for both types. The default value is <tt>PUT</tt>.
createDatasetExportJob_ingestionMode :: Lens' CreateDatasetExportJob (Maybe IngestionMode)

-- | The name for the dataset export job.
createDatasetExportJob_jobName :: Lens' CreateDatasetExportJob Text

-- | The Amazon Resource Name (ARN) of the dataset that contains the data
--   to export.
createDatasetExportJob_datasetArn :: Lens' CreateDatasetExportJob Text

-- | The Amazon Resource Name (ARN) of the IAM service role that has
--   permissions to add data to your output Amazon S3 bucket.
createDatasetExportJob_roleArn :: Lens' CreateDatasetExportJob Text

-- | The path to the Amazon S3 bucket where the job's output is stored.
createDatasetExportJob_jobOutput :: Lens' CreateDatasetExportJob DatasetExportJobOutput

-- | The Amazon Resource Name (ARN) of the dataset export job.
createDatasetExportJobResponse_datasetExportJobArn :: Lens' CreateDatasetExportJobResponse (Maybe Text)

-- | The response's http status code.
createDatasetExportJobResponse_httpStatus :: Lens' CreateDatasetExportJobResponse Int

-- | Whether to perform automated machine learning (AutoML). The default is
--   <tt>false</tt>. For this case, you must specify <tt>recipeArn</tt>.
--   
--   When set to <tt>true</tt>, Amazon Personalize analyzes your training
--   data and selects the optimal USER_PERSONALIZATION recipe and
--   hyperparameters. In this case, you must omit <tt>recipeArn</tt>.
--   Amazon Personalize determines the optimal recipe by running tests with
--   different values for the hyperparameters. AutoML lengthens the
--   training process as compared to selecting a specific recipe.
createSolution_performAutoML :: Lens' CreateSolution (Maybe Bool)

-- | The ARN of the recipe to use for model training. Only specified when
--   <tt>performAutoML</tt> is false.
createSolution_recipeArn :: Lens' CreateSolution (Maybe Text)

-- | When your have multiple event types (using an <tt>EVENT_TYPE</tt>
--   schema field), this parameter specifies which event type (for example,
--   'click' or 'like') is used for training the model.
--   
--   If you do not provide an <tt>eventType</tt>, Amazon Personalize will
--   use all interactions for training with equal weight regardless of
--   type.
createSolution_eventType :: Lens' CreateSolution (Maybe Text)

-- | The configuration to use with the solution. When
--   <tt>performAutoML</tt> is set to true, Amazon Personalize only
--   evaluates the <tt>autoMLConfig</tt> section of the solution
--   configuration.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
createSolution_solutionConfig :: Lens' CreateSolution (Maybe SolutionConfig)

-- | Whether to perform hyperparameter optimization (HPO) on the specified
--   or selected recipe. The default is <tt>false</tt>.
--   
--   When performing AutoML, this parameter is always <tt>true</tt> and you
--   should not set it to <tt>false</tt>.
createSolution_performHPO :: Lens' CreateSolution (Maybe Bool)

-- | The name for the solution.
createSolution_name :: Lens' CreateSolution Text

-- | The Amazon Resource Name (ARN) of the dataset group that provides the
--   training data.
createSolution_datasetGroupArn :: Lens' CreateSolution Text

-- | The ARN of the solution.
createSolutionResponse_solutionArn :: Lens' CreateSolutionResponse (Maybe Text)

-- | The response's http status code.
createSolutionResponse_httpStatus :: Lens' CreateSolutionResponse Int

-- | The Amazon Resource Name (ARN) of the event tracker to delete.
deleteEventTracker_eventTrackerArn :: Lens' DeleteEventTracker Text

-- | The Amazon Resource Name (ARN) of the dataset import job to describe.
describeDatasetImportJob_datasetImportJobArn :: Lens' DescribeDatasetImportJob Text

-- | Information about the dataset import job, including the status.
--   
--   The status is one of the following values:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
describeDatasetImportJobResponse_datasetImportJob :: Lens' DescribeDatasetImportJobResponse (Maybe DatasetImportJob)

-- | The response's http status code.
describeDatasetImportJobResponse_httpStatus :: Lens' DescribeDatasetImportJobResponse Int

-- | A token returned from the previous call to <tt>ListSchemas</tt> for
--   getting the next set of schemas (if they exist).
listSchemas_nextToken :: Lens' ListSchemas (Maybe Text)

-- | The maximum number of schemas to return.
listSchemas_maxResults :: Lens' ListSchemas (Maybe Natural)

-- | A list of schemas.
listSchemasResponse_schemas :: Lens' ListSchemasResponse (Maybe [DatasetSchemaSummary])

-- | A token used to get the next set of schemas (if they exist).
listSchemasResponse_nextToken :: Lens' ListSchemasResponse (Maybe Text)

-- | The response's http status code.
listSchemasResponse_httpStatus :: Lens' ListSchemasResponse Int

-- | The name for the event tracker.
createEventTracker_name :: Lens' CreateEventTracker Text

-- | The Amazon Resource Name (ARN) of the dataset group that receives the
--   event data.
createEventTracker_datasetGroupArn :: Lens' CreateEventTracker Text

-- | The ID of the event tracker. Include this ID in requests to the
--   <a>PutEvents</a> API.
createEventTrackerResponse_trackingId :: Lens' CreateEventTrackerResponse (Maybe Text)

-- | The ARN of the event tracker.
createEventTrackerResponse_eventTrackerArn :: Lens' CreateEventTrackerResponse (Maybe Text)

-- | The response's http status code.
createEventTrackerResponse_httpStatus :: Lens' CreateEventTrackerResponse Int

-- | The ARN of the solution to delete.
deleteSolution_solutionArn :: Lens' DeleteSolution Text

-- | The Amazon Resource Name (ARN) of the campaign.
describeCampaign_campaignArn :: Lens' DescribeCampaign Text

-- | The properties of the campaign.
describeCampaignResponse_campaign :: Lens' DescribeCampaignResponse (Maybe Campaign)

-- | The response's http status code.
describeCampaignResponse_httpStatus :: Lens' DescribeCampaignResponse Int

-- | The Amazon Resource Name (ARN) of the dataset to delete.
deleteDataset_datasetArn :: Lens' DeleteDataset Text

-- | The name for the dataset.
createDataset_name :: Lens' CreateDataset Text

-- | The ARN of the schema to associate with the dataset. The schema
--   defines the dataset fields.
createDataset_schemaArn :: Lens' CreateDataset Text

-- | The Amazon Resource Name (ARN) of the dataset group to add the dataset
--   to.
createDataset_datasetGroupArn :: Lens' CreateDataset Text

-- | The type of dataset.
--   
--   One of the following (case insensitive) values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
createDataset_datasetType :: Lens' CreateDataset Text

-- | The ARN of the dataset.
createDatasetResponse_datasetArn :: Lens' CreateDatasetResponse (Maybe Text)

-- | The response's http status code.
createDatasetResponse_httpStatus :: Lens' CreateDatasetResponse Int

-- | The Amazon Resource Name (ARN) of the solution version.
describeSolutionVersion_solutionVersionArn :: Lens' DescribeSolutionVersion Text

-- | The solution version.
describeSolutionVersionResponse_solutionVersion :: Lens' DescribeSolutionVersionResponse (Maybe SolutionVersion)

-- | The response's http status code.
describeSolutionVersionResponse_httpStatus :: Lens' DescribeSolutionVersionResponse Int

-- | The Amazon Resource Name (ARN) of the event tracker to describe.
describeEventTracker_eventTrackerArn :: Lens' DescribeEventTracker Text

-- | An object that describes the event tracker.
describeEventTrackerResponse_eventTracker :: Lens' DescribeEventTrackerResponse (Maybe EventTracker)

-- | The response's http status code.
describeEventTrackerResponse_httpStatus :: Lens' DescribeEventTrackerResponse Int

-- | The Amazon Resource Name (ARN) of the dataset to list the dataset
--   import jobs for.
listDatasetImportJobs_datasetArn :: Lens' ListDatasetImportJobs (Maybe Text)

-- | A token returned from the previous call to
--   <tt>ListDatasetImportJobs</tt> for getting the next set of dataset
--   import jobs (if they exist).
listDatasetImportJobs_nextToken :: Lens' ListDatasetImportJobs (Maybe Text)

-- | The maximum number of dataset import jobs to return.
listDatasetImportJobs_maxResults :: Lens' ListDatasetImportJobs (Maybe Natural)

-- | The list of dataset import jobs.
listDatasetImportJobsResponse_datasetImportJobs :: Lens' ListDatasetImportJobsResponse (Maybe [DatasetImportJobSummary])

-- | A token for getting the next set of dataset import jobs (if they
--   exist).
listDatasetImportJobsResponse_nextToken :: Lens' ListDatasetImportJobsResponse (Maybe Text)

-- | The response's http status code.
listDatasetImportJobsResponse_httpStatus :: Lens' ListDatasetImportJobsResponse Int

-- | The ARN of the filter to delete.
deleteFilter_filterArn :: Lens' DeleteFilter Text

-- | The token to request the next page of results.
listBatchInferenceJobs_nextToken :: Lens' ListBatchInferenceJobs (Maybe Text)

-- | The maximum number of batch inference job results to return in each
--   page. The default value is 100.
listBatchInferenceJobs_maxResults :: Lens' ListBatchInferenceJobs (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the solution version from which the
--   batch inference jobs were created.
listBatchInferenceJobs_solutionVersionArn :: Lens' ListBatchInferenceJobs (Maybe Text)

-- | A list containing information on each job that is returned.
listBatchInferenceJobsResponse_batchInferenceJobs :: Lens' ListBatchInferenceJobsResponse (Maybe [BatchInferenceJobSummary])

-- | The token to use to retrieve the next page of results. The value is
--   <tt>null</tt> when there are no more results to return.
listBatchInferenceJobsResponse_nextToken :: Lens' ListBatchInferenceJobsResponse (Maybe Text)

-- | The response's http status code.
listBatchInferenceJobsResponse_httpStatus :: Lens' ListBatchInferenceJobsResponse Int

-- | A token returned from the previous call to <tt>ListFilters</tt> for
--   getting the next set of filters (if they exist).
listFilters_nextToken :: Lens' ListFilters (Maybe Text)

-- | The ARN of the dataset group that contains the filters.
listFilters_datasetGroupArn :: Lens' ListFilters (Maybe Text)

-- | The maximum number of filters to return.
listFilters_maxResults :: Lens' ListFilters (Maybe Natural)

-- | A list of returned filters.
listFiltersResponse_filters :: Lens' ListFiltersResponse (Maybe [FilterSummary])

-- | A token for getting the next set of filters (if they exist).
listFiltersResponse_nextToken :: Lens' ListFiltersResponse (Maybe Text)

-- | The response's http status code.
listFiltersResponse_httpStatus :: Lens' ListFiltersResponse Int

-- | The ARN of the dataset group to delete.
deleteDatasetGroup_datasetGroupArn :: Lens' DeleteDatasetGroup Text

-- | The Amazon Resource Name (ARN) of the schema to retrieve.
describeSchema_schemaArn :: Lens' DescribeSchema Text

-- | The requested schema.
describeSchemaResponse_schema :: Lens' DescribeSchemaResponse (Maybe DatasetSchema)

-- | The response's http status code.
describeSchemaResponse_httpStatus :: Lens' DescribeSchemaResponse Int

-- | The Amazon Resource Name (ARN) of the algorithm to describe.
describeAlgorithm_algorithmArn :: Lens' DescribeAlgorithm Text

-- | A listing of the properties of the algorithm.
describeAlgorithmResponse_algorithm :: Lens' DescribeAlgorithmResponse (Maybe Algorithm)

-- | The response's http status code.
describeAlgorithmResponse_httpStatus :: Lens' DescribeAlgorithmResponse Int

-- | The Amazon Resource Name (ARN) of the solution.
listSolutionVersions_solutionArn :: Lens' ListSolutionVersions (Maybe Text)

-- | A token returned from the previous call to
--   <tt>ListSolutionVersions</tt> for getting the next set of solution
--   versions (if they exist).
listSolutionVersions_nextToken :: Lens' ListSolutionVersions (Maybe Text)

-- | The maximum number of solution versions to return.
listSolutionVersions_maxResults :: Lens' ListSolutionVersions (Maybe Natural)

-- | A token for getting the next set of solution versions (if they exist).
listSolutionVersionsResponse_nextToken :: Lens' ListSolutionVersionsResponse (Maybe Text)

-- | A list of solution versions describing the version properties.
listSolutionVersionsResponse_solutionVersions :: Lens' ListSolutionVersionsResponse (Maybe [SolutionVersionSummary])

-- | The response's http status code.
listSolutionVersionsResponse_httpStatus :: Lens' ListSolutionVersionsResponse Int

-- | The ARN of the batch inference job to describe.
describeBatchInferenceJob_batchInferenceJobArn :: Lens' DescribeBatchInferenceJob Text

-- | Information on the specified batch inference job.
describeBatchInferenceJobResponse_batchInferenceJob :: Lens' DescribeBatchInferenceJobResponse (Maybe BatchInferenceJob)

-- | The response's http status code.
describeBatchInferenceJobResponse_httpStatus :: Lens' DescribeBatchInferenceJobResponse Int

-- | The name for the schema.
createSchema_name :: Lens' CreateSchema Text

-- | A schema in Avro JSON format.
createSchema_schema :: Lens' CreateSchema Text

-- | The Amazon Resource Name (ARN) of the created schema.
createSchemaResponse_schemaArn :: Lens' CreateSchemaResponse (Maybe Text)

-- | The response's http status code.
createSchemaResponse_httpStatus :: Lens' CreateSchemaResponse Int

-- | The Amazon Resource Name (ARN) of the recipe to describe.
describeRecipe_recipeArn :: Lens' DescribeRecipe Text

-- | An object that describes the recipe.
describeRecipeResponse_recipe :: Lens' DescribeRecipeResponse (Maybe Recipe)

-- | The response's http status code.
describeRecipeResponse_httpStatus :: Lens' DescribeRecipeResponse Int

-- | A token returned from the previous call to <tt>ListSolutions</tt> for
--   getting the next set of solutions (if they exist).
listSolutions_nextToken :: Lens' ListSolutions (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset group.
listSolutions_datasetGroupArn :: Lens' ListSolutions (Maybe Text)

-- | The maximum number of solutions to return.
listSolutions_maxResults :: Lens' ListSolutions (Maybe Natural)

-- | A token for getting the next set of solutions (if they exist).
listSolutionsResponse_nextToken :: Lens' ListSolutionsResponse (Maybe Text)

-- | A list of the current solutions.
listSolutionsResponse_solutions :: Lens' ListSolutionsResponse (Maybe [SolutionSummary])

-- | The response's http status code.
listSolutionsResponse_httpStatus :: Lens' ListSolutionsResponse Int

-- | The Amazon Resource Name (ARN) of the dataset to list the dataset
--   export jobs for.
listDatasetExportJobs_datasetArn :: Lens' ListDatasetExportJobs (Maybe Text)

-- | A token returned from the previous call to
--   <tt>ListDatasetExportJobs</tt> for getting the next set of dataset
--   export jobs (if they exist).
listDatasetExportJobs_nextToken :: Lens' ListDatasetExportJobs (Maybe Text)

-- | The maximum number of dataset export jobs to return.
listDatasetExportJobs_maxResults :: Lens' ListDatasetExportJobs (Maybe Natural)

-- | A token for getting the next set of dataset export jobs (if they
--   exist).
listDatasetExportJobsResponse_nextToken :: Lens' ListDatasetExportJobsResponse (Maybe Text)

-- | The list of dataset export jobs.
listDatasetExportJobsResponse_datasetExportJobs :: Lens' ListDatasetExportJobsResponse (Maybe [DatasetExportJobSummary])

-- | The response's http status code.
listDatasetExportJobsResponse_httpStatus :: Lens' ListDatasetExportJobsResponse Int

-- | The Amazon Resource Name (ARN) of the dataset group to describe.
describeDatasetGroup_datasetGroupArn :: Lens' DescribeDatasetGroup Text

-- | A listing of the dataset group's properties.
describeDatasetGroupResponse_datasetGroup :: Lens' DescribeDatasetGroupResponse (Maybe DatasetGroup)

-- | The response's http status code.
describeDatasetGroupResponse_httpStatus :: Lens' DescribeDatasetGroupResponse Int

-- | The Amazon Resource Name (ARN) of the feature transformation to
--   describe.
describeFeatureTransformation_featureTransformationArn :: Lens' DescribeFeatureTransformation Text

-- | A listing of the FeatureTransformation properties.
describeFeatureTransformationResponse_featureTransformation :: Lens' DescribeFeatureTransformationResponse (Maybe FeatureTransformation)

-- | The response's http status code.
describeFeatureTransformationResponse_httpStatus :: Lens' DescribeFeatureTransformationResponse Int

-- | The Amazon Resource Name (ARN) of the solution version for which to
--   get metrics.
getSolutionMetrics_solutionVersionArn :: Lens' GetSolutionMetrics Text

-- | The metrics for the solution version.
getSolutionMetricsResponse_metrics :: Lens' GetSolutionMetricsResponse (Maybe (HashMap Text Double))

-- | The same solution version ARN as specified in the request.
getSolutionMetricsResponse_solutionVersionArn :: Lens' GetSolutionMetricsResponse (Maybe Text)

-- | The response's http status code.
getSolutionMetricsResponse_httpStatus :: Lens' GetSolutionMetricsResponse Int

-- | The Amazon Resource Name (ARN) of the schema to delete.
deleteSchema_schemaArn :: Lens' DeleteSchema Text

-- | A token returned from the previous call to
--   <tt>ListDatasetImportJobs</tt> for getting the next set of dataset
--   import jobs (if they exist).
listDatasets_nextToken :: Lens' ListDatasets (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset group that contains the
--   datasets to list.
listDatasets_datasetGroupArn :: Lens' ListDatasets (Maybe Text)

-- | The maximum number of datasets to return.
listDatasets_maxResults :: Lens' ListDatasets (Maybe Natural)

-- | A token for getting the next set of datasets (if they exist).
listDatasetsResponse_nextToken :: Lens' ListDatasetsResponse (Maybe Text)

-- | An array of <tt>Dataset</tt> objects. Each object provides metadata
--   information.
listDatasetsResponse_datasets :: Lens' ListDatasetsResponse (Maybe [DatasetSummary])

-- | The response's http status code.
listDatasetsResponse_httpStatus :: Lens' ListDatasetsResponse Int

-- | The Amazon Resource Name (ARN) of a Key Management Service (KMS) key
--   used to encrypt the datasets.
createDatasetGroup_kmsKeyArn :: Lens' CreateDatasetGroup (Maybe Text)

-- | The ARN of the Identity and Access Management (IAM) role that has
--   permissions to access the Key Management Service (KMS) key. Supplying
--   an IAM role is only valid when also specifying a KMS key.
createDatasetGroup_roleArn :: Lens' CreateDatasetGroup (Maybe Text)

-- | The name for the new dataset group.
createDatasetGroup_name :: Lens' CreateDatasetGroup Text

-- | The Amazon Resource Name (ARN) of the new dataset group.
createDatasetGroupResponse_datasetGroupArn :: Lens' CreateDatasetGroupResponse (Maybe Text)

-- | The response's http status code.
createDatasetGroupResponse_httpStatus :: Lens' CreateDatasetGroupResponse Int

-- | A token returned from the previous call to <tt>ListRecipes</tt> for
--   getting the next set of recipes (if they exist).
listRecipes_nextToken :: Lens' ListRecipes (Maybe Text)

-- | The maximum number of recipes to return.
listRecipes_maxResults :: Lens' ListRecipes (Maybe Natural)

-- | The default is <tt>SERVICE</tt>.
listRecipes_recipeProvider :: Lens' ListRecipes (Maybe RecipeProvider)

-- | A token for getting the next set of recipes.
listRecipesResponse_nextToken :: Lens' ListRecipesResponse (Maybe Text)

-- | The list of available recipes.
listRecipesResponse_recipes :: Lens' ListRecipesResponse (Maybe [RecipeSummary])

-- | The response's http status code.
listRecipesResponse_httpStatus :: Lens' ListRecipesResponse Int

-- | Specifies the default hyperparameters.
algorithm_defaultHyperParameters :: Lens' Algorithm (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the algorithm.
algorithm_algorithmArn :: Lens' Algorithm (Maybe Text)

-- | The training input mode.
algorithm_trainingInputMode :: Lens' Algorithm (Maybe Text)

-- | Specifies the default hyperparameters, their ranges, and whether they
--   are tunable. A tunable hyperparameter can have its value determined
--   during hyperparameter optimization (HPO).
algorithm_defaultHyperParameterRanges :: Lens' Algorithm (Maybe DefaultHyperParameterRanges)

-- | The URI of the Docker container for the algorithm image.
algorithm_algorithmImage :: Lens' Algorithm (Maybe AlgorithmImage)

-- | The date and time (in Unix time) that the algorithm was last updated.
algorithm_lastUpdatedDateTime :: Lens' Algorithm (Maybe UTCTime)

-- | The name of the algorithm.
algorithm_name :: Lens' Algorithm (Maybe Text)

-- | The date and time (in Unix time) that the algorithm was created.
algorithm_creationDateTime :: Lens' Algorithm (Maybe UTCTime)

-- | Specifies the default maximum number of training jobs and parallel
--   training jobs.
algorithm_defaultResourceConfig :: Lens' Algorithm (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the role.
algorithm_roleArn :: Lens' Algorithm (Maybe Text)

-- | The name of the algorithm image.
algorithmImage_name :: Lens' AlgorithmImage (Maybe Text)

-- | The URI of the Docker container for the algorithm image.
algorithmImage_dockerURI :: Lens' AlgorithmImage Text

-- | The list of candidate recipes.
autoMLConfig_recipeList :: Lens' AutoMLConfig (Maybe [Text])

-- | The metric to optimize.
autoMLConfig_metricName :: Lens' AutoMLConfig (Maybe Text)

-- | The Amazon Resource Name (ARN) of the best recipe.
autoMLResult_bestRecipeArn :: Lens' AutoMLResult (Maybe Text)

-- | If the batch inference job failed, the reason for the failure.
batchInferenceJob_failureReason :: Lens' BatchInferenceJob (Maybe Text)

-- | The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
batchInferenceJob_status :: Lens' BatchInferenceJob (Maybe Text)

-- | The Amazon S3 bucket that contains the output data generated by the
--   batch inference job.
batchInferenceJob_jobOutput :: Lens' BatchInferenceJob (Maybe BatchInferenceJobOutput)

-- | The name of the batch inference job.
batchInferenceJob_jobName :: Lens' BatchInferenceJob (Maybe Text)

-- | The time at which the batch inference job was last updated.
batchInferenceJob_lastUpdatedDateTime :: Lens' BatchInferenceJob (Maybe UTCTime)

-- | The number of recommendations generated by the batch inference job.
--   This number includes the error messages generated for failed input
--   records.
batchInferenceJob_numResults :: Lens' BatchInferenceJob (Maybe Int)

-- | A string to string map of the configuration details of a batch
--   inference job.
batchInferenceJob_batchInferenceJobConfig :: Lens' BatchInferenceJob (Maybe BatchInferenceJobConfig)

-- | The Amazon Resource Name (ARN) of the batch inference job.
batchInferenceJob_batchInferenceJobArn :: Lens' BatchInferenceJob (Maybe Text)

-- | The ARN of the filter used on the batch inference job.
batchInferenceJob_filterArn :: Lens' BatchInferenceJob (Maybe Text)

-- | The time at which the batch inference job was created.
batchInferenceJob_creationDateTime :: Lens' BatchInferenceJob (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the solution version from which the
--   batch inference job was created.
batchInferenceJob_solutionVersionArn :: Lens' BatchInferenceJob (Maybe Text)

-- | The ARN of the Amazon Identity and Access Management (IAM) role that
--   requested the batch inference job.
batchInferenceJob_roleArn :: Lens' BatchInferenceJob (Maybe Text)

-- | The Amazon S3 path that leads to the input data used to generate the
--   batch inference job.
batchInferenceJob_jobInput :: Lens' BatchInferenceJob (Maybe BatchInferenceJobInput)

-- | A string to string map specifying the exploration configuration
--   hyperparameters, including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. See <a>User-Personalization</a>.
batchInferenceJobConfig_itemExplorationConfig :: Lens' BatchInferenceJobConfig (Maybe (HashMap Text Text))

-- | The URI of the Amazon S3 location that contains your input data. The
--   Amazon S3 bucket must be in the same region as the API endpoint you
--   are calling.
batchInferenceJobInput_s3DataSource :: Lens' BatchInferenceJobInput S3DataConfig

-- | Information on the Amazon S3 bucket in which the batch inference job's
--   output is stored.
batchInferenceJobOutput_s3DataDestination :: Lens' BatchInferenceJobOutput S3DataConfig

-- | If the batch inference job failed, the reason for the failure.
batchInferenceJobSummary_failureReason :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
batchInferenceJobSummary_status :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | The name of the batch inference job.
batchInferenceJobSummary_jobName :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | The time at which the batch inference job was last updated.
batchInferenceJobSummary_lastUpdatedDateTime :: Lens' BatchInferenceJobSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the batch inference job.
batchInferenceJobSummary_batchInferenceJobArn :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | The time at which the batch inference job was created.
batchInferenceJobSummary_creationDateTime :: Lens' BatchInferenceJobSummary (Maybe UTCTime)

-- | The ARN of the solution version used by the batch inference job.
batchInferenceJobSummary_solutionVersionArn :: Lens' BatchInferenceJobSummary (Maybe Text)

-- | If a campaign fails, the reason behind the failure.
campaign_failureReason :: Lens' Campaign (Maybe Text)

-- | The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
campaign_status :: Lens' Campaign (Maybe Text)

-- | The date and time (in Unix format) that the campaign was last updated.
campaign_lastUpdatedDateTime :: Lens' Campaign (Maybe UTCTime)

-- | The configuration details of a campaign.
campaign_campaignConfig :: Lens' Campaign (Maybe CampaignConfig)

-- | Undocumented member.
campaign_latestCampaignUpdate :: Lens' Campaign (Maybe CampaignUpdateSummary)

-- | The name of the campaign.
campaign_name :: Lens' Campaign (Maybe Text)

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second.
campaign_minProvisionedTPS :: Lens' Campaign (Maybe Natural)

-- | The date and time (in Unix format) that the campaign was created.
campaign_creationDateTime :: Lens' Campaign (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the campaign.
campaign_campaignArn :: Lens' Campaign (Maybe Text)

-- | The Amazon Resource Name (ARN) of a specific version of the solution.
campaign_solutionVersionArn :: Lens' Campaign (Maybe Text)

-- | A string to string map specifying the exploration configuration
--   hyperparameters, including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. Provide <tt>itemExplorationConfig</tt> data only if your
--   solution uses the <a>User-Personalization</a> recipe.
campaignConfig_itemExplorationConfig :: Lens' CampaignConfig (Maybe (HashMap Text Text))

-- | If a campaign fails, the reason behind the failure.
campaignSummary_failureReason :: Lens' CampaignSummary (Maybe Text)

-- | The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
campaignSummary_status :: Lens' CampaignSummary (Maybe Text)

-- | The date and time (in Unix time) that the campaign was last updated.
campaignSummary_lastUpdatedDateTime :: Lens' CampaignSummary (Maybe UTCTime)

-- | The name of the campaign.
campaignSummary_name :: Lens' CampaignSummary (Maybe Text)

-- | The date and time (in Unix time) that the campaign was created.
campaignSummary_creationDateTime :: Lens' CampaignSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the campaign.
campaignSummary_campaignArn :: Lens' CampaignSummary (Maybe Text)

-- | If a campaign update fails, the reason behind the failure.
campaignUpdateSummary_failureReason :: Lens' CampaignUpdateSummary (Maybe Text)

-- | The status of the campaign update.
--   
--   A campaign update can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
campaignUpdateSummary_status :: Lens' CampaignUpdateSummary (Maybe Text)

-- | The date and time (in Unix time) that the campaign update was last
--   updated.
campaignUpdateSummary_lastUpdatedDateTime :: Lens' CampaignUpdateSummary (Maybe UTCTime)

-- | Undocumented member.
campaignUpdateSummary_campaignConfig :: Lens' CampaignUpdateSummary (Maybe CampaignConfig)

-- | Specifies the requested minimum provisioned transactions
--   (recommendations) per second that Amazon Personalize will support.
campaignUpdateSummary_minProvisionedTPS :: Lens' CampaignUpdateSummary (Maybe Natural)

-- | The date and time (in Unix time) that the campaign update was created.
campaignUpdateSummary_creationDateTime :: Lens' CampaignUpdateSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the deployed solution version.
campaignUpdateSummary_solutionVersionArn :: Lens' CampaignUpdateSummary (Maybe Text)

-- | A list of the categories for the hyperparameter.
categoricalHyperParameterRange_values :: Lens' CategoricalHyperParameterRange (Maybe [Text])

-- | The name of the hyperparameter.
categoricalHyperParameterRange_name :: Lens' CategoricalHyperParameterRange (Maybe Text)

-- | The maximum allowable value for the hyperparameter.
continuousHyperParameterRange_maxValue :: Lens' ContinuousHyperParameterRange (Maybe Double)

-- | The name of the hyperparameter.
continuousHyperParameterRange_name :: Lens' ContinuousHyperParameterRange (Maybe Text)

-- | The minimum allowable value for the hyperparameter.
continuousHyperParameterRange_minValue :: Lens' ContinuousHyperParameterRange (Maybe Double)

-- | The path to the Amazon S3 bucket where the data that you want to
--   upload to your dataset is stored. For example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
dataSource_dataLocation :: Lens' DataSource (Maybe Text)

-- | The status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
dataset_status :: Lens' Dataset (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset that you want metadata
--   for.
dataset_datasetArn :: Lens' Dataset (Maybe Text)

-- | A time stamp that shows when the dataset was updated.
dataset_lastUpdatedDateTime :: Lens' Dataset (Maybe UTCTime)

-- | The ARN of the associated schema.
dataset_schemaArn :: Lens' Dataset (Maybe Text)

-- | The name of the dataset.
dataset_name :: Lens' Dataset (Maybe Text)

-- | One of the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
dataset_datasetType :: Lens' Dataset (Maybe Text)

-- | The creation date and time (in Unix time) of the dataset.
dataset_creationDateTime :: Lens' Dataset (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group.
dataset_datasetGroupArn :: Lens' Dataset (Maybe Text)

-- | If a dataset export job fails, provides the reason why.
datasetExportJob_failureReason :: Lens' DatasetExportJob (Maybe Text)

-- | The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
datasetExportJob_status :: Lens' DatasetExportJob (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset export job.
datasetExportJob_datasetExportJobArn :: Lens' DatasetExportJob (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset to export.
datasetExportJob_datasetArn :: Lens' DatasetExportJob (Maybe Text)

-- | The path to the Amazon S3 bucket where the job's output is stored. For
--   example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
datasetExportJob_jobOutput :: Lens' DatasetExportJob (Maybe DatasetExportJobOutput)

-- | The name of the export job.
datasetExportJob_jobName :: Lens' DatasetExportJob (Maybe Text)

-- | The date and time (in Unix time) the status of the dataset export job
--   was last updated.
datasetExportJob_lastUpdatedDateTime :: Lens' DatasetExportJob (Maybe UTCTime)

-- | The data to export, based on how you imported the data. You can choose
--   to export <tt>BULK</tt> data that you imported using a dataset import
--   job, <tt>PUT</tt> data that you imported incrementally (using the
--   console, PutEvents, PutUsers and PutItems operations), or <tt>ALL</tt>
--   for both types. The default value is <tt>PUT</tt>.
datasetExportJob_ingestionMode :: Lens' DatasetExportJob (Maybe IngestionMode)

-- | The creation date and time (in Unix time) of the dataset export job.
datasetExportJob_creationDateTime :: Lens' DatasetExportJob (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the IAM service role that has
--   permissions to add data to your output Amazon S3 bucket.
datasetExportJob_roleArn :: Lens' DatasetExportJob (Maybe Text)

-- | Undocumented member.
datasetExportJobOutput_s3DataDestination :: Lens' DatasetExportJobOutput S3DataConfig

-- | If a dataset export job fails, the reason behind the failure.
datasetExportJobSummary_failureReason :: Lens' DatasetExportJobSummary (Maybe Text)

-- | The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
datasetExportJobSummary_status :: Lens' DatasetExportJobSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset export job.
datasetExportJobSummary_datasetExportJobArn :: Lens' DatasetExportJobSummary (Maybe Text)

-- | The name of the dataset export job.
datasetExportJobSummary_jobName :: Lens' DatasetExportJobSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset export job status
--   was last updated.
datasetExportJobSummary_lastUpdatedDateTime :: Lens' DatasetExportJobSummary (Maybe UTCTime)

-- | The date and time (in Unix time) that the dataset export job was
--   created.
datasetExportJobSummary_creationDateTime :: Lens' DatasetExportJobSummary (Maybe UTCTime)

-- | If creating a dataset group fails, provides the reason why.
datasetGroup_failureReason :: Lens' DatasetGroup (Maybe Text)

-- | The current status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
datasetGroup_status :: Lens' DatasetGroup (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   used to encrypt the datasets.
datasetGroup_kmsKeyArn :: Lens' DatasetGroup (Maybe Text)

-- | The last update date and time (in Unix time) of the dataset group.
datasetGroup_lastUpdatedDateTime :: Lens' DatasetGroup (Maybe UTCTime)

-- | The name of the dataset group.
datasetGroup_name :: Lens' DatasetGroup (Maybe Text)

-- | The creation date and time (in Unix time) of the dataset group.
datasetGroup_creationDateTime :: Lens' DatasetGroup (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group.
datasetGroup_datasetGroupArn :: Lens' DatasetGroup (Maybe Text)

-- | The ARN of the IAM role that has permissions to create the dataset
--   group.
datasetGroup_roleArn :: Lens' DatasetGroup (Maybe Text)

-- | If creating a dataset group fails, the reason behind the failure.
datasetGroupSummary_failureReason :: Lens' DatasetGroupSummary (Maybe Text)

-- | The status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
datasetGroupSummary_status :: Lens' DatasetGroupSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset group was last
--   updated.
datasetGroupSummary_lastUpdatedDateTime :: Lens' DatasetGroupSummary (Maybe UTCTime)

-- | The name of the dataset group.
datasetGroupSummary_name :: Lens' DatasetGroupSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset group was created.
datasetGroupSummary_creationDateTime :: Lens' DatasetGroupSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group.
datasetGroupSummary_datasetGroupArn :: Lens' DatasetGroupSummary (Maybe Text)

-- | If a dataset import job fails, provides the reason why.
datasetImportJob_failureReason :: Lens' DatasetImportJob (Maybe Text)

-- | The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
datasetImportJob_status :: Lens' DatasetImportJob (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset that receives the
--   imported data.
datasetImportJob_datasetArn :: Lens' DatasetImportJob (Maybe Text)

-- | The name of the import job.
datasetImportJob_jobName :: Lens' DatasetImportJob (Maybe Text)

-- | The date and time (in Unix time) the dataset was last updated.
datasetImportJob_lastUpdatedDateTime :: Lens' DatasetImportJob (Maybe UTCTime)

-- | The ARN of the dataset import job.
datasetImportJob_datasetImportJobArn :: Lens' DatasetImportJob (Maybe Text)

-- | The Amazon S3 bucket that contains the training data to import.
datasetImportJob_dataSource :: Lens' DatasetImportJob (Maybe DataSource)

-- | The creation date and time (in Unix time) of the dataset import job.
datasetImportJob_creationDateTime :: Lens' DatasetImportJob (Maybe UTCTime)

-- | The ARN of the IAM role that has permissions to read from the Amazon
--   S3 data source.
datasetImportJob_roleArn :: Lens' DatasetImportJob (Maybe Text)

-- | If a dataset import job fails, the reason behind the failure.
datasetImportJobSummary_failureReason :: Lens' DatasetImportJobSummary (Maybe Text)

-- | The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
datasetImportJobSummary_status :: Lens' DatasetImportJobSummary (Maybe Text)

-- | The name of the dataset import job.
datasetImportJobSummary_jobName :: Lens' DatasetImportJobSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset import job status
--   was last updated.
datasetImportJobSummary_lastUpdatedDateTime :: Lens' DatasetImportJobSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset import job.
datasetImportJobSummary_datasetImportJobArn :: Lens' DatasetImportJobSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset import job was
--   created.
datasetImportJobSummary_creationDateTime :: Lens' DatasetImportJobSummary (Maybe UTCTime)

-- | The date and time (in Unix time) that the schema was last updated.
datasetSchema_lastUpdatedDateTime :: Lens' DatasetSchema (Maybe UTCTime)

-- | The schema.
datasetSchema_schema :: Lens' DatasetSchema (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema.
datasetSchema_schemaArn :: Lens' DatasetSchema (Maybe Text)

-- | The name of the schema.
datasetSchema_name :: Lens' DatasetSchema (Maybe Text)

-- | The date and time (in Unix time) that the schema was created.
datasetSchema_creationDateTime :: Lens' DatasetSchema (Maybe UTCTime)

-- | The date and time (in Unix time) that the schema was last updated.
datasetSchemaSummary_lastUpdatedDateTime :: Lens' DatasetSchemaSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the schema.
datasetSchemaSummary_schemaArn :: Lens' DatasetSchemaSummary (Maybe Text)

-- | The name of the schema.
datasetSchemaSummary_name :: Lens' DatasetSchemaSummary (Maybe Text)

-- | The date and time (in Unix time) that the schema was created.
datasetSchemaSummary_creationDateTime :: Lens' DatasetSchemaSummary (Maybe UTCTime)

-- | The status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
datasetSummary_status :: Lens' DatasetSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dataset.
datasetSummary_datasetArn :: Lens' DatasetSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset was last updated.
datasetSummary_lastUpdatedDateTime :: Lens' DatasetSummary (Maybe UTCTime)

-- | The name of the dataset.
datasetSummary_name :: Lens' DatasetSummary (Maybe Text)

-- | The dataset type. One of the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   <li>Event-Interactions</li>
--   </ul>
datasetSummary_datasetType :: Lens' DatasetSummary (Maybe Text)

-- | The date and time (in Unix time) that the dataset was created.
datasetSummary_creationDateTime :: Lens' DatasetSummary (Maybe UTCTime)

-- | Whether the hyperparameter is tunable.
defaultCategoricalHyperParameterRange_isTunable :: Lens' DefaultCategoricalHyperParameterRange (Maybe Bool)

-- | A list of the categories for the hyperparameter.
defaultCategoricalHyperParameterRange_values :: Lens' DefaultCategoricalHyperParameterRange (Maybe [Text])

-- | The name of the hyperparameter.
defaultCategoricalHyperParameterRange_name :: Lens' DefaultCategoricalHyperParameterRange (Maybe Text)

-- | The maximum allowable value for the hyperparameter.
defaultContinuousHyperParameterRange_maxValue :: Lens' DefaultContinuousHyperParameterRange (Maybe Double)

-- | Whether the hyperparameter is tunable.
defaultContinuousHyperParameterRange_isTunable :: Lens' DefaultContinuousHyperParameterRange (Maybe Bool)

-- | The name of the hyperparameter.
defaultContinuousHyperParameterRange_name :: Lens' DefaultContinuousHyperParameterRange (Maybe Text)

-- | The minimum allowable value for the hyperparameter.
defaultContinuousHyperParameterRange_minValue :: Lens' DefaultContinuousHyperParameterRange (Maybe Double)

-- | The integer-valued hyperparameters and their default ranges.
defaultHyperParameterRanges_integerHyperParameterRanges :: Lens' DefaultHyperParameterRanges (Maybe [DefaultIntegerHyperParameterRange])

-- | The categorical hyperparameters and their default ranges.
defaultHyperParameterRanges_categoricalHyperParameterRanges :: Lens' DefaultHyperParameterRanges (Maybe [DefaultCategoricalHyperParameterRange])

-- | The continuous hyperparameters and their default ranges.
defaultHyperParameterRanges_continuousHyperParameterRanges :: Lens' DefaultHyperParameterRanges (Maybe [DefaultContinuousHyperParameterRange])

-- | The maximum allowable value for the hyperparameter.
defaultIntegerHyperParameterRange_maxValue :: Lens' DefaultIntegerHyperParameterRange (Maybe Int)

-- | Indicates whether the hyperparameter is tunable.
defaultIntegerHyperParameterRange_isTunable :: Lens' DefaultIntegerHyperParameterRange (Maybe Bool)

-- | The name of the hyperparameter.
defaultIntegerHyperParameterRange_name :: Lens' DefaultIntegerHyperParameterRange (Maybe Text)

-- | The minimum allowable value for the hyperparameter.
defaultIntegerHyperParameterRange_minValue :: Lens' DefaultIntegerHyperParameterRange (Maybe Int)

-- | The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
eventTracker_status :: Lens' EventTracker (Maybe Text)

-- | The ID of the event tracker. Include this ID in requests to the
--   <a>PutEvents</a> API.
eventTracker_trackingId :: Lens' EventTracker (Maybe Text)

-- | The date and time (in Unix time) that the event tracker was last
--   updated.
eventTracker_lastUpdatedDateTime :: Lens' EventTracker (Maybe UTCTime)

-- | The Amazon Web Services account that owns the event tracker.
eventTracker_accountId :: Lens' EventTracker (Maybe Text)

-- | The name of the event tracker.
eventTracker_name :: Lens' EventTracker (Maybe Text)

-- | The date and time (in Unix format) that the event tracker was created.
eventTracker_creationDateTime :: Lens' EventTracker (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group that receives the
--   event data.
eventTracker_datasetGroupArn :: Lens' EventTracker (Maybe Text)

-- | The ARN of the event tracker.
eventTracker_eventTrackerArn :: Lens' EventTracker (Maybe Text)

-- | The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
eventTrackerSummary_status :: Lens' EventTrackerSummary (Maybe Text)

-- | The date and time (in Unix time) that the event tracker was last
--   updated.
eventTrackerSummary_lastUpdatedDateTime :: Lens' EventTrackerSummary (Maybe UTCTime)

-- | The name of the event tracker.
eventTrackerSummary_name :: Lens' EventTrackerSummary (Maybe Text)

-- | The date and time (in Unix time) that the event tracker was created.
eventTrackerSummary_creationDateTime :: Lens' EventTrackerSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the event tracker.
eventTrackerSummary_eventTrackerArn :: Lens' EventTrackerSummary (Maybe Text)

-- | The status of the feature transformation.
--   
--   A feature transformation can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
featureTransformation_status :: Lens' FeatureTransformation (Maybe Text)

-- | The Amazon Resource Name (ARN) of the FeatureTransformation object.
featureTransformation_featureTransformationArn :: Lens' FeatureTransformation (Maybe Text)

-- | The last update date and time (in Unix time) of the feature
--   transformation.
featureTransformation_lastUpdatedDateTime :: Lens' FeatureTransformation (Maybe UTCTime)

-- | The name of the feature transformation.
featureTransformation_name :: Lens' FeatureTransformation (Maybe Text)

-- | The creation date and time (in Unix time) of the feature
--   transformation.
featureTransformation_creationDateTime :: Lens' FeatureTransformation (Maybe UTCTime)

-- | Provides the default parameters for feature transformation.
featureTransformation_defaultParameters :: Lens' FeatureTransformation (Maybe (HashMap Text Text))

-- | If the filter failed, the reason for its failure.
filter_failureReason :: Lens' Filter (Maybe Text)

-- | The status of the filter.
filter_status :: Lens' Filter (Maybe Text)

-- | Specifies the type of item interactions to filter out of
--   recommendation results. The filter expression must follow specific
--   format rules. For information about filter expression structure and
--   syntax, see filter-expressions.
filter_filterExpression :: Lens' Filter (Maybe Text)

-- | The time at which the filter was last updated.
filter_lastUpdatedDateTime :: Lens' Filter (Maybe UTCTime)

-- | The name of the filter.
filter_name :: Lens' Filter (Maybe Text)

-- | The ARN of the filter.
filter_filterArn :: Lens' Filter (Maybe Text)

-- | The time at which the filter was created.
filter_creationDateTime :: Lens' Filter (Maybe UTCTime)

-- | The ARN of the dataset group to which the filter belongs.
filter_datasetGroupArn :: Lens' Filter (Maybe Text)

-- | If the filter failed, the reason for the failure.
filterSummary_failureReason :: Lens' FilterSummary (Maybe Text)

-- | The status of the filter.
filterSummary_status :: Lens' FilterSummary (Maybe Text)

-- | The time at which the filter was last updated.
filterSummary_lastUpdatedDateTime :: Lens' FilterSummary (Maybe UTCTime)

-- | The name of the filter.
filterSummary_name :: Lens' FilterSummary (Maybe Text)

-- | The ARN of the filter.
filterSummary_filterArn :: Lens' FilterSummary (Maybe Text)

-- | The time at which the filter was created.
filterSummary_creationDateTime :: Lens' FilterSummary (Maybe UTCTime)

-- | The ARN of the dataset group to which the filter belongs.
filterSummary_datasetGroupArn :: Lens' FilterSummary (Maybe Text)

-- | The hyperparameters and their allowable ranges.
hPOConfig_algorithmHyperParameterRanges :: Lens' HPOConfig (Maybe HyperParameterRanges)

-- | Describes the resource configuration for HPO.
hPOConfig_hpoResourceConfig :: Lens' HPOConfig (Maybe HPOResourceConfig)

-- | The metric to optimize during HPO.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
hPOConfig_hpoObjective :: Lens' HPOConfig (Maybe HPOObjective)

-- | The name of the metric.
hPOObjective_metricName :: Lens' HPOObjective (Maybe Text)

-- | The type of the metric. Valid values are <tt>Maximize</tt> and
--   <tt>Minimize</tt>.
hPOObjective_type :: Lens' HPOObjective (Maybe Text)

-- | A regular expression for finding the metric in the training job logs.
hPOObjective_metricRegex :: Lens' HPOObjective (Maybe Text)

-- | The maximum number of training jobs when you create a solution
--   version. The maximum value for <tt>maxNumberOfTrainingJobs</tt> is
--   <tt>40</tt>.
hPOResourceConfig_maxNumberOfTrainingJobs :: Lens' HPOResourceConfig (Maybe Text)

-- | The maximum number of parallel training jobs when you create a
--   solution version. The maximum value for
--   <tt>maxParallelTrainingJobs</tt> is <tt>10</tt>.
hPOResourceConfig_maxParallelTrainingJobs :: Lens' HPOResourceConfig (Maybe Text)

-- | The integer-valued hyperparameters and their ranges.
hyperParameterRanges_integerHyperParameterRanges :: Lens' HyperParameterRanges (Maybe [IntegerHyperParameterRange])

-- | The categorical hyperparameters and their ranges.
hyperParameterRanges_categoricalHyperParameterRanges :: Lens' HyperParameterRanges (Maybe [CategoricalHyperParameterRange])

-- | The continuous hyperparameters and their ranges.
hyperParameterRanges_continuousHyperParameterRanges :: Lens' HyperParameterRanges (Maybe [ContinuousHyperParameterRange])

-- | The maximum allowable value for the hyperparameter.
integerHyperParameterRange_maxValue :: Lens' IntegerHyperParameterRange (Maybe Int)

-- | The name of the hyperparameter.
integerHyperParameterRange_name :: Lens' IntegerHyperParameterRange (Maybe Text)

-- | The minimum allowable value for the hyperparameter.
integerHyperParameterRange_minValue :: Lens' IntegerHyperParameterRange (Maybe Int)

-- | The numerical metadata column in an Items dataset related to the
--   optimization objective. For example, VIDEO_LENGTH (to maximize
--   streaming minutes), or PRICE (to maximize revenue).
optimizationObjective_itemAttribute :: Lens' OptimizationObjective (Maybe Text)

-- | Specifies how Amazon Personalize balances the importance of your
--   optimization objective versus relevance.
optimizationObjective_objectiveSensitivity :: Lens' OptimizationObjective (Maybe ObjectiveSensitivity)

-- | The status of the recipe.
recipe_status :: Lens' Recipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the algorithm that Amazon
--   Personalize uses to train the model.
recipe_algorithmArn :: Lens' Recipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the recipe.
recipe_recipeArn :: Lens' Recipe (Maybe Text)

-- | The ARN of the FeatureTransformation object.
recipe_featureTransformationArn :: Lens' Recipe (Maybe Text)

-- | The date and time (in Unix format) that the recipe was last updated.
recipe_lastUpdatedDateTime :: Lens' Recipe (Maybe UTCTime)

-- | The name of the recipe.
recipe_name :: Lens' Recipe (Maybe Text)

-- | The date and time (in Unix format) that the recipe was created.
recipe_creationDateTime :: Lens' Recipe (Maybe UTCTime)

-- | One of the following values:
--   
--   <ul>
--   <li>PERSONALIZED_RANKING</li>
--   <li>RELATED_ITEMS</li>
--   <li>USER_PERSONALIZATION</li>
--   </ul>
recipe_recipeType :: Lens' Recipe (Maybe Text)

-- | The description of the recipe.
recipe_description :: Lens' Recipe (Maybe Text)

-- | The status of the recipe.
recipeSummary_status :: Lens' RecipeSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the recipe.
recipeSummary_recipeArn :: Lens' RecipeSummary (Maybe Text)

-- | The date and time (in Unix time) that the recipe was last updated.
recipeSummary_lastUpdatedDateTime :: Lens' RecipeSummary (Maybe UTCTime)

-- | The name of the recipe.
recipeSummary_name :: Lens' RecipeSummary (Maybe Text)

-- | The date and time (in Unix time) that the recipe was created.
recipeSummary_creationDateTime :: Lens' RecipeSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   that Amazon Personalize uses to encrypt or decrypt the input and
--   output files of a batch inference job.
s3DataConfig_kmsKeyArn :: Lens' S3DataConfig (Maybe Text)

-- | The file path of the Amazon S3 bucket.
s3DataConfig_path :: Lens' S3DataConfig Text

-- | The ARN of the solution.
solution_solutionArn :: Lens' Solution (Maybe Text)

-- | The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
solution_status :: Lens' Solution (Maybe Text)

-- | When true, Amazon Personalize performs a search for the best
--   USER_PERSONALIZATION recipe from the list specified in the solution
--   configuration (<tt>recipeArn</tt> must not be specified). When false
--   (the default), Amazon Personalize uses <tt>recipeArn</tt> for
--   training.
solution_performAutoML :: Lens' Solution (Maybe Bool)

-- | The ARN of the recipe used to create the solution.
solution_recipeArn :: Lens' Solution (Maybe Text)

-- | The date and time (in Unix time) that the solution was last updated.
solution_lastUpdatedDateTime :: Lens' Solution (Maybe UTCTime)

-- | The event type (for example, 'click' or 'like') that is used for
--   training the model. If no <tt>eventType</tt> is provided, Amazon
--   Personalize uses all interactions for training with equal weight
--   regardless of type.
solution_eventType :: Lens' Solution (Maybe Text)

-- | The name of the solution.
solution_name :: Lens' Solution (Maybe Text)

-- | When <tt>performAutoML</tt> is true, specifies the best recipe found.
solution_autoMLResult :: Lens' Solution (Maybe AutoMLResult)

-- | The creation date and time (in Unix time) of the solution.
solution_creationDateTime :: Lens' Solution (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group that provides the
--   training data.
solution_datasetGroupArn :: Lens' Solution (Maybe Text)

-- | Describes the latest version of the solution, including the status and
--   the ARN.
solution_latestSolutionVersion :: Lens' Solution (Maybe SolutionVersionSummary)

-- | Describes the configuration properties for the solution.
solution_solutionConfig :: Lens' Solution (Maybe SolutionConfig)

-- | Whether to perform hyperparameter optimization (HPO) on the chosen
--   recipe. The default is <tt>false</tt>.
solution_performHPO :: Lens' Solution (Maybe Bool)

-- | Lists the feature transformation parameters.
solutionConfig_featureTransformationParameters :: Lens' SolutionConfig (Maybe (HashMap Text Text))

-- | Describes the properties for hyperparameter optimization (HPO).
solutionConfig_hpoConfig :: Lens' SolutionConfig (Maybe HPOConfig)

-- | Only events with a value greater than or equal to this threshold are
--   used for training a model.
solutionConfig_eventValueThreshold :: Lens' SolutionConfig (Maybe Text)

-- | The AutoMLConfig object containing a list of recipes to search when
--   AutoML is performed.
solutionConfig_autoMLConfig :: Lens' SolutionConfig (Maybe AutoMLConfig)

-- | Lists the hyperparameter names and ranges.
solutionConfig_algorithmHyperParameters :: Lens' SolutionConfig (Maybe (HashMap Text Text))

-- | Describes the additional objective for the solution, such as
--   maximizing streaming minutes or increasing revenue. For more
--   information see <a>Optimizing a solution</a>.
solutionConfig_optimizationObjective :: Lens' SolutionConfig (Maybe OptimizationObjective)

-- | The Amazon Resource Name (ARN) of the solution.
solutionSummary_solutionArn :: Lens' SolutionSummary (Maybe Text)

-- | The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
solutionSummary_status :: Lens' SolutionSummary (Maybe Text)

-- | The date and time (in Unix time) that the solution was last updated.
solutionSummary_lastUpdatedDateTime :: Lens' SolutionSummary (Maybe UTCTime)

-- | The name of the solution.
solutionSummary_name :: Lens' SolutionSummary (Maybe Text)

-- | The date and time (in Unix time) that the solution was created.
solutionSummary_creationDateTime :: Lens' SolutionSummary (Maybe UTCTime)

-- | If training a solution version fails, the reason for the failure.
solutionVersion_failureReason :: Lens' SolutionVersion (Maybe Text)

-- | The ARN of the solution.
solutionVersion_solutionArn :: Lens' SolutionVersion (Maybe Text)

-- | The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   <li>CREATE STOPPING</li>
--   <li>CREATE STOPPED</li>
--   </ul>
solutionVersion_status :: Lens' SolutionVersion (Maybe Text)

-- | When true, Amazon Personalize searches for the most optimal recipe
--   according to the solution configuration. When false (the default),
--   Amazon Personalize uses <tt>recipeArn</tt>.
solutionVersion_performAutoML :: Lens' SolutionVersion (Maybe Bool)

-- | If hyperparameter optimization was performed, contains the
--   hyperparameter values of the best performing model.
solutionVersion_tunedHPOParams :: Lens' SolutionVersion (Maybe TunedHPOParams)

-- | The ARN of the recipe used in the solution.
solutionVersion_recipeArn :: Lens' SolutionVersion (Maybe Text)

-- | The date and time (in Unix time) that the solution was last updated.
solutionVersion_lastUpdatedDateTime :: Lens' SolutionVersion (Maybe UTCTime)

-- | The event type (for example, 'click' or 'like') that is used for
--   training the model.
solutionVersion_eventType :: Lens' SolutionVersion (Maybe Text)

-- | The date and time (in Unix time) that this version of the solution was
--   created.
solutionVersion_creationDateTime :: Lens' SolutionVersion (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the dataset group providing the
--   training data.
solutionVersion_datasetGroupArn :: Lens' SolutionVersion (Maybe Text)

-- | The scope of training to be performed when creating the solution
--   version. The <tt>FULL</tt> option trains the solution version based on
--   the entirety of the input solution's training data, while the
--   <tt>UPDATE</tt> option processes only the data that has changed in
--   comparison to the input solution. Choose <tt>UPDATE</tt> when you want
--   to incrementally update your solution version instead of creating an
--   entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
solutionVersion_trainingMode :: Lens' SolutionVersion (Maybe TrainingMode)

-- | The time used to train the model. You are billed for the time it takes
--   to train a model. This field is visible only after Amazon Personalize
--   successfully trains a model.
solutionVersion_trainingHours :: Lens' SolutionVersion (Maybe Double)

-- | Describes the configuration properties for the solution.
solutionVersion_solutionConfig :: Lens' SolutionVersion (Maybe SolutionConfig)

-- | Whether to perform hyperparameter optimization (HPO) on the chosen
--   recipe. The default is <tt>false</tt>.
solutionVersion_performHPO :: Lens' SolutionVersion (Maybe Bool)

-- | The ARN of the solution version.
solutionVersion_solutionVersionArn :: Lens' SolutionVersion (Maybe Text)

-- | If a solution version fails, the reason behind the failure.
solutionVersionSummary_failureReason :: Lens' SolutionVersionSummary (Maybe Text)

-- | The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
solutionVersionSummary_status :: Lens' SolutionVersionSummary (Maybe Text)

-- | The date and time (in Unix time) that the solution version was last
--   updated.
solutionVersionSummary_lastUpdatedDateTime :: Lens' SolutionVersionSummary (Maybe UTCTime)

-- | The date and time (in Unix time) that this version of a solution was
--   created.
solutionVersionSummary_creationDateTime :: Lens' SolutionVersionSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the solution version.
solutionVersionSummary_solutionVersionArn :: Lens' SolutionVersionSummary (Maybe Text)

-- | A list of the hyperparameter values of the best performing model.
tunedHPOParams_algorithmHyperParameters :: Lens' TunedHPOParams (Maybe (HashMap Text Text))


module Amazonka.Personalize.Waiters


-- | Derived from API version <tt>2018-05-22</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Personalize is a machine learning service that makes it easy to
--   add individualized recommendations to customers.
module Amazonka.Personalize

-- | API version <tt>2018-05-22</tt> of the Amazon Personalize SDK
--   configuration.
defaultService :: Service

-- | The specified resource already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The token is not valid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Provide a valid value for the field or parameter.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Could not find the specified resource.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The limit on the number of requests per second has been exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource is in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListDatasetGroups</a> smart constructor.
data ListDatasetGroups
ListDatasetGroups' :: Maybe Text -> Maybe Natural -> ListDatasetGroups

-- | Create a value of <a>ListDatasetGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasetGroups'</a>,
--   <a>listDatasetGroups_nextToken</a> - A token returned from the
--   previous call to <tt>ListDatasetGroups</tt> for getting the next set
--   of dataset groups (if they exist).
--   
--   <a>$sel:maxResults:ListDatasetGroups'</a>,
--   <a>listDatasetGroups_maxResults</a> - The maximum number of dataset
--   groups to return.
newListDatasetGroups :: ListDatasetGroups

-- | <i>See:</i> <a>newListDatasetGroupsResponse</a> smart constructor.
data ListDatasetGroupsResponse
ListDatasetGroupsResponse' :: Maybe Text -> Maybe [DatasetGroupSummary] -> Int -> ListDatasetGroupsResponse

-- | Create a value of <a>ListDatasetGroupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasetGroups'</a>,
--   <a>listDatasetGroupsResponse_nextToken</a> - A token for getting the
--   next set of dataset groups (if they exist).
--   
--   <a>$sel:datasetGroups:ListDatasetGroupsResponse'</a>,
--   <a>listDatasetGroupsResponse_datasetGroups</a> - The list of your
--   dataset groups.
--   
--   <a>$sel:httpStatus:ListDatasetGroupsResponse'</a>,
--   <a>listDatasetGroupsResponse_httpStatus</a> - The response's http
--   status code.
newListDatasetGroupsResponse :: Int -> ListDatasetGroupsResponse

-- | <i>See:</i> <a>newCreateBatchInferenceJob</a> smart constructor.
data CreateBatchInferenceJob
CreateBatchInferenceJob' :: Maybe Int -> Maybe BatchInferenceJobConfig -> Maybe Text -> Text -> Text -> BatchInferenceJobInput -> BatchInferenceJobOutput -> Text -> CreateBatchInferenceJob

-- | Create a value of <a>CreateBatchInferenceJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numResults:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_numResults</a> - The number of
--   recommendations to retreive.
--   
--   <a>$sel:batchInferenceJobConfig:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_batchInferenceJobConfig</a> - The
--   configuration details of a batch inference job.
--   
--   <a>$sel:filterArn:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_filterArn</a> - The ARN of the filter to
--   apply to the batch inference job. For more information on using
--   filters, see <a>Filtering Batch Recommendations</a>..
--   
--   <a>$sel:jobName:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_jobName</a> - The name of the batch
--   inference job to create.
--   
--   <a>$sel:solutionVersionArn:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_solutionVersionArn</a> - The Amazon
--   Resource Name (ARN) of the solution version that will be used to
--   generate the batch inference recommendations.
--   
--   <a>$sel:jobInput:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_jobInput</a> - The Amazon S3 path that
--   leads to the input file to base your recommendations on. The input
--   material must be in JSON format.
--   
--   <a>$sel:jobOutput:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_jobOutput</a> - The path to the Amazon S3
--   bucket where the job's output will be stored.
--   
--   <a>$sel:roleArn:CreateBatchInferenceJob'</a>,
--   <a>createBatchInferenceJob_roleArn</a> - The ARN of the Amazon
--   Identity and Access Management role that has permissions to read and
--   write to your input and output Amazon S3 buckets respectively.
newCreateBatchInferenceJob :: Text -> Text -> BatchInferenceJobInput -> BatchInferenceJobOutput -> Text -> CreateBatchInferenceJob

-- | <i>See:</i> <a>newCreateBatchInferenceJobResponse</a> smart
--   constructor.
data CreateBatchInferenceJobResponse
CreateBatchInferenceJobResponse' :: Maybe Text -> Int -> CreateBatchInferenceJobResponse

-- | Create a value of <a>CreateBatchInferenceJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchInferenceJobArn:CreateBatchInferenceJobResponse'</a>,
--   <a>createBatchInferenceJobResponse_batchInferenceJobArn</a> - The ARN
--   of the batch inference job.
--   
--   <a>$sel:httpStatus:CreateBatchInferenceJobResponse'</a>,
--   <a>createBatchInferenceJobResponse_httpStatus</a> - The response's
--   http status code.
newCreateBatchInferenceJobResponse :: Int -> CreateBatchInferenceJobResponse

-- | <i>See:</i> <a>newCreateFilter</a> smart constructor.
data CreateFilter
CreateFilter' :: Text -> Text -> Sensitive Text -> CreateFilter

-- | Create a value of <a>CreateFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateFilter'</a>, <a>createFilter_name</a> - The name of
--   the filter to create.
--   
--   <a>$sel:datasetGroupArn:CreateFilter'</a>,
--   <a>createFilter_datasetGroupArn</a> - The ARN of the dataset group
--   that the filter will belong to.
--   
--   <a>$sel:filterExpression:CreateFilter'</a>,
--   <a>createFilter_filterExpression</a> - The filter expression defines
--   which items are included or excluded from recommendations. Filter
--   expression must follow specific format rules. For information about
--   filter expression structure and syntax, see filter-expressions.
newCreateFilter :: Text -> Text -> Text -> CreateFilter

-- | <i>See:</i> <a>newCreateFilterResponse</a> smart constructor.
data CreateFilterResponse
CreateFilterResponse' :: Maybe Text -> Int -> CreateFilterResponse

-- | Create a value of <a>CreateFilterResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterArn:CreateFilterResponse'</a>,
--   <a>createFilterResponse_filterArn</a> - The ARN of the new filter.
--   
--   <a>$sel:httpStatus:CreateFilterResponse'</a>,
--   <a>createFilterResponse_httpStatus</a> - The response's http status
--   code.
newCreateFilterResponse :: Int -> CreateFilterResponse

-- | <i>See:</i> <a>newCreateDatasetImportJob</a> smart constructor.
data CreateDatasetImportJob
CreateDatasetImportJob' :: Text -> Text -> DataSource -> Text -> CreateDatasetImportJob

-- | Create a value of <a>CreateDatasetImportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:CreateDatasetImportJob'</a>,
--   <a>createDatasetImportJob_jobName</a> - The name for the dataset
--   import job.
--   
--   <a>$sel:datasetArn:CreateDatasetImportJob'</a>,
--   <a>createDatasetImportJob_datasetArn</a> - The ARN of the dataset that
--   receives the imported data.
--   
--   <a>$sel:dataSource:CreateDatasetImportJob'</a>,
--   <a>createDatasetImportJob_dataSource</a> - The Amazon S3 bucket that
--   contains the training data to import.
--   
--   <a>$sel:roleArn:CreateDatasetImportJob'</a>,
--   <a>createDatasetImportJob_roleArn</a> - The ARN of the IAM role that
--   has permissions to read from the Amazon S3 data source.
newCreateDatasetImportJob :: Text -> Text -> DataSource -> Text -> CreateDatasetImportJob

-- | <i>See:</i> <a>newCreateDatasetImportJobResponse</a> smart
--   constructor.
data CreateDatasetImportJobResponse
CreateDatasetImportJobResponse' :: Maybe Text -> Int -> CreateDatasetImportJobResponse

-- | Create a value of <a>CreateDatasetImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetImportJobArn:CreateDatasetImportJobResponse'</a>,
--   <a>createDatasetImportJobResponse_datasetImportJobArn</a> - The ARN of
--   the dataset import job.
--   
--   <a>$sel:httpStatus:CreateDatasetImportJobResponse'</a>,
--   <a>createDatasetImportJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateDatasetImportJobResponse :: Int -> CreateDatasetImportJobResponse

-- | <i>See:</i> <a>newDescribeSolution</a> smart constructor.
data DescribeSolution
DescribeSolution' :: Text -> DescribeSolution

-- | Create a value of <a>DescribeSolution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:DescribeSolution'</a>,
--   <a>describeSolution_solutionArn</a> - The Amazon Resource Name (ARN)
--   of the solution to describe.
newDescribeSolution :: Text -> DescribeSolution

-- | <i>See:</i> <a>newDescribeSolutionResponse</a> smart constructor.
data DescribeSolutionResponse
DescribeSolutionResponse' :: Maybe Solution -> Int -> DescribeSolutionResponse

-- | Create a value of <a>DescribeSolutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solution:DescribeSolutionResponse'</a>,
--   <a>describeSolutionResponse_solution</a> - An object that describes
--   the solution.
--   
--   <a>$sel:httpStatus:DescribeSolutionResponse'</a>,
--   <a>describeSolutionResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSolutionResponse :: Int -> DescribeSolutionResponse

-- | <i>See:</i> <a>newDescribeDatasetExportJob</a> smart constructor.
data DescribeDatasetExportJob
DescribeDatasetExportJob' :: Text -> DescribeDatasetExportJob

-- | Create a value of <a>DescribeDatasetExportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetExportJobArn:DescribeDatasetExportJob'</a>,
--   <a>describeDatasetExportJob_datasetExportJobArn</a> - The Amazon
--   Resource Name (ARN) of the dataset export job to describe.
newDescribeDatasetExportJob :: Text -> DescribeDatasetExportJob

-- | <i>See:</i> <a>newDescribeDatasetExportJobResponse</a> smart
--   constructor.
data DescribeDatasetExportJobResponse
DescribeDatasetExportJobResponse' :: Maybe DatasetExportJob -> Int -> DescribeDatasetExportJobResponse

-- | Create a value of <a>DescribeDatasetExportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetExportJob:DescribeDatasetExportJobResponse'</a>,
--   <a>describeDatasetExportJobResponse_datasetExportJob</a> - Information
--   about the dataset export job, including the status.
--   
--   The status is one of the following values:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DescribeDatasetExportJobResponse'</a>,
--   <a>describeDatasetExportJobResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDatasetExportJobResponse :: Int -> DescribeDatasetExportJobResponse

-- | <i>See:</i> <a>newDeleteCampaign</a> smart constructor.
data DeleteCampaign
DeleteCampaign' :: Text -> DeleteCampaign

-- | Create a value of <a>DeleteCampaign</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaignArn:DeleteCampaign'</a>,
--   <a>deleteCampaign_campaignArn</a> - The Amazon Resource Name (ARN) of
--   the campaign to delete.
newDeleteCampaign :: Text -> DeleteCampaign

-- | <i>See:</i> <a>newDeleteCampaignResponse</a> smart constructor.
data DeleteCampaignResponse
DeleteCampaignResponse' :: DeleteCampaignResponse

-- | Create a value of <a>DeleteCampaignResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCampaignResponse :: DeleteCampaignResponse

-- | <i>See:</i> <a>newUpdateCampaign</a> smart constructor.
data UpdateCampaign
UpdateCampaign' :: Maybe CampaignConfig -> Maybe Natural -> Maybe Text -> Text -> UpdateCampaign

-- | Create a value of <a>UpdateCampaign</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaignConfig:UpdateCampaign'</a>,
--   <a>updateCampaign_campaignConfig</a> - The configuration details of a
--   campaign.
--   
--   <a>$sel:minProvisionedTPS:UpdateCampaign'</a>,
--   <a>updateCampaign_minProvisionedTPS</a> - Specifies the requested
--   minimum provisioned transactions (recommendations) per second that
--   Amazon Personalize will support.
--   
--   <a>$sel:solutionVersionArn:UpdateCampaign'</a>,
--   <a>updateCampaign_solutionVersionArn</a> - The ARN of a new solution
--   version to deploy.
--   
--   <a>$sel:campaignArn:UpdateCampaign'</a>,
--   <a>updateCampaign_campaignArn</a> - The Amazon Resource Name (ARN) of
--   the campaign.
newUpdateCampaign :: Text -> UpdateCampaign

-- | <i>See:</i> <a>newUpdateCampaignResponse</a> smart constructor.
data UpdateCampaignResponse
UpdateCampaignResponse' :: Maybe Text -> Int -> UpdateCampaignResponse

-- | Create a value of <a>UpdateCampaignResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaignArn:UpdateCampaign'</a>,
--   <a>updateCampaignResponse_campaignArn</a> - The same campaign ARN as
--   given in the request.
--   
--   <a>$sel:httpStatus:UpdateCampaignResponse'</a>,
--   <a>updateCampaignResponse_httpStatus</a> - The response's http status
--   code.
newUpdateCampaignResponse :: Int -> UpdateCampaignResponse

-- | <i>See:</i> <a>newListCampaigns</a> smart constructor.
data ListCampaigns
ListCampaigns' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListCampaigns

-- | Create a value of <a>ListCampaigns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:ListCampaigns'</a>,
--   <a>listCampaigns_solutionArn</a> - The Amazon Resource Name (ARN) of
--   the solution to list the campaigns for. When a solution is not
--   specified, all the campaigns associated with the account are listed.
--   
--   <a>$sel:nextToken:ListCampaigns'</a>, <a>listCampaigns_nextToken</a> -
--   A token returned from the previous call to <tt>ListCampaigns</tt> for
--   getting the next set of campaigns (if they exist).
--   
--   <a>$sel:maxResults:ListCampaigns'</a>, <a>listCampaigns_maxResults</a>
--   - The maximum number of campaigns to return.
newListCampaigns :: ListCampaigns

-- | <i>See:</i> <a>newListCampaignsResponse</a> smart constructor.
data ListCampaignsResponse
ListCampaignsResponse' :: Maybe [CampaignSummary] -> Maybe Text -> Int -> ListCampaignsResponse

-- | Create a value of <a>ListCampaignsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaigns:ListCampaignsResponse'</a>,
--   <a>listCampaignsResponse_campaigns</a> - A list of the campaigns.
--   
--   <a>$sel:nextToken:ListCampaigns'</a>,
--   <a>listCampaignsResponse_nextToken</a> - A token for getting the next
--   set of campaigns (if they exist).
--   
--   <a>$sel:httpStatus:ListCampaignsResponse'</a>,
--   <a>listCampaignsResponse_httpStatus</a> - The response's http status
--   code.
newListCampaignsResponse :: Int -> ListCampaignsResponse

-- | <i>See:</i> <a>newDescribeDataset</a> smart constructor.
data DescribeDataset
DescribeDataset' :: Text -> DescribeDataset

-- | Create a value of <a>DescribeDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetArn:DescribeDataset'</a>,
--   <a>describeDataset_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the dataset to describe.
newDescribeDataset :: Text -> DescribeDataset

-- | <i>See:</i> <a>newDescribeDatasetResponse</a> smart constructor.
data DescribeDatasetResponse
DescribeDatasetResponse' :: Maybe Dataset -> Int -> DescribeDatasetResponse

-- | Create a value of <a>DescribeDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataset:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_dataset</a> - A listing of the dataset's
--   properties.
--   
--   <a>$sel:httpStatus:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDatasetResponse :: Int -> DescribeDatasetResponse

-- | <i>See:</i> <a>newCreateSolutionVersion</a> smart constructor.
data CreateSolutionVersion
CreateSolutionVersion' :: Maybe TrainingMode -> Text -> CreateSolutionVersion

-- | Create a value of <a>CreateSolutionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trainingMode:CreateSolutionVersion'</a>,
--   <a>createSolutionVersion_trainingMode</a> - The scope of training to
--   be performed when creating the solution version. The <tt>FULL</tt>
--   option trains the solution version based on the entirety of the input
--   solution's training data, while the <tt>UPDATE</tt> option processes
--   only the data that has changed in comparison to the input solution.
--   Choose <tt>UPDATE</tt> when you want to incrementally update your
--   solution version instead of creating an entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
--   
--   <a>$sel:solutionArn:CreateSolutionVersion'</a>,
--   <a>createSolutionVersion_solutionArn</a> - The Amazon Resource Name
--   (ARN) of the solution containing the training configuration
--   information.
newCreateSolutionVersion :: Text -> CreateSolutionVersion

-- | <i>See:</i> <a>newCreateSolutionVersionResponse</a> smart constructor.
data CreateSolutionVersionResponse
CreateSolutionVersionResponse' :: Maybe Text -> Int -> CreateSolutionVersionResponse

-- | Create a value of <a>CreateSolutionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionVersionArn:CreateSolutionVersionResponse'</a>,
--   <a>createSolutionVersionResponse_solutionVersionArn</a> - The ARN of
--   the new solution version.
--   
--   <a>$sel:httpStatus:CreateSolutionVersionResponse'</a>,
--   <a>createSolutionVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateSolutionVersionResponse :: Int -> CreateSolutionVersionResponse

-- | <i>See:</i> <a>newStopSolutionVersionCreation</a> smart constructor.
data StopSolutionVersionCreation
StopSolutionVersionCreation' :: Text -> StopSolutionVersionCreation

-- | Create a value of <a>StopSolutionVersionCreation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionVersionArn:StopSolutionVersionCreation'</a>,
--   <a>stopSolutionVersionCreation_solutionVersionArn</a> - The Amazon
--   Resource Name (ARN) of the solution version you want to stop creating.
newStopSolutionVersionCreation :: Text -> StopSolutionVersionCreation

-- | <i>See:</i> <a>newStopSolutionVersionCreationResponse</a> smart
--   constructor.
data StopSolutionVersionCreationResponse
StopSolutionVersionCreationResponse' :: StopSolutionVersionCreationResponse

-- | Create a value of <a>StopSolutionVersionCreationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStopSolutionVersionCreationResponse :: StopSolutionVersionCreationResponse

-- | <i>See:</i> <a>newCreateCampaign</a> smart constructor.
data CreateCampaign
CreateCampaign' :: Maybe CampaignConfig -> Maybe Natural -> Text -> Text -> CreateCampaign

-- | Create a value of <a>CreateCampaign</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaignConfig:CreateCampaign'</a>,
--   <a>createCampaign_campaignConfig</a> - The configuration details of a
--   campaign.
--   
--   <a>$sel:minProvisionedTPS:CreateCampaign'</a>,
--   <a>createCampaign_minProvisionedTPS</a> - Specifies the requested
--   minimum provisioned transactions (recommendations) per second that
--   Amazon Personalize will support.
--   
--   <a>$sel:name:CreateCampaign'</a>, <a>createCampaign_name</a> - A name
--   for the new campaign. The campaign name must be unique within your
--   account.
--   
--   <a>$sel:solutionVersionArn:CreateCampaign'</a>,
--   <a>createCampaign_solutionVersionArn</a> - The Amazon Resource Name
--   (ARN) of the solution version to deploy.
newCreateCampaign :: Text -> Text -> CreateCampaign

-- | <i>See:</i> <a>newCreateCampaignResponse</a> smart constructor.
data CreateCampaignResponse
CreateCampaignResponse' :: Maybe Text -> Int -> CreateCampaignResponse

-- | Create a value of <a>CreateCampaignResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaignArn:CreateCampaignResponse'</a>,
--   <a>createCampaignResponse_campaignArn</a> - The Amazon Resource Name
--   (ARN) of the campaign.
--   
--   <a>$sel:httpStatus:CreateCampaignResponse'</a>,
--   <a>createCampaignResponse_httpStatus</a> - The response's http status
--   code.
newCreateCampaignResponse :: Int -> CreateCampaignResponse

-- | <i>See:</i> <a>newDescribeFilter</a> smart constructor.
data DescribeFilter
DescribeFilter' :: Text -> DescribeFilter

-- | Create a value of <a>DescribeFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterArn:DescribeFilter'</a>, <a>describeFilter_filterArn</a>
--   - The ARN of the filter to describe.
newDescribeFilter :: Text -> DescribeFilter

-- | <i>See:</i> <a>newDescribeFilterResponse</a> smart constructor.
data DescribeFilterResponse
DescribeFilterResponse' :: Maybe Filter -> Int -> DescribeFilterResponse

-- | Create a value of <a>DescribeFilterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filter':DescribeFilterResponse'</a>,
--   <a>describeFilterResponse_filter</a> - The filter's details.
--   
--   <a>$sel:httpStatus:DescribeFilterResponse'</a>,
--   <a>describeFilterResponse_httpStatus</a> - The response's http status
--   code.
newDescribeFilterResponse :: Int -> DescribeFilterResponse

-- | <i>See:</i> <a>newListEventTrackers</a> smart constructor.
data ListEventTrackers
ListEventTrackers' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListEventTrackers

-- | Create a value of <a>ListEventTrackers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEventTrackers'</a>,
--   <a>listEventTrackers_nextToken</a> - A token returned from the
--   previous call to <tt>ListEventTrackers</tt> for getting the next set
--   of event trackers (if they exist).
--   
--   <a>$sel:datasetGroupArn:ListEventTrackers'</a>,
--   <a>listEventTrackers_datasetGroupArn</a> - The ARN of a dataset group
--   used to filter the response.
--   
--   <a>$sel:maxResults:ListEventTrackers'</a>,
--   <a>listEventTrackers_maxResults</a> - The maximum number of event
--   trackers to return.
newListEventTrackers :: ListEventTrackers

-- | <i>See:</i> <a>newListEventTrackersResponse</a> smart constructor.
data ListEventTrackersResponse
ListEventTrackersResponse' :: Maybe [EventTrackerSummary] -> Maybe Text -> Int -> ListEventTrackersResponse

-- | Create a value of <a>ListEventTrackersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTrackers:ListEventTrackersResponse'</a>,
--   <a>listEventTrackersResponse_eventTrackers</a> - A list of event
--   trackers.
--   
--   <a>$sel:nextToken:ListEventTrackers'</a>,
--   <a>listEventTrackersResponse_nextToken</a> - A token for getting the
--   next set of event trackers (if they exist).
--   
--   <a>$sel:httpStatus:ListEventTrackersResponse'</a>,
--   <a>listEventTrackersResponse_httpStatus</a> - The response's http
--   status code.
newListEventTrackersResponse :: Int -> ListEventTrackersResponse

-- | <i>See:</i> <a>newCreateDatasetExportJob</a> smart constructor.
data CreateDatasetExportJob
CreateDatasetExportJob' :: Maybe IngestionMode -> Text -> Text -> Text -> DatasetExportJobOutput -> CreateDatasetExportJob

-- | Create a value of <a>CreateDatasetExportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionMode:CreateDatasetExportJob'</a>,
--   <a>createDatasetExportJob_ingestionMode</a> - The data to export,
--   based on how you imported the data. You can choose to export only
--   <tt>BULK</tt> data that you imported using a dataset import job, only
--   <tt>PUT</tt> data that you imported incrementally (using the console,
--   PutEvents, PutUsers and PutItems operations), or <tt>ALL</tt> for both
--   types. The default value is <tt>PUT</tt>.
--   
--   <a>$sel:jobName:CreateDatasetExportJob'</a>,
--   <a>createDatasetExportJob_jobName</a> - The name for the dataset
--   export job.
--   
--   <a>$sel:datasetArn:CreateDatasetExportJob'</a>,
--   <a>createDatasetExportJob_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset that contains the data to export.
--   
--   <a>$sel:roleArn:CreateDatasetExportJob'</a>,
--   <a>createDatasetExportJob_roleArn</a> - The Amazon Resource Name (ARN)
--   of the IAM service role that has permissions to add data to your
--   output Amazon S3 bucket.
--   
--   <a>$sel:jobOutput:CreateDatasetExportJob'</a>,
--   <a>createDatasetExportJob_jobOutput</a> - The path to the Amazon S3
--   bucket where the job's output is stored.
newCreateDatasetExportJob :: Text -> Text -> Text -> DatasetExportJobOutput -> CreateDatasetExportJob

-- | <i>See:</i> <a>newCreateDatasetExportJobResponse</a> smart
--   constructor.
data CreateDatasetExportJobResponse
CreateDatasetExportJobResponse' :: Maybe Text -> Int -> CreateDatasetExportJobResponse

-- | Create a value of <a>CreateDatasetExportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetExportJobArn:CreateDatasetExportJobResponse'</a>,
--   <a>createDatasetExportJobResponse_datasetExportJobArn</a> - The Amazon
--   Resource Name (ARN) of the dataset export job.
--   
--   <a>$sel:httpStatus:CreateDatasetExportJobResponse'</a>,
--   <a>createDatasetExportJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateDatasetExportJobResponse :: Int -> CreateDatasetExportJobResponse

-- | <i>See:</i> <a>newCreateSolution</a> smart constructor.
data CreateSolution
CreateSolution' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe SolutionConfig -> Maybe Bool -> Text -> Text -> CreateSolution

-- | Create a value of <a>CreateSolution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:performAutoML:CreateSolution'</a>,
--   <a>createSolution_performAutoML</a> - Whether to perform automated
--   machine learning (AutoML). The default is <tt>false</tt>. For this
--   case, you must specify <tt>recipeArn</tt>.
--   
--   When set to <tt>true</tt>, Amazon Personalize analyzes your training
--   data and selects the optimal USER_PERSONALIZATION recipe and
--   hyperparameters. In this case, you must omit <tt>recipeArn</tt>.
--   Amazon Personalize determines the optimal recipe by running tests with
--   different values for the hyperparameters. AutoML lengthens the
--   training process as compared to selecting a specific recipe.
--   
--   <a>$sel:recipeArn:CreateSolution'</a>, <a>createSolution_recipeArn</a>
--   - The ARN of the recipe to use for model training. Only specified when
--   <tt>performAutoML</tt> is false.
--   
--   <a>$sel:eventType:CreateSolution'</a>, <a>createSolution_eventType</a>
--   - When your have multiple event types (using an <tt>EVENT_TYPE</tt>
--   schema field), this parameter specifies which event type (for example,
--   'click' or 'like') is used for training the model.
--   
--   If you do not provide an <tt>eventType</tt>, Amazon Personalize will
--   use all interactions for training with equal weight regardless of
--   type.
--   
--   <a>$sel:solutionConfig:CreateSolution'</a>,
--   <a>createSolution_solutionConfig</a> - The configuration to use with
--   the solution. When <tt>performAutoML</tt> is set to true, Amazon
--   Personalize only evaluates the <tt>autoMLConfig</tt> section of the
--   solution configuration.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
--   
--   <a>$sel:performHPO:CreateSolution'</a>,
--   <a>createSolution_performHPO</a> - Whether to perform hyperparameter
--   optimization (HPO) on the specified or selected recipe. The default is
--   <tt>false</tt>.
--   
--   When performing AutoML, this parameter is always <tt>true</tt> and you
--   should not set it to <tt>false</tt>.
--   
--   <a>$sel:name:CreateSolution'</a>, <a>createSolution_name</a> - The
--   name for the solution.
--   
--   <a>$sel:datasetGroupArn:CreateSolution'</a>,
--   <a>createSolution_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group that provides the training data.
newCreateSolution :: Text -> Text -> CreateSolution

-- | <i>See:</i> <a>newCreateSolutionResponse</a> smart constructor.
data CreateSolutionResponse
CreateSolutionResponse' :: Maybe Text -> Int -> CreateSolutionResponse

-- | Create a value of <a>CreateSolutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:CreateSolutionResponse'</a>,
--   <a>createSolutionResponse_solutionArn</a> - The ARN of the solution.
--   
--   <a>$sel:httpStatus:CreateSolutionResponse'</a>,
--   <a>createSolutionResponse_httpStatus</a> - The response's http status
--   code.
newCreateSolutionResponse :: Int -> CreateSolutionResponse

-- | <i>See:</i> <a>newDeleteEventTracker</a> smart constructor.
data DeleteEventTracker
DeleteEventTracker' :: Text -> DeleteEventTracker

-- | Create a value of <a>DeleteEventTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTrackerArn:DeleteEventTracker'</a>,
--   <a>deleteEventTracker_eventTrackerArn</a> - The Amazon Resource Name
--   (ARN) of the event tracker to delete.
newDeleteEventTracker :: Text -> DeleteEventTracker

-- | <i>See:</i> <a>newDeleteEventTrackerResponse</a> smart constructor.
data DeleteEventTrackerResponse
DeleteEventTrackerResponse' :: DeleteEventTrackerResponse

-- | Create a value of <a>DeleteEventTrackerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteEventTrackerResponse :: DeleteEventTrackerResponse

-- | <i>See:</i> <a>newDescribeDatasetImportJob</a> smart constructor.
data DescribeDatasetImportJob
DescribeDatasetImportJob' :: Text -> DescribeDatasetImportJob

-- | Create a value of <a>DescribeDatasetImportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetImportJobArn:DescribeDatasetImportJob'</a>,
--   <a>describeDatasetImportJob_datasetImportJobArn</a> - The Amazon
--   Resource Name (ARN) of the dataset import job to describe.
newDescribeDatasetImportJob :: Text -> DescribeDatasetImportJob

-- | <i>See:</i> <a>newDescribeDatasetImportJobResponse</a> smart
--   constructor.
data DescribeDatasetImportJobResponse
DescribeDatasetImportJobResponse' :: Maybe DatasetImportJob -> Int -> DescribeDatasetImportJobResponse

-- | Create a value of <a>DescribeDatasetImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetImportJob:DescribeDatasetImportJobResponse'</a>,
--   <a>describeDatasetImportJobResponse_datasetImportJob</a> - Information
--   about the dataset import job, including the status.
--   
--   The status is one of the following values:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DescribeDatasetImportJobResponse'</a>,
--   <a>describeDatasetImportJobResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDatasetImportJobResponse :: Int -> DescribeDatasetImportJobResponse

-- | <i>See:</i> <a>newListSchemas</a> smart constructor.
data ListSchemas
ListSchemas' :: Maybe Text -> Maybe Natural -> ListSchemas

-- | Create a value of <a>ListSchemas</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSchemas'</a>, <a>listSchemas_nextToken</a> - A
--   token returned from the previous call to <tt>ListSchemas</tt> for
--   getting the next set of schemas (if they exist).
--   
--   <a>$sel:maxResults:ListSchemas'</a>, <a>listSchemas_maxResults</a> -
--   The maximum number of schemas to return.
newListSchemas :: ListSchemas

-- | <i>See:</i> <a>newListSchemasResponse</a> smart constructor.
data ListSchemasResponse
ListSchemasResponse' :: Maybe [DatasetSchemaSummary] -> Maybe Text -> Int -> ListSchemasResponse

-- | Create a value of <a>ListSchemasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemas:ListSchemasResponse'</a>,
--   <a>listSchemasResponse_schemas</a> - A list of schemas.
--   
--   <a>$sel:nextToken:ListSchemas'</a>,
--   <a>listSchemasResponse_nextToken</a> - A token used to get the next
--   set of schemas (if they exist).
--   
--   <a>$sel:httpStatus:ListSchemasResponse'</a>,
--   <a>listSchemasResponse_httpStatus</a> - The response's http status
--   code.
newListSchemasResponse :: Int -> ListSchemasResponse

-- | <i>See:</i> <a>newCreateEventTracker</a> smart constructor.
data CreateEventTracker
CreateEventTracker' :: Text -> Text -> CreateEventTracker

-- | Create a value of <a>CreateEventTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateEventTracker'</a>, <a>createEventTracker_name</a> -
--   The name for the event tracker.
--   
--   <a>$sel:datasetGroupArn:CreateEventTracker'</a>,
--   <a>createEventTracker_datasetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the dataset group that receives the event data.
newCreateEventTracker :: Text -> Text -> CreateEventTracker

-- | <i>See:</i> <a>newCreateEventTrackerResponse</a> smart constructor.
data CreateEventTrackerResponse
CreateEventTrackerResponse' :: Maybe Text -> Maybe Text -> Int -> CreateEventTrackerResponse

-- | Create a value of <a>CreateEventTrackerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trackingId:CreateEventTrackerResponse'</a>,
--   <a>createEventTrackerResponse_trackingId</a> - The ID of the event
--   tracker. Include this ID in requests to the <a>PutEvents</a> API.
--   
--   <a>$sel:eventTrackerArn:CreateEventTrackerResponse'</a>,
--   <a>createEventTrackerResponse_eventTrackerArn</a> - The ARN of the
--   event tracker.
--   
--   <a>$sel:httpStatus:CreateEventTrackerResponse'</a>,
--   <a>createEventTrackerResponse_httpStatus</a> - The response's http
--   status code.
newCreateEventTrackerResponse :: Int -> CreateEventTrackerResponse

-- | <i>See:</i> <a>newDeleteSolution</a> smart constructor.
data DeleteSolution
DeleteSolution' :: Text -> DeleteSolution

-- | Create a value of <a>DeleteSolution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:DeleteSolution'</a>,
--   <a>deleteSolution_solutionArn</a> - The ARN of the solution to delete.
newDeleteSolution :: Text -> DeleteSolution

-- | <i>See:</i> <a>newDeleteSolutionResponse</a> smart constructor.
data DeleteSolutionResponse
DeleteSolutionResponse' :: DeleteSolutionResponse

-- | Create a value of <a>DeleteSolutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSolutionResponse :: DeleteSolutionResponse

-- | <i>See:</i> <a>newDescribeCampaign</a> smart constructor.
data DescribeCampaign
DescribeCampaign' :: Text -> DescribeCampaign

-- | Create a value of <a>DescribeCampaign</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaignArn:DescribeCampaign'</a>,
--   <a>describeCampaign_campaignArn</a> - The Amazon Resource Name (ARN)
--   of the campaign.
newDescribeCampaign :: Text -> DescribeCampaign

-- | <i>See:</i> <a>newDescribeCampaignResponse</a> smart constructor.
data DescribeCampaignResponse
DescribeCampaignResponse' :: Maybe Campaign -> Int -> DescribeCampaignResponse

-- | Create a value of <a>DescribeCampaignResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:campaign:DescribeCampaignResponse'</a>,
--   <a>describeCampaignResponse_campaign</a> - The properties of the
--   campaign.
--   
--   <a>$sel:httpStatus:DescribeCampaignResponse'</a>,
--   <a>describeCampaignResponse_httpStatus</a> - The response's http
--   status code.
newDescribeCampaignResponse :: Int -> DescribeCampaignResponse

-- | <i>See:</i> <a>newDeleteDataset</a> smart constructor.
data DeleteDataset
DeleteDataset' :: Text -> DeleteDataset

-- | Create a value of <a>DeleteDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetArn:DeleteDataset'</a>, <a>deleteDataset_datasetArn</a>
--   - The Amazon Resource Name (ARN) of the dataset to delete.
newDeleteDataset :: Text -> DeleteDataset

-- | <i>See:</i> <a>newDeleteDatasetResponse</a> smart constructor.
data DeleteDatasetResponse
DeleteDatasetResponse' :: DeleteDatasetResponse

-- | Create a value of <a>DeleteDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDatasetResponse :: DeleteDatasetResponse

-- | <i>See:</i> <a>newCreateDataset</a> smart constructor.
data CreateDataset
CreateDataset' :: Text -> Text -> Text -> Text -> CreateDataset

-- | Create a value of <a>CreateDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateDataset'</a>, <a>createDataset_name</a> - The name
--   for the dataset.
--   
--   <a>$sel:schemaArn:CreateDataset'</a>, <a>createDataset_schemaArn</a> -
--   The ARN of the schema to associate with the dataset. The schema
--   defines the dataset fields.
--   
--   <a>$sel:datasetGroupArn:CreateDataset'</a>,
--   <a>createDataset_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group to add the dataset to.
--   
--   <a>$sel:datasetType:CreateDataset'</a>,
--   <a>createDataset_datasetType</a> - The type of dataset.
--   
--   One of the following (case insensitive) values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
newCreateDataset :: Text -> Text -> Text -> Text -> CreateDataset

-- | <i>See:</i> <a>newCreateDatasetResponse</a> smart constructor.
data CreateDatasetResponse
CreateDatasetResponse' :: Maybe Text -> Int -> CreateDatasetResponse

-- | Create a value of <a>CreateDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetArn:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_datasetArn</a> - The ARN of the dataset.
--   
--   <a>$sel:httpStatus:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_httpStatus</a> - The response's http status
--   code.
newCreateDatasetResponse :: Int -> CreateDatasetResponse

-- | <i>See:</i> <a>newDescribeSolutionVersion</a> smart constructor.
data DescribeSolutionVersion
DescribeSolutionVersion' :: Text -> DescribeSolutionVersion

-- | Create a value of <a>DescribeSolutionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionVersionArn:DescribeSolutionVersion'</a>,
--   <a>describeSolutionVersion_solutionVersionArn</a> - The Amazon
--   Resource Name (ARN) of the solution version.
newDescribeSolutionVersion :: Text -> DescribeSolutionVersion

-- | <i>See:</i> <a>newDescribeSolutionVersionResponse</a> smart
--   constructor.
data DescribeSolutionVersionResponse
DescribeSolutionVersionResponse' :: Maybe SolutionVersion -> Int -> DescribeSolutionVersionResponse

-- | Create a value of <a>DescribeSolutionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionVersion:DescribeSolutionVersionResponse'</a>,
--   <a>describeSolutionVersionResponse_solutionVersion</a> - The solution
--   version.
--   
--   <a>$sel:httpStatus:DescribeSolutionVersionResponse'</a>,
--   <a>describeSolutionVersionResponse_httpStatus</a> - The response's
--   http status code.
newDescribeSolutionVersionResponse :: Int -> DescribeSolutionVersionResponse

-- | <i>See:</i> <a>newDescribeEventTracker</a> smart constructor.
data DescribeEventTracker
DescribeEventTracker' :: Text -> DescribeEventTracker

-- | Create a value of <a>DescribeEventTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTrackerArn:DescribeEventTracker'</a>,
--   <a>describeEventTracker_eventTrackerArn</a> - The Amazon Resource Name
--   (ARN) of the event tracker to describe.
newDescribeEventTracker :: Text -> DescribeEventTracker

-- | <i>See:</i> <a>newDescribeEventTrackerResponse</a> smart constructor.
data DescribeEventTrackerResponse
DescribeEventTrackerResponse' :: Maybe EventTracker -> Int -> DescribeEventTrackerResponse

-- | Create a value of <a>DescribeEventTrackerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventTracker:DescribeEventTrackerResponse'</a>,
--   <a>describeEventTrackerResponse_eventTracker</a> - An object that
--   describes the event tracker.
--   
--   <a>$sel:httpStatus:DescribeEventTrackerResponse'</a>,
--   <a>describeEventTrackerResponse_httpStatus</a> - The response's http
--   status code.
newDescribeEventTrackerResponse :: Int -> DescribeEventTrackerResponse

-- | <i>See:</i> <a>newListDatasetImportJobs</a> smart constructor.
data ListDatasetImportJobs
ListDatasetImportJobs' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDatasetImportJobs

-- | Create a value of <a>ListDatasetImportJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetArn:ListDatasetImportJobs'</a>,
--   <a>listDatasetImportJobs_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset to list the dataset import jobs for.
--   
--   <a>$sel:nextToken:ListDatasetImportJobs'</a>,
--   <a>listDatasetImportJobs_nextToken</a> - A token returned from the
--   previous call to <tt>ListDatasetImportJobs</tt> for getting the next
--   set of dataset import jobs (if they exist).
--   
--   <a>$sel:maxResults:ListDatasetImportJobs'</a>,
--   <a>listDatasetImportJobs_maxResults</a> - The maximum number of
--   dataset import jobs to return.
newListDatasetImportJobs :: ListDatasetImportJobs

-- | <i>See:</i> <a>newListDatasetImportJobsResponse</a> smart constructor.
data ListDatasetImportJobsResponse
ListDatasetImportJobsResponse' :: Maybe [DatasetImportJobSummary] -> Maybe Text -> Int -> ListDatasetImportJobsResponse

-- | Create a value of <a>ListDatasetImportJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetImportJobs:ListDatasetImportJobsResponse'</a>,
--   <a>listDatasetImportJobsResponse_datasetImportJobs</a> - The list of
--   dataset import jobs.
--   
--   <a>$sel:nextToken:ListDatasetImportJobs'</a>,
--   <a>listDatasetImportJobsResponse_nextToken</a> - A token for getting
--   the next set of dataset import jobs (if they exist).
--   
--   <a>$sel:httpStatus:ListDatasetImportJobsResponse'</a>,
--   <a>listDatasetImportJobsResponse_httpStatus</a> - The response's http
--   status code.
newListDatasetImportJobsResponse :: Int -> ListDatasetImportJobsResponse

-- | <i>See:</i> <a>newDeleteFilter</a> smart constructor.
data DeleteFilter
DeleteFilter' :: Text -> DeleteFilter

-- | Create a value of <a>DeleteFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterArn:DeleteFilter'</a>, <a>deleteFilter_filterArn</a> -
--   The ARN of the filter to delete.
newDeleteFilter :: Text -> DeleteFilter

-- | <i>See:</i> <a>newDeleteFilterResponse</a> smart constructor.
data DeleteFilterResponse
DeleteFilterResponse' :: DeleteFilterResponse

-- | Create a value of <a>DeleteFilterResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFilterResponse :: DeleteFilterResponse

-- | <i>See:</i> <a>newListBatchInferenceJobs</a> smart constructor.
data ListBatchInferenceJobs
ListBatchInferenceJobs' :: Maybe Text -> Maybe Natural -> Maybe Text -> ListBatchInferenceJobs

-- | Create a value of <a>ListBatchInferenceJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBatchInferenceJobs'</a>,
--   <a>listBatchInferenceJobs_nextToken</a> - The token to request the
--   next page of results.
--   
--   <a>$sel:maxResults:ListBatchInferenceJobs'</a>,
--   <a>listBatchInferenceJobs_maxResults</a> - The maximum number of batch
--   inference job results to return in each page. The default value is
--   100.
--   
--   <a>$sel:solutionVersionArn:ListBatchInferenceJobs'</a>,
--   <a>listBatchInferenceJobs_solutionVersionArn</a> - The Amazon Resource
--   Name (ARN) of the solution version from which the batch inference jobs
--   were created.
newListBatchInferenceJobs :: ListBatchInferenceJobs

-- | <i>See:</i> <a>newListBatchInferenceJobsResponse</a> smart
--   constructor.
data ListBatchInferenceJobsResponse
ListBatchInferenceJobsResponse' :: Maybe [BatchInferenceJobSummary] -> Maybe Text -> Int -> ListBatchInferenceJobsResponse

-- | Create a value of <a>ListBatchInferenceJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchInferenceJobs:ListBatchInferenceJobsResponse'</a>,
--   <a>listBatchInferenceJobsResponse_batchInferenceJobs</a> - A list
--   containing information on each job that is returned.
--   
--   <a>$sel:nextToken:ListBatchInferenceJobs'</a>,
--   <a>listBatchInferenceJobsResponse_nextToken</a> - The token to use to
--   retrieve the next page of results. The value is <tt>null</tt> when
--   there are no more results to return.
--   
--   <a>$sel:httpStatus:ListBatchInferenceJobsResponse'</a>,
--   <a>listBatchInferenceJobsResponse_httpStatus</a> - The response's http
--   status code.
newListBatchInferenceJobsResponse :: Int -> ListBatchInferenceJobsResponse

-- | <i>See:</i> <a>newListFilters</a> smart constructor.
data ListFilters
ListFilters' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListFilters

-- | Create a value of <a>ListFilters</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFilters'</a>, <a>listFilters_nextToken</a> - A
--   token returned from the previous call to <tt>ListFilters</tt> for
--   getting the next set of filters (if they exist).
--   
--   <a>$sel:datasetGroupArn:ListFilters'</a>,
--   <a>listFilters_datasetGroupArn</a> - The ARN of the dataset group that
--   contains the filters.
--   
--   <a>$sel:maxResults:ListFilters'</a>, <a>listFilters_maxResults</a> -
--   The maximum number of filters to return.
newListFilters :: ListFilters

-- | <i>See:</i> <a>newListFiltersResponse</a> smart constructor.
data ListFiltersResponse
ListFiltersResponse' :: Maybe [FilterSummary] -> Maybe Text -> Int -> ListFiltersResponse

-- | Create a value of <a>ListFiltersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListFiltersResponse'</a>,
--   <a>listFiltersResponse_filters</a> - A list of returned filters.
--   
--   <a>$sel:nextToken:ListFilters'</a>,
--   <a>listFiltersResponse_nextToken</a> - A token for getting the next
--   set of filters (if they exist).
--   
--   <a>$sel:httpStatus:ListFiltersResponse'</a>,
--   <a>listFiltersResponse_httpStatus</a> - The response's http status
--   code.
newListFiltersResponse :: Int -> ListFiltersResponse

-- | <i>See:</i> <a>newDeleteDatasetGroup</a> smart constructor.
data DeleteDatasetGroup
DeleteDatasetGroup' :: Text -> DeleteDatasetGroup

-- | Create a value of <a>DeleteDatasetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetGroupArn:DeleteDatasetGroup'</a>,
--   <a>deleteDatasetGroup_datasetGroupArn</a> - The ARN of the dataset
--   group to delete.
newDeleteDatasetGroup :: Text -> DeleteDatasetGroup

-- | <i>See:</i> <a>newDeleteDatasetGroupResponse</a> smart constructor.
data DeleteDatasetGroupResponse
DeleteDatasetGroupResponse' :: DeleteDatasetGroupResponse

-- | Create a value of <a>DeleteDatasetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDatasetGroupResponse :: DeleteDatasetGroupResponse

-- | <i>See:</i> <a>newDescribeSchema</a> smart constructor.
data DescribeSchema
DescribeSchema' :: Text -> DescribeSchema

-- | Create a value of <a>DescribeSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:DescribeSchema'</a>, <a>describeSchema_schemaArn</a>
--   - The Amazon Resource Name (ARN) of the schema to retrieve.
newDescribeSchema :: Text -> DescribeSchema

-- | <i>See:</i> <a>newDescribeSchemaResponse</a> smart constructor.
data DescribeSchemaResponse
DescribeSchemaResponse' :: Maybe DatasetSchema -> Int -> DescribeSchemaResponse

-- | Create a value of <a>DescribeSchemaResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:DescribeSchemaResponse'</a>,
--   <a>describeSchemaResponse_schema</a> - The requested schema.
--   
--   <a>$sel:httpStatus:DescribeSchemaResponse'</a>,
--   <a>describeSchemaResponse_httpStatus</a> - The response's http status
--   code.
newDescribeSchemaResponse :: Int -> DescribeSchemaResponse

-- | <i>See:</i> <a>newDescribeAlgorithm</a> smart constructor.
data DescribeAlgorithm
DescribeAlgorithm' :: Text -> DescribeAlgorithm

-- | Create a value of <a>DescribeAlgorithm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithmArn:DescribeAlgorithm'</a>,
--   <a>describeAlgorithm_algorithmArn</a> - The Amazon Resource Name (ARN)
--   of the algorithm to describe.
newDescribeAlgorithm :: Text -> DescribeAlgorithm

-- | <i>See:</i> <a>newDescribeAlgorithmResponse</a> smart constructor.
data DescribeAlgorithmResponse
DescribeAlgorithmResponse' :: Maybe Algorithm -> Int -> DescribeAlgorithmResponse

-- | Create a value of <a>DescribeAlgorithmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithm:DescribeAlgorithmResponse'</a>,
--   <a>describeAlgorithmResponse_algorithm</a> - A listing of the
--   properties of the algorithm.
--   
--   <a>$sel:httpStatus:DescribeAlgorithmResponse'</a>,
--   <a>describeAlgorithmResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAlgorithmResponse :: Int -> DescribeAlgorithmResponse

-- | <i>See:</i> <a>newListSolutionVersions</a> smart constructor.
data ListSolutionVersions
ListSolutionVersions' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListSolutionVersions

-- | Create a value of <a>ListSolutionVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:ListSolutionVersions'</a>,
--   <a>listSolutionVersions_solutionArn</a> - The Amazon Resource Name
--   (ARN) of the solution.
--   
--   <a>$sel:nextToken:ListSolutionVersions'</a>,
--   <a>listSolutionVersions_nextToken</a> - A token returned from the
--   previous call to <tt>ListSolutionVersions</tt> for getting the next
--   set of solution versions (if they exist).
--   
--   <a>$sel:maxResults:ListSolutionVersions'</a>,
--   <a>listSolutionVersions_maxResults</a> - The maximum number of
--   solution versions to return.
newListSolutionVersions :: ListSolutionVersions

-- | <i>See:</i> <a>newListSolutionVersionsResponse</a> smart constructor.
data ListSolutionVersionsResponse
ListSolutionVersionsResponse' :: Maybe Text -> Maybe [SolutionVersionSummary] -> Int -> ListSolutionVersionsResponse

-- | Create a value of <a>ListSolutionVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSolutionVersions'</a>,
--   <a>listSolutionVersionsResponse_nextToken</a> - A token for getting
--   the next set of solution versions (if they exist).
--   
--   <a>$sel:solutionVersions:ListSolutionVersionsResponse'</a>,
--   <a>listSolutionVersionsResponse_solutionVersions</a> - A list of
--   solution versions describing the version properties.
--   
--   <a>$sel:httpStatus:ListSolutionVersionsResponse'</a>,
--   <a>listSolutionVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListSolutionVersionsResponse :: Int -> ListSolutionVersionsResponse

-- | <i>See:</i> <a>newDescribeBatchInferenceJob</a> smart constructor.
data DescribeBatchInferenceJob
DescribeBatchInferenceJob' :: Text -> DescribeBatchInferenceJob

-- | Create a value of <a>DescribeBatchInferenceJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchInferenceJobArn:DescribeBatchInferenceJob'</a>,
--   <a>describeBatchInferenceJob_batchInferenceJobArn</a> - The ARN of the
--   batch inference job to describe.
newDescribeBatchInferenceJob :: Text -> DescribeBatchInferenceJob

-- | <i>See:</i> <a>newDescribeBatchInferenceJobResponse</a> smart
--   constructor.
data DescribeBatchInferenceJobResponse
DescribeBatchInferenceJobResponse' :: Maybe BatchInferenceJob -> Int -> DescribeBatchInferenceJobResponse

-- | Create a value of <a>DescribeBatchInferenceJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchInferenceJob:DescribeBatchInferenceJobResponse'</a>,
--   <a>describeBatchInferenceJobResponse_batchInferenceJob</a> -
--   Information on the specified batch inference job.
--   
--   <a>$sel:httpStatus:DescribeBatchInferenceJobResponse'</a>,
--   <a>describeBatchInferenceJobResponse_httpStatus</a> - The response's
--   http status code.
newDescribeBatchInferenceJobResponse :: Int -> DescribeBatchInferenceJobResponse

-- | <i>See:</i> <a>newCreateSchema</a> smart constructor.
data CreateSchema
CreateSchema' :: Text -> Text -> CreateSchema

-- | Create a value of <a>CreateSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateSchema'</a>, <a>createSchema_name</a> - The name
--   for the schema.
--   
--   <a>$sel:schema:CreateSchema'</a>, <a>createSchema_schema</a> - A
--   schema in Avro JSON format.
newCreateSchema :: Text -> Text -> CreateSchema

-- | <i>See:</i> <a>newCreateSchemaResponse</a> smart constructor.
data CreateSchemaResponse
CreateSchemaResponse' :: Maybe Text -> Int -> CreateSchemaResponse

-- | Create a value of <a>CreateSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaArn</a> - The Amazon Resource Name (ARN)
--   of the created schema.
--   
--   <a>$sel:httpStatus:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_httpStatus</a> - The response's http status
--   code.
newCreateSchemaResponse :: Int -> CreateSchemaResponse

-- | <i>See:</i> <a>newDescribeRecipe</a> smart constructor.
data DescribeRecipe
DescribeRecipe' :: Text -> DescribeRecipe

-- | Create a value of <a>DescribeRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeArn:DescribeRecipe'</a>, <a>describeRecipe_recipeArn</a>
--   - The Amazon Resource Name (ARN) of the recipe to describe.
newDescribeRecipe :: Text -> DescribeRecipe

-- | <i>See:</i> <a>newDescribeRecipeResponse</a> smart constructor.
data DescribeRecipeResponse
DescribeRecipeResponse' :: Maybe Recipe -> Int -> DescribeRecipeResponse

-- | Create a value of <a>DescribeRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipe:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_recipe</a> - An object that describes the
--   recipe.
--   
--   <a>$sel:httpStatus:DescribeRecipeResponse'</a>,
--   <a>describeRecipeResponse_httpStatus</a> - The response's http status
--   code.
newDescribeRecipeResponse :: Int -> DescribeRecipeResponse

-- | <i>See:</i> <a>newListSolutions</a> smart constructor.
data ListSolutions
ListSolutions' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListSolutions

-- | Create a value of <a>ListSolutions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSolutions'</a>, <a>listSolutions_nextToken</a> -
--   A token returned from the previous call to <tt>ListSolutions</tt> for
--   getting the next set of solutions (if they exist).
--   
--   <a>$sel:datasetGroupArn:ListSolutions'</a>,
--   <a>listSolutions_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group.
--   
--   <a>$sel:maxResults:ListSolutions'</a>, <a>listSolutions_maxResults</a>
--   - The maximum number of solutions to return.
newListSolutions :: ListSolutions

-- | <i>See:</i> <a>newListSolutionsResponse</a> smart constructor.
data ListSolutionsResponse
ListSolutionsResponse' :: Maybe Text -> Maybe [SolutionSummary] -> Int -> ListSolutionsResponse

-- | Create a value of <a>ListSolutionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSolutions'</a>,
--   <a>listSolutionsResponse_nextToken</a> - A token for getting the next
--   set of solutions (if they exist).
--   
--   <a>$sel:solutions:ListSolutionsResponse'</a>,
--   <a>listSolutionsResponse_solutions</a> - A list of the current
--   solutions.
--   
--   <a>$sel:httpStatus:ListSolutionsResponse'</a>,
--   <a>listSolutionsResponse_httpStatus</a> - The response's http status
--   code.
newListSolutionsResponse :: Int -> ListSolutionsResponse

-- | <i>See:</i> <a>newListDatasetExportJobs</a> smart constructor.
data ListDatasetExportJobs
ListDatasetExportJobs' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDatasetExportJobs

-- | Create a value of <a>ListDatasetExportJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetArn:ListDatasetExportJobs'</a>,
--   <a>listDatasetExportJobs_datasetArn</a> - The Amazon Resource Name
--   (ARN) of the dataset to list the dataset export jobs for.
--   
--   <a>$sel:nextToken:ListDatasetExportJobs'</a>,
--   <a>listDatasetExportJobs_nextToken</a> - A token returned from the
--   previous call to <tt>ListDatasetExportJobs</tt> for getting the next
--   set of dataset export jobs (if they exist).
--   
--   <a>$sel:maxResults:ListDatasetExportJobs'</a>,
--   <a>listDatasetExportJobs_maxResults</a> - The maximum number of
--   dataset export jobs to return.
newListDatasetExportJobs :: ListDatasetExportJobs

-- | <i>See:</i> <a>newListDatasetExportJobsResponse</a> smart constructor.
data ListDatasetExportJobsResponse
ListDatasetExportJobsResponse' :: Maybe Text -> Maybe [DatasetExportJobSummary] -> Int -> ListDatasetExportJobsResponse

-- | Create a value of <a>ListDatasetExportJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasetExportJobs'</a>,
--   <a>listDatasetExportJobsResponse_nextToken</a> - A token for getting
--   the next set of dataset export jobs (if they exist).
--   
--   <a>$sel:datasetExportJobs:ListDatasetExportJobsResponse'</a>,
--   <a>listDatasetExportJobsResponse_datasetExportJobs</a> - The list of
--   dataset export jobs.
--   
--   <a>$sel:httpStatus:ListDatasetExportJobsResponse'</a>,
--   <a>listDatasetExportJobsResponse_httpStatus</a> - The response's http
--   status code.
newListDatasetExportJobsResponse :: Int -> ListDatasetExportJobsResponse

-- | <i>See:</i> <a>newDescribeDatasetGroup</a> smart constructor.
data DescribeDatasetGroup
DescribeDatasetGroup' :: Text -> DescribeDatasetGroup

-- | Create a value of <a>DescribeDatasetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetGroupArn:DescribeDatasetGroup'</a>,
--   <a>describeDatasetGroup_datasetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the dataset group to describe.
newDescribeDatasetGroup :: Text -> DescribeDatasetGroup

-- | <i>See:</i> <a>newDescribeDatasetGroupResponse</a> smart constructor.
data DescribeDatasetGroupResponse
DescribeDatasetGroupResponse' :: Maybe DatasetGroup -> Int -> DescribeDatasetGroupResponse

-- | Create a value of <a>DescribeDatasetGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetGroup:DescribeDatasetGroupResponse'</a>,
--   <a>describeDatasetGroupResponse_datasetGroup</a> - A listing of the
--   dataset group's properties.
--   
--   <a>$sel:httpStatus:DescribeDatasetGroupResponse'</a>,
--   <a>describeDatasetGroupResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDatasetGroupResponse :: Int -> DescribeDatasetGroupResponse

-- | <i>See:</i> <a>newDescribeFeatureTransformation</a> smart constructor.
data DescribeFeatureTransformation
DescribeFeatureTransformation' :: Text -> DescribeFeatureTransformation

-- | Create a value of <a>DescribeFeatureTransformation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:featureTransformationArn:DescribeFeatureTransformation'</a>,
--   <a>describeFeatureTransformation_featureTransformationArn</a> - The
--   Amazon Resource Name (ARN) of the feature transformation to describe.
newDescribeFeatureTransformation :: Text -> DescribeFeatureTransformation

-- | <i>See:</i> <a>newDescribeFeatureTransformationResponse</a> smart
--   constructor.
data DescribeFeatureTransformationResponse
DescribeFeatureTransformationResponse' :: Maybe FeatureTransformation -> Int -> DescribeFeatureTransformationResponse

-- | Create a value of <a>DescribeFeatureTransformationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:featureTransformation:DescribeFeatureTransformationResponse'</a>,
--   <a>describeFeatureTransformationResponse_featureTransformation</a> - A
--   listing of the FeatureTransformation properties.
--   
--   <a>$sel:httpStatus:DescribeFeatureTransformationResponse'</a>,
--   <a>describeFeatureTransformationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeFeatureTransformationResponse :: Int -> DescribeFeatureTransformationResponse

-- | <i>See:</i> <a>newGetSolutionMetrics</a> smart constructor.
data GetSolutionMetrics
GetSolutionMetrics' :: Text -> GetSolutionMetrics

-- | Create a value of <a>GetSolutionMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionVersionArn:GetSolutionMetrics'</a>,
--   <a>getSolutionMetrics_solutionVersionArn</a> - The Amazon Resource
--   Name (ARN) of the solution version for which to get metrics.
newGetSolutionMetrics :: Text -> GetSolutionMetrics

-- | <i>See:</i> <a>newGetSolutionMetricsResponse</a> smart constructor.
data GetSolutionMetricsResponse
GetSolutionMetricsResponse' :: Maybe (HashMap Text Double) -> Maybe Text -> Int -> GetSolutionMetricsResponse

-- | Create a value of <a>GetSolutionMetricsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metrics:GetSolutionMetricsResponse'</a>,
--   <a>getSolutionMetricsResponse_metrics</a> - The metrics for the
--   solution version.
--   
--   <a>$sel:solutionVersionArn:GetSolutionMetrics'</a>,
--   <a>getSolutionMetricsResponse_solutionVersionArn</a> - The same
--   solution version ARN as specified in the request.
--   
--   <a>$sel:httpStatus:GetSolutionMetricsResponse'</a>,
--   <a>getSolutionMetricsResponse_httpStatus</a> - The response's http
--   status code.
newGetSolutionMetricsResponse :: Int -> GetSolutionMetricsResponse

-- | <i>See:</i> <a>newDeleteSchema</a> smart constructor.
data DeleteSchema
DeleteSchema' :: Text -> DeleteSchema

-- | Create a value of <a>DeleteSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaArn:DeleteSchema'</a>, <a>deleteSchema_schemaArn</a> -
--   The Amazon Resource Name (ARN) of the schema to delete.
newDeleteSchema :: Text -> DeleteSchema

-- | <i>See:</i> <a>newDeleteSchemaResponse</a> smart constructor.
data DeleteSchemaResponse
DeleteSchemaResponse' :: DeleteSchemaResponse

-- | Create a value of <a>DeleteSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSchemaResponse :: DeleteSchemaResponse

-- | <i>See:</i> <a>newListDatasets</a> smart constructor.
data ListDatasets
ListDatasets' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDatasets

-- | Create a value of <a>ListDatasets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>, <a>listDatasets_nextToken</a> - A
--   token returned from the previous call to
--   <tt>ListDatasetImportJobs</tt> for getting the next set of dataset
--   import jobs (if they exist).
--   
--   <a>$sel:datasetGroupArn:ListDatasets'</a>,
--   <a>listDatasets_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group that contains the datasets to list.
--   
--   <a>$sel:maxResults:ListDatasets'</a>, <a>listDatasets_maxResults</a> -
--   The maximum number of datasets to return.
newListDatasets :: ListDatasets

-- | <i>See:</i> <a>newListDatasetsResponse</a> smart constructor.
data ListDatasetsResponse
ListDatasetsResponse' :: Maybe Text -> Maybe [DatasetSummary] -> Int -> ListDatasetsResponse

-- | Create a value of <a>ListDatasetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>,
--   <a>listDatasetsResponse_nextToken</a> - A token for getting the next
--   set of datasets (if they exist).
--   
--   <a>$sel:datasets:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_datasets</a> - An array of <tt>Dataset</tt>
--   objects. Each object provides metadata information.
--   
--   <a>$sel:httpStatus:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_httpStatus</a> - The response's http status
--   code.
newListDatasetsResponse :: Int -> ListDatasetsResponse

-- | <i>See:</i> <a>newCreateDatasetGroup</a> smart constructor.
data CreateDatasetGroup
CreateDatasetGroup' :: Maybe Text -> Maybe Text -> Text -> CreateDatasetGroup

-- | Create a value of <a>CreateDatasetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:CreateDatasetGroup'</a>,
--   <a>createDatasetGroup_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of a Key Management Service (KMS) key used to encrypt the datasets.
--   
--   <a>$sel:roleArn:CreateDatasetGroup'</a>,
--   <a>createDatasetGroup_roleArn</a> - The ARN of the Identity and Access
--   Management (IAM) role that has permissions to access the Key
--   Management Service (KMS) key. Supplying an IAM role is only valid when
--   also specifying a KMS key.
--   
--   <a>$sel:name:CreateDatasetGroup'</a>, <a>createDatasetGroup_name</a> -
--   The name for the new dataset group.
newCreateDatasetGroup :: Text -> CreateDatasetGroup

-- | <i>See:</i> <a>newCreateDatasetGroupResponse</a> smart constructor.
data CreateDatasetGroupResponse
CreateDatasetGroupResponse' :: Maybe Text -> Int -> CreateDatasetGroupResponse

-- | Create a value of <a>CreateDatasetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetGroupArn:CreateDatasetGroupResponse'</a>,
--   <a>createDatasetGroupResponse_datasetGroupArn</a> - The Amazon
--   Resource Name (ARN) of the new dataset group.
--   
--   <a>$sel:httpStatus:CreateDatasetGroupResponse'</a>,
--   <a>createDatasetGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateDatasetGroupResponse :: Int -> CreateDatasetGroupResponse

-- | <i>See:</i> <a>newListRecipes</a> smart constructor.
data ListRecipes
ListRecipes' :: Maybe Text -> Maybe Natural -> Maybe RecipeProvider -> ListRecipes

-- | Create a value of <a>ListRecipes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecipes'</a>, <a>listRecipes_nextToken</a> - A
--   token returned from the previous call to <tt>ListRecipes</tt> for
--   getting the next set of recipes (if they exist).
--   
--   <a>$sel:maxResults:ListRecipes'</a>, <a>listRecipes_maxResults</a> -
--   The maximum number of recipes to return.
--   
--   <a>$sel:recipeProvider:ListRecipes'</a>,
--   <a>listRecipes_recipeProvider</a> - The default is <tt>SERVICE</tt>.
newListRecipes :: ListRecipes

-- | <i>See:</i> <a>newListRecipesResponse</a> smart constructor.
data ListRecipesResponse
ListRecipesResponse' :: Maybe Text -> Maybe [RecipeSummary] -> Int -> ListRecipesResponse

-- | Create a value of <a>ListRecipesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecipes'</a>,
--   <a>listRecipesResponse_nextToken</a> - A token for getting the next
--   set of recipes.
--   
--   <a>$sel:recipes:ListRecipesResponse'</a>,
--   <a>listRecipesResponse_recipes</a> - The list of available recipes.
--   
--   <a>$sel:httpStatus:ListRecipesResponse'</a>,
--   <a>listRecipesResponse_httpStatus</a> - The response's http status
--   code.
newListRecipesResponse :: Int -> ListRecipesResponse
newtype IngestionMode
IngestionMode' :: Text -> IngestionMode
[fromIngestionMode] :: IngestionMode -> Text
pattern IngestionMode_ALL :: IngestionMode
pattern IngestionMode_BULK :: IngestionMode
pattern IngestionMode_PUT :: IngestionMode
newtype ObjectiveSensitivity
ObjectiveSensitivity' :: Text -> ObjectiveSensitivity
[fromObjectiveSensitivity] :: ObjectiveSensitivity -> Text
pattern ObjectiveSensitivity_HIGH :: ObjectiveSensitivity
pattern ObjectiveSensitivity_LOW :: ObjectiveSensitivity
pattern ObjectiveSensitivity_MEDIUM :: ObjectiveSensitivity
pattern ObjectiveSensitivity_OFF :: ObjectiveSensitivity
newtype RecipeProvider
RecipeProvider' :: Text -> RecipeProvider
[fromRecipeProvider] :: RecipeProvider -> Text
pattern RecipeProvider_SERVICE :: RecipeProvider
newtype TrainingMode
TrainingMode' :: Text -> TrainingMode
[fromTrainingMode] :: TrainingMode -> Text
pattern TrainingMode_FULL :: TrainingMode
pattern TrainingMode_UPDATE :: TrainingMode

-- | Describes a custom algorithm.
--   
--   <i>See:</i> <a>newAlgorithm</a> smart constructor.
data Algorithm
Algorithm' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe DefaultHyperParameterRanges -> Maybe AlgorithmImage -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe (HashMap Text Text) -> Maybe Text -> Algorithm

-- | Create a value of <a>Algorithm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultHyperParameters:Algorithm'</a>,
--   <a>algorithm_defaultHyperParameters</a> - Specifies the default
--   hyperparameters.
--   
--   <a>$sel:algorithmArn:Algorithm'</a>, <a>algorithm_algorithmArn</a> -
--   The Amazon Resource Name (ARN) of the algorithm.
--   
--   <a>$sel:trainingInputMode:Algorithm'</a>,
--   <a>algorithm_trainingInputMode</a> - The training input mode.
--   
--   <a>$sel:defaultHyperParameterRanges:Algorithm'</a>,
--   <a>algorithm_defaultHyperParameterRanges</a> - Specifies the default
--   hyperparameters, their ranges, and whether they are tunable. A tunable
--   hyperparameter can have its value determined during hyperparameter
--   optimization (HPO).
--   
--   <a>$sel:algorithmImage:Algorithm'</a>, <a>algorithm_algorithmImage</a>
--   - The URI of the Docker container for the algorithm image.
--   
--   <a>$sel:lastUpdatedDateTime:Algorithm'</a>,
--   <a>algorithm_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the algorithm was last updated.
--   
--   <a>$sel:name:Algorithm'</a>, <a>algorithm_name</a> - The name of the
--   algorithm.
--   
--   <a>$sel:creationDateTime:Algorithm'</a>,
--   <a>algorithm_creationDateTime</a> - The date and time (in Unix time)
--   that the algorithm was created.
--   
--   <a>$sel:defaultResourceConfig:Algorithm'</a>,
--   <a>algorithm_defaultResourceConfig</a> - Specifies the default maximum
--   number of training jobs and parallel training jobs.
--   
--   <a>$sel:roleArn:Algorithm'</a>, <a>algorithm_roleArn</a> - The Amazon
--   Resource Name (ARN) of the role.
newAlgorithm :: Algorithm

-- | Describes an algorithm image.
--   
--   <i>See:</i> <a>newAlgorithmImage</a> smart constructor.
data AlgorithmImage
AlgorithmImage' :: Maybe Text -> Text -> AlgorithmImage

-- | Create a value of <a>AlgorithmImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AlgorithmImage'</a>, <a>algorithmImage_name</a> - The
--   name of the algorithm image.
--   
--   <a>$sel:dockerURI:AlgorithmImage'</a>, <a>algorithmImage_dockerURI</a>
--   - The URI of the Docker container for the algorithm image.
newAlgorithmImage :: Text -> AlgorithmImage

-- | When the solution performs AutoML (<tt>performAutoML</tt> is true in
--   CreateSolution), Amazon Personalize determines which recipe, from the
--   specified list, optimizes the given metric. Amazon Personalize then
--   uses that recipe for the solution.
--   
--   <i>See:</i> <a>newAutoMLConfig</a> smart constructor.
data AutoMLConfig
AutoMLConfig' :: Maybe [Text] -> Maybe Text -> AutoMLConfig

-- | Create a value of <a>AutoMLConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recipeList:AutoMLConfig'</a>, <a>autoMLConfig_recipeList</a> -
--   The list of candidate recipes.
--   
--   <a>$sel:metricName:AutoMLConfig'</a>, <a>autoMLConfig_metricName</a> -
--   The metric to optimize.
newAutoMLConfig :: AutoMLConfig

-- | When the solution performs AutoML (<tt>performAutoML</tt> is true in
--   CreateSolution), specifies the recipe that best optimized the
--   specified metric.
--   
--   <i>See:</i> <a>newAutoMLResult</a> smart constructor.
data AutoMLResult
AutoMLResult' :: Maybe Text -> AutoMLResult

-- | Create a value of <a>AutoMLResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bestRecipeArn:AutoMLResult'</a>,
--   <a>autoMLResult_bestRecipeArn</a> - The Amazon Resource Name (ARN) of
--   the best recipe.
newAutoMLResult :: AutoMLResult

-- | Contains information on a batch inference job.
--   
--   <i>See:</i> <a>newBatchInferenceJob</a> smart constructor.
data BatchInferenceJob
BatchInferenceJob' :: Maybe Text -> Maybe Text -> Maybe BatchInferenceJobOutput -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe BatchInferenceJobConfig -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe BatchInferenceJobInput -> BatchInferenceJob

-- | Create a value of <a>BatchInferenceJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_failureReason</a> - If the batch inference job
--   failed, the reason for the failure.
--   
--   <a>$sel:status:BatchInferenceJob'</a>, <a>batchInferenceJob_status</a>
--   - The status of the batch inference job. The status is one of the
--   following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
--   
--   <a>$sel:jobOutput:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_jobOutput</a> - The Amazon S3 bucket that
--   contains the output data generated by the batch inference job.
--   
--   <a>$sel:jobName:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_jobName</a> - The name of the batch inference
--   job.
--   
--   <a>$sel:lastUpdatedDateTime:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_lastUpdatedDateTime</a> - The time at which the
--   batch inference job was last updated.
--   
--   <a>$sel:numResults:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_numResults</a> - The number of recommendations
--   generated by the batch inference job. This number includes the error
--   messages generated for failed input records.
--   
--   <a>$sel:batchInferenceJobConfig:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_batchInferenceJobConfig</a> - A string to string
--   map of the configuration details of a batch inference job.
--   
--   <a>$sel:batchInferenceJobArn:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_batchInferenceJobArn</a> - The Amazon Resource
--   Name (ARN) of the batch inference job.
--   
--   <a>$sel:filterArn:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_filterArn</a> - The ARN of the filter used on the
--   batch inference job.
--   
--   <a>$sel:creationDateTime:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_creationDateTime</a> - The time at which the
--   batch inference job was created.
--   
--   <a>$sel:solutionVersionArn:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_solutionVersionArn</a> - The Amazon Resource Name
--   (ARN) of the solution version from which the batch inference job was
--   created.
--   
--   <a>$sel:roleArn:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_roleArn</a> - The ARN of the Amazon Identity and
--   Access Management (IAM) role that requested the batch inference job.
--   
--   <a>$sel:jobInput:BatchInferenceJob'</a>,
--   <a>batchInferenceJob_jobInput</a> - The Amazon S3 path that leads to
--   the input data used to generate the batch inference job.
newBatchInferenceJob :: BatchInferenceJob

-- | The configuration details of a batch inference job.
--   
--   <i>See:</i> <a>newBatchInferenceJobConfig</a> smart constructor.
data BatchInferenceJobConfig
BatchInferenceJobConfig' :: Maybe (HashMap Text Text) -> BatchInferenceJobConfig

-- | Create a value of <a>BatchInferenceJobConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:itemExplorationConfig:BatchInferenceJobConfig'</a>,
--   <a>batchInferenceJobConfig_itemExplorationConfig</a> - A string to
--   string map specifying the exploration configuration hyperparameters,
--   including <tt>explorationWeight</tt> and
--   <tt>explorationItemAgeCutOff</tt>, you want to use to configure the
--   amount of item exploration Amazon Personalize uses when recommending
--   items. See <a>User-Personalization</a>.
newBatchInferenceJobConfig :: BatchInferenceJobConfig

-- | The input configuration of a batch inference job.
--   
--   <i>See:</i> <a>newBatchInferenceJobInput</a> smart constructor.
data BatchInferenceJobInput
BatchInferenceJobInput' :: S3DataConfig -> BatchInferenceJobInput

-- | Create a value of <a>BatchInferenceJobInput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3DataSource:BatchInferenceJobInput'</a>,
--   <a>batchInferenceJobInput_s3DataSource</a> - The URI of the Amazon S3
--   location that contains your input data. The Amazon S3 bucket must be
--   in the same region as the API endpoint you are calling.
newBatchInferenceJobInput :: S3DataConfig -> BatchInferenceJobInput

-- | The output configuration parameters of a batch inference job.
--   
--   <i>See:</i> <a>newBatchInferenceJobOutput</a> smart constructor.
data BatchInferenceJobOutput
BatchInferenceJobOutput' :: S3DataConfig -> BatchInferenceJobOutput

-- | Create a value of <a>BatchInferenceJobOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3DataDestination:BatchInferenceJobOutput'</a>,
--   <a>batchInferenceJobOutput_s3DataDestination</a> - Information on the
--   Amazon S3 bucket in which the batch inference job's output is stored.
newBatchInferenceJobOutput :: S3DataConfig -> BatchInferenceJobOutput

-- | A truncated version of the BatchInferenceJob datatype. The
--   ListBatchInferenceJobs operation returns a list of batch inference job
--   summaries.
--   
--   <i>See:</i> <a>newBatchInferenceJobSummary</a> smart constructor.
data BatchInferenceJobSummary
BatchInferenceJobSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> BatchInferenceJobSummary

-- | Create a value of <a>BatchInferenceJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_failureReason</a> - If the batch inference
--   job failed, the reason for the failure.
--   
--   <a>$sel:status:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_status</a> - The status of the batch
--   inference job. The status is one of the following values:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>IN PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   </ul>
--   
--   <a>$sel:jobName:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_jobName</a> - The name of the batch
--   inference job.
--   
--   <a>$sel:lastUpdatedDateTime:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_lastUpdatedDateTime</a> - The time at
--   which the batch inference job was last updated.
--   
--   <a>$sel:batchInferenceJobArn:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_batchInferenceJobArn</a> - The Amazon
--   Resource Name (ARN) of the batch inference job.
--   
--   <a>$sel:creationDateTime:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_creationDateTime</a> - The time at which
--   the batch inference job was created.
--   
--   <a>$sel:solutionVersionArn:BatchInferenceJobSummary'</a>,
--   <a>batchInferenceJobSummary_solutionVersionArn</a> - The ARN of the
--   solution version used by the batch inference job.
newBatchInferenceJobSummary :: BatchInferenceJobSummary

-- | Describes a deployed solution version, otherwise known as a campaign.
--   For more information on campaigns, see CreateCampaign.
--   
--   <i>See:</i> <a>newCampaign</a> smart constructor.
data Campaign
Campaign' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe CampaignConfig -> Maybe CampaignUpdateSummary -> Maybe Text -> Maybe Natural -> Maybe POSIX -> Maybe Text -> Maybe Text -> Campaign

-- | Create a value of <a>Campaign</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:Campaign'</a>, <a>campaign_failureReason</a> -
--   If a campaign fails, the reason behind the failure.
--   
--   <a>$sel:status:Campaign'</a>, <a>campaign_status</a> - The status of
--   the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:Campaign'</a>,
--   <a>campaign_lastUpdatedDateTime</a> - The date and time (in Unix
--   format) that the campaign was last updated.
--   
--   <a>$sel:campaignConfig:Campaign'</a>, <a>campaign_campaignConfig</a> -
--   The configuration details of a campaign.
--   
--   <a>$sel:latestCampaignUpdate:Campaign'</a>,
--   <a>campaign_latestCampaignUpdate</a> - Undocumented member.
--   
--   <a>$sel:name:Campaign'</a>, <a>campaign_name</a> - The name of the
--   campaign.
--   
--   <a>$sel:minProvisionedTPS:Campaign'</a>,
--   <a>campaign_minProvisionedTPS</a> - Specifies the requested minimum
--   provisioned transactions (recommendations) per second.
--   
--   <a>$sel:creationDateTime:Campaign'</a>,
--   <a>campaign_creationDateTime</a> - The date and time (in Unix format)
--   that the campaign was created.
--   
--   <a>$sel:campaignArn:Campaign'</a>, <a>campaign_campaignArn</a> - The
--   Amazon Resource Name (ARN) of the campaign.
--   
--   <a>$sel:solutionVersionArn:Campaign'</a>,
--   <a>campaign_solutionVersionArn</a> - The Amazon Resource Name (ARN) of
--   a specific version of the solution.
newCampaign :: Campaign

-- | The configuration details of a campaign.
--   
--   <i>See:</i> <a>newCampaignConfig</a> smart constructor.
data CampaignConfig
CampaignConfig' :: Maybe (HashMap Text Text) -> CampaignConfig

-- | Create a value of <a>CampaignConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:itemExplorationConfig:CampaignConfig'</a>,
--   <a>campaignConfig_itemExplorationConfig</a> - A string to string map
--   specifying the exploration configuration hyperparameters, including
--   <tt>explorationWeight</tt> and <tt>explorationItemAgeCutOff</tt>, you
--   want to use to configure the amount of item exploration Amazon
--   Personalize uses when recommending items. Provide
--   <tt>itemExplorationConfig</tt> data only if your solution uses the
--   <a>User-Personalization</a> recipe.
newCampaignConfig :: CampaignConfig

-- | Provides a summary of the properties of a campaign. For a complete
--   listing, call the DescribeCampaign API.
--   
--   <i>See:</i> <a>newCampaignSummary</a> smart constructor.
data CampaignSummary
CampaignSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> CampaignSummary

-- | Create a value of <a>CampaignSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:CampaignSummary'</a>,
--   <a>campaignSummary_failureReason</a> - If a campaign fails, the reason
--   behind the failure.
--   
--   <a>$sel:status:CampaignSummary'</a>, <a>campaignSummary_status</a> -
--   The status of the campaign.
--   
--   A campaign can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:CampaignSummary'</a>,
--   <a>campaignSummary_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the campaign was last updated.
--   
--   <a>$sel:name:CampaignSummary'</a>, <a>campaignSummary_name</a> - The
--   name of the campaign.
--   
--   <a>$sel:creationDateTime:CampaignSummary'</a>,
--   <a>campaignSummary_creationDateTime</a> - The date and time (in Unix
--   time) that the campaign was created.
--   
--   <a>$sel:campaignArn:CampaignSummary'</a>,
--   <a>campaignSummary_campaignArn</a> - The Amazon Resource Name (ARN) of
--   the campaign.
newCampaignSummary :: CampaignSummary

-- | Provides a summary of the properties of a campaign update. For a
--   complete listing, call the DescribeCampaign API.
--   
--   <i>See:</i> <a>newCampaignUpdateSummary</a> smart constructor.
data CampaignUpdateSummary
CampaignUpdateSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe CampaignConfig -> Maybe Natural -> Maybe POSIX -> Maybe Text -> CampaignUpdateSummary

-- | Create a value of <a>CampaignUpdateSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_failureReason</a> - If a campaign update
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_status</a> - The status of the campaign
--   update.
--   
--   A campaign update can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the campaign update was last updated.
--   
--   <a>$sel:campaignConfig:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_campaignConfig</a> - Undocumented member.
--   
--   <a>$sel:minProvisionedTPS:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_minProvisionedTPS</a> - Specifies the
--   requested minimum provisioned transactions (recommendations) per
--   second that Amazon Personalize will support.
--   
--   <a>$sel:creationDateTime:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_creationDateTime</a> - The date and time (in
--   Unix time) that the campaign update was created.
--   
--   <a>$sel:solutionVersionArn:CampaignUpdateSummary'</a>,
--   <a>campaignUpdateSummary_solutionVersionArn</a> - The Amazon Resource
--   Name (ARN) of the deployed solution version.
newCampaignUpdateSummary :: CampaignUpdateSummary

-- | Provides the name and range of a categorical hyperparameter.
--   
--   <i>See:</i> <a>newCategoricalHyperParameterRange</a> smart
--   constructor.
data CategoricalHyperParameterRange
CategoricalHyperParameterRange' :: Maybe [Text] -> Maybe Text -> CategoricalHyperParameterRange

-- | Create a value of <a>CategoricalHyperParameterRange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:CategoricalHyperParameterRange'</a>,
--   <a>categoricalHyperParameterRange_values</a> - A list of the
--   categories for the hyperparameter.
--   
--   <a>$sel:name:CategoricalHyperParameterRange'</a>,
--   <a>categoricalHyperParameterRange_name</a> - The name of the
--   hyperparameter.
newCategoricalHyperParameterRange :: CategoricalHyperParameterRange

-- | Provides the name and range of a continuous hyperparameter.
--   
--   <i>See:</i> <a>newContinuousHyperParameterRange</a> smart constructor.
data ContinuousHyperParameterRange
ContinuousHyperParameterRange' :: Maybe Double -> Maybe Text -> Maybe Double -> ContinuousHyperParameterRange

-- | Create a value of <a>ContinuousHyperParameterRange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:ContinuousHyperParameterRange'</a>,
--   <a>continuousHyperParameterRange_maxValue</a> - The maximum allowable
--   value for the hyperparameter.
--   
--   <a>$sel:name:ContinuousHyperParameterRange'</a>,
--   <a>continuousHyperParameterRange_name</a> - The name of the
--   hyperparameter.
--   
--   <a>$sel:minValue:ContinuousHyperParameterRange'</a>,
--   <a>continuousHyperParameterRange_minValue</a> - The minimum allowable
--   value for the hyperparameter.
newContinuousHyperParameterRange :: ContinuousHyperParameterRange

-- | Describes the data source that contains the data to upload to a
--   dataset.
--   
--   <i>See:</i> <a>newDataSource</a> smart constructor.
data DataSource
DataSource' :: Maybe Text -> DataSource

-- | Create a value of <a>DataSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLocation:DataSource'</a>, <a>dataSource_dataLocation</a> -
--   The path to the Amazon S3 bucket where the data that you want to
--   upload to your dataset is stored. For example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
newDataSource :: DataSource

-- | Provides metadata for a dataset.
--   
--   <i>See:</i> <a>newDataset</a> smart constructor.
data Dataset
Dataset' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Dataset

-- | Create a value of <a>Dataset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Dataset'</a>, <a>dataset_status</a> - The status of the
--   dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:datasetArn:Dataset'</a>, <a>dataset_datasetArn</a> - The
--   Amazon Resource Name (ARN) of the dataset that you want metadata for.
--   
--   <a>$sel:lastUpdatedDateTime:Dataset'</a>,
--   <a>dataset_lastUpdatedDateTime</a> - A time stamp that shows when the
--   dataset was updated.
--   
--   <a>$sel:schemaArn:Dataset'</a>, <a>dataset_schemaArn</a> - The ARN of
--   the associated schema.
--   
--   <a>$sel:name:Dataset'</a>, <a>dataset_name</a> - The name of the
--   dataset.
--   
--   <a>$sel:datasetType:Dataset'</a>, <a>dataset_datasetType</a> - One of
--   the following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   </ul>
--   
--   <a>$sel:creationDateTime:Dataset'</a>, <a>dataset_creationDateTime</a>
--   - The creation date and time (in Unix time) of the dataset.
--   
--   <a>$sel:datasetGroupArn:Dataset'</a>, <a>dataset_datasetGroupArn</a> -
--   The Amazon Resource Name (ARN) of the dataset group.
newDataset :: Dataset

-- | Describes a job that exports a dataset to an Amazon S3 bucket. For
--   more information, see CreateDatasetExportJob.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <i>See:</i> <a>newDatasetExportJob</a> smart constructor.
data DatasetExportJob
DatasetExportJob' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DatasetExportJobOutput -> Maybe Text -> Maybe POSIX -> Maybe IngestionMode -> Maybe POSIX -> Maybe Text -> DatasetExportJob

-- | Create a value of <a>DatasetExportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetExportJob'</a>,
--   <a>datasetExportJob_failureReason</a> - If a dataset export job fails,
--   provides the reason why.
--   
--   <a>$sel:status:DatasetExportJob'</a>, <a>datasetExportJob_status</a> -
--   The status of the dataset export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:datasetExportJobArn:DatasetExportJob'</a>,
--   <a>datasetExportJob_datasetExportJobArn</a> - The Amazon Resource Name
--   (ARN) of the dataset export job.
--   
--   <a>$sel:datasetArn:DatasetExportJob'</a>,
--   <a>datasetExportJob_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the dataset to export.
--   
--   <a>$sel:jobOutput:DatasetExportJob'</a>,
--   <a>datasetExportJob_jobOutput</a> - The path to the Amazon S3 bucket
--   where the job's output is stored. For example:
--   
--   <pre>
--   s3://bucket-name/folder-name/
--   </pre>
--   
--   <a>$sel:jobName:DatasetExportJob'</a>, <a>datasetExportJob_jobName</a>
--   - The name of the export job.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetExportJob'</a>,
--   <a>datasetExportJob_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) the status of the dataset export job was last updated.
--   
--   <a>$sel:ingestionMode:DatasetExportJob'</a>,
--   <a>datasetExportJob_ingestionMode</a> - The data to export, based on
--   how you imported the data. You can choose to export <tt>BULK</tt> data
--   that you imported using a dataset import job, <tt>PUT</tt> data that
--   you imported incrementally (using the console, PutEvents, PutUsers and
--   PutItems operations), or <tt>ALL</tt> for both types. The default
--   value is <tt>PUT</tt>.
--   
--   <a>$sel:creationDateTime:DatasetExportJob'</a>,
--   <a>datasetExportJob_creationDateTime</a> - The creation date and time
--   (in Unix time) of the dataset export job.
--   
--   <a>$sel:roleArn:DatasetExportJob'</a>, <a>datasetExportJob_roleArn</a>
--   - The Amazon Resource Name (ARN) of the IAM service role that has
--   permissions to add data to your output Amazon S3 bucket.
newDatasetExportJob :: DatasetExportJob

-- | The output configuration parameters of a dataset export job.
--   
--   <i>See:</i> <a>newDatasetExportJobOutput</a> smart constructor.
data DatasetExportJobOutput
DatasetExportJobOutput' :: S3DataConfig -> DatasetExportJobOutput

-- | Create a value of <a>DatasetExportJobOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3DataDestination:DatasetExportJobOutput'</a>,
--   <a>datasetExportJobOutput_s3DataDestination</a> - Undocumented member.
newDatasetExportJobOutput :: S3DataConfig -> DatasetExportJobOutput

-- | Provides a summary of the properties of a dataset export job. For a
--   complete listing, call the DescribeDatasetExportJob API.
--   
--   <i>See:</i> <a>newDatasetExportJobSummary</a> smart constructor.
data DatasetExportJobSummary
DatasetExportJobSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> DatasetExportJobSummary

-- | Create a value of <a>DatasetExportJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_failureReason</a> - If a dataset export job
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_status</a> - The status of the dataset
--   export job.
--   
--   A dataset export job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:datasetExportJobArn:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_datasetExportJobArn</a> - The Amazon
--   Resource Name (ARN) of the dataset export job.
--   
--   <a>$sel:jobName:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_jobName</a> - The name of the dataset
--   export job.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the dataset export job status was last updated.
--   
--   <a>$sel:creationDateTime:DatasetExportJobSummary'</a>,
--   <a>datasetExportJobSummary_creationDateTime</a> - The date and time
--   (in Unix time) that the dataset export job was created.
newDatasetExportJobSummary :: DatasetExportJobSummary

-- | A dataset group is a collection of related datasets (Interactions,
--   User, and Item). You create a dataset group by calling
--   CreateDatasetGroup. You then create a dataset and add it to a dataset
--   group by calling CreateDataset. The dataset group is used to create
--   and train a solution by calling CreateSolution. A dataset group can
--   contain only one of each type of dataset.
--   
--   You can specify an Key Management Service (KMS) key to encrypt the
--   datasets in the group.
--   
--   <i>See:</i> <a>newDatasetGroup</a> smart constructor.
data DatasetGroup
DatasetGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> DatasetGroup

-- | Create a value of <a>DatasetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetGroup'</a>,
--   <a>datasetGroup_failureReason</a> - If creating a dataset group fails,
--   provides the reason why.
--   
--   <a>$sel:status:DatasetGroup'</a>, <a>datasetGroup_status</a> - The
--   current status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
--   
--   <a>$sel:kmsKeyArn:DatasetGroup'</a>, <a>datasetGroup_kmsKeyArn</a> -
--   The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   used to encrypt the datasets.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetGroup'</a>,
--   <a>datasetGroup_lastUpdatedDateTime</a> - The last update date and
--   time (in Unix time) of the dataset group.
--   
--   <a>$sel:name:DatasetGroup'</a>, <a>datasetGroup_name</a> - The name of
--   the dataset group.
--   
--   <a>$sel:creationDateTime:DatasetGroup'</a>,
--   <a>datasetGroup_creationDateTime</a> - The creation date and time (in
--   Unix time) of the dataset group.
--   
--   <a>$sel:datasetGroupArn:DatasetGroup'</a>,
--   <a>datasetGroup_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group.
--   
--   <a>$sel:roleArn:DatasetGroup'</a>, <a>datasetGroup_roleArn</a> - The
--   ARN of the IAM role that has permissions to create the dataset group.
newDatasetGroup :: DatasetGroup

-- | Provides a summary of the properties of a dataset group. For a
--   complete listing, call the DescribeDatasetGroup API.
--   
--   <i>See:</i> <a>newDatasetGroupSummary</a> smart constructor.
data DatasetGroupSummary
DatasetGroupSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> DatasetGroupSummary

-- | Create a value of <a>DatasetGroupSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_failureReason</a> - If creating a dataset group
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_status</a> - The status of the dataset group.
--   
--   A dataset group can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the dataset group was last updated.
--   
--   <a>$sel:name:DatasetGroupSummary'</a>, <a>datasetGroupSummary_name</a>
--   - The name of the dataset group.
--   
--   <a>$sel:creationDateTime:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_creationDateTime</a> - The date and time (in
--   Unix time) that the dataset group was created.
--   
--   <a>$sel:datasetGroupArn:DatasetGroupSummary'</a>,
--   <a>datasetGroupSummary_datasetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the dataset group.
newDatasetGroupSummary :: DatasetGroupSummary

-- | Describes a job that imports training data from a data source (Amazon
--   S3 bucket) to an Amazon Personalize dataset. For more information, see
--   CreateDatasetImportJob.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <i>See:</i> <a>newDatasetImportJob</a> smart constructor.
data DatasetImportJob
DatasetImportJob' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe DataSource -> Maybe POSIX -> Maybe Text -> DatasetImportJob

-- | Create a value of <a>DatasetImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetImportJob'</a>,
--   <a>datasetImportJob_failureReason</a> - If a dataset import job fails,
--   provides the reason why.
--   
--   <a>$sel:status:DatasetImportJob'</a>, <a>datasetImportJob_status</a> -
--   The status of the dataset import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:datasetArn:DatasetImportJob'</a>,
--   <a>datasetImportJob_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the dataset that receives the imported data.
--   
--   <a>$sel:jobName:DatasetImportJob'</a>, <a>datasetImportJob_jobName</a>
--   - The name of the import job.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetImportJob'</a>,
--   <a>datasetImportJob_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) the dataset was last updated.
--   
--   <a>$sel:datasetImportJobArn:DatasetImportJob'</a>,
--   <a>datasetImportJob_datasetImportJobArn</a> - The ARN of the dataset
--   import job.
--   
--   <a>$sel:dataSource:DatasetImportJob'</a>,
--   <a>datasetImportJob_dataSource</a> - The Amazon S3 bucket that
--   contains the training data to import.
--   
--   <a>$sel:creationDateTime:DatasetImportJob'</a>,
--   <a>datasetImportJob_creationDateTime</a> - The creation date and time
--   (in Unix time) of the dataset import job.
--   
--   <a>$sel:roleArn:DatasetImportJob'</a>, <a>datasetImportJob_roleArn</a>
--   - The ARN of the IAM role that has permissions to read from the Amazon
--   S3 data source.
newDatasetImportJob :: DatasetImportJob

-- | Provides a summary of the properties of a dataset import job. For a
--   complete listing, call the DescribeDatasetImportJob API.
--   
--   <i>See:</i> <a>newDatasetImportJobSummary</a> smart constructor.
data DatasetImportJobSummary
DatasetImportJobSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> DatasetImportJobSummary

-- | Create a value of <a>DatasetImportJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_failureReason</a> - If a dataset import job
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_status</a> - The status of the dataset
--   import job.
--   
--   A dataset import job can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:jobName:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_jobName</a> - The name of the dataset
--   import job.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the dataset import job status was last updated.
--   
--   <a>$sel:datasetImportJobArn:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_datasetImportJobArn</a> - The Amazon
--   Resource Name (ARN) of the dataset import job.
--   
--   <a>$sel:creationDateTime:DatasetImportJobSummary'</a>,
--   <a>datasetImportJobSummary_creationDateTime</a> - The date and time
--   (in Unix time) that the dataset import job was created.
newDatasetImportJobSummary :: DatasetImportJobSummary

-- | Describes the schema for a dataset. For more information on schemas,
--   see CreateSchema.
--   
--   <i>See:</i> <a>newDatasetSchema</a> smart constructor.
data DatasetSchema
DatasetSchema' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> DatasetSchema

-- | Create a value of <a>DatasetSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedDateTime:DatasetSchema'</a>,
--   <a>datasetSchema_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the schema was last updated.
--   
--   <a>$sel:schema:DatasetSchema'</a>, <a>datasetSchema_schema</a> - The
--   schema.
--   
--   <a>$sel:schemaArn:DatasetSchema'</a>, <a>datasetSchema_schemaArn</a> -
--   The Amazon Resource Name (ARN) of the schema.
--   
--   <a>$sel:name:DatasetSchema'</a>, <a>datasetSchema_name</a> - The name
--   of the schema.
--   
--   <a>$sel:creationDateTime:DatasetSchema'</a>,
--   <a>datasetSchema_creationDateTime</a> - The date and time (in Unix
--   time) that the schema was created.
newDatasetSchema :: DatasetSchema

-- | Provides a summary of the properties of a dataset schema. For a
--   complete listing, call the DescribeSchema API.
--   
--   <i>See:</i> <a>newDatasetSchemaSummary</a> smart constructor.
data DatasetSchemaSummary
DatasetSchemaSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> DatasetSchemaSummary

-- | Create a value of <a>DatasetSchemaSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedDateTime:DatasetSchemaSummary'</a>,
--   <a>datasetSchemaSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the schema was last updated.
--   
--   <a>$sel:schemaArn:DatasetSchemaSummary'</a>,
--   <a>datasetSchemaSummary_schemaArn</a> - The Amazon Resource Name (ARN)
--   of the schema.
--   
--   <a>$sel:name:DatasetSchemaSummary'</a>,
--   <a>datasetSchemaSummary_name</a> - The name of the schema.
--   
--   <a>$sel:creationDateTime:DatasetSchemaSummary'</a>,
--   <a>datasetSchemaSummary_creationDateTime</a> - The date and time (in
--   Unix time) that the schema was created.
newDatasetSchemaSummary :: DatasetSchemaSummary

-- | Provides a summary of the properties of a dataset. For a complete
--   listing, call the DescribeDataset API.
--   
--   <i>See:</i> <a>newDatasetSummary</a> smart constructor.
data DatasetSummary
DatasetSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> DatasetSummary

-- | Create a value of <a>DatasetSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DatasetSummary'</a>, <a>datasetSummary_status</a> - The
--   status of the dataset.
--   
--   A dataset can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:datasetArn:DatasetSummary'</a>,
--   <a>datasetSummary_datasetArn</a> - The Amazon Resource Name (ARN) of
--   the dataset.
--   
--   <a>$sel:lastUpdatedDateTime:DatasetSummary'</a>,
--   <a>datasetSummary_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the dataset was last updated.
--   
--   <a>$sel:name:DatasetSummary'</a>, <a>datasetSummary_name</a> - The
--   name of the dataset.
--   
--   <a>$sel:datasetType:DatasetSummary'</a>,
--   <a>datasetSummary_datasetType</a> - The dataset type. One of the
--   following values:
--   
--   <ul>
--   <li>Interactions</li>
--   <li>Items</li>
--   <li>Users</li>
--   <li>Event-Interactions</li>
--   </ul>
--   
--   <a>$sel:creationDateTime:DatasetSummary'</a>,
--   <a>datasetSummary_creationDateTime</a> - The date and time (in Unix
--   time) that the dataset was created.
newDatasetSummary :: DatasetSummary

-- | Provides the name and default range of a categorical hyperparameter
--   and whether the hyperparameter is tunable. A tunable hyperparameter
--   can have its value determined during hyperparameter optimization
--   (HPO).
--   
--   <i>See:</i> <a>newDefaultCategoricalHyperParameterRange</a> smart
--   constructor.
data DefaultCategoricalHyperParameterRange
DefaultCategoricalHyperParameterRange' :: Maybe Bool -> Maybe [Text] -> Maybe Text -> DefaultCategoricalHyperParameterRange

-- | Create a value of <a>DefaultCategoricalHyperParameterRange</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isTunable:DefaultCategoricalHyperParameterRange'</a>,
--   <a>defaultCategoricalHyperParameterRange_isTunable</a> - Whether the
--   hyperparameter is tunable.
--   
--   <a>$sel:values:DefaultCategoricalHyperParameterRange'</a>,
--   <a>defaultCategoricalHyperParameterRange_values</a> - A list of the
--   categories for the hyperparameter.
--   
--   <a>$sel:name:DefaultCategoricalHyperParameterRange'</a>,
--   <a>defaultCategoricalHyperParameterRange_name</a> - The name of the
--   hyperparameter.
newDefaultCategoricalHyperParameterRange :: DefaultCategoricalHyperParameterRange

-- | Provides the name and default range of a continuous hyperparameter and
--   whether the hyperparameter is tunable. A tunable hyperparameter can
--   have its value determined during hyperparameter optimization (HPO).
--   
--   <i>See:</i> <a>newDefaultContinuousHyperParameterRange</a> smart
--   constructor.
data DefaultContinuousHyperParameterRange
DefaultContinuousHyperParameterRange' :: Maybe Double -> Maybe Bool -> Maybe Text -> Maybe Double -> DefaultContinuousHyperParameterRange

-- | Create a value of <a>DefaultContinuousHyperParameterRange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:DefaultContinuousHyperParameterRange'</a>,
--   <a>defaultContinuousHyperParameterRange_maxValue</a> - The maximum
--   allowable value for the hyperparameter.
--   
--   <a>$sel:isTunable:DefaultContinuousHyperParameterRange'</a>,
--   <a>defaultContinuousHyperParameterRange_isTunable</a> - Whether the
--   hyperparameter is tunable.
--   
--   <a>$sel:name:DefaultContinuousHyperParameterRange'</a>,
--   <a>defaultContinuousHyperParameterRange_name</a> - The name of the
--   hyperparameter.
--   
--   <a>$sel:minValue:DefaultContinuousHyperParameterRange'</a>,
--   <a>defaultContinuousHyperParameterRange_minValue</a> - The minimum
--   allowable value for the hyperparameter.
newDefaultContinuousHyperParameterRange :: DefaultContinuousHyperParameterRange

-- | Specifies the hyperparameters and their default ranges.
--   Hyperparameters can be categorical, continuous, or integer-valued.
--   
--   <i>See:</i> <a>newDefaultHyperParameterRanges</a> smart constructor.
data DefaultHyperParameterRanges
DefaultHyperParameterRanges' :: Maybe [DefaultIntegerHyperParameterRange] -> Maybe [DefaultCategoricalHyperParameterRange] -> Maybe [DefaultContinuousHyperParameterRange] -> DefaultHyperParameterRanges

-- | Create a value of <a>DefaultHyperParameterRanges</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerHyperParameterRanges:DefaultHyperParameterRanges'</a>,
--   <a>defaultHyperParameterRanges_integerHyperParameterRanges</a> - The
--   integer-valued hyperparameters and their default ranges.
--   
--   
--   <a>$sel:categoricalHyperParameterRanges:DefaultHyperParameterRanges'</a>,
--   <a>defaultHyperParameterRanges_categoricalHyperParameterRanges</a> -
--   The categorical hyperparameters and their default ranges.
--   
--   
--   <a>$sel:continuousHyperParameterRanges:DefaultHyperParameterRanges'</a>,
--   <a>defaultHyperParameterRanges_continuousHyperParameterRanges</a> -
--   The continuous hyperparameters and their default ranges.
newDefaultHyperParameterRanges :: DefaultHyperParameterRanges

-- | Provides the name and default range of a integer-valued hyperparameter
--   and whether the hyperparameter is tunable. A tunable hyperparameter
--   can have its value determined during hyperparameter optimization
--   (HPO).
--   
--   <i>See:</i> <a>newDefaultIntegerHyperParameterRange</a> smart
--   constructor.
data DefaultIntegerHyperParameterRange
DefaultIntegerHyperParameterRange' :: Maybe Int -> Maybe Bool -> Maybe Text -> Maybe Int -> DefaultIntegerHyperParameterRange

-- | Create a value of <a>DefaultIntegerHyperParameterRange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:DefaultIntegerHyperParameterRange'</a>,
--   <a>defaultIntegerHyperParameterRange_maxValue</a> - The maximum
--   allowable value for the hyperparameter.
--   
--   <a>$sel:isTunable:DefaultIntegerHyperParameterRange'</a>,
--   <a>defaultIntegerHyperParameterRange_isTunable</a> - Indicates whether
--   the hyperparameter is tunable.
--   
--   <a>$sel:name:DefaultIntegerHyperParameterRange'</a>,
--   <a>defaultIntegerHyperParameterRange_name</a> - The name of the
--   hyperparameter.
--   
--   <a>$sel:minValue:DefaultIntegerHyperParameterRange'</a>,
--   <a>defaultIntegerHyperParameterRange_minValue</a> - The minimum
--   allowable value for the hyperparameter.
newDefaultIntegerHyperParameterRange :: DefaultIntegerHyperParameterRange

-- | Provides information about an event tracker.
--   
--   <i>See:</i> <a>newEventTracker</a> smart constructor.
data EventTracker
EventTracker' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> EventTracker

-- | Create a value of <a>EventTracker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:EventTracker'</a>, <a>eventTracker_status</a> - The
--   status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:trackingId:EventTracker'</a>, <a>eventTracker_trackingId</a> -
--   The ID of the event tracker. Include this ID in requests to the
--   <a>PutEvents</a> API.
--   
--   <a>$sel:lastUpdatedDateTime:EventTracker'</a>,
--   <a>eventTracker_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the event tracker was last updated.
--   
--   <a>$sel:accountId:EventTracker'</a>, <a>eventTracker_accountId</a> -
--   The Amazon Web Services account that owns the event tracker.
--   
--   <a>$sel:name:EventTracker'</a>, <a>eventTracker_name</a> - The name of
--   the event tracker.
--   
--   <a>$sel:creationDateTime:EventTracker'</a>,
--   <a>eventTracker_creationDateTime</a> - The date and time (in Unix
--   format) that the event tracker was created.
--   
--   <a>$sel:datasetGroupArn:EventTracker'</a>,
--   <a>eventTracker_datasetGroupArn</a> - The Amazon Resource Name (ARN)
--   of the dataset group that receives the event data.
--   
--   <a>$sel:eventTrackerArn:EventTracker'</a>,
--   <a>eventTracker_eventTrackerArn</a> - The ARN of the event tracker.
newEventTracker :: EventTracker

-- | Provides a summary of the properties of an event tracker. For a
--   complete listing, call the DescribeEventTracker API.
--   
--   <i>See:</i> <a>newEventTrackerSummary</a> smart constructor.
data EventTrackerSummary
EventTrackerSummary' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> EventTrackerSummary

-- | Create a value of <a>EventTrackerSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:EventTrackerSummary'</a>,
--   <a>eventTrackerSummary_status</a> - The status of the event tracker.
--   
--   An event tracker can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:EventTrackerSummary'</a>,
--   <a>eventTrackerSummary_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the event tracker was last updated.
--   
--   <a>$sel:name:EventTrackerSummary'</a>, <a>eventTrackerSummary_name</a>
--   - The name of the event tracker.
--   
--   <a>$sel:creationDateTime:EventTrackerSummary'</a>,
--   <a>eventTrackerSummary_creationDateTime</a> - The date and time (in
--   Unix time) that the event tracker was created.
--   
--   <a>$sel:eventTrackerArn:EventTrackerSummary'</a>,
--   <a>eventTrackerSummary_eventTrackerArn</a> - The Amazon Resource Name
--   (ARN) of the event tracker.
newEventTrackerSummary :: EventTrackerSummary

-- | Provides feature transformation information. Feature transformation is
--   the process of modifying raw input data into a form more suitable for
--   model training.
--   
--   <i>See:</i> <a>newFeatureTransformation</a> smart constructor.
data FeatureTransformation
FeatureTransformation' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe (HashMap Text Text) -> FeatureTransformation

-- | Create a value of <a>FeatureTransformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:FeatureTransformation'</a>,
--   <a>featureTransformation_status</a> - The status of the feature
--   transformation.
--   
--   A feature transformation can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:featureTransformationArn:FeatureTransformation'</a>,
--   <a>featureTransformation_featureTransformationArn</a> - The Amazon
--   Resource Name (ARN) of the FeatureTransformation object.
--   
--   <a>$sel:lastUpdatedDateTime:FeatureTransformation'</a>,
--   <a>featureTransformation_lastUpdatedDateTime</a> - The last update
--   date and time (in Unix time) of the feature transformation.
--   
--   <a>$sel:name:FeatureTransformation'</a>,
--   <a>featureTransformation_name</a> - The name of the feature
--   transformation.
--   
--   <a>$sel:creationDateTime:FeatureTransformation'</a>,
--   <a>featureTransformation_creationDateTime</a> - The creation date and
--   time (in Unix time) of the feature transformation.
--   
--   <a>$sel:defaultParameters:FeatureTransformation'</a>,
--   <a>featureTransformation_defaultParameters</a> - Provides the default
--   parameters for feature transformation.
newFeatureTransformation :: FeatureTransformation

-- | Contains information on a recommendation filter, including its ARN,
--   status, and filter expression.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Filter

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:Filter'</a>, <a>filter_failureReason</a> - If
--   the filter failed, the reason for its failure.
--   
--   <a>$sel:status:Filter'</a>, <a>filter_status</a> - The status of the
--   filter.
--   
--   <a>$sel:filterExpression:Filter'</a>, <a>filter_filterExpression</a> -
--   Specifies the type of item interactions to filter out of
--   recommendation results. The filter expression must follow specific
--   format rules. For information about filter expression structure and
--   syntax, see filter-expressions.
--   
--   <a>$sel:lastUpdatedDateTime:Filter'</a>,
--   <a>filter_lastUpdatedDateTime</a> - The time at which the filter was
--   last updated.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
--   
--   <a>$sel:filterArn:Filter'</a>, <a>filter_filterArn</a> - The ARN of
--   the filter.
--   
--   <a>$sel:creationDateTime:Filter'</a>, <a>filter_creationDateTime</a> -
--   The time at which the filter was created.
--   
--   <a>$sel:datasetGroupArn:Filter'</a>, <a>filter_datasetGroupArn</a> -
--   The ARN of the dataset group to which the filter belongs.
newFilter :: Filter

-- | A short summary of a filter's attributes.
--   
--   <i>See:</i> <a>newFilterSummary</a> smart constructor.
data FilterSummary
FilterSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> FilterSummary

-- | Create a value of <a>FilterSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:FilterSummary'</a>,
--   <a>filterSummary_failureReason</a> - If the filter failed, the reason
--   for the failure.
--   
--   <a>$sel:status:FilterSummary'</a>, <a>filterSummary_status</a> - The
--   status of the filter.
--   
--   <a>$sel:lastUpdatedDateTime:FilterSummary'</a>,
--   <a>filterSummary_lastUpdatedDateTime</a> - The time at which the
--   filter was last updated.
--   
--   <a>$sel:name:FilterSummary'</a>, <a>filterSummary_name</a> - The name
--   of the filter.
--   
--   <a>$sel:filterArn:FilterSummary'</a>, <a>filterSummary_filterArn</a> -
--   The ARN of the filter.
--   
--   <a>$sel:creationDateTime:FilterSummary'</a>,
--   <a>filterSummary_creationDateTime</a> - The time at which the filter
--   was created.
--   
--   <a>$sel:datasetGroupArn:FilterSummary'</a>,
--   <a>filterSummary_datasetGroupArn</a> - The ARN of the dataset group to
--   which the filter belongs.
newFilterSummary :: FilterSummary

-- | Describes the properties for hyperparameter optimization (HPO).
--   
--   <i>See:</i> <a>newHPOConfig</a> smart constructor.
data HPOConfig
HPOConfig' :: Maybe HyperParameterRanges -> Maybe HPOResourceConfig -> Maybe HPOObjective -> HPOConfig

-- | Create a value of <a>HPOConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithmHyperParameterRanges:HPOConfig'</a>,
--   <a>hPOConfig_algorithmHyperParameterRanges</a> - The hyperparameters
--   and their allowable ranges.
--   
--   <a>$sel:hpoResourceConfig:HPOConfig'</a>,
--   <a>hPOConfig_hpoResourceConfig</a> - Describes the resource
--   configuration for HPO.
--   
--   <a>$sel:hpoObjective:HPOConfig'</a>, <a>hPOConfig_hpoObjective</a> -
--   The metric to optimize during HPO.
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
newHPOConfig :: HPOConfig

-- | The metric to optimize during hyperparameter optimization (HPO).
--   
--   Amazon Personalize doesn't support configuring the
--   <tt>hpoObjective</tt> at this time.
--   
--   <i>See:</i> <a>newHPOObjective</a> smart constructor.
data HPOObjective
HPOObjective' :: Maybe Text -> Maybe Text -> Maybe Text -> HPOObjective

-- | Create a value of <a>HPOObjective</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricName:HPOObjective'</a>, <a>hPOObjective_metricName</a> -
--   The name of the metric.
--   
--   <a>$sel:type':HPOObjective'</a>, <a>hPOObjective_type</a> - The type
--   of the metric. Valid values are <tt>Maximize</tt> and
--   <tt>Minimize</tt>.
--   
--   <a>$sel:metricRegex:HPOObjective'</a>, <a>hPOObjective_metricRegex</a>
--   - A regular expression for finding the metric in the training job
--   logs.
newHPOObjective :: HPOObjective

-- | Describes the resource configuration for hyperparameter optimization
--   (HPO).
--   
--   <i>See:</i> <a>newHPOResourceConfig</a> smart constructor.
data HPOResourceConfig
HPOResourceConfig' :: Maybe Text -> Maybe Text -> HPOResourceConfig

-- | Create a value of <a>HPOResourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxNumberOfTrainingJobs:HPOResourceConfig'</a>,
--   <a>hPOResourceConfig_maxNumberOfTrainingJobs</a> - The maximum number
--   of training jobs when you create a solution version. The maximum value
--   for <tt>maxNumberOfTrainingJobs</tt> is <tt>40</tt>.
--   
--   <a>$sel:maxParallelTrainingJobs:HPOResourceConfig'</a>,
--   <a>hPOResourceConfig_maxParallelTrainingJobs</a> - The maximum number
--   of parallel training jobs when you create a solution version. The
--   maximum value for <tt>maxParallelTrainingJobs</tt> is <tt>10</tt>.
newHPOResourceConfig :: HPOResourceConfig

-- | Specifies the hyperparameters and their ranges. Hyperparameters can be
--   categorical, continuous, or integer-valued.
--   
--   <i>See:</i> <a>newHyperParameterRanges</a> smart constructor.
data HyperParameterRanges
HyperParameterRanges' :: Maybe [IntegerHyperParameterRange] -> Maybe [CategoricalHyperParameterRange] -> Maybe [ContinuousHyperParameterRange] -> HyperParameterRanges

-- | Create a value of <a>HyperParameterRanges</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerHyperParameterRanges:HyperParameterRanges'</a>,
--   <a>hyperParameterRanges_integerHyperParameterRanges</a> - The
--   integer-valued hyperparameters and their ranges.
--   
--   <a>$sel:categoricalHyperParameterRanges:HyperParameterRanges'</a>,
--   <a>hyperParameterRanges_categoricalHyperParameterRanges</a> - The
--   categorical hyperparameters and their ranges.
--   
--   <a>$sel:continuousHyperParameterRanges:HyperParameterRanges'</a>,
--   <a>hyperParameterRanges_continuousHyperParameterRanges</a> - The
--   continuous hyperparameters and their ranges.
newHyperParameterRanges :: HyperParameterRanges

-- | Provides the name and range of an integer-valued hyperparameter.
--   
--   <i>See:</i> <a>newIntegerHyperParameterRange</a> smart constructor.
data IntegerHyperParameterRange
IntegerHyperParameterRange' :: Maybe Int -> Maybe Text -> Maybe Int -> IntegerHyperParameterRange

-- | Create a value of <a>IntegerHyperParameterRange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:IntegerHyperParameterRange'</a>,
--   <a>integerHyperParameterRange_maxValue</a> - The maximum allowable
--   value for the hyperparameter.
--   
--   <a>$sel:name:IntegerHyperParameterRange'</a>,
--   <a>integerHyperParameterRange_name</a> - The name of the
--   hyperparameter.
--   
--   <a>$sel:minValue:IntegerHyperParameterRange'</a>,
--   <a>integerHyperParameterRange_minValue</a> - The minimum allowable
--   value for the hyperparameter.
newIntegerHyperParameterRange :: IntegerHyperParameterRange

-- | Describes the additional objective for the solution, such as
--   maximizing streaming minutes or increasing revenue. For more
--   information see <a>Optimizing a solution</a>.
--   
--   <i>See:</i> <a>newOptimizationObjective</a> smart constructor.
data OptimizationObjective
OptimizationObjective' :: Maybe Text -> Maybe ObjectiveSensitivity -> OptimizationObjective

-- | Create a value of <a>OptimizationObjective</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:itemAttribute:OptimizationObjective'</a>,
--   <a>optimizationObjective_itemAttribute</a> - The numerical metadata
--   column in an Items dataset related to the optimization objective. For
--   example, VIDEO_LENGTH (to maximize streaming minutes), or PRICE (to
--   maximize revenue).
--   
--   <a>$sel:objectiveSensitivity:OptimizationObjective'</a>,
--   <a>optimizationObjective_objectiveSensitivity</a> - Specifies how
--   Amazon Personalize balances the importance of your optimization
--   objective versus relevance.
newOptimizationObjective :: OptimizationObjective

-- | Provides information about a recipe. Each recipe provides an algorithm
--   that Amazon Personalize uses in model training when you use the
--   CreateSolution operation.
--   
--   <i>See:</i> <a>newRecipe</a> smart constructor.
data Recipe
Recipe' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Recipe

-- | Create a value of <a>Recipe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Recipe'</a>, <a>recipe_status</a> - The status of the
--   recipe.
--   
--   <a>$sel:algorithmArn:Recipe'</a>, <a>recipe_algorithmArn</a> - The
--   Amazon Resource Name (ARN) of the algorithm that Amazon Personalize
--   uses to train the model.
--   
--   <a>$sel:recipeArn:Recipe'</a>, <a>recipe_recipeArn</a> - The Amazon
--   Resource Name (ARN) of the recipe.
--   
--   <a>$sel:featureTransformationArn:Recipe'</a>,
--   <a>recipe_featureTransformationArn</a> - The ARN of the
--   FeatureTransformation object.
--   
--   <a>$sel:lastUpdatedDateTime:Recipe'</a>,
--   <a>recipe_lastUpdatedDateTime</a> - The date and time (in Unix format)
--   that the recipe was last updated.
--   
--   <a>$sel:name:Recipe'</a>, <a>recipe_name</a> - The name of the recipe.
--   
--   <a>$sel:creationDateTime:Recipe'</a>, <a>recipe_creationDateTime</a> -
--   The date and time (in Unix format) that the recipe was created.
--   
--   <a>$sel:recipeType:Recipe'</a>, <a>recipe_recipeType</a> - One of the
--   following values:
--   
--   <ul>
--   <li>PERSONALIZED_RANKING</li>
--   <li>RELATED_ITEMS</li>
--   <li>USER_PERSONALIZATION</li>
--   </ul>
--   
--   <a>$sel:description:Recipe'</a>, <a>recipe_description</a> - The
--   description of the recipe.
newRecipe :: Recipe

-- | Provides a summary of the properties of a recipe. For a complete
--   listing, call the DescribeRecipe API.
--   
--   <i>See:</i> <a>newRecipeSummary</a> smart constructor.
data RecipeSummary
RecipeSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> RecipeSummary

-- | Create a value of <a>RecipeSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RecipeSummary'</a>, <a>recipeSummary_status</a> - The
--   status of the recipe.
--   
--   <a>$sel:recipeArn:RecipeSummary'</a>, <a>recipeSummary_recipeArn</a> -
--   The Amazon Resource Name (ARN) of the recipe.
--   
--   <a>$sel:lastUpdatedDateTime:RecipeSummary'</a>,
--   <a>recipeSummary_lastUpdatedDateTime</a> - The date and time (in Unix
--   time) that the recipe was last updated.
--   
--   <a>$sel:name:RecipeSummary'</a>, <a>recipeSummary_name</a> - The name
--   of the recipe.
--   
--   <a>$sel:creationDateTime:RecipeSummary'</a>,
--   <a>recipeSummary_creationDateTime</a> - The date and time (in Unix
--   time) that the recipe was created.
newRecipeSummary :: RecipeSummary

-- | The configuration details of an Amazon S3 input or output bucket.
--   
--   <i>See:</i> <a>newS3DataConfig</a> smart constructor.
data S3DataConfig
S3DataConfig' :: Maybe Text -> Text -> S3DataConfig

-- | Create a value of <a>S3DataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:S3DataConfig'</a>, <a>s3DataConfig_kmsKeyArn</a> -
--   The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   that Amazon Personalize uses to encrypt or decrypt the input and
--   output files of a batch inference job.
--   
--   <a>$sel:path:S3DataConfig'</a>, <a>s3DataConfig_path</a> - The file
--   path of the Amazon S3 bucket.
newS3DataConfig :: Text -> S3DataConfig

-- | An object that provides information about a solution. A solution is a
--   trained model that can be deployed as a campaign.
--   
--   <i>See:</i> <a>newSolution</a> smart constructor.
data Solution
Solution' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe AutoMLResult -> Maybe POSIX -> Maybe Text -> Maybe SolutionVersionSummary -> Maybe SolutionConfig -> Maybe Bool -> Solution

-- | Create a value of <a>Solution</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:Solution'</a>, <a>solution_solutionArn</a> - The
--   ARN of the solution.
--   
--   <a>$sel:status:Solution'</a>, <a>solution_status</a> - The status of
--   the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:performAutoML:Solution'</a>, <a>solution_performAutoML</a> -
--   When true, Amazon Personalize performs a search for the best
--   USER_PERSONALIZATION recipe from the list specified in the solution
--   configuration (<tt>recipeArn</tt> must not be specified). When false
--   (the default), Amazon Personalize uses <tt>recipeArn</tt> for
--   training.
--   
--   <a>$sel:recipeArn:Solution'</a>, <a>solution_recipeArn</a> - The ARN
--   of the recipe used to create the solution.
--   
--   <a>$sel:lastUpdatedDateTime:Solution'</a>,
--   <a>solution_lastUpdatedDateTime</a> - The date and time (in Unix time)
--   that the solution was last updated.
--   
--   <a>$sel:eventType:Solution'</a>, <a>solution_eventType</a> - The event
--   type (for example, 'click' or 'like') that is used for training the
--   model. If no <tt>eventType</tt> is provided, Amazon Personalize uses
--   all interactions for training with equal weight regardless of type.
--   
--   <a>$sel:name:Solution'</a>, <a>solution_name</a> - The name of the
--   solution.
--   
--   <a>$sel:autoMLResult:Solution'</a>, <a>solution_autoMLResult</a> -
--   When <tt>performAutoML</tt> is true, specifies the best recipe found.
--   
--   <a>$sel:creationDateTime:Solution'</a>,
--   <a>solution_creationDateTime</a> - The creation date and time (in Unix
--   time) of the solution.
--   
--   <a>$sel:datasetGroupArn:Solution'</a>, <a>solution_datasetGroupArn</a>
--   - The Amazon Resource Name (ARN) of the dataset group that provides
--   the training data.
--   
--   <a>$sel:latestSolutionVersion:Solution'</a>,
--   <a>solution_latestSolutionVersion</a> - Describes the latest version
--   of the solution, including the status and the ARN.
--   
--   <a>$sel:solutionConfig:Solution'</a>, <a>solution_solutionConfig</a> -
--   Describes the configuration properties for the solution.
--   
--   <a>$sel:performHPO:Solution'</a>, <a>solution_performHPO</a> - Whether
--   to perform hyperparameter optimization (HPO) on the chosen recipe. The
--   default is <tt>false</tt>.
newSolution :: Solution

-- | Describes the configuration properties for the solution.
--   
--   <i>See:</i> <a>newSolutionConfig</a> smart constructor.
data SolutionConfig
SolutionConfig' :: Maybe (HashMap Text Text) -> Maybe HPOConfig -> Maybe Text -> Maybe AutoMLConfig -> Maybe (HashMap Text Text) -> Maybe OptimizationObjective -> SolutionConfig

-- | Create a value of <a>SolutionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:featureTransformationParameters:SolutionConfig'</a>,
--   <a>solutionConfig_featureTransformationParameters</a> - Lists the
--   feature transformation parameters.
--   
--   <a>$sel:hpoConfig:SolutionConfig'</a>, <a>solutionConfig_hpoConfig</a>
--   - Describes the properties for hyperparameter optimization (HPO).
--   
--   <a>$sel:eventValueThreshold:SolutionConfig'</a>,
--   <a>solutionConfig_eventValueThreshold</a> - Only events with a value
--   greater than or equal to this threshold are used for training a model.
--   
--   <a>$sel:autoMLConfig:SolutionConfig'</a>,
--   <a>solutionConfig_autoMLConfig</a> - The AutoMLConfig object
--   containing a list of recipes to search when AutoML is performed.
--   
--   <a>$sel:algorithmHyperParameters:SolutionConfig'</a>,
--   <a>solutionConfig_algorithmHyperParameters</a> - Lists the
--   hyperparameter names and ranges.
--   
--   <a>$sel:optimizationObjective:SolutionConfig'</a>,
--   <a>solutionConfig_optimizationObjective</a> - Describes the additional
--   objective for the solution, such as maximizing streaming minutes or
--   increasing revenue. For more information see <a>Optimizing a
--   solution</a>.
newSolutionConfig :: SolutionConfig

-- | Provides a summary of the properties of a solution. For a complete
--   listing, call the DescribeSolution API.
--   
--   <i>See:</i> <a>newSolutionSummary</a> smart constructor.
data SolutionSummary
SolutionSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> SolutionSummary

-- | Create a value of <a>SolutionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:solutionArn:SolutionSummary'</a>,
--   <a>solutionSummary_solutionArn</a> - The Amazon Resource Name (ARN) of
--   the solution.
--   
--   <a>$sel:status:SolutionSummary'</a>, <a>solutionSummary_status</a> -
--   The status of the solution.
--   
--   A solution can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   <li>DELETE PENDING &gt; DELETE IN_PROGRESS</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:SolutionSummary'</a>,
--   <a>solutionSummary_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the solution was last updated.
--   
--   <a>$sel:name:SolutionSummary'</a>, <a>solutionSummary_name</a> - The
--   name of the solution.
--   
--   <a>$sel:creationDateTime:SolutionSummary'</a>,
--   <a>solutionSummary_creationDateTime</a> - The date and time (in Unix
--   time) that the solution was created.
newSolutionSummary :: SolutionSummary

-- | An object that provides information about a specific version of a
--   Solution.
--   
--   <i>See:</i> <a>newSolutionVersion</a> smart constructor.
data SolutionVersion
SolutionVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe TunedHPOParams -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe TrainingMode -> Maybe Double -> Maybe SolutionConfig -> Maybe Bool -> Maybe Text -> SolutionVersion

-- | Create a value of <a>SolutionVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:SolutionVersion'</a>,
--   <a>solutionVersion_failureReason</a> - If training a solution version
--   fails, the reason for the failure.
--   
--   <a>$sel:solutionArn:SolutionVersion'</a>,
--   <a>solutionVersion_solutionArn</a> - The ARN of the solution.
--   
--   <a>$sel:status:SolutionVersion'</a>, <a>solutionVersion_status</a> -
--   The status of the solution version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING</li>
--   <li>CREATE IN_PROGRESS</li>
--   <li>ACTIVE</li>
--   <li>CREATE FAILED</li>
--   <li>CREATE STOPPING</li>
--   <li>CREATE STOPPED</li>
--   </ul>
--   
--   <a>$sel:performAutoML:SolutionVersion'</a>,
--   <a>solutionVersion_performAutoML</a> - When true, Amazon Personalize
--   searches for the most optimal recipe according to the solution
--   configuration. When false (the default), Amazon Personalize uses
--   <tt>recipeArn</tt>.
--   
--   <a>$sel:tunedHPOParams:SolutionVersion'</a>,
--   <a>solutionVersion_tunedHPOParams</a> - If hyperparameter optimization
--   was performed, contains the hyperparameter values of the best
--   performing model.
--   
--   <a>$sel:recipeArn:SolutionVersion'</a>,
--   <a>solutionVersion_recipeArn</a> - The ARN of the recipe used in the
--   solution.
--   
--   <a>$sel:lastUpdatedDateTime:SolutionVersion'</a>,
--   <a>solutionVersion_lastUpdatedDateTime</a> - The date and time (in
--   Unix time) that the solution was last updated.
--   
--   <a>$sel:eventType:SolutionVersion'</a>,
--   <a>solutionVersion_eventType</a> - The event type (for example,
--   'click' or 'like') that is used for training the model.
--   
--   <a>$sel:creationDateTime:SolutionVersion'</a>,
--   <a>solutionVersion_creationDateTime</a> - The date and time (in Unix
--   time) that this version of the solution was created.
--   
--   <a>$sel:datasetGroupArn:SolutionVersion'</a>,
--   <a>solutionVersion_datasetGroupArn</a> - The Amazon Resource Name
--   (ARN) of the dataset group providing the training data.
--   
--   <a>$sel:trainingMode:SolutionVersion'</a>,
--   <a>solutionVersion_trainingMode</a> - The scope of training to be
--   performed when creating the solution version. The <tt>FULL</tt> option
--   trains the solution version based on the entirety of the input
--   solution's training data, while the <tt>UPDATE</tt> option processes
--   only the data that has changed in comparison to the input solution.
--   Choose <tt>UPDATE</tt> when you want to incrementally update your
--   solution version instead of creating an entirely new one.
--   
--   The <tt>UPDATE</tt> option can only be used when you already have an
--   active solution version created from the input solution using the
--   <tt>FULL</tt> option and the input solution was trained with the
--   <a>User-Personalization</a> recipe or the <a>HRNN-Coldstart</a>
--   recipe.
--   
--   <a>$sel:trainingHours:SolutionVersion'</a>,
--   <a>solutionVersion_trainingHours</a> - The time used to train the
--   model. You are billed for the time it takes to train a model. This
--   field is visible only after Amazon Personalize successfully trains a
--   model.
--   
--   <a>$sel:solutionConfig:SolutionVersion'</a>,
--   <a>solutionVersion_solutionConfig</a> - Describes the configuration
--   properties for the solution.
--   
--   <a>$sel:performHPO:SolutionVersion'</a>,
--   <a>solutionVersion_performHPO</a> - Whether to perform hyperparameter
--   optimization (HPO) on the chosen recipe. The default is
--   <tt>false</tt>.
--   
--   <a>$sel:solutionVersionArn:SolutionVersion'</a>,
--   <a>solutionVersion_solutionVersionArn</a> - The ARN of the solution
--   version.
newSolutionVersion :: SolutionVersion

-- | Provides a summary of the properties of a solution version. For a
--   complete listing, call the DescribeSolutionVersion API.
--   
--   <i>See:</i> <a>newSolutionVersionSummary</a> smart constructor.
data SolutionVersionSummary
SolutionVersionSummary' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> SolutionVersionSummary

-- | Create a value of <a>SolutionVersionSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_failureReason</a> - If a solution version
--   fails, the reason behind the failure.
--   
--   <a>$sel:status:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_status</a> - The status of the solution
--   version.
--   
--   A solution version can be in one of the following states:
--   
--   <ul>
--   <li>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE
--   FAILED</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedDateTime:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_lastUpdatedDateTime</a> - The date and time
--   (in Unix time) that the solution version was last updated.
--   
--   <a>$sel:creationDateTime:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_creationDateTime</a> - The date and time (in
--   Unix time) that this version of a solution was created.
--   
--   <a>$sel:solutionVersionArn:SolutionVersionSummary'</a>,
--   <a>solutionVersionSummary_solutionVersionArn</a> - The Amazon Resource
--   Name (ARN) of the solution version.
newSolutionVersionSummary :: SolutionVersionSummary

-- | If hyperparameter optimization (HPO) was performed, contains the
--   hyperparameter values of the best performing model.
--   
--   <i>See:</i> <a>newTunedHPOParams</a> smart constructor.
data TunedHPOParams
TunedHPOParams' :: Maybe (HashMap Text Text) -> TunedHPOParams

-- | Create a value of <a>TunedHPOParams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:algorithmHyperParameters:TunedHPOParams'</a>,
--   <a>tunedHPOParams_algorithmHyperParameters</a> - A list of the
--   hyperparameter values of the best performing model.
newTunedHPOParams :: TunedHPOParams
