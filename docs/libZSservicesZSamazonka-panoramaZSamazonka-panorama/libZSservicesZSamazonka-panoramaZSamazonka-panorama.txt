-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-panoramaZSamazonka-panorama
@version 2.0


module Amazonka.Panorama.Types.ApplicationInstanceHealthStatus
newtype ApplicationInstanceHealthStatus
ApplicationInstanceHealthStatus' :: Text -> ApplicationInstanceHealthStatus
[fromApplicationInstanceHealthStatus] :: ApplicationInstanceHealthStatus -> Text
pattern ApplicationInstanceHealthStatus_ERROR :: ApplicationInstanceHealthStatus
pattern ApplicationInstanceHealthStatus_NOT_AVAILABLE :: ApplicationInstanceHealthStatus
pattern ApplicationInstanceHealthStatus_RUNNING :: ApplicationInstanceHealthStatus
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance GHC.Generics.Generic Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance GHC.Classes.Ord Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance GHC.Classes.Eq Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance GHC.Read.Read Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus
instance GHC.Show.Show Amazonka.Panorama.Types.ApplicationInstanceHealthStatus.ApplicationInstanceHealthStatus


module Amazonka.Panorama.Types.ApplicationInstanceStatus
newtype ApplicationInstanceStatus
ApplicationInstanceStatus' :: Text -> ApplicationInstanceStatus
[fromApplicationInstanceStatus] :: ApplicationInstanceStatus -> Text
pattern ApplicationInstanceStatus_DEPLOYMENT_ERROR :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_DEPLOYMENT_IN_PROGRESS :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_DEPLOYMENT_PENDING :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_DEPLOYMENT_REQUESTED :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_DEPLOYMENT_SUCCEEDED :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_FAILED :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_IN_PROGRESS :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_PENDING :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_REQUESTED :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_SUCCEEDED :: ApplicationInstanceStatus
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance GHC.Generics.Generic Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance GHC.Classes.Ord Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance GHC.Classes.Eq Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance GHC.Read.Read Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus
instance GHC.Show.Show Amazonka.Panorama.Types.ApplicationInstanceStatus.ApplicationInstanceStatus


module Amazonka.Panorama.Types.ApplicationInstance

-- | An application instance on a device.
--   
--   <i>See:</i> <a>newApplicationInstance</a> smart constructor.
data ApplicationInstance
ApplicationInstance' :: Maybe ApplicationInstanceStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ApplicationInstanceHealthStatus -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ApplicationInstance

-- | The application instance's status.
[$sel:status:ApplicationInstance'] :: ApplicationInstance -> Maybe ApplicationInstanceStatus

-- | The application instance's status description.
[$sel:statusDescription:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | The application instance's ARN.
[$sel:arn:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | When the application instance was created.
[$sel:createdTime:ApplicationInstance'] :: ApplicationInstance -> Maybe POSIX

-- | The device's ID.
[$sel:defaultRuntimeContextDevice:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | The device's name.
[$sel:defaultRuntimeContextDeviceName:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | The application instance's name.
[$sel:name:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | The application instance's health status.
[$sel:healthStatus:ApplicationInstance'] :: ApplicationInstance -> Maybe ApplicationInstanceHealthStatus

-- | The application instance's ID.
[$sel:applicationInstanceId:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | The application instance's description.
[$sel:description:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | The application instance's tags.
[$sel:tags:ApplicationInstance'] :: ApplicationInstance -> Maybe (HashMap Text Text)

-- | Create a value of <a>ApplicationInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ApplicationInstance'</a>,
--   <a>applicationInstance_status</a> - The application instance's status.
--   
--   <a>$sel:statusDescription:ApplicationInstance'</a>,
--   <a>applicationInstance_statusDescription</a> - The application
--   instance's status description.
--   
--   <a>$sel:arn:ApplicationInstance'</a>, <a>applicationInstance_arn</a> -
--   The application instance's ARN.
--   
--   <a>$sel:createdTime:ApplicationInstance'</a>,
--   <a>applicationInstance_createdTime</a> - When the application instance
--   was created.
--   
--   <a>$sel:defaultRuntimeContextDevice:ApplicationInstance'</a>,
--   <a>applicationInstance_defaultRuntimeContextDevice</a> - The device's
--   ID.
--   
--   <a>$sel:defaultRuntimeContextDeviceName:ApplicationInstance'</a>,
--   <a>applicationInstance_defaultRuntimeContextDeviceName</a> - The
--   device's name.
--   
--   <a>$sel:name:ApplicationInstance'</a>, <a>applicationInstance_name</a>
--   - The application instance's name.
--   
--   <a>$sel:healthStatus:ApplicationInstance'</a>,
--   <a>applicationInstance_healthStatus</a> - The application instance's
--   health status.
--   
--   <a>$sel:applicationInstanceId:ApplicationInstance'</a>,
--   <a>applicationInstance_applicationInstanceId</a> - The application
--   instance's ID.
--   
--   <a>$sel:description:ApplicationInstance'</a>,
--   <a>applicationInstance_description</a> - The application instance's
--   description.
--   
--   <a>$sel:tags:ApplicationInstance'</a>, <a>applicationInstance_tags</a>
--   - The application instance's tags.
newApplicationInstance :: ApplicationInstance

-- | The application instance's status.
applicationInstance_status :: Lens' ApplicationInstance (Maybe ApplicationInstanceStatus)

-- | The application instance's status description.
applicationInstance_statusDescription :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's ARN.
applicationInstance_arn :: Lens' ApplicationInstance (Maybe Text)

-- | When the application instance was created.
applicationInstance_createdTime :: Lens' ApplicationInstance (Maybe UTCTime)

-- | The device's ID.
applicationInstance_defaultRuntimeContextDevice :: Lens' ApplicationInstance (Maybe Text)

-- | The device's name.
applicationInstance_defaultRuntimeContextDeviceName :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's name.
applicationInstance_name :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's health status.
applicationInstance_healthStatus :: Lens' ApplicationInstance (Maybe ApplicationInstanceHealthStatus)

-- | The application instance's ID.
applicationInstance_applicationInstanceId :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's description.
applicationInstance_description :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's tags.
applicationInstance_tags :: Lens' ApplicationInstance (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.Panorama.Types.ApplicationInstance.ApplicationInstance
instance GHC.Show.Show Amazonka.Panorama.Types.ApplicationInstance.ApplicationInstance
instance GHC.Read.Read Amazonka.Panorama.Types.ApplicationInstance.ApplicationInstance
instance GHC.Classes.Eq Amazonka.Panorama.Types.ApplicationInstance.ApplicationInstance
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.ApplicationInstance.ApplicationInstance
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.ApplicationInstance.ApplicationInstance
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.ApplicationInstance.ApplicationInstance


module Amazonka.Panorama.Types.ConnectionType
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_DHCP :: ConnectionType
pattern ConnectionType_STATIC_IP :: ConnectionType
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance GHC.Generics.Generic Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance GHC.Classes.Ord Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance GHC.Classes.Eq Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance GHC.Read.Read Amazonka.Panorama.Types.ConnectionType.ConnectionType
instance GHC.Show.Show Amazonka.Panorama.Types.ConnectionType.ConnectionType


module Amazonka.Panorama.Types.DeviceConnectionStatus
newtype DeviceConnectionStatus
DeviceConnectionStatus' :: Text -> DeviceConnectionStatus
[fromDeviceConnectionStatus] :: DeviceConnectionStatus -> Text
pattern DeviceConnectionStatus_AWAITING_CREDENTIALS :: DeviceConnectionStatus
pattern DeviceConnectionStatus_ERROR :: DeviceConnectionStatus
pattern DeviceConnectionStatus_NOT_AVAILABLE :: DeviceConnectionStatus
pattern DeviceConnectionStatus_OFFLINE :: DeviceConnectionStatus
pattern DeviceConnectionStatus_ONLINE :: DeviceConnectionStatus
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance GHC.Generics.Generic Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance GHC.Classes.Ord Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance GHC.Classes.Eq Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance GHC.Read.Read Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus
instance GHC.Show.Show Amazonka.Panorama.Types.DeviceConnectionStatus.DeviceConnectionStatus


module Amazonka.Panorama.Types.DeviceJob

-- | A job that runs on a device.
--   
--   <i>See:</i> <a>newDeviceJob</a> smart constructor.
data DeviceJob
DeviceJob' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> DeviceJob

-- | The job's ID.
[$sel:jobId:DeviceJob'] :: DeviceJob -> Maybe Text

-- | When the job was created.
[$sel:createdTime:DeviceJob'] :: DeviceJob -> Maybe POSIX

-- | The name of the target device
[$sel:deviceName:DeviceJob'] :: DeviceJob -> Maybe Text

-- | The ID of the target device.
[$sel:deviceId:DeviceJob'] :: DeviceJob -> Maybe Text

-- | Create a value of <a>DeviceJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DeviceJob'</a>, <a>deviceJob_jobId</a> - The job's ID.
--   
--   <a>$sel:createdTime:DeviceJob'</a>, <a>deviceJob_createdTime</a> -
--   When the job was created.
--   
--   <a>$sel:deviceName:DeviceJob'</a>, <a>deviceJob_deviceName</a> - The
--   name of the target device
--   
--   <a>$sel:deviceId:DeviceJob'</a>, <a>deviceJob_deviceId</a> - The ID of
--   the target device.
newDeviceJob :: DeviceJob

-- | The job's ID.
deviceJob_jobId :: Lens' DeviceJob (Maybe Text)

-- | When the job was created.
deviceJob_createdTime :: Lens' DeviceJob (Maybe UTCTime)

-- | The name of the target device
deviceJob_deviceName :: Lens' DeviceJob (Maybe Text)

-- | The ID of the target device.
deviceJob_deviceId :: Lens' DeviceJob (Maybe Text)
instance GHC.Generics.Generic Amazonka.Panorama.Types.DeviceJob.DeviceJob
instance GHC.Show.Show Amazonka.Panorama.Types.DeviceJob.DeviceJob
instance GHC.Read.Read Amazonka.Panorama.Types.DeviceJob.DeviceJob
instance GHC.Classes.Eq Amazonka.Panorama.Types.DeviceJob.DeviceJob
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.DeviceJob.DeviceJob
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.DeviceJob.DeviceJob
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.DeviceJob.DeviceJob


module Amazonka.Panorama.Types.DeviceStatus
newtype DeviceStatus
DeviceStatus' :: Text -> DeviceStatus
[fromDeviceStatus] :: DeviceStatus -> Text
pattern DeviceStatus_AWAITING_PROVISIONING :: DeviceStatus
pattern DeviceStatus_DELETING :: DeviceStatus
pattern DeviceStatus_ERROR :: DeviceStatus
pattern DeviceStatus_FAILED :: DeviceStatus
pattern DeviceStatus_PENDING :: DeviceStatus
pattern DeviceStatus_SUCCEEDED :: DeviceStatus
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance GHC.Generics.Generic Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance GHC.Classes.Ord Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance GHC.Classes.Eq Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance GHC.Read.Read Amazonka.Panorama.Types.DeviceStatus.DeviceStatus
instance GHC.Show.Show Amazonka.Panorama.Types.DeviceStatus.DeviceStatus


module Amazonka.Panorama.Types.Device

-- | A device.
--   
--   <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe POSIX -> Maybe DeviceStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Device

-- | When the device was updated.
[$sel:lastUpdatedTime:Device'] :: Device -> Maybe POSIX

-- | The device's provisioning status.
[$sel:provisioningStatus:Device'] :: Device -> Maybe DeviceStatus

-- | When the device was created.
[$sel:createdTime:Device'] :: Device -> Maybe POSIX

-- | The device's name.
[$sel:name:Device'] :: Device -> Maybe Text

-- | The device's ID.
[$sel:deviceId:Device'] :: Device -> Maybe Text

-- | The device's lease expiration time.
[$sel:leaseExpirationTime:Device'] :: Device -> Maybe POSIX

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Device'</a>, <a>device_lastUpdatedTime</a> -
--   When the device was updated.
--   
--   <a>$sel:provisioningStatus:Device'</a>,
--   <a>device_provisioningStatus</a> - The device's provisioning status.
--   
--   <a>$sel:createdTime:Device'</a>, <a>device_createdTime</a> - When the
--   device was created.
--   
--   <a>$sel:name:Device'</a>, <a>device_name</a> - The device's name.
--   
--   <a>$sel:deviceId:Device'</a>, <a>device_deviceId</a> - The device's
--   ID.
--   
--   <a>$sel:leaseExpirationTime:Device'</a>,
--   <a>device_leaseExpirationTime</a> - The device's lease expiration
--   time.
newDevice :: Device

-- | When the device was updated.
device_lastUpdatedTime :: Lens' Device (Maybe UTCTime)

-- | The device's provisioning status.
device_provisioningStatus :: Lens' Device (Maybe DeviceStatus)

-- | When the device was created.
device_createdTime :: Lens' Device (Maybe UTCTime)

-- | The device's name.
device_name :: Lens' Device (Maybe Text)

-- | The device's ID.
device_deviceId :: Lens' Device (Maybe Text)

-- | The device's lease expiration time.
device_leaseExpirationTime :: Lens' Device (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.Panorama.Types.Device.Device
instance GHC.Show.Show Amazonka.Panorama.Types.Device.Device
instance GHC.Read.Read Amazonka.Panorama.Types.Device.Device
instance GHC.Classes.Eq Amazonka.Panorama.Types.Device.Device
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.Device.Device
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.Device.Device
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.Device.Device


module Amazonka.Panorama.Types.DeviceType
newtype DeviceType
DeviceType' :: Text -> DeviceType
[fromDeviceType] :: DeviceType -> Text
pattern DeviceType_PANORAMA_APPLIANCE :: DeviceType
pattern DeviceType_PANORAMA_APPLIANCE_DEVELOPER_KIT :: DeviceType
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.DeviceType.DeviceType
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.DeviceType.DeviceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.DeviceType.DeviceType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.DeviceType.DeviceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.DeviceType.DeviceType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.DeviceType.DeviceType
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.DeviceType.DeviceType
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.DeviceType.DeviceType
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.DeviceType.DeviceType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.DeviceType.DeviceType
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.DeviceType.DeviceType
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.DeviceType.DeviceType
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.DeviceType.DeviceType
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.DeviceType.DeviceType
instance GHC.Generics.Generic Amazonka.Panorama.Types.DeviceType.DeviceType
instance GHC.Classes.Ord Amazonka.Panorama.Types.DeviceType.DeviceType
instance GHC.Classes.Eq Amazonka.Panorama.Types.DeviceType.DeviceType
instance GHC.Read.Read Amazonka.Panorama.Types.DeviceType.DeviceType
instance GHC.Show.Show Amazonka.Panorama.Types.DeviceType.DeviceType


module Amazonka.Panorama.Types.Job

-- | A job for a device.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe Text -> Maybe Text -> Job

-- | The job's ID.
[$sel:jobId:Job'] :: Job -> Maybe Text

-- | The target device's ID.
[$sel:deviceId:Job'] :: Job -> Maybe Text

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:Job'</a>, <a>job_jobId</a> - The job's ID.
--   
--   <a>$sel:deviceId:Job'</a>, <a>job_deviceId</a> - The target device's
--   ID.
newJob :: Job

-- | The job's ID.
job_jobId :: Lens' Job (Maybe Text)

-- | The target device's ID.
job_deviceId :: Lens' Job (Maybe Text)
instance GHC.Generics.Generic Amazonka.Panorama.Types.Job.Job
instance GHC.Show.Show Amazonka.Panorama.Types.Job.Job
instance GHC.Read.Read Amazonka.Panorama.Types.Job.Job
instance GHC.Classes.Eq Amazonka.Panorama.Types.Job.Job
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.Job.Job
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.Job.Job
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.Job.Job


module Amazonka.Panorama.Types.JobResourceType
newtype JobResourceType
JobResourceType' :: Text -> JobResourceType
[fromJobResourceType] :: JobResourceType -> Text
pattern JobResourceType_PACKAGE :: JobResourceType
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance GHC.Generics.Generic Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance GHC.Classes.Ord Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance GHC.Classes.Eq Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance GHC.Read.Read Amazonka.Panorama.Types.JobResourceType.JobResourceType
instance GHC.Show.Show Amazonka.Panorama.Types.JobResourceType.JobResourceType


module Amazonka.Panorama.Types.JobResourceTags

-- | Tags for a job.
--   
--   <i>See:</i> <a>newJobResourceTags</a> smart constructor.
data JobResourceTags
JobResourceTags' :: JobResourceType -> HashMap Text Text -> JobResourceTags

-- | The job's type.
[$sel:resourceType:JobResourceTags'] :: JobResourceTags -> JobResourceType

-- | The job's tags.
[$sel:tags:JobResourceTags'] :: JobResourceTags -> HashMap Text Text

-- | Create a value of <a>JobResourceTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:JobResourceTags'</a>,
--   <a>jobResourceTags_resourceType</a> - The job's type.
--   
--   <a>$sel:tags:JobResourceTags'</a>, <a>jobResourceTags_tags</a> - The
--   job's tags.
newJobResourceTags :: JobResourceType -> JobResourceTags

-- | The job's type.
jobResourceTags_resourceType :: Lens' JobResourceTags JobResourceType

-- | The job's tags.
jobResourceTags_tags :: Lens' JobResourceTags (HashMap Text Text)
instance GHC.Generics.Generic Amazonka.Panorama.Types.JobResourceTags.JobResourceTags
instance GHC.Show.Show Amazonka.Panorama.Types.JobResourceTags.JobResourceTags
instance GHC.Read.Read Amazonka.Panorama.Types.JobResourceTags.JobResourceTags
instance GHC.Classes.Eq Amazonka.Panorama.Types.JobResourceTags.JobResourceTags
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.JobResourceTags.JobResourceTags
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.JobResourceTags.JobResourceTags
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.JobResourceTags.JobResourceTags
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.JobResourceTags.JobResourceTags


module Amazonka.Panorama.Types.JobType
newtype JobType
JobType' :: Text -> JobType
[fromJobType] :: JobType -> Text
pattern JobType_OTA :: JobType
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.JobType.JobType
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.JobType.JobType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.JobType.JobType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.JobType.JobType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.JobType.JobType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.JobType.JobType
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.JobType.JobType
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.JobType.JobType
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.JobType.JobType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.JobType.JobType
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.JobType.JobType
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.JobType.JobType
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.JobType.JobType
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.JobType.JobType
instance GHC.Generics.Generic Amazonka.Panorama.Types.JobType.JobType
instance GHC.Classes.Ord Amazonka.Panorama.Types.JobType.JobType
instance GHC.Classes.Eq Amazonka.Panorama.Types.JobType.JobType
instance GHC.Read.Read Amazonka.Panorama.Types.JobType.JobType
instance GHC.Show.Show Amazonka.Panorama.Types.JobType.JobType


module Amazonka.Panorama.Types.ManifestOverridesPayload

-- | Parameter overrides for an application instance. This is a JSON
--   document that has a single key (<tt>PayloadData</tt>) where the value
--   is an escaped string representation of the overrides document.
--   
--   <i>See:</i> <a>newManifestOverridesPayload</a> smart constructor.
data ManifestOverridesPayload
ManifestOverridesPayload' :: Maybe Text -> ManifestOverridesPayload

-- | The overrides document.
[$sel:payloadData:ManifestOverridesPayload'] :: ManifestOverridesPayload -> Maybe Text

-- | Create a value of <a>ManifestOverridesPayload</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payloadData:ManifestOverridesPayload'</a>,
--   <a>manifestOverridesPayload_payloadData</a> - The overrides document.
newManifestOverridesPayload :: ManifestOverridesPayload

-- | The overrides document.
manifestOverridesPayload_payloadData :: Lens' ManifestOverridesPayload (Maybe Text)
instance GHC.Generics.Generic Amazonka.Panorama.Types.ManifestOverridesPayload.ManifestOverridesPayload
instance GHC.Show.Show Amazonka.Panorama.Types.ManifestOverridesPayload.ManifestOverridesPayload
instance GHC.Read.Read Amazonka.Panorama.Types.ManifestOverridesPayload.ManifestOverridesPayload
instance GHC.Classes.Eq Amazonka.Panorama.Types.ManifestOverridesPayload.ManifestOverridesPayload
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.ManifestOverridesPayload.ManifestOverridesPayload
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.ManifestOverridesPayload.ManifestOverridesPayload
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.ManifestOverridesPayload.ManifestOverridesPayload
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.ManifestOverridesPayload.ManifestOverridesPayload


module Amazonka.Panorama.Types.ManifestPayload

-- | A application verion's manifest file. This is a JSON document that has
--   a single key (<tt>PayloadData</tt>) where the value is an escaped
--   string representation of the application manifest
--   (<tt>graph.json</tt>). This file is located in the <tt>graphs</tt>
--   folder in your application source.
--   
--   <i>See:</i> <a>newManifestPayload</a> smart constructor.
data ManifestPayload
ManifestPayload' :: Maybe Text -> ManifestPayload

-- | The application manifest.
[$sel:payloadData:ManifestPayload'] :: ManifestPayload -> Maybe Text

-- | Create a value of <a>ManifestPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payloadData:ManifestPayload'</a>,
--   <a>manifestPayload_payloadData</a> - The application manifest.
newManifestPayload :: ManifestPayload

-- | The application manifest.
manifestPayload_payloadData :: Lens' ManifestPayload (Maybe Text)
instance GHC.Generics.Generic Amazonka.Panorama.Types.ManifestPayload.ManifestPayload
instance GHC.Show.Show Amazonka.Panorama.Types.ManifestPayload.ManifestPayload
instance GHC.Read.Read Amazonka.Panorama.Types.ManifestPayload.ManifestPayload
instance GHC.Classes.Eq Amazonka.Panorama.Types.ManifestPayload.ManifestPayload
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.ManifestPayload.ManifestPayload
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.ManifestPayload.ManifestPayload
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.ManifestPayload.ManifestPayload
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.ManifestPayload.ManifestPayload


module Amazonka.Panorama.Types.NetworkConnectionStatus
newtype NetworkConnectionStatus
NetworkConnectionStatus' :: Text -> NetworkConnectionStatus
[fromNetworkConnectionStatus] :: NetworkConnectionStatus -> Text
pattern NetworkConnectionStatus_CONNECTED :: NetworkConnectionStatus
pattern NetworkConnectionStatus_NOT_CONNECTED :: NetworkConnectionStatus
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance GHC.Generics.Generic Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance GHC.Classes.Ord Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance GHC.Classes.Eq Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance GHC.Read.Read Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus
instance GHC.Show.Show Amazonka.Panorama.Types.NetworkConnectionStatus.NetworkConnectionStatus


module Amazonka.Panorama.Types.EthernetStatus

-- | A device's Ethernet status.
--   
--   <i>See:</i> <a>newEthernetStatus</a> smart constructor.
data EthernetStatus
EthernetStatus' :: Maybe Text -> Maybe NetworkConnectionStatus -> Maybe Text -> EthernetStatus

-- | The device's IP address.
[$sel:ipAddress:EthernetStatus'] :: EthernetStatus -> Maybe Text

-- | The device's connection status.
[$sel:connectionStatus:EthernetStatus'] :: EthernetStatus -> Maybe NetworkConnectionStatus

-- | The device's physical address.
[$sel:hwAddress:EthernetStatus'] :: EthernetStatus -> Maybe Text

-- | Create a value of <a>EthernetStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:EthernetStatus'</a>, <a>ethernetStatus_ipAddress</a>
--   - The device's IP address.
--   
--   <a>$sel:connectionStatus:EthernetStatus'</a>,
--   <a>ethernetStatus_connectionStatus</a> - The device's connection
--   status.
--   
--   <a>$sel:hwAddress:EthernetStatus'</a>, <a>ethernetStatus_hwAddress</a>
--   - The device's physical address.
newEthernetStatus :: EthernetStatus

-- | The device's IP address.
ethernetStatus_ipAddress :: Lens' EthernetStatus (Maybe Text)

-- | The device's connection status.
ethernetStatus_connectionStatus :: Lens' EthernetStatus (Maybe NetworkConnectionStatus)

-- | The device's physical address.
ethernetStatus_hwAddress :: Lens' EthernetStatus (Maybe Text)
instance GHC.Generics.Generic Amazonka.Panorama.Types.EthernetStatus.EthernetStatus
instance GHC.Show.Show Amazonka.Panorama.Types.EthernetStatus.EthernetStatus
instance GHC.Read.Read Amazonka.Panorama.Types.EthernetStatus.EthernetStatus
instance GHC.Classes.Eq Amazonka.Panorama.Types.EthernetStatus.EthernetStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.EthernetStatus.EthernetStatus
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.EthernetStatus.EthernetStatus
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.EthernetStatus.EthernetStatus


module Amazonka.Panorama.Types.NetworkStatus

-- | The network status of a device.
--   
--   <i>See:</i> <a>newNetworkStatus</a> smart constructor.
data NetworkStatus
NetworkStatus' :: Maybe EthernetStatus -> Maybe EthernetStatus -> NetworkStatus

-- | The status of Ethernet port 1.
[$sel:ethernet1Status:NetworkStatus'] :: NetworkStatus -> Maybe EthernetStatus

-- | The status of Ethernet port 0.
[$sel:ethernet0Status:NetworkStatus'] :: NetworkStatus -> Maybe EthernetStatus

-- | Create a value of <a>NetworkStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ethernet1Status:NetworkStatus'</a>,
--   <a>networkStatus_ethernet1Status</a> - The status of Ethernet port 1.
--   
--   <a>$sel:ethernet0Status:NetworkStatus'</a>,
--   <a>networkStatus_ethernet0Status</a> - The status of Ethernet port 0.
newNetworkStatus :: NetworkStatus

-- | The status of Ethernet port 1.
networkStatus_ethernet1Status :: Lens' NetworkStatus (Maybe EthernetStatus)

-- | The status of Ethernet port 0.
networkStatus_ethernet0Status :: Lens' NetworkStatus (Maybe EthernetStatus)
instance GHC.Generics.Generic Amazonka.Panorama.Types.NetworkStatus.NetworkStatus
instance GHC.Show.Show Amazonka.Panorama.Types.NetworkStatus.NetworkStatus
instance GHC.Read.Read Amazonka.Panorama.Types.NetworkStatus.NetworkStatus
instance GHC.Classes.Eq Amazonka.Panorama.Types.NetworkStatus.NetworkStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.NetworkStatus.NetworkStatus
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.NetworkStatus.NetworkStatus
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.NetworkStatus.NetworkStatus


module Amazonka.Panorama.Types.NodeCategory
newtype NodeCategory
NodeCategory' :: Text -> NodeCategory
[fromNodeCategory] :: NodeCategory -> Text
pattern NodeCategory_BUSINESS_LOGIC :: NodeCategory
pattern NodeCategory_MEDIA_SINK :: NodeCategory
pattern NodeCategory_MEDIA_SOURCE :: NodeCategory
pattern NodeCategory_ML_MODEL :: NodeCategory
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance GHC.Generics.Generic Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance GHC.Classes.Ord Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance GHC.Classes.Eq Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance GHC.Read.Read Amazonka.Panorama.Types.NodeCategory.NodeCategory
instance GHC.Show.Show Amazonka.Panorama.Types.NodeCategory.NodeCategory


module Amazonka.Panorama.Types.Node

-- | An application node that represents a camera stream, a model, code, or
--   output.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> NodeCategory -> Text -> Text -> Text -> Text -> POSIX -> Node

-- | The node's ARN.
[$sel:packageArn:Node'] :: Node -> Maybe Text

-- | The account ID of the node's owner.
[$sel:ownerAccount:Node'] :: Node -> Maybe Text

-- | The node's description.
[$sel:description:Node'] :: Node -> Maybe Text

-- | The node's ID.
[$sel:nodeId:Node'] :: Node -> Text

-- | The node's name.
[$sel:name:Node'] :: Node -> Text

-- | The node's category.
[$sel:category:Node'] :: Node -> NodeCategory

-- | The node's package name.
[$sel:packageName:Node'] :: Node -> Text

-- | The node's package ID.
[$sel:packageId:Node'] :: Node -> Text

-- | The node's package version.
[$sel:packageVersion:Node'] :: Node -> Text

-- | The node's patch version.
[$sel:patchVersion:Node'] :: Node -> Text

-- | When the node was created.
[$sel:createdTime:Node'] :: Node -> POSIX

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageArn:Node'</a>, <a>node_packageArn</a> - The node's ARN.
--   
--   <a>$sel:ownerAccount:Node'</a>, <a>node_ownerAccount</a> - The account
--   ID of the node's owner.
--   
--   <a>$sel:description:Node'</a>, <a>node_description</a> - The node's
--   description.
--   
--   <a>$sel:nodeId:Node'</a>, <a>node_nodeId</a> - The node's ID.
--   
--   <a>$sel:name:Node'</a>, <a>node_name</a> - The node's name.
--   
--   <a>$sel:category:Node'</a>, <a>node_category</a> - The node's
--   category.
--   
--   <a>$sel:packageName:Node'</a>, <a>node_packageName</a> - The node's
--   package name.
--   
--   <a>$sel:packageId:Node'</a>, <a>node_packageId</a> - The node's
--   package ID.
--   
--   <a>$sel:packageVersion:Node'</a>, <a>node_packageVersion</a> - The
--   node's package version.
--   
--   <a>$sel:patchVersion:Node'</a>, <a>node_patchVersion</a> - The node's
--   patch version.
--   
--   <a>$sel:createdTime:Node'</a>, <a>node_createdTime</a> - When the node
--   was created.
newNode :: Text -> Text -> NodeCategory -> Text -> Text -> Text -> Text -> UTCTime -> Node

-- | The node's ARN.
node_packageArn :: Lens' Node (Maybe Text)

-- | The account ID of the node's owner.
node_ownerAccount :: Lens' Node (Maybe Text)

-- | The node's description.
node_description :: Lens' Node (Maybe Text)

-- | The node's ID.
node_nodeId :: Lens' Node Text

-- | The node's name.
node_name :: Lens' Node Text

-- | The node's category.
node_category :: Lens' Node NodeCategory

-- | The node's package name.
node_packageName :: Lens' Node Text

-- | The node's package ID.
node_packageId :: Lens' Node Text

-- | The node's package version.
node_packageVersion :: Lens' Node Text

-- | The node's patch version.
node_patchVersion :: Lens' Node Text

-- | When the node was created.
node_createdTime :: Lens' Node UTCTime
instance GHC.Generics.Generic Amazonka.Panorama.Types.Node.Node
instance GHC.Show.Show Amazonka.Panorama.Types.Node.Node
instance GHC.Read.Read Amazonka.Panorama.Types.Node.Node
instance GHC.Classes.Eq Amazonka.Panorama.Types.Node.Node
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.Node.Node
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.Node.Node
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.Node.Node


module Amazonka.Panorama.Types.NodeFromTemplateJobStatus
newtype NodeFromTemplateJobStatus
NodeFromTemplateJobStatus' :: Text -> NodeFromTemplateJobStatus
[fromNodeFromTemplateJobStatus] :: NodeFromTemplateJobStatus -> Text
pattern NodeFromTemplateJobStatus_FAILED :: NodeFromTemplateJobStatus
pattern NodeFromTemplateJobStatus_PENDING :: NodeFromTemplateJobStatus
pattern NodeFromTemplateJobStatus_SUCCEEDED :: NodeFromTemplateJobStatus
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance GHC.Generics.Generic Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance GHC.Classes.Ord Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance GHC.Classes.Eq Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance GHC.Read.Read Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus
instance GHC.Show.Show Amazonka.Panorama.Types.NodeFromTemplateJobStatus.NodeFromTemplateJobStatus


module Amazonka.Panorama.Types.NodeInstanceStatus
newtype NodeInstanceStatus
NodeInstanceStatus' :: Text -> NodeInstanceStatus
[fromNodeInstanceStatus] :: NodeInstanceStatus -> Text
pattern NodeInstanceStatus_ERROR :: NodeInstanceStatus
pattern NodeInstanceStatus_NOT_AVAILABLE :: NodeInstanceStatus
pattern NodeInstanceStatus_RUNNING :: NodeInstanceStatus
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance GHC.Generics.Generic Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance GHC.Classes.Ord Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance GHC.Classes.Eq Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance GHC.Read.Read Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus
instance GHC.Show.Show Amazonka.Panorama.Types.NodeInstanceStatus.NodeInstanceStatus


module Amazonka.Panorama.Types.NodeInstance

-- | A node instance.
--   
--   <i>See:</i> <a>newNodeInstance</a> smart constructor.
data NodeInstance
NodeInstance' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> NodeInstanceStatus -> NodeInstance

-- | The instance's package name.
[$sel:packageName:NodeInstance'] :: NodeInstance -> Maybe Text

-- | The instance's package version.
[$sel:packageVersion:NodeInstance'] :: NodeInstance -> Maybe Text

-- | The instance's package patch version.
[$sel:packagePatchVersion:NodeInstance'] :: NodeInstance -> Maybe Text

-- | The instance's name.
[$sel:nodeName:NodeInstance'] :: NodeInstance -> Maybe Text

-- | The node's ID.
[$sel:nodeId:NodeInstance'] :: NodeInstance -> Maybe Text

-- | The instance's ID.
[$sel:nodeInstanceId:NodeInstance'] :: NodeInstance -> Text

-- | The instance's current status.
[$sel:currentStatus:NodeInstance'] :: NodeInstance -> NodeInstanceStatus

-- | Create a value of <a>NodeInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageName:NodeInstance'</a>, <a>nodeInstance_packageName</a>
--   - The instance's package name.
--   
--   <a>$sel:packageVersion:NodeInstance'</a>,
--   <a>nodeInstance_packageVersion</a> - The instance's package version.
--   
--   <a>$sel:packagePatchVersion:NodeInstance'</a>,
--   <a>nodeInstance_packagePatchVersion</a> - The instance's package patch
--   version.
--   
--   <a>$sel:nodeName:NodeInstance'</a>, <a>nodeInstance_nodeName</a> - The
--   instance's name.
--   
--   <a>$sel:nodeId:NodeInstance'</a>, <a>nodeInstance_nodeId</a> - The
--   node's ID.
--   
--   <a>$sel:nodeInstanceId:NodeInstance'</a>,
--   <a>nodeInstance_nodeInstanceId</a> - The instance's ID.
--   
--   <a>$sel:currentStatus:NodeInstance'</a>,
--   <a>nodeInstance_currentStatus</a> - The instance's current status.
newNodeInstance :: Text -> NodeInstanceStatus -> NodeInstance

-- | The instance's package name.
nodeInstance_packageName :: Lens' NodeInstance (Maybe Text)

-- | The instance's package version.
nodeInstance_packageVersion :: Lens' NodeInstance (Maybe Text)

-- | The instance's package patch version.
nodeInstance_packagePatchVersion :: Lens' NodeInstance (Maybe Text)

-- | The instance's name.
nodeInstance_nodeName :: Lens' NodeInstance (Maybe Text)

-- | The node's ID.
nodeInstance_nodeId :: Lens' NodeInstance (Maybe Text)

-- | The instance's ID.
nodeInstance_nodeInstanceId :: Lens' NodeInstance Text

-- | The instance's current status.
nodeInstance_currentStatus :: Lens' NodeInstance NodeInstanceStatus
instance GHC.Generics.Generic Amazonka.Panorama.Types.NodeInstance.NodeInstance
instance GHC.Show.Show Amazonka.Panorama.Types.NodeInstance.NodeInstance
instance GHC.Read.Read Amazonka.Panorama.Types.NodeInstance.NodeInstance
instance GHC.Classes.Eq Amazonka.Panorama.Types.NodeInstance.NodeInstance
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.NodeInstance.NodeInstance
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.NodeInstance.NodeInstance
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.NodeInstance.NodeInstance


module Amazonka.Panorama.Types.OTAJobConfig

-- | An over-the-air update (OTA) job configuration.
--   
--   <i>See:</i> <a>newOTAJobConfig</a> smart constructor.
data OTAJobConfig
OTAJobConfig' :: Text -> OTAJobConfig

-- | The target version of the device software.
[$sel:imageVersion:OTAJobConfig'] :: OTAJobConfig -> Text

-- | Create a value of <a>OTAJobConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageVersion:OTAJobConfig'</a>,
--   <a>oTAJobConfig_imageVersion</a> - The target version of the device
--   software.
newOTAJobConfig :: Text -> OTAJobConfig

-- | The target version of the device software.
oTAJobConfig_imageVersion :: Lens' OTAJobConfig Text
instance GHC.Generics.Generic Amazonka.Panorama.Types.OTAJobConfig.OTAJobConfig
instance GHC.Show.Show Amazonka.Panorama.Types.OTAJobConfig.OTAJobConfig
instance GHC.Read.Read Amazonka.Panorama.Types.OTAJobConfig.OTAJobConfig
instance GHC.Classes.Eq Amazonka.Panorama.Types.OTAJobConfig.OTAJobConfig
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.OTAJobConfig.OTAJobConfig
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.OTAJobConfig.OTAJobConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.OTAJobConfig.OTAJobConfig


module Amazonka.Panorama.Types.DeviceJobConfig

-- | A job's configuration.
--   
--   <i>See:</i> <a>newDeviceJobConfig</a> smart constructor.
data DeviceJobConfig
DeviceJobConfig' :: Maybe OTAJobConfig -> DeviceJobConfig

-- | A configuration for an over-the-air (OTA) upgrade. Required for OTA
--   jobs.
[$sel:oTAJobConfig:DeviceJobConfig'] :: DeviceJobConfig -> Maybe OTAJobConfig

-- | Create a value of <a>DeviceJobConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oTAJobConfig:DeviceJobConfig'</a>,
--   <a>deviceJobConfig_oTAJobConfig</a> - A configuration for an
--   over-the-air (OTA) upgrade. Required for OTA jobs.
newDeviceJobConfig :: DeviceJobConfig

-- | A configuration for an over-the-air (OTA) upgrade. Required for OTA
--   jobs.
deviceJobConfig_oTAJobConfig :: Lens' DeviceJobConfig (Maybe OTAJobConfig)
instance GHC.Generics.Generic Amazonka.Panorama.Types.DeviceJobConfig.DeviceJobConfig
instance GHC.Show.Show Amazonka.Panorama.Types.DeviceJobConfig.DeviceJobConfig
instance GHC.Read.Read Amazonka.Panorama.Types.DeviceJobConfig.DeviceJobConfig
instance GHC.Classes.Eq Amazonka.Panorama.Types.DeviceJobConfig.DeviceJobConfig
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.DeviceJobConfig.DeviceJobConfig
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.DeviceJobConfig.DeviceJobConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.DeviceJobConfig.DeviceJobConfig


module Amazonka.Panorama.Types.OutPutS3Location

-- | The location of an output object in Amazon S3.
--   
--   <i>See:</i> <a>newOutPutS3Location</a> smart constructor.
data OutPutS3Location
OutPutS3Location' :: Text -> Text -> OutPutS3Location

-- | The object's bucket.
[$sel:bucketName:OutPutS3Location'] :: OutPutS3Location -> Text

-- | The object's key.
[$sel:objectKey:OutPutS3Location'] :: OutPutS3Location -> Text

-- | Create a value of <a>OutPutS3Location</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketName:OutPutS3Location'</a>,
--   <a>outPutS3Location_bucketName</a> - The object's bucket.
--   
--   <a>$sel:objectKey:OutPutS3Location'</a>,
--   <a>outPutS3Location_objectKey</a> - The object's key.
newOutPutS3Location :: Text -> Text -> OutPutS3Location

-- | The object's bucket.
outPutS3Location_bucketName :: Lens' OutPutS3Location Text

-- | The object's key.
outPutS3Location_objectKey :: Lens' OutPutS3Location Text
instance GHC.Generics.Generic Amazonka.Panorama.Types.OutPutS3Location.OutPutS3Location
instance GHC.Show.Show Amazonka.Panorama.Types.OutPutS3Location.OutPutS3Location
instance GHC.Read.Read Amazonka.Panorama.Types.OutPutS3Location.OutPutS3Location
instance GHC.Classes.Eq Amazonka.Panorama.Types.OutPutS3Location.OutPutS3Location
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.OutPutS3Location.OutPutS3Location
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.OutPutS3Location.OutPutS3Location
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.OutPutS3Location.OutPutS3Location


module Amazonka.Panorama.Types.PackageImportJobOutput

-- | Results of a package import job.
--   
--   <i>See:</i> <a>newPackageImportJobOutput</a> smart constructor.
data PackageImportJobOutput
PackageImportJobOutput' :: Text -> Text -> Text -> OutPutS3Location -> PackageImportJobOutput

-- | The package's ID.
[$sel:packageId:PackageImportJobOutput'] :: PackageImportJobOutput -> Text

-- | The package's version.
[$sel:packageVersion:PackageImportJobOutput'] :: PackageImportJobOutput -> Text

-- | The package's patch version.
[$sel:patchVersion:PackageImportJobOutput'] :: PackageImportJobOutput -> Text

-- | The package's output location.
[$sel:outputS3Location:PackageImportJobOutput'] :: PackageImportJobOutput -> OutPutS3Location

-- | Create a value of <a>PackageImportJobOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageId:PackageImportJobOutput'</a>,
--   <a>packageImportJobOutput_packageId</a> - The package's ID.
--   
--   <a>$sel:packageVersion:PackageImportJobOutput'</a>,
--   <a>packageImportJobOutput_packageVersion</a> - The package's version.
--   
--   <a>$sel:patchVersion:PackageImportJobOutput'</a>,
--   <a>packageImportJobOutput_patchVersion</a> - The package's patch
--   version.
--   
--   <a>$sel:outputS3Location:PackageImportJobOutput'</a>,
--   <a>packageImportJobOutput_outputS3Location</a> - The package's output
--   location.
newPackageImportJobOutput :: Text -> Text -> Text -> OutPutS3Location -> PackageImportJobOutput

-- | The package's ID.
packageImportJobOutput_packageId :: Lens' PackageImportJobOutput Text

-- | The package's version.
packageImportJobOutput_packageVersion :: Lens' PackageImportJobOutput Text

-- | The package's patch version.
packageImportJobOutput_patchVersion :: Lens' PackageImportJobOutput Text

-- | The package's output location.
packageImportJobOutput_outputS3Location :: Lens' PackageImportJobOutput OutPutS3Location
instance GHC.Generics.Generic Amazonka.Panorama.Types.PackageImportJobOutput.PackageImportJobOutput
instance GHC.Show.Show Amazonka.Panorama.Types.PackageImportJobOutput.PackageImportJobOutput
instance GHC.Read.Read Amazonka.Panorama.Types.PackageImportJobOutput.PackageImportJobOutput
instance GHC.Classes.Eq Amazonka.Panorama.Types.PackageImportJobOutput.PackageImportJobOutput
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.PackageImportJobOutput.PackageImportJobOutput
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.PackageImportJobOutput.PackageImportJobOutput
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.PackageImportJobOutput.PackageImportJobOutput


module Amazonka.Panorama.Types.PackageImportJobStatus
newtype PackageImportJobStatus
PackageImportJobStatus' :: Text -> PackageImportJobStatus
[fromPackageImportJobStatus] :: PackageImportJobStatus -> Text
pattern PackageImportJobStatus_FAILED :: PackageImportJobStatus
pattern PackageImportJobStatus_PENDING :: PackageImportJobStatus
pattern PackageImportJobStatus_SUCCEEDED :: PackageImportJobStatus
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance GHC.Generics.Generic Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance GHC.Classes.Ord Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance GHC.Classes.Eq Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance GHC.Read.Read Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus
instance GHC.Show.Show Amazonka.Panorama.Types.PackageImportJobStatus.PackageImportJobStatus


module Amazonka.Panorama.Types.PackageImportJobType
newtype PackageImportJobType
PackageImportJobType' :: Text -> PackageImportJobType
[fromPackageImportJobType] :: PackageImportJobType -> Text
pattern PackageImportJobType_NODE_PACKAGE_VERSION :: PackageImportJobType
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance GHC.Generics.Generic Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance GHC.Classes.Ord Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance GHC.Classes.Eq Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance GHC.Read.Read Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType
instance GHC.Show.Show Amazonka.Panorama.Types.PackageImportJobType.PackageImportJobType


module Amazonka.Panorama.Types.PackageImportJob

-- | A job to import a package version.
--   
--   <i>See:</i> <a>newPackageImportJob</a> smart constructor.
data PackageImportJob
PackageImportJob' :: Maybe PackageImportJobStatus -> Maybe PackageImportJobType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> PackageImportJob

-- | The job's status.
[$sel:status:PackageImportJob'] :: PackageImportJob -> Maybe PackageImportJobStatus

-- | The job's type.
[$sel:jobType:PackageImportJob'] :: PackageImportJob -> Maybe PackageImportJobType

-- | When the job was updated.
[$sel:lastUpdatedTime:PackageImportJob'] :: PackageImportJob -> Maybe POSIX

-- | The job's ID.
[$sel:jobId:PackageImportJob'] :: PackageImportJob -> Maybe Text

-- | When the job was created.
[$sel:createdTime:PackageImportJob'] :: PackageImportJob -> Maybe POSIX

-- | The job's status message.
[$sel:statusMessage:PackageImportJob'] :: PackageImportJob -> Maybe Text

-- | Create a value of <a>PackageImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PackageImportJob'</a>, <a>packageImportJob_status</a> -
--   The job's status.
--   
--   <a>$sel:jobType:PackageImportJob'</a>, <a>packageImportJob_jobType</a>
--   - The job's type.
--   
--   <a>$sel:lastUpdatedTime:PackageImportJob'</a>,
--   <a>packageImportJob_lastUpdatedTime</a> - When the job was updated.
--   
--   <a>$sel:jobId:PackageImportJob'</a>, <a>packageImportJob_jobId</a> -
--   The job's ID.
--   
--   <a>$sel:createdTime:PackageImportJob'</a>,
--   <a>packageImportJob_createdTime</a> - When the job was created.
--   
--   <a>$sel:statusMessage:PackageImportJob'</a>,
--   <a>packageImportJob_statusMessage</a> - The job's status message.
newPackageImportJob :: PackageImportJob

-- | The job's status.
packageImportJob_status :: Lens' PackageImportJob (Maybe PackageImportJobStatus)

-- | The job's type.
packageImportJob_jobType :: Lens' PackageImportJob (Maybe PackageImportJobType)

-- | When the job was updated.
packageImportJob_lastUpdatedTime :: Lens' PackageImportJob (Maybe UTCTime)

-- | The job's ID.
packageImportJob_jobId :: Lens' PackageImportJob (Maybe Text)

-- | When the job was created.
packageImportJob_createdTime :: Lens' PackageImportJob (Maybe UTCTime)

-- | The job's status message.
packageImportJob_statusMessage :: Lens' PackageImportJob (Maybe Text)
instance GHC.Generics.Generic Amazonka.Panorama.Types.PackageImportJob.PackageImportJob
instance GHC.Show.Show Amazonka.Panorama.Types.PackageImportJob.PackageImportJob
instance GHC.Read.Read Amazonka.Panorama.Types.PackageImportJob.PackageImportJob
instance GHC.Classes.Eq Amazonka.Panorama.Types.PackageImportJob.PackageImportJob
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.PackageImportJob.PackageImportJob
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.PackageImportJob.PackageImportJob
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.PackageImportJob.PackageImportJob


module Amazonka.Panorama.Types.PackageListItem

-- | A package summary.
--   
--   <i>See:</i> <a>newPackageListItem</a> smart constructor.
data PackageListItem
PackageListItem' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> PackageListItem

-- | The package's ID.
[$sel:packageId:PackageListItem'] :: PackageListItem -> Maybe Text

-- | The package's ARN.
[$sel:arn:PackageListItem'] :: PackageListItem -> Maybe Text

-- | When the package was created.
[$sel:createdTime:PackageListItem'] :: PackageListItem -> Maybe POSIX

-- | The package's name.
[$sel:packageName:PackageListItem'] :: PackageListItem -> Maybe Text

-- | The package's tags.
[$sel:tags:PackageListItem'] :: PackageListItem -> Maybe (HashMap Text Text)

-- | Create a value of <a>PackageListItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageId:PackageListItem'</a>,
--   <a>packageListItem_packageId</a> - The package's ID.
--   
--   <a>$sel:arn:PackageListItem'</a>, <a>packageListItem_arn</a> - The
--   package's ARN.
--   
--   <a>$sel:createdTime:PackageListItem'</a>,
--   <a>packageListItem_createdTime</a> - When the package was created.
--   
--   <a>$sel:packageName:PackageListItem'</a>,
--   <a>packageListItem_packageName</a> - The package's name.
--   
--   <a>$sel:tags:PackageListItem'</a>, <a>packageListItem_tags</a> - The
--   package's tags.
newPackageListItem :: PackageListItem

-- | The package's ID.
packageListItem_packageId :: Lens' PackageListItem (Maybe Text)

-- | The package's ARN.
packageListItem_arn :: Lens' PackageListItem (Maybe Text)

-- | When the package was created.
packageListItem_createdTime :: Lens' PackageListItem (Maybe UTCTime)

-- | The package's name.
packageListItem_packageName :: Lens' PackageListItem (Maybe Text)

-- | The package's tags.
packageListItem_tags :: Lens' PackageListItem (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.Panorama.Types.PackageListItem.PackageListItem
instance GHC.Show.Show Amazonka.Panorama.Types.PackageListItem.PackageListItem
instance GHC.Read.Read Amazonka.Panorama.Types.PackageListItem.PackageListItem
instance GHC.Classes.Eq Amazonka.Panorama.Types.PackageListItem.PackageListItem
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.PackageListItem.PackageListItem
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.PackageListItem.PackageListItem
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.PackageListItem.PackageListItem


module Amazonka.Panorama.Types.PackageObject

-- | A package object.
--   
--   <i>See:</i> <a>newPackageObject</a> smart constructor.
data PackageObject
PackageObject' :: Text -> Text -> Text -> PackageObject

-- | The object's name.
[$sel:name:PackageObject'] :: PackageObject -> Text

-- | The object's package version.
[$sel:packageVersion:PackageObject'] :: PackageObject -> Text

-- | The object's patch version.
[$sel:patchVersion:PackageObject'] :: PackageObject -> Text

-- | Create a value of <a>PackageObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:PackageObject'</a>, <a>packageObject_name</a> - The
--   object's name.
--   
--   <a>$sel:packageVersion:PackageObject'</a>,
--   <a>packageObject_packageVersion</a> - The object's package version.
--   
--   <a>$sel:patchVersion:PackageObject'</a>,
--   <a>packageObject_patchVersion</a> - The object's patch version.
newPackageObject :: Text -> Text -> Text -> PackageObject

-- | The object's name.
packageObject_name :: Lens' PackageObject Text

-- | The object's package version.
packageObject_packageVersion :: Lens' PackageObject Text

-- | The object's patch version.
packageObject_patchVersion :: Lens' PackageObject Text
instance GHC.Generics.Generic Amazonka.Panorama.Types.PackageObject.PackageObject
instance GHC.Show.Show Amazonka.Panorama.Types.PackageObject.PackageObject
instance GHC.Read.Read Amazonka.Panorama.Types.PackageObject.PackageObject
instance GHC.Classes.Eq Amazonka.Panorama.Types.PackageObject.PackageObject
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.PackageObject.PackageObject
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.PackageObject.PackageObject
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.PackageObject.PackageObject


module Amazonka.Panorama.Types.PackageVersionOutputConfig

-- | A package version output configuration.
--   
--   <i>See:</i> <a>newPackageVersionOutputConfig</a> smart constructor.
data PackageVersionOutputConfig
PackageVersionOutputConfig' :: Maybe Bool -> Text -> Text -> PackageVersionOutputConfig

-- | Indicates that the version is recommended for all users.
[$sel:markLatest:PackageVersionOutputConfig'] :: PackageVersionOutputConfig -> Maybe Bool

-- | The output's package name.
[$sel:packageName:PackageVersionOutputConfig'] :: PackageVersionOutputConfig -> Text

-- | The output's package version.
[$sel:packageVersion:PackageVersionOutputConfig'] :: PackageVersionOutputConfig -> Text

-- | Create a value of <a>PackageVersionOutputConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:markLatest:PackageVersionOutputConfig'</a>,
--   <a>packageVersionOutputConfig_markLatest</a> - Indicates that the
--   version is recommended for all users.
--   
--   <a>$sel:packageName:PackageVersionOutputConfig'</a>,
--   <a>packageVersionOutputConfig_packageName</a> - The output's package
--   name.
--   
--   <a>$sel:packageVersion:PackageVersionOutputConfig'</a>,
--   <a>packageVersionOutputConfig_packageVersion</a> - The output's
--   package version.
newPackageVersionOutputConfig :: Text -> Text -> PackageVersionOutputConfig

-- | Indicates that the version is recommended for all users.
packageVersionOutputConfig_markLatest :: Lens' PackageVersionOutputConfig (Maybe Bool)

-- | The output's package name.
packageVersionOutputConfig_packageName :: Lens' PackageVersionOutputConfig Text

-- | The output's package version.
packageVersionOutputConfig_packageVersion :: Lens' PackageVersionOutputConfig Text
instance GHC.Generics.Generic Amazonka.Panorama.Types.PackageVersionOutputConfig.PackageVersionOutputConfig
instance GHC.Show.Show Amazonka.Panorama.Types.PackageVersionOutputConfig.PackageVersionOutputConfig
instance GHC.Read.Read Amazonka.Panorama.Types.PackageVersionOutputConfig.PackageVersionOutputConfig
instance GHC.Classes.Eq Amazonka.Panorama.Types.PackageVersionOutputConfig.PackageVersionOutputConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.PackageVersionOutputConfig.PackageVersionOutputConfig
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.PackageVersionOutputConfig.PackageVersionOutputConfig
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.PackageVersionOutputConfig.PackageVersionOutputConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.PackageVersionOutputConfig.PackageVersionOutputConfig


module Amazonka.Panorama.Types.PackageImportJobOutputConfig

-- | An output configuration for a package import job.
--   
--   <i>See:</i> <a>newPackageImportJobOutputConfig</a> smart constructor.
data PackageImportJobOutputConfig
PackageImportJobOutputConfig' :: Maybe PackageVersionOutputConfig -> PackageImportJobOutputConfig

-- | The package version's output configuration.
[$sel:packageVersionOutputConfig:PackageImportJobOutputConfig'] :: PackageImportJobOutputConfig -> Maybe PackageVersionOutputConfig

-- | Create a value of <a>PackageImportJobOutputConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageVersionOutputConfig:PackageImportJobOutputConfig'</a>,
--   <a>packageImportJobOutputConfig_packageVersionOutputConfig</a> - The
--   package version's output configuration.
newPackageImportJobOutputConfig :: PackageImportJobOutputConfig

-- | The package version's output configuration.
packageImportJobOutputConfig_packageVersionOutputConfig :: Lens' PackageImportJobOutputConfig (Maybe PackageVersionOutputConfig)
instance GHC.Generics.Generic Amazonka.Panorama.Types.PackageImportJobOutputConfig.PackageImportJobOutputConfig
instance GHC.Show.Show Amazonka.Panorama.Types.PackageImportJobOutputConfig.PackageImportJobOutputConfig
instance GHC.Read.Read Amazonka.Panorama.Types.PackageImportJobOutputConfig.PackageImportJobOutputConfig
instance GHC.Classes.Eq Amazonka.Panorama.Types.PackageImportJobOutputConfig.PackageImportJobOutputConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.PackageImportJobOutputConfig.PackageImportJobOutputConfig
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.PackageImportJobOutputConfig.PackageImportJobOutputConfig
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.PackageImportJobOutputConfig.PackageImportJobOutputConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.PackageImportJobOutputConfig.PackageImportJobOutputConfig


module Amazonka.Panorama.Types.PackageVersionStatus
newtype PackageVersionStatus
PackageVersionStatus' :: Text -> PackageVersionStatus
[fromPackageVersionStatus] :: PackageVersionStatus -> Text
pattern PackageVersionStatus_DELETING :: PackageVersionStatus
pattern PackageVersionStatus_FAILED :: PackageVersionStatus
pattern PackageVersionStatus_REGISTER_COMPLETED :: PackageVersionStatus
pattern PackageVersionStatus_REGISTER_PENDING :: PackageVersionStatus
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance GHC.Generics.Generic Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance GHC.Classes.Ord Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance GHC.Classes.Eq Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance GHC.Read.Read Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus
instance GHC.Show.Show Amazonka.Panorama.Types.PackageVersionStatus.PackageVersionStatus


module Amazonka.Panorama.Types.PortType
newtype PortType
PortType' :: Text -> PortType
[fromPortType] :: PortType -> Text
pattern PortType_BOOLEAN :: PortType
pattern PortType_FLOAT32 :: PortType
pattern PortType_INT32 :: PortType
pattern PortType_MEDIA :: PortType
pattern PortType_STRING :: PortType
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.PortType.PortType
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.PortType.PortType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.PortType.PortType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.PortType.PortType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.PortType.PortType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.PortType.PortType
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.PortType.PortType
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.PortType.PortType
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.PortType.PortType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.PortType.PortType
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.PortType.PortType
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.PortType.PortType
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.PortType.PortType
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.PortType.PortType
instance GHC.Generics.Generic Amazonka.Panorama.Types.PortType.PortType
instance GHC.Classes.Ord Amazonka.Panorama.Types.PortType.PortType
instance GHC.Classes.Eq Amazonka.Panorama.Types.PortType.PortType
instance GHC.Read.Read Amazonka.Panorama.Types.PortType.PortType
instance GHC.Show.Show Amazonka.Panorama.Types.PortType.PortType


module Amazonka.Panorama.Types.NodeOutputPort

-- | A node output port.
--   
--   <i>See:</i> <a>newNodeOutputPort</a> smart constructor.
data NodeOutputPort
NodeOutputPort' :: Maybe Text -> Maybe PortType -> Maybe Text -> NodeOutputPort

-- | The output port's name.
[$sel:name:NodeOutputPort'] :: NodeOutputPort -> Maybe Text

-- | The output port's type.
[$sel:type':NodeOutputPort'] :: NodeOutputPort -> Maybe PortType

-- | The output port's description.
[$sel:description:NodeOutputPort'] :: NodeOutputPort -> Maybe Text

-- | Create a value of <a>NodeOutputPort</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:NodeOutputPort'</a>, <a>nodeOutputPort_name</a> - The
--   output port's name.
--   
--   <a>$sel:type':NodeOutputPort'</a>, <a>nodeOutputPort_type</a> - The
--   output port's type.
--   
--   <a>$sel:description:NodeOutputPort'</a>,
--   <a>nodeOutputPort_description</a> - The output port's description.
newNodeOutputPort :: NodeOutputPort

-- | The output port's name.
nodeOutputPort_name :: Lens' NodeOutputPort (Maybe Text)

-- | The output port's type.
nodeOutputPort_type :: Lens' NodeOutputPort (Maybe PortType)

-- | The output port's description.
nodeOutputPort_description :: Lens' NodeOutputPort (Maybe Text)
instance GHC.Generics.Generic Amazonka.Panorama.Types.NodeOutputPort.NodeOutputPort
instance GHC.Show.Show Amazonka.Panorama.Types.NodeOutputPort.NodeOutputPort
instance GHC.Read.Read Amazonka.Panorama.Types.NodeOutputPort.NodeOutputPort
instance GHC.Classes.Eq Amazonka.Panorama.Types.NodeOutputPort.NodeOutputPort
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.NodeOutputPort.NodeOutputPort
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.NodeOutputPort.NodeOutputPort
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.NodeOutputPort.NodeOutputPort


module Amazonka.Panorama.Types.NodeInputPort

-- | A node input port.
--   
--   <i>See:</i> <a>newNodeInputPort</a> smart constructor.
data NodeInputPort
NodeInputPort' :: Maybe Int -> Maybe Text -> Maybe Text -> Maybe PortType -> Maybe Text -> NodeInputPort

-- | The input port's max connections.
[$sel:maxConnections:NodeInputPort'] :: NodeInputPort -> Maybe Int

-- | The input port's name.
[$sel:name:NodeInputPort'] :: NodeInputPort -> Maybe Text

-- | The input port's default value.
[$sel:defaultValue:NodeInputPort'] :: NodeInputPort -> Maybe Text

-- | The input port's type.
[$sel:type':NodeInputPort'] :: NodeInputPort -> Maybe PortType

-- | The input port's description.
[$sel:description:NodeInputPort'] :: NodeInputPort -> Maybe Text

-- | Create a value of <a>NodeInputPort</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConnections:NodeInputPort'</a>,
--   <a>nodeInputPort_maxConnections</a> - The input port's max
--   connections.
--   
--   <a>$sel:name:NodeInputPort'</a>, <a>nodeInputPort_name</a> - The input
--   port's name.
--   
--   <a>$sel:defaultValue:NodeInputPort'</a>,
--   <a>nodeInputPort_defaultValue</a> - The input port's default value.
--   
--   <a>$sel:type':NodeInputPort'</a>, <a>nodeInputPort_type</a> - The
--   input port's type.
--   
--   <a>$sel:description:NodeInputPort'</a>,
--   <a>nodeInputPort_description</a> - The input port's description.
newNodeInputPort :: NodeInputPort

-- | The input port's max connections.
nodeInputPort_maxConnections :: Lens' NodeInputPort (Maybe Int)

-- | The input port's name.
nodeInputPort_name :: Lens' NodeInputPort (Maybe Text)

-- | The input port's default value.
nodeInputPort_defaultValue :: Lens' NodeInputPort (Maybe Text)

-- | The input port's type.
nodeInputPort_type :: Lens' NodeInputPort (Maybe PortType)

-- | The input port's description.
nodeInputPort_description :: Lens' NodeInputPort (Maybe Text)
instance GHC.Generics.Generic Amazonka.Panorama.Types.NodeInputPort.NodeInputPort
instance GHC.Show.Show Amazonka.Panorama.Types.NodeInputPort.NodeInputPort
instance GHC.Read.Read Amazonka.Panorama.Types.NodeInputPort.NodeInputPort
instance GHC.Classes.Eq Amazonka.Panorama.Types.NodeInputPort.NodeInputPort
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.NodeInputPort.NodeInputPort
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.NodeInputPort.NodeInputPort
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.NodeInputPort.NodeInputPort


module Amazonka.Panorama.Types.NodeInterface

-- | A node interface.
--   
--   <i>See:</i> <a>newNodeInterface</a> smart constructor.
data NodeInterface
NodeInterface' :: [NodeInputPort] -> [NodeOutputPort] -> NodeInterface

-- | The node interface's inputs.
[$sel:inputs:NodeInterface'] :: NodeInterface -> [NodeInputPort]

-- | The node interface's outputs.
[$sel:outputs:NodeInterface'] :: NodeInterface -> [NodeOutputPort]

-- | Create a value of <a>NodeInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputs:NodeInterface'</a>, <a>nodeInterface_inputs</a> - The
--   node interface's inputs.
--   
--   <a>$sel:outputs:NodeInterface'</a>, <a>nodeInterface_outputs</a> - The
--   node interface's outputs.
newNodeInterface :: NodeInterface

-- | The node interface's inputs.
nodeInterface_inputs :: Lens' NodeInterface [NodeInputPort]

-- | The node interface's outputs.
nodeInterface_outputs :: Lens' NodeInterface [NodeOutputPort]
instance GHC.Generics.Generic Amazonka.Panorama.Types.NodeInterface.NodeInterface
instance GHC.Show.Show Amazonka.Panorama.Types.NodeInterface.NodeInterface
instance GHC.Read.Read Amazonka.Panorama.Types.NodeInterface.NodeInterface
instance GHC.Classes.Eq Amazonka.Panorama.Types.NodeInterface.NodeInterface
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.NodeInterface.NodeInterface
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.NodeInterface.NodeInterface
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.NodeInterface.NodeInterface


module Amazonka.Panorama.Types.S3Location

-- | A location in Amazon S3.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Text -> Text -> S3Location

-- | The bucket's Region.
[$sel:region:S3Location'] :: S3Location -> Maybe Text

-- | A bucket name.
[$sel:bucketName:S3Location'] :: S3Location -> Text

-- | An object key.
[$sel:objectKey:S3Location'] :: S3Location -> Text

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:region:S3Location'</a>, <a>s3Location_region</a> - The
--   bucket's Region.
--   
--   <a>$sel:bucketName:S3Location'</a>, <a>s3Location_bucketName</a> - A
--   bucket name.
--   
--   <a>$sel:objectKey:S3Location'</a>, <a>s3Location_objectKey</a> - An
--   object key.
newS3Location :: Text -> Text -> S3Location

-- | The bucket's Region.
s3Location_region :: Lens' S3Location (Maybe Text)

-- | A bucket name.
s3Location_bucketName :: Lens' S3Location Text

-- | An object key.
s3Location_objectKey :: Lens' S3Location Text
instance GHC.Generics.Generic Amazonka.Panorama.Types.S3Location.S3Location
instance GHC.Show.Show Amazonka.Panorama.Types.S3Location.S3Location
instance GHC.Read.Read Amazonka.Panorama.Types.S3Location.S3Location
instance GHC.Classes.Eq Amazonka.Panorama.Types.S3Location.S3Location
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.S3Location.S3Location
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.S3Location.S3Location
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.S3Location.S3Location
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.S3Location.S3Location


module Amazonka.Panorama.Types.PackageVersionInputConfig

-- | A package version input configuration.
--   
--   <i>See:</i> <a>newPackageVersionInputConfig</a> smart constructor.
data PackageVersionInputConfig
PackageVersionInputConfig' :: S3Location -> PackageVersionInputConfig

-- | A location in Amazon S3.
[$sel:s3Location:PackageVersionInputConfig'] :: PackageVersionInputConfig -> S3Location

-- | Create a value of <a>PackageVersionInputConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Location:PackageVersionInputConfig'</a>,
--   <a>packageVersionInputConfig_s3Location</a> - A location in Amazon S3.
newPackageVersionInputConfig :: S3Location -> PackageVersionInputConfig

-- | A location in Amazon S3.
packageVersionInputConfig_s3Location :: Lens' PackageVersionInputConfig S3Location
instance GHC.Generics.Generic Amazonka.Panorama.Types.PackageVersionInputConfig.PackageVersionInputConfig
instance GHC.Show.Show Amazonka.Panorama.Types.PackageVersionInputConfig.PackageVersionInputConfig
instance GHC.Read.Read Amazonka.Panorama.Types.PackageVersionInputConfig.PackageVersionInputConfig
instance GHC.Classes.Eq Amazonka.Panorama.Types.PackageVersionInputConfig.PackageVersionInputConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.PackageVersionInputConfig.PackageVersionInputConfig
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.PackageVersionInputConfig.PackageVersionInputConfig
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.PackageVersionInputConfig.PackageVersionInputConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.PackageVersionInputConfig.PackageVersionInputConfig


module Amazonka.Panorama.Types.PackageImportJobInputConfig

-- | A configuration for a package import job.
--   
--   <i>See:</i> <a>newPackageImportJobInputConfig</a> smart constructor.
data PackageImportJobInputConfig
PackageImportJobInputConfig' :: Maybe PackageVersionInputConfig -> PackageImportJobInputConfig

-- | The package version's input configuration.
[$sel:packageVersionInputConfig:PackageImportJobInputConfig'] :: PackageImportJobInputConfig -> Maybe PackageVersionInputConfig

-- | Create a value of <a>PackageImportJobInputConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageVersionInputConfig:PackageImportJobInputConfig'</a>,
--   <a>packageImportJobInputConfig_packageVersionInputConfig</a> - The
--   package version's input configuration.
newPackageImportJobInputConfig :: PackageImportJobInputConfig

-- | The package version's input configuration.
packageImportJobInputConfig_packageVersionInputConfig :: Lens' PackageImportJobInputConfig (Maybe PackageVersionInputConfig)
instance GHC.Generics.Generic Amazonka.Panorama.Types.PackageImportJobInputConfig.PackageImportJobInputConfig
instance GHC.Show.Show Amazonka.Panorama.Types.PackageImportJobInputConfig.PackageImportJobInputConfig
instance GHC.Read.Read Amazonka.Panorama.Types.PackageImportJobInputConfig.PackageImportJobInputConfig
instance GHC.Classes.Eq Amazonka.Panorama.Types.PackageImportJobInputConfig.PackageImportJobInputConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.PackageImportJobInputConfig.PackageImportJobInputConfig
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.PackageImportJobInputConfig.PackageImportJobInputConfig
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.PackageImportJobInputConfig.PackageImportJobInputConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.PackageImportJobInputConfig.PackageImportJobInputConfig


module Amazonka.Panorama.Types.StaticIpConnectionInfo

-- | A static IP configuration.
--   
--   <i>See:</i> <a>newStaticIpConnectionInfo</a> smart constructor.
data StaticIpConnectionInfo
StaticIpConnectionInfo' :: Text -> Text -> [Text] -> Text -> StaticIpConnectionInfo

-- | The connection's IP address.
[$sel:ipAddress:StaticIpConnectionInfo'] :: StaticIpConnectionInfo -> Text

-- | The connection's DNS mask.
[$sel:mask:StaticIpConnectionInfo'] :: StaticIpConnectionInfo -> Text

-- | The connection's DNS address.
[$sel:dns:StaticIpConnectionInfo'] :: StaticIpConnectionInfo -> [Text]

-- | The connection's default gateway.
[$sel:defaultGateway:StaticIpConnectionInfo'] :: StaticIpConnectionInfo -> Text

-- | Create a value of <a>StaticIpConnectionInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:StaticIpConnectionInfo'</a>,
--   <a>staticIpConnectionInfo_ipAddress</a> - The connection's IP address.
--   
--   <a>$sel:mask:StaticIpConnectionInfo'</a>,
--   <a>staticIpConnectionInfo_mask</a> - The connection's DNS mask.
--   
--   <a>$sel:dns:StaticIpConnectionInfo'</a>,
--   <a>staticIpConnectionInfo_dns</a> - The connection's DNS address.
--   
--   <a>$sel:defaultGateway:StaticIpConnectionInfo'</a>,
--   <a>staticIpConnectionInfo_defaultGateway</a> - The connection's
--   default gateway.
newStaticIpConnectionInfo :: Text -> Text -> Text -> StaticIpConnectionInfo

-- | The connection's IP address.
staticIpConnectionInfo_ipAddress :: Lens' StaticIpConnectionInfo Text

-- | The connection's DNS mask.
staticIpConnectionInfo_mask :: Lens' StaticIpConnectionInfo Text

-- | The connection's DNS address.
staticIpConnectionInfo_dns :: Lens' StaticIpConnectionInfo [Text]

-- | The connection's default gateway.
staticIpConnectionInfo_defaultGateway :: Lens' StaticIpConnectionInfo Text
instance GHC.Generics.Generic Amazonka.Panorama.Types.StaticIpConnectionInfo.StaticIpConnectionInfo
instance GHC.Show.Show Amazonka.Panorama.Types.StaticIpConnectionInfo.StaticIpConnectionInfo
instance GHC.Read.Read Amazonka.Panorama.Types.StaticIpConnectionInfo.StaticIpConnectionInfo
instance GHC.Classes.Eq Amazonka.Panorama.Types.StaticIpConnectionInfo.StaticIpConnectionInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.StaticIpConnectionInfo.StaticIpConnectionInfo
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.StaticIpConnectionInfo.StaticIpConnectionInfo
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.StaticIpConnectionInfo.StaticIpConnectionInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.StaticIpConnectionInfo.StaticIpConnectionInfo


module Amazonka.Panorama.Types.EthernetPayload

-- | A device's network configuration.
--   
--   <i>See:</i> <a>newEthernetPayload</a> smart constructor.
data EthernetPayload
EthernetPayload' :: Maybe StaticIpConnectionInfo -> ConnectionType -> EthernetPayload

-- | Network configuration for a static IP connection.
[$sel:staticIpConnectionInfo:EthernetPayload'] :: EthernetPayload -> Maybe StaticIpConnectionInfo

-- | How the device gets an IP address.
[$sel:connectionType:EthernetPayload'] :: EthernetPayload -> ConnectionType

-- | Create a value of <a>EthernetPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:staticIpConnectionInfo:EthernetPayload'</a>,
--   <a>ethernetPayload_staticIpConnectionInfo</a> - Network configuration
--   for a static IP connection.
--   
--   <a>$sel:connectionType:EthernetPayload'</a>,
--   <a>ethernetPayload_connectionType</a> - How the device gets an IP
--   address.
newEthernetPayload :: ConnectionType -> EthernetPayload

-- | Network configuration for a static IP connection.
ethernetPayload_staticIpConnectionInfo :: Lens' EthernetPayload (Maybe StaticIpConnectionInfo)

-- | How the device gets an IP address.
ethernetPayload_connectionType :: Lens' EthernetPayload ConnectionType
instance GHC.Generics.Generic Amazonka.Panorama.Types.EthernetPayload.EthernetPayload
instance GHC.Show.Show Amazonka.Panorama.Types.EthernetPayload.EthernetPayload
instance GHC.Read.Read Amazonka.Panorama.Types.EthernetPayload.EthernetPayload
instance GHC.Classes.Eq Amazonka.Panorama.Types.EthernetPayload.EthernetPayload
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.EthernetPayload.EthernetPayload
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.EthernetPayload.EthernetPayload
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.EthernetPayload.EthernetPayload
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.EthernetPayload.EthernetPayload


module Amazonka.Panorama.Types.NetworkPayload

-- | The network configuration for a device.
--   
--   <i>See:</i> <a>newNetworkPayload</a> smart constructor.
data NetworkPayload
NetworkPayload' :: Maybe EthernetPayload -> Maybe EthernetPayload -> NetworkPayload

-- | Settings for Ethernet port 1.
[$sel:ethernet1:NetworkPayload'] :: NetworkPayload -> Maybe EthernetPayload

-- | Settings for Ethernet port 0.
[$sel:ethernet0:NetworkPayload'] :: NetworkPayload -> Maybe EthernetPayload

-- | Create a value of <a>NetworkPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ethernet1:NetworkPayload'</a>, <a>networkPayload_ethernet1</a>
--   - Settings for Ethernet port 1.
--   
--   <a>$sel:ethernet0:NetworkPayload'</a>, <a>networkPayload_ethernet0</a>
--   - Settings for Ethernet port 0.
newNetworkPayload :: NetworkPayload

-- | Settings for Ethernet port 1.
networkPayload_ethernet1 :: Lens' NetworkPayload (Maybe EthernetPayload)

-- | Settings for Ethernet port 0.
networkPayload_ethernet0 :: Lens' NetworkPayload (Maybe EthernetPayload)
instance GHC.Generics.Generic Amazonka.Panorama.Types.NetworkPayload.NetworkPayload
instance GHC.Show.Show Amazonka.Panorama.Types.NetworkPayload.NetworkPayload
instance GHC.Read.Read Amazonka.Panorama.Types.NetworkPayload.NetworkPayload
instance GHC.Classes.Eq Amazonka.Panorama.Types.NetworkPayload.NetworkPayload
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.NetworkPayload.NetworkPayload
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.NetworkPayload.NetworkPayload
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.NetworkPayload.NetworkPayload
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.NetworkPayload.NetworkPayload


module Amazonka.Panorama.Types.StatusFilter
newtype StatusFilter
StatusFilter' :: Text -> StatusFilter
[fromStatusFilter] :: StatusFilter -> Text
pattern StatusFilter_DEPLOYMENT_ERROR :: StatusFilter
pattern StatusFilter_DEPLOYMENT_SUCCEEDED :: StatusFilter
pattern StatusFilter_PROCESSING_DEPLOYMENT :: StatusFilter
pattern StatusFilter_PROCESSING_REMOVAL :: StatusFilter
pattern StatusFilter_REMOVAL_FAILED :: StatusFilter
pattern StatusFilter_REMOVAL_SUCCEEDED :: StatusFilter
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance GHC.Generics.Generic Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance GHC.Classes.Ord Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance GHC.Classes.Eq Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance GHC.Read.Read Amazonka.Panorama.Types.StatusFilter.StatusFilter
instance GHC.Show.Show Amazonka.Panorama.Types.StatusFilter.StatusFilter


module Amazonka.Panorama.Types.StorageLocation

-- | A storage location.
--   
--   <i>See:</i> <a>newStorageLocation</a> smart constructor.
data StorageLocation
StorageLocation' :: Text -> Text -> Text -> Text -> Text -> StorageLocation

-- | The location's bucket.
[$sel:bucket:StorageLocation'] :: StorageLocation -> Text

-- | The location's repo prefix.
[$sel:repoPrefixLocation:StorageLocation'] :: StorageLocation -> Text

-- | The location's generated prefix.
[$sel:generatedPrefixLocation:StorageLocation'] :: StorageLocation -> Text

-- | The location's binary prefix.
[$sel:binaryPrefixLocation:StorageLocation'] :: StorageLocation -> Text

-- | The location's manifest prefix.
[$sel:manifestPrefixLocation:StorageLocation'] :: StorageLocation -> Text

-- | Create a value of <a>StorageLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:StorageLocation'</a>, <a>storageLocation_bucket</a> -
--   The location's bucket.
--   
--   <a>$sel:repoPrefixLocation:StorageLocation'</a>,
--   <a>storageLocation_repoPrefixLocation</a> - The location's repo
--   prefix.
--   
--   <a>$sel:generatedPrefixLocation:StorageLocation'</a>,
--   <a>storageLocation_generatedPrefixLocation</a> - The location's
--   generated prefix.
--   
--   <a>$sel:binaryPrefixLocation:StorageLocation'</a>,
--   <a>storageLocation_binaryPrefixLocation</a> - The location's binary
--   prefix.
--   
--   <a>$sel:manifestPrefixLocation:StorageLocation'</a>,
--   <a>storageLocation_manifestPrefixLocation</a> - The location's
--   manifest prefix.
newStorageLocation :: Text -> Text -> Text -> Text -> Text -> StorageLocation

-- | The location's bucket.
storageLocation_bucket :: Lens' StorageLocation Text

-- | The location's repo prefix.
storageLocation_repoPrefixLocation :: Lens' StorageLocation Text

-- | The location's generated prefix.
storageLocation_generatedPrefixLocation :: Lens' StorageLocation Text

-- | The location's binary prefix.
storageLocation_binaryPrefixLocation :: Lens' StorageLocation Text

-- | The location's manifest prefix.
storageLocation_manifestPrefixLocation :: Lens' StorageLocation Text
instance GHC.Generics.Generic Amazonka.Panorama.Types.StorageLocation.StorageLocation
instance GHC.Show.Show Amazonka.Panorama.Types.StorageLocation.StorageLocation
instance GHC.Read.Read Amazonka.Panorama.Types.StorageLocation.StorageLocation
instance GHC.Classes.Eq Amazonka.Panorama.Types.StorageLocation.StorageLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.StorageLocation.StorageLocation
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.StorageLocation.StorageLocation
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.StorageLocation.StorageLocation


module Amazonka.Panorama.Types.TemplateType
newtype TemplateType
TemplateType' :: Text -> TemplateType
[fromTemplateType] :: TemplateType -> Text
pattern TemplateType_RTSP_CAMERA_STREAM :: TemplateType
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.TemplateType.TemplateType
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.TemplateType.TemplateType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.TemplateType.TemplateType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.TemplateType.TemplateType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.TemplateType.TemplateType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.TemplateType.TemplateType
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.TemplateType.TemplateType
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.TemplateType.TemplateType
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.TemplateType.TemplateType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.TemplateType.TemplateType
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.TemplateType.TemplateType
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.TemplateType.TemplateType
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.TemplateType.TemplateType
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.TemplateType.TemplateType
instance GHC.Generics.Generic Amazonka.Panorama.Types.TemplateType.TemplateType
instance GHC.Classes.Ord Amazonka.Panorama.Types.TemplateType.TemplateType
instance GHC.Classes.Eq Amazonka.Panorama.Types.TemplateType.TemplateType
instance GHC.Read.Read Amazonka.Panorama.Types.TemplateType.TemplateType
instance GHC.Show.Show Amazonka.Panorama.Types.TemplateType.TemplateType


module Amazonka.Panorama.Types.NodeFromTemplateJob

-- | A job to create a camera stream node.
--   
--   <i>See:</i> <a>newNodeFromTemplateJob</a> smart constructor.
data NodeFromTemplateJob
NodeFromTemplateJob' :: Maybe NodeFromTemplateJobStatus -> Maybe Text -> Maybe POSIX -> Maybe TemplateType -> Maybe Text -> Maybe Text -> NodeFromTemplateJob

-- | The job's status.
[$sel:status:NodeFromTemplateJob'] :: NodeFromTemplateJob -> Maybe NodeFromTemplateJobStatus

-- | The job's ID.
[$sel:jobId:NodeFromTemplateJob'] :: NodeFromTemplateJob -> Maybe Text

-- | When the job was created.
[$sel:createdTime:NodeFromTemplateJob'] :: NodeFromTemplateJob -> Maybe POSIX

-- | The job's template type.
[$sel:templateType:NodeFromTemplateJob'] :: NodeFromTemplateJob -> Maybe TemplateType

-- | The node's name.
[$sel:nodeName:NodeFromTemplateJob'] :: NodeFromTemplateJob -> Maybe Text

-- | The job's status message.
[$sel:statusMessage:NodeFromTemplateJob'] :: NodeFromTemplateJob -> Maybe Text

-- | Create a value of <a>NodeFromTemplateJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_status</a> - The job's status.
--   
--   <a>$sel:jobId:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_jobId</a> - The job's ID.
--   
--   <a>$sel:createdTime:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_createdTime</a> - When the job was created.
--   
--   <a>$sel:templateType:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_templateType</a> - The job's template type.
--   
--   <a>$sel:nodeName:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_nodeName</a> - The node's name.
--   
--   <a>$sel:statusMessage:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_statusMessage</a> - The job's status message.
newNodeFromTemplateJob :: NodeFromTemplateJob

-- | The job's status.
nodeFromTemplateJob_status :: Lens' NodeFromTemplateJob (Maybe NodeFromTemplateJobStatus)

-- | The job's ID.
nodeFromTemplateJob_jobId :: Lens' NodeFromTemplateJob (Maybe Text)

-- | When the job was created.
nodeFromTemplateJob_createdTime :: Lens' NodeFromTemplateJob (Maybe UTCTime)

-- | The job's template type.
nodeFromTemplateJob_templateType :: Lens' NodeFromTemplateJob (Maybe TemplateType)

-- | The node's name.
nodeFromTemplateJob_nodeName :: Lens' NodeFromTemplateJob (Maybe Text)

-- | The job's status message.
nodeFromTemplateJob_statusMessage :: Lens' NodeFromTemplateJob (Maybe Text)
instance GHC.Generics.Generic Amazonka.Panorama.Types.NodeFromTemplateJob.NodeFromTemplateJob
instance GHC.Show.Show Amazonka.Panorama.Types.NodeFromTemplateJob.NodeFromTemplateJob
instance GHC.Read.Read Amazonka.Panorama.Types.NodeFromTemplateJob.NodeFromTemplateJob
instance GHC.Classes.Eq Amazonka.Panorama.Types.NodeFromTemplateJob.NodeFromTemplateJob
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.NodeFromTemplateJob.NodeFromTemplateJob
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.NodeFromTemplateJob.NodeFromTemplateJob
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.NodeFromTemplateJob.NodeFromTemplateJob


module Amazonka.Panorama.Types.UpdateProgress
newtype UpdateProgress
UpdateProgress' :: Text -> UpdateProgress
[fromUpdateProgress] :: UpdateProgress -> Text
pattern UpdateProgress_COMPLETED :: UpdateProgress
pattern UpdateProgress_DOWNLOADING :: UpdateProgress
pattern UpdateProgress_FAILED :: UpdateProgress
pattern UpdateProgress_IN_PROGRESS :: UpdateProgress
pattern UpdateProgress_PENDING :: UpdateProgress
pattern UpdateProgress_REBOOTING :: UpdateProgress
pattern UpdateProgress_VERIFYING :: UpdateProgress
instance Amazonka.Data.XML.ToXML Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Amazonka.Data.XML.FromXML Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Amazonka.Data.Headers.ToHeader Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Amazonka.Data.Log.ToLog Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Amazonka.Data.ByteString.ToByteString Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Amazonka.Data.Text.ToText Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Amazonka.Data.Text.FromText Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Control.DeepSeq.NFData Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance Data.Hashable.Class.Hashable Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance GHC.Generics.Generic Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance GHC.Classes.Ord Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance GHC.Classes.Eq Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance GHC.Read.Read Amazonka.Panorama.Types.UpdateProgress.UpdateProgress
instance GHC.Show.Show Amazonka.Panorama.Types.UpdateProgress.UpdateProgress


module Amazonka.Panorama.Types

-- | API version <tt>2019-07-24</tt> of the Amazon Panorama SDK
--   configuration.
defaultService :: Service

-- | The request contains an invalid parameter value.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requestor does not have permission to access the target action or
--   resource.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target resource is in use.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request would cause a limit to be exceeded.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal error occurred.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ApplicationInstanceHealthStatus
ApplicationInstanceHealthStatus' :: Text -> ApplicationInstanceHealthStatus
[fromApplicationInstanceHealthStatus] :: ApplicationInstanceHealthStatus -> Text
pattern ApplicationInstanceHealthStatus_ERROR :: ApplicationInstanceHealthStatus
pattern ApplicationInstanceHealthStatus_NOT_AVAILABLE :: ApplicationInstanceHealthStatus
pattern ApplicationInstanceHealthStatus_RUNNING :: ApplicationInstanceHealthStatus
newtype ApplicationInstanceStatus
ApplicationInstanceStatus' :: Text -> ApplicationInstanceStatus
[fromApplicationInstanceStatus] :: ApplicationInstanceStatus -> Text
pattern ApplicationInstanceStatus_DEPLOYMENT_ERROR :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_DEPLOYMENT_IN_PROGRESS :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_DEPLOYMENT_PENDING :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_DEPLOYMENT_REQUESTED :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_DEPLOYMENT_SUCCEEDED :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_FAILED :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_IN_PROGRESS :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_PENDING :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_REQUESTED :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_SUCCEEDED :: ApplicationInstanceStatus
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_DHCP :: ConnectionType
pattern ConnectionType_STATIC_IP :: ConnectionType
newtype DeviceConnectionStatus
DeviceConnectionStatus' :: Text -> DeviceConnectionStatus
[fromDeviceConnectionStatus] :: DeviceConnectionStatus -> Text
pattern DeviceConnectionStatus_AWAITING_CREDENTIALS :: DeviceConnectionStatus
pattern DeviceConnectionStatus_ERROR :: DeviceConnectionStatus
pattern DeviceConnectionStatus_NOT_AVAILABLE :: DeviceConnectionStatus
pattern DeviceConnectionStatus_OFFLINE :: DeviceConnectionStatus
pattern DeviceConnectionStatus_ONLINE :: DeviceConnectionStatus
newtype DeviceStatus
DeviceStatus' :: Text -> DeviceStatus
[fromDeviceStatus] :: DeviceStatus -> Text
pattern DeviceStatus_AWAITING_PROVISIONING :: DeviceStatus
pattern DeviceStatus_DELETING :: DeviceStatus
pattern DeviceStatus_ERROR :: DeviceStatus
pattern DeviceStatus_FAILED :: DeviceStatus
pattern DeviceStatus_PENDING :: DeviceStatus
pattern DeviceStatus_SUCCEEDED :: DeviceStatus
newtype DeviceType
DeviceType' :: Text -> DeviceType
[fromDeviceType] :: DeviceType -> Text
pattern DeviceType_PANORAMA_APPLIANCE :: DeviceType
pattern DeviceType_PANORAMA_APPLIANCE_DEVELOPER_KIT :: DeviceType
newtype JobResourceType
JobResourceType' :: Text -> JobResourceType
[fromJobResourceType] :: JobResourceType -> Text
pattern JobResourceType_PACKAGE :: JobResourceType
newtype JobType
JobType' :: Text -> JobType
[fromJobType] :: JobType -> Text
pattern JobType_OTA :: JobType
newtype NetworkConnectionStatus
NetworkConnectionStatus' :: Text -> NetworkConnectionStatus
[fromNetworkConnectionStatus] :: NetworkConnectionStatus -> Text
pattern NetworkConnectionStatus_CONNECTED :: NetworkConnectionStatus
pattern NetworkConnectionStatus_NOT_CONNECTED :: NetworkConnectionStatus
newtype NodeCategory
NodeCategory' :: Text -> NodeCategory
[fromNodeCategory] :: NodeCategory -> Text
pattern NodeCategory_BUSINESS_LOGIC :: NodeCategory
pattern NodeCategory_MEDIA_SINK :: NodeCategory
pattern NodeCategory_MEDIA_SOURCE :: NodeCategory
pattern NodeCategory_ML_MODEL :: NodeCategory
newtype NodeFromTemplateJobStatus
NodeFromTemplateJobStatus' :: Text -> NodeFromTemplateJobStatus
[fromNodeFromTemplateJobStatus] :: NodeFromTemplateJobStatus -> Text
pattern NodeFromTemplateJobStatus_FAILED :: NodeFromTemplateJobStatus
pattern NodeFromTemplateJobStatus_PENDING :: NodeFromTemplateJobStatus
pattern NodeFromTemplateJobStatus_SUCCEEDED :: NodeFromTemplateJobStatus
newtype NodeInstanceStatus
NodeInstanceStatus' :: Text -> NodeInstanceStatus
[fromNodeInstanceStatus] :: NodeInstanceStatus -> Text
pattern NodeInstanceStatus_ERROR :: NodeInstanceStatus
pattern NodeInstanceStatus_NOT_AVAILABLE :: NodeInstanceStatus
pattern NodeInstanceStatus_RUNNING :: NodeInstanceStatus
newtype PackageImportJobStatus
PackageImportJobStatus' :: Text -> PackageImportJobStatus
[fromPackageImportJobStatus] :: PackageImportJobStatus -> Text
pattern PackageImportJobStatus_FAILED :: PackageImportJobStatus
pattern PackageImportJobStatus_PENDING :: PackageImportJobStatus
pattern PackageImportJobStatus_SUCCEEDED :: PackageImportJobStatus
newtype PackageImportJobType
PackageImportJobType' :: Text -> PackageImportJobType
[fromPackageImportJobType] :: PackageImportJobType -> Text
pattern PackageImportJobType_NODE_PACKAGE_VERSION :: PackageImportJobType
newtype PackageVersionStatus
PackageVersionStatus' :: Text -> PackageVersionStatus
[fromPackageVersionStatus] :: PackageVersionStatus -> Text
pattern PackageVersionStatus_DELETING :: PackageVersionStatus
pattern PackageVersionStatus_FAILED :: PackageVersionStatus
pattern PackageVersionStatus_REGISTER_COMPLETED :: PackageVersionStatus
pattern PackageVersionStatus_REGISTER_PENDING :: PackageVersionStatus
newtype PortType
PortType' :: Text -> PortType
[fromPortType] :: PortType -> Text
pattern PortType_BOOLEAN :: PortType
pattern PortType_FLOAT32 :: PortType
pattern PortType_INT32 :: PortType
pattern PortType_MEDIA :: PortType
pattern PortType_STRING :: PortType
newtype StatusFilter
StatusFilter' :: Text -> StatusFilter
[fromStatusFilter] :: StatusFilter -> Text
pattern StatusFilter_DEPLOYMENT_ERROR :: StatusFilter
pattern StatusFilter_DEPLOYMENT_SUCCEEDED :: StatusFilter
pattern StatusFilter_PROCESSING_DEPLOYMENT :: StatusFilter
pattern StatusFilter_PROCESSING_REMOVAL :: StatusFilter
pattern StatusFilter_REMOVAL_FAILED :: StatusFilter
pattern StatusFilter_REMOVAL_SUCCEEDED :: StatusFilter
newtype TemplateType
TemplateType' :: Text -> TemplateType
[fromTemplateType] :: TemplateType -> Text
pattern TemplateType_RTSP_CAMERA_STREAM :: TemplateType
newtype UpdateProgress
UpdateProgress' :: Text -> UpdateProgress
[fromUpdateProgress] :: UpdateProgress -> Text
pattern UpdateProgress_COMPLETED :: UpdateProgress
pattern UpdateProgress_DOWNLOADING :: UpdateProgress
pattern UpdateProgress_FAILED :: UpdateProgress
pattern UpdateProgress_IN_PROGRESS :: UpdateProgress
pattern UpdateProgress_PENDING :: UpdateProgress
pattern UpdateProgress_REBOOTING :: UpdateProgress
pattern UpdateProgress_VERIFYING :: UpdateProgress

-- | An application instance on a device.
--   
--   <i>See:</i> <a>newApplicationInstance</a> smart constructor.
data ApplicationInstance
ApplicationInstance' :: Maybe ApplicationInstanceStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ApplicationInstanceHealthStatus -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ApplicationInstance

-- | The application instance's status.
[$sel:status:ApplicationInstance'] :: ApplicationInstance -> Maybe ApplicationInstanceStatus

-- | The application instance's status description.
[$sel:statusDescription:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | The application instance's ARN.
[$sel:arn:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | When the application instance was created.
[$sel:createdTime:ApplicationInstance'] :: ApplicationInstance -> Maybe POSIX

-- | The device's ID.
[$sel:defaultRuntimeContextDevice:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | The device's name.
[$sel:defaultRuntimeContextDeviceName:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | The application instance's name.
[$sel:name:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | The application instance's health status.
[$sel:healthStatus:ApplicationInstance'] :: ApplicationInstance -> Maybe ApplicationInstanceHealthStatus

-- | The application instance's ID.
[$sel:applicationInstanceId:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | The application instance's description.
[$sel:description:ApplicationInstance'] :: ApplicationInstance -> Maybe Text

-- | The application instance's tags.
[$sel:tags:ApplicationInstance'] :: ApplicationInstance -> Maybe (HashMap Text Text)

-- | Create a value of <a>ApplicationInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ApplicationInstance'</a>,
--   <a>applicationInstance_status</a> - The application instance's status.
--   
--   <a>$sel:statusDescription:ApplicationInstance'</a>,
--   <a>applicationInstance_statusDescription</a> - The application
--   instance's status description.
--   
--   <a>$sel:arn:ApplicationInstance'</a>, <a>applicationInstance_arn</a> -
--   The application instance's ARN.
--   
--   <a>$sel:createdTime:ApplicationInstance'</a>,
--   <a>applicationInstance_createdTime</a> - When the application instance
--   was created.
--   
--   <a>$sel:defaultRuntimeContextDevice:ApplicationInstance'</a>,
--   <a>applicationInstance_defaultRuntimeContextDevice</a> - The device's
--   ID.
--   
--   <a>$sel:defaultRuntimeContextDeviceName:ApplicationInstance'</a>,
--   <a>applicationInstance_defaultRuntimeContextDeviceName</a> - The
--   device's name.
--   
--   <a>$sel:name:ApplicationInstance'</a>, <a>applicationInstance_name</a>
--   - The application instance's name.
--   
--   <a>$sel:healthStatus:ApplicationInstance'</a>,
--   <a>applicationInstance_healthStatus</a> - The application instance's
--   health status.
--   
--   <a>$sel:applicationInstanceId:ApplicationInstance'</a>,
--   <a>applicationInstance_applicationInstanceId</a> - The application
--   instance's ID.
--   
--   <a>$sel:description:ApplicationInstance'</a>,
--   <a>applicationInstance_description</a> - The application instance's
--   description.
--   
--   <a>$sel:tags:ApplicationInstance'</a>, <a>applicationInstance_tags</a>
--   - The application instance's tags.
newApplicationInstance :: ApplicationInstance

-- | The application instance's status.
applicationInstance_status :: Lens' ApplicationInstance (Maybe ApplicationInstanceStatus)

-- | The application instance's status description.
applicationInstance_statusDescription :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's ARN.
applicationInstance_arn :: Lens' ApplicationInstance (Maybe Text)

-- | When the application instance was created.
applicationInstance_createdTime :: Lens' ApplicationInstance (Maybe UTCTime)

-- | The device's ID.
applicationInstance_defaultRuntimeContextDevice :: Lens' ApplicationInstance (Maybe Text)

-- | The device's name.
applicationInstance_defaultRuntimeContextDeviceName :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's name.
applicationInstance_name :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's health status.
applicationInstance_healthStatus :: Lens' ApplicationInstance (Maybe ApplicationInstanceHealthStatus)

-- | The application instance's ID.
applicationInstance_applicationInstanceId :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's description.
applicationInstance_description :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's tags.
applicationInstance_tags :: Lens' ApplicationInstance (Maybe (HashMap Text Text))

-- | A device.
--   
--   <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe POSIX -> Maybe DeviceStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Device

-- | When the device was updated.
[$sel:lastUpdatedTime:Device'] :: Device -> Maybe POSIX

-- | The device's provisioning status.
[$sel:provisioningStatus:Device'] :: Device -> Maybe DeviceStatus

-- | When the device was created.
[$sel:createdTime:Device'] :: Device -> Maybe POSIX

-- | The device's name.
[$sel:name:Device'] :: Device -> Maybe Text

-- | The device's ID.
[$sel:deviceId:Device'] :: Device -> Maybe Text

-- | The device's lease expiration time.
[$sel:leaseExpirationTime:Device'] :: Device -> Maybe POSIX

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Device'</a>, <a>device_lastUpdatedTime</a> -
--   When the device was updated.
--   
--   <a>$sel:provisioningStatus:Device'</a>,
--   <a>device_provisioningStatus</a> - The device's provisioning status.
--   
--   <a>$sel:createdTime:Device'</a>, <a>device_createdTime</a> - When the
--   device was created.
--   
--   <a>$sel:name:Device'</a>, <a>device_name</a> - The device's name.
--   
--   <a>$sel:deviceId:Device'</a>, <a>device_deviceId</a> - The device's
--   ID.
--   
--   <a>$sel:leaseExpirationTime:Device'</a>,
--   <a>device_leaseExpirationTime</a> - The device's lease expiration
--   time.
newDevice :: Device

-- | When the device was updated.
device_lastUpdatedTime :: Lens' Device (Maybe UTCTime)

-- | The device's provisioning status.
device_provisioningStatus :: Lens' Device (Maybe DeviceStatus)

-- | When the device was created.
device_createdTime :: Lens' Device (Maybe UTCTime)

-- | The device's name.
device_name :: Lens' Device (Maybe Text)

-- | The device's ID.
device_deviceId :: Lens' Device (Maybe Text)

-- | The device's lease expiration time.
device_leaseExpirationTime :: Lens' Device (Maybe UTCTime)

-- | A job that runs on a device.
--   
--   <i>See:</i> <a>newDeviceJob</a> smart constructor.
data DeviceJob
DeviceJob' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> DeviceJob

-- | The job's ID.
[$sel:jobId:DeviceJob'] :: DeviceJob -> Maybe Text

-- | When the job was created.
[$sel:createdTime:DeviceJob'] :: DeviceJob -> Maybe POSIX

-- | The name of the target device
[$sel:deviceName:DeviceJob'] :: DeviceJob -> Maybe Text

-- | The ID of the target device.
[$sel:deviceId:DeviceJob'] :: DeviceJob -> Maybe Text

-- | Create a value of <a>DeviceJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DeviceJob'</a>, <a>deviceJob_jobId</a> - The job's ID.
--   
--   <a>$sel:createdTime:DeviceJob'</a>, <a>deviceJob_createdTime</a> -
--   When the job was created.
--   
--   <a>$sel:deviceName:DeviceJob'</a>, <a>deviceJob_deviceName</a> - The
--   name of the target device
--   
--   <a>$sel:deviceId:DeviceJob'</a>, <a>deviceJob_deviceId</a> - The ID of
--   the target device.
newDeviceJob :: DeviceJob

-- | The job's ID.
deviceJob_jobId :: Lens' DeviceJob (Maybe Text)

-- | When the job was created.
deviceJob_createdTime :: Lens' DeviceJob (Maybe UTCTime)

-- | The name of the target device
deviceJob_deviceName :: Lens' DeviceJob (Maybe Text)

-- | The ID of the target device.
deviceJob_deviceId :: Lens' DeviceJob (Maybe Text)

-- | A job's configuration.
--   
--   <i>See:</i> <a>newDeviceJobConfig</a> smart constructor.
data DeviceJobConfig
DeviceJobConfig' :: Maybe OTAJobConfig -> DeviceJobConfig

-- | A configuration for an over-the-air (OTA) upgrade. Required for OTA
--   jobs.
[$sel:oTAJobConfig:DeviceJobConfig'] :: DeviceJobConfig -> Maybe OTAJobConfig

-- | Create a value of <a>DeviceJobConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oTAJobConfig:DeviceJobConfig'</a>,
--   <a>deviceJobConfig_oTAJobConfig</a> - A configuration for an
--   over-the-air (OTA) upgrade. Required for OTA jobs.
newDeviceJobConfig :: DeviceJobConfig

-- | A configuration for an over-the-air (OTA) upgrade. Required for OTA
--   jobs.
deviceJobConfig_oTAJobConfig :: Lens' DeviceJobConfig (Maybe OTAJobConfig)

-- | A device's network configuration.
--   
--   <i>See:</i> <a>newEthernetPayload</a> smart constructor.
data EthernetPayload
EthernetPayload' :: Maybe StaticIpConnectionInfo -> ConnectionType -> EthernetPayload

-- | Network configuration for a static IP connection.
[$sel:staticIpConnectionInfo:EthernetPayload'] :: EthernetPayload -> Maybe StaticIpConnectionInfo

-- | How the device gets an IP address.
[$sel:connectionType:EthernetPayload'] :: EthernetPayload -> ConnectionType

-- | Create a value of <a>EthernetPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:staticIpConnectionInfo:EthernetPayload'</a>,
--   <a>ethernetPayload_staticIpConnectionInfo</a> - Network configuration
--   for a static IP connection.
--   
--   <a>$sel:connectionType:EthernetPayload'</a>,
--   <a>ethernetPayload_connectionType</a> - How the device gets an IP
--   address.
newEthernetPayload :: ConnectionType -> EthernetPayload

-- | Network configuration for a static IP connection.
ethernetPayload_staticIpConnectionInfo :: Lens' EthernetPayload (Maybe StaticIpConnectionInfo)

-- | How the device gets an IP address.
ethernetPayload_connectionType :: Lens' EthernetPayload ConnectionType

-- | A device's Ethernet status.
--   
--   <i>See:</i> <a>newEthernetStatus</a> smart constructor.
data EthernetStatus
EthernetStatus' :: Maybe Text -> Maybe NetworkConnectionStatus -> Maybe Text -> EthernetStatus

-- | The device's IP address.
[$sel:ipAddress:EthernetStatus'] :: EthernetStatus -> Maybe Text

-- | The device's connection status.
[$sel:connectionStatus:EthernetStatus'] :: EthernetStatus -> Maybe NetworkConnectionStatus

-- | The device's physical address.
[$sel:hwAddress:EthernetStatus'] :: EthernetStatus -> Maybe Text

-- | Create a value of <a>EthernetStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:EthernetStatus'</a>, <a>ethernetStatus_ipAddress</a>
--   - The device's IP address.
--   
--   <a>$sel:connectionStatus:EthernetStatus'</a>,
--   <a>ethernetStatus_connectionStatus</a> - The device's connection
--   status.
--   
--   <a>$sel:hwAddress:EthernetStatus'</a>, <a>ethernetStatus_hwAddress</a>
--   - The device's physical address.
newEthernetStatus :: EthernetStatus

-- | The device's IP address.
ethernetStatus_ipAddress :: Lens' EthernetStatus (Maybe Text)

-- | The device's connection status.
ethernetStatus_connectionStatus :: Lens' EthernetStatus (Maybe NetworkConnectionStatus)

-- | The device's physical address.
ethernetStatus_hwAddress :: Lens' EthernetStatus (Maybe Text)

-- | A job for a device.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe Text -> Maybe Text -> Job

-- | The job's ID.
[$sel:jobId:Job'] :: Job -> Maybe Text

-- | The target device's ID.
[$sel:deviceId:Job'] :: Job -> Maybe Text

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:Job'</a>, <a>job_jobId</a> - The job's ID.
--   
--   <a>$sel:deviceId:Job'</a>, <a>job_deviceId</a> - The target device's
--   ID.
newJob :: Job

-- | The job's ID.
job_jobId :: Lens' Job (Maybe Text)

-- | The target device's ID.
job_deviceId :: Lens' Job (Maybe Text)

-- | Tags for a job.
--   
--   <i>See:</i> <a>newJobResourceTags</a> smart constructor.
data JobResourceTags
JobResourceTags' :: JobResourceType -> HashMap Text Text -> JobResourceTags

-- | The job's type.
[$sel:resourceType:JobResourceTags'] :: JobResourceTags -> JobResourceType

-- | The job's tags.
[$sel:tags:JobResourceTags'] :: JobResourceTags -> HashMap Text Text

-- | Create a value of <a>JobResourceTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:JobResourceTags'</a>,
--   <a>jobResourceTags_resourceType</a> - The job's type.
--   
--   <a>$sel:tags:JobResourceTags'</a>, <a>jobResourceTags_tags</a> - The
--   job's tags.
newJobResourceTags :: JobResourceType -> JobResourceTags

-- | The job's type.
jobResourceTags_resourceType :: Lens' JobResourceTags JobResourceType

-- | The job's tags.
jobResourceTags_tags :: Lens' JobResourceTags (HashMap Text Text)

-- | Parameter overrides for an application instance. This is a JSON
--   document that has a single key (<tt>PayloadData</tt>) where the value
--   is an escaped string representation of the overrides document.
--   
--   <i>See:</i> <a>newManifestOverridesPayload</a> smart constructor.
data ManifestOverridesPayload
ManifestOverridesPayload' :: Maybe Text -> ManifestOverridesPayload

-- | The overrides document.
[$sel:payloadData:ManifestOverridesPayload'] :: ManifestOverridesPayload -> Maybe Text

-- | Create a value of <a>ManifestOverridesPayload</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payloadData:ManifestOverridesPayload'</a>,
--   <a>manifestOverridesPayload_payloadData</a> - The overrides document.
newManifestOverridesPayload :: ManifestOverridesPayload

-- | The overrides document.
manifestOverridesPayload_payloadData :: Lens' ManifestOverridesPayload (Maybe Text)

-- | A application verion's manifest file. This is a JSON document that has
--   a single key (<tt>PayloadData</tt>) where the value is an escaped
--   string representation of the application manifest
--   (<tt>graph.json</tt>). This file is located in the <tt>graphs</tt>
--   folder in your application source.
--   
--   <i>See:</i> <a>newManifestPayload</a> smart constructor.
data ManifestPayload
ManifestPayload' :: Maybe Text -> ManifestPayload

-- | The application manifest.
[$sel:payloadData:ManifestPayload'] :: ManifestPayload -> Maybe Text

-- | Create a value of <a>ManifestPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payloadData:ManifestPayload'</a>,
--   <a>manifestPayload_payloadData</a> - The application manifest.
newManifestPayload :: ManifestPayload

-- | The application manifest.
manifestPayload_payloadData :: Lens' ManifestPayload (Maybe Text)

-- | The network configuration for a device.
--   
--   <i>See:</i> <a>newNetworkPayload</a> smart constructor.
data NetworkPayload
NetworkPayload' :: Maybe EthernetPayload -> Maybe EthernetPayload -> NetworkPayload

-- | Settings for Ethernet port 1.
[$sel:ethernet1:NetworkPayload'] :: NetworkPayload -> Maybe EthernetPayload

-- | Settings for Ethernet port 0.
[$sel:ethernet0:NetworkPayload'] :: NetworkPayload -> Maybe EthernetPayload

-- | Create a value of <a>NetworkPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ethernet1:NetworkPayload'</a>, <a>networkPayload_ethernet1</a>
--   - Settings for Ethernet port 1.
--   
--   <a>$sel:ethernet0:NetworkPayload'</a>, <a>networkPayload_ethernet0</a>
--   - Settings for Ethernet port 0.
newNetworkPayload :: NetworkPayload

-- | Settings for Ethernet port 1.
networkPayload_ethernet1 :: Lens' NetworkPayload (Maybe EthernetPayload)

-- | Settings for Ethernet port 0.
networkPayload_ethernet0 :: Lens' NetworkPayload (Maybe EthernetPayload)

-- | The network status of a device.
--   
--   <i>See:</i> <a>newNetworkStatus</a> smart constructor.
data NetworkStatus
NetworkStatus' :: Maybe EthernetStatus -> Maybe EthernetStatus -> NetworkStatus

-- | The status of Ethernet port 1.
[$sel:ethernet1Status:NetworkStatus'] :: NetworkStatus -> Maybe EthernetStatus

-- | The status of Ethernet port 0.
[$sel:ethernet0Status:NetworkStatus'] :: NetworkStatus -> Maybe EthernetStatus

-- | Create a value of <a>NetworkStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ethernet1Status:NetworkStatus'</a>,
--   <a>networkStatus_ethernet1Status</a> - The status of Ethernet port 1.
--   
--   <a>$sel:ethernet0Status:NetworkStatus'</a>,
--   <a>networkStatus_ethernet0Status</a> - The status of Ethernet port 0.
newNetworkStatus :: NetworkStatus

-- | The status of Ethernet port 1.
networkStatus_ethernet1Status :: Lens' NetworkStatus (Maybe EthernetStatus)

-- | The status of Ethernet port 0.
networkStatus_ethernet0Status :: Lens' NetworkStatus (Maybe EthernetStatus)

-- | An application node that represents a camera stream, a model, code, or
--   output.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> NodeCategory -> Text -> Text -> Text -> Text -> POSIX -> Node

-- | The node's ARN.
[$sel:packageArn:Node'] :: Node -> Maybe Text

-- | The account ID of the node's owner.
[$sel:ownerAccount:Node'] :: Node -> Maybe Text

-- | The node's description.
[$sel:description:Node'] :: Node -> Maybe Text

-- | The node's ID.
[$sel:nodeId:Node'] :: Node -> Text

-- | The node's name.
[$sel:name:Node'] :: Node -> Text

-- | The node's category.
[$sel:category:Node'] :: Node -> NodeCategory

-- | The node's package name.
[$sel:packageName:Node'] :: Node -> Text

-- | The node's package ID.
[$sel:packageId:Node'] :: Node -> Text

-- | The node's package version.
[$sel:packageVersion:Node'] :: Node -> Text

-- | The node's patch version.
[$sel:patchVersion:Node'] :: Node -> Text

-- | When the node was created.
[$sel:createdTime:Node'] :: Node -> POSIX

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageArn:Node'</a>, <a>node_packageArn</a> - The node's ARN.
--   
--   <a>$sel:ownerAccount:Node'</a>, <a>node_ownerAccount</a> - The account
--   ID of the node's owner.
--   
--   <a>$sel:description:Node'</a>, <a>node_description</a> - The node's
--   description.
--   
--   <a>$sel:nodeId:Node'</a>, <a>node_nodeId</a> - The node's ID.
--   
--   <a>$sel:name:Node'</a>, <a>node_name</a> - The node's name.
--   
--   <a>$sel:category:Node'</a>, <a>node_category</a> - The node's
--   category.
--   
--   <a>$sel:packageName:Node'</a>, <a>node_packageName</a> - The node's
--   package name.
--   
--   <a>$sel:packageId:Node'</a>, <a>node_packageId</a> - The node's
--   package ID.
--   
--   <a>$sel:packageVersion:Node'</a>, <a>node_packageVersion</a> - The
--   node's package version.
--   
--   <a>$sel:patchVersion:Node'</a>, <a>node_patchVersion</a> - The node's
--   patch version.
--   
--   <a>$sel:createdTime:Node'</a>, <a>node_createdTime</a> - When the node
--   was created.
newNode :: Text -> Text -> NodeCategory -> Text -> Text -> Text -> Text -> UTCTime -> Node

-- | The node's ARN.
node_packageArn :: Lens' Node (Maybe Text)

-- | The account ID of the node's owner.
node_ownerAccount :: Lens' Node (Maybe Text)

-- | The node's description.
node_description :: Lens' Node (Maybe Text)

-- | The node's ID.
node_nodeId :: Lens' Node Text

-- | The node's name.
node_name :: Lens' Node Text

-- | The node's category.
node_category :: Lens' Node NodeCategory

-- | The node's package name.
node_packageName :: Lens' Node Text

-- | The node's package ID.
node_packageId :: Lens' Node Text

-- | The node's package version.
node_packageVersion :: Lens' Node Text

-- | The node's patch version.
node_patchVersion :: Lens' Node Text

-- | When the node was created.
node_createdTime :: Lens' Node UTCTime

-- | A job to create a camera stream node.
--   
--   <i>See:</i> <a>newNodeFromTemplateJob</a> smart constructor.
data NodeFromTemplateJob
NodeFromTemplateJob' :: Maybe NodeFromTemplateJobStatus -> Maybe Text -> Maybe POSIX -> Maybe TemplateType -> Maybe Text -> Maybe Text -> NodeFromTemplateJob

-- | The job's status.
[$sel:status:NodeFromTemplateJob'] :: NodeFromTemplateJob -> Maybe NodeFromTemplateJobStatus

-- | The job's ID.
[$sel:jobId:NodeFromTemplateJob'] :: NodeFromTemplateJob -> Maybe Text

-- | When the job was created.
[$sel:createdTime:NodeFromTemplateJob'] :: NodeFromTemplateJob -> Maybe POSIX

-- | The job's template type.
[$sel:templateType:NodeFromTemplateJob'] :: NodeFromTemplateJob -> Maybe TemplateType

-- | The node's name.
[$sel:nodeName:NodeFromTemplateJob'] :: NodeFromTemplateJob -> Maybe Text

-- | The job's status message.
[$sel:statusMessage:NodeFromTemplateJob'] :: NodeFromTemplateJob -> Maybe Text

-- | Create a value of <a>NodeFromTemplateJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_status</a> - The job's status.
--   
--   <a>$sel:jobId:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_jobId</a> - The job's ID.
--   
--   <a>$sel:createdTime:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_createdTime</a> - When the job was created.
--   
--   <a>$sel:templateType:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_templateType</a> - The job's template type.
--   
--   <a>$sel:nodeName:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_nodeName</a> - The node's name.
--   
--   <a>$sel:statusMessage:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_statusMessage</a> - The job's status message.
newNodeFromTemplateJob :: NodeFromTemplateJob

-- | The job's status.
nodeFromTemplateJob_status :: Lens' NodeFromTemplateJob (Maybe NodeFromTemplateJobStatus)

-- | The job's ID.
nodeFromTemplateJob_jobId :: Lens' NodeFromTemplateJob (Maybe Text)

-- | When the job was created.
nodeFromTemplateJob_createdTime :: Lens' NodeFromTemplateJob (Maybe UTCTime)

-- | The job's template type.
nodeFromTemplateJob_templateType :: Lens' NodeFromTemplateJob (Maybe TemplateType)

-- | The node's name.
nodeFromTemplateJob_nodeName :: Lens' NodeFromTemplateJob (Maybe Text)

-- | The job's status message.
nodeFromTemplateJob_statusMessage :: Lens' NodeFromTemplateJob (Maybe Text)

-- | A node input port.
--   
--   <i>See:</i> <a>newNodeInputPort</a> smart constructor.
data NodeInputPort
NodeInputPort' :: Maybe Int -> Maybe Text -> Maybe Text -> Maybe PortType -> Maybe Text -> NodeInputPort

-- | The input port's max connections.
[$sel:maxConnections:NodeInputPort'] :: NodeInputPort -> Maybe Int

-- | The input port's name.
[$sel:name:NodeInputPort'] :: NodeInputPort -> Maybe Text

-- | The input port's default value.
[$sel:defaultValue:NodeInputPort'] :: NodeInputPort -> Maybe Text

-- | The input port's type.
[$sel:type':NodeInputPort'] :: NodeInputPort -> Maybe PortType

-- | The input port's description.
[$sel:description:NodeInputPort'] :: NodeInputPort -> Maybe Text

-- | Create a value of <a>NodeInputPort</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConnections:NodeInputPort'</a>,
--   <a>nodeInputPort_maxConnections</a> - The input port's max
--   connections.
--   
--   <a>$sel:name:NodeInputPort'</a>, <a>nodeInputPort_name</a> - The input
--   port's name.
--   
--   <a>$sel:defaultValue:NodeInputPort'</a>,
--   <a>nodeInputPort_defaultValue</a> - The input port's default value.
--   
--   <a>$sel:type':NodeInputPort'</a>, <a>nodeInputPort_type</a> - The
--   input port's type.
--   
--   <a>$sel:description:NodeInputPort'</a>,
--   <a>nodeInputPort_description</a> - The input port's description.
newNodeInputPort :: NodeInputPort

-- | The input port's max connections.
nodeInputPort_maxConnections :: Lens' NodeInputPort (Maybe Int)

-- | The input port's name.
nodeInputPort_name :: Lens' NodeInputPort (Maybe Text)

-- | The input port's default value.
nodeInputPort_defaultValue :: Lens' NodeInputPort (Maybe Text)

-- | The input port's type.
nodeInputPort_type :: Lens' NodeInputPort (Maybe PortType)

-- | The input port's description.
nodeInputPort_description :: Lens' NodeInputPort (Maybe Text)

-- | A node instance.
--   
--   <i>See:</i> <a>newNodeInstance</a> smart constructor.
data NodeInstance
NodeInstance' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> NodeInstanceStatus -> NodeInstance

-- | The instance's package name.
[$sel:packageName:NodeInstance'] :: NodeInstance -> Maybe Text

-- | The instance's package version.
[$sel:packageVersion:NodeInstance'] :: NodeInstance -> Maybe Text

-- | The instance's package patch version.
[$sel:packagePatchVersion:NodeInstance'] :: NodeInstance -> Maybe Text

-- | The instance's name.
[$sel:nodeName:NodeInstance'] :: NodeInstance -> Maybe Text

-- | The node's ID.
[$sel:nodeId:NodeInstance'] :: NodeInstance -> Maybe Text

-- | The instance's ID.
[$sel:nodeInstanceId:NodeInstance'] :: NodeInstance -> Text

-- | The instance's current status.
[$sel:currentStatus:NodeInstance'] :: NodeInstance -> NodeInstanceStatus

-- | Create a value of <a>NodeInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageName:NodeInstance'</a>, <a>nodeInstance_packageName</a>
--   - The instance's package name.
--   
--   <a>$sel:packageVersion:NodeInstance'</a>,
--   <a>nodeInstance_packageVersion</a> - The instance's package version.
--   
--   <a>$sel:packagePatchVersion:NodeInstance'</a>,
--   <a>nodeInstance_packagePatchVersion</a> - The instance's package patch
--   version.
--   
--   <a>$sel:nodeName:NodeInstance'</a>, <a>nodeInstance_nodeName</a> - The
--   instance's name.
--   
--   <a>$sel:nodeId:NodeInstance'</a>, <a>nodeInstance_nodeId</a> - The
--   node's ID.
--   
--   <a>$sel:nodeInstanceId:NodeInstance'</a>,
--   <a>nodeInstance_nodeInstanceId</a> - The instance's ID.
--   
--   <a>$sel:currentStatus:NodeInstance'</a>,
--   <a>nodeInstance_currentStatus</a> - The instance's current status.
newNodeInstance :: Text -> NodeInstanceStatus -> NodeInstance

-- | The instance's package name.
nodeInstance_packageName :: Lens' NodeInstance (Maybe Text)

-- | The instance's package version.
nodeInstance_packageVersion :: Lens' NodeInstance (Maybe Text)

-- | The instance's package patch version.
nodeInstance_packagePatchVersion :: Lens' NodeInstance (Maybe Text)

-- | The instance's name.
nodeInstance_nodeName :: Lens' NodeInstance (Maybe Text)

-- | The node's ID.
nodeInstance_nodeId :: Lens' NodeInstance (Maybe Text)

-- | The instance's ID.
nodeInstance_nodeInstanceId :: Lens' NodeInstance Text

-- | The instance's current status.
nodeInstance_currentStatus :: Lens' NodeInstance NodeInstanceStatus

-- | A node interface.
--   
--   <i>See:</i> <a>newNodeInterface</a> smart constructor.
data NodeInterface
NodeInterface' :: [NodeInputPort] -> [NodeOutputPort] -> NodeInterface

-- | The node interface's inputs.
[$sel:inputs:NodeInterface'] :: NodeInterface -> [NodeInputPort]

-- | The node interface's outputs.
[$sel:outputs:NodeInterface'] :: NodeInterface -> [NodeOutputPort]

-- | Create a value of <a>NodeInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputs:NodeInterface'</a>, <a>nodeInterface_inputs</a> - The
--   node interface's inputs.
--   
--   <a>$sel:outputs:NodeInterface'</a>, <a>nodeInterface_outputs</a> - The
--   node interface's outputs.
newNodeInterface :: NodeInterface

-- | The node interface's inputs.
nodeInterface_inputs :: Lens' NodeInterface [NodeInputPort]

-- | The node interface's outputs.
nodeInterface_outputs :: Lens' NodeInterface [NodeOutputPort]

-- | A node output port.
--   
--   <i>See:</i> <a>newNodeOutputPort</a> smart constructor.
data NodeOutputPort
NodeOutputPort' :: Maybe Text -> Maybe PortType -> Maybe Text -> NodeOutputPort

-- | The output port's name.
[$sel:name:NodeOutputPort'] :: NodeOutputPort -> Maybe Text

-- | The output port's type.
[$sel:type':NodeOutputPort'] :: NodeOutputPort -> Maybe PortType

-- | The output port's description.
[$sel:description:NodeOutputPort'] :: NodeOutputPort -> Maybe Text

-- | Create a value of <a>NodeOutputPort</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:NodeOutputPort'</a>, <a>nodeOutputPort_name</a> - The
--   output port's name.
--   
--   <a>$sel:type':NodeOutputPort'</a>, <a>nodeOutputPort_type</a> - The
--   output port's type.
--   
--   <a>$sel:description:NodeOutputPort'</a>,
--   <a>nodeOutputPort_description</a> - The output port's description.
newNodeOutputPort :: NodeOutputPort

-- | The output port's name.
nodeOutputPort_name :: Lens' NodeOutputPort (Maybe Text)

-- | The output port's type.
nodeOutputPort_type :: Lens' NodeOutputPort (Maybe PortType)

-- | The output port's description.
nodeOutputPort_description :: Lens' NodeOutputPort (Maybe Text)

-- | An over-the-air update (OTA) job configuration.
--   
--   <i>See:</i> <a>newOTAJobConfig</a> smart constructor.
data OTAJobConfig
OTAJobConfig' :: Text -> OTAJobConfig

-- | The target version of the device software.
[$sel:imageVersion:OTAJobConfig'] :: OTAJobConfig -> Text

-- | Create a value of <a>OTAJobConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageVersion:OTAJobConfig'</a>,
--   <a>oTAJobConfig_imageVersion</a> - The target version of the device
--   software.
newOTAJobConfig :: Text -> OTAJobConfig

-- | The target version of the device software.
oTAJobConfig_imageVersion :: Lens' OTAJobConfig Text

-- | The location of an output object in Amazon S3.
--   
--   <i>See:</i> <a>newOutPutS3Location</a> smart constructor.
data OutPutS3Location
OutPutS3Location' :: Text -> Text -> OutPutS3Location

-- | The object's bucket.
[$sel:bucketName:OutPutS3Location'] :: OutPutS3Location -> Text

-- | The object's key.
[$sel:objectKey:OutPutS3Location'] :: OutPutS3Location -> Text

-- | Create a value of <a>OutPutS3Location</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketName:OutPutS3Location'</a>,
--   <a>outPutS3Location_bucketName</a> - The object's bucket.
--   
--   <a>$sel:objectKey:OutPutS3Location'</a>,
--   <a>outPutS3Location_objectKey</a> - The object's key.
newOutPutS3Location :: Text -> Text -> OutPutS3Location

-- | The object's bucket.
outPutS3Location_bucketName :: Lens' OutPutS3Location Text

-- | The object's key.
outPutS3Location_objectKey :: Lens' OutPutS3Location Text

-- | A job to import a package version.
--   
--   <i>See:</i> <a>newPackageImportJob</a> smart constructor.
data PackageImportJob
PackageImportJob' :: Maybe PackageImportJobStatus -> Maybe PackageImportJobType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> PackageImportJob

-- | The job's status.
[$sel:status:PackageImportJob'] :: PackageImportJob -> Maybe PackageImportJobStatus

-- | The job's type.
[$sel:jobType:PackageImportJob'] :: PackageImportJob -> Maybe PackageImportJobType

-- | When the job was updated.
[$sel:lastUpdatedTime:PackageImportJob'] :: PackageImportJob -> Maybe POSIX

-- | The job's ID.
[$sel:jobId:PackageImportJob'] :: PackageImportJob -> Maybe Text

-- | When the job was created.
[$sel:createdTime:PackageImportJob'] :: PackageImportJob -> Maybe POSIX

-- | The job's status message.
[$sel:statusMessage:PackageImportJob'] :: PackageImportJob -> Maybe Text

-- | Create a value of <a>PackageImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PackageImportJob'</a>, <a>packageImportJob_status</a> -
--   The job's status.
--   
--   <a>$sel:jobType:PackageImportJob'</a>, <a>packageImportJob_jobType</a>
--   - The job's type.
--   
--   <a>$sel:lastUpdatedTime:PackageImportJob'</a>,
--   <a>packageImportJob_lastUpdatedTime</a> - When the job was updated.
--   
--   <a>$sel:jobId:PackageImportJob'</a>, <a>packageImportJob_jobId</a> -
--   The job's ID.
--   
--   <a>$sel:createdTime:PackageImportJob'</a>,
--   <a>packageImportJob_createdTime</a> - When the job was created.
--   
--   <a>$sel:statusMessage:PackageImportJob'</a>,
--   <a>packageImportJob_statusMessage</a> - The job's status message.
newPackageImportJob :: PackageImportJob

-- | The job's status.
packageImportJob_status :: Lens' PackageImportJob (Maybe PackageImportJobStatus)

-- | The job's type.
packageImportJob_jobType :: Lens' PackageImportJob (Maybe PackageImportJobType)

-- | When the job was updated.
packageImportJob_lastUpdatedTime :: Lens' PackageImportJob (Maybe UTCTime)

-- | The job's ID.
packageImportJob_jobId :: Lens' PackageImportJob (Maybe Text)

-- | When the job was created.
packageImportJob_createdTime :: Lens' PackageImportJob (Maybe UTCTime)

-- | The job's status message.
packageImportJob_statusMessage :: Lens' PackageImportJob (Maybe Text)

-- | A configuration for a package import job.
--   
--   <i>See:</i> <a>newPackageImportJobInputConfig</a> smart constructor.
data PackageImportJobInputConfig
PackageImportJobInputConfig' :: Maybe PackageVersionInputConfig -> PackageImportJobInputConfig

-- | The package version's input configuration.
[$sel:packageVersionInputConfig:PackageImportJobInputConfig'] :: PackageImportJobInputConfig -> Maybe PackageVersionInputConfig

-- | Create a value of <a>PackageImportJobInputConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageVersionInputConfig:PackageImportJobInputConfig'</a>,
--   <a>packageImportJobInputConfig_packageVersionInputConfig</a> - The
--   package version's input configuration.
newPackageImportJobInputConfig :: PackageImportJobInputConfig

-- | The package version's input configuration.
packageImportJobInputConfig_packageVersionInputConfig :: Lens' PackageImportJobInputConfig (Maybe PackageVersionInputConfig)

-- | Results of a package import job.
--   
--   <i>See:</i> <a>newPackageImportJobOutput</a> smart constructor.
data PackageImportJobOutput
PackageImportJobOutput' :: Text -> Text -> Text -> OutPutS3Location -> PackageImportJobOutput

-- | The package's ID.
[$sel:packageId:PackageImportJobOutput'] :: PackageImportJobOutput -> Text

-- | The package's version.
[$sel:packageVersion:PackageImportJobOutput'] :: PackageImportJobOutput -> Text

-- | The package's patch version.
[$sel:patchVersion:PackageImportJobOutput'] :: PackageImportJobOutput -> Text

-- | The package's output location.
[$sel:outputS3Location:PackageImportJobOutput'] :: PackageImportJobOutput -> OutPutS3Location

-- | Create a value of <a>PackageImportJobOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageId:PackageImportJobOutput'</a>,
--   <a>packageImportJobOutput_packageId</a> - The package's ID.
--   
--   <a>$sel:packageVersion:PackageImportJobOutput'</a>,
--   <a>packageImportJobOutput_packageVersion</a> - The package's version.
--   
--   <a>$sel:patchVersion:PackageImportJobOutput'</a>,
--   <a>packageImportJobOutput_patchVersion</a> - The package's patch
--   version.
--   
--   <a>$sel:outputS3Location:PackageImportJobOutput'</a>,
--   <a>packageImportJobOutput_outputS3Location</a> - The package's output
--   location.
newPackageImportJobOutput :: Text -> Text -> Text -> OutPutS3Location -> PackageImportJobOutput

-- | The package's ID.
packageImportJobOutput_packageId :: Lens' PackageImportJobOutput Text

-- | The package's version.
packageImportJobOutput_packageVersion :: Lens' PackageImportJobOutput Text

-- | The package's patch version.
packageImportJobOutput_patchVersion :: Lens' PackageImportJobOutput Text

-- | The package's output location.
packageImportJobOutput_outputS3Location :: Lens' PackageImportJobOutput OutPutS3Location

-- | An output configuration for a package import job.
--   
--   <i>See:</i> <a>newPackageImportJobOutputConfig</a> smart constructor.
data PackageImportJobOutputConfig
PackageImportJobOutputConfig' :: Maybe PackageVersionOutputConfig -> PackageImportJobOutputConfig

-- | The package version's output configuration.
[$sel:packageVersionOutputConfig:PackageImportJobOutputConfig'] :: PackageImportJobOutputConfig -> Maybe PackageVersionOutputConfig

-- | Create a value of <a>PackageImportJobOutputConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageVersionOutputConfig:PackageImportJobOutputConfig'</a>,
--   <a>packageImportJobOutputConfig_packageVersionOutputConfig</a> - The
--   package version's output configuration.
newPackageImportJobOutputConfig :: PackageImportJobOutputConfig

-- | The package version's output configuration.
packageImportJobOutputConfig_packageVersionOutputConfig :: Lens' PackageImportJobOutputConfig (Maybe PackageVersionOutputConfig)

-- | A package summary.
--   
--   <i>See:</i> <a>newPackageListItem</a> smart constructor.
data PackageListItem
PackageListItem' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> PackageListItem

-- | The package's ID.
[$sel:packageId:PackageListItem'] :: PackageListItem -> Maybe Text

-- | The package's ARN.
[$sel:arn:PackageListItem'] :: PackageListItem -> Maybe Text

-- | When the package was created.
[$sel:createdTime:PackageListItem'] :: PackageListItem -> Maybe POSIX

-- | The package's name.
[$sel:packageName:PackageListItem'] :: PackageListItem -> Maybe Text

-- | The package's tags.
[$sel:tags:PackageListItem'] :: PackageListItem -> Maybe (HashMap Text Text)

-- | Create a value of <a>PackageListItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageId:PackageListItem'</a>,
--   <a>packageListItem_packageId</a> - The package's ID.
--   
--   <a>$sel:arn:PackageListItem'</a>, <a>packageListItem_arn</a> - The
--   package's ARN.
--   
--   <a>$sel:createdTime:PackageListItem'</a>,
--   <a>packageListItem_createdTime</a> - When the package was created.
--   
--   <a>$sel:packageName:PackageListItem'</a>,
--   <a>packageListItem_packageName</a> - The package's name.
--   
--   <a>$sel:tags:PackageListItem'</a>, <a>packageListItem_tags</a> - The
--   package's tags.
newPackageListItem :: PackageListItem

-- | The package's ID.
packageListItem_packageId :: Lens' PackageListItem (Maybe Text)

-- | The package's ARN.
packageListItem_arn :: Lens' PackageListItem (Maybe Text)

-- | When the package was created.
packageListItem_createdTime :: Lens' PackageListItem (Maybe UTCTime)

-- | The package's name.
packageListItem_packageName :: Lens' PackageListItem (Maybe Text)

-- | The package's tags.
packageListItem_tags :: Lens' PackageListItem (Maybe (HashMap Text Text))

-- | A package object.
--   
--   <i>See:</i> <a>newPackageObject</a> smart constructor.
data PackageObject
PackageObject' :: Text -> Text -> Text -> PackageObject

-- | The object's name.
[$sel:name:PackageObject'] :: PackageObject -> Text

-- | The object's package version.
[$sel:packageVersion:PackageObject'] :: PackageObject -> Text

-- | The object's patch version.
[$sel:patchVersion:PackageObject'] :: PackageObject -> Text

-- | Create a value of <a>PackageObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:PackageObject'</a>, <a>packageObject_name</a> - The
--   object's name.
--   
--   <a>$sel:packageVersion:PackageObject'</a>,
--   <a>packageObject_packageVersion</a> - The object's package version.
--   
--   <a>$sel:patchVersion:PackageObject'</a>,
--   <a>packageObject_patchVersion</a> - The object's patch version.
newPackageObject :: Text -> Text -> Text -> PackageObject

-- | The object's name.
packageObject_name :: Lens' PackageObject Text

-- | The object's package version.
packageObject_packageVersion :: Lens' PackageObject Text

-- | The object's patch version.
packageObject_patchVersion :: Lens' PackageObject Text

-- | A package version input configuration.
--   
--   <i>See:</i> <a>newPackageVersionInputConfig</a> smart constructor.
data PackageVersionInputConfig
PackageVersionInputConfig' :: S3Location -> PackageVersionInputConfig

-- | A location in Amazon S3.
[$sel:s3Location:PackageVersionInputConfig'] :: PackageVersionInputConfig -> S3Location

-- | Create a value of <a>PackageVersionInputConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Location:PackageVersionInputConfig'</a>,
--   <a>packageVersionInputConfig_s3Location</a> - A location in Amazon S3.
newPackageVersionInputConfig :: S3Location -> PackageVersionInputConfig

-- | A location in Amazon S3.
packageVersionInputConfig_s3Location :: Lens' PackageVersionInputConfig S3Location

-- | A package version output configuration.
--   
--   <i>See:</i> <a>newPackageVersionOutputConfig</a> smart constructor.
data PackageVersionOutputConfig
PackageVersionOutputConfig' :: Maybe Bool -> Text -> Text -> PackageVersionOutputConfig

-- | Indicates that the version is recommended for all users.
[$sel:markLatest:PackageVersionOutputConfig'] :: PackageVersionOutputConfig -> Maybe Bool

-- | The output's package name.
[$sel:packageName:PackageVersionOutputConfig'] :: PackageVersionOutputConfig -> Text

-- | The output's package version.
[$sel:packageVersion:PackageVersionOutputConfig'] :: PackageVersionOutputConfig -> Text

-- | Create a value of <a>PackageVersionOutputConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:markLatest:PackageVersionOutputConfig'</a>,
--   <a>packageVersionOutputConfig_markLatest</a> - Indicates that the
--   version is recommended for all users.
--   
--   <a>$sel:packageName:PackageVersionOutputConfig'</a>,
--   <a>packageVersionOutputConfig_packageName</a> - The output's package
--   name.
--   
--   <a>$sel:packageVersion:PackageVersionOutputConfig'</a>,
--   <a>packageVersionOutputConfig_packageVersion</a> - The output's
--   package version.
newPackageVersionOutputConfig :: Text -> Text -> PackageVersionOutputConfig

-- | Indicates that the version is recommended for all users.
packageVersionOutputConfig_markLatest :: Lens' PackageVersionOutputConfig (Maybe Bool)

-- | The output's package name.
packageVersionOutputConfig_packageName :: Lens' PackageVersionOutputConfig Text

-- | The output's package version.
packageVersionOutputConfig_packageVersion :: Lens' PackageVersionOutputConfig Text

-- | A location in Amazon S3.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Text -> Text -> S3Location

-- | The bucket's Region.
[$sel:region:S3Location'] :: S3Location -> Maybe Text

-- | A bucket name.
[$sel:bucketName:S3Location'] :: S3Location -> Text

-- | An object key.
[$sel:objectKey:S3Location'] :: S3Location -> Text

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:region:S3Location'</a>, <a>s3Location_region</a> - The
--   bucket's Region.
--   
--   <a>$sel:bucketName:S3Location'</a>, <a>s3Location_bucketName</a> - A
--   bucket name.
--   
--   <a>$sel:objectKey:S3Location'</a>, <a>s3Location_objectKey</a> - An
--   object key.
newS3Location :: Text -> Text -> S3Location

-- | The bucket's Region.
s3Location_region :: Lens' S3Location (Maybe Text)

-- | A bucket name.
s3Location_bucketName :: Lens' S3Location Text

-- | An object key.
s3Location_objectKey :: Lens' S3Location Text

-- | A static IP configuration.
--   
--   <i>See:</i> <a>newStaticIpConnectionInfo</a> smart constructor.
data StaticIpConnectionInfo
StaticIpConnectionInfo' :: Text -> Text -> [Text] -> Text -> StaticIpConnectionInfo

-- | The connection's IP address.
[$sel:ipAddress:StaticIpConnectionInfo'] :: StaticIpConnectionInfo -> Text

-- | The connection's DNS mask.
[$sel:mask:StaticIpConnectionInfo'] :: StaticIpConnectionInfo -> Text

-- | The connection's DNS address.
[$sel:dns:StaticIpConnectionInfo'] :: StaticIpConnectionInfo -> [Text]

-- | The connection's default gateway.
[$sel:defaultGateway:StaticIpConnectionInfo'] :: StaticIpConnectionInfo -> Text

-- | Create a value of <a>StaticIpConnectionInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:StaticIpConnectionInfo'</a>,
--   <a>staticIpConnectionInfo_ipAddress</a> - The connection's IP address.
--   
--   <a>$sel:mask:StaticIpConnectionInfo'</a>,
--   <a>staticIpConnectionInfo_mask</a> - The connection's DNS mask.
--   
--   <a>$sel:dns:StaticIpConnectionInfo'</a>,
--   <a>staticIpConnectionInfo_dns</a> - The connection's DNS address.
--   
--   <a>$sel:defaultGateway:StaticIpConnectionInfo'</a>,
--   <a>staticIpConnectionInfo_defaultGateway</a> - The connection's
--   default gateway.
newStaticIpConnectionInfo :: Text -> Text -> Text -> StaticIpConnectionInfo

-- | The connection's IP address.
staticIpConnectionInfo_ipAddress :: Lens' StaticIpConnectionInfo Text

-- | The connection's DNS mask.
staticIpConnectionInfo_mask :: Lens' StaticIpConnectionInfo Text

-- | The connection's DNS address.
staticIpConnectionInfo_dns :: Lens' StaticIpConnectionInfo [Text]

-- | The connection's default gateway.
staticIpConnectionInfo_defaultGateway :: Lens' StaticIpConnectionInfo Text

-- | A storage location.
--   
--   <i>See:</i> <a>newStorageLocation</a> smart constructor.
data StorageLocation
StorageLocation' :: Text -> Text -> Text -> Text -> Text -> StorageLocation

-- | The location's bucket.
[$sel:bucket:StorageLocation'] :: StorageLocation -> Text

-- | The location's repo prefix.
[$sel:repoPrefixLocation:StorageLocation'] :: StorageLocation -> Text

-- | The location's generated prefix.
[$sel:generatedPrefixLocation:StorageLocation'] :: StorageLocation -> Text

-- | The location's binary prefix.
[$sel:binaryPrefixLocation:StorageLocation'] :: StorageLocation -> Text

-- | The location's manifest prefix.
[$sel:manifestPrefixLocation:StorageLocation'] :: StorageLocation -> Text

-- | Create a value of <a>StorageLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:StorageLocation'</a>, <a>storageLocation_bucket</a> -
--   The location's bucket.
--   
--   <a>$sel:repoPrefixLocation:StorageLocation'</a>,
--   <a>storageLocation_repoPrefixLocation</a> - The location's repo
--   prefix.
--   
--   <a>$sel:generatedPrefixLocation:StorageLocation'</a>,
--   <a>storageLocation_generatedPrefixLocation</a> - The location's
--   generated prefix.
--   
--   <a>$sel:binaryPrefixLocation:StorageLocation'</a>,
--   <a>storageLocation_binaryPrefixLocation</a> - The location's binary
--   prefix.
--   
--   <a>$sel:manifestPrefixLocation:StorageLocation'</a>,
--   <a>storageLocation_manifestPrefixLocation</a> - The location's
--   manifest prefix.
newStorageLocation :: Text -> Text -> Text -> Text -> Text -> StorageLocation

-- | The location's bucket.
storageLocation_bucket :: Lens' StorageLocation Text

-- | The location's repo prefix.
storageLocation_repoPrefixLocation :: Lens' StorageLocation Text

-- | The location's generated prefix.
storageLocation_generatedPrefixLocation :: Lens' StorageLocation Text

-- | The location's binary prefix.
storageLocation_binaryPrefixLocation :: Lens' StorageLocation Text

-- | The location's manifest prefix.
storageLocation_manifestPrefixLocation :: Lens' StorageLocation Text


-- | Tags a resource.
module Amazonka.Panorama.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The resource's ARN.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | Tags for the resource.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The resource's ARN.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Tags for the
--   resource.
newTagResource :: Text -> TagResource

-- | The resource's ARN.
tagResource_resourceArn :: Lens' TagResource Text

-- | Tags for the resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.TagResource.TagResource
instance GHC.Show.Show Amazonka.Panorama.TagResource.TagResource
instance GHC.Read.Read Amazonka.Panorama.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.Panorama.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.Panorama.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.Panorama.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.Panorama.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.Panorama.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.Panorama.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.Panorama.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.TagResource.TagResource


-- | Removes an application instance.
module Amazonka.Panorama.RemoveApplicationInstance

-- | <i>See:</i> <a>newRemoveApplicationInstance</a> smart constructor.
data RemoveApplicationInstance
RemoveApplicationInstance' :: Text -> RemoveApplicationInstance

-- | An application instance ID.
[$sel:applicationInstanceId:RemoveApplicationInstance'] :: RemoveApplicationInstance -> Text

-- | Create a value of <a>RemoveApplicationInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationInstanceId:RemoveApplicationInstance'</a>,
--   <a>removeApplicationInstance_applicationInstanceId</a> - An
--   application instance ID.
newRemoveApplicationInstance :: Text -> RemoveApplicationInstance

-- | An application instance ID.
removeApplicationInstance_applicationInstanceId :: Lens' RemoveApplicationInstance Text

-- | <i>See:</i> <a>newRemoveApplicationInstanceResponse</a> smart
--   constructor.
data RemoveApplicationInstanceResponse
RemoveApplicationInstanceResponse' :: Int -> RemoveApplicationInstanceResponse

-- | The response's http status code.
[$sel:httpStatus:RemoveApplicationInstanceResponse'] :: RemoveApplicationInstanceResponse -> Int

-- | Create a value of <a>RemoveApplicationInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RemoveApplicationInstanceResponse'</a>,
--   <a>removeApplicationInstanceResponse_httpStatus</a> - The response's
--   http status code.
newRemoveApplicationInstanceResponse :: Int -> RemoveApplicationInstanceResponse

-- | The response's http status code.
removeApplicationInstanceResponse_httpStatus :: Lens' RemoveApplicationInstanceResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstance
instance GHC.Show.Show Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstance
instance GHC.Read.Read Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstance
instance GHC.Classes.Eq Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstance
instance GHC.Generics.Generic Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstanceResponse
instance GHC.Show.Show Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstanceResponse
instance GHC.Read.Read Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstanceResponse
instance GHC.Classes.Eq Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstanceResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstance
instance Control.DeepSeq.NFData Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstanceResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstance
instance Control.DeepSeq.NFData Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstance
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstance
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstance
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.RemoveApplicationInstance.RemoveApplicationInstance


-- | Registers a package version.
module Amazonka.Panorama.RegisterPackageVersion

-- | <i>See:</i> <a>newRegisterPackageVersion</a> smart constructor.
data RegisterPackageVersion
RegisterPackageVersion' :: Maybe Bool -> Maybe Text -> Text -> Text -> Text -> RegisterPackageVersion

-- | Whether to mark the new version as the latest version.
[$sel:markLatest:RegisterPackageVersion'] :: RegisterPackageVersion -> Maybe Bool

-- | An owner account.
[$sel:ownerAccount:RegisterPackageVersion'] :: RegisterPackageVersion -> Maybe Text

-- | A package ID.
[$sel:packageId:RegisterPackageVersion'] :: RegisterPackageVersion -> Text

-- | A package version.
[$sel:packageVersion:RegisterPackageVersion'] :: RegisterPackageVersion -> Text

-- | A patch version.
[$sel:patchVersion:RegisterPackageVersion'] :: RegisterPackageVersion -> Text

-- | Create a value of <a>RegisterPackageVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:markLatest:RegisterPackageVersion'</a>,
--   <a>registerPackageVersion_markLatest</a> - Whether to mark the new
--   version as the latest version.
--   
--   <a>$sel:ownerAccount:RegisterPackageVersion'</a>,
--   <a>registerPackageVersion_ownerAccount</a> - An owner account.
--   
--   <a>$sel:packageId:RegisterPackageVersion'</a>,
--   <a>registerPackageVersion_packageId</a> - A package ID.
--   
--   <a>$sel:packageVersion:RegisterPackageVersion'</a>,
--   <a>registerPackageVersion_packageVersion</a> - A package version.
--   
--   <a>$sel:patchVersion:RegisterPackageVersion'</a>,
--   <a>registerPackageVersion_patchVersion</a> - A patch version.
newRegisterPackageVersion :: Text -> Text -> Text -> RegisterPackageVersion

-- | Whether to mark the new version as the latest version.
registerPackageVersion_markLatest :: Lens' RegisterPackageVersion (Maybe Bool)

-- | An owner account.
registerPackageVersion_ownerAccount :: Lens' RegisterPackageVersion (Maybe Text)

-- | A package ID.
registerPackageVersion_packageId :: Lens' RegisterPackageVersion Text

-- | A package version.
registerPackageVersion_packageVersion :: Lens' RegisterPackageVersion Text

-- | A patch version.
registerPackageVersion_patchVersion :: Lens' RegisterPackageVersion Text

-- | <i>See:</i> <a>newRegisterPackageVersionResponse</a> smart
--   constructor.
data RegisterPackageVersionResponse
RegisterPackageVersionResponse' :: Int -> RegisterPackageVersionResponse

-- | The response's http status code.
[$sel:httpStatus:RegisterPackageVersionResponse'] :: RegisterPackageVersionResponse -> Int

-- | Create a value of <a>RegisterPackageVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RegisterPackageVersionResponse'</a>,
--   <a>registerPackageVersionResponse_httpStatus</a> - The response's http
--   status code.
newRegisterPackageVersionResponse :: Int -> RegisterPackageVersionResponse

-- | The response's http status code.
registerPackageVersionResponse_httpStatus :: Lens' RegisterPackageVersionResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersion
instance GHC.Show.Show Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersion
instance GHC.Read.Read Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersion
instance GHC.Classes.Eq Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersion
instance GHC.Generics.Generic Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersionResponse
instance GHC.Show.Show Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersionResponse
instance GHC.Read.Read Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersionResponse
instance GHC.Classes.Eq Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersion
instance Control.DeepSeq.NFData Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersion
instance Control.DeepSeq.NFData Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersion
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersion
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.RegisterPackageVersion.RegisterPackageVersion


-- | Creates a device and returns a configuration archive. The
--   configuration archive is a ZIP file that contains a provisioning
--   certificate that is valid for 5 minutes. Transfer the configuration
--   archive to the device with the included USB storage device within 5
--   minutes.
module Amazonka.Panorama.ProvisionDevice

-- | <i>See:</i> <a>newProvisionDevice</a> smart constructor.
data ProvisionDevice
ProvisionDevice' :: Maybe Text -> Maybe NetworkPayload -> Maybe (HashMap Text Text) -> Text -> ProvisionDevice

-- | A description for the device.
[$sel:description:ProvisionDevice'] :: ProvisionDevice -> Maybe Text

-- | A networking configuration for the device.
[$sel:networkingConfiguration:ProvisionDevice'] :: ProvisionDevice -> Maybe NetworkPayload

-- | Tags for the device.
[$sel:tags:ProvisionDevice'] :: ProvisionDevice -> Maybe (HashMap Text Text)

-- | A name for the device.
[$sel:name:ProvisionDevice'] :: ProvisionDevice -> Text

-- | Create a value of <a>ProvisionDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:ProvisionDevice'</a>,
--   <a>provisionDevice_description</a> - A description for the device.
--   
--   <a>$sel:networkingConfiguration:ProvisionDevice'</a>,
--   <a>provisionDevice_networkingConfiguration</a> - A networking
--   configuration for the device.
--   
--   <a>$sel:tags:ProvisionDevice'</a>, <a>provisionDevice_tags</a> - Tags
--   for the device.
--   
--   <a>$sel:name:ProvisionDevice'</a>, <a>provisionDevice_name</a> - A
--   name for the device.
newProvisionDevice :: Text -> ProvisionDevice

-- | A description for the device.
provisionDevice_description :: Lens' ProvisionDevice (Maybe Text)

-- | A networking configuration for the device.
provisionDevice_networkingConfiguration :: Lens' ProvisionDevice (Maybe NetworkPayload)

-- | Tags for the device.
provisionDevice_tags :: Lens' ProvisionDevice (Maybe (HashMap Text Text))

-- | A name for the device.
provisionDevice_name :: Lens' ProvisionDevice Text

-- | <i>See:</i> <a>newProvisionDeviceResponse</a> smart constructor.
data ProvisionDeviceResponse
ProvisionDeviceResponse' :: Maybe Base64 -> Maybe Text -> Maybe Text -> Int -> Text -> DeviceStatus -> ProvisionDeviceResponse

-- | The device's configuration bundle.
[$sel:certificates:ProvisionDeviceResponse'] :: ProvisionDeviceResponse -> Maybe Base64

-- | The device's ID.
[$sel:deviceId:ProvisionDeviceResponse'] :: ProvisionDeviceResponse -> Maybe Text

-- | The device's IoT thing name.
[$sel:iotThingName:ProvisionDeviceResponse'] :: ProvisionDeviceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ProvisionDeviceResponse'] :: ProvisionDeviceResponse -> Int

-- | The device's ARN.
[$sel:arn:ProvisionDeviceResponse'] :: ProvisionDeviceResponse -> Text

-- | The device's status.
[$sel:status:ProvisionDeviceResponse'] :: ProvisionDeviceResponse -> DeviceStatus

-- | Create a value of <a>ProvisionDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificates:ProvisionDeviceResponse'</a>,
--   <a>provisionDeviceResponse_certificates</a> - The device's
--   configuration bundle.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:deviceId:ProvisionDeviceResponse'</a>,
--   <a>provisionDeviceResponse_deviceId</a> - The device's ID.
--   
--   <a>$sel:iotThingName:ProvisionDeviceResponse'</a>,
--   <a>provisionDeviceResponse_iotThingName</a> - The device's IoT thing
--   name.
--   
--   <a>$sel:httpStatus:ProvisionDeviceResponse'</a>,
--   <a>provisionDeviceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:arn:ProvisionDeviceResponse'</a>,
--   <a>provisionDeviceResponse_arn</a> - The device's ARN.
--   
--   <a>$sel:status:ProvisionDeviceResponse'</a>,
--   <a>provisionDeviceResponse_status</a> - The device's status.
newProvisionDeviceResponse :: Int -> Text -> DeviceStatus -> ProvisionDeviceResponse

-- | The device's configuration bundle.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
provisionDeviceResponse_certificates :: Lens' ProvisionDeviceResponse (Maybe ByteString)

-- | The device's ID.
provisionDeviceResponse_deviceId :: Lens' ProvisionDeviceResponse (Maybe Text)

-- | The device's IoT thing name.
provisionDeviceResponse_iotThingName :: Lens' ProvisionDeviceResponse (Maybe Text)

-- | The response's http status code.
provisionDeviceResponse_httpStatus :: Lens' ProvisionDeviceResponse Int

-- | The device's ARN.
provisionDeviceResponse_arn :: Lens' ProvisionDeviceResponse Text

-- | The device's status.
provisionDeviceResponse_status :: Lens' ProvisionDeviceResponse DeviceStatus
instance GHC.Generics.Generic Amazonka.Panorama.ProvisionDevice.ProvisionDevice
instance GHC.Show.Show Amazonka.Panorama.ProvisionDevice.ProvisionDevice
instance GHC.Read.Read Amazonka.Panorama.ProvisionDevice.ProvisionDevice
instance GHC.Classes.Eq Amazonka.Panorama.ProvisionDevice.ProvisionDevice
instance GHC.Generics.Generic Amazonka.Panorama.ProvisionDevice.ProvisionDeviceResponse
instance GHC.Show.Show Amazonka.Panorama.ProvisionDevice.ProvisionDeviceResponse
instance GHC.Read.Read Amazonka.Panorama.ProvisionDevice.ProvisionDeviceResponse
instance GHC.Classes.Eq Amazonka.Panorama.ProvisionDevice.ProvisionDeviceResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.ProvisionDevice.ProvisionDevice
instance Control.DeepSeq.NFData Amazonka.Panorama.ProvisionDevice.ProvisionDeviceResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.ProvisionDevice.ProvisionDevice
instance Control.DeepSeq.NFData Amazonka.Panorama.ProvisionDevice.ProvisionDevice
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.ProvisionDevice.ProvisionDevice
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.ProvisionDevice.ProvisionDevice
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.ProvisionDevice.ProvisionDevice
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.ProvisionDevice.ProvisionDevice


-- | Returns a list of tags for a resource.
module Amazonka.Panorama.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The resource's ARN.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The resource's ARN.
newListTagsForResource :: Text -> ListTagsForResource

-- | The resource's ARN.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | A list of tags.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tags.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A list of tags.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.Panorama.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.Panorama.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.Panorama.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.Panorama.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.Panorama.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.Panorama.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.Panorama.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.Panorama.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.Panorama.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.ListTagsForResource.ListTagsForResource


-- | Returns a list of packages.
module Amazonka.Panorama.ListPackages

-- | <i>See:</i> <a>newListPackages</a> smart constructor.
data ListPackages
ListPackages' :: Maybe Text -> Maybe Natural -> ListPackages

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
[$sel:nextToken:ListPackages'] :: ListPackages -> Maybe Text

-- | The maximum number of packages to return in one page of results.
[$sel:maxResults:ListPackages'] :: ListPackages -> Maybe Natural

-- | Create a value of <a>ListPackages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPackages'</a>, <a>listPackages_nextToken</a> -
--   Specify the pagination token from a previous request to retrieve the
--   next page of results.
--   
--   <a>$sel:maxResults:ListPackages'</a>, <a>listPackages_maxResults</a> -
--   The maximum number of packages to return in one page of results.
newListPackages :: ListPackages

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listPackages_nextToken :: Lens' ListPackages (Maybe Text)

-- | The maximum number of packages to return in one page of results.
listPackages_maxResults :: Lens' ListPackages (Maybe Natural)

-- | <i>See:</i> <a>newListPackagesResponse</a> smart constructor.
data ListPackagesResponse
ListPackagesResponse' :: Maybe [PackageListItem] -> Maybe Text -> Int -> ListPackagesResponse

-- | A list of packages.
[$sel:packages:ListPackagesResponse'] :: ListPackagesResponse -> Maybe [PackageListItem]

-- | A pagination token that's included if more results are available.
[$sel:nextToken:ListPackagesResponse'] :: ListPackagesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPackagesResponse'] :: ListPackagesResponse -> Int

-- | Create a value of <a>ListPackagesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packages:ListPackagesResponse'</a>,
--   <a>listPackagesResponse_packages</a> - A list of packages.
--   
--   <a>$sel:nextToken:ListPackages'</a>,
--   <a>listPackagesResponse_nextToken</a> - A pagination token that's
--   included if more results are available.
--   
--   <a>$sel:httpStatus:ListPackagesResponse'</a>,
--   <a>listPackagesResponse_httpStatus</a> - The response's http status
--   code.
newListPackagesResponse :: Int -> ListPackagesResponse

-- | A list of packages.
listPackagesResponse_packages :: Lens' ListPackagesResponse (Maybe [PackageListItem])

-- | A pagination token that's included if more results are available.
listPackagesResponse_nextToken :: Lens' ListPackagesResponse (Maybe Text)

-- | The response's http status code.
listPackagesResponse_httpStatus :: Lens' ListPackagesResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.ListPackages.ListPackages
instance GHC.Show.Show Amazonka.Panorama.ListPackages.ListPackages
instance GHC.Read.Read Amazonka.Panorama.ListPackages.ListPackages
instance GHC.Classes.Eq Amazonka.Panorama.ListPackages.ListPackages
instance GHC.Generics.Generic Amazonka.Panorama.ListPackages.ListPackagesResponse
instance GHC.Show.Show Amazonka.Panorama.ListPackages.ListPackagesResponse
instance GHC.Read.Read Amazonka.Panorama.ListPackages.ListPackagesResponse
instance GHC.Classes.Eq Amazonka.Panorama.ListPackages.ListPackagesResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.ListPackages.ListPackages
instance Control.DeepSeq.NFData Amazonka.Panorama.ListPackages.ListPackagesResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.ListPackages.ListPackages
instance Control.DeepSeq.NFData Amazonka.Panorama.ListPackages.ListPackages
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.ListPackages.ListPackages
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.ListPackages.ListPackages
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.ListPackages.ListPackages


-- | Returns a list of package import jobs.
module Amazonka.Panorama.ListPackageImportJobs

-- | <i>See:</i> <a>newListPackageImportJobs</a> smart constructor.
data ListPackageImportJobs
ListPackageImportJobs' :: Maybe Text -> Maybe Natural -> ListPackageImportJobs

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
[$sel:nextToken:ListPackageImportJobs'] :: ListPackageImportJobs -> Maybe Text

-- | The maximum number of package import jobs to return in one page of
--   results.
[$sel:maxResults:ListPackageImportJobs'] :: ListPackageImportJobs -> Maybe Natural

-- | Create a value of <a>ListPackageImportJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPackageImportJobs'</a>,
--   <a>listPackageImportJobs_nextToken</a> - Specify the pagination token
--   from a previous request to retrieve the next page of results.
--   
--   <a>$sel:maxResults:ListPackageImportJobs'</a>,
--   <a>listPackageImportJobs_maxResults</a> - The maximum number of
--   package import jobs to return in one page of results.
newListPackageImportJobs :: ListPackageImportJobs

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listPackageImportJobs_nextToken :: Lens' ListPackageImportJobs (Maybe Text)

-- | The maximum number of package import jobs to return in one page of
--   results.
listPackageImportJobs_maxResults :: Lens' ListPackageImportJobs (Maybe Natural)

-- | <i>See:</i> <a>newListPackageImportJobsResponse</a> smart constructor.
data ListPackageImportJobsResponse
ListPackageImportJobsResponse' :: Maybe Text -> Int -> [PackageImportJob] -> ListPackageImportJobsResponse

-- | A pagination token that's included if more results are available.
[$sel:nextToken:ListPackageImportJobsResponse'] :: ListPackageImportJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPackageImportJobsResponse'] :: ListPackageImportJobsResponse -> Int

-- | A list of package import jobs.
[$sel:packageImportJobs:ListPackageImportJobsResponse'] :: ListPackageImportJobsResponse -> [PackageImportJob]

-- | Create a value of <a>ListPackageImportJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPackageImportJobs'</a>,
--   <a>listPackageImportJobsResponse_nextToken</a> - A pagination token
--   that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListPackageImportJobsResponse'</a>,
--   <a>listPackageImportJobsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:packageImportJobs:ListPackageImportJobsResponse'</a>,
--   <a>listPackageImportJobsResponse_packageImportJobs</a> - A list of
--   package import jobs.
newListPackageImportJobsResponse :: Int -> ListPackageImportJobsResponse

-- | A pagination token that's included if more results are available.
listPackageImportJobsResponse_nextToken :: Lens' ListPackageImportJobsResponse (Maybe Text)

-- | The response's http status code.
listPackageImportJobsResponse_httpStatus :: Lens' ListPackageImportJobsResponse Int

-- | A list of package import jobs.
listPackageImportJobsResponse_packageImportJobs :: Lens' ListPackageImportJobsResponse [PackageImportJob]
instance GHC.Generics.Generic Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobs
instance GHC.Show.Show Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobs
instance GHC.Read.Read Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobs
instance GHC.Classes.Eq Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobs
instance GHC.Generics.Generic Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobsResponse
instance GHC.Show.Show Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobsResponse
instance GHC.Read.Read Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobsResponse
instance GHC.Classes.Eq Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobs
instance Control.DeepSeq.NFData Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobsResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobs
instance Control.DeepSeq.NFData Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobs
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobs
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.ListPackageImportJobs.ListPackageImportJobs


-- | Returns a list of nodes.
module Amazonka.Panorama.ListNodes

-- | <i>See:</i> <a>newListNodes</a> smart constructor.
data ListNodes
ListNodes' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe NodeCategory -> Maybe Text -> Maybe Text -> Maybe Natural -> ListNodes

-- | Search for nodes by patch version.
[$sel:patchVersion:ListNodes'] :: ListNodes -> Maybe Text

-- | Search for nodes by name.
[$sel:packageName:ListNodes'] :: ListNodes -> Maybe Text

-- | Search for nodes by version.
[$sel:packageVersion:ListNodes'] :: ListNodes -> Maybe Text

-- | Search for nodes by category.
[$sel:category:ListNodes'] :: ListNodes -> Maybe NodeCategory

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
[$sel:nextToken:ListNodes'] :: ListNodes -> Maybe Text

-- | Search for nodes by the account ID of the nodes' owner.
[$sel:ownerAccount:ListNodes'] :: ListNodes -> Maybe Text

-- | The maximum number of nodes to return in one page of results.
[$sel:maxResults:ListNodes'] :: ListNodes -> Maybe Natural

-- | Create a value of <a>ListNodes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchVersion:ListNodes'</a>, <a>listNodes_patchVersion</a> -
--   Search for nodes by patch version.
--   
--   <a>$sel:packageName:ListNodes'</a>, <a>listNodes_packageName</a> -
--   Search for nodes by name.
--   
--   <a>$sel:packageVersion:ListNodes'</a>, <a>listNodes_packageVersion</a>
--   - Search for nodes by version.
--   
--   <a>$sel:category:ListNodes'</a>, <a>listNodes_category</a> - Search
--   for nodes by category.
--   
--   <a>$sel:nextToken:ListNodes'</a>, <a>listNodes_nextToken</a> - Specify
--   the pagination token from a previous request to retrieve the next page
--   of results.
--   
--   <a>$sel:ownerAccount:ListNodes'</a>, <a>listNodes_ownerAccount</a> -
--   Search for nodes by the account ID of the nodes' owner.
--   
--   <a>$sel:maxResults:ListNodes'</a>, <a>listNodes_maxResults</a> - The
--   maximum number of nodes to return in one page of results.
newListNodes :: ListNodes

-- | Search for nodes by patch version.
listNodes_patchVersion :: Lens' ListNodes (Maybe Text)

-- | Search for nodes by name.
listNodes_packageName :: Lens' ListNodes (Maybe Text)

-- | Search for nodes by version.
listNodes_packageVersion :: Lens' ListNodes (Maybe Text)

-- | Search for nodes by category.
listNodes_category :: Lens' ListNodes (Maybe NodeCategory)

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listNodes_nextToken :: Lens' ListNodes (Maybe Text)

-- | Search for nodes by the account ID of the nodes' owner.
listNodes_ownerAccount :: Lens' ListNodes (Maybe Text)

-- | The maximum number of nodes to return in one page of results.
listNodes_maxResults :: Lens' ListNodes (Maybe Natural)

-- | <i>See:</i> <a>newListNodesResponse</a> smart constructor.
data ListNodesResponse
ListNodesResponse' :: Maybe Text -> Maybe [Node] -> Int -> ListNodesResponse

-- | A pagination token that's included if more results are available.
[$sel:nextToken:ListNodesResponse'] :: ListNodesResponse -> Maybe Text

-- | A list of nodes.
[$sel:nodes:ListNodesResponse'] :: ListNodesResponse -> Maybe [Node]

-- | The response's http status code.
[$sel:httpStatus:ListNodesResponse'] :: ListNodesResponse -> Int

-- | Create a value of <a>ListNodesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNodes'</a>, <a>listNodesResponse_nextToken</a> -
--   A pagination token that's included if more results are available.
--   
--   <a>$sel:nodes:ListNodesResponse'</a>, <a>listNodesResponse_nodes</a> -
--   A list of nodes.
--   
--   <a>$sel:httpStatus:ListNodesResponse'</a>,
--   <a>listNodesResponse_httpStatus</a> - The response's http status code.
newListNodesResponse :: Int -> ListNodesResponse

-- | A pagination token that's included if more results are available.
listNodesResponse_nextToken :: Lens' ListNodesResponse (Maybe Text)

-- | A list of nodes.
listNodesResponse_nodes :: Lens' ListNodesResponse (Maybe [Node])

-- | The response's http status code.
listNodesResponse_httpStatus :: Lens' ListNodesResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.ListNodes.ListNodes
instance GHC.Show.Show Amazonka.Panorama.ListNodes.ListNodes
instance GHC.Read.Read Amazonka.Panorama.ListNodes.ListNodes
instance GHC.Classes.Eq Amazonka.Panorama.ListNodes.ListNodes
instance GHC.Generics.Generic Amazonka.Panorama.ListNodes.ListNodesResponse
instance GHC.Show.Show Amazonka.Panorama.ListNodes.ListNodesResponse
instance GHC.Read.Read Amazonka.Panorama.ListNodes.ListNodesResponse
instance GHC.Classes.Eq Amazonka.Panorama.ListNodes.ListNodesResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.ListNodes.ListNodes
instance Control.DeepSeq.NFData Amazonka.Panorama.ListNodes.ListNodesResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.ListNodes.ListNodes
instance Control.DeepSeq.NFData Amazonka.Panorama.ListNodes.ListNodes
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.ListNodes.ListNodes
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.ListNodes.ListNodes
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.ListNodes.ListNodes


-- | Returns a list of camera stream node jobs.
module Amazonka.Panorama.ListNodeFromTemplateJobs

-- | <i>See:</i> <a>newListNodeFromTemplateJobs</a> smart constructor.
data ListNodeFromTemplateJobs
ListNodeFromTemplateJobs' :: Maybe Text -> Maybe Natural -> ListNodeFromTemplateJobs

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
[$sel:nextToken:ListNodeFromTemplateJobs'] :: ListNodeFromTemplateJobs -> Maybe Text

-- | The maximum number of node from template jobs to return in one page of
--   results.
[$sel:maxResults:ListNodeFromTemplateJobs'] :: ListNodeFromTemplateJobs -> Maybe Natural

-- | Create a value of <a>ListNodeFromTemplateJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNodeFromTemplateJobs'</a>,
--   <a>listNodeFromTemplateJobs_nextToken</a> - Specify the pagination
--   token from a previous request to retrieve the next page of results.
--   
--   <a>$sel:maxResults:ListNodeFromTemplateJobs'</a>,
--   <a>listNodeFromTemplateJobs_maxResults</a> - The maximum number of
--   node from template jobs to return in one page of results.
newListNodeFromTemplateJobs :: ListNodeFromTemplateJobs

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listNodeFromTemplateJobs_nextToken :: Lens' ListNodeFromTemplateJobs (Maybe Text)

-- | The maximum number of node from template jobs to return in one page of
--   results.
listNodeFromTemplateJobs_maxResults :: Lens' ListNodeFromTemplateJobs (Maybe Natural)

-- | <i>See:</i> <a>newListNodeFromTemplateJobsResponse</a> smart
--   constructor.
data ListNodeFromTemplateJobsResponse
ListNodeFromTemplateJobsResponse' :: Maybe Text -> Int -> [NodeFromTemplateJob] -> ListNodeFromTemplateJobsResponse

-- | A pagination token that's included if more results are available.
[$sel:nextToken:ListNodeFromTemplateJobsResponse'] :: ListNodeFromTemplateJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListNodeFromTemplateJobsResponse'] :: ListNodeFromTemplateJobsResponse -> Int

-- | A list of jobs.
[$sel:nodeFromTemplateJobs:ListNodeFromTemplateJobsResponse'] :: ListNodeFromTemplateJobsResponse -> [NodeFromTemplateJob]

-- | Create a value of <a>ListNodeFromTemplateJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNodeFromTemplateJobs'</a>,
--   <a>listNodeFromTemplateJobsResponse_nextToken</a> - A pagination token
--   that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListNodeFromTemplateJobsResponse'</a>,
--   <a>listNodeFromTemplateJobsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:nodeFromTemplateJobs:ListNodeFromTemplateJobsResponse'</a>,
--   <a>listNodeFromTemplateJobsResponse_nodeFromTemplateJobs</a> - A list
--   of jobs.
newListNodeFromTemplateJobsResponse :: Int -> ListNodeFromTemplateJobsResponse

-- | A pagination token that's included if more results are available.
listNodeFromTemplateJobsResponse_nextToken :: Lens' ListNodeFromTemplateJobsResponse (Maybe Text)

-- | The response's http status code.
listNodeFromTemplateJobsResponse_httpStatus :: Lens' ListNodeFromTemplateJobsResponse Int

-- | A list of jobs.
listNodeFromTemplateJobsResponse_nodeFromTemplateJobs :: Lens' ListNodeFromTemplateJobsResponse [NodeFromTemplateJob]
instance GHC.Generics.Generic Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobs
instance GHC.Show.Show Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobs
instance GHC.Read.Read Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobs
instance GHC.Classes.Eq Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobs
instance GHC.Generics.Generic Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobsResponse
instance GHC.Show.Show Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobsResponse
instance GHC.Read.Read Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobsResponse
instance GHC.Classes.Eq Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobs
instance Control.DeepSeq.NFData Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobsResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobs
instance Control.DeepSeq.NFData Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobs
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobs
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.ListNodeFromTemplateJobs.ListNodeFromTemplateJobs


-- | Returns a list of jobs.
module Amazonka.Panorama.ListDevicesJobs

-- | <i>See:</i> <a>newListDevicesJobs</a> smart constructor.
data ListDevicesJobs
ListDevicesJobs' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDevicesJobs

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
[$sel:nextToken:ListDevicesJobs'] :: ListDevicesJobs -> Maybe Text

-- | Filter results by the job's target device ID.
[$sel:deviceId:ListDevicesJobs'] :: ListDevicesJobs -> Maybe Text

-- | The maximum number of device jobs to return in one page of results.
[$sel:maxResults:ListDevicesJobs'] :: ListDevicesJobs -> Maybe Natural

-- | Create a value of <a>ListDevicesJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevicesJobs'</a>,
--   <a>listDevicesJobs_nextToken</a> - Specify the pagination token from a
--   previous request to retrieve the next page of results.
--   
--   <a>$sel:deviceId:ListDevicesJobs'</a>, <a>listDevicesJobs_deviceId</a>
--   - Filter results by the job's target device ID.
--   
--   <a>$sel:maxResults:ListDevicesJobs'</a>,
--   <a>listDevicesJobs_maxResults</a> - The maximum number of device jobs
--   to return in one page of results.
newListDevicesJobs :: ListDevicesJobs

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listDevicesJobs_nextToken :: Lens' ListDevicesJobs (Maybe Text)

-- | Filter results by the job's target device ID.
listDevicesJobs_deviceId :: Lens' ListDevicesJobs (Maybe Text)

-- | The maximum number of device jobs to return in one page of results.
listDevicesJobs_maxResults :: Lens' ListDevicesJobs (Maybe Natural)

-- | <i>See:</i> <a>newListDevicesJobsResponse</a> smart constructor.
data ListDevicesJobsResponse
ListDevicesJobsResponse' :: Maybe Text -> Maybe [DeviceJob] -> Int -> ListDevicesJobsResponse

-- | A pagination token that's included if more results are available.
[$sel:nextToken:ListDevicesJobsResponse'] :: ListDevicesJobsResponse -> Maybe Text

-- | A list of jobs.
[$sel:deviceJobs:ListDevicesJobsResponse'] :: ListDevicesJobsResponse -> Maybe [DeviceJob]

-- | The response's http status code.
[$sel:httpStatus:ListDevicesJobsResponse'] :: ListDevicesJobsResponse -> Int

-- | Create a value of <a>ListDevicesJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevicesJobs'</a>,
--   <a>listDevicesJobsResponse_nextToken</a> - A pagination token that's
--   included if more results are available.
--   
--   <a>$sel:deviceJobs:ListDevicesJobsResponse'</a>,
--   <a>listDevicesJobsResponse_deviceJobs</a> - A list of jobs.
--   
--   <a>$sel:httpStatus:ListDevicesJobsResponse'</a>,
--   <a>listDevicesJobsResponse_httpStatus</a> - The response's http status
--   code.
newListDevicesJobsResponse :: Int -> ListDevicesJobsResponse

-- | A pagination token that's included if more results are available.
listDevicesJobsResponse_nextToken :: Lens' ListDevicesJobsResponse (Maybe Text)

-- | A list of jobs.
listDevicesJobsResponse_deviceJobs :: Lens' ListDevicesJobsResponse (Maybe [DeviceJob])

-- | The response's http status code.
listDevicesJobsResponse_httpStatus :: Lens' ListDevicesJobsResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.ListDevicesJobs.ListDevicesJobs
instance GHC.Show.Show Amazonka.Panorama.ListDevicesJobs.ListDevicesJobs
instance GHC.Read.Read Amazonka.Panorama.ListDevicesJobs.ListDevicesJobs
instance GHC.Classes.Eq Amazonka.Panorama.ListDevicesJobs.ListDevicesJobs
instance GHC.Generics.Generic Amazonka.Panorama.ListDevicesJobs.ListDevicesJobsResponse
instance GHC.Show.Show Amazonka.Panorama.ListDevicesJobs.ListDevicesJobsResponse
instance GHC.Read.Read Amazonka.Panorama.ListDevicesJobs.ListDevicesJobsResponse
instance GHC.Classes.Eq Amazonka.Panorama.ListDevicesJobs.ListDevicesJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.ListDevicesJobs.ListDevicesJobs
instance Control.DeepSeq.NFData Amazonka.Panorama.ListDevicesJobs.ListDevicesJobsResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.ListDevicesJobs.ListDevicesJobs
instance Control.DeepSeq.NFData Amazonka.Panorama.ListDevicesJobs.ListDevicesJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.ListDevicesJobs.ListDevicesJobs
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.ListDevicesJobs.ListDevicesJobs
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.ListDevicesJobs.ListDevicesJobs


-- | Returns a list of devices.
module Amazonka.Panorama.ListDevices

-- | <i>See:</i> <a>newListDevices</a> smart constructor.
data ListDevices
ListDevices' :: Maybe Text -> Maybe Natural -> ListDevices

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
[$sel:nextToken:ListDevices'] :: ListDevices -> Maybe Text

-- | The maximum number of devices to return in one page of results.
[$sel:maxResults:ListDevices'] :: ListDevices -> Maybe Natural

-- | Create a value of <a>ListDevices</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>, <a>listDevices_nextToken</a> -
--   Specify the pagination token from a previous request to retrieve the
--   next page of results.
--   
--   <a>$sel:maxResults:ListDevices'</a>, <a>listDevices_maxResults</a> -
--   The maximum number of devices to return in one page of results.
newListDevices :: ListDevices

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listDevices_nextToken :: Lens' ListDevices (Maybe Text)

-- | The maximum number of devices to return in one page of results.
listDevices_maxResults :: Lens' ListDevices (Maybe Natural)

-- | <i>See:</i> <a>newListDevicesResponse</a> smart constructor.
data ListDevicesResponse
ListDevicesResponse' :: Maybe Text -> Int -> [Device] -> ListDevicesResponse

-- | A pagination token that's included if more results are available.
[$sel:nextToken:ListDevicesResponse'] :: ListDevicesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDevicesResponse'] :: ListDevicesResponse -> Int

-- | A list of devices.
[$sel:devices:ListDevicesResponse'] :: ListDevicesResponse -> [Device]

-- | Create a value of <a>ListDevicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>,
--   <a>listDevicesResponse_nextToken</a> - A pagination token that's
--   included if more results are available.
--   
--   <a>$sel:httpStatus:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:devices:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_devices</a> - A list of devices.
newListDevicesResponse :: Int -> ListDevicesResponse

-- | A pagination token that's included if more results are available.
listDevicesResponse_nextToken :: Lens' ListDevicesResponse (Maybe Text)

-- | The response's http status code.
listDevicesResponse_httpStatus :: Lens' ListDevicesResponse Int

-- | A list of devices.
listDevicesResponse_devices :: Lens' ListDevicesResponse [Device]
instance GHC.Generics.Generic Amazonka.Panorama.ListDevices.ListDevices
instance GHC.Show.Show Amazonka.Panorama.ListDevices.ListDevices
instance GHC.Read.Read Amazonka.Panorama.ListDevices.ListDevices
instance GHC.Classes.Eq Amazonka.Panorama.ListDevices.ListDevices
instance GHC.Generics.Generic Amazonka.Panorama.ListDevices.ListDevicesResponse
instance GHC.Show.Show Amazonka.Panorama.ListDevices.ListDevicesResponse
instance GHC.Read.Read Amazonka.Panorama.ListDevices.ListDevicesResponse
instance GHC.Classes.Eq Amazonka.Panorama.ListDevices.ListDevicesResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.ListDevices.ListDevices
instance Control.DeepSeq.NFData Amazonka.Panorama.ListDevices.ListDevicesResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.ListDevices.ListDevices
instance Control.DeepSeq.NFData Amazonka.Panorama.ListDevices.ListDevices
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.ListDevices.ListDevices
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.ListDevices.ListDevices
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.ListDevices.ListDevices


-- | Returns a list of application instances.
module Amazonka.Panorama.ListApplicationInstances

-- | <i>See:</i> <a>newListApplicationInstances</a> smart constructor.
data ListApplicationInstances
ListApplicationInstances' :: Maybe Text -> Maybe StatusFilter -> Maybe Text -> Maybe Natural -> ListApplicationInstances

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
[$sel:nextToken:ListApplicationInstances'] :: ListApplicationInstances -> Maybe Text

-- | Only include instances with a specific status.
[$sel:statusFilter:ListApplicationInstances'] :: ListApplicationInstances -> Maybe StatusFilter

-- | The application instances' device ID.
[$sel:deviceId:ListApplicationInstances'] :: ListApplicationInstances -> Maybe Text

-- | The maximum number of application instances to return in one page of
--   results.
[$sel:maxResults:ListApplicationInstances'] :: ListApplicationInstances -> Maybe Natural

-- | Create a value of <a>ListApplicationInstances</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationInstances'</a>,
--   <a>listApplicationInstances_nextToken</a> - Specify the pagination
--   token from a previous request to retrieve the next page of results.
--   
--   <a>$sel:statusFilter:ListApplicationInstances'</a>,
--   <a>listApplicationInstances_statusFilter</a> - Only include instances
--   with a specific status.
--   
--   <a>$sel:deviceId:ListApplicationInstances'</a>,
--   <a>listApplicationInstances_deviceId</a> - The application instances'
--   device ID.
--   
--   <a>$sel:maxResults:ListApplicationInstances'</a>,
--   <a>listApplicationInstances_maxResults</a> - The maximum number of
--   application instances to return in one page of results.
newListApplicationInstances :: ListApplicationInstances

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listApplicationInstances_nextToken :: Lens' ListApplicationInstances (Maybe Text)

-- | Only include instances with a specific status.
listApplicationInstances_statusFilter :: Lens' ListApplicationInstances (Maybe StatusFilter)

-- | The application instances' device ID.
listApplicationInstances_deviceId :: Lens' ListApplicationInstances (Maybe Text)

-- | The maximum number of application instances to return in one page of
--   results.
listApplicationInstances_maxResults :: Lens' ListApplicationInstances (Maybe Natural)

-- | <i>See:</i> <a>newListApplicationInstancesResponse</a> smart
--   constructor.
data ListApplicationInstancesResponse
ListApplicationInstancesResponse' :: Maybe Text -> Maybe [ApplicationInstance] -> Int -> ListApplicationInstancesResponse

-- | A pagination token that's included if more results are available.
[$sel:nextToken:ListApplicationInstancesResponse'] :: ListApplicationInstancesResponse -> Maybe Text

-- | A list of application instances.
[$sel:applicationInstances:ListApplicationInstancesResponse'] :: ListApplicationInstancesResponse -> Maybe [ApplicationInstance]

-- | The response's http status code.
[$sel:httpStatus:ListApplicationInstancesResponse'] :: ListApplicationInstancesResponse -> Int

-- | Create a value of <a>ListApplicationInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationInstances'</a>,
--   <a>listApplicationInstancesResponse_nextToken</a> - A pagination token
--   that's included if more results are available.
--   
--   <a>$sel:applicationInstances:ListApplicationInstancesResponse'</a>,
--   <a>listApplicationInstancesResponse_applicationInstances</a> - A list
--   of application instances.
--   
--   <a>$sel:httpStatus:ListApplicationInstancesResponse'</a>,
--   <a>listApplicationInstancesResponse_httpStatus</a> - The response's
--   http status code.
newListApplicationInstancesResponse :: Int -> ListApplicationInstancesResponse

-- | A pagination token that's included if more results are available.
listApplicationInstancesResponse_nextToken :: Lens' ListApplicationInstancesResponse (Maybe Text)

-- | A list of application instances.
listApplicationInstancesResponse_applicationInstances :: Lens' ListApplicationInstancesResponse (Maybe [ApplicationInstance])

-- | The response's http status code.
listApplicationInstancesResponse_httpStatus :: Lens' ListApplicationInstancesResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.ListApplicationInstances.ListApplicationInstances
instance GHC.Show.Show Amazonka.Panorama.ListApplicationInstances.ListApplicationInstances
instance GHC.Read.Read Amazonka.Panorama.ListApplicationInstances.ListApplicationInstances
instance GHC.Classes.Eq Amazonka.Panorama.ListApplicationInstances.ListApplicationInstances
instance GHC.Generics.Generic Amazonka.Panorama.ListApplicationInstances.ListApplicationInstancesResponse
instance GHC.Show.Show Amazonka.Panorama.ListApplicationInstances.ListApplicationInstancesResponse
instance GHC.Read.Read Amazonka.Panorama.ListApplicationInstances.ListApplicationInstancesResponse
instance GHC.Classes.Eq Amazonka.Panorama.ListApplicationInstances.ListApplicationInstancesResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.ListApplicationInstances.ListApplicationInstances
instance Control.DeepSeq.NFData Amazonka.Panorama.ListApplicationInstances.ListApplicationInstancesResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.ListApplicationInstances.ListApplicationInstances
instance Control.DeepSeq.NFData Amazonka.Panorama.ListApplicationInstances.ListApplicationInstances
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.ListApplicationInstances.ListApplicationInstances
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.ListApplicationInstances.ListApplicationInstances
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.ListApplicationInstances.ListApplicationInstances


-- | Returns a list of application node instances.
module Amazonka.Panorama.ListApplicationInstanceNodeInstances

-- | <i>See:</i> <a>newListApplicationInstanceNodeInstances</a> smart
--   constructor.
data ListApplicationInstanceNodeInstances
ListApplicationInstanceNodeInstances' :: Maybe Text -> Maybe Natural -> Text -> ListApplicationInstanceNodeInstances

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
[$sel:nextToken:ListApplicationInstanceNodeInstances'] :: ListApplicationInstanceNodeInstances -> Maybe Text

-- | The maximum number of node instances to return in one page of results.
[$sel:maxResults:ListApplicationInstanceNodeInstances'] :: ListApplicationInstanceNodeInstances -> Maybe Natural

-- | The node instances' application instance ID.
[$sel:applicationInstanceId:ListApplicationInstanceNodeInstances'] :: ListApplicationInstanceNodeInstances -> Text

-- | Create a value of <a>ListApplicationInstanceNodeInstances</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationInstanceNodeInstances'</a>,
--   <a>listApplicationInstanceNodeInstances_nextToken</a> - Specify the
--   pagination token from a previous request to retrieve the next page of
--   results.
--   
--   <a>$sel:maxResults:ListApplicationInstanceNodeInstances'</a>,
--   <a>listApplicationInstanceNodeInstances_maxResults</a> - The maximum
--   number of node instances to return in one page of results.
--   
--   
--   <a>$sel:applicationInstanceId:ListApplicationInstanceNodeInstances'</a>,
--   <a>listApplicationInstanceNodeInstances_applicationInstanceId</a> -
--   The node instances' application instance ID.
newListApplicationInstanceNodeInstances :: Text -> ListApplicationInstanceNodeInstances

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listApplicationInstanceNodeInstances_nextToken :: Lens' ListApplicationInstanceNodeInstances (Maybe Text)

-- | The maximum number of node instances to return in one page of results.
listApplicationInstanceNodeInstances_maxResults :: Lens' ListApplicationInstanceNodeInstances (Maybe Natural)

-- | The node instances' application instance ID.
listApplicationInstanceNodeInstances_applicationInstanceId :: Lens' ListApplicationInstanceNodeInstances Text

-- | <i>See:</i> <a>newListApplicationInstanceNodeInstancesResponse</a>
--   smart constructor.
data ListApplicationInstanceNodeInstancesResponse
ListApplicationInstanceNodeInstancesResponse' :: Maybe Text -> Maybe [NodeInstance] -> Int -> ListApplicationInstanceNodeInstancesResponse

-- | A pagination token that's included if more results are available.
[$sel:nextToken:ListApplicationInstanceNodeInstancesResponse'] :: ListApplicationInstanceNodeInstancesResponse -> Maybe Text

-- | A list of node instances.
[$sel:nodeInstances:ListApplicationInstanceNodeInstancesResponse'] :: ListApplicationInstanceNodeInstancesResponse -> Maybe [NodeInstance]

-- | The response's http status code.
[$sel:httpStatus:ListApplicationInstanceNodeInstancesResponse'] :: ListApplicationInstanceNodeInstancesResponse -> Int

-- | Create a value of <a>ListApplicationInstanceNodeInstancesResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationInstanceNodeInstances'</a>,
--   <a>listApplicationInstanceNodeInstancesResponse_nextToken</a> - A
--   pagination token that's included if more results are available.
--   
--   
--   <a>$sel:nodeInstances:ListApplicationInstanceNodeInstancesResponse'</a>,
--   <a>listApplicationInstanceNodeInstancesResponse_nodeInstances</a> - A
--   list of node instances.
--   
--   <a>$sel:httpStatus:ListApplicationInstanceNodeInstancesResponse'</a>,
--   <a>listApplicationInstanceNodeInstancesResponse_httpStatus</a> - The
--   response's http status code.
newListApplicationInstanceNodeInstancesResponse :: Int -> ListApplicationInstanceNodeInstancesResponse

-- | A pagination token that's included if more results are available.
listApplicationInstanceNodeInstancesResponse_nextToken :: Lens' ListApplicationInstanceNodeInstancesResponse (Maybe Text)

-- | A list of node instances.
listApplicationInstanceNodeInstancesResponse_nodeInstances :: Lens' ListApplicationInstanceNodeInstancesResponse (Maybe [NodeInstance])

-- | The response's http status code.
listApplicationInstanceNodeInstancesResponse_httpStatus :: Lens' ListApplicationInstanceNodeInstancesResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstances
instance GHC.Show.Show Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstances
instance GHC.Read.Read Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstances
instance GHC.Classes.Eq Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstances
instance GHC.Generics.Generic Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstancesResponse
instance GHC.Show.Show Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstancesResponse
instance GHC.Read.Read Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstancesResponse
instance GHC.Classes.Eq Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstancesResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstances
instance Control.DeepSeq.NFData Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstancesResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstances
instance Control.DeepSeq.NFData Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstances
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstances
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstances
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.ListApplicationInstanceNodeInstances.ListApplicationInstanceNodeInstances


-- | Returns a list of application instance dependencies.
module Amazonka.Panorama.ListApplicationInstanceDependencies

-- | <i>See:</i> <a>newListApplicationInstanceDependencies</a> smart
--   constructor.
data ListApplicationInstanceDependencies
ListApplicationInstanceDependencies' :: Maybe Text -> Maybe Natural -> Text -> ListApplicationInstanceDependencies

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
[$sel:nextToken:ListApplicationInstanceDependencies'] :: ListApplicationInstanceDependencies -> Maybe Text

-- | The maximum number of application instance dependencies to return in
--   one page of results.
[$sel:maxResults:ListApplicationInstanceDependencies'] :: ListApplicationInstanceDependencies -> Maybe Natural

-- | The application instance's ID.
[$sel:applicationInstanceId:ListApplicationInstanceDependencies'] :: ListApplicationInstanceDependencies -> Text

-- | Create a value of <a>ListApplicationInstanceDependencies</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationInstanceDependencies'</a>,
--   <a>listApplicationInstanceDependencies_nextToken</a> - Specify the
--   pagination token from a previous request to retrieve the next page of
--   results.
--   
--   <a>$sel:maxResults:ListApplicationInstanceDependencies'</a>,
--   <a>listApplicationInstanceDependencies_maxResults</a> - The maximum
--   number of application instance dependencies to return in one page of
--   results.
--   
--   
--   <a>$sel:applicationInstanceId:ListApplicationInstanceDependencies'</a>,
--   <a>listApplicationInstanceDependencies_applicationInstanceId</a> - The
--   application instance's ID.
newListApplicationInstanceDependencies :: Text -> ListApplicationInstanceDependencies

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listApplicationInstanceDependencies_nextToken :: Lens' ListApplicationInstanceDependencies (Maybe Text)

-- | The maximum number of application instance dependencies to return in
--   one page of results.
listApplicationInstanceDependencies_maxResults :: Lens' ListApplicationInstanceDependencies (Maybe Natural)

-- | The application instance's ID.
listApplicationInstanceDependencies_applicationInstanceId :: Lens' ListApplicationInstanceDependencies Text

-- | <i>See:</i> <a>newListApplicationInstanceDependenciesResponse</a>
--   smart constructor.
data ListApplicationInstanceDependenciesResponse
ListApplicationInstanceDependenciesResponse' :: Maybe [PackageObject] -> Maybe Text -> Int -> ListApplicationInstanceDependenciesResponse

-- | A list of package objects.
[$sel:packageObjects:ListApplicationInstanceDependenciesResponse'] :: ListApplicationInstanceDependenciesResponse -> Maybe [PackageObject]

-- | A pagination token that's included if more results are available.
[$sel:nextToken:ListApplicationInstanceDependenciesResponse'] :: ListApplicationInstanceDependenciesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListApplicationInstanceDependenciesResponse'] :: ListApplicationInstanceDependenciesResponse -> Int

-- | Create a value of <a>ListApplicationInstanceDependenciesResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:packageObjects:ListApplicationInstanceDependenciesResponse'</a>,
--   <a>listApplicationInstanceDependenciesResponse_packageObjects</a> - A
--   list of package objects.
--   
--   <a>$sel:nextToken:ListApplicationInstanceDependencies'</a>,
--   <a>listApplicationInstanceDependenciesResponse_nextToken</a> - A
--   pagination token that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListApplicationInstanceDependenciesResponse'</a>,
--   <a>listApplicationInstanceDependenciesResponse_httpStatus</a> - The
--   response's http status code.
newListApplicationInstanceDependenciesResponse :: Int -> ListApplicationInstanceDependenciesResponse

-- | A list of package objects.
listApplicationInstanceDependenciesResponse_packageObjects :: Lens' ListApplicationInstanceDependenciesResponse (Maybe [PackageObject])

-- | A pagination token that's included if more results are available.
listApplicationInstanceDependenciesResponse_nextToken :: Lens' ListApplicationInstanceDependenciesResponse (Maybe Text)

-- | The response's http status code.
listApplicationInstanceDependenciesResponse_httpStatus :: Lens' ListApplicationInstanceDependenciesResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependencies
instance GHC.Show.Show Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependencies
instance GHC.Read.Read Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependencies
instance GHC.Classes.Eq Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependencies
instance GHC.Generics.Generic Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependenciesResponse
instance GHC.Show.Show Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependenciesResponse
instance GHC.Read.Read Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependenciesResponse
instance GHC.Classes.Eq Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependenciesResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependencies
instance Control.DeepSeq.NFData Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependenciesResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependencies
instance Control.DeepSeq.NFData Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependencies
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependencies
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependencies
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.ListApplicationInstanceDependencies.ListApplicationInstanceDependencies


-- | Returns information about a package version.
module Amazonka.Panorama.DescribePackageVersion

-- | <i>See:</i> <a>newDescribePackageVersion</a> smart constructor.
data DescribePackageVersion
DescribePackageVersion' :: Maybe Text -> Maybe Text -> Text -> Text -> DescribePackageVersion

-- | The version's patch version.
[$sel:patchVersion:DescribePackageVersion'] :: DescribePackageVersion -> Maybe Text

-- | The version's owner account.
[$sel:ownerAccount:DescribePackageVersion'] :: DescribePackageVersion -> Maybe Text

-- | The version's ID.
[$sel:packageId:DescribePackageVersion'] :: DescribePackageVersion -> Text

-- | The version's version.
[$sel:packageVersion:DescribePackageVersion'] :: DescribePackageVersion -> Text

-- | Create a value of <a>DescribePackageVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchVersion:DescribePackageVersion'</a>,
--   <a>describePackageVersion_patchVersion</a> - The version's patch
--   version.
--   
--   <a>$sel:ownerAccount:DescribePackageVersion'</a>,
--   <a>describePackageVersion_ownerAccount</a> - The version's owner
--   account.
--   
--   <a>$sel:packageId:DescribePackageVersion'</a>,
--   <a>describePackageVersion_packageId</a> - The version's ID.
--   
--   <a>$sel:packageVersion:DescribePackageVersion'</a>,
--   <a>describePackageVersion_packageVersion</a> - The version's version.
newDescribePackageVersion :: Text -> Text -> DescribePackageVersion

-- | The version's patch version.
describePackageVersion_patchVersion :: Lens' DescribePackageVersion (Maybe Text)

-- | The version's owner account.
describePackageVersion_ownerAccount :: Lens' DescribePackageVersion (Maybe Text)

-- | The version's ID.
describePackageVersion_packageId :: Lens' DescribePackageVersion Text

-- | The version's version.
describePackageVersion_packageVersion :: Lens' DescribePackageVersion Text

-- | <i>See:</i> <a>newDescribePackageVersionResponse</a> smart
--   constructor.
data DescribePackageVersionResponse
DescribePackageVersionResponse' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> Text -> Text -> Text -> Text -> Bool -> PackageVersionStatus -> DescribePackageVersionResponse

-- | The version's status description.
[$sel:statusDescription:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> Maybe Text

-- | The ARN of the package.
[$sel:packageArn:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> Maybe Text

-- | The version's registered time.
[$sel:registeredTime:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> Maybe POSIX

-- | The account ID of the version's owner.
[$sel:ownerAccount:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> Int

-- | The version's ID.
[$sel:packageId:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> Text

-- | The version's name.
[$sel:packageName:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> Text

-- | The version's version.
[$sel:packageVersion:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> Text

-- | The version's patch version.
[$sel:patchVersion:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> Text

-- | Whether the version is the latest available.
[$sel:isLatestPatch:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> Bool

-- | The version's status.
[$sel:status:DescribePackageVersionResponse'] :: DescribePackageVersionResponse -> PackageVersionStatus

-- | Create a value of <a>DescribePackageVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusDescription:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_statusDescription</a> - The
--   version's status description.
--   
--   <a>$sel:packageArn:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_packageArn</a> - The ARN of the
--   package.
--   
--   <a>$sel:registeredTime:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_registeredTime</a> - The version's
--   registered time.
--   
--   <a>$sel:ownerAccount:DescribePackageVersion'</a>,
--   <a>describePackageVersionResponse_ownerAccount</a> - The account ID of
--   the version's owner.
--   
--   <a>$sel:httpStatus:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:packageId:DescribePackageVersion'</a>,
--   <a>describePackageVersionResponse_packageId</a> - The version's ID.
--   
--   <a>$sel:packageName:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_packageName</a> - The version's
--   name.
--   
--   <a>$sel:packageVersion:DescribePackageVersion'</a>,
--   <a>describePackageVersionResponse_packageVersion</a> - The version's
--   version.
--   
--   <a>$sel:patchVersion:DescribePackageVersion'</a>,
--   <a>describePackageVersionResponse_patchVersion</a> - The version's
--   patch version.
--   
--   <a>$sel:isLatestPatch:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_isLatestPatch</a> - Whether the
--   version is the latest available.
--   
--   <a>$sel:status:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_status</a> - The version's status.
newDescribePackageVersionResponse :: Int -> Text -> Text -> Text -> Text -> Bool -> PackageVersionStatus -> DescribePackageVersionResponse

-- | The version's status description.
describePackageVersionResponse_statusDescription :: Lens' DescribePackageVersionResponse (Maybe Text)

-- | The ARN of the package.
describePackageVersionResponse_packageArn :: Lens' DescribePackageVersionResponse (Maybe Text)

-- | The version's registered time.
describePackageVersionResponse_registeredTime :: Lens' DescribePackageVersionResponse (Maybe UTCTime)

-- | The account ID of the version's owner.
describePackageVersionResponse_ownerAccount :: Lens' DescribePackageVersionResponse (Maybe Text)

-- | The response's http status code.
describePackageVersionResponse_httpStatus :: Lens' DescribePackageVersionResponse Int

-- | The version's ID.
describePackageVersionResponse_packageId :: Lens' DescribePackageVersionResponse Text

-- | The version's name.
describePackageVersionResponse_packageName :: Lens' DescribePackageVersionResponse Text

-- | The version's version.
describePackageVersionResponse_packageVersion :: Lens' DescribePackageVersionResponse Text

-- | The version's patch version.
describePackageVersionResponse_patchVersion :: Lens' DescribePackageVersionResponse Text

-- | Whether the version is the latest available.
describePackageVersionResponse_isLatestPatch :: Lens' DescribePackageVersionResponse Bool

-- | The version's status.
describePackageVersionResponse_status :: Lens' DescribePackageVersionResponse PackageVersionStatus
instance GHC.Generics.Generic Amazonka.Panorama.DescribePackageVersion.DescribePackageVersion
instance GHC.Show.Show Amazonka.Panorama.DescribePackageVersion.DescribePackageVersion
instance GHC.Read.Read Amazonka.Panorama.DescribePackageVersion.DescribePackageVersion
instance GHC.Classes.Eq Amazonka.Panorama.DescribePackageVersion.DescribePackageVersion
instance GHC.Generics.Generic Amazonka.Panorama.DescribePackageVersion.DescribePackageVersionResponse
instance GHC.Show.Show Amazonka.Panorama.DescribePackageVersion.DescribePackageVersionResponse
instance GHC.Read.Read Amazonka.Panorama.DescribePackageVersion.DescribePackageVersionResponse
instance GHC.Classes.Eq Amazonka.Panorama.DescribePackageVersion.DescribePackageVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.DescribePackageVersion.DescribePackageVersion
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribePackageVersion.DescribePackageVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.DescribePackageVersion.DescribePackageVersion
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribePackageVersion.DescribePackageVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.DescribePackageVersion.DescribePackageVersion
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.DescribePackageVersion.DescribePackageVersion
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.DescribePackageVersion.DescribePackageVersion


-- | Returns information about a package import job.
module Amazonka.Panorama.DescribePackageImportJob

-- | <i>See:</i> <a>newDescribePackageImportJob</a> smart constructor.
data DescribePackageImportJob
DescribePackageImportJob' :: Text -> DescribePackageImportJob

-- | The job's ID.
[$sel:jobId:DescribePackageImportJob'] :: DescribePackageImportJob -> Text

-- | Create a value of <a>DescribePackageImportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribePackageImportJob'</a>,
--   <a>describePackageImportJob_jobId</a> - The job's ID.
newDescribePackageImportJob :: Text -> DescribePackageImportJob

-- | The job's ID.
describePackageImportJob_jobId :: Lens' DescribePackageImportJob Text

-- | <i>See:</i> <a>newDescribePackageImportJobResponse</a> smart
--   constructor.
data DescribePackageImportJobResponse
DescribePackageImportJobResponse' :: Maybe Text -> Maybe [JobResourceTags] -> Int -> Text -> PackageImportJobType -> PackageImportJobInputConfig -> PackageImportJobOutputConfig -> PackageImportJobOutput -> POSIX -> POSIX -> PackageImportJobStatus -> Text -> DescribePackageImportJobResponse

-- | The job's client token.
[$sel:clientToken:DescribePackageImportJobResponse'] :: DescribePackageImportJobResponse -> Maybe Text

-- | The job's tags.
[$sel:jobTags:DescribePackageImportJobResponse'] :: DescribePackageImportJobResponse -> Maybe [JobResourceTags]

-- | The response's http status code.
[$sel:httpStatus:DescribePackageImportJobResponse'] :: DescribePackageImportJobResponse -> Int

-- | The job's ID.
[$sel:jobId:DescribePackageImportJobResponse'] :: DescribePackageImportJobResponse -> Text

-- | The job's type.
[$sel:jobType:DescribePackageImportJobResponse'] :: DescribePackageImportJobResponse -> PackageImportJobType

-- | The job's input config.
[$sel:inputConfig:DescribePackageImportJobResponse'] :: DescribePackageImportJobResponse -> PackageImportJobInputConfig

-- | The job's output config.
[$sel:outputConfig:DescribePackageImportJobResponse'] :: DescribePackageImportJobResponse -> PackageImportJobOutputConfig

-- | The job's output.
[$sel:output:DescribePackageImportJobResponse'] :: DescribePackageImportJobResponse -> PackageImportJobOutput

-- | When the job was created.
[$sel:createdTime:DescribePackageImportJobResponse'] :: DescribePackageImportJobResponse -> POSIX

-- | When the job was updated.
[$sel:lastUpdatedTime:DescribePackageImportJobResponse'] :: DescribePackageImportJobResponse -> POSIX

-- | The job's status.
[$sel:status:DescribePackageImportJobResponse'] :: DescribePackageImportJobResponse -> PackageImportJobStatus

-- | The job's status message.
[$sel:statusMessage:DescribePackageImportJobResponse'] :: DescribePackageImportJobResponse -> Text

-- | Create a value of <a>DescribePackageImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_clientToken</a> - The job's client
--   token.
--   
--   <a>$sel:jobTags:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_jobTags</a> - The job's tags.
--   
--   <a>$sel:httpStatus:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:jobId:DescribePackageImportJob'</a>,
--   <a>describePackageImportJobResponse_jobId</a> - The job's ID.
--   
--   <a>$sel:jobType:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_jobType</a> - The job's type.
--   
--   <a>$sel:inputConfig:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_inputConfig</a> - The job's input
--   config.
--   
--   <a>$sel:outputConfig:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_outputConfig</a> - The job's
--   output config.
--   
--   <a>$sel:output:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_output</a> - The job's output.
--   
--   <a>$sel:createdTime:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_createdTime</a> - When the job was
--   created.
--   
--   <a>$sel:lastUpdatedTime:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_lastUpdatedTime</a> - When the job
--   was updated.
--   
--   <a>$sel:status:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_status</a> - The job's status.
--   
--   <a>$sel:statusMessage:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_statusMessage</a> - The job's
--   status message.
newDescribePackageImportJobResponse :: Int -> Text -> PackageImportJobType -> PackageImportJobInputConfig -> PackageImportJobOutputConfig -> PackageImportJobOutput -> UTCTime -> UTCTime -> PackageImportJobStatus -> Text -> DescribePackageImportJobResponse

-- | The job's client token.
describePackageImportJobResponse_clientToken :: Lens' DescribePackageImportJobResponse (Maybe Text)

-- | The job's tags.
describePackageImportJobResponse_jobTags :: Lens' DescribePackageImportJobResponse (Maybe [JobResourceTags])

-- | The response's http status code.
describePackageImportJobResponse_httpStatus :: Lens' DescribePackageImportJobResponse Int

-- | The job's ID.
describePackageImportJobResponse_jobId :: Lens' DescribePackageImportJobResponse Text

-- | The job's type.
describePackageImportJobResponse_jobType :: Lens' DescribePackageImportJobResponse PackageImportJobType

-- | The job's input config.
describePackageImportJobResponse_inputConfig :: Lens' DescribePackageImportJobResponse PackageImportJobInputConfig

-- | The job's output config.
describePackageImportJobResponse_outputConfig :: Lens' DescribePackageImportJobResponse PackageImportJobOutputConfig

-- | The job's output.
describePackageImportJobResponse_output :: Lens' DescribePackageImportJobResponse PackageImportJobOutput

-- | When the job was created.
describePackageImportJobResponse_createdTime :: Lens' DescribePackageImportJobResponse UTCTime

-- | When the job was updated.
describePackageImportJobResponse_lastUpdatedTime :: Lens' DescribePackageImportJobResponse UTCTime

-- | The job's status.
describePackageImportJobResponse_status :: Lens' DescribePackageImportJobResponse PackageImportJobStatus

-- | The job's status message.
describePackageImportJobResponse_statusMessage :: Lens' DescribePackageImportJobResponse Text
instance GHC.Generics.Generic Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJob
instance GHC.Show.Show Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJob
instance GHC.Read.Read Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJob
instance GHC.Classes.Eq Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJob
instance GHC.Generics.Generic Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJobResponse
instance GHC.Show.Show Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJobResponse
instance GHC.Read.Read Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJobResponse
instance GHC.Classes.Eq Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJob
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJob
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJob
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJob
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.DescribePackageImportJob.DescribePackageImportJob


-- | Returns information about a package.
module Amazonka.Panorama.DescribePackage

-- | <i>See:</i> <a>newDescribePackage</a> smart constructor.
data DescribePackage
DescribePackage' :: Text -> DescribePackage

-- | The package's ID.
[$sel:packageId:DescribePackage'] :: DescribePackage -> Text

-- | Create a value of <a>DescribePackage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageId:DescribePackage'</a>,
--   <a>describePackage_packageId</a> - The package's ID.
newDescribePackage :: Text -> DescribePackage

-- | The package's ID.
describePackage_packageId :: Lens' DescribePackage Text

-- | <i>See:</i> <a>newDescribePackageResponse</a> smart constructor.
data DescribePackageResponse
DescribePackageResponse' :: Maybe [Text] -> Maybe [Text] -> Int -> Text -> Text -> Text -> StorageLocation -> POSIX -> HashMap Text Text -> DescribePackageResponse

-- | ARNs of accounts that have write access to the package.
[$sel:writeAccessPrincipalArns:DescribePackageResponse'] :: DescribePackageResponse -> Maybe [Text]

-- | ARNs of accounts that have read access to the package.
[$sel:readAccessPrincipalArns:DescribePackageResponse'] :: DescribePackageResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:DescribePackageResponse'] :: DescribePackageResponse -> Int

-- | The package's ID.
[$sel:packageId:DescribePackageResponse'] :: DescribePackageResponse -> Text

-- | The package's name.
[$sel:packageName:DescribePackageResponse'] :: DescribePackageResponse -> Text

-- | The package's ARN.
[$sel:arn:DescribePackageResponse'] :: DescribePackageResponse -> Text

-- | The package's storage location.
[$sel:storageLocation:DescribePackageResponse'] :: DescribePackageResponse -> StorageLocation

-- | When the package was created.
[$sel:createdTime:DescribePackageResponse'] :: DescribePackageResponse -> POSIX

-- | The package's tags.
[$sel:tags:DescribePackageResponse'] :: DescribePackageResponse -> HashMap Text Text

-- | Create a value of <a>DescribePackageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:writeAccessPrincipalArns:DescribePackageResponse'</a>,
--   <a>describePackageResponse_writeAccessPrincipalArns</a> - ARNs of
--   accounts that have write access to the package.
--   
--   <a>$sel:readAccessPrincipalArns:DescribePackageResponse'</a>,
--   <a>describePackageResponse_readAccessPrincipalArns</a> - ARNs of
--   accounts that have read access to the package.
--   
--   <a>$sel:httpStatus:DescribePackageResponse'</a>,
--   <a>describePackageResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:packageId:DescribePackage'</a>,
--   <a>describePackageResponse_packageId</a> - The package's ID.
--   
--   <a>$sel:packageName:DescribePackageResponse'</a>,
--   <a>describePackageResponse_packageName</a> - The package's name.
--   
--   <a>$sel:arn:DescribePackageResponse'</a>,
--   <a>describePackageResponse_arn</a> - The package's ARN.
--   
--   <a>$sel:storageLocation:DescribePackageResponse'</a>,
--   <a>describePackageResponse_storageLocation</a> - The package's storage
--   location.
--   
--   <a>$sel:createdTime:DescribePackageResponse'</a>,
--   <a>describePackageResponse_createdTime</a> - When the package was
--   created.
--   
--   <a>$sel:tags:DescribePackageResponse'</a>,
--   <a>describePackageResponse_tags</a> - The package's tags.
newDescribePackageResponse :: Int -> Text -> Text -> Text -> StorageLocation -> UTCTime -> DescribePackageResponse

-- | ARNs of accounts that have write access to the package.
describePackageResponse_writeAccessPrincipalArns :: Lens' DescribePackageResponse (Maybe [Text])

-- | ARNs of accounts that have read access to the package.
describePackageResponse_readAccessPrincipalArns :: Lens' DescribePackageResponse (Maybe [Text])

-- | The response's http status code.
describePackageResponse_httpStatus :: Lens' DescribePackageResponse Int

-- | The package's ID.
describePackageResponse_packageId :: Lens' DescribePackageResponse Text

-- | The package's name.
describePackageResponse_packageName :: Lens' DescribePackageResponse Text

-- | The package's ARN.
describePackageResponse_arn :: Lens' DescribePackageResponse Text

-- | The package's storage location.
describePackageResponse_storageLocation :: Lens' DescribePackageResponse StorageLocation

-- | When the package was created.
describePackageResponse_createdTime :: Lens' DescribePackageResponse UTCTime

-- | The package's tags.
describePackageResponse_tags :: Lens' DescribePackageResponse (HashMap Text Text)
instance GHC.Generics.Generic Amazonka.Panorama.DescribePackage.DescribePackage
instance GHC.Show.Show Amazonka.Panorama.DescribePackage.DescribePackage
instance GHC.Read.Read Amazonka.Panorama.DescribePackage.DescribePackage
instance GHC.Classes.Eq Amazonka.Panorama.DescribePackage.DescribePackage
instance GHC.Generics.Generic Amazonka.Panorama.DescribePackage.DescribePackageResponse
instance GHC.Show.Show Amazonka.Panorama.DescribePackage.DescribePackageResponse
instance GHC.Read.Read Amazonka.Panorama.DescribePackage.DescribePackageResponse
instance GHC.Classes.Eq Amazonka.Panorama.DescribePackage.DescribePackageResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.DescribePackage.DescribePackage
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribePackage.DescribePackageResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.DescribePackage.DescribePackage
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribePackage.DescribePackage
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.DescribePackage.DescribePackage
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.DescribePackage.DescribePackage
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.DescribePackage.DescribePackage


-- | Returns information about a job to create a camera stream node.
module Amazonka.Panorama.DescribeNodeFromTemplateJob

-- | <i>See:</i> <a>newDescribeNodeFromTemplateJob</a> smart constructor.
data DescribeNodeFromTemplateJob
DescribeNodeFromTemplateJob' :: Text -> DescribeNodeFromTemplateJob

-- | The job's ID.
[$sel:jobId:DescribeNodeFromTemplateJob'] :: DescribeNodeFromTemplateJob -> Text

-- | Create a value of <a>DescribeNodeFromTemplateJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribeNodeFromTemplateJob'</a>,
--   <a>describeNodeFromTemplateJob_jobId</a> - The job's ID.
newDescribeNodeFromTemplateJob :: Text -> DescribeNodeFromTemplateJob

-- | The job's ID.
describeNodeFromTemplateJob_jobId :: Lens' DescribeNodeFromTemplateJob Text

-- | <i>See:</i> <a>newDescribeNodeFromTemplateJobResponse</a> smart
--   constructor.
data DescribeNodeFromTemplateJobResponse
DescribeNodeFromTemplateJobResponse' :: Maybe [JobResourceTags] -> Maybe Text -> Int -> Text -> NodeFromTemplateJobStatus -> Text -> POSIX -> POSIX -> Text -> Text -> Text -> TemplateType -> HashMap Text (Sensitive Text) -> DescribeNodeFromTemplateJobResponse

-- | The job's tags.
[$sel:jobTags:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> Maybe [JobResourceTags]

-- | The node's description.
[$sel:nodeDescription:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> Int

-- | The job's ID.
[$sel:jobId:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> Text

-- | The job's status.
[$sel:status:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> NodeFromTemplateJobStatus

-- | The job's status message.
[$sel:statusMessage:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> Text

-- | When the job was created.
[$sel:createdTime:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> POSIX

-- | When the job was updated.
[$sel:lastUpdatedTime:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> POSIX

-- | The job's output package name.
[$sel:outputPackageName:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> Text

-- | The job's output package version.
[$sel:outputPackageVersion:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> Text

-- | The node's name.
[$sel:nodeName:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> Text

-- | The job's template type.
[$sel:templateType:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> TemplateType

-- | The job's template parameters.
[$sel:templateParameters:DescribeNodeFromTemplateJobResponse'] :: DescribeNodeFromTemplateJobResponse -> HashMap Text (Sensitive Text)

-- | Create a value of <a>DescribeNodeFromTemplateJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobTags:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_jobTags</a> - The job's tags.
--   
--   <a>$sel:nodeDescription:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_nodeDescription</a> - The
--   node's description.
--   
--   <a>$sel:httpStatus:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:jobId:DescribeNodeFromTemplateJob'</a>,
--   <a>describeNodeFromTemplateJobResponse_jobId</a> - The job's ID.
--   
--   <a>$sel:status:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_status</a> - The job's status.
--   
--   <a>$sel:statusMessage:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_statusMessage</a> - The job's
--   status message.
--   
--   <a>$sel:createdTime:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_createdTime</a> - When the job
--   was created.
--   
--   <a>$sel:lastUpdatedTime:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_lastUpdatedTime</a> - When the
--   job was updated.
--   
--   <a>$sel:outputPackageName:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_outputPackageName</a> - The
--   job's output package name.
--   
--   <a>$sel:outputPackageVersion:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_outputPackageVersion</a> - The
--   job's output package version.
--   
--   <a>$sel:nodeName:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_nodeName</a> - The node's name.
--   
--   <a>$sel:templateType:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_templateType</a> - The job's
--   template type.
--   
--   <a>$sel:templateParameters:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_templateParameters</a> - The
--   job's template parameters.
newDescribeNodeFromTemplateJobResponse :: Int -> Text -> NodeFromTemplateJobStatus -> Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> TemplateType -> DescribeNodeFromTemplateJobResponse

-- | The job's tags.
describeNodeFromTemplateJobResponse_jobTags :: Lens' DescribeNodeFromTemplateJobResponse (Maybe [JobResourceTags])

-- | The node's description.
describeNodeFromTemplateJobResponse_nodeDescription :: Lens' DescribeNodeFromTemplateJobResponse (Maybe Text)

-- | The response's http status code.
describeNodeFromTemplateJobResponse_httpStatus :: Lens' DescribeNodeFromTemplateJobResponse Int

-- | The job's ID.
describeNodeFromTemplateJobResponse_jobId :: Lens' DescribeNodeFromTemplateJobResponse Text

-- | The job's status.
describeNodeFromTemplateJobResponse_status :: Lens' DescribeNodeFromTemplateJobResponse NodeFromTemplateJobStatus

-- | The job's status message.
describeNodeFromTemplateJobResponse_statusMessage :: Lens' DescribeNodeFromTemplateJobResponse Text

-- | When the job was created.
describeNodeFromTemplateJobResponse_createdTime :: Lens' DescribeNodeFromTemplateJobResponse UTCTime

-- | When the job was updated.
describeNodeFromTemplateJobResponse_lastUpdatedTime :: Lens' DescribeNodeFromTemplateJobResponse UTCTime

-- | The job's output package name.
describeNodeFromTemplateJobResponse_outputPackageName :: Lens' DescribeNodeFromTemplateJobResponse Text

-- | The job's output package version.
describeNodeFromTemplateJobResponse_outputPackageVersion :: Lens' DescribeNodeFromTemplateJobResponse Text

-- | The node's name.
describeNodeFromTemplateJobResponse_nodeName :: Lens' DescribeNodeFromTemplateJobResponse Text

-- | The job's template type.
describeNodeFromTemplateJobResponse_templateType :: Lens' DescribeNodeFromTemplateJobResponse TemplateType

-- | The job's template parameters.
describeNodeFromTemplateJobResponse_templateParameters :: Lens' DescribeNodeFromTemplateJobResponse (HashMap Text Text)
instance GHC.Generics.Generic Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJob
instance GHC.Show.Show Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJob
instance GHC.Read.Read Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJob
instance GHC.Classes.Eq Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJob
instance GHC.Generics.Generic Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJobResponse
instance GHC.Show.Show Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJobResponse
instance GHC.Classes.Eq Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJob
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJob
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJob
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJob
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.DescribeNodeFromTemplateJob.DescribeNodeFromTemplateJob


-- | Returns information about a node.
module Amazonka.Panorama.DescribeNode

-- | <i>See:</i> <a>newDescribeNode</a> smart constructor.
data DescribeNode
DescribeNode' :: Maybe Text -> Text -> DescribeNode

-- | The account ID of the node's owner.
[$sel:ownerAccount:DescribeNode'] :: DescribeNode -> Maybe Text

-- | The node's ID.
[$sel:nodeId:DescribeNode'] :: DescribeNode -> Text

-- | Create a value of <a>DescribeNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerAccount:DescribeNode'</a>,
--   <a>describeNode_ownerAccount</a> - The account ID of the node's owner.
--   
--   <a>$sel:nodeId:DescribeNode'</a>, <a>describeNode_nodeId</a> - The
--   node's ID.
newDescribeNode :: Text -> DescribeNode

-- | The account ID of the node's owner.
describeNode_ownerAccount :: Lens' DescribeNode (Maybe Text)

-- | The node's ID.
describeNode_nodeId :: Lens' DescribeNode Text

-- | <i>See:</i> <a>newDescribeNodeResponse</a> smart constructor.
data DescribeNodeResponse
DescribeNodeResponse' :: Maybe Text -> Maybe Text -> Int -> Text -> Text -> NodeCategory -> Text -> Text -> Text -> Text -> Text -> NodeInterface -> Text -> POSIX -> POSIX -> DescribeNodeResponse

-- | The node's asset name.
[$sel:assetName:DescribeNodeResponse'] :: DescribeNodeResponse -> Maybe Text

-- | The node's ARN.
[$sel:packageArn:DescribeNodeResponse'] :: DescribeNodeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeNodeResponse'] :: DescribeNodeResponse -> Int

-- | The node's ID.
[$sel:nodeId:DescribeNodeResponse'] :: DescribeNodeResponse -> Text

-- | The node's name.
[$sel:name:DescribeNodeResponse'] :: DescribeNodeResponse -> Text

-- | The node's category.
[$sel:category:DescribeNodeResponse'] :: DescribeNodeResponse -> NodeCategory

-- | The account ID of the node's owner.
[$sel:ownerAccount:DescribeNodeResponse'] :: DescribeNodeResponse -> Text

-- | The node's package name.
[$sel:packageName:DescribeNodeResponse'] :: DescribeNodeResponse -> Text

-- | The node's package ID.
[$sel:packageId:DescribeNodeResponse'] :: DescribeNodeResponse -> Text

-- | The node's package version.
[$sel:packageVersion:DescribeNodeResponse'] :: DescribeNodeResponse -> Text

-- | The node's patch version.
[$sel:patchVersion:DescribeNodeResponse'] :: DescribeNodeResponse -> Text

-- | The node's interface.
[$sel:nodeInterface:DescribeNodeResponse'] :: DescribeNodeResponse -> NodeInterface

-- | The node's description.
[$sel:description:DescribeNodeResponse'] :: DescribeNodeResponse -> Text

-- | When the node was created.
[$sel:createdTime:DescribeNodeResponse'] :: DescribeNodeResponse -> POSIX

-- | When the node was updated.
[$sel:lastUpdatedTime:DescribeNodeResponse'] :: DescribeNodeResponse -> POSIX

-- | Create a value of <a>DescribeNodeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assetName:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_assetName</a> - The node's asset name.
--   
--   <a>$sel:packageArn:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_packageArn</a> - The node's ARN.
--   
--   <a>$sel:httpStatus:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:nodeId:DescribeNode'</a>, <a>describeNodeResponse_nodeId</a> -
--   The node's ID.
--   
--   <a>$sel:name:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_name</a> - The node's name.
--   
--   <a>$sel:category:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_category</a> - The node's category.
--   
--   <a>$sel:ownerAccount:DescribeNode'</a>,
--   <a>describeNodeResponse_ownerAccount</a> - The account ID of the
--   node's owner.
--   
--   <a>$sel:packageName:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_packageName</a> - The node's package name.
--   
--   <a>$sel:packageId:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_packageId</a> - The node's package ID.
--   
--   <a>$sel:packageVersion:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_packageVersion</a> - The node's package
--   version.
--   
--   <a>$sel:patchVersion:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_patchVersion</a> - The node's patch version.
--   
--   <a>$sel:nodeInterface:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_nodeInterface</a> - The node's interface.
--   
--   <a>$sel:description:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_description</a> - The node's description.
--   
--   <a>$sel:createdTime:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_createdTime</a> - When the node was created.
--   
--   <a>$sel:lastUpdatedTime:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_lastUpdatedTime</a> - When the node was
--   updated.
newDescribeNodeResponse :: Int -> Text -> Text -> NodeCategory -> Text -> Text -> Text -> Text -> Text -> NodeInterface -> Text -> UTCTime -> UTCTime -> DescribeNodeResponse

-- | The node's asset name.
describeNodeResponse_assetName :: Lens' DescribeNodeResponse (Maybe Text)

-- | The node's ARN.
describeNodeResponse_packageArn :: Lens' DescribeNodeResponse (Maybe Text)

-- | The response's http status code.
describeNodeResponse_httpStatus :: Lens' DescribeNodeResponse Int

-- | The node's ID.
describeNodeResponse_nodeId :: Lens' DescribeNodeResponse Text

-- | The node's name.
describeNodeResponse_name :: Lens' DescribeNodeResponse Text

-- | The node's category.
describeNodeResponse_category :: Lens' DescribeNodeResponse NodeCategory

-- | The account ID of the node's owner.
describeNodeResponse_ownerAccount :: Lens' DescribeNodeResponse Text

-- | The node's package name.
describeNodeResponse_packageName :: Lens' DescribeNodeResponse Text

-- | The node's package ID.
describeNodeResponse_packageId :: Lens' DescribeNodeResponse Text

-- | The node's package version.
describeNodeResponse_packageVersion :: Lens' DescribeNodeResponse Text

-- | The node's patch version.
describeNodeResponse_patchVersion :: Lens' DescribeNodeResponse Text

-- | The node's interface.
describeNodeResponse_nodeInterface :: Lens' DescribeNodeResponse NodeInterface

-- | The node's description.
describeNodeResponse_description :: Lens' DescribeNodeResponse Text

-- | When the node was created.
describeNodeResponse_createdTime :: Lens' DescribeNodeResponse UTCTime

-- | When the node was updated.
describeNodeResponse_lastUpdatedTime :: Lens' DescribeNodeResponse UTCTime
instance GHC.Generics.Generic Amazonka.Panorama.DescribeNode.DescribeNode
instance GHC.Show.Show Amazonka.Panorama.DescribeNode.DescribeNode
instance GHC.Read.Read Amazonka.Panorama.DescribeNode.DescribeNode
instance GHC.Classes.Eq Amazonka.Panorama.DescribeNode.DescribeNode
instance GHC.Generics.Generic Amazonka.Panorama.DescribeNode.DescribeNodeResponse
instance GHC.Show.Show Amazonka.Panorama.DescribeNode.DescribeNodeResponse
instance GHC.Read.Read Amazonka.Panorama.DescribeNode.DescribeNodeResponse
instance GHC.Classes.Eq Amazonka.Panorama.DescribeNode.DescribeNodeResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.DescribeNode.DescribeNode
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribeNode.DescribeNodeResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.DescribeNode.DescribeNode
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribeNode.DescribeNode
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.DescribeNode.DescribeNode
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.DescribeNode.DescribeNode
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.DescribeNode.DescribeNode


-- | Returns information about a device job.
module Amazonka.Panorama.DescribeDeviceJob

-- | <i>See:</i> <a>newDescribeDeviceJob</a> smart constructor.
data DescribeDeviceJob
DescribeDeviceJob' :: Text -> DescribeDeviceJob

-- | The job's ID.
[$sel:jobId:DescribeDeviceJob'] :: DescribeDeviceJob -> Text

-- | Create a value of <a>DescribeDeviceJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribeDeviceJob'</a>, <a>describeDeviceJob_jobId</a> -
--   The job's ID.
newDescribeDeviceJob :: Text -> DescribeDeviceJob

-- | The job's ID.
describeDeviceJob_jobId :: Lens' DescribeDeviceJob Text

-- | <i>See:</i> <a>newDescribeDeviceJobResponse</a> smart constructor.
data DescribeDeviceJobResponse
DescribeDeviceJobResponse' :: Maybe UpdateProgress -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DeviceType -> Int -> DescribeDeviceJobResponse

-- | The job's status.
[$sel:status:DescribeDeviceJobResponse'] :: DescribeDeviceJobResponse -> Maybe UpdateProgress

-- | The job's ID.
[$sel:jobId:DescribeDeviceJobResponse'] :: DescribeDeviceJobResponse -> Maybe Text

-- | When the job was created.
[$sel:createdTime:DescribeDeviceJobResponse'] :: DescribeDeviceJobResponse -> Maybe POSIX

-- | The device's ARN.
[$sel:deviceArn:DescribeDeviceJobResponse'] :: DescribeDeviceJobResponse -> Maybe Text

-- | For an OTA job, the target version of the device software.
[$sel:imageVersion:DescribeDeviceJobResponse'] :: DescribeDeviceJobResponse -> Maybe Text

-- | The device's name.
[$sel:deviceName:DescribeDeviceJobResponse'] :: DescribeDeviceJobResponse -> Maybe Text

-- | The device's ID.
[$sel:deviceId:DescribeDeviceJobResponse'] :: DescribeDeviceJobResponse -> Maybe Text

-- | The device's type.
[$sel:deviceType:DescribeDeviceJobResponse'] :: DescribeDeviceJobResponse -> Maybe DeviceType

-- | The response's http status code.
[$sel:httpStatus:DescribeDeviceJobResponse'] :: DescribeDeviceJobResponse -> Int

-- | Create a value of <a>DescribeDeviceJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_status</a> - The job's status.
--   
--   <a>$sel:jobId:DescribeDeviceJob'</a>,
--   <a>describeDeviceJobResponse_jobId</a> - The job's ID.
--   
--   <a>$sel:createdTime:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_createdTime</a> - When the job was
--   created.
--   
--   <a>$sel:deviceArn:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_deviceArn</a> - The device's ARN.
--   
--   <a>$sel:imageVersion:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_imageVersion</a> - For an OTA job, the
--   target version of the device software.
--   
--   <a>$sel:deviceName:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_deviceName</a> - The device's name.
--   
--   <a>$sel:deviceId:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_deviceId</a> - The device's ID.
--   
--   <a>$sel:deviceType:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_deviceType</a> - The device's type.
--   
--   <a>$sel:httpStatus:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDeviceJobResponse :: Int -> DescribeDeviceJobResponse

-- | The job's status.
describeDeviceJobResponse_status :: Lens' DescribeDeviceJobResponse (Maybe UpdateProgress)

-- | The job's ID.
describeDeviceJobResponse_jobId :: Lens' DescribeDeviceJobResponse (Maybe Text)

-- | When the job was created.
describeDeviceJobResponse_createdTime :: Lens' DescribeDeviceJobResponse (Maybe UTCTime)

-- | The device's ARN.
describeDeviceJobResponse_deviceArn :: Lens' DescribeDeviceJobResponse (Maybe Text)

-- | For an OTA job, the target version of the device software.
describeDeviceJobResponse_imageVersion :: Lens' DescribeDeviceJobResponse (Maybe Text)

-- | The device's name.
describeDeviceJobResponse_deviceName :: Lens' DescribeDeviceJobResponse (Maybe Text)

-- | The device's ID.
describeDeviceJobResponse_deviceId :: Lens' DescribeDeviceJobResponse (Maybe Text)

-- | The device's type.
describeDeviceJobResponse_deviceType :: Lens' DescribeDeviceJobResponse (Maybe DeviceType)

-- | The response's http status code.
describeDeviceJobResponse_httpStatus :: Lens' DescribeDeviceJobResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJob
instance GHC.Show.Show Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJob
instance GHC.Read.Read Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJob
instance GHC.Classes.Eq Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJob
instance GHC.Generics.Generic Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJobResponse
instance GHC.Show.Show Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJobResponse
instance GHC.Read.Read Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJobResponse
instance GHC.Classes.Eq Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJob
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJob
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJob
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJob
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.DescribeDeviceJob.DescribeDeviceJob


-- | Returns information about a device.
module Amazonka.Panorama.DescribeDevice

-- | <i>See:</i> <a>newDescribeDevice</a> smart constructor.
data DescribeDevice
DescribeDevice' :: Text -> DescribeDevice

-- | The device's ID.
[$sel:deviceId:DescribeDevice'] :: DescribeDevice -> Text

-- | Create a value of <a>DescribeDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DescribeDevice'</a>, <a>describeDevice_deviceId</a> -
--   The device's ID.
newDescribeDevice :: Text -> DescribeDevice

-- | The device's ID.
describeDevice_deviceId :: Lens' DescribeDevice Text

-- | <i>See:</i> <a>newDescribeDeviceResponse</a> smart constructor.
data DescribeDeviceResponse
DescribeDeviceResponse' :: Maybe Text -> Maybe DeviceStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe DeviceConnectionStatus -> Maybe Text -> Maybe DeviceType -> Maybe POSIX -> Maybe Text -> Maybe NetworkStatus -> Maybe Text -> Maybe NetworkPayload -> Maybe (HashMap Text Text) -> Int -> DescribeDeviceResponse

-- | The latest software version available for the device.
[$sel:latestSoftware:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe Text

-- | The device's provisioning status.
[$sel:provisioningStatus:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe DeviceStatus

-- | The device's ARN.
[$sel:arn:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe Text

-- | When the device was created.
[$sel:createdTime:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe POSIX

-- | The device's current software version.
[$sel:currentSoftware:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe Text

-- | The device's name.
[$sel:name:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe Text

-- | The device's connection status.
[$sel:deviceConnectionStatus:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe DeviceConnectionStatus

-- | The device's ID.
[$sel:deviceId:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe Text

-- | The device's type.
[$sel:type':DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe DeviceType

-- | The device's lease expiration time.
[$sel:leaseExpirationTime:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe POSIX

-- | The device's serial number.
[$sel:serialNumber:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe Text

-- | The device's networking status.
[$sel:currentNetworkingStatus:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe NetworkStatus

-- | The device's description.
[$sel:description:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe Text

-- | The device's networking configuration.
[$sel:networkingConfiguration:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe NetworkPayload

-- | The device's tags.
[$sel:tags:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Int

-- | Create a value of <a>DescribeDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:latestSoftware:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_latestSoftware</a> - The latest software
--   version available for the device.
--   
--   <a>$sel:provisioningStatus:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_provisioningStatus</a> - The device's
--   provisioning status.
--   
--   <a>$sel:arn:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_arn</a> - The device's ARN.
--   
--   <a>$sel:createdTime:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_createdTime</a> - When the device was
--   created.
--   
--   <a>$sel:currentSoftware:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_currentSoftware</a> - The device's current
--   software version.
--   
--   <a>$sel:name:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_name</a> - The device's name.
--   
--   <a>$sel:deviceConnectionStatus:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_deviceConnectionStatus</a> - The device's
--   connection status.
--   
--   <a>$sel:deviceId:DescribeDevice'</a>,
--   <a>describeDeviceResponse_deviceId</a> - The device's ID.
--   
--   <a>$sel:type':DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_type</a> - The device's type.
--   
--   <a>$sel:leaseExpirationTime:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_leaseExpirationTime</a> - The device's lease
--   expiration time.
--   
--   <a>$sel:serialNumber:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_serialNumber</a> - The device's serial
--   number.
--   
--   <a>$sel:currentNetworkingStatus:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_currentNetworkingStatus</a> - The device's
--   networking status.
--   
--   <a>$sel:description:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_description</a> - The device's description.
--   
--   <a>$sel:networkingConfiguration:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_networkingConfiguration</a> - The device's
--   networking configuration.
--   
--   <a>$sel:tags:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_tags</a> - The device's tags.
--   
--   <a>$sel:httpStatus:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDeviceResponse :: Int -> DescribeDeviceResponse

-- | The latest software version available for the device.
describeDeviceResponse_latestSoftware :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The device's provisioning status.
describeDeviceResponse_provisioningStatus :: Lens' DescribeDeviceResponse (Maybe DeviceStatus)

-- | The device's ARN.
describeDeviceResponse_arn :: Lens' DescribeDeviceResponse (Maybe Text)

-- | When the device was created.
describeDeviceResponse_createdTime :: Lens' DescribeDeviceResponse (Maybe UTCTime)

-- | The device's current software version.
describeDeviceResponse_currentSoftware :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The device's name.
describeDeviceResponse_name :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The device's connection status.
describeDeviceResponse_deviceConnectionStatus :: Lens' DescribeDeviceResponse (Maybe DeviceConnectionStatus)

-- | The device's ID.
describeDeviceResponse_deviceId :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The device's type.
describeDeviceResponse_type :: Lens' DescribeDeviceResponse (Maybe DeviceType)

-- | The device's lease expiration time.
describeDeviceResponse_leaseExpirationTime :: Lens' DescribeDeviceResponse (Maybe UTCTime)

-- | The device's serial number.
describeDeviceResponse_serialNumber :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The device's networking status.
describeDeviceResponse_currentNetworkingStatus :: Lens' DescribeDeviceResponse (Maybe NetworkStatus)

-- | The device's description.
describeDeviceResponse_description :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The device's networking configuration.
describeDeviceResponse_networkingConfiguration :: Lens' DescribeDeviceResponse (Maybe NetworkPayload)

-- | The device's tags.
describeDeviceResponse_tags :: Lens' DescribeDeviceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeDeviceResponse_httpStatus :: Lens' DescribeDeviceResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.DescribeDevice.DescribeDevice
instance GHC.Show.Show Amazonka.Panorama.DescribeDevice.DescribeDevice
instance GHC.Read.Read Amazonka.Panorama.DescribeDevice.DescribeDevice
instance GHC.Classes.Eq Amazonka.Panorama.DescribeDevice.DescribeDevice
instance GHC.Generics.Generic Amazonka.Panorama.DescribeDevice.DescribeDeviceResponse
instance GHC.Show.Show Amazonka.Panorama.DescribeDevice.DescribeDeviceResponse
instance GHC.Read.Read Amazonka.Panorama.DescribeDevice.DescribeDeviceResponse
instance GHC.Classes.Eq Amazonka.Panorama.DescribeDevice.DescribeDeviceResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.DescribeDevice.DescribeDevice
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribeDevice.DescribeDeviceResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.DescribeDevice.DescribeDevice
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribeDevice.DescribeDevice
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.DescribeDevice.DescribeDevice
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.DescribeDevice.DescribeDevice
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.DescribeDevice.DescribeDevice


-- | Returns information about an application instance's configuration
--   manifest.
module Amazonka.Panorama.DescribeApplicationInstanceDetails

-- | <i>See:</i> <a>newDescribeApplicationInstanceDetails</a> smart
--   constructor.
data DescribeApplicationInstanceDetails
DescribeApplicationInstanceDetails' :: Text -> DescribeApplicationInstanceDetails

-- | The application instance's ID.
[$sel:applicationInstanceId:DescribeApplicationInstanceDetails'] :: DescribeApplicationInstanceDetails -> Text

-- | Create a value of <a>DescribeApplicationInstanceDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationInstanceId:DescribeApplicationInstanceDetails'</a>,
--   <a>describeApplicationInstanceDetails_applicationInstanceId</a> - The
--   application instance's ID.
newDescribeApplicationInstanceDetails :: Text -> DescribeApplicationInstanceDetails

-- | The application instance's ID.
describeApplicationInstanceDetails_applicationInstanceId :: Lens' DescribeApplicationInstanceDetails Text

-- | <i>See:</i> <a>newDescribeApplicationInstanceDetailsResponse</a> smart
--   constructor.
data DescribeApplicationInstanceDetailsResponse
DescribeApplicationInstanceDetailsResponse' :: Maybe POSIX -> Maybe Text -> Maybe ManifestOverridesPayload -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ManifestPayload -> Maybe Text -> Int -> DescribeApplicationInstanceDetailsResponse

-- | When the application instance was created.
[$sel:createdTime:DescribeApplicationInstanceDetailsResponse'] :: DescribeApplicationInstanceDetailsResponse -> Maybe POSIX

-- | The application instance's default runtime context device.
[$sel:defaultRuntimeContextDevice:DescribeApplicationInstanceDetailsResponse'] :: DescribeApplicationInstanceDetailsResponse -> Maybe Text

-- | Parameter overrides for the configuration manifest.
[$sel:manifestOverridesPayload:DescribeApplicationInstanceDetailsResponse'] :: DescribeApplicationInstanceDetailsResponse -> Maybe ManifestOverridesPayload

-- | The application instance's name.
[$sel:name:DescribeApplicationInstanceDetailsResponse'] :: DescribeApplicationInstanceDetailsResponse -> Maybe Text

-- | The application instance's ID.
[$sel:applicationInstanceId:DescribeApplicationInstanceDetailsResponse'] :: DescribeApplicationInstanceDetailsResponse -> Maybe Text

-- | The application instance's description.
[$sel:description:DescribeApplicationInstanceDetailsResponse'] :: DescribeApplicationInstanceDetailsResponse -> Maybe Text

-- | The application instance's configuration manifest.
[$sel:manifestPayload:DescribeApplicationInstanceDetailsResponse'] :: DescribeApplicationInstanceDetailsResponse -> Maybe ManifestPayload

-- | The ID of the application instance that this instance replaced.
[$sel:applicationInstanceIdToReplace:DescribeApplicationInstanceDetailsResponse'] :: DescribeApplicationInstanceDetailsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeApplicationInstanceDetailsResponse'] :: DescribeApplicationInstanceDetailsResponse -> Int

-- | Create a value of <a>DescribeApplicationInstanceDetailsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdTime:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_createdTime</a> - When
--   the application instance was created.
--   
--   
--   <a>$sel:defaultRuntimeContextDevice:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_defaultRuntimeContextDevice</a>
--   - The application instance's default runtime context device.
--   
--   
--   <a>$sel:manifestOverridesPayload:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_manifestOverridesPayload</a>
--   - Parameter overrides for the configuration manifest.
--   
--   <a>$sel:name:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_name</a> - The
--   application instance's name.
--   
--   <a>$sel:applicationInstanceId:DescribeApplicationInstanceDetails'</a>,
--   <a>describeApplicationInstanceDetailsResponse_applicationInstanceId</a>
--   - The application instance's ID.
--   
--   <a>$sel:description:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_description</a> - The
--   application instance's description.
--   
--   
--   <a>$sel:manifestPayload:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_manifestPayload</a> -
--   The application instance's configuration manifest.
--   
--   
--   <a>$sel:applicationInstanceIdToReplace:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_applicationInstanceIdToReplace</a>
--   - The ID of the application instance that this instance replaced.
--   
--   <a>$sel:httpStatus:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeApplicationInstanceDetailsResponse :: Int -> DescribeApplicationInstanceDetailsResponse

-- | When the application instance was created.
describeApplicationInstanceDetailsResponse_createdTime :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe UTCTime)

-- | The application instance's default runtime context device.
describeApplicationInstanceDetailsResponse_defaultRuntimeContextDevice :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe Text)

-- | Parameter overrides for the configuration manifest.
describeApplicationInstanceDetailsResponse_manifestOverridesPayload :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe ManifestOverridesPayload)

-- | The application instance's name.
describeApplicationInstanceDetailsResponse_name :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe Text)

-- | The application instance's ID.
describeApplicationInstanceDetailsResponse_applicationInstanceId :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe Text)

-- | The application instance's description.
describeApplicationInstanceDetailsResponse_description :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe Text)

-- | The application instance's configuration manifest.
describeApplicationInstanceDetailsResponse_manifestPayload :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe ManifestPayload)

-- | The ID of the application instance that this instance replaced.
describeApplicationInstanceDetailsResponse_applicationInstanceIdToReplace :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe Text)

-- | The response's http status code.
describeApplicationInstanceDetailsResponse_httpStatus :: Lens' DescribeApplicationInstanceDetailsResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetails
instance GHC.Show.Show Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetails
instance GHC.Read.Read Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetails
instance GHC.Classes.Eq Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetails
instance GHC.Generics.Generic Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetailsResponse
instance GHC.Show.Show Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetailsResponse
instance GHC.Read.Read Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetailsResponse
instance GHC.Classes.Eq Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetailsResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetails
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetailsResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetails
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetails
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetails
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetails
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.DescribeApplicationInstanceDetails.DescribeApplicationInstanceDetails


-- | Returns information about an application instance on a device.
module Amazonka.Panorama.DescribeApplicationInstance

-- | <i>See:</i> <a>newDescribeApplicationInstance</a> smart constructor.
data DescribeApplicationInstance
DescribeApplicationInstance' :: Text -> DescribeApplicationInstance

-- | The application instance's ID.
[$sel:applicationInstanceId:DescribeApplicationInstance'] :: DescribeApplicationInstance -> Text

-- | Create a value of <a>DescribeApplicationInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationInstanceId:DescribeApplicationInstance'</a>,
--   <a>describeApplicationInstance_applicationInstanceId</a> - The
--   application instance's ID.
newDescribeApplicationInstance :: Text -> DescribeApplicationInstance

-- | The application instance's ID.
describeApplicationInstance_applicationInstanceId :: Lens' DescribeApplicationInstance Text

-- | <i>See:</i> <a>newDescribeApplicationInstanceResponse</a> smart
--   constructor.
data DescribeApplicationInstanceResponse
DescribeApplicationInstanceResponse' :: Maybe ApplicationInstanceStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ApplicationInstanceHealthStatus -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> DescribeApplicationInstanceResponse

-- | The application instance's status.
[$sel:status:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe ApplicationInstanceStatus

-- | The application instance's status description.
[$sel:statusDescription:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe Text

-- | The application instance was updated.
[$sel:lastUpdatedTime:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe POSIX

-- | The application instance's ARN.
[$sel:arn:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe Text

-- | When the application instance was created.
[$sel:createdTime:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe POSIX

-- | The device's ID.
[$sel:defaultRuntimeContextDevice:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe Text

-- | The device's bane.
[$sel:defaultRuntimeContextDeviceName:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe Text

-- | The application instance's name.
[$sel:name:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe Text

-- | The application instance's runtime role ARN.
[$sel:runtimeRoleArn:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe Text

-- | The application instance's health status.
[$sel:healthStatus:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe ApplicationInstanceHealthStatus

-- | The application instance's ID.
[$sel:applicationInstanceId:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe Text

-- | The application instance's description.
[$sel:description:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe Text

-- | The application instance's tags.
[$sel:tags:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe (HashMap Text Text)

-- | The ID of the application instance that this instance replaced.
[$sel:applicationInstanceIdToReplace:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeApplicationInstanceResponse'] :: DescribeApplicationInstanceResponse -> Int

-- | Create a value of <a>DescribeApplicationInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_status</a> - The application
--   instance's status.
--   
--   <a>$sel:statusDescription:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_statusDescription</a> - The
--   application instance's status description.
--   
--   <a>$sel:lastUpdatedTime:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_lastUpdatedTime</a> - The
--   application instance was updated.
--   
--   <a>$sel:arn:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_arn</a> - The application
--   instance's ARN.
--   
--   <a>$sel:createdTime:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_createdTime</a> - When the
--   application instance was created.
--   
--   
--   <a>$sel:defaultRuntimeContextDevice:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_defaultRuntimeContextDevice</a>
--   - The device's ID.
--   
--   
--   <a>$sel:defaultRuntimeContextDeviceName:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_defaultRuntimeContextDeviceName</a>
--   - The device's bane.
--   
--   <a>$sel:name:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_name</a> - The application
--   instance's name.
--   
--   <a>$sel:runtimeRoleArn:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_runtimeRoleArn</a> - The
--   application instance's runtime role ARN.
--   
--   <a>$sel:healthStatus:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_healthStatus</a> - The
--   application instance's health status.
--   
--   <a>$sel:applicationInstanceId:DescribeApplicationInstance'</a>,
--   <a>describeApplicationInstanceResponse_applicationInstanceId</a> - The
--   application instance's ID.
--   
--   <a>$sel:description:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_description</a> - The
--   application instance's description.
--   
--   <a>$sel:tags:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_tags</a> - The application
--   instance's tags.
--   
--   
--   <a>$sel:applicationInstanceIdToReplace:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_applicationInstanceIdToReplace</a>
--   - The ID of the application instance that this instance replaced.
--   
--   <a>$sel:httpStatus:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_httpStatus</a> - The response's
--   http status code.
newDescribeApplicationInstanceResponse :: Int -> DescribeApplicationInstanceResponse

-- | The application instance's status.
describeApplicationInstanceResponse_status :: Lens' DescribeApplicationInstanceResponse (Maybe ApplicationInstanceStatus)

-- | The application instance's status description.
describeApplicationInstanceResponse_statusDescription :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The application instance was updated.
describeApplicationInstanceResponse_lastUpdatedTime :: Lens' DescribeApplicationInstanceResponse (Maybe UTCTime)

-- | The application instance's ARN.
describeApplicationInstanceResponse_arn :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | When the application instance was created.
describeApplicationInstanceResponse_createdTime :: Lens' DescribeApplicationInstanceResponse (Maybe UTCTime)

-- | The device's ID.
describeApplicationInstanceResponse_defaultRuntimeContextDevice :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The device's bane.
describeApplicationInstanceResponse_defaultRuntimeContextDeviceName :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The application instance's name.
describeApplicationInstanceResponse_name :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The application instance's runtime role ARN.
describeApplicationInstanceResponse_runtimeRoleArn :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The application instance's health status.
describeApplicationInstanceResponse_healthStatus :: Lens' DescribeApplicationInstanceResponse (Maybe ApplicationInstanceHealthStatus)

-- | The application instance's ID.
describeApplicationInstanceResponse_applicationInstanceId :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The application instance's description.
describeApplicationInstanceResponse_description :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The application instance's tags.
describeApplicationInstanceResponse_tags :: Lens' DescribeApplicationInstanceResponse (Maybe (HashMap Text Text))

-- | The ID of the application instance that this instance replaced.
describeApplicationInstanceResponse_applicationInstanceIdToReplace :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The response's http status code.
describeApplicationInstanceResponse_httpStatus :: Lens' DescribeApplicationInstanceResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstance
instance GHC.Show.Show Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstance
instance GHC.Read.Read Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstance
instance GHC.Classes.Eq Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstance
instance GHC.Generics.Generic Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstanceResponse
instance GHC.Show.Show Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstanceResponse
instance GHC.Read.Read Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstanceResponse
instance GHC.Classes.Eq Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstanceResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstance
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstanceResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstance
instance Control.DeepSeq.NFData Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstance
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstance
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstance
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.DescribeApplicationInstance.DescribeApplicationInstance


-- | Deregisters a package version.
module Amazonka.Panorama.DeregisterPackageVersion

-- | <i>See:</i> <a>newDeregisterPackageVersion</a> smart constructor.
data DeregisterPackageVersion
DeregisterPackageVersion' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> DeregisterPackageVersion

-- | If the version was marked latest, the new version to maker as latest.
[$sel:updatedLatestPatchVersion:DeregisterPackageVersion'] :: DeregisterPackageVersion -> Maybe Text

-- | An owner account.
[$sel:ownerAccount:DeregisterPackageVersion'] :: DeregisterPackageVersion -> Maybe Text

-- | A package ID.
[$sel:packageId:DeregisterPackageVersion'] :: DeregisterPackageVersion -> Text

-- | A package version.
[$sel:packageVersion:DeregisterPackageVersion'] :: DeregisterPackageVersion -> Text

-- | A patch version.
[$sel:patchVersion:DeregisterPackageVersion'] :: DeregisterPackageVersion -> Text

-- | Create a value of <a>DeregisterPackageVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updatedLatestPatchVersion:DeregisterPackageVersion'</a>,
--   <a>deregisterPackageVersion_updatedLatestPatchVersion</a> - If the
--   version was marked latest, the new version to maker as latest.
--   
--   <a>$sel:ownerAccount:DeregisterPackageVersion'</a>,
--   <a>deregisterPackageVersion_ownerAccount</a> - An owner account.
--   
--   <a>$sel:packageId:DeregisterPackageVersion'</a>,
--   <a>deregisterPackageVersion_packageId</a> - A package ID.
--   
--   <a>$sel:packageVersion:DeregisterPackageVersion'</a>,
--   <a>deregisterPackageVersion_packageVersion</a> - A package version.
--   
--   <a>$sel:patchVersion:DeregisterPackageVersion'</a>,
--   <a>deregisterPackageVersion_patchVersion</a> - A patch version.
newDeregisterPackageVersion :: Text -> Text -> Text -> DeregisterPackageVersion

-- | If the version was marked latest, the new version to maker as latest.
deregisterPackageVersion_updatedLatestPatchVersion :: Lens' DeregisterPackageVersion (Maybe Text)

-- | An owner account.
deregisterPackageVersion_ownerAccount :: Lens' DeregisterPackageVersion (Maybe Text)

-- | A package ID.
deregisterPackageVersion_packageId :: Lens' DeregisterPackageVersion Text

-- | A package version.
deregisterPackageVersion_packageVersion :: Lens' DeregisterPackageVersion Text

-- | A patch version.
deregisterPackageVersion_patchVersion :: Lens' DeregisterPackageVersion Text

-- | <i>See:</i> <a>newDeregisterPackageVersionResponse</a> smart
--   constructor.
data DeregisterPackageVersionResponse
DeregisterPackageVersionResponse' :: Int -> DeregisterPackageVersionResponse

-- | The response's http status code.
[$sel:httpStatus:DeregisterPackageVersionResponse'] :: DeregisterPackageVersionResponse -> Int

-- | Create a value of <a>DeregisterPackageVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeregisterPackageVersionResponse'</a>,
--   <a>deregisterPackageVersionResponse_httpStatus</a> - The response's
--   http status code.
newDeregisterPackageVersionResponse :: Int -> DeregisterPackageVersionResponse

-- | The response's http status code.
deregisterPackageVersionResponse_httpStatus :: Lens' DeregisterPackageVersionResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersion
instance GHC.Show.Show Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersion
instance GHC.Read.Read Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersion
instance GHC.Classes.Eq Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersion
instance GHC.Generics.Generic Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersionResponse
instance GHC.Show.Show Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersionResponse
instance GHC.Read.Read Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersionResponse
instance GHC.Classes.Eq Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersion
instance Control.DeepSeq.NFData Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersion
instance Control.DeepSeq.NFData Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersion
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersion
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.DeregisterPackageVersion.DeregisterPackageVersion


-- | Deletes a package.
module Amazonka.Panorama.DeletePackage

-- | <i>See:</i> <a>newDeletePackage</a> smart constructor.
data DeletePackage
DeletePackage' :: Maybe Bool -> Text -> DeletePackage

-- | Delete the package even if it has artifacts stored in its access
--   point. Deletes the package's artifacts from Amazon S3.
[$sel:forceDelete:DeletePackage'] :: DeletePackage -> Maybe Bool

-- | The package's ID.
[$sel:packageId:DeletePackage'] :: DeletePackage -> Text

-- | Create a value of <a>DeletePackage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forceDelete:DeletePackage'</a>,
--   <a>deletePackage_forceDelete</a> - Delete the package even if it has
--   artifacts stored in its access point. Deletes the package's artifacts
--   from Amazon S3.
--   
--   <a>$sel:packageId:DeletePackage'</a>, <a>deletePackage_packageId</a> -
--   The package's ID.
newDeletePackage :: Text -> DeletePackage

-- | Delete the package even if it has artifacts stored in its access
--   point. Deletes the package's artifacts from Amazon S3.
deletePackage_forceDelete :: Lens' DeletePackage (Maybe Bool)

-- | The package's ID.
deletePackage_packageId :: Lens' DeletePackage Text

-- | <i>See:</i> <a>newDeletePackageResponse</a> smart constructor.
data DeletePackageResponse
DeletePackageResponse' :: Int -> DeletePackageResponse

-- | The response's http status code.
[$sel:httpStatus:DeletePackageResponse'] :: DeletePackageResponse -> Int

-- | Create a value of <a>DeletePackageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePackageResponse'</a>,
--   <a>deletePackageResponse_httpStatus</a> - The response's http status
--   code.
newDeletePackageResponse :: Int -> DeletePackageResponse

-- | The response's http status code.
deletePackageResponse_httpStatus :: Lens' DeletePackageResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.DeletePackage.DeletePackage
instance GHC.Show.Show Amazonka.Panorama.DeletePackage.DeletePackage
instance GHC.Read.Read Amazonka.Panorama.DeletePackage.DeletePackage
instance GHC.Classes.Eq Amazonka.Panorama.DeletePackage.DeletePackage
instance GHC.Generics.Generic Amazonka.Panorama.DeletePackage.DeletePackageResponse
instance GHC.Show.Show Amazonka.Panorama.DeletePackage.DeletePackageResponse
instance GHC.Read.Read Amazonka.Panorama.DeletePackage.DeletePackageResponse
instance GHC.Classes.Eq Amazonka.Panorama.DeletePackage.DeletePackageResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.DeletePackage.DeletePackage
instance Control.DeepSeq.NFData Amazonka.Panorama.DeletePackage.DeletePackageResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.DeletePackage.DeletePackage
instance Control.DeepSeq.NFData Amazonka.Panorama.DeletePackage.DeletePackage
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.DeletePackage.DeletePackage
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.DeletePackage.DeletePackage
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.DeletePackage.DeletePackage


-- | Deletes a device.
module Amazonka.Panorama.DeleteDevice

-- | <i>See:</i> <a>newDeleteDevice</a> smart constructor.
data DeleteDevice
DeleteDevice' :: Text -> DeleteDevice

-- | The device's ID.
[$sel:deviceId:DeleteDevice'] :: DeleteDevice -> Text

-- | Create a value of <a>DeleteDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DeleteDevice'</a>, <a>deleteDevice_deviceId</a> - The
--   device's ID.
newDeleteDevice :: Text -> DeleteDevice

-- | The device's ID.
deleteDevice_deviceId :: Lens' DeleteDevice Text

-- | <i>See:</i> <a>newDeleteDeviceResponse</a> smart constructor.
data DeleteDeviceResponse
DeleteDeviceResponse' :: Maybe Text -> Int -> DeleteDeviceResponse

-- | The device's ID.
[$sel:deviceId:DeleteDeviceResponse'] :: DeleteDeviceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteDeviceResponse'] :: DeleteDeviceResponse -> Int

-- | Create a value of <a>DeleteDeviceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DeleteDevice'</a>,
--   <a>deleteDeviceResponse_deviceId</a> - The device's ID.
--   
--   <a>$sel:httpStatus:DeleteDeviceResponse'</a>,
--   <a>deleteDeviceResponse_httpStatus</a> - The response's http status
--   code.
newDeleteDeviceResponse :: Int -> DeleteDeviceResponse

-- | The device's ID.
deleteDeviceResponse_deviceId :: Lens' DeleteDeviceResponse (Maybe Text)

-- | The response's http status code.
deleteDeviceResponse_httpStatus :: Lens' DeleteDeviceResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.DeleteDevice.DeleteDevice
instance GHC.Show.Show Amazonka.Panorama.DeleteDevice.DeleteDevice
instance GHC.Read.Read Amazonka.Panorama.DeleteDevice.DeleteDevice
instance GHC.Classes.Eq Amazonka.Panorama.DeleteDevice.DeleteDevice
instance GHC.Generics.Generic Amazonka.Panorama.DeleteDevice.DeleteDeviceResponse
instance GHC.Show.Show Amazonka.Panorama.DeleteDevice.DeleteDeviceResponse
instance GHC.Read.Read Amazonka.Panorama.DeleteDevice.DeleteDeviceResponse
instance GHC.Classes.Eq Amazonka.Panorama.DeleteDevice.DeleteDeviceResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.DeleteDevice.DeleteDevice
instance Control.DeepSeq.NFData Amazonka.Panorama.DeleteDevice.DeleteDeviceResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.DeleteDevice.DeleteDevice
instance Control.DeepSeq.NFData Amazonka.Panorama.DeleteDevice.DeleteDevice
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.DeleteDevice.DeleteDevice
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.DeleteDevice.DeleteDevice
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.DeleteDevice.DeleteDevice


-- | Imports a node package.
module Amazonka.Panorama.CreatePackageImportJob

-- | <i>See:</i> <a>newCreatePackageImportJob</a> smart constructor.
data CreatePackageImportJob
CreatePackageImportJob' :: Maybe [JobResourceTags] -> PackageImportJobType -> PackageImportJobInputConfig -> PackageImportJobOutputConfig -> Text -> CreatePackageImportJob

-- | Tags for the package import job.
[$sel:jobTags:CreatePackageImportJob'] :: CreatePackageImportJob -> Maybe [JobResourceTags]

-- | A job type for the package import job.
[$sel:jobType:CreatePackageImportJob'] :: CreatePackageImportJob -> PackageImportJobType

-- | An input config for the package import job.
[$sel:inputConfig:CreatePackageImportJob'] :: CreatePackageImportJob -> PackageImportJobInputConfig

-- | An output config for the package import job.
[$sel:outputConfig:CreatePackageImportJob'] :: CreatePackageImportJob -> PackageImportJobOutputConfig

-- | A client token for the package import job.
[$sel:clientToken:CreatePackageImportJob'] :: CreatePackageImportJob -> Text

-- | Create a value of <a>CreatePackageImportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobTags:CreatePackageImportJob'</a>,
--   <a>createPackageImportJob_jobTags</a> - Tags for the package import
--   job.
--   
--   <a>$sel:jobType:CreatePackageImportJob'</a>,
--   <a>createPackageImportJob_jobType</a> - A job type for the package
--   import job.
--   
--   <a>$sel:inputConfig:CreatePackageImportJob'</a>,
--   <a>createPackageImportJob_inputConfig</a> - An input config for the
--   package import job.
--   
--   <a>$sel:outputConfig:CreatePackageImportJob'</a>,
--   <a>createPackageImportJob_outputConfig</a> - An output config for the
--   package import job.
--   
--   <a>$sel:clientToken:CreatePackageImportJob'</a>,
--   <a>createPackageImportJob_clientToken</a> - A client token for the
--   package import job.
newCreatePackageImportJob :: PackageImportJobType -> PackageImportJobInputConfig -> PackageImportJobOutputConfig -> Text -> CreatePackageImportJob

-- | Tags for the package import job.
createPackageImportJob_jobTags :: Lens' CreatePackageImportJob (Maybe [JobResourceTags])

-- | A job type for the package import job.
createPackageImportJob_jobType :: Lens' CreatePackageImportJob PackageImportJobType

-- | An input config for the package import job.
createPackageImportJob_inputConfig :: Lens' CreatePackageImportJob PackageImportJobInputConfig

-- | An output config for the package import job.
createPackageImportJob_outputConfig :: Lens' CreatePackageImportJob PackageImportJobOutputConfig

-- | A client token for the package import job.
createPackageImportJob_clientToken :: Lens' CreatePackageImportJob Text

-- | <i>See:</i> <a>newCreatePackageImportJobResponse</a> smart
--   constructor.
data CreatePackageImportJobResponse
CreatePackageImportJobResponse' :: Int -> Text -> CreatePackageImportJobResponse

-- | The response's http status code.
[$sel:httpStatus:CreatePackageImportJobResponse'] :: CreatePackageImportJobResponse -> Int

-- | The job's ID.
[$sel:jobId:CreatePackageImportJobResponse'] :: CreatePackageImportJobResponse -> Text

-- | Create a value of <a>CreatePackageImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePackageImportJobResponse'</a>,
--   <a>createPackageImportJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:jobId:CreatePackageImportJobResponse'</a>,
--   <a>createPackageImportJobResponse_jobId</a> - The job's ID.
newCreatePackageImportJobResponse :: Int -> Text -> CreatePackageImportJobResponse

-- | The response's http status code.
createPackageImportJobResponse_httpStatus :: Lens' CreatePackageImportJobResponse Int

-- | The job's ID.
createPackageImportJobResponse_jobId :: Lens' CreatePackageImportJobResponse Text
instance GHC.Generics.Generic Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJob
instance GHC.Show.Show Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJob
instance GHC.Read.Read Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJob
instance GHC.Classes.Eq Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJob
instance GHC.Generics.Generic Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJobResponse
instance GHC.Show.Show Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJobResponse
instance GHC.Read.Read Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJobResponse
instance GHC.Classes.Eq Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJob
instance Control.DeepSeq.NFData Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJob
instance Control.DeepSeq.NFData Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJob
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJob
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.CreatePackageImportJob.CreatePackageImportJob


-- | Creates a package and storage location in an Amazon S3 access point.
module Amazonka.Panorama.CreatePackage

-- | <i>See:</i> <a>newCreatePackage</a> smart constructor.
data CreatePackage
CreatePackage' :: Maybe (HashMap Text Text) -> Text -> CreatePackage

-- | Tags for the package.
[$sel:tags:CreatePackage'] :: CreatePackage -> Maybe (HashMap Text Text)

-- | A name for the package.
[$sel:packageName:CreatePackage'] :: CreatePackage -> Text

-- | Create a value of <a>CreatePackage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreatePackage'</a>, <a>createPackage_tags</a> - Tags for
--   the package.
--   
--   <a>$sel:packageName:CreatePackage'</a>,
--   <a>createPackage_packageName</a> - A name for the package.
newCreatePackage :: Text -> CreatePackage

-- | Tags for the package.
createPackage_tags :: Lens' CreatePackage (Maybe (HashMap Text Text))

-- | A name for the package.
createPackage_packageName :: Lens' CreatePackage Text

-- | <i>See:</i> <a>newCreatePackageResponse</a> smart constructor.
data CreatePackageResponse
CreatePackageResponse' :: Maybe Text -> Maybe Text -> Int -> StorageLocation -> CreatePackageResponse

-- | The package's ID.
[$sel:packageId:CreatePackageResponse'] :: CreatePackageResponse -> Maybe Text

-- | The package's ARN.
[$sel:arn:CreatePackageResponse'] :: CreatePackageResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreatePackageResponse'] :: CreatePackageResponse -> Int

-- | The package's storage location.
[$sel:storageLocation:CreatePackageResponse'] :: CreatePackageResponse -> StorageLocation

-- | Create a value of <a>CreatePackageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageId:CreatePackageResponse'</a>,
--   <a>createPackageResponse_packageId</a> - The package's ID.
--   
--   <a>$sel:arn:CreatePackageResponse'</a>,
--   <a>createPackageResponse_arn</a> - The package's ARN.
--   
--   <a>$sel:httpStatus:CreatePackageResponse'</a>,
--   <a>createPackageResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:storageLocation:CreatePackageResponse'</a>,
--   <a>createPackageResponse_storageLocation</a> - The package's storage
--   location.
newCreatePackageResponse :: Int -> StorageLocation -> CreatePackageResponse

-- | The package's ID.
createPackageResponse_packageId :: Lens' CreatePackageResponse (Maybe Text)

-- | The package's ARN.
createPackageResponse_arn :: Lens' CreatePackageResponse (Maybe Text)

-- | The response's http status code.
createPackageResponse_httpStatus :: Lens' CreatePackageResponse Int

-- | The package's storage location.
createPackageResponse_storageLocation :: Lens' CreatePackageResponse StorageLocation
instance GHC.Generics.Generic Amazonka.Panorama.CreatePackage.CreatePackage
instance GHC.Show.Show Amazonka.Panorama.CreatePackage.CreatePackage
instance GHC.Read.Read Amazonka.Panorama.CreatePackage.CreatePackage
instance GHC.Classes.Eq Amazonka.Panorama.CreatePackage.CreatePackage
instance GHC.Generics.Generic Amazonka.Panorama.CreatePackage.CreatePackageResponse
instance GHC.Show.Show Amazonka.Panorama.CreatePackage.CreatePackageResponse
instance GHC.Read.Read Amazonka.Panorama.CreatePackage.CreatePackageResponse
instance GHC.Classes.Eq Amazonka.Panorama.CreatePackage.CreatePackageResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.CreatePackage.CreatePackage
instance Control.DeepSeq.NFData Amazonka.Panorama.CreatePackage.CreatePackageResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.CreatePackage.CreatePackage
instance Control.DeepSeq.NFData Amazonka.Panorama.CreatePackage.CreatePackage
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.CreatePackage.CreatePackage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.CreatePackage.CreatePackage
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.CreatePackage.CreatePackage
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.CreatePackage.CreatePackage


-- | Creates a camera stream node.
module Amazonka.Panorama.CreateNodeFromTemplateJob

-- | <i>See:</i> <a>newCreateNodeFromTemplateJob</a> smart constructor.
data CreateNodeFromTemplateJob
CreateNodeFromTemplateJob' :: Maybe [JobResourceTags] -> Maybe Text -> TemplateType -> Text -> Text -> Text -> HashMap Text (Sensitive Text) -> CreateNodeFromTemplateJob

-- | Tags for the job.
[$sel:jobTags:CreateNodeFromTemplateJob'] :: CreateNodeFromTemplateJob -> Maybe [JobResourceTags]

-- | A description for the node.
[$sel:nodeDescription:CreateNodeFromTemplateJob'] :: CreateNodeFromTemplateJob -> Maybe Text

-- | The type of node.
[$sel:templateType:CreateNodeFromTemplateJob'] :: CreateNodeFromTemplateJob -> TemplateType

-- | An output package name for the node.
[$sel:outputPackageName:CreateNodeFromTemplateJob'] :: CreateNodeFromTemplateJob -> Text

-- | An output package version for the node.
[$sel:outputPackageVersion:CreateNodeFromTemplateJob'] :: CreateNodeFromTemplateJob -> Text

-- | A name for the node.
[$sel:nodeName:CreateNodeFromTemplateJob'] :: CreateNodeFromTemplateJob -> Text

-- | Template parameters for the node.
[$sel:templateParameters:CreateNodeFromTemplateJob'] :: CreateNodeFromTemplateJob -> HashMap Text (Sensitive Text)

-- | Create a value of <a>CreateNodeFromTemplateJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobTags:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_jobTags</a> - Tags for the job.
--   
--   <a>$sel:nodeDescription:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_nodeDescription</a> - A description for
--   the node.
--   
--   <a>$sel:templateType:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_templateType</a> - The type of node.
--   
--   <a>$sel:outputPackageName:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_outputPackageName</a> - An output package
--   name for the node.
--   
--   <a>$sel:outputPackageVersion:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_outputPackageVersion</a> - An output
--   package version for the node.
--   
--   <a>$sel:nodeName:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_nodeName</a> - A name for the node.
--   
--   <a>$sel:templateParameters:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_templateParameters</a> - Template
--   parameters for the node.
newCreateNodeFromTemplateJob :: TemplateType -> Text -> Text -> Text -> CreateNodeFromTemplateJob

-- | Tags for the job.
createNodeFromTemplateJob_jobTags :: Lens' CreateNodeFromTemplateJob (Maybe [JobResourceTags])

-- | A description for the node.
createNodeFromTemplateJob_nodeDescription :: Lens' CreateNodeFromTemplateJob (Maybe Text)

-- | The type of node.
createNodeFromTemplateJob_templateType :: Lens' CreateNodeFromTemplateJob TemplateType

-- | An output package name for the node.
createNodeFromTemplateJob_outputPackageName :: Lens' CreateNodeFromTemplateJob Text

-- | An output package version for the node.
createNodeFromTemplateJob_outputPackageVersion :: Lens' CreateNodeFromTemplateJob Text

-- | A name for the node.
createNodeFromTemplateJob_nodeName :: Lens' CreateNodeFromTemplateJob Text

-- | Template parameters for the node.
createNodeFromTemplateJob_templateParameters :: Lens' CreateNodeFromTemplateJob (HashMap Text Text)

-- | <i>See:</i> <a>newCreateNodeFromTemplateJobResponse</a> smart
--   constructor.
data CreateNodeFromTemplateJobResponse
CreateNodeFromTemplateJobResponse' :: Int -> Text -> CreateNodeFromTemplateJobResponse

-- | The response's http status code.
[$sel:httpStatus:CreateNodeFromTemplateJobResponse'] :: CreateNodeFromTemplateJobResponse -> Int

-- | The job's ID.
[$sel:jobId:CreateNodeFromTemplateJobResponse'] :: CreateNodeFromTemplateJobResponse -> Text

-- | Create a value of <a>CreateNodeFromTemplateJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateNodeFromTemplateJobResponse'</a>,
--   <a>createNodeFromTemplateJobResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:jobId:CreateNodeFromTemplateJobResponse'</a>,
--   <a>createNodeFromTemplateJobResponse_jobId</a> - The job's ID.
newCreateNodeFromTemplateJobResponse :: Int -> Text -> CreateNodeFromTemplateJobResponse

-- | The response's http status code.
createNodeFromTemplateJobResponse_httpStatus :: Lens' CreateNodeFromTemplateJobResponse Int

-- | The job's ID.
createNodeFromTemplateJobResponse_jobId :: Lens' CreateNodeFromTemplateJobResponse Text
instance GHC.Generics.Generic Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJob
instance GHC.Show.Show Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJob
instance GHC.Classes.Eq Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJob
instance GHC.Generics.Generic Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJobResponse
instance GHC.Show.Show Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJobResponse
instance GHC.Read.Read Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJobResponse
instance GHC.Classes.Eq Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJob
instance Control.DeepSeq.NFData Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJob
instance Control.DeepSeq.NFData Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJob
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJob
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.CreateNodeFromTemplateJob.CreateNodeFromTemplateJob


-- | Creates a job to run on one or more devices.
module Amazonka.Panorama.CreateJobForDevices

-- | <i>See:</i> <a>newCreateJobForDevices</a> smart constructor.
data CreateJobForDevices
CreateJobForDevices' :: NonEmpty Text -> DeviceJobConfig -> JobType -> CreateJobForDevices

-- | IDs of target devices.
[$sel:deviceIds:CreateJobForDevices'] :: CreateJobForDevices -> NonEmpty Text

-- | Configuration settings for the job.
[$sel:deviceJobConfig:CreateJobForDevices'] :: CreateJobForDevices -> DeviceJobConfig

-- | The type of job to run.
[$sel:jobType:CreateJobForDevices'] :: CreateJobForDevices -> JobType

-- | Create a value of <a>CreateJobForDevices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceIds:CreateJobForDevices'</a>,
--   <a>createJobForDevices_deviceIds</a> - IDs of target devices.
--   
--   <a>$sel:deviceJobConfig:CreateJobForDevices'</a>,
--   <a>createJobForDevices_deviceJobConfig</a> - Configuration settings
--   for the job.
--   
--   <a>$sel:jobType:CreateJobForDevices'</a>,
--   <a>createJobForDevices_jobType</a> - The type of job to run.
newCreateJobForDevices :: NonEmpty Text -> DeviceJobConfig -> JobType -> CreateJobForDevices

-- | IDs of target devices.
createJobForDevices_deviceIds :: Lens' CreateJobForDevices (NonEmpty Text)

-- | Configuration settings for the job.
createJobForDevices_deviceJobConfig :: Lens' CreateJobForDevices DeviceJobConfig

-- | The type of job to run.
createJobForDevices_jobType :: Lens' CreateJobForDevices JobType

-- | <i>See:</i> <a>newCreateJobForDevicesResponse</a> smart constructor.
data CreateJobForDevicesResponse
CreateJobForDevicesResponse' :: Int -> [Job] -> CreateJobForDevicesResponse

-- | The response's http status code.
[$sel:httpStatus:CreateJobForDevicesResponse'] :: CreateJobForDevicesResponse -> Int

-- | A list of jobs.
[$sel:jobs:CreateJobForDevicesResponse'] :: CreateJobForDevicesResponse -> [Job]

-- | Create a value of <a>CreateJobForDevicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateJobForDevicesResponse'</a>,
--   <a>createJobForDevicesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:jobs:CreateJobForDevicesResponse'</a>,
--   <a>createJobForDevicesResponse_jobs</a> - A list of jobs.
newCreateJobForDevicesResponse :: Int -> CreateJobForDevicesResponse

-- | The response's http status code.
createJobForDevicesResponse_httpStatus :: Lens' CreateJobForDevicesResponse Int

-- | A list of jobs.
createJobForDevicesResponse_jobs :: Lens' CreateJobForDevicesResponse [Job]
instance GHC.Generics.Generic Amazonka.Panorama.CreateJobForDevices.CreateJobForDevices
instance GHC.Show.Show Amazonka.Panorama.CreateJobForDevices.CreateJobForDevices
instance GHC.Read.Read Amazonka.Panorama.CreateJobForDevices.CreateJobForDevices
instance GHC.Classes.Eq Amazonka.Panorama.CreateJobForDevices.CreateJobForDevices
instance GHC.Generics.Generic Amazonka.Panorama.CreateJobForDevices.CreateJobForDevicesResponse
instance GHC.Show.Show Amazonka.Panorama.CreateJobForDevices.CreateJobForDevicesResponse
instance GHC.Read.Read Amazonka.Panorama.CreateJobForDevices.CreateJobForDevicesResponse
instance GHC.Classes.Eq Amazonka.Panorama.CreateJobForDevices.CreateJobForDevicesResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.CreateJobForDevices.CreateJobForDevices
instance Control.DeepSeq.NFData Amazonka.Panorama.CreateJobForDevices.CreateJobForDevicesResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.CreateJobForDevices.CreateJobForDevices
instance Control.DeepSeq.NFData Amazonka.Panorama.CreateJobForDevices.CreateJobForDevices
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.CreateJobForDevices.CreateJobForDevices
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.CreateJobForDevices.CreateJobForDevices
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.CreateJobForDevices.CreateJobForDevices
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.CreateJobForDevices.CreateJobForDevices


-- | Creates an application instance and deploys it to a device.
module Amazonka.Panorama.CreateApplicationInstance

-- | <i>See:</i> <a>newCreateApplicationInstance</a> smart constructor.
data CreateApplicationInstance
CreateApplicationInstance' :: Maybe ManifestOverridesPayload -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> ManifestPayload -> Text -> CreateApplicationInstance

-- | Setting overrides for the application manifest.
[$sel:manifestOverridesPayload:CreateApplicationInstance'] :: CreateApplicationInstance -> Maybe ManifestOverridesPayload

-- | A name for the application instance.
[$sel:name:CreateApplicationInstance'] :: CreateApplicationInstance -> Maybe Text

-- | The ARN of a runtime role for the application instance.
[$sel:runtimeRoleArn:CreateApplicationInstance'] :: CreateApplicationInstance -> Maybe Text

-- | A description for the application instance.
[$sel:description:CreateApplicationInstance'] :: CreateApplicationInstance -> Maybe Text

-- | Tags for the application instance.
[$sel:tags:CreateApplicationInstance'] :: CreateApplicationInstance -> Maybe (HashMap Text Text)

-- | The ID of an application instance to replace with the new instance.
[$sel:applicationInstanceIdToReplace:CreateApplicationInstance'] :: CreateApplicationInstance -> Maybe Text

-- | The application's manifest document.
[$sel:manifestPayload:CreateApplicationInstance'] :: CreateApplicationInstance -> ManifestPayload

-- | A device's ID.
[$sel:defaultRuntimeContextDevice:CreateApplicationInstance'] :: CreateApplicationInstance -> Text

-- | Create a value of <a>CreateApplicationInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestOverridesPayload:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_manifestOverridesPayload</a> - Setting
--   overrides for the application manifest.
--   
--   <a>$sel:name:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_name</a> - A name for the application
--   instance.
--   
--   <a>$sel:runtimeRoleArn:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_runtimeRoleArn</a> - The ARN of a runtime
--   role for the application instance.
--   
--   <a>$sel:description:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_description</a> - A description for the
--   application instance.
--   
--   <a>$sel:tags:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_tags</a> - Tags for the application
--   instance.
--   
--   <a>$sel:applicationInstanceIdToReplace:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_applicationInstanceIdToReplace</a> - The
--   ID of an application instance to replace with the new instance.
--   
--   <a>$sel:manifestPayload:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_manifestPayload</a> - The application's
--   manifest document.
--   
--   <a>$sel:defaultRuntimeContextDevice:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_defaultRuntimeContextDevice</a> - A
--   device's ID.
newCreateApplicationInstance :: ManifestPayload -> Text -> CreateApplicationInstance

-- | Setting overrides for the application manifest.
createApplicationInstance_manifestOverridesPayload :: Lens' CreateApplicationInstance (Maybe ManifestOverridesPayload)

-- | A name for the application instance.
createApplicationInstance_name :: Lens' CreateApplicationInstance (Maybe Text)

-- | The ARN of a runtime role for the application instance.
createApplicationInstance_runtimeRoleArn :: Lens' CreateApplicationInstance (Maybe Text)

-- | A description for the application instance.
createApplicationInstance_description :: Lens' CreateApplicationInstance (Maybe Text)

-- | Tags for the application instance.
createApplicationInstance_tags :: Lens' CreateApplicationInstance (Maybe (HashMap Text Text))

-- | The ID of an application instance to replace with the new instance.
createApplicationInstance_applicationInstanceIdToReplace :: Lens' CreateApplicationInstance (Maybe Text)

-- | The application's manifest document.
createApplicationInstance_manifestPayload :: Lens' CreateApplicationInstance ManifestPayload

-- | A device's ID.
createApplicationInstance_defaultRuntimeContextDevice :: Lens' CreateApplicationInstance Text

-- | <i>See:</i> <a>newCreateApplicationInstanceResponse</a> smart
--   constructor.
data CreateApplicationInstanceResponse
CreateApplicationInstanceResponse' :: Int -> Text -> CreateApplicationInstanceResponse

-- | The response's http status code.
[$sel:httpStatus:CreateApplicationInstanceResponse'] :: CreateApplicationInstanceResponse -> Int

-- | The application instance's ID.
[$sel:applicationInstanceId:CreateApplicationInstanceResponse'] :: CreateApplicationInstanceResponse -> Text

-- | Create a value of <a>CreateApplicationInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateApplicationInstanceResponse'</a>,
--   <a>createApplicationInstanceResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:applicationInstanceId:CreateApplicationInstanceResponse'</a>,
--   <a>createApplicationInstanceResponse_applicationInstanceId</a> - The
--   application instance's ID.
newCreateApplicationInstanceResponse :: Int -> Text -> CreateApplicationInstanceResponse

-- | The response's http status code.
createApplicationInstanceResponse_httpStatus :: Lens' CreateApplicationInstanceResponse Int

-- | The application instance's ID.
createApplicationInstanceResponse_applicationInstanceId :: Lens' CreateApplicationInstanceResponse Text
instance GHC.Generics.Generic Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstance
instance GHC.Show.Show Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstance
instance GHC.Read.Read Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstance
instance GHC.Classes.Eq Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstance
instance GHC.Generics.Generic Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstanceResponse
instance GHC.Show.Show Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstanceResponse
instance GHC.Read.Read Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstanceResponse
instance GHC.Classes.Eq Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstanceResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstance
instance Control.DeepSeq.NFData Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstanceResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstance
instance Control.DeepSeq.NFData Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstance
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstance
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstance
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstance
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.CreateApplicationInstance.CreateApplicationInstance


-- | Removes tags from a resource.
module Amazonka.Panorama.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The resource's ARN.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Tag keys to remove.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The resource's ARN.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - Tag
--   keys to remove.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The resource's ARN.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Tag keys to remove.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.Panorama.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.Panorama.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.Panorama.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.Panorama.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.Panorama.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.Panorama.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.Panorama.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.Panorama.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.Panorama.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.UntagResource.UntagResource


-- | Updates a device's metadata.
module Amazonka.Panorama.UpdateDeviceMetadata

-- | <i>See:</i> <a>newUpdateDeviceMetadata</a> smart constructor.
data UpdateDeviceMetadata
UpdateDeviceMetadata' :: Maybe Text -> Text -> UpdateDeviceMetadata

-- | A description for the device.
[$sel:description:UpdateDeviceMetadata'] :: UpdateDeviceMetadata -> Maybe Text

-- | The device's ID.
[$sel:deviceId:UpdateDeviceMetadata'] :: UpdateDeviceMetadata -> Text

-- | Create a value of <a>UpdateDeviceMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateDeviceMetadata'</a>,
--   <a>updateDeviceMetadata_description</a> - A description for the
--   device.
--   
--   <a>$sel:deviceId:UpdateDeviceMetadata'</a>,
--   <a>updateDeviceMetadata_deviceId</a> - The device's ID.
newUpdateDeviceMetadata :: Text -> UpdateDeviceMetadata

-- | A description for the device.
updateDeviceMetadata_description :: Lens' UpdateDeviceMetadata (Maybe Text)

-- | The device's ID.
updateDeviceMetadata_deviceId :: Lens' UpdateDeviceMetadata Text

-- | <i>See:</i> <a>newUpdateDeviceMetadataResponse</a> smart constructor.
data UpdateDeviceMetadataResponse
UpdateDeviceMetadataResponse' :: Maybe Text -> Int -> UpdateDeviceMetadataResponse

-- | The device's ID.
[$sel:deviceId:UpdateDeviceMetadataResponse'] :: UpdateDeviceMetadataResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateDeviceMetadataResponse'] :: UpdateDeviceMetadataResponse -> Int

-- | Create a value of <a>UpdateDeviceMetadataResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:UpdateDeviceMetadata'</a>,
--   <a>updateDeviceMetadataResponse_deviceId</a> - The device's ID.
--   
--   <a>$sel:httpStatus:UpdateDeviceMetadataResponse'</a>,
--   <a>updateDeviceMetadataResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeviceMetadataResponse :: Int -> UpdateDeviceMetadataResponse

-- | The device's ID.
updateDeviceMetadataResponse_deviceId :: Lens' UpdateDeviceMetadataResponse (Maybe Text)

-- | The response's http status code.
updateDeviceMetadataResponse_httpStatus :: Lens' UpdateDeviceMetadataResponse Int
instance GHC.Generics.Generic Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadata
instance GHC.Show.Show Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadata
instance GHC.Read.Read Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadata
instance GHC.Classes.Eq Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadata
instance GHC.Generics.Generic Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadataResponse
instance GHC.Show.Show Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadataResponse
instance GHC.Read.Read Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadataResponse
instance GHC.Classes.Eq Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadataResponse
instance Amazonka.Types.AWSRequest Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadata
instance Control.DeepSeq.NFData Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadataResponse
instance Data.Hashable.Class.Hashable Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadata
instance Control.DeepSeq.NFData Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadata
instance Amazonka.Data.Headers.ToHeaders Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadata
instance Amazonka.Data.Path.ToPath Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadata
instance Amazonka.Data.Query.ToQuery Amazonka.Panorama.UpdateDeviceMetadata.UpdateDeviceMetadata


module Amazonka.Panorama.Lens

-- | A description for the device.
updateDeviceMetadata_description :: Lens' UpdateDeviceMetadata (Maybe Text)

-- | The device's ID.
updateDeviceMetadata_deviceId :: Lens' UpdateDeviceMetadata Text

-- | The device's ID.
updateDeviceMetadataResponse_deviceId :: Lens' UpdateDeviceMetadataResponse (Maybe Text)

-- | The response's http status code.
updateDeviceMetadataResponse_httpStatus :: Lens' UpdateDeviceMetadataResponse Int

-- | The application instance's ID.
describeApplicationInstanceDetails_applicationInstanceId :: Lens' DescribeApplicationInstanceDetails Text

-- | When the application instance was created.
describeApplicationInstanceDetailsResponse_createdTime :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe UTCTime)

-- | The application instance's default runtime context device.
describeApplicationInstanceDetailsResponse_defaultRuntimeContextDevice :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe Text)

-- | Parameter overrides for the configuration manifest.
describeApplicationInstanceDetailsResponse_manifestOverridesPayload :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe ManifestOverridesPayload)

-- | The application instance's name.
describeApplicationInstanceDetailsResponse_name :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe Text)

-- | The application instance's ID.
describeApplicationInstanceDetailsResponse_applicationInstanceId :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe Text)

-- | The application instance's description.
describeApplicationInstanceDetailsResponse_description :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe Text)

-- | The application instance's configuration manifest.
describeApplicationInstanceDetailsResponse_manifestPayload :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe ManifestPayload)

-- | The ID of the application instance that this instance replaced.
describeApplicationInstanceDetailsResponse_applicationInstanceIdToReplace :: Lens' DescribeApplicationInstanceDetailsResponse (Maybe Text)

-- | The response's http status code.
describeApplicationInstanceDetailsResponse_httpStatus :: Lens' DescribeApplicationInstanceDetailsResponse Int

-- | Setting overrides for the application manifest.
createApplicationInstance_manifestOverridesPayload :: Lens' CreateApplicationInstance (Maybe ManifestOverridesPayload)

-- | A name for the application instance.
createApplicationInstance_name :: Lens' CreateApplicationInstance (Maybe Text)

-- | The ARN of a runtime role for the application instance.
createApplicationInstance_runtimeRoleArn :: Lens' CreateApplicationInstance (Maybe Text)

-- | A description for the application instance.
createApplicationInstance_description :: Lens' CreateApplicationInstance (Maybe Text)

-- | Tags for the application instance.
createApplicationInstance_tags :: Lens' CreateApplicationInstance (Maybe (HashMap Text Text))

-- | The ID of an application instance to replace with the new instance.
createApplicationInstance_applicationInstanceIdToReplace :: Lens' CreateApplicationInstance (Maybe Text)

-- | The application's manifest document.
createApplicationInstance_manifestPayload :: Lens' CreateApplicationInstance ManifestPayload

-- | A device's ID.
createApplicationInstance_defaultRuntimeContextDevice :: Lens' CreateApplicationInstance Text

-- | The response's http status code.
createApplicationInstanceResponse_httpStatus :: Lens' CreateApplicationInstanceResponse Int

-- | The application instance's ID.
createApplicationInstanceResponse_applicationInstanceId :: Lens' CreateApplicationInstanceResponse Text

-- | The resource's ARN.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | A list of tags.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | An application instance ID.
removeApplicationInstance_applicationInstanceId :: Lens' RemoveApplicationInstance Text

-- | The response's http status code.
removeApplicationInstanceResponse_httpStatus :: Lens' RemoveApplicationInstanceResponse Int

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listDevicesJobs_nextToken :: Lens' ListDevicesJobs (Maybe Text)

-- | Filter results by the job's target device ID.
listDevicesJobs_deviceId :: Lens' ListDevicesJobs (Maybe Text)

-- | The maximum number of device jobs to return in one page of results.
listDevicesJobs_maxResults :: Lens' ListDevicesJobs (Maybe Natural)

-- | A pagination token that's included if more results are available.
listDevicesJobsResponse_nextToken :: Lens' ListDevicesJobsResponse (Maybe Text)

-- | A list of jobs.
listDevicesJobsResponse_deviceJobs :: Lens' ListDevicesJobsResponse (Maybe [DeviceJob])

-- | The response's http status code.
listDevicesJobsResponse_httpStatus :: Lens' ListDevicesJobsResponse Int

-- | Tags for the job.
createNodeFromTemplateJob_jobTags :: Lens' CreateNodeFromTemplateJob (Maybe [JobResourceTags])

-- | A description for the node.
createNodeFromTemplateJob_nodeDescription :: Lens' CreateNodeFromTemplateJob (Maybe Text)

-- | The type of node.
createNodeFromTemplateJob_templateType :: Lens' CreateNodeFromTemplateJob TemplateType

-- | An output package name for the node.
createNodeFromTemplateJob_outputPackageName :: Lens' CreateNodeFromTemplateJob Text

-- | An output package version for the node.
createNodeFromTemplateJob_outputPackageVersion :: Lens' CreateNodeFromTemplateJob Text

-- | A name for the node.
createNodeFromTemplateJob_nodeName :: Lens' CreateNodeFromTemplateJob Text

-- | Template parameters for the node.
createNodeFromTemplateJob_templateParameters :: Lens' CreateNodeFromTemplateJob (HashMap Text Text)

-- | The response's http status code.
createNodeFromTemplateJobResponse_httpStatus :: Lens' CreateNodeFromTemplateJobResponse Int

-- | The job's ID.
createNodeFromTemplateJobResponse_jobId :: Lens' CreateNodeFromTemplateJobResponse Text

-- | If the version was marked latest, the new version to maker as latest.
deregisterPackageVersion_updatedLatestPatchVersion :: Lens' DeregisterPackageVersion (Maybe Text)

-- | An owner account.
deregisterPackageVersion_ownerAccount :: Lens' DeregisterPackageVersion (Maybe Text)

-- | A package ID.
deregisterPackageVersion_packageId :: Lens' DeregisterPackageVersion Text

-- | A package version.
deregisterPackageVersion_packageVersion :: Lens' DeregisterPackageVersion Text

-- | A patch version.
deregisterPackageVersion_patchVersion :: Lens' DeregisterPackageVersion Text

-- | The response's http status code.
deregisterPackageVersionResponse_httpStatus :: Lens' DeregisterPackageVersionResponse Int

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listPackages_nextToken :: Lens' ListPackages (Maybe Text)

-- | The maximum number of packages to return in one page of results.
listPackages_maxResults :: Lens' ListPackages (Maybe Natural)

-- | A list of packages.
listPackagesResponse_packages :: Lens' ListPackagesResponse (Maybe [PackageListItem])

-- | A pagination token that's included if more results are available.
listPackagesResponse_nextToken :: Lens' ListPackagesResponse (Maybe Text)

-- | The response's http status code.
listPackagesResponse_httpStatus :: Lens' ListPackagesResponse Int

-- | The application instance's ID.
describeApplicationInstance_applicationInstanceId :: Lens' DescribeApplicationInstance Text

-- | The application instance's status.
describeApplicationInstanceResponse_status :: Lens' DescribeApplicationInstanceResponse (Maybe ApplicationInstanceStatus)

-- | The application instance's status description.
describeApplicationInstanceResponse_statusDescription :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The application instance was updated.
describeApplicationInstanceResponse_lastUpdatedTime :: Lens' DescribeApplicationInstanceResponse (Maybe UTCTime)

-- | The application instance's ARN.
describeApplicationInstanceResponse_arn :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | When the application instance was created.
describeApplicationInstanceResponse_createdTime :: Lens' DescribeApplicationInstanceResponse (Maybe UTCTime)

-- | The device's ID.
describeApplicationInstanceResponse_defaultRuntimeContextDevice :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The device's bane.
describeApplicationInstanceResponse_defaultRuntimeContextDeviceName :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The application instance's name.
describeApplicationInstanceResponse_name :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The application instance's runtime role ARN.
describeApplicationInstanceResponse_runtimeRoleArn :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The application instance's health status.
describeApplicationInstanceResponse_healthStatus :: Lens' DescribeApplicationInstanceResponse (Maybe ApplicationInstanceHealthStatus)

-- | The application instance's ID.
describeApplicationInstanceResponse_applicationInstanceId :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The application instance's description.
describeApplicationInstanceResponse_description :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The application instance's tags.
describeApplicationInstanceResponse_tags :: Lens' DescribeApplicationInstanceResponse (Maybe (HashMap Text Text))

-- | The ID of the application instance that this instance replaced.
describeApplicationInstanceResponse_applicationInstanceIdToReplace :: Lens' DescribeApplicationInstanceResponse (Maybe Text)

-- | The response's http status code.
describeApplicationInstanceResponse_httpStatus :: Lens' DescribeApplicationInstanceResponse Int

-- | Whether to mark the new version as the latest version.
registerPackageVersion_markLatest :: Lens' RegisterPackageVersion (Maybe Bool)

-- | An owner account.
registerPackageVersion_ownerAccount :: Lens' RegisterPackageVersion (Maybe Text)

-- | A package ID.
registerPackageVersion_packageId :: Lens' RegisterPackageVersion Text

-- | A package version.
registerPackageVersion_packageVersion :: Lens' RegisterPackageVersion Text

-- | A patch version.
registerPackageVersion_patchVersion :: Lens' RegisterPackageVersion Text

-- | The response's http status code.
registerPackageVersionResponse_httpStatus :: Lens' RegisterPackageVersionResponse Int

-- | The job's ID.
describeNodeFromTemplateJob_jobId :: Lens' DescribeNodeFromTemplateJob Text

-- | The job's tags.
describeNodeFromTemplateJobResponse_jobTags :: Lens' DescribeNodeFromTemplateJobResponse (Maybe [JobResourceTags])

-- | The node's description.
describeNodeFromTemplateJobResponse_nodeDescription :: Lens' DescribeNodeFromTemplateJobResponse (Maybe Text)

-- | The response's http status code.
describeNodeFromTemplateJobResponse_httpStatus :: Lens' DescribeNodeFromTemplateJobResponse Int

-- | The job's ID.
describeNodeFromTemplateJobResponse_jobId :: Lens' DescribeNodeFromTemplateJobResponse Text

-- | The job's status.
describeNodeFromTemplateJobResponse_status :: Lens' DescribeNodeFromTemplateJobResponse NodeFromTemplateJobStatus

-- | The job's status message.
describeNodeFromTemplateJobResponse_statusMessage :: Lens' DescribeNodeFromTemplateJobResponse Text

-- | When the job was created.
describeNodeFromTemplateJobResponse_createdTime :: Lens' DescribeNodeFromTemplateJobResponse UTCTime

-- | When the job was updated.
describeNodeFromTemplateJobResponse_lastUpdatedTime :: Lens' DescribeNodeFromTemplateJobResponse UTCTime

-- | The job's output package name.
describeNodeFromTemplateJobResponse_outputPackageName :: Lens' DescribeNodeFromTemplateJobResponse Text

-- | The job's output package version.
describeNodeFromTemplateJobResponse_outputPackageVersion :: Lens' DescribeNodeFromTemplateJobResponse Text

-- | The node's name.
describeNodeFromTemplateJobResponse_nodeName :: Lens' DescribeNodeFromTemplateJobResponse Text

-- | The job's template type.
describeNodeFromTemplateJobResponse_templateType :: Lens' DescribeNodeFromTemplateJobResponse TemplateType

-- | The job's template parameters.
describeNodeFromTemplateJobResponse_templateParameters :: Lens' DescribeNodeFromTemplateJobResponse (HashMap Text Text)

-- | Tags for the package import job.
createPackageImportJob_jobTags :: Lens' CreatePackageImportJob (Maybe [JobResourceTags])

-- | A job type for the package import job.
createPackageImportJob_jobType :: Lens' CreatePackageImportJob PackageImportJobType

-- | An input config for the package import job.
createPackageImportJob_inputConfig :: Lens' CreatePackageImportJob PackageImportJobInputConfig

-- | An output config for the package import job.
createPackageImportJob_outputConfig :: Lens' CreatePackageImportJob PackageImportJobOutputConfig

-- | A client token for the package import job.
createPackageImportJob_clientToken :: Lens' CreatePackageImportJob Text

-- | The response's http status code.
createPackageImportJobResponse_httpStatus :: Lens' CreatePackageImportJobResponse Int

-- | The job's ID.
createPackageImportJobResponse_jobId :: Lens' CreatePackageImportJobResponse Text

-- | The package's ID.
describePackage_packageId :: Lens' DescribePackage Text

-- | ARNs of accounts that have write access to the package.
describePackageResponse_writeAccessPrincipalArns :: Lens' DescribePackageResponse (Maybe [Text])

-- | ARNs of accounts that have read access to the package.
describePackageResponse_readAccessPrincipalArns :: Lens' DescribePackageResponse (Maybe [Text])

-- | The response's http status code.
describePackageResponse_httpStatus :: Lens' DescribePackageResponse Int

-- | The package's ID.
describePackageResponse_packageId :: Lens' DescribePackageResponse Text

-- | The package's name.
describePackageResponse_packageName :: Lens' DescribePackageResponse Text

-- | The package's ARN.
describePackageResponse_arn :: Lens' DescribePackageResponse Text

-- | The package's storage location.
describePackageResponse_storageLocation :: Lens' DescribePackageResponse StorageLocation

-- | When the package was created.
describePackageResponse_createdTime :: Lens' DescribePackageResponse UTCTime

-- | The package's tags.
describePackageResponse_tags :: Lens' DescribePackageResponse (HashMap Text Text)

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listApplicationInstances_nextToken :: Lens' ListApplicationInstances (Maybe Text)

-- | Only include instances with a specific status.
listApplicationInstances_statusFilter :: Lens' ListApplicationInstances (Maybe StatusFilter)

-- | The application instances' device ID.
listApplicationInstances_deviceId :: Lens' ListApplicationInstances (Maybe Text)

-- | The maximum number of application instances to return in one page of
--   results.
listApplicationInstances_maxResults :: Lens' ListApplicationInstances (Maybe Natural)

-- | A pagination token that's included if more results are available.
listApplicationInstancesResponse_nextToken :: Lens' ListApplicationInstancesResponse (Maybe Text)

-- | A list of application instances.
listApplicationInstancesResponse_applicationInstances :: Lens' ListApplicationInstancesResponse (Maybe [ApplicationInstance])

-- | The response's http status code.
listApplicationInstancesResponse_httpStatus :: Lens' ListApplicationInstancesResponse Int

-- | The job's ID.
describeDeviceJob_jobId :: Lens' DescribeDeviceJob Text

-- | The job's status.
describeDeviceJobResponse_status :: Lens' DescribeDeviceJobResponse (Maybe UpdateProgress)

-- | The job's ID.
describeDeviceJobResponse_jobId :: Lens' DescribeDeviceJobResponse (Maybe Text)

-- | When the job was created.
describeDeviceJobResponse_createdTime :: Lens' DescribeDeviceJobResponse (Maybe UTCTime)

-- | The device's ARN.
describeDeviceJobResponse_deviceArn :: Lens' DescribeDeviceJobResponse (Maybe Text)

-- | For an OTA job, the target version of the device software.
describeDeviceJobResponse_imageVersion :: Lens' DescribeDeviceJobResponse (Maybe Text)

-- | The device's name.
describeDeviceJobResponse_deviceName :: Lens' DescribeDeviceJobResponse (Maybe Text)

-- | The device's ID.
describeDeviceJobResponse_deviceId :: Lens' DescribeDeviceJobResponse (Maybe Text)

-- | The device's type.
describeDeviceJobResponse_deviceType :: Lens' DescribeDeviceJobResponse (Maybe DeviceType)

-- | The response's http status code.
describeDeviceJobResponse_httpStatus :: Lens' DescribeDeviceJobResponse Int

-- | The job's ID.
describePackageImportJob_jobId :: Lens' DescribePackageImportJob Text

-- | The job's client token.
describePackageImportJobResponse_clientToken :: Lens' DescribePackageImportJobResponse (Maybe Text)

-- | The job's tags.
describePackageImportJobResponse_jobTags :: Lens' DescribePackageImportJobResponse (Maybe [JobResourceTags])

-- | The response's http status code.
describePackageImportJobResponse_httpStatus :: Lens' DescribePackageImportJobResponse Int

-- | The job's ID.
describePackageImportJobResponse_jobId :: Lens' DescribePackageImportJobResponse Text

-- | The job's type.
describePackageImportJobResponse_jobType :: Lens' DescribePackageImportJobResponse PackageImportJobType

-- | The job's input config.
describePackageImportJobResponse_inputConfig :: Lens' DescribePackageImportJobResponse PackageImportJobInputConfig

-- | The job's output config.
describePackageImportJobResponse_outputConfig :: Lens' DescribePackageImportJobResponse PackageImportJobOutputConfig

-- | The job's output.
describePackageImportJobResponse_output :: Lens' DescribePackageImportJobResponse PackageImportJobOutput

-- | When the job was created.
describePackageImportJobResponse_createdTime :: Lens' DescribePackageImportJobResponse UTCTime

-- | When the job was updated.
describePackageImportJobResponse_lastUpdatedTime :: Lens' DescribePackageImportJobResponse UTCTime

-- | The job's status.
describePackageImportJobResponse_status :: Lens' DescribePackageImportJobResponse PackageImportJobStatus

-- | The job's status message.
describePackageImportJobResponse_statusMessage :: Lens' DescribePackageImportJobResponse Text

-- | The device's ID.
describeDevice_deviceId :: Lens' DescribeDevice Text

-- | The latest software version available for the device.
describeDeviceResponse_latestSoftware :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The device's provisioning status.
describeDeviceResponse_provisioningStatus :: Lens' DescribeDeviceResponse (Maybe DeviceStatus)

-- | The device's ARN.
describeDeviceResponse_arn :: Lens' DescribeDeviceResponse (Maybe Text)

-- | When the device was created.
describeDeviceResponse_createdTime :: Lens' DescribeDeviceResponse (Maybe UTCTime)

-- | The device's current software version.
describeDeviceResponse_currentSoftware :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The device's name.
describeDeviceResponse_name :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The device's connection status.
describeDeviceResponse_deviceConnectionStatus :: Lens' DescribeDeviceResponse (Maybe DeviceConnectionStatus)

-- | The device's ID.
describeDeviceResponse_deviceId :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The device's type.
describeDeviceResponse_type :: Lens' DescribeDeviceResponse (Maybe DeviceType)

-- | The device's lease expiration time.
describeDeviceResponse_leaseExpirationTime :: Lens' DescribeDeviceResponse (Maybe UTCTime)

-- | The device's serial number.
describeDeviceResponse_serialNumber :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The device's networking status.
describeDeviceResponse_currentNetworkingStatus :: Lens' DescribeDeviceResponse (Maybe NetworkStatus)

-- | The device's description.
describeDeviceResponse_description :: Lens' DescribeDeviceResponse (Maybe Text)

-- | The device's networking configuration.
describeDeviceResponse_networkingConfiguration :: Lens' DescribeDeviceResponse (Maybe NetworkPayload)

-- | The device's tags.
describeDeviceResponse_tags :: Lens' DescribeDeviceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeDeviceResponse_httpStatus :: Lens' DescribeDeviceResponse Int

-- | The version's patch version.
describePackageVersion_patchVersion :: Lens' DescribePackageVersion (Maybe Text)

-- | The version's owner account.
describePackageVersion_ownerAccount :: Lens' DescribePackageVersion (Maybe Text)

-- | The version's ID.
describePackageVersion_packageId :: Lens' DescribePackageVersion Text

-- | The version's version.
describePackageVersion_packageVersion :: Lens' DescribePackageVersion Text

-- | The version's status description.
describePackageVersionResponse_statusDescription :: Lens' DescribePackageVersionResponse (Maybe Text)

-- | The ARN of the package.
describePackageVersionResponse_packageArn :: Lens' DescribePackageVersionResponse (Maybe Text)

-- | The version's registered time.
describePackageVersionResponse_registeredTime :: Lens' DescribePackageVersionResponse (Maybe UTCTime)

-- | The account ID of the version's owner.
describePackageVersionResponse_ownerAccount :: Lens' DescribePackageVersionResponse (Maybe Text)

-- | The response's http status code.
describePackageVersionResponse_httpStatus :: Lens' DescribePackageVersionResponse Int

-- | The version's ID.
describePackageVersionResponse_packageId :: Lens' DescribePackageVersionResponse Text

-- | The version's name.
describePackageVersionResponse_packageName :: Lens' DescribePackageVersionResponse Text

-- | The version's version.
describePackageVersionResponse_packageVersion :: Lens' DescribePackageVersionResponse Text

-- | The version's patch version.
describePackageVersionResponse_patchVersion :: Lens' DescribePackageVersionResponse Text

-- | Whether the version is the latest available.
describePackageVersionResponse_isLatestPatch :: Lens' DescribePackageVersionResponse Bool

-- | The version's status.
describePackageVersionResponse_status :: Lens' DescribePackageVersionResponse PackageVersionStatus

-- | The account ID of the node's owner.
describeNode_ownerAccount :: Lens' DescribeNode (Maybe Text)

-- | The node's ID.
describeNode_nodeId :: Lens' DescribeNode Text

-- | The node's asset name.
describeNodeResponse_assetName :: Lens' DescribeNodeResponse (Maybe Text)

-- | The node's ARN.
describeNodeResponse_packageArn :: Lens' DescribeNodeResponse (Maybe Text)

-- | The response's http status code.
describeNodeResponse_httpStatus :: Lens' DescribeNodeResponse Int

-- | The node's ID.
describeNodeResponse_nodeId :: Lens' DescribeNodeResponse Text

-- | The node's name.
describeNodeResponse_name :: Lens' DescribeNodeResponse Text

-- | The node's category.
describeNodeResponse_category :: Lens' DescribeNodeResponse NodeCategory

-- | The account ID of the node's owner.
describeNodeResponse_ownerAccount :: Lens' DescribeNodeResponse Text

-- | The node's package name.
describeNodeResponse_packageName :: Lens' DescribeNodeResponse Text

-- | The node's package ID.
describeNodeResponse_packageId :: Lens' DescribeNodeResponse Text

-- | The node's package version.
describeNodeResponse_packageVersion :: Lens' DescribeNodeResponse Text

-- | The node's patch version.
describeNodeResponse_patchVersion :: Lens' DescribeNodeResponse Text

-- | The node's interface.
describeNodeResponse_nodeInterface :: Lens' DescribeNodeResponse NodeInterface

-- | The node's description.
describeNodeResponse_description :: Lens' DescribeNodeResponse Text

-- | When the node was created.
describeNodeResponse_createdTime :: Lens' DescribeNodeResponse UTCTime

-- | When the node was updated.
describeNodeResponse_lastUpdatedTime :: Lens' DescribeNodeResponse UTCTime

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listNodeFromTemplateJobs_nextToken :: Lens' ListNodeFromTemplateJobs (Maybe Text)

-- | The maximum number of node from template jobs to return in one page of
--   results.
listNodeFromTemplateJobs_maxResults :: Lens' ListNodeFromTemplateJobs (Maybe Natural)

-- | A pagination token that's included if more results are available.
listNodeFromTemplateJobsResponse_nextToken :: Lens' ListNodeFromTemplateJobsResponse (Maybe Text)

-- | The response's http status code.
listNodeFromTemplateJobsResponse_httpStatus :: Lens' ListNodeFromTemplateJobsResponse Int

-- | A list of jobs.
listNodeFromTemplateJobsResponse_nodeFromTemplateJobs :: Lens' ListNodeFromTemplateJobsResponse [NodeFromTemplateJob]

-- | The resource's ARN.
tagResource_resourceArn :: Lens' TagResource Text

-- | Tags for the resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listApplicationInstanceDependencies_nextToken :: Lens' ListApplicationInstanceDependencies (Maybe Text)

-- | The maximum number of application instance dependencies to return in
--   one page of results.
listApplicationInstanceDependencies_maxResults :: Lens' ListApplicationInstanceDependencies (Maybe Natural)

-- | The application instance's ID.
listApplicationInstanceDependencies_applicationInstanceId :: Lens' ListApplicationInstanceDependencies Text

-- | A list of package objects.
listApplicationInstanceDependenciesResponse_packageObjects :: Lens' ListApplicationInstanceDependenciesResponse (Maybe [PackageObject])

-- | A pagination token that's included if more results are available.
listApplicationInstanceDependenciesResponse_nextToken :: Lens' ListApplicationInstanceDependenciesResponse (Maybe Text)

-- | The response's http status code.
listApplicationInstanceDependenciesResponse_httpStatus :: Lens' ListApplicationInstanceDependenciesResponse Int

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listApplicationInstanceNodeInstances_nextToken :: Lens' ListApplicationInstanceNodeInstances (Maybe Text)

-- | The maximum number of node instances to return in one page of results.
listApplicationInstanceNodeInstances_maxResults :: Lens' ListApplicationInstanceNodeInstances (Maybe Natural)

-- | The node instances' application instance ID.
listApplicationInstanceNodeInstances_applicationInstanceId :: Lens' ListApplicationInstanceNodeInstances Text

-- | A pagination token that's included if more results are available.
listApplicationInstanceNodeInstancesResponse_nextToken :: Lens' ListApplicationInstanceNodeInstancesResponse (Maybe Text)

-- | A list of node instances.
listApplicationInstanceNodeInstancesResponse_nodeInstances :: Lens' ListApplicationInstanceNodeInstancesResponse (Maybe [NodeInstance])

-- | The response's http status code.
listApplicationInstanceNodeInstancesResponse_httpStatus :: Lens' ListApplicationInstanceNodeInstancesResponse Int

-- | IDs of target devices.
createJobForDevices_deviceIds :: Lens' CreateJobForDevices (NonEmpty Text)

-- | Configuration settings for the job.
createJobForDevices_deviceJobConfig :: Lens' CreateJobForDevices DeviceJobConfig

-- | The type of job to run.
createJobForDevices_jobType :: Lens' CreateJobForDevices JobType

-- | The response's http status code.
createJobForDevicesResponse_httpStatus :: Lens' CreateJobForDevicesResponse Int

-- | A list of jobs.
createJobForDevicesResponse_jobs :: Lens' CreateJobForDevicesResponse [Job]

-- | The resource's ARN.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Tag keys to remove.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | Delete the package even if it has artifacts stored in its access
--   point. Deletes the package's artifacts from Amazon S3.
deletePackage_forceDelete :: Lens' DeletePackage (Maybe Bool)

-- | The package's ID.
deletePackage_packageId :: Lens' DeletePackage Text

-- | The response's http status code.
deletePackageResponse_httpStatus :: Lens' DeletePackageResponse Int

-- | Tags for the package.
createPackage_tags :: Lens' CreatePackage (Maybe (HashMap Text Text))

-- | A name for the package.
createPackage_packageName :: Lens' CreatePackage Text

-- | The package's ID.
createPackageResponse_packageId :: Lens' CreatePackageResponse (Maybe Text)

-- | The package's ARN.
createPackageResponse_arn :: Lens' CreatePackageResponse (Maybe Text)

-- | The response's http status code.
createPackageResponse_httpStatus :: Lens' CreatePackageResponse Int

-- | The package's storage location.
createPackageResponse_storageLocation :: Lens' CreatePackageResponse StorageLocation

-- | A description for the device.
provisionDevice_description :: Lens' ProvisionDevice (Maybe Text)

-- | A networking configuration for the device.
provisionDevice_networkingConfiguration :: Lens' ProvisionDevice (Maybe NetworkPayload)

-- | Tags for the device.
provisionDevice_tags :: Lens' ProvisionDevice (Maybe (HashMap Text Text))

-- | A name for the device.
provisionDevice_name :: Lens' ProvisionDevice Text

-- | The device's configuration bundle.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
provisionDeviceResponse_certificates :: Lens' ProvisionDeviceResponse (Maybe ByteString)

-- | The device's ID.
provisionDeviceResponse_deviceId :: Lens' ProvisionDeviceResponse (Maybe Text)

-- | The device's IoT thing name.
provisionDeviceResponse_iotThingName :: Lens' ProvisionDeviceResponse (Maybe Text)

-- | The response's http status code.
provisionDeviceResponse_httpStatus :: Lens' ProvisionDeviceResponse Int

-- | The device's ARN.
provisionDeviceResponse_arn :: Lens' ProvisionDeviceResponse Text

-- | The device's status.
provisionDeviceResponse_status :: Lens' ProvisionDeviceResponse DeviceStatus

-- | The device's ID.
deleteDevice_deviceId :: Lens' DeleteDevice Text

-- | The device's ID.
deleteDeviceResponse_deviceId :: Lens' DeleteDeviceResponse (Maybe Text)

-- | The response's http status code.
deleteDeviceResponse_httpStatus :: Lens' DeleteDeviceResponse Int

-- | Search for nodes by patch version.
listNodes_patchVersion :: Lens' ListNodes (Maybe Text)

-- | Search for nodes by name.
listNodes_packageName :: Lens' ListNodes (Maybe Text)

-- | Search for nodes by version.
listNodes_packageVersion :: Lens' ListNodes (Maybe Text)

-- | Search for nodes by category.
listNodes_category :: Lens' ListNodes (Maybe NodeCategory)

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listNodes_nextToken :: Lens' ListNodes (Maybe Text)

-- | Search for nodes by the account ID of the nodes' owner.
listNodes_ownerAccount :: Lens' ListNodes (Maybe Text)

-- | The maximum number of nodes to return in one page of results.
listNodes_maxResults :: Lens' ListNodes (Maybe Natural)

-- | A pagination token that's included if more results are available.
listNodesResponse_nextToken :: Lens' ListNodesResponse (Maybe Text)

-- | A list of nodes.
listNodesResponse_nodes :: Lens' ListNodesResponse (Maybe [Node])

-- | The response's http status code.
listNodesResponse_httpStatus :: Lens' ListNodesResponse Int

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listDevices_nextToken :: Lens' ListDevices (Maybe Text)

-- | The maximum number of devices to return in one page of results.
listDevices_maxResults :: Lens' ListDevices (Maybe Natural)

-- | A pagination token that's included if more results are available.
listDevicesResponse_nextToken :: Lens' ListDevicesResponse (Maybe Text)

-- | The response's http status code.
listDevicesResponse_httpStatus :: Lens' ListDevicesResponse Int

-- | A list of devices.
listDevicesResponse_devices :: Lens' ListDevicesResponse [Device]

-- | Specify the pagination token from a previous request to retrieve the
--   next page of results.
listPackageImportJobs_nextToken :: Lens' ListPackageImportJobs (Maybe Text)

-- | The maximum number of package import jobs to return in one page of
--   results.
listPackageImportJobs_maxResults :: Lens' ListPackageImportJobs (Maybe Natural)

-- | A pagination token that's included if more results are available.
listPackageImportJobsResponse_nextToken :: Lens' ListPackageImportJobsResponse (Maybe Text)

-- | The response's http status code.
listPackageImportJobsResponse_httpStatus :: Lens' ListPackageImportJobsResponse Int

-- | A list of package import jobs.
listPackageImportJobsResponse_packageImportJobs :: Lens' ListPackageImportJobsResponse [PackageImportJob]

-- | The application instance's status.
applicationInstance_status :: Lens' ApplicationInstance (Maybe ApplicationInstanceStatus)

-- | The application instance's status description.
applicationInstance_statusDescription :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's ARN.
applicationInstance_arn :: Lens' ApplicationInstance (Maybe Text)

-- | When the application instance was created.
applicationInstance_createdTime :: Lens' ApplicationInstance (Maybe UTCTime)

-- | The device's ID.
applicationInstance_defaultRuntimeContextDevice :: Lens' ApplicationInstance (Maybe Text)

-- | The device's name.
applicationInstance_defaultRuntimeContextDeviceName :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's name.
applicationInstance_name :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's health status.
applicationInstance_healthStatus :: Lens' ApplicationInstance (Maybe ApplicationInstanceHealthStatus)

-- | The application instance's ID.
applicationInstance_applicationInstanceId :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's description.
applicationInstance_description :: Lens' ApplicationInstance (Maybe Text)

-- | The application instance's tags.
applicationInstance_tags :: Lens' ApplicationInstance (Maybe (HashMap Text Text))

-- | When the device was updated.
device_lastUpdatedTime :: Lens' Device (Maybe UTCTime)

-- | The device's provisioning status.
device_provisioningStatus :: Lens' Device (Maybe DeviceStatus)

-- | When the device was created.
device_createdTime :: Lens' Device (Maybe UTCTime)

-- | The device's name.
device_name :: Lens' Device (Maybe Text)

-- | The device's ID.
device_deviceId :: Lens' Device (Maybe Text)

-- | The device's lease expiration time.
device_leaseExpirationTime :: Lens' Device (Maybe UTCTime)

-- | The job's ID.
deviceJob_jobId :: Lens' DeviceJob (Maybe Text)

-- | When the job was created.
deviceJob_createdTime :: Lens' DeviceJob (Maybe UTCTime)

-- | The name of the target device
deviceJob_deviceName :: Lens' DeviceJob (Maybe Text)

-- | The ID of the target device.
deviceJob_deviceId :: Lens' DeviceJob (Maybe Text)

-- | A configuration for an over-the-air (OTA) upgrade. Required for OTA
--   jobs.
deviceJobConfig_oTAJobConfig :: Lens' DeviceJobConfig (Maybe OTAJobConfig)

-- | Network configuration for a static IP connection.
ethernetPayload_staticIpConnectionInfo :: Lens' EthernetPayload (Maybe StaticIpConnectionInfo)

-- | How the device gets an IP address.
ethernetPayload_connectionType :: Lens' EthernetPayload ConnectionType

-- | The device's IP address.
ethernetStatus_ipAddress :: Lens' EthernetStatus (Maybe Text)

-- | The device's connection status.
ethernetStatus_connectionStatus :: Lens' EthernetStatus (Maybe NetworkConnectionStatus)

-- | The device's physical address.
ethernetStatus_hwAddress :: Lens' EthernetStatus (Maybe Text)

-- | The job's ID.
job_jobId :: Lens' Job (Maybe Text)

-- | The target device's ID.
job_deviceId :: Lens' Job (Maybe Text)

-- | The job's type.
jobResourceTags_resourceType :: Lens' JobResourceTags JobResourceType

-- | The job's tags.
jobResourceTags_tags :: Lens' JobResourceTags (HashMap Text Text)

-- | The overrides document.
manifestOverridesPayload_payloadData :: Lens' ManifestOverridesPayload (Maybe Text)

-- | The application manifest.
manifestPayload_payloadData :: Lens' ManifestPayload (Maybe Text)

-- | Settings for Ethernet port 1.
networkPayload_ethernet1 :: Lens' NetworkPayload (Maybe EthernetPayload)

-- | Settings for Ethernet port 0.
networkPayload_ethernet0 :: Lens' NetworkPayload (Maybe EthernetPayload)

-- | The status of Ethernet port 1.
networkStatus_ethernet1Status :: Lens' NetworkStatus (Maybe EthernetStatus)

-- | The status of Ethernet port 0.
networkStatus_ethernet0Status :: Lens' NetworkStatus (Maybe EthernetStatus)

-- | The node's ARN.
node_packageArn :: Lens' Node (Maybe Text)

-- | The account ID of the node's owner.
node_ownerAccount :: Lens' Node (Maybe Text)

-- | The node's description.
node_description :: Lens' Node (Maybe Text)

-- | The node's ID.
node_nodeId :: Lens' Node Text

-- | The node's name.
node_name :: Lens' Node Text

-- | The node's category.
node_category :: Lens' Node NodeCategory

-- | The node's package name.
node_packageName :: Lens' Node Text

-- | The node's package ID.
node_packageId :: Lens' Node Text

-- | The node's package version.
node_packageVersion :: Lens' Node Text

-- | The node's patch version.
node_patchVersion :: Lens' Node Text

-- | When the node was created.
node_createdTime :: Lens' Node UTCTime

-- | The job's status.
nodeFromTemplateJob_status :: Lens' NodeFromTemplateJob (Maybe NodeFromTemplateJobStatus)

-- | The job's ID.
nodeFromTemplateJob_jobId :: Lens' NodeFromTemplateJob (Maybe Text)

-- | When the job was created.
nodeFromTemplateJob_createdTime :: Lens' NodeFromTemplateJob (Maybe UTCTime)

-- | The job's template type.
nodeFromTemplateJob_templateType :: Lens' NodeFromTemplateJob (Maybe TemplateType)

-- | The node's name.
nodeFromTemplateJob_nodeName :: Lens' NodeFromTemplateJob (Maybe Text)

-- | The job's status message.
nodeFromTemplateJob_statusMessage :: Lens' NodeFromTemplateJob (Maybe Text)

-- | The input port's max connections.
nodeInputPort_maxConnections :: Lens' NodeInputPort (Maybe Int)

-- | The input port's name.
nodeInputPort_name :: Lens' NodeInputPort (Maybe Text)

-- | The input port's default value.
nodeInputPort_defaultValue :: Lens' NodeInputPort (Maybe Text)

-- | The input port's type.
nodeInputPort_type :: Lens' NodeInputPort (Maybe PortType)

-- | The input port's description.
nodeInputPort_description :: Lens' NodeInputPort (Maybe Text)

-- | The instance's package name.
nodeInstance_packageName :: Lens' NodeInstance (Maybe Text)

-- | The instance's package version.
nodeInstance_packageVersion :: Lens' NodeInstance (Maybe Text)

-- | The instance's package patch version.
nodeInstance_packagePatchVersion :: Lens' NodeInstance (Maybe Text)

-- | The instance's name.
nodeInstance_nodeName :: Lens' NodeInstance (Maybe Text)

-- | The node's ID.
nodeInstance_nodeId :: Lens' NodeInstance (Maybe Text)

-- | The instance's ID.
nodeInstance_nodeInstanceId :: Lens' NodeInstance Text

-- | The instance's current status.
nodeInstance_currentStatus :: Lens' NodeInstance NodeInstanceStatus

-- | The node interface's inputs.
nodeInterface_inputs :: Lens' NodeInterface [NodeInputPort]

-- | The node interface's outputs.
nodeInterface_outputs :: Lens' NodeInterface [NodeOutputPort]

-- | The output port's name.
nodeOutputPort_name :: Lens' NodeOutputPort (Maybe Text)

-- | The output port's type.
nodeOutputPort_type :: Lens' NodeOutputPort (Maybe PortType)

-- | The output port's description.
nodeOutputPort_description :: Lens' NodeOutputPort (Maybe Text)

-- | The target version of the device software.
oTAJobConfig_imageVersion :: Lens' OTAJobConfig Text

-- | The object's bucket.
outPutS3Location_bucketName :: Lens' OutPutS3Location Text

-- | The object's key.
outPutS3Location_objectKey :: Lens' OutPutS3Location Text

-- | The job's status.
packageImportJob_status :: Lens' PackageImportJob (Maybe PackageImportJobStatus)

-- | The job's type.
packageImportJob_jobType :: Lens' PackageImportJob (Maybe PackageImportJobType)

-- | When the job was updated.
packageImportJob_lastUpdatedTime :: Lens' PackageImportJob (Maybe UTCTime)

-- | The job's ID.
packageImportJob_jobId :: Lens' PackageImportJob (Maybe Text)

-- | When the job was created.
packageImportJob_createdTime :: Lens' PackageImportJob (Maybe UTCTime)

-- | The job's status message.
packageImportJob_statusMessage :: Lens' PackageImportJob (Maybe Text)

-- | The package version's input configuration.
packageImportJobInputConfig_packageVersionInputConfig :: Lens' PackageImportJobInputConfig (Maybe PackageVersionInputConfig)

-- | The package's ID.
packageImportJobOutput_packageId :: Lens' PackageImportJobOutput Text

-- | The package's version.
packageImportJobOutput_packageVersion :: Lens' PackageImportJobOutput Text

-- | The package's patch version.
packageImportJobOutput_patchVersion :: Lens' PackageImportJobOutput Text

-- | The package's output location.
packageImportJobOutput_outputS3Location :: Lens' PackageImportJobOutput OutPutS3Location

-- | The package version's output configuration.
packageImportJobOutputConfig_packageVersionOutputConfig :: Lens' PackageImportJobOutputConfig (Maybe PackageVersionOutputConfig)

-- | The package's ID.
packageListItem_packageId :: Lens' PackageListItem (Maybe Text)

-- | The package's ARN.
packageListItem_arn :: Lens' PackageListItem (Maybe Text)

-- | When the package was created.
packageListItem_createdTime :: Lens' PackageListItem (Maybe UTCTime)

-- | The package's name.
packageListItem_packageName :: Lens' PackageListItem (Maybe Text)

-- | The package's tags.
packageListItem_tags :: Lens' PackageListItem (Maybe (HashMap Text Text))

-- | The object's name.
packageObject_name :: Lens' PackageObject Text

-- | The object's package version.
packageObject_packageVersion :: Lens' PackageObject Text

-- | The object's patch version.
packageObject_patchVersion :: Lens' PackageObject Text

-- | A location in Amazon S3.
packageVersionInputConfig_s3Location :: Lens' PackageVersionInputConfig S3Location

-- | Indicates that the version is recommended for all users.
packageVersionOutputConfig_markLatest :: Lens' PackageVersionOutputConfig (Maybe Bool)

-- | The output's package name.
packageVersionOutputConfig_packageName :: Lens' PackageVersionOutputConfig Text

-- | The output's package version.
packageVersionOutputConfig_packageVersion :: Lens' PackageVersionOutputConfig Text

-- | The bucket's Region.
s3Location_region :: Lens' S3Location (Maybe Text)

-- | A bucket name.
s3Location_bucketName :: Lens' S3Location Text

-- | An object key.
s3Location_objectKey :: Lens' S3Location Text

-- | The connection's IP address.
staticIpConnectionInfo_ipAddress :: Lens' StaticIpConnectionInfo Text

-- | The connection's DNS mask.
staticIpConnectionInfo_mask :: Lens' StaticIpConnectionInfo Text

-- | The connection's DNS address.
staticIpConnectionInfo_dns :: Lens' StaticIpConnectionInfo [Text]

-- | The connection's default gateway.
staticIpConnectionInfo_defaultGateway :: Lens' StaticIpConnectionInfo Text

-- | The location's bucket.
storageLocation_bucket :: Lens' StorageLocation Text

-- | The location's repo prefix.
storageLocation_repoPrefixLocation :: Lens' StorageLocation Text

-- | The location's generated prefix.
storageLocation_generatedPrefixLocation :: Lens' StorageLocation Text

-- | The location's binary prefix.
storageLocation_binaryPrefixLocation :: Lens' StorageLocation Text

-- | The location's manifest prefix.
storageLocation_manifestPrefixLocation :: Lens' StorageLocation Text


module Amazonka.Panorama.Waiters


-- | Derived from API version <tt>2019-07-24</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS Panorama
--   
--   <b>Overview</b>
--   
--   This is the <i>AWS Panorama API Reference</i>. For an introduction to
--   the service, see <a>What is AWS Panorama?</a> in the <i>AWS Panorama
--   Developer Guide</i>.
module Amazonka.Panorama

-- | API version <tt>2019-07-24</tt> of the Amazon Panorama SDK
--   configuration.
defaultService :: Service

-- | The request contains an invalid parameter value.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requestor does not have permission to access the target action or
--   resource.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target resource is in use.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request would cause a limit to be exceeded.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal error occurred.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newUpdateDeviceMetadata</a> smart constructor.
data UpdateDeviceMetadata
UpdateDeviceMetadata' :: Maybe Text -> Text -> UpdateDeviceMetadata

-- | Create a value of <a>UpdateDeviceMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateDeviceMetadata'</a>,
--   <a>updateDeviceMetadata_description</a> - A description for the
--   device.
--   
--   <a>$sel:deviceId:UpdateDeviceMetadata'</a>,
--   <a>updateDeviceMetadata_deviceId</a> - The device's ID.
newUpdateDeviceMetadata :: Text -> UpdateDeviceMetadata

-- | <i>See:</i> <a>newUpdateDeviceMetadataResponse</a> smart constructor.
data UpdateDeviceMetadataResponse
UpdateDeviceMetadataResponse' :: Maybe Text -> Int -> UpdateDeviceMetadataResponse

-- | Create a value of <a>UpdateDeviceMetadataResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:UpdateDeviceMetadata'</a>,
--   <a>updateDeviceMetadataResponse_deviceId</a> - The device's ID.
--   
--   <a>$sel:httpStatus:UpdateDeviceMetadataResponse'</a>,
--   <a>updateDeviceMetadataResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeviceMetadataResponse :: Int -> UpdateDeviceMetadataResponse

-- | <i>See:</i> <a>newDescribeApplicationInstanceDetails</a> smart
--   constructor.
data DescribeApplicationInstanceDetails
DescribeApplicationInstanceDetails' :: Text -> DescribeApplicationInstanceDetails

-- | Create a value of <a>DescribeApplicationInstanceDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationInstanceId:DescribeApplicationInstanceDetails'</a>,
--   <a>describeApplicationInstanceDetails_applicationInstanceId</a> - The
--   application instance's ID.
newDescribeApplicationInstanceDetails :: Text -> DescribeApplicationInstanceDetails

-- | <i>See:</i> <a>newDescribeApplicationInstanceDetailsResponse</a> smart
--   constructor.
data DescribeApplicationInstanceDetailsResponse
DescribeApplicationInstanceDetailsResponse' :: Maybe POSIX -> Maybe Text -> Maybe ManifestOverridesPayload -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ManifestPayload -> Maybe Text -> Int -> DescribeApplicationInstanceDetailsResponse

-- | Create a value of <a>DescribeApplicationInstanceDetailsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdTime:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_createdTime</a> - When
--   the application instance was created.
--   
--   
--   <a>$sel:defaultRuntimeContextDevice:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_defaultRuntimeContextDevice</a>
--   - The application instance's default runtime context device.
--   
--   
--   <a>$sel:manifestOverridesPayload:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_manifestOverridesPayload</a>
--   - Parameter overrides for the configuration manifest.
--   
--   <a>$sel:name:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_name</a> - The
--   application instance's name.
--   
--   <a>$sel:applicationInstanceId:DescribeApplicationInstanceDetails'</a>,
--   <a>describeApplicationInstanceDetailsResponse_applicationInstanceId</a>
--   - The application instance's ID.
--   
--   <a>$sel:description:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_description</a> - The
--   application instance's description.
--   
--   
--   <a>$sel:manifestPayload:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_manifestPayload</a> -
--   The application instance's configuration manifest.
--   
--   
--   <a>$sel:applicationInstanceIdToReplace:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_applicationInstanceIdToReplace</a>
--   - The ID of the application instance that this instance replaced.
--   
--   <a>$sel:httpStatus:DescribeApplicationInstanceDetailsResponse'</a>,
--   <a>describeApplicationInstanceDetailsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeApplicationInstanceDetailsResponse :: Int -> DescribeApplicationInstanceDetailsResponse

-- | <i>See:</i> <a>newCreateApplicationInstance</a> smart constructor.
data CreateApplicationInstance
CreateApplicationInstance' :: Maybe ManifestOverridesPayload -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> ManifestPayload -> Text -> CreateApplicationInstance

-- | Create a value of <a>CreateApplicationInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:manifestOverridesPayload:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_manifestOverridesPayload</a> - Setting
--   overrides for the application manifest.
--   
--   <a>$sel:name:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_name</a> - A name for the application
--   instance.
--   
--   <a>$sel:runtimeRoleArn:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_runtimeRoleArn</a> - The ARN of a runtime
--   role for the application instance.
--   
--   <a>$sel:description:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_description</a> - A description for the
--   application instance.
--   
--   <a>$sel:tags:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_tags</a> - Tags for the application
--   instance.
--   
--   <a>$sel:applicationInstanceIdToReplace:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_applicationInstanceIdToReplace</a> - The
--   ID of an application instance to replace with the new instance.
--   
--   <a>$sel:manifestPayload:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_manifestPayload</a> - The application's
--   manifest document.
--   
--   <a>$sel:defaultRuntimeContextDevice:CreateApplicationInstance'</a>,
--   <a>createApplicationInstance_defaultRuntimeContextDevice</a> - A
--   device's ID.
newCreateApplicationInstance :: ManifestPayload -> Text -> CreateApplicationInstance

-- | <i>See:</i> <a>newCreateApplicationInstanceResponse</a> smart
--   constructor.
data CreateApplicationInstanceResponse
CreateApplicationInstanceResponse' :: Int -> Text -> CreateApplicationInstanceResponse

-- | Create a value of <a>CreateApplicationInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateApplicationInstanceResponse'</a>,
--   <a>createApplicationInstanceResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:applicationInstanceId:CreateApplicationInstanceResponse'</a>,
--   <a>createApplicationInstanceResponse_applicationInstanceId</a> - The
--   application instance's ID.
newCreateApplicationInstanceResponse :: Int -> Text -> CreateApplicationInstanceResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The resource's ARN.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tags.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newRemoveApplicationInstance</a> smart constructor.
data RemoveApplicationInstance
RemoveApplicationInstance' :: Text -> RemoveApplicationInstance

-- | Create a value of <a>RemoveApplicationInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationInstanceId:RemoveApplicationInstance'</a>,
--   <a>removeApplicationInstance_applicationInstanceId</a> - An
--   application instance ID.
newRemoveApplicationInstance :: Text -> RemoveApplicationInstance

-- | <i>See:</i> <a>newRemoveApplicationInstanceResponse</a> smart
--   constructor.
data RemoveApplicationInstanceResponse
RemoveApplicationInstanceResponse' :: Int -> RemoveApplicationInstanceResponse

-- | Create a value of <a>RemoveApplicationInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RemoveApplicationInstanceResponse'</a>,
--   <a>removeApplicationInstanceResponse_httpStatus</a> - The response's
--   http status code.
newRemoveApplicationInstanceResponse :: Int -> RemoveApplicationInstanceResponse

-- | <i>See:</i> <a>newListDevicesJobs</a> smart constructor.
data ListDevicesJobs
ListDevicesJobs' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDevicesJobs

-- | Create a value of <a>ListDevicesJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevicesJobs'</a>,
--   <a>listDevicesJobs_nextToken</a> - Specify the pagination token from a
--   previous request to retrieve the next page of results.
--   
--   <a>$sel:deviceId:ListDevicesJobs'</a>, <a>listDevicesJobs_deviceId</a>
--   - Filter results by the job's target device ID.
--   
--   <a>$sel:maxResults:ListDevicesJobs'</a>,
--   <a>listDevicesJobs_maxResults</a> - The maximum number of device jobs
--   to return in one page of results.
newListDevicesJobs :: ListDevicesJobs

-- | <i>See:</i> <a>newListDevicesJobsResponse</a> smart constructor.
data ListDevicesJobsResponse
ListDevicesJobsResponse' :: Maybe Text -> Maybe [DeviceJob] -> Int -> ListDevicesJobsResponse

-- | Create a value of <a>ListDevicesJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevicesJobs'</a>,
--   <a>listDevicesJobsResponse_nextToken</a> - A pagination token that's
--   included if more results are available.
--   
--   <a>$sel:deviceJobs:ListDevicesJobsResponse'</a>,
--   <a>listDevicesJobsResponse_deviceJobs</a> - A list of jobs.
--   
--   <a>$sel:httpStatus:ListDevicesJobsResponse'</a>,
--   <a>listDevicesJobsResponse_httpStatus</a> - The response's http status
--   code.
newListDevicesJobsResponse :: Int -> ListDevicesJobsResponse

-- | <i>See:</i> <a>newCreateNodeFromTemplateJob</a> smart constructor.
data CreateNodeFromTemplateJob
CreateNodeFromTemplateJob' :: Maybe [JobResourceTags] -> Maybe Text -> TemplateType -> Text -> Text -> Text -> HashMap Text (Sensitive Text) -> CreateNodeFromTemplateJob

-- | Create a value of <a>CreateNodeFromTemplateJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobTags:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_jobTags</a> - Tags for the job.
--   
--   <a>$sel:nodeDescription:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_nodeDescription</a> - A description for
--   the node.
--   
--   <a>$sel:templateType:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_templateType</a> - The type of node.
--   
--   <a>$sel:outputPackageName:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_outputPackageName</a> - An output package
--   name for the node.
--   
--   <a>$sel:outputPackageVersion:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_outputPackageVersion</a> - An output
--   package version for the node.
--   
--   <a>$sel:nodeName:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_nodeName</a> - A name for the node.
--   
--   <a>$sel:templateParameters:CreateNodeFromTemplateJob'</a>,
--   <a>createNodeFromTemplateJob_templateParameters</a> - Template
--   parameters for the node.
newCreateNodeFromTemplateJob :: TemplateType -> Text -> Text -> Text -> CreateNodeFromTemplateJob

-- | <i>See:</i> <a>newCreateNodeFromTemplateJobResponse</a> smart
--   constructor.
data CreateNodeFromTemplateJobResponse
CreateNodeFromTemplateJobResponse' :: Int -> Text -> CreateNodeFromTemplateJobResponse

-- | Create a value of <a>CreateNodeFromTemplateJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateNodeFromTemplateJobResponse'</a>,
--   <a>createNodeFromTemplateJobResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:jobId:CreateNodeFromTemplateJobResponse'</a>,
--   <a>createNodeFromTemplateJobResponse_jobId</a> - The job's ID.
newCreateNodeFromTemplateJobResponse :: Int -> Text -> CreateNodeFromTemplateJobResponse

-- | <i>See:</i> <a>newDeregisterPackageVersion</a> smart constructor.
data DeregisterPackageVersion
DeregisterPackageVersion' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> DeregisterPackageVersion

-- | Create a value of <a>DeregisterPackageVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updatedLatestPatchVersion:DeregisterPackageVersion'</a>,
--   <a>deregisterPackageVersion_updatedLatestPatchVersion</a> - If the
--   version was marked latest, the new version to maker as latest.
--   
--   <a>$sel:ownerAccount:DeregisterPackageVersion'</a>,
--   <a>deregisterPackageVersion_ownerAccount</a> - An owner account.
--   
--   <a>$sel:packageId:DeregisterPackageVersion'</a>,
--   <a>deregisterPackageVersion_packageId</a> - A package ID.
--   
--   <a>$sel:packageVersion:DeregisterPackageVersion'</a>,
--   <a>deregisterPackageVersion_packageVersion</a> - A package version.
--   
--   <a>$sel:patchVersion:DeregisterPackageVersion'</a>,
--   <a>deregisterPackageVersion_patchVersion</a> - A patch version.
newDeregisterPackageVersion :: Text -> Text -> Text -> DeregisterPackageVersion

-- | <i>See:</i> <a>newDeregisterPackageVersionResponse</a> smart
--   constructor.
data DeregisterPackageVersionResponse
DeregisterPackageVersionResponse' :: Int -> DeregisterPackageVersionResponse

-- | Create a value of <a>DeregisterPackageVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeregisterPackageVersionResponse'</a>,
--   <a>deregisterPackageVersionResponse_httpStatus</a> - The response's
--   http status code.
newDeregisterPackageVersionResponse :: Int -> DeregisterPackageVersionResponse

-- | <i>See:</i> <a>newListPackages</a> smart constructor.
data ListPackages
ListPackages' :: Maybe Text -> Maybe Natural -> ListPackages

-- | Create a value of <a>ListPackages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPackages'</a>, <a>listPackages_nextToken</a> -
--   Specify the pagination token from a previous request to retrieve the
--   next page of results.
--   
--   <a>$sel:maxResults:ListPackages'</a>, <a>listPackages_maxResults</a> -
--   The maximum number of packages to return in one page of results.
newListPackages :: ListPackages

-- | <i>See:</i> <a>newListPackagesResponse</a> smart constructor.
data ListPackagesResponse
ListPackagesResponse' :: Maybe [PackageListItem] -> Maybe Text -> Int -> ListPackagesResponse

-- | Create a value of <a>ListPackagesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packages:ListPackagesResponse'</a>,
--   <a>listPackagesResponse_packages</a> - A list of packages.
--   
--   <a>$sel:nextToken:ListPackages'</a>,
--   <a>listPackagesResponse_nextToken</a> - A pagination token that's
--   included if more results are available.
--   
--   <a>$sel:httpStatus:ListPackagesResponse'</a>,
--   <a>listPackagesResponse_httpStatus</a> - The response's http status
--   code.
newListPackagesResponse :: Int -> ListPackagesResponse

-- | <i>See:</i> <a>newDescribeApplicationInstance</a> smart constructor.
data DescribeApplicationInstance
DescribeApplicationInstance' :: Text -> DescribeApplicationInstance

-- | Create a value of <a>DescribeApplicationInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationInstanceId:DescribeApplicationInstance'</a>,
--   <a>describeApplicationInstance_applicationInstanceId</a> - The
--   application instance's ID.
newDescribeApplicationInstance :: Text -> DescribeApplicationInstance

-- | <i>See:</i> <a>newDescribeApplicationInstanceResponse</a> smart
--   constructor.
data DescribeApplicationInstanceResponse
DescribeApplicationInstanceResponse' :: Maybe ApplicationInstanceStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ApplicationInstanceHealthStatus -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> DescribeApplicationInstanceResponse

-- | Create a value of <a>DescribeApplicationInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_status</a> - The application
--   instance's status.
--   
--   <a>$sel:statusDescription:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_statusDescription</a> - The
--   application instance's status description.
--   
--   <a>$sel:lastUpdatedTime:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_lastUpdatedTime</a> - The
--   application instance was updated.
--   
--   <a>$sel:arn:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_arn</a> - The application
--   instance's ARN.
--   
--   <a>$sel:createdTime:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_createdTime</a> - When the
--   application instance was created.
--   
--   
--   <a>$sel:defaultRuntimeContextDevice:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_defaultRuntimeContextDevice</a>
--   - The device's ID.
--   
--   
--   <a>$sel:defaultRuntimeContextDeviceName:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_defaultRuntimeContextDeviceName</a>
--   - The device's bane.
--   
--   <a>$sel:name:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_name</a> - The application
--   instance's name.
--   
--   <a>$sel:runtimeRoleArn:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_runtimeRoleArn</a> - The
--   application instance's runtime role ARN.
--   
--   <a>$sel:healthStatus:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_healthStatus</a> - The
--   application instance's health status.
--   
--   <a>$sel:applicationInstanceId:DescribeApplicationInstance'</a>,
--   <a>describeApplicationInstanceResponse_applicationInstanceId</a> - The
--   application instance's ID.
--   
--   <a>$sel:description:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_description</a> - The
--   application instance's description.
--   
--   <a>$sel:tags:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_tags</a> - The application
--   instance's tags.
--   
--   
--   <a>$sel:applicationInstanceIdToReplace:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_applicationInstanceIdToReplace</a>
--   - The ID of the application instance that this instance replaced.
--   
--   <a>$sel:httpStatus:DescribeApplicationInstanceResponse'</a>,
--   <a>describeApplicationInstanceResponse_httpStatus</a> - The response's
--   http status code.
newDescribeApplicationInstanceResponse :: Int -> DescribeApplicationInstanceResponse

-- | <i>See:</i> <a>newRegisterPackageVersion</a> smart constructor.
data RegisterPackageVersion
RegisterPackageVersion' :: Maybe Bool -> Maybe Text -> Text -> Text -> Text -> RegisterPackageVersion

-- | Create a value of <a>RegisterPackageVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:markLatest:RegisterPackageVersion'</a>,
--   <a>registerPackageVersion_markLatest</a> - Whether to mark the new
--   version as the latest version.
--   
--   <a>$sel:ownerAccount:RegisterPackageVersion'</a>,
--   <a>registerPackageVersion_ownerAccount</a> - An owner account.
--   
--   <a>$sel:packageId:RegisterPackageVersion'</a>,
--   <a>registerPackageVersion_packageId</a> - A package ID.
--   
--   <a>$sel:packageVersion:RegisterPackageVersion'</a>,
--   <a>registerPackageVersion_packageVersion</a> - A package version.
--   
--   <a>$sel:patchVersion:RegisterPackageVersion'</a>,
--   <a>registerPackageVersion_patchVersion</a> - A patch version.
newRegisterPackageVersion :: Text -> Text -> Text -> RegisterPackageVersion

-- | <i>See:</i> <a>newRegisterPackageVersionResponse</a> smart
--   constructor.
data RegisterPackageVersionResponse
RegisterPackageVersionResponse' :: Int -> RegisterPackageVersionResponse

-- | Create a value of <a>RegisterPackageVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RegisterPackageVersionResponse'</a>,
--   <a>registerPackageVersionResponse_httpStatus</a> - The response's http
--   status code.
newRegisterPackageVersionResponse :: Int -> RegisterPackageVersionResponse

-- | <i>See:</i> <a>newDescribeNodeFromTemplateJob</a> smart constructor.
data DescribeNodeFromTemplateJob
DescribeNodeFromTemplateJob' :: Text -> DescribeNodeFromTemplateJob

-- | Create a value of <a>DescribeNodeFromTemplateJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribeNodeFromTemplateJob'</a>,
--   <a>describeNodeFromTemplateJob_jobId</a> - The job's ID.
newDescribeNodeFromTemplateJob :: Text -> DescribeNodeFromTemplateJob

-- | <i>See:</i> <a>newDescribeNodeFromTemplateJobResponse</a> smart
--   constructor.
data DescribeNodeFromTemplateJobResponse
DescribeNodeFromTemplateJobResponse' :: Maybe [JobResourceTags] -> Maybe Text -> Int -> Text -> NodeFromTemplateJobStatus -> Text -> POSIX -> POSIX -> Text -> Text -> Text -> TemplateType -> HashMap Text (Sensitive Text) -> DescribeNodeFromTemplateJobResponse

-- | Create a value of <a>DescribeNodeFromTemplateJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobTags:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_jobTags</a> - The job's tags.
--   
--   <a>$sel:nodeDescription:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_nodeDescription</a> - The
--   node's description.
--   
--   <a>$sel:httpStatus:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:jobId:DescribeNodeFromTemplateJob'</a>,
--   <a>describeNodeFromTemplateJobResponse_jobId</a> - The job's ID.
--   
--   <a>$sel:status:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_status</a> - The job's status.
--   
--   <a>$sel:statusMessage:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_statusMessage</a> - The job's
--   status message.
--   
--   <a>$sel:createdTime:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_createdTime</a> - When the job
--   was created.
--   
--   <a>$sel:lastUpdatedTime:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_lastUpdatedTime</a> - When the
--   job was updated.
--   
--   <a>$sel:outputPackageName:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_outputPackageName</a> - The
--   job's output package name.
--   
--   <a>$sel:outputPackageVersion:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_outputPackageVersion</a> - The
--   job's output package version.
--   
--   <a>$sel:nodeName:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_nodeName</a> - The node's name.
--   
--   <a>$sel:templateType:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_templateType</a> - The job's
--   template type.
--   
--   <a>$sel:templateParameters:DescribeNodeFromTemplateJobResponse'</a>,
--   <a>describeNodeFromTemplateJobResponse_templateParameters</a> - The
--   job's template parameters.
newDescribeNodeFromTemplateJobResponse :: Int -> Text -> NodeFromTemplateJobStatus -> Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> TemplateType -> DescribeNodeFromTemplateJobResponse

-- | <i>See:</i> <a>newCreatePackageImportJob</a> smart constructor.
data CreatePackageImportJob
CreatePackageImportJob' :: Maybe [JobResourceTags] -> PackageImportJobType -> PackageImportJobInputConfig -> PackageImportJobOutputConfig -> Text -> CreatePackageImportJob

-- | Create a value of <a>CreatePackageImportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobTags:CreatePackageImportJob'</a>,
--   <a>createPackageImportJob_jobTags</a> - Tags for the package import
--   job.
--   
--   <a>$sel:jobType:CreatePackageImportJob'</a>,
--   <a>createPackageImportJob_jobType</a> - A job type for the package
--   import job.
--   
--   <a>$sel:inputConfig:CreatePackageImportJob'</a>,
--   <a>createPackageImportJob_inputConfig</a> - An input config for the
--   package import job.
--   
--   <a>$sel:outputConfig:CreatePackageImportJob'</a>,
--   <a>createPackageImportJob_outputConfig</a> - An output config for the
--   package import job.
--   
--   <a>$sel:clientToken:CreatePackageImportJob'</a>,
--   <a>createPackageImportJob_clientToken</a> - A client token for the
--   package import job.
newCreatePackageImportJob :: PackageImportJobType -> PackageImportJobInputConfig -> PackageImportJobOutputConfig -> Text -> CreatePackageImportJob

-- | <i>See:</i> <a>newCreatePackageImportJobResponse</a> smart
--   constructor.
data CreatePackageImportJobResponse
CreatePackageImportJobResponse' :: Int -> Text -> CreatePackageImportJobResponse

-- | Create a value of <a>CreatePackageImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePackageImportJobResponse'</a>,
--   <a>createPackageImportJobResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:jobId:CreatePackageImportJobResponse'</a>,
--   <a>createPackageImportJobResponse_jobId</a> - The job's ID.
newCreatePackageImportJobResponse :: Int -> Text -> CreatePackageImportJobResponse

-- | <i>See:</i> <a>newDescribePackage</a> smart constructor.
data DescribePackage
DescribePackage' :: Text -> DescribePackage

-- | Create a value of <a>DescribePackage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageId:DescribePackage'</a>,
--   <a>describePackage_packageId</a> - The package's ID.
newDescribePackage :: Text -> DescribePackage

-- | <i>See:</i> <a>newDescribePackageResponse</a> smart constructor.
data DescribePackageResponse
DescribePackageResponse' :: Maybe [Text] -> Maybe [Text] -> Int -> Text -> Text -> Text -> StorageLocation -> POSIX -> HashMap Text Text -> DescribePackageResponse

-- | Create a value of <a>DescribePackageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:writeAccessPrincipalArns:DescribePackageResponse'</a>,
--   <a>describePackageResponse_writeAccessPrincipalArns</a> - ARNs of
--   accounts that have write access to the package.
--   
--   <a>$sel:readAccessPrincipalArns:DescribePackageResponse'</a>,
--   <a>describePackageResponse_readAccessPrincipalArns</a> - ARNs of
--   accounts that have read access to the package.
--   
--   <a>$sel:httpStatus:DescribePackageResponse'</a>,
--   <a>describePackageResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:packageId:DescribePackage'</a>,
--   <a>describePackageResponse_packageId</a> - The package's ID.
--   
--   <a>$sel:packageName:DescribePackageResponse'</a>,
--   <a>describePackageResponse_packageName</a> - The package's name.
--   
--   <a>$sel:arn:DescribePackageResponse'</a>,
--   <a>describePackageResponse_arn</a> - The package's ARN.
--   
--   <a>$sel:storageLocation:DescribePackageResponse'</a>,
--   <a>describePackageResponse_storageLocation</a> - The package's storage
--   location.
--   
--   <a>$sel:createdTime:DescribePackageResponse'</a>,
--   <a>describePackageResponse_createdTime</a> - When the package was
--   created.
--   
--   <a>$sel:tags:DescribePackageResponse'</a>,
--   <a>describePackageResponse_tags</a> - The package's tags.
newDescribePackageResponse :: Int -> Text -> Text -> Text -> StorageLocation -> UTCTime -> DescribePackageResponse

-- | <i>See:</i> <a>newListApplicationInstances</a> smart constructor.
data ListApplicationInstances
ListApplicationInstances' :: Maybe Text -> Maybe StatusFilter -> Maybe Text -> Maybe Natural -> ListApplicationInstances

-- | Create a value of <a>ListApplicationInstances</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationInstances'</a>,
--   <a>listApplicationInstances_nextToken</a> - Specify the pagination
--   token from a previous request to retrieve the next page of results.
--   
--   <a>$sel:statusFilter:ListApplicationInstances'</a>,
--   <a>listApplicationInstances_statusFilter</a> - Only include instances
--   with a specific status.
--   
--   <a>$sel:deviceId:ListApplicationInstances'</a>,
--   <a>listApplicationInstances_deviceId</a> - The application instances'
--   device ID.
--   
--   <a>$sel:maxResults:ListApplicationInstances'</a>,
--   <a>listApplicationInstances_maxResults</a> - The maximum number of
--   application instances to return in one page of results.
newListApplicationInstances :: ListApplicationInstances

-- | <i>See:</i> <a>newListApplicationInstancesResponse</a> smart
--   constructor.
data ListApplicationInstancesResponse
ListApplicationInstancesResponse' :: Maybe Text -> Maybe [ApplicationInstance] -> Int -> ListApplicationInstancesResponse

-- | Create a value of <a>ListApplicationInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationInstances'</a>,
--   <a>listApplicationInstancesResponse_nextToken</a> - A pagination token
--   that's included if more results are available.
--   
--   <a>$sel:applicationInstances:ListApplicationInstancesResponse'</a>,
--   <a>listApplicationInstancesResponse_applicationInstances</a> - A list
--   of application instances.
--   
--   <a>$sel:httpStatus:ListApplicationInstancesResponse'</a>,
--   <a>listApplicationInstancesResponse_httpStatus</a> - The response's
--   http status code.
newListApplicationInstancesResponse :: Int -> ListApplicationInstancesResponse

-- | <i>See:</i> <a>newDescribeDeviceJob</a> smart constructor.
data DescribeDeviceJob
DescribeDeviceJob' :: Text -> DescribeDeviceJob

-- | Create a value of <a>DescribeDeviceJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribeDeviceJob'</a>, <a>describeDeviceJob_jobId</a> -
--   The job's ID.
newDescribeDeviceJob :: Text -> DescribeDeviceJob

-- | <i>See:</i> <a>newDescribeDeviceJobResponse</a> smart constructor.
data DescribeDeviceJobResponse
DescribeDeviceJobResponse' :: Maybe UpdateProgress -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DeviceType -> Int -> DescribeDeviceJobResponse

-- | Create a value of <a>DescribeDeviceJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_status</a> - The job's status.
--   
--   <a>$sel:jobId:DescribeDeviceJob'</a>,
--   <a>describeDeviceJobResponse_jobId</a> - The job's ID.
--   
--   <a>$sel:createdTime:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_createdTime</a> - When the job was
--   created.
--   
--   <a>$sel:deviceArn:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_deviceArn</a> - The device's ARN.
--   
--   <a>$sel:imageVersion:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_imageVersion</a> - For an OTA job, the
--   target version of the device software.
--   
--   <a>$sel:deviceName:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_deviceName</a> - The device's name.
--   
--   <a>$sel:deviceId:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_deviceId</a> - The device's ID.
--   
--   <a>$sel:deviceType:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_deviceType</a> - The device's type.
--   
--   <a>$sel:httpStatus:DescribeDeviceJobResponse'</a>,
--   <a>describeDeviceJobResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDeviceJobResponse :: Int -> DescribeDeviceJobResponse

-- | <i>See:</i> <a>newDescribePackageImportJob</a> smart constructor.
data DescribePackageImportJob
DescribePackageImportJob' :: Text -> DescribePackageImportJob

-- | Create a value of <a>DescribePackageImportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribePackageImportJob'</a>,
--   <a>describePackageImportJob_jobId</a> - The job's ID.
newDescribePackageImportJob :: Text -> DescribePackageImportJob

-- | <i>See:</i> <a>newDescribePackageImportJobResponse</a> smart
--   constructor.
data DescribePackageImportJobResponse
DescribePackageImportJobResponse' :: Maybe Text -> Maybe [JobResourceTags] -> Int -> Text -> PackageImportJobType -> PackageImportJobInputConfig -> PackageImportJobOutputConfig -> PackageImportJobOutput -> POSIX -> POSIX -> PackageImportJobStatus -> Text -> DescribePackageImportJobResponse

-- | Create a value of <a>DescribePackageImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_clientToken</a> - The job's client
--   token.
--   
--   <a>$sel:jobTags:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_jobTags</a> - The job's tags.
--   
--   <a>$sel:httpStatus:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:jobId:DescribePackageImportJob'</a>,
--   <a>describePackageImportJobResponse_jobId</a> - The job's ID.
--   
--   <a>$sel:jobType:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_jobType</a> - The job's type.
--   
--   <a>$sel:inputConfig:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_inputConfig</a> - The job's input
--   config.
--   
--   <a>$sel:outputConfig:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_outputConfig</a> - The job's
--   output config.
--   
--   <a>$sel:output:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_output</a> - The job's output.
--   
--   <a>$sel:createdTime:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_createdTime</a> - When the job was
--   created.
--   
--   <a>$sel:lastUpdatedTime:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_lastUpdatedTime</a> - When the job
--   was updated.
--   
--   <a>$sel:status:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_status</a> - The job's status.
--   
--   <a>$sel:statusMessage:DescribePackageImportJobResponse'</a>,
--   <a>describePackageImportJobResponse_statusMessage</a> - The job's
--   status message.
newDescribePackageImportJobResponse :: Int -> Text -> PackageImportJobType -> PackageImportJobInputConfig -> PackageImportJobOutputConfig -> PackageImportJobOutput -> UTCTime -> UTCTime -> PackageImportJobStatus -> Text -> DescribePackageImportJobResponse

-- | <i>See:</i> <a>newDescribeDevice</a> smart constructor.
data DescribeDevice
DescribeDevice' :: Text -> DescribeDevice

-- | Create a value of <a>DescribeDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DescribeDevice'</a>, <a>describeDevice_deviceId</a> -
--   The device's ID.
newDescribeDevice :: Text -> DescribeDevice

-- | <i>See:</i> <a>newDescribeDeviceResponse</a> smart constructor.
data DescribeDeviceResponse
DescribeDeviceResponse' :: Maybe Text -> Maybe DeviceStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe DeviceConnectionStatus -> Maybe Text -> Maybe DeviceType -> Maybe POSIX -> Maybe Text -> Maybe NetworkStatus -> Maybe Text -> Maybe NetworkPayload -> Maybe (HashMap Text Text) -> Int -> DescribeDeviceResponse

-- | Create a value of <a>DescribeDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:latestSoftware:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_latestSoftware</a> - The latest software
--   version available for the device.
--   
--   <a>$sel:provisioningStatus:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_provisioningStatus</a> - The device's
--   provisioning status.
--   
--   <a>$sel:arn:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_arn</a> - The device's ARN.
--   
--   <a>$sel:createdTime:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_createdTime</a> - When the device was
--   created.
--   
--   <a>$sel:currentSoftware:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_currentSoftware</a> - The device's current
--   software version.
--   
--   <a>$sel:name:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_name</a> - The device's name.
--   
--   <a>$sel:deviceConnectionStatus:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_deviceConnectionStatus</a> - The device's
--   connection status.
--   
--   <a>$sel:deviceId:DescribeDevice'</a>,
--   <a>describeDeviceResponse_deviceId</a> - The device's ID.
--   
--   <a>$sel:type':DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_type</a> - The device's type.
--   
--   <a>$sel:leaseExpirationTime:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_leaseExpirationTime</a> - The device's lease
--   expiration time.
--   
--   <a>$sel:serialNumber:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_serialNumber</a> - The device's serial
--   number.
--   
--   <a>$sel:currentNetworkingStatus:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_currentNetworkingStatus</a> - The device's
--   networking status.
--   
--   <a>$sel:description:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_description</a> - The device's description.
--   
--   <a>$sel:networkingConfiguration:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_networkingConfiguration</a> - The device's
--   networking configuration.
--   
--   <a>$sel:tags:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_tags</a> - The device's tags.
--   
--   <a>$sel:httpStatus:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDeviceResponse :: Int -> DescribeDeviceResponse

-- | <i>See:</i> <a>newDescribePackageVersion</a> smart constructor.
data DescribePackageVersion
DescribePackageVersion' :: Maybe Text -> Maybe Text -> Text -> Text -> DescribePackageVersion

-- | Create a value of <a>DescribePackageVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchVersion:DescribePackageVersion'</a>,
--   <a>describePackageVersion_patchVersion</a> - The version's patch
--   version.
--   
--   <a>$sel:ownerAccount:DescribePackageVersion'</a>,
--   <a>describePackageVersion_ownerAccount</a> - The version's owner
--   account.
--   
--   <a>$sel:packageId:DescribePackageVersion'</a>,
--   <a>describePackageVersion_packageId</a> - The version's ID.
--   
--   <a>$sel:packageVersion:DescribePackageVersion'</a>,
--   <a>describePackageVersion_packageVersion</a> - The version's version.
newDescribePackageVersion :: Text -> Text -> DescribePackageVersion

-- | <i>See:</i> <a>newDescribePackageVersionResponse</a> smart
--   constructor.
data DescribePackageVersionResponse
DescribePackageVersionResponse' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> Text -> Text -> Text -> Text -> Bool -> PackageVersionStatus -> DescribePackageVersionResponse

-- | Create a value of <a>DescribePackageVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusDescription:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_statusDescription</a> - The
--   version's status description.
--   
--   <a>$sel:packageArn:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_packageArn</a> - The ARN of the
--   package.
--   
--   <a>$sel:registeredTime:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_registeredTime</a> - The version's
--   registered time.
--   
--   <a>$sel:ownerAccount:DescribePackageVersion'</a>,
--   <a>describePackageVersionResponse_ownerAccount</a> - The account ID of
--   the version's owner.
--   
--   <a>$sel:httpStatus:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:packageId:DescribePackageVersion'</a>,
--   <a>describePackageVersionResponse_packageId</a> - The version's ID.
--   
--   <a>$sel:packageName:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_packageName</a> - The version's
--   name.
--   
--   <a>$sel:packageVersion:DescribePackageVersion'</a>,
--   <a>describePackageVersionResponse_packageVersion</a> - The version's
--   version.
--   
--   <a>$sel:patchVersion:DescribePackageVersion'</a>,
--   <a>describePackageVersionResponse_patchVersion</a> - The version's
--   patch version.
--   
--   <a>$sel:isLatestPatch:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_isLatestPatch</a> - Whether the
--   version is the latest available.
--   
--   <a>$sel:status:DescribePackageVersionResponse'</a>,
--   <a>describePackageVersionResponse_status</a> - The version's status.
newDescribePackageVersionResponse :: Int -> Text -> Text -> Text -> Text -> Bool -> PackageVersionStatus -> DescribePackageVersionResponse

-- | <i>See:</i> <a>newDescribeNode</a> smart constructor.
data DescribeNode
DescribeNode' :: Maybe Text -> Text -> DescribeNode

-- | Create a value of <a>DescribeNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerAccount:DescribeNode'</a>,
--   <a>describeNode_ownerAccount</a> - The account ID of the node's owner.
--   
--   <a>$sel:nodeId:DescribeNode'</a>, <a>describeNode_nodeId</a> - The
--   node's ID.
newDescribeNode :: Text -> DescribeNode

-- | <i>See:</i> <a>newDescribeNodeResponse</a> smart constructor.
data DescribeNodeResponse
DescribeNodeResponse' :: Maybe Text -> Maybe Text -> Int -> Text -> Text -> NodeCategory -> Text -> Text -> Text -> Text -> Text -> NodeInterface -> Text -> POSIX -> POSIX -> DescribeNodeResponse

-- | Create a value of <a>DescribeNodeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assetName:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_assetName</a> - The node's asset name.
--   
--   <a>$sel:packageArn:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_packageArn</a> - The node's ARN.
--   
--   <a>$sel:httpStatus:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:nodeId:DescribeNode'</a>, <a>describeNodeResponse_nodeId</a> -
--   The node's ID.
--   
--   <a>$sel:name:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_name</a> - The node's name.
--   
--   <a>$sel:category:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_category</a> - The node's category.
--   
--   <a>$sel:ownerAccount:DescribeNode'</a>,
--   <a>describeNodeResponse_ownerAccount</a> - The account ID of the
--   node's owner.
--   
--   <a>$sel:packageName:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_packageName</a> - The node's package name.
--   
--   <a>$sel:packageId:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_packageId</a> - The node's package ID.
--   
--   <a>$sel:packageVersion:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_packageVersion</a> - The node's package
--   version.
--   
--   <a>$sel:patchVersion:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_patchVersion</a> - The node's patch version.
--   
--   <a>$sel:nodeInterface:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_nodeInterface</a> - The node's interface.
--   
--   <a>$sel:description:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_description</a> - The node's description.
--   
--   <a>$sel:createdTime:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_createdTime</a> - When the node was created.
--   
--   <a>$sel:lastUpdatedTime:DescribeNodeResponse'</a>,
--   <a>describeNodeResponse_lastUpdatedTime</a> - When the node was
--   updated.
newDescribeNodeResponse :: Int -> Text -> Text -> NodeCategory -> Text -> Text -> Text -> Text -> Text -> NodeInterface -> Text -> UTCTime -> UTCTime -> DescribeNodeResponse

-- | <i>See:</i> <a>newListNodeFromTemplateJobs</a> smart constructor.
data ListNodeFromTemplateJobs
ListNodeFromTemplateJobs' :: Maybe Text -> Maybe Natural -> ListNodeFromTemplateJobs

-- | Create a value of <a>ListNodeFromTemplateJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNodeFromTemplateJobs'</a>,
--   <a>listNodeFromTemplateJobs_nextToken</a> - Specify the pagination
--   token from a previous request to retrieve the next page of results.
--   
--   <a>$sel:maxResults:ListNodeFromTemplateJobs'</a>,
--   <a>listNodeFromTemplateJobs_maxResults</a> - The maximum number of
--   node from template jobs to return in one page of results.
newListNodeFromTemplateJobs :: ListNodeFromTemplateJobs

-- | <i>See:</i> <a>newListNodeFromTemplateJobsResponse</a> smart
--   constructor.
data ListNodeFromTemplateJobsResponse
ListNodeFromTemplateJobsResponse' :: Maybe Text -> Int -> [NodeFromTemplateJob] -> ListNodeFromTemplateJobsResponse

-- | Create a value of <a>ListNodeFromTemplateJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNodeFromTemplateJobs'</a>,
--   <a>listNodeFromTemplateJobsResponse_nextToken</a> - A pagination token
--   that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListNodeFromTemplateJobsResponse'</a>,
--   <a>listNodeFromTemplateJobsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:nodeFromTemplateJobs:ListNodeFromTemplateJobsResponse'</a>,
--   <a>listNodeFromTemplateJobsResponse_nodeFromTemplateJobs</a> - A list
--   of jobs.
newListNodeFromTemplateJobsResponse :: Int -> ListNodeFromTemplateJobsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The resource's ARN.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Tags for the
--   resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newListApplicationInstanceDependencies</a> smart
--   constructor.
data ListApplicationInstanceDependencies
ListApplicationInstanceDependencies' :: Maybe Text -> Maybe Natural -> Text -> ListApplicationInstanceDependencies

-- | Create a value of <a>ListApplicationInstanceDependencies</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationInstanceDependencies'</a>,
--   <a>listApplicationInstanceDependencies_nextToken</a> - Specify the
--   pagination token from a previous request to retrieve the next page of
--   results.
--   
--   <a>$sel:maxResults:ListApplicationInstanceDependencies'</a>,
--   <a>listApplicationInstanceDependencies_maxResults</a> - The maximum
--   number of application instance dependencies to return in one page of
--   results.
--   
--   
--   <a>$sel:applicationInstanceId:ListApplicationInstanceDependencies'</a>,
--   <a>listApplicationInstanceDependencies_applicationInstanceId</a> - The
--   application instance's ID.
newListApplicationInstanceDependencies :: Text -> ListApplicationInstanceDependencies

-- | <i>See:</i> <a>newListApplicationInstanceDependenciesResponse</a>
--   smart constructor.
data ListApplicationInstanceDependenciesResponse
ListApplicationInstanceDependenciesResponse' :: Maybe [PackageObject] -> Maybe Text -> Int -> ListApplicationInstanceDependenciesResponse

-- | Create a value of <a>ListApplicationInstanceDependenciesResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:packageObjects:ListApplicationInstanceDependenciesResponse'</a>,
--   <a>listApplicationInstanceDependenciesResponse_packageObjects</a> - A
--   list of package objects.
--   
--   <a>$sel:nextToken:ListApplicationInstanceDependencies'</a>,
--   <a>listApplicationInstanceDependenciesResponse_nextToken</a> - A
--   pagination token that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListApplicationInstanceDependenciesResponse'</a>,
--   <a>listApplicationInstanceDependenciesResponse_httpStatus</a> - The
--   response's http status code.
newListApplicationInstanceDependenciesResponse :: Int -> ListApplicationInstanceDependenciesResponse

-- | <i>See:</i> <a>newListApplicationInstanceNodeInstances</a> smart
--   constructor.
data ListApplicationInstanceNodeInstances
ListApplicationInstanceNodeInstances' :: Maybe Text -> Maybe Natural -> Text -> ListApplicationInstanceNodeInstances

-- | Create a value of <a>ListApplicationInstanceNodeInstances</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationInstanceNodeInstances'</a>,
--   <a>listApplicationInstanceNodeInstances_nextToken</a> - Specify the
--   pagination token from a previous request to retrieve the next page of
--   results.
--   
--   <a>$sel:maxResults:ListApplicationInstanceNodeInstances'</a>,
--   <a>listApplicationInstanceNodeInstances_maxResults</a> - The maximum
--   number of node instances to return in one page of results.
--   
--   
--   <a>$sel:applicationInstanceId:ListApplicationInstanceNodeInstances'</a>,
--   <a>listApplicationInstanceNodeInstances_applicationInstanceId</a> -
--   The node instances' application instance ID.
newListApplicationInstanceNodeInstances :: Text -> ListApplicationInstanceNodeInstances

-- | <i>See:</i> <a>newListApplicationInstanceNodeInstancesResponse</a>
--   smart constructor.
data ListApplicationInstanceNodeInstancesResponse
ListApplicationInstanceNodeInstancesResponse' :: Maybe Text -> Maybe [NodeInstance] -> Int -> ListApplicationInstanceNodeInstancesResponse

-- | Create a value of <a>ListApplicationInstanceNodeInstancesResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationInstanceNodeInstances'</a>,
--   <a>listApplicationInstanceNodeInstancesResponse_nextToken</a> - A
--   pagination token that's included if more results are available.
--   
--   
--   <a>$sel:nodeInstances:ListApplicationInstanceNodeInstancesResponse'</a>,
--   <a>listApplicationInstanceNodeInstancesResponse_nodeInstances</a> - A
--   list of node instances.
--   
--   <a>$sel:httpStatus:ListApplicationInstanceNodeInstancesResponse'</a>,
--   <a>listApplicationInstanceNodeInstancesResponse_httpStatus</a> - The
--   response's http status code.
newListApplicationInstanceNodeInstancesResponse :: Int -> ListApplicationInstanceNodeInstancesResponse

-- | <i>See:</i> <a>newCreateJobForDevices</a> smart constructor.
data CreateJobForDevices
CreateJobForDevices' :: NonEmpty Text -> DeviceJobConfig -> JobType -> CreateJobForDevices

-- | Create a value of <a>CreateJobForDevices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceIds:CreateJobForDevices'</a>,
--   <a>createJobForDevices_deviceIds</a> - IDs of target devices.
--   
--   <a>$sel:deviceJobConfig:CreateJobForDevices'</a>,
--   <a>createJobForDevices_deviceJobConfig</a> - Configuration settings
--   for the job.
--   
--   <a>$sel:jobType:CreateJobForDevices'</a>,
--   <a>createJobForDevices_jobType</a> - The type of job to run.
newCreateJobForDevices :: NonEmpty Text -> DeviceJobConfig -> JobType -> CreateJobForDevices

-- | <i>See:</i> <a>newCreateJobForDevicesResponse</a> smart constructor.
data CreateJobForDevicesResponse
CreateJobForDevicesResponse' :: Int -> [Job] -> CreateJobForDevicesResponse

-- | Create a value of <a>CreateJobForDevicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateJobForDevicesResponse'</a>,
--   <a>createJobForDevicesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:jobs:CreateJobForDevicesResponse'</a>,
--   <a>createJobForDevicesResponse_jobs</a> - A list of jobs.
newCreateJobForDevicesResponse :: Int -> CreateJobForDevicesResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The resource's ARN.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - Tag
--   keys to remove.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newDeletePackage</a> smart constructor.
data DeletePackage
DeletePackage' :: Maybe Bool -> Text -> DeletePackage

-- | Create a value of <a>DeletePackage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forceDelete:DeletePackage'</a>,
--   <a>deletePackage_forceDelete</a> - Delete the package even if it has
--   artifacts stored in its access point. Deletes the package's artifacts
--   from Amazon S3.
--   
--   <a>$sel:packageId:DeletePackage'</a>, <a>deletePackage_packageId</a> -
--   The package's ID.
newDeletePackage :: Text -> DeletePackage

-- | <i>See:</i> <a>newDeletePackageResponse</a> smart constructor.
data DeletePackageResponse
DeletePackageResponse' :: Int -> DeletePackageResponse

-- | Create a value of <a>DeletePackageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePackageResponse'</a>,
--   <a>deletePackageResponse_httpStatus</a> - The response's http status
--   code.
newDeletePackageResponse :: Int -> DeletePackageResponse

-- | <i>See:</i> <a>newCreatePackage</a> smart constructor.
data CreatePackage
CreatePackage' :: Maybe (HashMap Text Text) -> Text -> CreatePackage

-- | Create a value of <a>CreatePackage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreatePackage'</a>, <a>createPackage_tags</a> - Tags for
--   the package.
--   
--   <a>$sel:packageName:CreatePackage'</a>,
--   <a>createPackage_packageName</a> - A name for the package.
newCreatePackage :: Text -> CreatePackage

-- | <i>See:</i> <a>newCreatePackageResponse</a> smart constructor.
data CreatePackageResponse
CreatePackageResponse' :: Maybe Text -> Maybe Text -> Int -> StorageLocation -> CreatePackageResponse

-- | Create a value of <a>CreatePackageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageId:CreatePackageResponse'</a>,
--   <a>createPackageResponse_packageId</a> - The package's ID.
--   
--   <a>$sel:arn:CreatePackageResponse'</a>,
--   <a>createPackageResponse_arn</a> - The package's ARN.
--   
--   <a>$sel:httpStatus:CreatePackageResponse'</a>,
--   <a>createPackageResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:storageLocation:CreatePackageResponse'</a>,
--   <a>createPackageResponse_storageLocation</a> - The package's storage
--   location.
newCreatePackageResponse :: Int -> StorageLocation -> CreatePackageResponse

-- | <i>See:</i> <a>newProvisionDevice</a> smart constructor.
data ProvisionDevice
ProvisionDevice' :: Maybe Text -> Maybe NetworkPayload -> Maybe (HashMap Text Text) -> Text -> ProvisionDevice

-- | Create a value of <a>ProvisionDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:ProvisionDevice'</a>,
--   <a>provisionDevice_description</a> - A description for the device.
--   
--   <a>$sel:networkingConfiguration:ProvisionDevice'</a>,
--   <a>provisionDevice_networkingConfiguration</a> - A networking
--   configuration for the device.
--   
--   <a>$sel:tags:ProvisionDevice'</a>, <a>provisionDevice_tags</a> - Tags
--   for the device.
--   
--   <a>$sel:name:ProvisionDevice'</a>, <a>provisionDevice_name</a> - A
--   name for the device.
newProvisionDevice :: Text -> ProvisionDevice

-- | <i>See:</i> <a>newProvisionDeviceResponse</a> smart constructor.
data ProvisionDeviceResponse
ProvisionDeviceResponse' :: Maybe Base64 -> Maybe Text -> Maybe Text -> Int -> Text -> DeviceStatus -> ProvisionDeviceResponse

-- | Create a value of <a>ProvisionDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificates:ProvisionDeviceResponse'</a>,
--   <a>provisionDeviceResponse_certificates</a> - The device's
--   configuration bundle.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:deviceId:ProvisionDeviceResponse'</a>,
--   <a>provisionDeviceResponse_deviceId</a> - The device's ID.
--   
--   <a>$sel:iotThingName:ProvisionDeviceResponse'</a>,
--   <a>provisionDeviceResponse_iotThingName</a> - The device's IoT thing
--   name.
--   
--   <a>$sel:httpStatus:ProvisionDeviceResponse'</a>,
--   <a>provisionDeviceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:arn:ProvisionDeviceResponse'</a>,
--   <a>provisionDeviceResponse_arn</a> - The device's ARN.
--   
--   <a>$sel:status:ProvisionDeviceResponse'</a>,
--   <a>provisionDeviceResponse_status</a> - The device's status.
newProvisionDeviceResponse :: Int -> Text -> DeviceStatus -> ProvisionDeviceResponse

-- | <i>See:</i> <a>newDeleteDevice</a> smart constructor.
data DeleteDevice
DeleteDevice' :: Text -> DeleteDevice

-- | Create a value of <a>DeleteDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DeleteDevice'</a>, <a>deleteDevice_deviceId</a> - The
--   device's ID.
newDeleteDevice :: Text -> DeleteDevice

-- | <i>See:</i> <a>newDeleteDeviceResponse</a> smart constructor.
data DeleteDeviceResponse
DeleteDeviceResponse' :: Maybe Text -> Int -> DeleteDeviceResponse

-- | Create a value of <a>DeleteDeviceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DeleteDevice'</a>,
--   <a>deleteDeviceResponse_deviceId</a> - The device's ID.
--   
--   <a>$sel:httpStatus:DeleteDeviceResponse'</a>,
--   <a>deleteDeviceResponse_httpStatus</a> - The response's http status
--   code.
newDeleteDeviceResponse :: Int -> DeleteDeviceResponse

-- | <i>See:</i> <a>newListNodes</a> smart constructor.
data ListNodes
ListNodes' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe NodeCategory -> Maybe Text -> Maybe Text -> Maybe Natural -> ListNodes

-- | Create a value of <a>ListNodes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchVersion:ListNodes'</a>, <a>listNodes_patchVersion</a> -
--   Search for nodes by patch version.
--   
--   <a>$sel:packageName:ListNodes'</a>, <a>listNodes_packageName</a> -
--   Search for nodes by name.
--   
--   <a>$sel:packageVersion:ListNodes'</a>, <a>listNodes_packageVersion</a>
--   - Search for nodes by version.
--   
--   <a>$sel:category:ListNodes'</a>, <a>listNodes_category</a> - Search
--   for nodes by category.
--   
--   <a>$sel:nextToken:ListNodes'</a>, <a>listNodes_nextToken</a> - Specify
--   the pagination token from a previous request to retrieve the next page
--   of results.
--   
--   <a>$sel:ownerAccount:ListNodes'</a>, <a>listNodes_ownerAccount</a> -
--   Search for nodes by the account ID of the nodes' owner.
--   
--   <a>$sel:maxResults:ListNodes'</a>, <a>listNodes_maxResults</a> - The
--   maximum number of nodes to return in one page of results.
newListNodes :: ListNodes

-- | <i>See:</i> <a>newListNodesResponse</a> smart constructor.
data ListNodesResponse
ListNodesResponse' :: Maybe Text -> Maybe [Node] -> Int -> ListNodesResponse

-- | Create a value of <a>ListNodesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNodes'</a>, <a>listNodesResponse_nextToken</a> -
--   A pagination token that's included if more results are available.
--   
--   <a>$sel:nodes:ListNodesResponse'</a>, <a>listNodesResponse_nodes</a> -
--   A list of nodes.
--   
--   <a>$sel:httpStatus:ListNodesResponse'</a>,
--   <a>listNodesResponse_httpStatus</a> - The response's http status code.
newListNodesResponse :: Int -> ListNodesResponse

-- | <i>See:</i> <a>newListDevices</a> smart constructor.
data ListDevices
ListDevices' :: Maybe Text -> Maybe Natural -> ListDevices

-- | Create a value of <a>ListDevices</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>, <a>listDevices_nextToken</a> -
--   Specify the pagination token from a previous request to retrieve the
--   next page of results.
--   
--   <a>$sel:maxResults:ListDevices'</a>, <a>listDevices_maxResults</a> -
--   The maximum number of devices to return in one page of results.
newListDevices :: ListDevices

-- | <i>See:</i> <a>newListDevicesResponse</a> smart constructor.
data ListDevicesResponse
ListDevicesResponse' :: Maybe Text -> Int -> [Device] -> ListDevicesResponse

-- | Create a value of <a>ListDevicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>,
--   <a>listDevicesResponse_nextToken</a> - A pagination token that's
--   included if more results are available.
--   
--   <a>$sel:httpStatus:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:devices:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_devices</a> - A list of devices.
newListDevicesResponse :: Int -> ListDevicesResponse

-- | <i>See:</i> <a>newListPackageImportJobs</a> smart constructor.
data ListPackageImportJobs
ListPackageImportJobs' :: Maybe Text -> Maybe Natural -> ListPackageImportJobs

-- | Create a value of <a>ListPackageImportJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPackageImportJobs'</a>,
--   <a>listPackageImportJobs_nextToken</a> - Specify the pagination token
--   from a previous request to retrieve the next page of results.
--   
--   <a>$sel:maxResults:ListPackageImportJobs'</a>,
--   <a>listPackageImportJobs_maxResults</a> - The maximum number of
--   package import jobs to return in one page of results.
newListPackageImportJobs :: ListPackageImportJobs

-- | <i>See:</i> <a>newListPackageImportJobsResponse</a> smart constructor.
data ListPackageImportJobsResponse
ListPackageImportJobsResponse' :: Maybe Text -> Int -> [PackageImportJob] -> ListPackageImportJobsResponse

-- | Create a value of <a>ListPackageImportJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPackageImportJobs'</a>,
--   <a>listPackageImportJobsResponse_nextToken</a> - A pagination token
--   that's included if more results are available.
--   
--   <a>$sel:httpStatus:ListPackageImportJobsResponse'</a>,
--   <a>listPackageImportJobsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:packageImportJobs:ListPackageImportJobsResponse'</a>,
--   <a>listPackageImportJobsResponse_packageImportJobs</a> - A list of
--   package import jobs.
newListPackageImportJobsResponse :: Int -> ListPackageImportJobsResponse
newtype ApplicationInstanceHealthStatus
ApplicationInstanceHealthStatus' :: Text -> ApplicationInstanceHealthStatus
[fromApplicationInstanceHealthStatus] :: ApplicationInstanceHealthStatus -> Text
pattern ApplicationInstanceHealthStatus_ERROR :: ApplicationInstanceHealthStatus
pattern ApplicationInstanceHealthStatus_NOT_AVAILABLE :: ApplicationInstanceHealthStatus
pattern ApplicationInstanceHealthStatus_RUNNING :: ApplicationInstanceHealthStatus
newtype ApplicationInstanceStatus
ApplicationInstanceStatus' :: Text -> ApplicationInstanceStatus
[fromApplicationInstanceStatus] :: ApplicationInstanceStatus -> Text
pattern ApplicationInstanceStatus_DEPLOYMENT_ERROR :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_DEPLOYMENT_IN_PROGRESS :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_DEPLOYMENT_PENDING :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_DEPLOYMENT_REQUESTED :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_DEPLOYMENT_SUCCEEDED :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_FAILED :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_IN_PROGRESS :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_PENDING :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_REQUESTED :: ApplicationInstanceStatus
pattern ApplicationInstanceStatus_REMOVAL_SUCCEEDED :: ApplicationInstanceStatus
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_DHCP :: ConnectionType
pattern ConnectionType_STATIC_IP :: ConnectionType
newtype DeviceConnectionStatus
DeviceConnectionStatus' :: Text -> DeviceConnectionStatus
[fromDeviceConnectionStatus] :: DeviceConnectionStatus -> Text
pattern DeviceConnectionStatus_AWAITING_CREDENTIALS :: DeviceConnectionStatus
pattern DeviceConnectionStatus_ERROR :: DeviceConnectionStatus
pattern DeviceConnectionStatus_NOT_AVAILABLE :: DeviceConnectionStatus
pattern DeviceConnectionStatus_OFFLINE :: DeviceConnectionStatus
pattern DeviceConnectionStatus_ONLINE :: DeviceConnectionStatus
newtype DeviceStatus
DeviceStatus' :: Text -> DeviceStatus
[fromDeviceStatus] :: DeviceStatus -> Text
pattern DeviceStatus_AWAITING_PROVISIONING :: DeviceStatus
pattern DeviceStatus_DELETING :: DeviceStatus
pattern DeviceStatus_ERROR :: DeviceStatus
pattern DeviceStatus_FAILED :: DeviceStatus
pattern DeviceStatus_PENDING :: DeviceStatus
pattern DeviceStatus_SUCCEEDED :: DeviceStatus
newtype DeviceType
DeviceType' :: Text -> DeviceType
[fromDeviceType] :: DeviceType -> Text
pattern DeviceType_PANORAMA_APPLIANCE :: DeviceType
pattern DeviceType_PANORAMA_APPLIANCE_DEVELOPER_KIT :: DeviceType
newtype JobResourceType
JobResourceType' :: Text -> JobResourceType
[fromJobResourceType] :: JobResourceType -> Text
pattern JobResourceType_PACKAGE :: JobResourceType
newtype JobType
JobType' :: Text -> JobType
[fromJobType] :: JobType -> Text
pattern JobType_OTA :: JobType
newtype NetworkConnectionStatus
NetworkConnectionStatus' :: Text -> NetworkConnectionStatus
[fromNetworkConnectionStatus] :: NetworkConnectionStatus -> Text
pattern NetworkConnectionStatus_CONNECTED :: NetworkConnectionStatus
pattern NetworkConnectionStatus_NOT_CONNECTED :: NetworkConnectionStatus
newtype NodeCategory
NodeCategory' :: Text -> NodeCategory
[fromNodeCategory] :: NodeCategory -> Text
pattern NodeCategory_BUSINESS_LOGIC :: NodeCategory
pattern NodeCategory_MEDIA_SINK :: NodeCategory
pattern NodeCategory_MEDIA_SOURCE :: NodeCategory
pattern NodeCategory_ML_MODEL :: NodeCategory
newtype NodeFromTemplateJobStatus
NodeFromTemplateJobStatus' :: Text -> NodeFromTemplateJobStatus
[fromNodeFromTemplateJobStatus] :: NodeFromTemplateJobStatus -> Text
pattern NodeFromTemplateJobStatus_FAILED :: NodeFromTemplateJobStatus
pattern NodeFromTemplateJobStatus_PENDING :: NodeFromTemplateJobStatus
pattern NodeFromTemplateJobStatus_SUCCEEDED :: NodeFromTemplateJobStatus
newtype NodeInstanceStatus
NodeInstanceStatus' :: Text -> NodeInstanceStatus
[fromNodeInstanceStatus] :: NodeInstanceStatus -> Text
pattern NodeInstanceStatus_ERROR :: NodeInstanceStatus
pattern NodeInstanceStatus_NOT_AVAILABLE :: NodeInstanceStatus
pattern NodeInstanceStatus_RUNNING :: NodeInstanceStatus
newtype PackageImportJobStatus
PackageImportJobStatus' :: Text -> PackageImportJobStatus
[fromPackageImportJobStatus] :: PackageImportJobStatus -> Text
pattern PackageImportJobStatus_FAILED :: PackageImportJobStatus
pattern PackageImportJobStatus_PENDING :: PackageImportJobStatus
pattern PackageImportJobStatus_SUCCEEDED :: PackageImportJobStatus
newtype PackageImportJobType
PackageImportJobType' :: Text -> PackageImportJobType
[fromPackageImportJobType] :: PackageImportJobType -> Text
pattern PackageImportJobType_NODE_PACKAGE_VERSION :: PackageImportJobType
newtype PackageVersionStatus
PackageVersionStatus' :: Text -> PackageVersionStatus
[fromPackageVersionStatus] :: PackageVersionStatus -> Text
pattern PackageVersionStatus_DELETING :: PackageVersionStatus
pattern PackageVersionStatus_FAILED :: PackageVersionStatus
pattern PackageVersionStatus_REGISTER_COMPLETED :: PackageVersionStatus
pattern PackageVersionStatus_REGISTER_PENDING :: PackageVersionStatus
newtype PortType
PortType' :: Text -> PortType
[fromPortType] :: PortType -> Text
pattern PortType_BOOLEAN :: PortType
pattern PortType_FLOAT32 :: PortType
pattern PortType_INT32 :: PortType
pattern PortType_MEDIA :: PortType
pattern PortType_STRING :: PortType
newtype StatusFilter
StatusFilter' :: Text -> StatusFilter
[fromStatusFilter] :: StatusFilter -> Text
pattern StatusFilter_DEPLOYMENT_ERROR :: StatusFilter
pattern StatusFilter_DEPLOYMENT_SUCCEEDED :: StatusFilter
pattern StatusFilter_PROCESSING_DEPLOYMENT :: StatusFilter
pattern StatusFilter_PROCESSING_REMOVAL :: StatusFilter
pattern StatusFilter_REMOVAL_FAILED :: StatusFilter
pattern StatusFilter_REMOVAL_SUCCEEDED :: StatusFilter
newtype TemplateType
TemplateType' :: Text -> TemplateType
[fromTemplateType] :: TemplateType -> Text
pattern TemplateType_RTSP_CAMERA_STREAM :: TemplateType
newtype UpdateProgress
UpdateProgress' :: Text -> UpdateProgress
[fromUpdateProgress] :: UpdateProgress -> Text
pattern UpdateProgress_COMPLETED :: UpdateProgress
pattern UpdateProgress_DOWNLOADING :: UpdateProgress
pattern UpdateProgress_FAILED :: UpdateProgress
pattern UpdateProgress_IN_PROGRESS :: UpdateProgress
pattern UpdateProgress_PENDING :: UpdateProgress
pattern UpdateProgress_REBOOTING :: UpdateProgress
pattern UpdateProgress_VERIFYING :: UpdateProgress

-- | An application instance on a device.
--   
--   <i>See:</i> <a>newApplicationInstance</a> smart constructor.
data ApplicationInstance
ApplicationInstance' :: Maybe ApplicationInstanceStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ApplicationInstanceHealthStatus -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ApplicationInstance

-- | Create a value of <a>ApplicationInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ApplicationInstance'</a>,
--   <a>applicationInstance_status</a> - The application instance's status.
--   
--   <a>$sel:statusDescription:ApplicationInstance'</a>,
--   <a>applicationInstance_statusDescription</a> - The application
--   instance's status description.
--   
--   <a>$sel:arn:ApplicationInstance'</a>, <a>applicationInstance_arn</a> -
--   The application instance's ARN.
--   
--   <a>$sel:createdTime:ApplicationInstance'</a>,
--   <a>applicationInstance_createdTime</a> - When the application instance
--   was created.
--   
--   <a>$sel:defaultRuntimeContextDevice:ApplicationInstance'</a>,
--   <a>applicationInstance_defaultRuntimeContextDevice</a> - The device's
--   ID.
--   
--   <a>$sel:defaultRuntimeContextDeviceName:ApplicationInstance'</a>,
--   <a>applicationInstance_defaultRuntimeContextDeviceName</a> - The
--   device's name.
--   
--   <a>$sel:name:ApplicationInstance'</a>, <a>applicationInstance_name</a>
--   - The application instance's name.
--   
--   <a>$sel:healthStatus:ApplicationInstance'</a>,
--   <a>applicationInstance_healthStatus</a> - The application instance's
--   health status.
--   
--   <a>$sel:applicationInstanceId:ApplicationInstance'</a>,
--   <a>applicationInstance_applicationInstanceId</a> - The application
--   instance's ID.
--   
--   <a>$sel:description:ApplicationInstance'</a>,
--   <a>applicationInstance_description</a> - The application instance's
--   description.
--   
--   <a>$sel:tags:ApplicationInstance'</a>, <a>applicationInstance_tags</a>
--   - The application instance's tags.
newApplicationInstance :: ApplicationInstance

-- | A device.
--   
--   <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe POSIX -> Maybe DeviceStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Device

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedTime:Device'</a>, <a>device_lastUpdatedTime</a> -
--   When the device was updated.
--   
--   <a>$sel:provisioningStatus:Device'</a>,
--   <a>device_provisioningStatus</a> - The device's provisioning status.
--   
--   <a>$sel:createdTime:Device'</a>, <a>device_createdTime</a> - When the
--   device was created.
--   
--   <a>$sel:name:Device'</a>, <a>device_name</a> - The device's name.
--   
--   <a>$sel:deviceId:Device'</a>, <a>device_deviceId</a> - The device's
--   ID.
--   
--   <a>$sel:leaseExpirationTime:Device'</a>,
--   <a>device_leaseExpirationTime</a> - The device's lease expiration
--   time.
newDevice :: Device

-- | A job that runs on a device.
--   
--   <i>See:</i> <a>newDeviceJob</a> smart constructor.
data DeviceJob
DeviceJob' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> DeviceJob

-- | Create a value of <a>DeviceJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DeviceJob'</a>, <a>deviceJob_jobId</a> - The job's ID.
--   
--   <a>$sel:createdTime:DeviceJob'</a>, <a>deviceJob_createdTime</a> -
--   When the job was created.
--   
--   <a>$sel:deviceName:DeviceJob'</a>, <a>deviceJob_deviceName</a> - The
--   name of the target device
--   
--   <a>$sel:deviceId:DeviceJob'</a>, <a>deviceJob_deviceId</a> - The ID of
--   the target device.
newDeviceJob :: DeviceJob

-- | A job's configuration.
--   
--   <i>See:</i> <a>newDeviceJobConfig</a> smart constructor.
data DeviceJobConfig
DeviceJobConfig' :: Maybe OTAJobConfig -> DeviceJobConfig

-- | Create a value of <a>DeviceJobConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oTAJobConfig:DeviceJobConfig'</a>,
--   <a>deviceJobConfig_oTAJobConfig</a> - A configuration for an
--   over-the-air (OTA) upgrade. Required for OTA jobs.
newDeviceJobConfig :: DeviceJobConfig

-- | A device's network configuration.
--   
--   <i>See:</i> <a>newEthernetPayload</a> smart constructor.
data EthernetPayload
EthernetPayload' :: Maybe StaticIpConnectionInfo -> ConnectionType -> EthernetPayload

-- | Create a value of <a>EthernetPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:staticIpConnectionInfo:EthernetPayload'</a>,
--   <a>ethernetPayload_staticIpConnectionInfo</a> - Network configuration
--   for a static IP connection.
--   
--   <a>$sel:connectionType:EthernetPayload'</a>,
--   <a>ethernetPayload_connectionType</a> - How the device gets an IP
--   address.
newEthernetPayload :: ConnectionType -> EthernetPayload

-- | A device's Ethernet status.
--   
--   <i>See:</i> <a>newEthernetStatus</a> smart constructor.
data EthernetStatus
EthernetStatus' :: Maybe Text -> Maybe NetworkConnectionStatus -> Maybe Text -> EthernetStatus

-- | Create a value of <a>EthernetStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:EthernetStatus'</a>, <a>ethernetStatus_ipAddress</a>
--   - The device's IP address.
--   
--   <a>$sel:connectionStatus:EthernetStatus'</a>,
--   <a>ethernetStatus_connectionStatus</a> - The device's connection
--   status.
--   
--   <a>$sel:hwAddress:EthernetStatus'</a>, <a>ethernetStatus_hwAddress</a>
--   - The device's physical address.
newEthernetStatus :: EthernetStatus

-- | A job for a device.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe Text -> Maybe Text -> Job

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:Job'</a>, <a>job_jobId</a> - The job's ID.
--   
--   <a>$sel:deviceId:Job'</a>, <a>job_deviceId</a> - The target device's
--   ID.
newJob :: Job

-- | Tags for a job.
--   
--   <i>See:</i> <a>newJobResourceTags</a> smart constructor.
data JobResourceTags
JobResourceTags' :: JobResourceType -> HashMap Text Text -> JobResourceTags

-- | Create a value of <a>JobResourceTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:JobResourceTags'</a>,
--   <a>jobResourceTags_resourceType</a> - The job's type.
--   
--   <a>$sel:tags:JobResourceTags'</a>, <a>jobResourceTags_tags</a> - The
--   job's tags.
newJobResourceTags :: JobResourceType -> JobResourceTags

-- | Parameter overrides for an application instance. This is a JSON
--   document that has a single key (<tt>PayloadData</tt>) where the value
--   is an escaped string representation of the overrides document.
--   
--   <i>See:</i> <a>newManifestOverridesPayload</a> smart constructor.
data ManifestOverridesPayload
ManifestOverridesPayload' :: Maybe Text -> ManifestOverridesPayload

-- | Create a value of <a>ManifestOverridesPayload</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payloadData:ManifestOverridesPayload'</a>,
--   <a>manifestOverridesPayload_payloadData</a> - The overrides document.
newManifestOverridesPayload :: ManifestOverridesPayload

-- | A application verion's manifest file. This is a JSON document that has
--   a single key (<tt>PayloadData</tt>) where the value is an escaped
--   string representation of the application manifest
--   (<tt>graph.json</tt>). This file is located in the <tt>graphs</tt>
--   folder in your application source.
--   
--   <i>See:</i> <a>newManifestPayload</a> smart constructor.
data ManifestPayload
ManifestPayload' :: Maybe Text -> ManifestPayload

-- | Create a value of <a>ManifestPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payloadData:ManifestPayload'</a>,
--   <a>manifestPayload_payloadData</a> - The application manifest.
newManifestPayload :: ManifestPayload

-- | The network configuration for a device.
--   
--   <i>See:</i> <a>newNetworkPayload</a> smart constructor.
data NetworkPayload
NetworkPayload' :: Maybe EthernetPayload -> Maybe EthernetPayload -> NetworkPayload

-- | Create a value of <a>NetworkPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ethernet1:NetworkPayload'</a>, <a>networkPayload_ethernet1</a>
--   - Settings for Ethernet port 1.
--   
--   <a>$sel:ethernet0:NetworkPayload'</a>, <a>networkPayload_ethernet0</a>
--   - Settings for Ethernet port 0.
newNetworkPayload :: NetworkPayload

-- | The network status of a device.
--   
--   <i>See:</i> <a>newNetworkStatus</a> smart constructor.
data NetworkStatus
NetworkStatus' :: Maybe EthernetStatus -> Maybe EthernetStatus -> NetworkStatus

-- | Create a value of <a>NetworkStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ethernet1Status:NetworkStatus'</a>,
--   <a>networkStatus_ethernet1Status</a> - The status of Ethernet port 1.
--   
--   <a>$sel:ethernet0Status:NetworkStatus'</a>,
--   <a>networkStatus_ethernet0Status</a> - The status of Ethernet port 0.
newNetworkStatus :: NetworkStatus

-- | An application node that represents a camera stream, a model, code, or
--   output.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> NodeCategory -> Text -> Text -> Text -> Text -> POSIX -> Node

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageArn:Node'</a>, <a>node_packageArn</a> - The node's ARN.
--   
--   <a>$sel:ownerAccount:Node'</a>, <a>node_ownerAccount</a> - The account
--   ID of the node's owner.
--   
--   <a>$sel:description:Node'</a>, <a>node_description</a> - The node's
--   description.
--   
--   <a>$sel:nodeId:Node'</a>, <a>node_nodeId</a> - The node's ID.
--   
--   <a>$sel:name:Node'</a>, <a>node_name</a> - The node's name.
--   
--   <a>$sel:category:Node'</a>, <a>node_category</a> - The node's
--   category.
--   
--   <a>$sel:packageName:Node'</a>, <a>node_packageName</a> - The node's
--   package name.
--   
--   <a>$sel:packageId:Node'</a>, <a>node_packageId</a> - The node's
--   package ID.
--   
--   <a>$sel:packageVersion:Node'</a>, <a>node_packageVersion</a> - The
--   node's package version.
--   
--   <a>$sel:patchVersion:Node'</a>, <a>node_patchVersion</a> - The node's
--   patch version.
--   
--   <a>$sel:createdTime:Node'</a>, <a>node_createdTime</a> - When the node
--   was created.
newNode :: Text -> Text -> NodeCategory -> Text -> Text -> Text -> Text -> UTCTime -> Node

-- | A job to create a camera stream node.
--   
--   <i>See:</i> <a>newNodeFromTemplateJob</a> smart constructor.
data NodeFromTemplateJob
NodeFromTemplateJob' :: Maybe NodeFromTemplateJobStatus -> Maybe Text -> Maybe POSIX -> Maybe TemplateType -> Maybe Text -> Maybe Text -> NodeFromTemplateJob

-- | Create a value of <a>NodeFromTemplateJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_status</a> - The job's status.
--   
--   <a>$sel:jobId:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_jobId</a> - The job's ID.
--   
--   <a>$sel:createdTime:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_createdTime</a> - When the job was created.
--   
--   <a>$sel:templateType:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_templateType</a> - The job's template type.
--   
--   <a>$sel:nodeName:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_nodeName</a> - The node's name.
--   
--   <a>$sel:statusMessage:NodeFromTemplateJob'</a>,
--   <a>nodeFromTemplateJob_statusMessage</a> - The job's status message.
newNodeFromTemplateJob :: NodeFromTemplateJob

-- | A node input port.
--   
--   <i>See:</i> <a>newNodeInputPort</a> smart constructor.
data NodeInputPort
NodeInputPort' :: Maybe Int -> Maybe Text -> Maybe Text -> Maybe PortType -> Maybe Text -> NodeInputPort

-- | Create a value of <a>NodeInputPort</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConnections:NodeInputPort'</a>,
--   <a>nodeInputPort_maxConnections</a> - The input port's max
--   connections.
--   
--   <a>$sel:name:NodeInputPort'</a>, <a>nodeInputPort_name</a> - The input
--   port's name.
--   
--   <a>$sel:defaultValue:NodeInputPort'</a>,
--   <a>nodeInputPort_defaultValue</a> - The input port's default value.
--   
--   <a>$sel:type':NodeInputPort'</a>, <a>nodeInputPort_type</a> - The
--   input port's type.
--   
--   <a>$sel:description:NodeInputPort'</a>,
--   <a>nodeInputPort_description</a> - The input port's description.
newNodeInputPort :: NodeInputPort

-- | A node instance.
--   
--   <i>See:</i> <a>newNodeInstance</a> smart constructor.
data NodeInstance
NodeInstance' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> NodeInstanceStatus -> NodeInstance

-- | Create a value of <a>NodeInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageName:NodeInstance'</a>, <a>nodeInstance_packageName</a>
--   - The instance's package name.
--   
--   <a>$sel:packageVersion:NodeInstance'</a>,
--   <a>nodeInstance_packageVersion</a> - The instance's package version.
--   
--   <a>$sel:packagePatchVersion:NodeInstance'</a>,
--   <a>nodeInstance_packagePatchVersion</a> - The instance's package patch
--   version.
--   
--   <a>$sel:nodeName:NodeInstance'</a>, <a>nodeInstance_nodeName</a> - The
--   instance's name.
--   
--   <a>$sel:nodeId:NodeInstance'</a>, <a>nodeInstance_nodeId</a> - The
--   node's ID.
--   
--   <a>$sel:nodeInstanceId:NodeInstance'</a>,
--   <a>nodeInstance_nodeInstanceId</a> - The instance's ID.
--   
--   <a>$sel:currentStatus:NodeInstance'</a>,
--   <a>nodeInstance_currentStatus</a> - The instance's current status.
newNodeInstance :: Text -> NodeInstanceStatus -> NodeInstance

-- | A node interface.
--   
--   <i>See:</i> <a>newNodeInterface</a> smart constructor.
data NodeInterface
NodeInterface' :: [NodeInputPort] -> [NodeOutputPort] -> NodeInterface

-- | Create a value of <a>NodeInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputs:NodeInterface'</a>, <a>nodeInterface_inputs</a> - The
--   node interface's inputs.
--   
--   <a>$sel:outputs:NodeInterface'</a>, <a>nodeInterface_outputs</a> - The
--   node interface's outputs.
newNodeInterface :: NodeInterface

-- | A node output port.
--   
--   <i>See:</i> <a>newNodeOutputPort</a> smart constructor.
data NodeOutputPort
NodeOutputPort' :: Maybe Text -> Maybe PortType -> Maybe Text -> NodeOutputPort

-- | Create a value of <a>NodeOutputPort</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:NodeOutputPort'</a>, <a>nodeOutputPort_name</a> - The
--   output port's name.
--   
--   <a>$sel:type':NodeOutputPort'</a>, <a>nodeOutputPort_type</a> - The
--   output port's type.
--   
--   <a>$sel:description:NodeOutputPort'</a>,
--   <a>nodeOutputPort_description</a> - The output port's description.
newNodeOutputPort :: NodeOutputPort

-- | An over-the-air update (OTA) job configuration.
--   
--   <i>See:</i> <a>newOTAJobConfig</a> smart constructor.
data OTAJobConfig
OTAJobConfig' :: Text -> OTAJobConfig

-- | Create a value of <a>OTAJobConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageVersion:OTAJobConfig'</a>,
--   <a>oTAJobConfig_imageVersion</a> - The target version of the device
--   software.
newOTAJobConfig :: Text -> OTAJobConfig

-- | The location of an output object in Amazon S3.
--   
--   <i>See:</i> <a>newOutPutS3Location</a> smart constructor.
data OutPutS3Location
OutPutS3Location' :: Text -> Text -> OutPutS3Location

-- | Create a value of <a>OutPutS3Location</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketName:OutPutS3Location'</a>,
--   <a>outPutS3Location_bucketName</a> - The object's bucket.
--   
--   <a>$sel:objectKey:OutPutS3Location'</a>,
--   <a>outPutS3Location_objectKey</a> - The object's key.
newOutPutS3Location :: Text -> Text -> OutPutS3Location

-- | A job to import a package version.
--   
--   <i>See:</i> <a>newPackageImportJob</a> smart constructor.
data PackageImportJob
PackageImportJob' :: Maybe PackageImportJobStatus -> Maybe PackageImportJobType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> PackageImportJob

-- | Create a value of <a>PackageImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PackageImportJob'</a>, <a>packageImportJob_status</a> -
--   The job's status.
--   
--   <a>$sel:jobType:PackageImportJob'</a>, <a>packageImportJob_jobType</a>
--   - The job's type.
--   
--   <a>$sel:lastUpdatedTime:PackageImportJob'</a>,
--   <a>packageImportJob_lastUpdatedTime</a> - When the job was updated.
--   
--   <a>$sel:jobId:PackageImportJob'</a>, <a>packageImportJob_jobId</a> -
--   The job's ID.
--   
--   <a>$sel:createdTime:PackageImportJob'</a>,
--   <a>packageImportJob_createdTime</a> - When the job was created.
--   
--   <a>$sel:statusMessage:PackageImportJob'</a>,
--   <a>packageImportJob_statusMessage</a> - The job's status message.
newPackageImportJob :: PackageImportJob

-- | A configuration for a package import job.
--   
--   <i>See:</i> <a>newPackageImportJobInputConfig</a> smart constructor.
data PackageImportJobInputConfig
PackageImportJobInputConfig' :: Maybe PackageVersionInputConfig -> PackageImportJobInputConfig

-- | Create a value of <a>PackageImportJobInputConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageVersionInputConfig:PackageImportJobInputConfig'</a>,
--   <a>packageImportJobInputConfig_packageVersionInputConfig</a> - The
--   package version's input configuration.
newPackageImportJobInputConfig :: PackageImportJobInputConfig

-- | Results of a package import job.
--   
--   <i>See:</i> <a>newPackageImportJobOutput</a> smart constructor.
data PackageImportJobOutput
PackageImportJobOutput' :: Text -> Text -> Text -> OutPutS3Location -> PackageImportJobOutput

-- | Create a value of <a>PackageImportJobOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageId:PackageImportJobOutput'</a>,
--   <a>packageImportJobOutput_packageId</a> - The package's ID.
--   
--   <a>$sel:packageVersion:PackageImportJobOutput'</a>,
--   <a>packageImportJobOutput_packageVersion</a> - The package's version.
--   
--   <a>$sel:patchVersion:PackageImportJobOutput'</a>,
--   <a>packageImportJobOutput_patchVersion</a> - The package's patch
--   version.
--   
--   <a>$sel:outputS3Location:PackageImportJobOutput'</a>,
--   <a>packageImportJobOutput_outputS3Location</a> - The package's output
--   location.
newPackageImportJobOutput :: Text -> Text -> Text -> OutPutS3Location -> PackageImportJobOutput

-- | An output configuration for a package import job.
--   
--   <i>See:</i> <a>newPackageImportJobOutputConfig</a> smart constructor.
data PackageImportJobOutputConfig
PackageImportJobOutputConfig' :: Maybe PackageVersionOutputConfig -> PackageImportJobOutputConfig

-- | Create a value of <a>PackageImportJobOutputConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageVersionOutputConfig:PackageImportJobOutputConfig'</a>,
--   <a>packageImportJobOutputConfig_packageVersionOutputConfig</a> - The
--   package version's output configuration.
newPackageImportJobOutputConfig :: PackageImportJobOutputConfig

-- | A package summary.
--   
--   <i>See:</i> <a>newPackageListItem</a> smart constructor.
data PackageListItem
PackageListItem' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> PackageListItem

-- | Create a value of <a>PackageListItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageId:PackageListItem'</a>,
--   <a>packageListItem_packageId</a> - The package's ID.
--   
--   <a>$sel:arn:PackageListItem'</a>, <a>packageListItem_arn</a> - The
--   package's ARN.
--   
--   <a>$sel:createdTime:PackageListItem'</a>,
--   <a>packageListItem_createdTime</a> - When the package was created.
--   
--   <a>$sel:packageName:PackageListItem'</a>,
--   <a>packageListItem_packageName</a> - The package's name.
--   
--   <a>$sel:tags:PackageListItem'</a>, <a>packageListItem_tags</a> - The
--   package's tags.
newPackageListItem :: PackageListItem

-- | A package object.
--   
--   <i>See:</i> <a>newPackageObject</a> smart constructor.
data PackageObject
PackageObject' :: Text -> Text -> Text -> PackageObject

-- | Create a value of <a>PackageObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:PackageObject'</a>, <a>packageObject_name</a> - The
--   object's name.
--   
--   <a>$sel:packageVersion:PackageObject'</a>,
--   <a>packageObject_packageVersion</a> - The object's package version.
--   
--   <a>$sel:patchVersion:PackageObject'</a>,
--   <a>packageObject_patchVersion</a> - The object's patch version.
newPackageObject :: Text -> Text -> Text -> PackageObject

-- | A package version input configuration.
--   
--   <i>See:</i> <a>newPackageVersionInputConfig</a> smart constructor.
data PackageVersionInputConfig
PackageVersionInputConfig' :: S3Location -> PackageVersionInputConfig

-- | Create a value of <a>PackageVersionInputConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Location:PackageVersionInputConfig'</a>,
--   <a>packageVersionInputConfig_s3Location</a> - A location in Amazon S3.
newPackageVersionInputConfig :: S3Location -> PackageVersionInputConfig

-- | A package version output configuration.
--   
--   <i>See:</i> <a>newPackageVersionOutputConfig</a> smart constructor.
data PackageVersionOutputConfig
PackageVersionOutputConfig' :: Maybe Bool -> Text -> Text -> PackageVersionOutputConfig

-- | Create a value of <a>PackageVersionOutputConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:markLatest:PackageVersionOutputConfig'</a>,
--   <a>packageVersionOutputConfig_markLatest</a> - Indicates that the
--   version is recommended for all users.
--   
--   <a>$sel:packageName:PackageVersionOutputConfig'</a>,
--   <a>packageVersionOutputConfig_packageName</a> - The output's package
--   name.
--   
--   <a>$sel:packageVersion:PackageVersionOutputConfig'</a>,
--   <a>packageVersionOutputConfig_packageVersion</a> - The output's
--   package version.
newPackageVersionOutputConfig :: Text -> Text -> PackageVersionOutputConfig

-- | A location in Amazon S3.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Text -> Text -> S3Location

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:region:S3Location'</a>, <a>s3Location_region</a> - The
--   bucket's Region.
--   
--   <a>$sel:bucketName:S3Location'</a>, <a>s3Location_bucketName</a> - A
--   bucket name.
--   
--   <a>$sel:objectKey:S3Location'</a>, <a>s3Location_objectKey</a> - An
--   object key.
newS3Location :: Text -> Text -> S3Location

-- | A static IP configuration.
--   
--   <i>See:</i> <a>newStaticIpConnectionInfo</a> smart constructor.
data StaticIpConnectionInfo
StaticIpConnectionInfo' :: Text -> Text -> [Text] -> Text -> StaticIpConnectionInfo

-- | Create a value of <a>StaticIpConnectionInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:StaticIpConnectionInfo'</a>,
--   <a>staticIpConnectionInfo_ipAddress</a> - The connection's IP address.
--   
--   <a>$sel:mask:StaticIpConnectionInfo'</a>,
--   <a>staticIpConnectionInfo_mask</a> - The connection's DNS mask.
--   
--   <a>$sel:dns:StaticIpConnectionInfo'</a>,
--   <a>staticIpConnectionInfo_dns</a> - The connection's DNS address.
--   
--   <a>$sel:defaultGateway:StaticIpConnectionInfo'</a>,
--   <a>staticIpConnectionInfo_defaultGateway</a> - The connection's
--   default gateway.
newStaticIpConnectionInfo :: Text -> Text -> Text -> StaticIpConnectionInfo

-- | A storage location.
--   
--   <i>See:</i> <a>newStorageLocation</a> smart constructor.
data StorageLocation
StorageLocation' :: Text -> Text -> Text -> Text -> Text -> StorageLocation

-- | Create a value of <a>StorageLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:StorageLocation'</a>, <a>storageLocation_bucket</a> -
--   The location's bucket.
--   
--   <a>$sel:repoPrefixLocation:StorageLocation'</a>,
--   <a>storageLocation_repoPrefixLocation</a> - The location's repo
--   prefix.
--   
--   <a>$sel:generatedPrefixLocation:StorageLocation'</a>,
--   <a>storageLocation_generatedPrefixLocation</a> - The location's
--   generated prefix.
--   
--   <a>$sel:binaryPrefixLocation:StorageLocation'</a>,
--   <a>storageLocation_binaryPrefixLocation</a> - The location's binary
--   prefix.
--   
--   <a>$sel:manifestPrefixLocation:StorageLocation'</a>,
--   <a>storageLocation_manifestPrefixLocation</a> - The location's
--   manifest prefix.
newStorageLocation :: Text -> Text -> Text -> Text -> Text -> StorageLocation
