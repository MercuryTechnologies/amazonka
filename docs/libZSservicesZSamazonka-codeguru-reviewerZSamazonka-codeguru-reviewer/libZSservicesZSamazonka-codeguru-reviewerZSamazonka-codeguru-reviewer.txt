-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-codeguru-reviewerZSamazonka-codeguru-reviewer
@version 2.0


module Network.AWS.CodeGuruReviewer.Types.AnalysisType
newtype AnalysisType
AnalysisType' :: Text -> AnalysisType
[fromAnalysisType] :: AnalysisType -> Text
pattern AnalysisType_CodeQuality :: AnalysisType
pattern AnalysisType_Security :: AnalysisType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Network.AWS.Data.Text.ToText Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Network.AWS.Data.Text.FromText Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance GHC.Classes.Ord Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.AnalysisType.AnalysisType


module Network.AWS.CodeGuruReviewer.Types.BranchDiffSourceCodeType

-- | A type of <a>SourceCodeType</a> that specifies a code diff between a
--   source and destination branch in an associated repository.
--   
--   <i>See:</i> <a>newBranchDiffSourceCodeType</a> smart constructor.
data BranchDiffSourceCodeType
BranchDiffSourceCodeType' :: Text -> Text -> BranchDiffSourceCodeType

-- | The source branch for a diff in an associated repository.
[$sel:sourceBranchName:BranchDiffSourceCodeType'] :: BranchDiffSourceCodeType -> Text

-- | The destination branch for a diff in an associated repository.
[$sel:destinationBranchName:BranchDiffSourceCodeType'] :: BranchDiffSourceCodeType -> Text

-- | Create a value of <a>BranchDiffSourceCodeType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceBranchName:BranchDiffSourceCodeType'</a>,
--   <a>branchDiffSourceCodeType_sourceBranchName</a> - The source branch
--   for a diff in an associated repository.
--   
--   <a>$sel:destinationBranchName:BranchDiffSourceCodeType'</a>,
--   <a>branchDiffSourceCodeType_destinationBranchName</a> - The
--   destination branch for a diff in an associated repository.
newBranchDiffSourceCodeType :: Text -> Text -> BranchDiffSourceCodeType

-- | The source branch for a diff in an associated repository.
branchDiffSourceCodeType_sourceBranchName :: Lens' BranchDiffSourceCodeType Text

-- | The destination branch for a diff in an associated repository.
branchDiffSourceCodeType_destinationBranchName :: Lens' BranchDiffSourceCodeType Text
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.BranchDiffSourceCodeType.BranchDiffSourceCodeType
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.BranchDiffSourceCodeType.BranchDiffSourceCodeType
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.BranchDiffSourceCodeType.BranchDiffSourceCodeType
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.BranchDiffSourceCodeType.BranchDiffSourceCodeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.BranchDiffSourceCodeType.BranchDiffSourceCodeType
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.BranchDiffSourceCodeType.BranchDiffSourceCodeType
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.BranchDiffSourceCodeType.BranchDiffSourceCodeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.BranchDiffSourceCodeType.BranchDiffSourceCodeType


module Network.AWS.CodeGuruReviewer.Types.CodeArtifacts

-- | Code artifacts are source code artifacts and build artifacts used in a
--   repository analysis or a pull request review.
--   
--   <ul>
--   <li>Source code artifacts are source code files in a Git repository
--   that are compressed into a .zip file.</li>
--   <li>Build artifacts are .jar or .class files that are compressed in a
--   .zip file.</li>
--   </ul>
--   
--   <i>See:</i> <a>newCodeArtifacts</a> smart constructor.
data CodeArtifacts
CodeArtifacts' :: Maybe Text -> Text -> CodeArtifacts

-- | The S3 object key for a build artifacts .zip file that contains .jar
--   or .class files. This is required for a code review with security
--   analysis. For more information, see <a>Create code reviews with
--   security analysis</a> in the <i>Amazon CodeGuru Reviewer User
--   Guide</i>.
[$sel:buildArtifactsObjectKey:CodeArtifacts'] :: CodeArtifacts -> Maybe Text

-- | The S3 object key for a source code .zip file. This is required for
--   all code reviews.
[$sel:sourceCodeArtifactsObjectKey:CodeArtifacts'] :: CodeArtifacts -> Text

-- | Create a value of <a>CodeArtifacts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildArtifactsObjectKey:CodeArtifacts'</a>,
--   <a>codeArtifacts_buildArtifactsObjectKey</a> - The S3 object key for a
--   build artifacts .zip file that contains .jar or .class files. This is
--   required for a code review with security analysis. For more
--   information, see <a>Create code reviews with security analysis</a> in
--   the <i>Amazon CodeGuru Reviewer User Guide</i>.
--   
--   <a>$sel:sourceCodeArtifactsObjectKey:CodeArtifacts'</a>,
--   <a>codeArtifacts_sourceCodeArtifactsObjectKey</a> - The S3 object key
--   for a source code .zip file. This is required for all code reviews.
newCodeArtifacts :: Text -> CodeArtifacts

-- | The S3 object key for a build artifacts .zip file that contains .jar
--   or .class files. This is required for a code review with security
--   analysis. For more information, see <a>Create code reviews with
--   security analysis</a> in the <i>Amazon CodeGuru Reviewer User
--   Guide</i>.
codeArtifacts_buildArtifactsObjectKey :: Lens' CodeArtifacts (Maybe Text)

-- | The S3 object key for a source code .zip file. This is required for
--   all code reviews.
codeArtifacts_sourceCodeArtifactsObjectKey :: Lens' CodeArtifacts Text
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.CodeArtifacts.CodeArtifacts
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.CodeArtifacts.CodeArtifacts
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.CodeArtifacts.CodeArtifacts
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.CodeArtifacts.CodeArtifacts
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.CodeArtifacts.CodeArtifacts
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.CodeArtifacts.CodeArtifacts
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.CodeArtifacts.CodeArtifacts
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.CodeArtifacts.CodeArtifacts


module Network.AWS.CodeGuruReviewer.Types.CodeCommitRepository

-- | Information about an Amazon Web Services CodeCommit repository. The
--   CodeCommit repository must be in the same Amazon Web Services Region
--   and Amazon Web Services account where its CodeGuru Reviewer code
--   reviews are configured.
--   
--   <i>See:</i> <a>newCodeCommitRepository</a> smart constructor.
data CodeCommitRepository
CodeCommitRepository' :: Text -> CodeCommitRepository

-- | The name of the Amazon Web Services CodeCommit repository. For more
--   information, see <a>repositoryName</a> in the <i>Amazon Web Services
--   CodeCommit API Reference</i>.
[$sel:name:CodeCommitRepository'] :: CodeCommitRepository -> Text

-- | Create a value of <a>CodeCommitRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CodeCommitRepository'</a>,
--   <a>codeCommitRepository_name</a> - The name of the Amazon Web Services
--   CodeCommit repository. For more information, see <a>repositoryName</a>
--   in the <i>Amazon Web Services CodeCommit API Reference</i>.
newCodeCommitRepository :: Text -> CodeCommitRepository

-- | The name of the Amazon Web Services CodeCommit repository. For more
--   information, see <a>repositoryName</a> in the <i>Amazon Web Services
--   CodeCommit API Reference</i>.
codeCommitRepository_name :: Lens' CodeCommitRepository Text
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.CodeCommitRepository.CodeCommitRepository
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.CodeCommitRepository.CodeCommitRepository
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.CodeCommitRepository.CodeCommitRepository
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.CodeCommitRepository.CodeCommitRepository
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.CodeCommitRepository.CodeCommitRepository
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.CodeCommitRepository.CodeCommitRepository
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.CodeCommitRepository.CodeCommitRepository


module Network.AWS.CodeGuruReviewer.Types.CommitDiffSourceCodeType

-- | A type of <a>SourceCodeType</a> that specifies the commit diff for a
--   pull request on an associated repository. The <tt>SourceCommit</tt>
--   and <tt>DestinationCommit</tt> fields are required to do a pull
--   request code review.
--   
--   <i>See:</i> <a>newCommitDiffSourceCodeType</a> smart constructor.
data CommitDiffSourceCodeType
CommitDiffSourceCodeType' :: Maybe Text -> Maybe Text -> Maybe Text -> CommitDiffSourceCodeType

-- | The SHA of the source commit used to generate a commit diff. This
--   field is required for a pull request code review.
[$sel:sourceCommit:CommitDiffSourceCodeType'] :: CommitDiffSourceCodeType -> Maybe Text

-- | The SHA of the merge base of a commit.
[$sel:mergeBaseCommit:CommitDiffSourceCodeType'] :: CommitDiffSourceCodeType -> Maybe Text

-- | The SHA of the destination commit used to generate a commit diff. This
--   field is required for a pull request code review.
[$sel:destinationCommit:CommitDiffSourceCodeType'] :: CommitDiffSourceCodeType -> Maybe Text

-- | Create a value of <a>CommitDiffSourceCodeType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCommit:CommitDiffSourceCodeType'</a>,
--   <a>commitDiffSourceCodeType_sourceCommit</a> - The SHA of the source
--   commit used to generate a commit diff. This field is required for a
--   pull request code review.
--   
--   <a>$sel:mergeBaseCommit:CommitDiffSourceCodeType'</a>,
--   <a>commitDiffSourceCodeType_mergeBaseCommit</a> - The SHA of the merge
--   base of a commit.
--   
--   <a>$sel:destinationCommit:CommitDiffSourceCodeType'</a>,
--   <a>commitDiffSourceCodeType_destinationCommit</a> - The SHA of the
--   destination commit used to generate a commit diff. This field is
--   required for a pull request code review.
newCommitDiffSourceCodeType :: CommitDiffSourceCodeType

-- | The SHA of the source commit used to generate a commit diff. This
--   field is required for a pull request code review.
commitDiffSourceCodeType_sourceCommit :: Lens' CommitDiffSourceCodeType (Maybe Text)

-- | The SHA of the merge base of a commit.
commitDiffSourceCodeType_mergeBaseCommit :: Lens' CommitDiffSourceCodeType (Maybe Text)

-- | The SHA of the destination commit used to generate a commit diff. This
--   field is required for a pull request code review.
commitDiffSourceCodeType_destinationCommit :: Lens' CommitDiffSourceCodeType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.CommitDiffSourceCodeType.CommitDiffSourceCodeType
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.CommitDiffSourceCodeType.CommitDiffSourceCodeType
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.CommitDiffSourceCodeType.CommitDiffSourceCodeType
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.CommitDiffSourceCodeType.CommitDiffSourceCodeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.CommitDiffSourceCodeType.CommitDiffSourceCodeType
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.CommitDiffSourceCodeType.CommitDiffSourceCodeType
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.CommitDiffSourceCodeType.CommitDiffSourceCodeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.CommitDiffSourceCodeType.CommitDiffSourceCodeType


module Network.AWS.CodeGuruReviewer.Types.EncryptionOption
newtype EncryptionOption
EncryptionOption' :: Text -> EncryptionOption
[fromEncryptionOption] :: EncryptionOption -> Text
pattern EncryptionOption_AWS_OWNED_CMK :: EncryptionOption
pattern EncryptionOption_CUSTOMER_MANAGED_CMK :: EncryptionOption
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Network.AWS.Data.Text.ToText Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Network.AWS.Data.Text.FromText Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance GHC.Classes.Ord Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.EncryptionOption.EncryptionOption


module Network.AWS.CodeGuruReviewer.Types.EventInfo

-- | Information about an event. The event might be a push, pull request,
--   scheduled request, or another type of event.
--   
--   <i>See:</i> <a>newEventInfo</a> smart constructor.
data EventInfo
EventInfo' :: Maybe Text -> Maybe Text -> EventInfo

-- | The state of an event. The state might be open, closed, or another
--   state.
[$sel:state:EventInfo'] :: EventInfo -> Maybe Text

-- | The name of the event. The possible names are <tt>pull_request</tt>,
--   <tt>workflow_dispatch</tt>, <tt>schedule</tt>, and <tt>push</tt>
[$sel:name:EventInfo'] :: EventInfo -> Maybe Text

-- | Create a value of <a>EventInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:EventInfo'</a>, <a>eventInfo_state</a> - The state of an
--   event. The state might be open, closed, or another state.
--   
--   <a>$sel:name:EventInfo'</a>, <a>eventInfo_name</a> - The name of the
--   event. The possible names are <tt>pull_request</tt>,
--   <tt>workflow_dispatch</tt>, <tt>schedule</tt>, and <tt>push</tt>
newEventInfo :: EventInfo

-- | The state of an event. The state might be open, closed, or another
--   state.
eventInfo_state :: Lens' EventInfo (Maybe Text)

-- | The name of the event. The possible names are <tt>pull_request</tt>,
--   <tt>workflow_dispatch</tt>, <tt>schedule</tt>, and <tt>push</tt>
eventInfo_name :: Lens' EventInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.EventInfo.EventInfo
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.EventInfo.EventInfo
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.EventInfo.EventInfo
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.EventInfo.EventInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.EventInfo.EventInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.EventInfo.EventInfo
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.EventInfo.EventInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.EventInfo.EventInfo


module Network.AWS.CodeGuruReviewer.Types.JobState
newtype JobState
JobState' :: Text -> JobState
[fromJobState] :: JobState -> Text
pattern JobState_Completed :: JobState
pattern JobState_Deleting :: JobState
pattern JobState_Failed :: JobState
pattern JobState_Pending :: JobState
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Network.AWS.Data.Text.ToText Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Network.AWS.Data.Text.FromText Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance GHC.Classes.Ord Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.JobState.JobState
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.JobState.JobState


module Network.AWS.CodeGuruReviewer.Types.KMSKeyDetails

-- | An object that contains:
--   
--   <ul>
--   <li>The encryption option for a repository association. It is either
--   owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   a respository association.</li>
--   </ul>
--   
--   <i>See:</i> <a>newKMSKeyDetails</a> smart constructor.
data KMSKeyDetails
KMSKeyDetails' :: Maybe EncryptionOption -> Maybe Text -> KMSKeyDetails

-- | The encryption option for a repository association. It is either owned
--   by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).
[$sel:encryptionOption:KMSKeyDetails'] :: KMSKeyDetails -> Maybe EncryptionOption

-- | The ID of the Amazon Web Services KMS key that is associated with a
--   respository association.
[$sel:kmsKeyId:KMSKeyDetails'] :: KMSKeyDetails -> Maybe Text

-- | Create a value of <a>KMSKeyDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionOption:KMSKeyDetails'</a>,
--   <a>kmsKeyDetails_encryptionOption</a> - The encryption option for a
--   repository association. It is either owned by Amazon Web Services Key
--   Management Service (KMS) (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).
--   
--   <a>$sel:kmsKeyId:KMSKeyDetails'</a>, <a>kmsKeyDetails_kmsKeyId</a> -
--   The ID of the Amazon Web Services KMS key that is associated with a
--   respository association.
newKMSKeyDetails :: KMSKeyDetails

-- | The encryption option for a repository association. It is either owned
--   by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).
kmsKeyDetails_encryptionOption :: Lens' KMSKeyDetails (Maybe EncryptionOption)

-- | The ID of the Amazon Web Services KMS key that is associated with a
--   respository association.
kmsKeyDetails_kmsKeyId :: Lens' KMSKeyDetails (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.KMSKeyDetails.KMSKeyDetails
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.KMSKeyDetails.KMSKeyDetails
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.KMSKeyDetails.KMSKeyDetails
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.KMSKeyDetails.KMSKeyDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.KMSKeyDetails.KMSKeyDetails
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.KMSKeyDetails.KMSKeyDetails
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.KMSKeyDetails.KMSKeyDetails
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.KMSKeyDetails.KMSKeyDetails


module Network.AWS.CodeGuruReviewer.Types.Metrics

-- | Information about the statistics from the code review.
--   
--   <i>See:</i> <a>newMetrics</a> smart constructor.
data Metrics
Metrics' :: Maybe Integer -> Maybe Integer -> Metrics

-- | Total number of recommendations found in the code review.
[$sel:findingsCount:Metrics'] :: Metrics -> Maybe Integer

-- | <tt>MeteredLinesOfCode</tt> is the number of lines of code in the
--   repository where the code review happened. This does not include
--   non-code lines such as comments and blank lines.
[$sel:meteredLinesOfCodeCount:Metrics'] :: Metrics -> Maybe Integer

-- | Create a value of <a>Metrics</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:findingsCount:Metrics'</a>, <a>metrics_findingsCount</a> -
--   Total number of recommendations found in the code review.
--   
--   <a>$sel:meteredLinesOfCodeCount:Metrics'</a>,
--   <a>metrics_meteredLinesOfCodeCount</a> - <tt>MeteredLinesOfCode</tt>
--   is the number of lines of code in the repository where the code review
--   happened. This does not include non-code lines such as comments and
--   blank lines.
newMetrics :: Metrics

-- | Total number of recommendations found in the code review.
metrics_findingsCount :: Lens' Metrics (Maybe Integer)

-- | <tt>MeteredLinesOfCode</tt> is the number of lines of code in the
--   repository where the code review happened. This does not include
--   non-code lines such as comments and blank lines.
metrics_meteredLinesOfCodeCount :: Lens' Metrics (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.Metrics.Metrics
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.Metrics.Metrics
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.Metrics.Metrics
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.Metrics.Metrics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.Metrics.Metrics
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.Metrics.Metrics
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.Metrics.Metrics


module Network.AWS.CodeGuruReviewer.Types.MetricsSummary

-- | Information about metrics summaries.
--   
--   <i>See:</i> <a>newMetricsSummary</a> smart constructor.
data MetricsSummary
MetricsSummary' :: Maybe Integer -> Maybe Integer -> MetricsSummary

-- | Total number of recommendations found in the code review.
[$sel:findingsCount:MetricsSummary'] :: MetricsSummary -> Maybe Integer

-- | Lines of code metered in the code review. For the initial code review
--   pull request and all subsequent revisions, this includes all lines of
--   code in the files added to the pull request. In subsequent revisions,
--   for files that already existed in the pull request, this includes only
--   the changed lines of code. In both cases, this does not include
--   non-code lines such as comments and import statements. For example, if
--   you submit a pull request containing 5 files, each with 500 lines of
--   code, and in a subsequent revision you added a new file with 200 lines
--   of code, and also modified a total of 25 lines across the initial 5
--   files, <tt>MeteredLinesOfCodeCount</tt> includes the first 5 files (5
--   * 500 = 2,500 lines), the new file (200 lines) and the 25 changed
--   lines of code for a total of 2,725 lines of code.
[$sel:meteredLinesOfCodeCount:MetricsSummary'] :: MetricsSummary -> Maybe Integer

-- | Create a value of <a>MetricsSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:findingsCount:MetricsSummary'</a>,
--   <a>metricsSummary_findingsCount</a> - Total number of recommendations
--   found in the code review.
--   
--   <a>$sel:meteredLinesOfCodeCount:MetricsSummary'</a>,
--   <a>metricsSummary_meteredLinesOfCodeCount</a> - Lines of code metered
--   in the code review. For the initial code review pull request and all
--   subsequent revisions, this includes all lines of code in the files
--   added to the pull request. In subsequent revisions, for files that
--   already existed in the pull request, this includes only the changed
--   lines of code. In both cases, this does not include non-code lines
--   such as comments and import statements. For example, if you submit a
--   pull request containing 5 files, each with 500 lines of code, and in a
--   subsequent revision you added a new file with 200 lines of code, and
--   also modified a total of 25 lines across the initial 5 files,
--   <tt>MeteredLinesOfCodeCount</tt> includes the first 5 files (5 * 500 =
--   2,500 lines), the new file (200 lines) and the 25 changed lines of
--   code for a total of 2,725 lines of code.
newMetricsSummary :: MetricsSummary

-- | Total number of recommendations found in the code review.
metricsSummary_findingsCount :: Lens' MetricsSummary (Maybe Integer)

-- | Lines of code metered in the code review. For the initial code review
--   pull request and all subsequent revisions, this includes all lines of
--   code in the files added to the pull request. In subsequent revisions,
--   for files that already existed in the pull request, this includes only
--   the changed lines of code. In both cases, this does not include
--   non-code lines such as comments and import statements. For example, if
--   you submit a pull request containing 5 files, each with 500 lines of
--   code, and in a subsequent revision you added a new file with 200 lines
--   of code, and also modified a total of 25 lines across the initial 5
--   files, <tt>MeteredLinesOfCodeCount</tt> includes the first 5 files (5
--   * 500 = 2,500 lines), the new file (200 lines) and the 25 changed
--   lines of code for a total of 2,725 lines of code.
metricsSummary_meteredLinesOfCodeCount :: Lens' MetricsSummary (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.MetricsSummary.MetricsSummary
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.MetricsSummary.MetricsSummary
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.MetricsSummary.MetricsSummary
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.MetricsSummary.MetricsSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.MetricsSummary.MetricsSummary
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.MetricsSummary.MetricsSummary
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.MetricsSummary.MetricsSummary


module Network.AWS.CodeGuruReviewer.Types.ProviderType
newtype ProviderType
ProviderType' :: Text -> ProviderType
[fromProviderType] :: ProviderType -> Text
pattern ProviderType_Bitbucket :: ProviderType
pattern ProviderType_CodeCommit :: ProviderType
pattern ProviderType_GitHub :: ProviderType
pattern ProviderType_GitHubEnterpriseServer :: ProviderType
pattern ProviderType_S3Bucket :: ProviderType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Network.AWS.Data.Text.ToText Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Network.AWS.Data.Text.FromText Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance GHC.Classes.Ord Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.ProviderType.ProviderType


module Network.AWS.CodeGuruReviewer.Types.Reaction
newtype Reaction
Reaction' :: Text -> Reaction
[fromReaction] :: Reaction -> Text
pattern Reaction_ThumbsDown :: Reaction
pattern Reaction_ThumbsUp :: Reaction
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Network.AWS.Data.Text.ToText Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Network.AWS.Data.Text.FromText Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance GHC.Classes.Ord Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.Reaction.Reaction


module Network.AWS.CodeGuruReviewer.Types.RecommendationCategory
newtype RecommendationCategory
RecommendationCategory' :: Text -> RecommendationCategory
[fromRecommendationCategory] :: RecommendationCategory -> Text
pattern RecommendationCategory_AWSBestPractices :: RecommendationCategory
pattern RecommendationCategory_AWSCloudFormationIssues :: RecommendationCategory
pattern RecommendationCategory_CodeInconsistencies :: RecommendationCategory
pattern RecommendationCategory_CodeMaintenanceIssues :: RecommendationCategory
pattern RecommendationCategory_ConcurrencyIssues :: RecommendationCategory
pattern RecommendationCategory_DuplicateCode :: RecommendationCategory
pattern RecommendationCategory_InputValidations :: RecommendationCategory
pattern RecommendationCategory_JavaBestPractices :: RecommendationCategory
pattern RecommendationCategory_PythonBestPractices :: RecommendationCategory
pattern RecommendationCategory_ResourceLeaks :: RecommendationCategory
pattern RecommendationCategory_SecurityIssues :: RecommendationCategory
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Network.AWS.Data.Text.ToText Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Network.AWS.Data.Text.FromText Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance GHC.Classes.Ord Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.RecommendationCategory.RecommendationCategory


module Network.AWS.CodeGuruReviewer.Types.RecommendationFeedback

-- | Information about the recommendation feedback.
--   
--   <i>See:</i> <a>newRecommendationFeedback</a> smart constructor.
data RecommendationFeedback
RecommendationFeedback' :: Maybe Text -> Maybe Text -> Maybe [Reaction] -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> RecommendationFeedback

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
[$sel:recommendationId:RecommendationFeedback'] :: RecommendationFeedback -> Maybe Text

-- | The ID of the user that made the API call.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
[$sel:userId:RecommendationFeedback'] :: RecommendationFeedback -> Maybe Text

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
--   You can send an empty list to clear off all your feedback.
[$sel:reactions:RecommendationFeedback'] :: RecommendationFeedback -> Maybe [Reaction]

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
[$sel:codeReviewArn:RecommendationFeedback'] :: RecommendationFeedback -> Maybe Text

-- | The time at which the feedback was created.
[$sel:createdTimeStamp:RecommendationFeedback'] :: RecommendationFeedback -> Maybe POSIX

-- | The time at which the feedback was last updated.
[$sel:lastUpdatedTimeStamp:RecommendationFeedback'] :: RecommendationFeedback -> Maybe POSIX

-- | Create a value of <a>RecommendationFeedback</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recommendationId:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_recommendationId</a> - The recommendation ID
--   that can be used to track the provided recommendations. Later on it
--   can be used to collect the feedback.
--   
--   <a>$sel:userId:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_userId</a> - The ID of the user that made
--   the API call.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
--   
--   <a>$sel:reactions:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_reactions</a> - List for storing reactions.
--   Reactions are utf-8 text code for emojis. You can send an empty list
--   to clear off all your feedback.
--   
--   <a>$sel:codeReviewArn:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_codeReviewArn</a> - The Amazon Resource Name
--   (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:createdTimeStamp:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_createdTimeStamp</a> - The time at which the
--   feedback was created.
--   
--   <a>$sel:lastUpdatedTimeStamp:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_lastUpdatedTimeStamp</a> - The time at which
--   the feedback was last updated.
newRecommendationFeedback :: RecommendationFeedback

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
recommendationFeedback_recommendationId :: Lens' RecommendationFeedback (Maybe Text)

-- | The ID of the user that made the API call.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
recommendationFeedback_userId :: Lens' RecommendationFeedback (Maybe Text)

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
--   You can send an empty list to clear off all your feedback.
recommendationFeedback_reactions :: Lens' RecommendationFeedback (Maybe [Reaction])

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
recommendationFeedback_codeReviewArn :: Lens' RecommendationFeedback (Maybe Text)

-- | The time at which the feedback was created.
recommendationFeedback_createdTimeStamp :: Lens' RecommendationFeedback (Maybe UTCTime)

-- | The time at which the feedback was last updated.
recommendationFeedback_lastUpdatedTimeStamp :: Lens' RecommendationFeedback (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.RecommendationFeedback.RecommendationFeedback
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.RecommendationFeedback.RecommendationFeedback
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.RecommendationFeedback.RecommendationFeedback
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.RecommendationFeedback.RecommendationFeedback
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.RecommendationFeedback.RecommendationFeedback
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.RecommendationFeedback.RecommendationFeedback
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.RecommendationFeedback.RecommendationFeedback


module Network.AWS.CodeGuruReviewer.Types.RecommendationFeedbackSummary

-- | Information about recommendation feedback summaries.
--   
--   <i>See:</i> <a>newRecommendationFeedbackSummary</a> smart constructor.
data RecommendationFeedbackSummary
RecommendationFeedbackSummary' :: Maybe Text -> Maybe Text -> Maybe [Reaction] -> RecommendationFeedbackSummary

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
[$sel:recommendationId:RecommendationFeedbackSummary'] :: RecommendationFeedbackSummary -> Maybe Text

-- | The ID of the user that gave the feedback.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
[$sel:userId:RecommendationFeedbackSummary'] :: RecommendationFeedbackSummary -> Maybe Text

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
[$sel:reactions:RecommendationFeedbackSummary'] :: RecommendationFeedbackSummary -> Maybe [Reaction]

-- | Create a value of <a>RecommendationFeedbackSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recommendationId:RecommendationFeedbackSummary'</a>,
--   <a>recommendationFeedbackSummary_recommendationId</a> - The
--   recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
--   
--   <a>$sel:userId:RecommendationFeedbackSummary'</a>,
--   <a>recommendationFeedbackSummary_userId</a> - The ID of the user that
--   gave the feedback.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
--   
--   <a>$sel:reactions:RecommendationFeedbackSummary'</a>,
--   <a>recommendationFeedbackSummary_reactions</a> - List for storing
--   reactions. Reactions are utf-8 text code for emojis.
newRecommendationFeedbackSummary :: RecommendationFeedbackSummary

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
recommendationFeedbackSummary_recommendationId :: Lens' RecommendationFeedbackSummary (Maybe Text)

-- | The ID of the user that gave the feedback.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
recommendationFeedbackSummary_userId :: Lens' RecommendationFeedbackSummary (Maybe Text)

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
recommendationFeedbackSummary_reactions :: Lens' RecommendationFeedbackSummary (Maybe [Reaction])
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.RecommendationFeedbackSummary.RecommendationFeedbackSummary
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.RecommendationFeedbackSummary.RecommendationFeedbackSummary
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.RecommendationFeedbackSummary.RecommendationFeedbackSummary
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.RecommendationFeedbackSummary.RecommendationFeedbackSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.RecommendationFeedbackSummary.RecommendationFeedbackSummary
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.RecommendationFeedbackSummary.RecommendationFeedbackSummary
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.RecommendationFeedbackSummary.RecommendationFeedbackSummary


module Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState
newtype RepositoryAssociationState
RepositoryAssociationState' :: Text -> RepositoryAssociationState
[fromRepositoryAssociationState] :: RepositoryAssociationState -> Text
pattern RepositoryAssociationState_Associated :: RepositoryAssociationState
pattern RepositoryAssociationState_Associating :: RepositoryAssociationState
pattern RepositoryAssociationState_Disassociated :: RepositoryAssociationState
pattern RepositoryAssociationState_Disassociating :: RepositoryAssociationState
pattern RepositoryAssociationState_Failed :: RepositoryAssociationState
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Network.AWS.Data.Text.ToText Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Network.AWS.Data.Text.FromText Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance GHC.Classes.Ord Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationState.RepositoryAssociationState


module Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationSummary

-- | Summary information about a repository association. The
--   <a>ListRepositoryAssociations</a> operation returns a list of
--   <tt>RepositoryAssociationSummary</tt> objects.
--   
--   <i>See:</i> <a>newRepositoryAssociationSummary</a> smart constructor.
data RepositoryAssociationSummary
RepositoryAssociationSummary' :: Maybe Text -> Maybe Text -> Maybe RepositoryAssociationState -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> RepositoryAssociationSummary

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
[$sel:associationArn:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe Text

-- | The repository association ID.
[$sel:associationId:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe Text

-- | The state of the repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
[$sel:state:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe RepositoryAssociationState

-- | The provider type of the repository association.
[$sel:providerType:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe ProviderType

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
[$sel:owner:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe Text

-- | The name of the repository association.
[$sel:name:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
[$sel:connectionArn:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, since the repository
--   association was last updated.
[$sel:lastUpdatedTimeStamp:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe POSIX

-- | Create a value of <a>RepositoryAssociationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_associationArn</a> - The Amazon
--   Resource Name (ARN) of the <a>RepositoryAssociation</a> object. You
--   can retrieve this ARN by calling <a>ListRepositoryAssociations</a> .
--   
--   <a>$sel:associationId:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_associationId</a> - The repository
--   association ID.
--   
--   <a>$sel:state:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_state</a> - The state of the
--   repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:providerType:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_providerType</a> - The provider type
--   of the repository association.
--   
--   <a>$sel:owner:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_owner</a> - The owner of the
--   repository. For an Amazon Web Services CodeCommit repository, this is
--   the Amazon Web Services account ID of the account that owns the
--   repository. For a GitHub, GitHub Enterprise Server, or Bitbucket
--   repository, this is the username for the account that owns the
--   repository. For an S3 repository, it can be the username or Amazon Web
--   Services account ID.
--   
--   <a>$sel:name:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_name</a> - The name of the repository
--   association.
--   
--   <a>$sel:connectionArn:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_connectionArn</a> - The Amazon
--   Resource Name (ARN) of an Amazon Web Services CodeStar Connections
--   connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
--   
--   <a>$sel:lastUpdatedTimeStamp:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_lastUpdatedTimeStamp</a> - The time,
--   in milliseconds since the epoch, since the repository association was
--   last updated.
newRepositoryAssociationSummary :: RepositoryAssociationSummary

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
repositoryAssociationSummary_associationArn :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The repository association ID.
repositoryAssociationSummary_associationId :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The state of the repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
repositoryAssociationSummary_state :: Lens' RepositoryAssociationSummary (Maybe RepositoryAssociationState)

-- | The provider type of the repository association.
repositoryAssociationSummary_providerType :: Lens' RepositoryAssociationSummary (Maybe ProviderType)

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
repositoryAssociationSummary_owner :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The name of the repository association.
repositoryAssociationSummary_name :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
repositoryAssociationSummary_connectionArn :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, since the repository
--   association was last updated.
repositoryAssociationSummary_lastUpdatedTimeStamp :: Lens' RepositoryAssociationSummary (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationSummary.RepositoryAssociationSummary
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationSummary.RepositoryAssociationSummary
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationSummary.RepositoryAssociationSummary
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationSummary.RepositoryAssociationSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationSummary.RepositoryAssociationSummary
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationSummary.RepositoryAssociationSummary
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.RepositoryAssociationSummary.RepositoryAssociationSummary


module Network.AWS.CodeGuruReviewer.Types.RepositoryHeadSourceCodeType

-- | A <a>SourceCodeType</a> that specifies the tip of a branch in an
--   associated repository.
--   
--   <i>See:</i> <a>newRepositoryHeadSourceCodeType</a> smart constructor.
data RepositoryHeadSourceCodeType
RepositoryHeadSourceCodeType' :: Text -> RepositoryHeadSourceCodeType

-- | The name of the branch in an associated repository. The
--   <tt>RepositoryHeadSourceCodeType</tt> specifies the tip of this
--   branch.
[$sel:branchName:RepositoryHeadSourceCodeType'] :: RepositoryHeadSourceCodeType -> Text

-- | Create a value of <a>RepositoryHeadSourceCodeType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchName:RepositoryHeadSourceCodeType'</a>,
--   <a>repositoryHeadSourceCodeType_branchName</a> - The name of the
--   branch in an associated repository. The
--   <tt>RepositoryHeadSourceCodeType</tt> specifies the tip of this
--   branch.
newRepositoryHeadSourceCodeType :: Text -> RepositoryHeadSourceCodeType

-- | The name of the branch in an associated repository. The
--   <tt>RepositoryHeadSourceCodeType</tt> specifies the tip of this
--   branch.
repositoryHeadSourceCodeType_branchName :: Lens' RepositoryHeadSourceCodeType Text
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.RepositoryHeadSourceCodeType.RepositoryHeadSourceCodeType
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.RepositoryHeadSourceCodeType.RepositoryHeadSourceCodeType
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.RepositoryHeadSourceCodeType.RepositoryHeadSourceCodeType
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.RepositoryHeadSourceCodeType.RepositoryHeadSourceCodeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.RepositoryHeadSourceCodeType.RepositoryHeadSourceCodeType
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.RepositoryHeadSourceCodeType.RepositoryHeadSourceCodeType
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.RepositoryHeadSourceCodeType.RepositoryHeadSourceCodeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.RepositoryHeadSourceCodeType.RepositoryHeadSourceCodeType


module Network.AWS.CodeGuruReviewer.Types.RuleMetadata

-- | Metadata about a rule. Rule metadata includes an ID, a name, a list of
--   tags, and a short and long description. CodeGuru Reviewer uses rules
--   to analyze code. A rule's recommendation is included in analysis
--   results if code is detected that violates the rule.
--   
--   <i>See:</i> <a>newRuleMetadata</a> smart constructor.
data RuleMetadata
RuleMetadata' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> RuleMetadata

-- | A long description of the rule.
[$sel:longDescription:RuleMetadata'] :: RuleMetadata -> Maybe Text

-- | Tags that are associated with the rule.
[$sel:ruleTags:RuleMetadata'] :: RuleMetadata -> Maybe (NonEmpty Text)

-- | The ID of the rule.
[$sel:ruleId:RuleMetadata'] :: RuleMetadata -> Maybe Text

-- | The name of the rule.
[$sel:ruleName:RuleMetadata'] :: RuleMetadata -> Maybe Text

-- | A short description of the rule.
[$sel:shortDescription:RuleMetadata'] :: RuleMetadata -> Maybe Text

-- | Create a value of <a>RuleMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:longDescription:RuleMetadata'</a>,
--   <a>ruleMetadata_longDescription</a> - A long description of the rule.
--   
--   <a>$sel:ruleTags:RuleMetadata'</a>, <a>ruleMetadata_ruleTags</a> -
--   Tags that are associated with the rule.
--   
--   <a>$sel:ruleId:RuleMetadata'</a>, <a>ruleMetadata_ruleId</a> - The ID
--   of the rule.
--   
--   <a>$sel:ruleName:RuleMetadata'</a>, <a>ruleMetadata_ruleName</a> - The
--   name of the rule.
--   
--   <a>$sel:shortDescription:RuleMetadata'</a>,
--   <a>ruleMetadata_shortDescription</a> - A short description of the
--   rule.
newRuleMetadata :: RuleMetadata

-- | A long description of the rule.
ruleMetadata_longDescription :: Lens' RuleMetadata (Maybe Text)

-- | Tags that are associated with the rule.
ruleMetadata_ruleTags :: Lens' RuleMetadata (Maybe (NonEmpty Text))

-- | The ID of the rule.
ruleMetadata_ruleId :: Lens' RuleMetadata (Maybe Text)

-- | The name of the rule.
ruleMetadata_ruleName :: Lens' RuleMetadata (Maybe Text)

-- | A short description of the rule.
ruleMetadata_shortDescription :: Lens' RuleMetadata (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.RuleMetadata.RuleMetadata
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.RuleMetadata.RuleMetadata
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.RuleMetadata.RuleMetadata
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.RuleMetadata.RuleMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.RuleMetadata.RuleMetadata
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.RuleMetadata.RuleMetadata
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.RuleMetadata.RuleMetadata


module Network.AWS.CodeGuruReviewer.Types.S3Repository

-- | Information about a repository in an S3 bucket.
--   
--   <i>See:</i> <a>newS3Repository</a> smart constructor.
data S3Repository
S3Repository' :: Text -> Text -> S3Repository

-- | The name of the repository in the S3 bucket.
[$sel:name:S3Repository'] :: S3Repository -> Text

-- | The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
[$sel:bucketName:S3Repository'] :: S3Repository -> Text

-- | Create a value of <a>S3Repository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:S3Repository'</a>, <a>s3Repository_name</a> - The name of
--   the repository in the S3 bucket.
--   
--   <a>$sel:bucketName:S3Repository'</a>, <a>s3Repository_bucketName</a> -
--   The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
newS3Repository :: Text -> Text -> S3Repository

-- | The name of the repository in the S3 bucket.
s3Repository_name :: Lens' S3Repository Text

-- | The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
s3Repository_bucketName :: Lens' S3Repository Text
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.S3Repository.S3Repository
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.S3Repository.S3Repository
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.S3Repository.S3Repository
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.S3Repository.S3Repository
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.S3Repository.S3Repository
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.S3Repository.S3Repository
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.S3Repository.S3Repository


module Network.AWS.CodeGuruReviewer.Types.S3RepositoryDetails

-- | Specifies the name of an S3 bucket and a <tt>CodeArtifacts</tt> object
--   that contains the S3 object keys for a source code .zip file and for a
--   build artifacts .zip file that contains .jar or .class files.
--   
--   <i>See:</i> <a>newS3RepositoryDetails</a> smart constructor.
data S3RepositoryDetails
S3RepositoryDetails' :: Maybe CodeArtifacts -> Maybe Text -> S3RepositoryDetails

-- | A <tt>CodeArtifacts</tt> object. The <tt>CodeArtifacts</tt> object
--   includes the S3 object key for a source code .zip file and for a build
--   artifacts .zip file that contains .jar or .class files.
[$sel:codeArtifacts:S3RepositoryDetails'] :: S3RepositoryDetails -> Maybe CodeArtifacts

-- | The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
[$sel:bucketName:S3RepositoryDetails'] :: S3RepositoryDetails -> Maybe Text

-- | Create a value of <a>S3RepositoryDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeArtifacts:S3RepositoryDetails'</a>,
--   <a>s3RepositoryDetails_codeArtifacts</a> - A <tt>CodeArtifacts</tt>
--   object. The <tt>CodeArtifacts</tt> object includes the S3 object key
--   for a source code .zip file and for a build artifacts .zip file that
--   contains .jar or .class files.
--   
--   <a>$sel:bucketName:S3RepositoryDetails'</a>,
--   <a>s3RepositoryDetails_bucketName</a> - The name of the S3 bucket used
--   for associating a new S3 repository. It must begin with
--   <tt>codeguru-reviewer-</tt>.
newS3RepositoryDetails :: S3RepositoryDetails

-- | A <tt>CodeArtifacts</tt> object. The <tt>CodeArtifacts</tt> object
--   includes the S3 object key for a source code .zip file and for a build
--   artifacts .zip file that contains .jar or .class files.
s3RepositoryDetails_codeArtifacts :: Lens' S3RepositoryDetails (Maybe CodeArtifacts)

-- | The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
s3RepositoryDetails_bucketName :: Lens' S3RepositoryDetails (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.S3RepositoryDetails.S3RepositoryDetails
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.S3RepositoryDetails.S3RepositoryDetails
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.S3RepositoryDetails.S3RepositoryDetails
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.S3RepositoryDetails.S3RepositoryDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.S3RepositoryDetails.S3RepositoryDetails
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.S3RepositoryDetails.S3RepositoryDetails
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.S3RepositoryDetails.S3RepositoryDetails
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.S3RepositoryDetails.S3RepositoryDetails


module Network.AWS.CodeGuruReviewer.Types.S3BucketRepository

-- | Information about an associated repository in an S3 bucket. The
--   associated repository contains a source code .zip file and a build
--   artifacts .zip file that contains .jar or .class files.
--   
--   <i>See:</i> <a>newS3BucketRepository</a> smart constructor.
data S3BucketRepository
S3BucketRepository' :: Maybe S3RepositoryDetails -> Text -> S3BucketRepository

-- | An <tt>S3RepositoryDetails</tt> object that specifies the name of an
--   S3 bucket and a <tt>CodeArtifacts</tt> object. The
--   <tt>CodeArtifacts</tt> object includes the S3 object keys for a source
--   code .zip file and for a build artifacts .zip file.
[$sel:details:S3BucketRepository'] :: S3BucketRepository -> Maybe S3RepositoryDetails

-- | The name of the repository when the <tt>ProviderType</tt> is
--   <tt>S3Bucket</tt>.
[$sel:name:S3BucketRepository'] :: S3BucketRepository -> Text

-- | Create a value of <a>S3BucketRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:details:S3BucketRepository'</a>,
--   <a>s3BucketRepository_details</a> - An <tt>S3RepositoryDetails</tt>
--   object that specifies the name of an S3 bucket and a
--   <tt>CodeArtifacts</tt> object. The <tt>CodeArtifacts</tt> object
--   includes the S3 object keys for a source code .zip file and for a
--   build artifacts .zip file.
--   
--   <a>$sel:name:S3BucketRepository'</a>, <a>s3BucketRepository_name</a> -
--   The name of the repository when the <tt>ProviderType</tt> is
--   <tt>S3Bucket</tt>.
newS3BucketRepository :: Text -> S3BucketRepository

-- | An <tt>S3RepositoryDetails</tt> object that specifies the name of an
--   S3 bucket and a <tt>CodeArtifacts</tt> object. The
--   <tt>CodeArtifacts</tt> object includes the S3 object keys for a source
--   code .zip file and for a build artifacts .zip file.
s3BucketRepository_details :: Lens' S3BucketRepository (Maybe S3RepositoryDetails)

-- | The name of the repository when the <tt>ProviderType</tt> is
--   <tt>S3Bucket</tt>.
s3BucketRepository_name :: Lens' S3BucketRepository Text
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.S3BucketRepository.S3BucketRepository
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.S3BucketRepository.S3BucketRepository
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.S3BucketRepository.S3BucketRepository
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.S3BucketRepository.S3BucketRepository
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.S3BucketRepository.S3BucketRepository
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.S3BucketRepository.S3BucketRepository
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.S3BucketRepository.S3BucketRepository
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.S3BucketRepository.S3BucketRepository


module Network.AWS.CodeGuruReviewer.Types.RepositoryAssociation

-- | Information about a repository association. The
--   <a>DescribeRepositoryAssociation</a> operation returns a
--   <tt>RepositoryAssociation</tt> object.
--   
--   <i>See:</i> <a>newRepositoryAssociation</a> smart constructor.
data RepositoryAssociation
RepositoryAssociation' :: Maybe Text -> Maybe Text -> Maybe RepositoryAssociationState -> Maybe S3RepositoryDetails -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe KMSKeyDetails -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> RepositoryAssociation

-- | The Amazon Resource Name (ARN) identifying the repository association.
[$sel:associationArn:RepositoryAssociation'] :: RepositoryAssociation -> Maybe Text

-- | The ID of the repository association.
[$sel:associationId:RepositoryAssociation'] :: RepositoryAssociation -> Maybe Text

-- | The state of the repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
[$sel:state:RepositoryAssociation'] :: RepositoryAssociation -> Maybe RepositoryAssociationState
[$sel:s3RepositoryDetails:RepositoryAssociation'] :: RepositoryAssociation -> Maybe S3RepositoryDetails

-- | The provider type of the repository association.
[$sel:providerType:RepositoryAssociation'] :: RepositoryAssociation -> Maybe ProviderType

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
[$sel:owner:RepositoryAssociation'] :: RepositoryAssociation -> Maybe Text

-- | The name of the repository.
[$sel:name:RepositoryAssociation'] :: RepositoryAssociation -> Maybe Text

-- | A <tt>KMSKeyDetails</tt> object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
[$sel:kmsKeyDetails:RepositoryAssociation'] :: RepositoryAssociation -> Maybe KMSKeyDetails

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
[$sel:connectionArn:RepositoryAssociation'] :: RepositoryAssociation -> Maybe Text

-- | A description of why the repository association is in the current
--   state.
[$sel:stateReason:RepositoryAssociation'] :: RepositoryAssociation -> Maybe Text

-- | The time, in milliseconds since the epoch, when the repository
--   association was created.
[$sel:createdTimeStamp:RepositoryAssociation'] :: RepositoryAssociation -> Maybe POSIX

-- | The time, in milliseconds since the epoch, when the repository
--   association was last updated.
[$sel:lastUpdatedTimeStamp:RepositoryAssociation'] :: RepositoryAssociation -> Maybe POSIX

-- | Create a value of <a>RepositoryAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_associationArn</a> - The Amazon Resource Name
--   (ARN) identifying the repository association.
--   
--   <a>$sel:associationId:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_associationId</a> - The ID of the repository
--   association.
--   
--   <a>$sel:state:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_state</a> - The state of the repository
--   association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:s3RepositoryDetails:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_s3RepositoryDetails</a> - Undocumented
--   member.
--   
--   <a>$sel:providerType:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_providerType</a> - The provider type of the
--   repository association.
--   
--   <a>$sel:owner:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_owner</a> - The owner of the repository. For
--   an Amazon Web Services CodeCommit repository, this is the Amazon Web
--   Services account ID of the account that owns the repository. For a
--   GitHub, GitHub Enterprise Server, or Bitbucket repository, this is the
--   username for the account that owns the repository. For an S3
--   repository, it can be the username or Amazon Web Services account ID.
--   
--   <a>$sel:name:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_name</a> - The name of the repository.
--   
--   <a>$sel:kmsKeyDetails:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_kmsKeyDetails</a> - A <tt>KMSKeyDetails</tt>
--   object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
--   
--   <a>$sel:connectionArn:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_connectionArn</a> - The Amazon Resource Name
--   (ARN) of an Amazon Web Services CodeStar Connections connection. Its
--   format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
--   
--   <a>$sel:stateReason:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_stateReason</a> - A description of why the
--   repository association is in the current state.
--   
--   <a>$sel:createdTimeStamp:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_createdTimeStamp</a> - The time, in
--   milliseconds since the epoch, when the repository association was
--   created.
--   
--   <a>$sel:lastUpdatedTimeStamp:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_lastUpdatedTimeStamp</a> - The time, in
--   milliseconds since the epoch, when the repository association was last
--   updated.
newRepositoryAssociation :: RepositoryAssociation

-- | The Amazon Resource Name (ARN) identifying the repository association.
repositoryAssociation_associationArn :: Lens' RepositoryAssociation (Maybe Text)

-- | The ID of the repository association.
repositoryAssociation_associationId :: Lens' RepositoryAssociation (Maybe Text)

-- | The state of the repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
repositoryAssociation_state :: Lens' RepositoryAssociation (Maybe RepositoryAssociationState)

-- | Undocumented member.
repositoryAssociation_s3RepositoryDetails :: Lens' RepositoryAssociation (Maybe S3RepositoryDetails)

-- | The provider type of the repository association.
repositoryAssociation_providerType :: Lens' RepositoryAssociation (Maybe ProviderType)

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
repositoryAssociation_owner :: Lens' RepositoryAssociation (Maybe Text)

-- | The name of the repository.
repositoryAssociation_name :: Lens' RepositoryAssociation (Maybe Text)

-- | A <tt>KMSKeyDetails</tt> object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
repositoryAssociation_kmsKeyDetails :: Lens' RepositoryAssociation (Maybe KMSKeyDetails)

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
repositoryAssociation_connectionArn :: Lens' RepositoryAssociation (Maybe Text)

-- | A description of why the repository association is in the current
--   state.
repositoryAssociation_stateReason :: Lens' RepositoryAssociation (Maybe Text)

-- | The time, in milliseconds since the epoch, when the repository
--   association was created.
repositoryAssociation_createdTimeStamp :: Lens' RepositoryAssociation (Maybe UTCTime)

-- | The time, in milliseconds since the epoch, when the repository
--   association was last updated.
repositoryAssociation_lastUpdatedTimeStamp :: Lens' RepositoryAssociation (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.RepositoryAssociation.RepositoryAssociation
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.RepositoryAssociation.RepositoryAssociation
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.RepositoryAssociation.RepositoryAssociation
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.RepositoryAssociation.RepositoryAssociation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.RepositoryAssociation.RepositoryAssociation
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.RepositoryAssociation.RepositoryAssociation
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.RepositoryAssociation.RepositoryAssociation


module Network.AWS.CodeGuruReviewer.Types.Severity
newtype Severity
Severity' :: Text -> Severity
[fromSeverity] :: Severity -> Text
pattern Severity_Critical :: Severity
pattern Severity_High :: Severity
pattern Severity_Info :: Severity
pattern Severity_Low :: Severity
pattern Severity_Medium :: Severity
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Network.AWS.Data.Text.ToText Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Network.AWS.Data.Text.FromText Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance GHC.Classes.Ord Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.Severity.Severity
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.Severity.Severity


module Network.AWS.CodeGuruReviewer.Types.RecommendationSummary

-- | Information about recommendations.
--   
--   <i>See:</i> <a>newRecommendationSummary</a> smart constructor.
data RecommendationSummary
RecommendationSummary' :: Maybe Text -> Maybe Text -> Maybe Severity -> Maybe RuleMetadata -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe RecommendationCategory -> RecommendationSummary

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
[$sel:recommendationId:RecommendationSummary'] :: RecommendationSummary -> Maybe Text

-- | Name of the file on which a recommendation is provided.
[$sel:filePath:RecommendationSummary'] :: RecommendationSummary -> Maybe Text

-- | The severity of the issue in the code that generated this
--   recommendation.
[$sel:severity:RecommendationSummary'] :: RecommendationSummary -> Maybe Severity

-- | Metadata about a rule. Rule metadata includes an ID, a name, a list of
--   tags, and a short and long description. CodeGuru Reviewer uses rules
--   to analyze code. A rule's recommendation is included in analysis
--   results if code is detected that violates the rule.
[$sel:ruleMetadata:RecommendationSummary'] :: RecommendationSummary -> Maybe RuleMetadata

-- | Start line from where the recommendation is applicable in the source
--   commit or source branch.
[$sel:startLine:RecommendationSummary'] :: RecommendationSummary -> Maybe Int

-- | Last line where the recommendation is applicable in the source commit
--   or source branch. For a single line comment the start line and end
--   line values are the same.
[$sel:endLine:RecommendationSummary'] :: RecommendationSummary -> Maybe Int

-- | A description of the recommendation generated by CodeGuru Reviewer for
--   the lines of code between the start line and the end line.
[$sel:description:RecommendationSummary'] :: RecommendationSummary -> Maybe Text

-- | The type of a recommendation.
[$sel:recommendationCategory:RecommendationSummary'] :: RecommendationSummary -> Maybe RecommendationCategory

-- | Create a value of <a>RecommendationSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recommendationId:RecommendationSummary'</a>,
--   <a>recommendationSummary_recommendationId</a> - The recommendation ID
--   that can be used to track the provided recommendations. Later on it
--   can be used to collect the feedback.
--   
--   <a>$sel:filePath:RecommendationSummary'</a>,
--   <a>recommendationSummary_filePath</a> - Name of the file on which a
--   recommendation is provided.
--   
--   <a>$sel:severity:RecommendationSummary'</a>,
--   <a>recommendationSummary_severity</a> - The severity of the issue in
--   the code that generated this recommendation.
--   
--   <a>$sel:ruleMetadata:RecommendationSummary'</a>,
--   <a>recommendationSummary_ruleMetadata</a> - Metadata about a rule.
--   Rule metadata includes an ID, a name, a list of tags, and a short and
--   long description. CodeGuru Reviewer uses rules to analyze code. A
--   rule's recommendation is included in analysis results if code is
--   detected that violates the rule.
--   
--   <a>$sel:startLine:RecommendationSummary'</a>,
--   <a>recommendationSummary_startLine</a> - Start line from where the
--   recommendation is applicable in the source commit or source branch.
--   
--   <a>$sel:endLine:RecommendationSummary'</a>,
--   <a>recommendationSummary_endLine</a> - Last line where the
--   recommendation is applicable in the source commit or source branch.
--   For a single line comment the start line and end line values are the
--   same.
--   
--   <a>$sel:description:RecommendationSummary'</a>,
--   <a>recommendationSummary_description</a> - A description of the
--   recommendation generated by CodeGuru Reviewer for the lines of code
--   between the start line and the end line.
--   
--   <a>$sel:recommendationCategory:RecommendationSummary'</a>,
--   <a>recommendationSummary_recommendationCategory</a> - The type of a
--   recommendation.
newRecommendationSummary :: RecommendationSummary

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
recommendationSummary_recommendationId :: Lens' RecommendationSummary (Maybe Text)

-- | Name of the file on which a recommendation is provided.
recommendationSummary_filePath :: Lens' RecommendationSummary (Maybe Text)

-- | The severity of the issue in the code that generated this
--   recommendation.
recommendationSummary_severity :: Lens' RecommendationSummary (Maybe Severity)

-- | Metadata about a rule. Rule metadata includes an ID, a name, a list of
--   tags, and a short and long description. CodeGuru Reviewer uses rules
--   to analyze code. A rule's recommendation is included in analysis
--   results if code is detected that violates the rule.
recommendationSummary_ruleMetadata :: Lens' RecommendationSummary (Maybe RuleMetadata)

-- | Start line from where the recommendation is applicable in the source
--   commit or source branch.
recommendationSummary_startLine :: Lens' RecommendationSummary (Maybe Int)

-- | Last line where the recommendation is applicable in the source commit
--   or source branch. For a single line comment the start line and end
--   line values are the same.
recommendationSummary_endLine :: Lens' RecommendationSummary (Maybe Int)

-- | A description of the recommendation generated by CodeGuru Reviewer for
--   the lines of code between the start line and the end line.
recommendationSummary_description :: Lens' RecommendationSummary (Maybe Text)

-- | The type of a recommendation.
recommendationSummary_recommendationCategory :: Lens' RecommendationSummary (Maybe RecommendationCategory)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.RecommendationSummary.RecommendationSummary
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.RecommendationSummary.RecommendationSummary
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.RecommendationSummary.RecommendationSummary
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.RecommendationSummary.RecommendationSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.RecommendationSummary.RecommendationSummary
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.RecommendationSummary.RecommendationSummary
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.RecommendationSummary.RecommendationSummary


module Network.AWS.CodeGuruReviewer.Types.ThirdPartySourceRepository

-- | Information about a third-party source repository connected to
--   CodeGuru Reviewer.
--   
--   <i>See:</i> <a>newThirdPartySourceRepository</a> smart constructor.
data ThirdPartySourceRepository
ThirdPartySourceRepository' :: Text -> Text -> Text -> ThirdPartySourceRepository

-- | The name of the third party source repository.
[$sel:name:ThirdPartySourceRepository'] :: ThirdPartySourceRepository -> Text

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
[$sel:connectionArn:ThirdPartySourceRepository'] :: ThirdPartySourceRepository -> Text

-- | The owner of the repository. For a GitHub, GitHub Enterprise, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, this can be the username or
--   Amazon Web Services account ID.
[$sel:owner:ThirdPartySourceRepository'] :: ThirdPartySourceRepository -> Text

-- | Create a value of <a>ThirdPartySourceRepository</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ThirdPartySourceRepository'</a>,
--   <a>thirdPartySourceRepository_name</a> - The name of the third party
--   source repository.
--   
--   <a>$sel:connectionArn:ThirdPartySourceRepository'</a>,
--   <a>thirdPartySourceRepository_connectionArn</a> - The Amazon Resource
--   Name (ARN) of an Amazon Web Services CodeStar Connections connection.
--   Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
--   
--   <a>$sel:owner:ThirdPartySourceRepository'</a>,
--   <a>thirdPartySourceRepository_owner</a> - The owner of the repository.
--   For a GitHub, GitHub Enterprise, or Bitbucket repository, this is the
--   username for the account that owns the repository. For an S3
--   repository, this can be the username or Amazon Web Services account
--   ID.
newThirdPartySourceRepository :: Text -> Text -> Text -> ThirdPartySourceRepository

-- | The name of the third party source repository.
thirdPartySourceRepository_name :: Lens' ThirdPartySourceRepository Text

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
thirdPartySourceRepository_connectionArn :: Lens' ThirdPartySourceRepository Text

-- | The owner of the repository. For a GitHub, GitHub Enterprise, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, this can be the username or
--   Amazon Web Services account ID.
thirdPartySourceRepository_owner :: Lens' ThirdPartySourceRepository Text
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.ThirdPartySourceRepository.ThirdPartySourceRepository
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.ThirdPartySourceRepository.ThirdPartySourceRepository
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.ThirdPartySourceRepository.ThirdPartySourceRepository
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.ThirdPartySourceRepository.ThirdPartySourceRepository
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.ThirdPartySourceRepository.ThirdPartySourceRepository
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.ThirdPartySourceRepository.ThirdPartySourceRepository
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.ThirdPartySourceRepository.ThirdPartySourceRepository


module Network.AWS.CodeGuruReviewer.Types.Repository

-- | Information about an associated Amazon Web Services CodeCommit
--   repository or an associated repository that is managed by Amazon Web
--   Services CodeStar Connections (for example, Bitbucket). This
--   <tt>Repository</tt> object is not used if your source code is in an
--   associated GitHub repository.
--   
--   <i>See:</i> <a>newRepository</a> smart constructor.
data Repository
Repository' :: Maybe CodeCommitRepository -> Maybe ThirdPartySourceRepository -> Maybe S3Repository -> Maybe ThirdPartySourceRepository -> Repository

-- | Information about an Amazon Web Services CodeCommit repository.
[$sel:codeCommit:Repository'] :: Repository -> Maybe CodeCommitRepository

-- | Information about a GitHub Enterprise Server repository.
[$sel:gitHubEnterpriseServer:Repository'] :: Repository -> Maybe ThirdPartySourceRepository
[$sel:s3Bucket:Repository'] :: Repository -> Maybe S3Repository

-- | Information about a Bitbucket repository.
[$sel:bitbucket:Repository'] :: Repository -> Maybe ThirdPartySourceRepository

-- | Create a value of <a>Repository</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeCommit:Repository'</a>, <a>repository_codeCommit</a> -
--   Information about an Amazon Web Services CodeCommit repository.
--   
--   <a>$sel:gitHubEnterpriseServer:Repository'</a>,
--   <a>repository_gitHubEnterpriseServer</a> - Information about a GitHub
--   Enterprise Server repository.
--   
--   <a>$sel:s3Bucket:Repository'</a>, <a>repository_s3Bucket</a> -
--   Undocumented member.
--   
--   <a>$sel:bitbucket:Repository'</a>, <a>repository_bitbucket</a> -
--   Information about a Bitbucket repository.
newRepository :: Repository

-- | Information about an Amazon Web Services CodeCommit repository.
repository_codeCommit :: Lens' Repository (Maybe CodeCommitRepository)

-- | Information about a GitHub Enterprise Server repository.
repository_gitHubEnterpriseServer :: Lens' Repository (Maybe ThirdPartySourceRepository)

-- | Undocumented member.
repository_s3Bucket :: Lens' Repository (Maybe S3Repository)

-- | Information about a Bitbucket repository.
repository_bitbucket :: Lens' Repository (Maybe ThirdPartySourceRepository)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.Repository.Repository
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.Repository.Repository
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.Repository.Repository
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.Repository.Repository
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.Repository.Repository
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.Repository.Repository
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.Repository.Repository


module Network.AWS.CodeGuruReviewer.Types.Type
newtype Type
Type' :: Text -> Type
[fromType] :: Type -> Text
pattern Type_PullRequest :: Type
pattern Type_RepositoryAnalysis :: Type
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Network.AWS.Data.Text.ToText Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Network.AWS.Data.Text.FromText Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.Type.Type
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.Type.Type
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.Type.Type
instance GHC.Classes.Ord Network.AWS.CodeGuruReviewer.Types.Type.Type
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.Type.Type
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.Type.Type
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.Type.Type


module Network.AWS.CodeGuruReviewer.Types.VendorName
newtype VendorName
VendorName' :: Text -> VendorName
[fromVendorName] :: VendorName -> Text
pattern VendorName_GitHub :: VendorName
pattern VendorName_GitLab :: VendorName
pattern VendorName_NativeS3 :: VendorName
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Network.AWS.Data.Text.ToText Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Network.AWS.Data.Text.FromText Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance GHC.Classes.Ord Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.VendorName.VendorName


module Network.AWS.CodeGuruReviewer.Types.RequestMetadata

-- | Metadata that is associated with a code review. This applies to both
--   pull request and repository analysis code reviews.
--   
--   <i>See:</i> <a>newRequestMetadata</a> smart constructor.
data RequestMetadata
RequestMetadata' :: Maybe Text -> Maybe EventInfo -> Maybe VendorName -> Maybe Text -> RequestMetadata

-- | The ID of the request. This is required for a pull request code
--   review.
[$sel:requestId:RequestMetadata'] :: RequestMetadata -> Maybe Text

-- | Information about the event associated with a code review.
[$sel:eventInfo:RequestMetadata'] :: RequestMetadata -> Maybe EventInfo

-- | The name of the repository vendor used to upload code to an S3 bucket
--   for a CI/CD code review. For example, if code and artifacts are
--   uploaded to an S3 bucket for a CI/CD code review by GitHub scripts
--   from a GitHub repository, then the repository association's
--   <tt>ProviderType</tt> is <tt>S3Bucket</tt> and the CI/CD repository
--   vendor name is GitHub. For more information, see the definition for
--   <tt>ProviderType</tt> in <a>RepositoryAssociation</a>.
[$sel:vendorName:RequestMetadata'] :: RequestMetadata -> Maybe VendorName

-- | An identifier, such as a name or account ID, that is associated with
--   the requester. The <tt>Requester</tt> is used to capture the
--   <tt>author/actor</tt> name of the event request.
[$sel:requester:RequestMetadata'] :: RequestMetadata -> Maybe Text

-- | Create a value of <a>RequestMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:RequestMetadata'</a>,
--   <a>requestMetadata_requestId</a> - The ID of the request. This is
--   required for a pull request code review.
--   
--   <a>$sel:eventInfo:RequestMetadata'</a>,
--   <a>requestMetadata_eventInfo</a> - Information about the event
--   associated with a code review.
--   
--   <a>$sel:vendorName:RequestMetadata'</a>,
--   <a>requestMetadata_vendorName</a> - The name of the repository vendor
--   used to upload code to an S3 bucket for a CI/CD code review. For
--   example, if code and artifacts are uploaded to an S3 bucket for a
--   CI/CD code review by GitHub scripts from a GitHub repository, then the
--   repository association's <tt>ProviderType</tt> is <tt>S3Bucket</tt>
--   and the CI/CD repository vendor name is GitHub. For more information,
--   see the definition for <tt>ProviderType</tt> in
--   <a>RepositoryAssociation</a>.
--   
--   <a>$sel:requester:RequestMetadata'</a>,
--   <a>requestMetadata_requester</a> - An identifier, such as a name or
--   account ID, that is associated with the requester. The
--   <tt>Requester</tt> is used to capture the <tt>author/actor</tt> name
--   of the event request.
newRequestMetadata :: RequestMetadata

-- | The ID of the request. This is required for a pull request code
--   review.
requestMetadata_requestId :: Lens' RequestMetadata (Maybe Text)

-- | Information about the event associated with a code review.
requestMetadata_eventInfo :: Lens' RequestMetadata (Maybe EventInfo)

-- | The name of the repository vendor used to upload code to an S3 bucket
--   for a CI/CD code review. For example, if code and artifacts are
--   uploaded to an S3 bucket for a CI/CD code review by GitHub scripts
--   from a GitHub repository, then the repository association's
--   <tt>ProviderType</tt> is <tt>S3Bucket</tt> and the CI/CD repository
--   vendor name is GitHub. For more information, see the definition for
--   <tt>ProviderType</tt> in <a>RepositoryAssociation</a>.
requestMetadata_vendorName :: Lens' RequestMetadata (Maybe VendorName)

-- | An identifier, such as a name or account ID, that is associated with
--   the requester. The <tt>Requester</tt> is used to capture the
--   <tt>author/actor</tt> name of the event request.
requestMetadata_requester :: Lens' RequestMetadata (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.RequestMetadata.RequestMetadata
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.RequestMetadata.RequestMetadata
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.RequestMetadata.RequestMetadata
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.RequestMetadata.RequestMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.RequestMetadata.RequestMetadata
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.RequestMetadata.RequestMetadata
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.RequestMetadata.RequestMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.RequestMetadata.RequestMetadata


module Network.AWS.CodeGuruReviewer.Types.SourceCodeType

-- | Specifies the source code that is analyzed in a code review.
--   
--   <i>See:</i> <a>newSourceCodeType</a> smart constructor.
data SourceCodeType
SourceCodeType' :: Maybe S3BucketRepository -> Maybe RequestMetadata -> Maybe RepositoryHeadSourceCodeType -> Maybe CommitDiffSourceCodeType -> Maybe BranchDiffSourceCodeType -> SourceCodeType

-- | Information about an associated repository in an S3 bucket that
--   includes its name and an <tt>S3RepositoryDetails</tt> object. The
--   <tt>S3RepositoryDetails</tt> object includes the name of an S3 bucket,
--   an S3 key for a source code .zip file, and an S3 key for a build
--   artifacts .zip file. <tt>S3BucketRepository</tt> is required in
--   <a>SourceCodeType</a> for <tt>S3BucketRepository</tt> based code
--   reviews.
[$sel:s3BucketRepository:SourceCodeType'] :: SourceCodeType -> Maybe S3BucketRepository

-- | Metadata that is associated with a code review. This applies to any
--   type of code review supported by CodeGuru Reviewer. The
--   <tt>RequestMetadaa</tt> field captures any event metadata. For
--   example, it might capture metadata associated with an event trigger,
--   such as a push or a pull request.
[$sel:requestMetadata:SourceCodeType'] :: SourceCodeType -> Maybe RequestMetadata
[$sel:repositoryHead:SourceCodeType'] :: SourceCodeType -> Maybe RepositoryHeadSourceCodeType

-- | A <a>SourceCodeType</a> that specifies a commit diff created by a pull
--   request on an associated repository.
[$sel:commitDiff:SourceCodeType'] :: SourceCodeType -> Maybe CommitDiffSourceCodeType

-- | A type of <a>SourceCodeType</a> that specifies a source branch name
--   and a destination branch name in an associated repository.
[$sel:branchDiff:SourceCodeType'] :: SourceCodeType -> Maybe BranchDiffSourceCodeType

-- | Create a value of <a>SourceCodeType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3BucketRepository:SourceCodeType'</a>,
--   <a>sourceCodeType_s3BucketRepository</a> - Information about an
--   associated repository in an S3 bucket that includes its name and an
--   <tt>S3RepositoryDetails</tt> object. The <tt>S3RepositoryDetails</tt>
--   object includes the name of an S3 bucket, an S3 key for a source code
--   .zip file, and an S3 key for a build artifacts .zip file.
--   <tt>S3BucketRepository</tt> is required in <a>SourceCodeType</a> for
--   <tt>S3BucketRepository</tt> based code reviews.
--   
--   <a>$sel:requestMetadata:SourceCodeType'</a>,
--   <a>sourceCodeType_requestMetadata</a> - Metadata that is associated
--   with a code review. This applies to any type of code review supported
--   by CodeGuru Reviewer. The <tt>RequestMetadaa</tt> field captures any
--   event metadata. For example, it might capture metadata associated with
--   an event trigger, such as a push or a pull request.
--   
--   <a>$sel:repositoryHead:SourceCodeType'</a>,
--   <a>sourceCodeType_repositoryHead</a> - Undocumented member.
--   
--   <a>$sel:commitDiff:SourceCodeType'</a>,
--   <a>sourceCodeType_commitDiff</a> - A <a>SourceCodeType</a> that
--   specifies a commit diff created by a pull request on an associated
--   repository.
--   
--   <a>$sel:branchDiff:SourceCodeType'</a>,
--   <a>sourceCodeType_branchDiff</a> - A type of <a>SourceCodeType</a>
--   that specifies a source branch name and a destination branch name in
--   an associated repository.
newSourceCodeType :: SourceCodeType

-- | Information about an associated repository in an S3 bucket that
--   includes its name and an <tt>S3RepositoryDetails</tt> object. The
--   <tt>S3RepositoryDetails</tt> object includes the name of an S3 bucket,
--   an S3 key for a source code .zip file, and an S3 key for a build
--   artifacts .zip file. <tt>S3BucketRepository</tt> is required in
--   <a>SourceCodeType</a> for <tt>S3BucketRepository</tt> based code
--   reviews.
sourceCodeType_s3BucketRepository :: Lens' SourceCodeType (Maybe S3BucketRepository)

-- | Metadata that is associated with a code review. This applies to any
--   type of code review supported by CodeGuru Reviewer. The
--   <tt>RequestMetadaa</tt> field captures any event metadata. For
--   example, it might capture metadata associated with an event trigger,
--   such as a push or a pull request.
sourceCodeType_requestMetadata :: Lens' SourceCodeType (Maybe RequestMetadata)

-- | Undocumented member.
sourceCodeType_repositoryHead :: Lens' SourceCodeType (Maybe RepositoryHeadSourceCodeType)

-- | A <a>SourceCodeType</a> that specifies a commit diff created by a pull
--   request on an associated repository.
sourceCodeType_commitDiff :: Lens' SourceCodeType (Maybe CommitDiffSourceCodeType)

-- | A type of <a>SourceCodeType</a> that specifies a source branch name
--   and a destination branch name in an associated repository.
sourceCodeType_branchDiff :: Lens' SourceCodeType (Maybe BranchDiffSourceCodeType)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.SourceCodeType.SourceCodeType
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.SourceCodeType.SourceCodeType
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.SourceCodeType.SourceCodeType
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.SourceCodeType.SourceCodeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.SourceCodeType.SourceCodeType
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.SourceCodeType.SourceCodeType
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.SourceCodeType.SourceCodeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.SourceCodeType.SourceCodeType


module Network.AWS.CodeGuruReviewer.Types.RepositoryAnalysis

-- | A code review type that analyzes all code under a specified branch in
--   an associated repository. The associated repository is specified using
--   its ARN when you call <a>CreateCodeReview</a> .
--   
--   <i>See:</i> <a>newRepositoryAnalysis</a> smart constructor.
data RepositoryAnalysis
RepositoryAnalysis' :: Maybe RepositoryHeadSourceCodeType -> Maybe SourceCodeType -> RepositoryAnalysis

-- | A <a>SourceCodeType</a> that specifies the tip of a branch in an
--   associated repository.
[$sel:repositoryHead:RepositoryAnalysis'] :: RepositoryAnalysis -> Maybe RepositoryHeadSourceCodeType
[$sel:sourceCodeType:RepositoryAnalysis'] :: RepositoryAnalysis -> Maybe SourceCodeType

-- | Create a value of <a>RepositoryAnalysis</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryHead:RepositoryAnalysis'</a>,
--   <a>repositoryAnalysis_repositoryHead</a> - A <a>SourceCodeType</a>
--   that specifies the tip of a branch in an associated repository.
--   
--   <a>$sel:sourceCodeType:RepositoryAnalysis'</a>,
--   <a>repositoryAnalysis_sourceCodeType</a> - Undocumented member.
newRepositoryAnalysis :: RepositoryAnalysis

-- | A <a>SourceCodeType</a> that specifies the tip of a branch in an
--   associated repository.
repositoryAnalysis_repositoryHead :: Lens' RepositoryAnalysis (Maybe RepositoryHeadSourceCodeType)

-- | Undocumented member.
repositoryAnalysis_sourceCodeType :: Lens' RepositoryAnalysis (Maybe SourceCodeType)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.RepositoryAnalysis.RepositoryAnalysis
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.RepositoryAnalysis.RepositoryAnalysis
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.RepositoryAnalysis.RepositoryAnalysis
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.RepositoryAnalysis.RepositoryAnalysis
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.RepositoryAnalysis.RepositoryAnalysis
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.RepositoryAnalysis.RepositoryAnalysis
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.RepositoryAnalysis.RepositoryAnalysis


module Network.AWS.CodeGuruReviewer.Types.CodeReviewType

-- | The type of a code review. There are two code review types:
--   
--   <ul>
--   <li><tt>PullRequest</tt> - A code review that is automatically
--   triggered by a pull request on an associated repository.</li>
--   <li><tt>RepositoryAnalysis</tt> - A code review that analyzes all code
--   under a specified branch in an associated repository. The associated
--   repository is specified using its ARN in <a>CreateCodeReview</a>
--   .</li>
--   </ul>
--   
--   <i>See:</i> <a>newCodeReviewType</a> smart constructor.
data CodeReviewType
CodeReviewType' :: Maybe [AnalysisType] -> RepositoryAnalysis -> CodeReviewType

-- | They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
[$sel:analysisTypes:CodeReviewType'] :: CodeReviewType -> Maybe [AnalysisType]

-- | A code review that analyzes all code under a specified branch in an
--   associated repository. The associated repository is specified using
--   its ARN in <a>CreateCodeReview</a> .
[$sel:repositoryAnalysis:CodeReviewType'] :: CodeReviewType -> RepositoryAnalysis

-- | Create a value of <a>CodeReviewType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:analysisTypes:CodeReviewType'</a>,
--   <a>codeReviewType_analysisTypes</a> - They types of analysis performed
--   during a repository analysis or a pull request review. You can specify
--   either <tt>Security</tt>, <tt>CodeQuality</tt>, or both.
--   
--   <a>$sel:repositoryAnalysis:CodeReviewType'</a>,
--   <a>codeReviewType_repositoryAnalysis</a> - A code review that analyzes
--   all code under a specified branch in an associated repository. The
--   associated repository is specified using its ARN in
--   <a>CreateCodeReview</a> .
newCodeReviewType :: RepositoryAnalysis -> CodeReviewType

-- | They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
codeReviewType_analysisTypes :: Lens' CodeReviewType (Maybe [AnalysisType])

-- | A code review that analyzes all code under a specified branch in an
--   associated repository. The associated repository is specified using
--   its ARN in <a>CreateCodeReview</a> .
codeReviewType_repositoryAnalysis :: Lens' CodeReviewType RepositoryAnalysis
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.CodeReviewType.CodeReviewType
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.CodeReviewType.CodeReviewType
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.CodeReviewType.CodeReviewType
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.CodeReviewType.CodeReviewType
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.CodeReviewType.CodeReviewType
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.CodeReviewType.CodeReviewType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.Types.CodeReviewType.CodeReviewType


module Network.AWS.CodeGuruReviewer.Types.CodeReviewSummary

-- | Information about the summary of the code review.
--   
--   <i>See:</i> <a>newCodeReviewSummary</a> smart constructor.
data CodeReviewSummary
CodeReviewSummary' :: Maybe JobState -> Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Type -> Maybe SourceCodeType -> Maybe MetricsSummary -> Maybe POSIX -> Maybe POSIX -> CodeReviewSummary

-- | The state of the code review.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
[$sel:state:CodeReviewSummary'] :: CodeReviewSummary -> Maybe JobState

-- | The pull request ID for the code review.
[$sel:pullRequestId:CodeReviewSummary'] :: CodeReviewSummary -> Maybe Text

-- | The provider type of the repository association.
[$sel:providerType:CodeReviewSummary'] :: CodeReviewSummary -> Maybe ProviderType

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
[$sel:owner:CodeReviewSummary'] :: CodeReviewSummary -> Maybe Text

-- | The name of the code review.
[$sel:name:CodeReviewSummary'] :: CodeReviewSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
[$sel:codeReviewArn:CodeReviewSummary'] :: CodeReviewSummary -> Maybe Text

-- | The name of the repository.
[$sel:repositoryName:CodeReviewSummary'] :: CodeReviewSummary -> Maybe Text

-- | The type of the code review.
[$sel:type':CodeReviewSummary'] :: CodeReviewSummary -> Maybe Type
[$sel:sourceCodeType:CodeReviewSummary'] :: CodeReviewSummary -> Maybe SourceCodeType

-- | The statistics from the code review.
[$sel:metricsSummary:CodeReviewSummary'] :: CodeReviewSummary -> Maybe MetricsSummary

-- | The time, in milliseconds since the epoch, when the code review was
--   created.
[$sel:createdTimeStamp:CodeReviewSummary'] :: CodeReviewSummary -> Maybe POSIX

-- | The time, in milliseconds since the epoch, when the code review was
--   last updated.
[$sel:lastUpdatedTimeStamp:CodeReviewSummary'] :: CodeReviewSummary -> Maybe POSIX

-- | Create a value of <a>CodeReviewSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CodeReviewSummary'</a>, <a>codeReviewSummary_state</a> -
--   The state of the code review.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
--   
--   <a>$sel:pullRequestId:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_pullRequestId</a> - The pull request ID for the
--   code review.
--   
--   <a>$sel:providerType:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_providerType</a> - The provider type of the
--   repository association.
--   
--   <a>$sel:owner:CodeReviewSummary'</a>, <a>codeReviewSummary_owner</a> -
--   The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
--   
--   <a>$sel:name:CodeReviewSummary'</a>, <a>codeReviewSummary_name</a> -
--   The name of the code review.
--   
--   <a>$sel:codeReviewArn:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_codeReviewArn</a> - The Amazon Resource Name
--   (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:repositoryName:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_repositoryName</a> - The name of the repository.
--   
--   <a>$sel:type':CodeReviewSummary'</a>, <a>codeReviewSummary_type</a> -
--   The type of the code review.
--   
--   <a>$sel:sourceCodeType:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_sourceCodeType</a> - Undocumented member.
--   
--   <a>$sel:metricsSummary:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_metricsSummary</a> - The statistics from the code
--   review.
--   
--   <a>$sel:createdTimeStamp:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_createdTimeStamp</a> - The time, in milliseconds
--   since the epoch, when the code review was created.
--   
--   <a>$sel:lastUpdatedTimeStamp:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_lastUpdatedTimeStamp</a> - The time, in
--   milliseconds since the epoch, when the code review was last updated.
newCodeReviewSummary :: CodeReviewSummary

-- | The state of the code review.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
codeReviewSummary_state :: Lens' CodeReviewSummary (Maybe JobState)

-- | The pull request ID for the code review.
codeReviewSummary_pullRequestId :: Lens' CodeReviewSummary (Maybe Text)

-- | The provider type of the repository association.
codeReviewSummary_providerType :: Lens' CodeReviewSummary (Maybe ProviderType)

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
codeReviewSummary_owner :: Lens' CodeReviewSummary (Maybe Text)

-- | The name of the code review.
codeReviewSummary_name :: Lens' CodeReviewSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
codeReviewSummary_codeReviewArn :: Lens' CodeReviewSummary (Maybe Text)

-- | The name of the repository.
codeReviewSummary_repositoryName :: Lens' CodeReviewSummary (Maybe Text)

-- | The type of the code review.
codeReviewSummary_type :: Lens' CodeReviewSummary (Maybe Type)

-- | Undocumented member.
codeReviewSummary_sourceCodeType :: Lens' CodeReviewSummary (Maybe SourceCodeType)

-- | The statistics from the code review.
codeReviewSummary_metricsSummary :: Lens' CodeReviewSummary (Maybe MetricsSummary)

-- | The time, in milliseconds since the epoch, when the code review was
--   created.
codeReviewSummary_createdTimeStamp :: Lens' CodeReviewSummary (Maybe UTCTime)

-- | The time, in milliseconds since the epoch, when the code review was
--   last updated.
codeReviewSummary_lastUpdatedTimeStamp :: Lens' CodeReviewSummary (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.CodeReviewSummary.CodeReviewSummary
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.CodeReviewSummary.CodeReviewSummary
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.CodeReviewSummary.CodeReviewSummary
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.CodeReviewSummary.CodeReviewSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.CodeReviewSummary.CodeReviewSummary
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.CodeReviewSummary.CodeReviewSummary
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.CodeReviewSummary.CodeReviewSummary


module Network.AWS.CodeGuruReviewer.Types.CodeReview

-- | Information about a code review. A code review belongs to the
--   associated repository that contains the reviewed code.
--   
--   <i>See:</i> <a>newCodeReview</a> smart constructor.
data CodeReview
CodeReview' :: Maybe Text -> Maybe JobState -> Maybe Metrics -> Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Type -> Maybe SourceCodeType -> Maybe Text -> Maybe POSIX -> Maybe [AnalysisType] -> Maybe POSIX -> CodeReview

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   that contains the reviewed source code. You can retrieve associated
--   repository ARNs by calling <a>ListRepositoryAssociations</a> .
[$sel:associationArn:CodeReview'] :: CodeReview -> Maybe Text

-- | The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
[$sel:state:CodeReview'] :: CodeReview -> Maybe JobState

-- | The statistics from the code review.
[$sel:metrics:CodeReview'] :: CodeReview -> Maybe Metrics

-- | The pull request ID for the code review.
[$sel:pullRequestId:CodeReview'] :: CodeReview -> Maybe Text

-- | The type of repository that contains the reviewed code (for example,
--   GitHub or Bitbucket).
[$sel:providerType:CodeReview'] :: CodeReview -> Maybe ProviderType

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
[$sel:owner:CodeReview'] :: CodeReview -> Maybe Text

-- | The name of the code review.
[$sel:name:CodeReview'] :: CodeReview -> Maybe Text

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
[$sel:codeReviewArn:CodeReview'] :: CodeReview -> Maybe Text

-- | The name of the repository.
[$sel:repositoryName:CodeReview'] :: CodeReview -> Maybe Text

-- | The type of code review.
[$sel:type':CodeReview'] :: CodeReview -> Maybe Type

-- | The type of the source code for the code review.
[$sel:sourceCodeType:CodeReview'] :: CodeReview -> Maybe SourceCodeType

-- | The reason for the state of the code review.
[$sel:stateReason:CodeReview'] :: CodeReview -> Maybe Text

-- | The time, in milliseconds since the epoch, when the code review was
--   created.
[$sel:createdTimeStamp:CodeReview'] :: CodeReview -> Maybe POSIX

-- | They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
[$sel:analysisTypes:CodeReview'] :: CodeReview -> Maybe [AnalysisType]

-- | The time, in milliseconds since the epoch, when the code review was
--   last updated.
[$sel:lastUpdatedTimeStamp:CodeReview'] :: CodeReview -> Maybe POSIX

-- | Create a value of <a>CodeReview</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:CodeReview'</a>,
--   <a>codeReview_associationArn</a> - The Amazon Resource Name (ARN) of
--   the <a>RepositoryAssociation</a> that contains the reviewed source
--   code. You can retrieve associated repository ARNs by calling
--   <a>ListRepositoryAssociations</a> .
--   
--   <a>$sel:state:CodeReview'</a>, <a>codeReview_state</a> - The valid
--   code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
--   
--   <a>$sel:metrics:CodeReview'</a>, <a>codeReview_metrics</a> - The
--   statistics from the code review.
--   
--   <a>$sel:pullRequestId:CodeReview'</a>, <a>codeReview_pullRequestId</a>
--   - The pull request ID for the code review.
--   
--   <a>$sel:providerType:CodeReview'</a>, <a>codeReview_providerType</a> -
--   The type of repository that contains the reviewed code (for example,
--   GitHub or Bitbucket).
--   
--   <a>$sel:owner:CodeReview'</a>, <a>codeReview_owner</a> - The owner of
--   the repository. For an Amazon Web Services CodeCommit repository, this
--   is the Amazon Web Services account ID of the account that owns the
--   repository. For a GitHub, GitHub Enterprise Server, or Bitbucket
--   repository, this is the username for the account that owns the
--   repository. For an S3 repository, it can be the username or Amazon Web
--   Services account ID.
--   
--   <a>$sel:name:CodeReview'</a>, <a>codeReview_name</a> - The name of the
--   code review.
--   
--   <a>$sel:codeReviewArn:CodeReview'</a>, <a>codeReview_codeReviewArn</a>
--   - The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:repositoryName:CodeReview'</a>,
--   <a>codeReview_repositoryName</a> - The name of the repository.
--   
--   <a>$sel:type':CodeReview'</a>, <a>codeReview_type</a> - The type of
--   code review.
--   
--   <a>$sel:sourceCodeType:CodeReview'</a>,
--   <a>codeReview_sourceCodeType</a> - The type of the source code for the
--   code review.
--   
--   <a>$sel:stateReason:CodeReview'</a>, <a>codeReview_stateReason</a> -
--   The reason for the state of the code review.
--   
--   <a>$sel:createdTimeStamp:CodeReview'</a>,
--   <a>codeReview_createdTimeStamp</a> - The time, in milliseconds since
--   the epoch, when the code review was created.
--   
--   <a>$sel:analysisTypes:CodeReview'</a>, <a>codeReview_analysisTypes</a>
--   - They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
--   
--   <a>$sel:lastUpdatedTimeStamp:CodeReview'</a>,
--   <a>codeReview_lastUpdatedTimeStamp</a> - The time, in milliseconds
--   since the epoch, when the code review was last updated.
newCodeReview :: CodeReview

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   that contains the reviewed source code. You can retrieve associated
--   repository ARNs by calling <a>ListRepositoryAssociations</a> .
codeReview_associationArn :: Lens' CodeReview (Maybe Text)

-- | The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
codeReview_state :: Lens' CodeReview (Maybe JobState)

-- | The statistics from the code review.
codeReview_metrics :: Lens' CodeReview (Maybe Metrics)

-- | The pull request ID for the code review.
codeReview_pullRequestId :: Lens' CodeReview (Maybe Text)

-- | The type of repository that contains the reviewed code (for example,
--   GitHub or Bitbucket).
codeReview_providerType :: Lens' CodeReview (Maybe ProviderType)

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
codeReview_owner :: Lens' CodeReview (Maybe Text)

-- | The name of the code review.
codeReview_name :: Lens' CodeReview (Maybe Text)

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
codeReview_codeReviewArn :: Lens' CodeReview (Maybe Text)

-- | The name of the repository.
codeReview_repositoryName :: Lens' CodeReview (Maybe Text)

-- | The type of code review.
codeReview_type :: Lens' CodeReview (Maybe Type)

-- | The type of the source code for the code review.
codeReview_sourceCodeType :: Lens' CodeReview (Maybe SourceCodeType)

-- | The reason for the state of the code review.
codeReview_stateReason :: Lens' CodeReview (Maybe Text)

-- | The time, in milliseconds since the epoch, when the code review was
--   created.
codeReview_createdTimeStamp :: Lens' CodeReview (Maybe UTCTime)

-- | They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
codeReview_analysisTypes :: Lens' CodeReview (Maybe [AnalysisType])

-- | The time, in milliseconds since the epoch, when the code review was
--   last updated.
codeReview_lastUpdatedTimeStamp :: Lens' CodeReview (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.Types.CodeReview.CodeReview
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.Types.CodeReview.CodeReview
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.Types.CodeReview.CodeReview
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.Types.CodeReview.CodeReview
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeGuruReviewer.Types.CodeReview.CodeReview
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.Types.CodeReview.CodeReview
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.Types.CodeReview.CodeReview


module Network.AWS.CodeGuruReviewer.Types

-- | API version <tt>2019-09-19</tt> of the Amazon CodeGuru Reviewer SDK
--   configuration.
defaultService :: Service

-- | The input fails to satisfy the specified constraints.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation would cause a conflict with the current state
--   of a service resource associated with the request. Resolve the
--   conflict before retrying this request.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource specified in the request was not found.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The server encountered an internal error and is unable to complete the
--   request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource specified in the request was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AnalysisType
AnalysisType' :: Text -> AnalysisType
[fromAnalysisType] :: AnalysisType -> Text
pattern AnalysisType_CodeQuality :: AnalysisType
pattern AnalysisType_Security :: AnalysisType
newtype EncryptionOption
EncryptionOption' :: Text -> EncryptionOption
[fromEncryptionOption] :: EncryptionOption -> Text
pattern EncryptionOption_AWS_OWNED_CMK :: EncryptionOption
pattern EncryptionOption_CUSTOMER_MANAGED_CMK :: EncryptionOption
newtype JobState
JobState' :: Text -> JobState
[fromJobState] :: JobState -> Text
pattern JobState_Completed :: JobState
pattern JobState_Deleting :: JobState
pattern JobState_Failed :: JobState
pattern JobState_Pending :: JobState
newtype ProviderType
ProviderType' :: Text -> ProviderType
[fromProviderType] :: ProviderType -> Text
pattern ProviderType_Bitbucket :: ProviderType
pattern ProviderType_CodeCommit :: ProviderType
pattern ProviderType_GitHub :: ProviderType
pattern ProviderType_GitHubEnterpriseServer :: ProviderType
pattern ProviderType_S3Bucket :: ProviderType
newtype Reaction
Reaction' :: Text -> Reaction
[fromReaction] :: Reaction -> Text
pattern Reaction_ThumbsDown :: Reaction
pattern Reaction_ThumbsUp :: Reaction
newtype RecommendationCategory
RecommendationCategory' :: Text -> RecommendationCategory
[fromRecommendationCategory] :: RecommendationCategory -> Text
pattern RecommendationCategory_AWSBestPractices :: RecommendationCategory
pattern RecommendationCategory_AWSCloudFormationIssues :: RecommendationCategory
pattern RecommendationCategory_CodeInconsistencies :: RecommendationCategory
pattern RecommendationCategory_CodeMaintenanceIssues :: RecommendationCategory
pattern RecommendationCategory_ConcurrencyIssues :: RecommendationCategory
pattern RecommendationCategory_DuplicateCode :: RecommendationCategory
pattern RecommendationCategory_InputValidations :: RecommendationCategory
pattern RecommendationCategory_JavaBestPractices :: RecommendationCategory
pattern RecommendationCategory_PythonBestPractices :: RecommendationCategory
pattern RecommendationCategory_ResourceLeaks :: RecommendationCategory
pattern RecommendationCategory_SecurityIssues :: RecommendationCategory
newtype RepositoryAssociationState
RepositoryAssociationState' :: Text -> RepositoryAssociationState
[fromRepositoryAssociationState] :: RepositoryAssociationState -> Text
pattern RepositoryAssociationState_Associated :: RepositoryAssociationState
pattern RepositoryAssociationState_Associating :: RepositoryAssociationState
pattern RepositoryAssociationState_Disassociated :: RepositoryAssociationState
pattern RepositoryAssociationState_Disassociating :: RepositoryAssociationState
pattern RepositoryAssociationState_Failed :: RepositoryAssociationState
newtype Severity
Severity' :: Text -> Severity
[fromSeverity] :: Severity -> Text
pattern Severity_Critical :: Severity
pattern Severity_High :: Severity
pattern Severity_Info :: Severity
pattern Severity_Low :: Severity
pattern Severity_Medium :: Severity
newtype Type
Type' :: Text -> Type
[fromType] :: Type -> Text
pattern Type_PullRequest :: Type
pattern Type_RepositoryAnalysis :: Type
newtype VendorName
VendorName' :: Text -> VendorName
[fromVendorName] :: VendorName -> Text
pattern VendorName_GitHub :: VendorName
pattern VendorName_GitLab :: VendorName
pattern VendorName_NativeS3 :: VendorName

-- | A type of <a>SourceCodeType</a> that specifies a code diff between a
--   source and destination branch in an associated repository.
--   
--   <i>See:</i> <a>newBranchDiffSourceCodeType</a> smart constructor.
data BranchDiffSourceCodeType
BranchDiffSourceCodeType' :: Text -> Text -> BranchDiffSourceCodeType

-- | The source branch for a diff in an associated repository.
[$sel:sourceBranchName:BranchDiffSourceCodeType'] :: BranchDiffSourceCodeType -> Text

-- | The destination branch for a diff in an associated repository.
[$sel:destinationBranchName:BranchDiffSourceCodeType'] :: BranchDiffSourceCodeType -> Text

-- | Create a value of <a>BranchDiffSourceCodeType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceBranchName:BranchDiffSourceCodeType'</a>,
--   <a>branchDiffSourceCodeType_sourceBranchName</a> - The source branch
--   for a diff in an associated repository.
--   
--   <a>$sel:destinationBranchName:BranchDiffSourceCodeType'</a>,
--   <a>branchDiffSourceCodeType_destinationBranchName</a> - The
--   destination branch for a diff in an associated repository.
newBranchDiffSourceCodeType :: Text -> Text -> BranchDiffSourceCodeType

-- | The source branch for a diff in an associated repository.
branchDiffSourceCodeType_sourceBranchName :: Lens' BranchDiffSourceCodeType Text

-- | The destination branch for a diff in an associated repository.
branchDiffSourceCodeType_destinationBranchName :: Lens' BranchDiffSourceCodeType Text

-- | Code artifacts are source code artifacts and build artifacts used in a
--   repository analysis or a pull request review.
--   
--   <ul>
--   <li>Source code artifacts are source code files in a Git repository
--   that are compressed into a .zip file.</li>
--   <li>Build artifacts are .jar or .class files that are compressed in a
--   .zip file.</li>
--   </ul>
--   
--   <i>See:</i> <a>newCodeArtifacts</a> smart constructor.
data CodeArtifacts
CodeArtifacts' :: Maybe Text -> Text -> CodeArtifacts

-- | The S3 object key for a build artifacts .zip file that contains .jar
--   or .class files. This is required for a code review with security
--   analysis. For more information, see <a>Create code reviews with
--   security analysis</a> in the <i>Amazon CodeGuru Reviewer User
--   Guide</i>.
[$sel:buildArtifactsObjectKey:CodeArtifacts'] :: CodeArtifacts -> Maybe Text

-- | The S3 object key for a source code .zip file. This is required for
--   all code reviews.
[$sel:sourceCodeArtifactsObjectKey:CodeArtifacts'] :: CodeArtifacts -> Text

-- | Create a value of <a>CodeArtifacts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildArtifactsObjectKey:CodeArtifacts'</a>,
--   <a>codeArtifacts_buildArtifactsObjectKey</a> - The S3 object key for a
--   build artifacts .zip file that contains .jar or .class files. This is
--   required for a code review with security analysis. For more
--   information, see <a>Create code reviews with security analysis</a> in
--   the <i>Amazon CodeGuru Reviewer User Guide</i>.
--   
--   <a>$sel:sourceCodeArtifactsObjectKey:CodeArtifacts'</a>,
--   <a>codeArtifacts_sourceCodeArtifactsObjectKey</a> - The S3 object key
--   for a source code .zip file. This is required for all code reviews.
newCodeArtifacts :: Text -> CodeArtifacts

-- | The S3 object key for a build artifacts .zip file that contains .jar
--   or .class files. This is required for a code review with security
--   analysis. For more information, see <a>Create code reviews with
--   security analysis</a> in the <i>Amazon CodeGuru Reviewer User
--   Guide</i>.
codeArtifacts_buildArtifactsObjectKey :: Lens' CodeArtifacts (Maybe Text)

-- | The S3 object key for a source code .zip file. This is required for
--   all code reviews.
codeArtifacts_sourceCodeArtifactsObjectKey :: Lens' CodeArtifacts Text

-- | Information about an Amazon Web Services CodeCommit repository. The
--   CodeCommit repository must be in the same Amazon Web Services Region
--   and Amazon Web Services account where its CodeGuru Reviewer code
--   reviews are configured.
--   
--   <i>See:</i> <a>newCodeCommitRepository</a> smart constructor.
data CodeCommitRepository
CodeCommitRepository' :: Text -> CodeCommitRepository

-- | The name of the Amazon Web Services CodeCommit repository. For more
--   information, see <a>repositoryName</a> in the <i>Amazon Web Services
--   CodeCommit API Reference</i>.
[$sel:name:CodeCommitRepository'] :: CodeCommitRepository -> Text

-- | Create a value of <a>CodeCommitRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CodeCommitRepository'</a>,
--   <a>codeCommitRepository_name</a> - The name of the Amazon Web Services
--   CodeCommit repository. For more information, see <a>repositoryName</a>
--   in the <i>Amazon Web Services CodeCommit API Reference</i>.
newCodeCommitRepository :: Text -> CodeCommitRepository

-- | The name of the Amazon Web Services CodeCommit repository. For more
--   information, see <a>repositoryName</a> in the <i>Amazon Web Services
--   CodeCommit API Reference</i>.
codeCommitRepository_name :: Lens' CodeCommitRepository Text

-- | Information about a code review. A code review belongs to the
--   associated repository that contains the reviewed code.
--   
--   <i>See:</i> <a>newCodeReview</a> smart constructor.
data CodeReview
CodeReview' :: Maybe Text -> Maybe JobState -> Maybe Metrics -> Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Type -> Maybe SourceCodeType -> Maybe Text -> Maybe POSIX -> Maybe [AnalysisType] -> Maybe POSIX -> CodeReview

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   that contains the reviewed source code. You can retrieve associated
--   repository ARNs by calling <a>ListRepositoryAssociations</a> .
[$sel:associationArn:CodeReview'] :: CodeReview -> Maybe Text

-- | The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
[$sel:state:CodeReview'] :: CodeReview -> Maybe JobState

-- | The statistics from the code review.
[$sel:metrics:CodeReview'] :: CodeReview -> Maybe Metrics

-- | The pull request ID for the code review.
[$sel:pullRequestId:CodeReview'] :: CodeReview -> Maybe Text

-- | The type of repository that contains the reviewed code (for example,
--   GitHub or Bitbucket).
[$sel:providerType:CodeReview'] :: CodeReview -> Maybe ProviderType

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
[$sel:owner:CodeReview'] :: CodeReview -> Maybe Text

-- | The name of the code review.
[$sel:name:CodeReview'] :: CodeReview -> Maybe Text

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
[$sel:codeReviewArn:CodeReview'] :: CodeReview -> Maybe Text

-- | The name of the repository.
[$sel:repositoryName:CodeReview'] :: CodeReview -> Maybe Text

-- | The type of code review.
[$sel:type':CodeReview'] :: CodeReview -> Maybe Type

-- | The type of the source code for the code review.
[$sel:sourceCodeType:CodeReview'] :: CodeReview -> Maybe SourceCodeType

-- | The reason for the state of the code review.
[$sel:stateReason:CodeReview'] :: CodeReview -> Maybe Text

-- | The time, in milliseconds since the epoch, when the code review was
--   created.
[$sel:createdTimeStamp:CodeReview'] :: CodeReview -> Maybe POSIX

-- | They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
[$sel:analysisTypes:CodeReview'] :: CodeReview -> Maybe [AnalysisType]

-- | The time, in milliseconds since the epoch, when the code review was
--   last updated.
[$sel:lastUpdatedTimeStamp:CodeReview'] :: CodeReview -> Maybe POSIX

-- | Create a value of <a>CodeReview</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:CodeReview'</a>,
--   <a>codeReview_associationArn</a> - The Amazon Resource Name (ARN) of
--   the <a>RepositoryAssociation</a> that contains the reviewed source
--   code. You can retrieve associated repository ARNs by calling
--   <a>ListRepositoryAssociations</a> .
--   
--   <a>$sel:state:CodeReview'</a>, <a>codeReview_state</a> - The valid
--   code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
--   
--   <a>$sel:metrics:CodeReview'</a>, <a>codeReview_metrics</a> - The
--   statistics from the code review.
--   
--   <a>$sel:pullRequestId:CodeReview'</a>, <a>codeReview_pullRequestId</a>
--   - The pull request ID for the code review.
--   
--   <a>$sel:providerType:CodeReview'</a>, <a>codeReview_providerType</a> -
--   The type of repository that contains the reviewed code (for example,
--   GitHub or Bitbucket).
--   
--   <a>$sel:owner:CodeReview'</a>, <a>codeReview_owner</a> - The owner of
--   the repository. For an Amazon Web Services CodeCommit repository, this
--   is the Amazon Web Services account ID of the account that owns the
--   repository. For a GitHub, GitHub Enterprise Server, or Bitbucket
--   repository, this is the username for the account that owns the
--   repository. For an S3 repository, it can be the username or Amazon Web
--   Services account ID.
--   
--   <a>$sel:name:CodeReview'</a>, <a>codeReview_name</a> - The name of the
--   code review.
--   
--   <a>$sel:codeReviewArn:CodeReview'</a>, <a>codeReview_codeReviewArn</a>
--   - The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:repositoryName:CodeReview'</a>,
--   <a>codeReview_repositoryName</a> - The name of the repository.
--   
--   <a>$sel:type':CodeReview'</a>, <a>codeReview_type</a> - The type of
--   code review.
--   
--   <a>$sel:sourceCodeType:CodeReview'</a>,
--   <a>codeReview_sourceCodeType</a> - The type of the source code for the
--   code review.
--   
--   <a>$sel:stateReason:CodeReview'</a>, <a>codeReview_stateReason</a> -
--   The reason for the state of the code review.
--   
--   <a>$sel:createdTimeStamp:CodeReview'</a>,
--   <a>codeReview_createdTimeStamp</a> - The time, in milliseconds since
--   the epoch, when the code review was created.
--   
--   <a>$sel:analysisTypes:CodeReview'</a>, <a>codeReview_analysisTypes</a>
--   - They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
--   
--   <a>$sel:lastUpdatedTimeStamp:CodeReview'</a>,
--   <a>codeReview_lastUpdatedTimeStamp</a> - The time, in milliseconds
--   since the epoch, when the code review was last updated.
newCodeReview :: CodeReview

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   that contains the reviewed source code. You can retrieve associated
--   repository ARNs by calling <a>ListRepositoryAssociations</a> .
codeReview_associationArn :: Lens' CodeReview (Maybe Text)

-- | The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
codeReview_state :: Lens' CodeReview (Maybe JobState)

-- | The statistics from the code review.
codeReview_metrics :: Lens' CodeReview (Maybe Metrics)

-- | The pull request ID for the code review.
codeReview_pullRequestId :: Lens' CodeReview (Maybe Text)

-- | The type of repository that contains the reviewed code (for example,
--   GitHub or Bitbucket).
codeReview_providerType :: Lens' CodeReview (Maybe ProviderType)

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
codeReview_owner :: Lens' CodeReview (Maybe Text)

-- | The name of the code review.
codeReview_name :: Lens' CodeReview (Maybe Text)

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
codeReview_codeReviewArn :: Lens' CodeReview (Maybe Text)

-- | The name of the repository.
codeReview_repositoryName :: Lens' CodeReview (Maybe Text)

-- | The type of code review.
codeReview_type :: Lens' CodeReview (Maybe Type)

-- | The type of the source code for the code review.
codeReview_sourceCodeType :: Lens' CodeReview (Maybe SourceCodeType)

-- | The reason for the state of the code review.
codeReview_stateReason :: Lens' CodeReview (Maybe Text)

-- | The time, in milliseconds since the epoch, when the code review was
--   created.
codeReview_createdTimeStamp :: Lens' CodeReview (Maybe UTCTime)

-- | They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
codeReview_analysisTypes :: Lens' CodeReview (Maybe [AnalysisType])

-- | The time, in milliseconds since the epoch, when the code review was
--   last updated.
codeReview_lastUpdatedTimeStamp :: Lens' CodeReview (Maybe UTCTime)

-- | Information about the summary of the code review.
--   
--   <i>See:</i> <a>newCodeReviewSummary</a> smart constructor.
data CodeReviewSummary
CodeReviewSummary' :: Maybe JobState -> Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Type -> Maybe SourceCodeType -> Maybe MetricsSummary -> Maybe POSIX -> Maybe POSIX -> CodeReviewSummary

-- | The state of the code review.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
[$sel:state:CodeReviewSummary'] :: CodeReviewSummary -> Maybe JobState

-- | The pull request ID for the code review.
[$sel:pullRequestId:CodeReviewSummary'] :: CodeReviewSummary -> Maybe Text

-- | The provider type of the repository association.
[$sel:providerType:CodeReviewSummary'] :: CodeReviewSummary -> Maybe ProviderType

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
[$sel:owner:CodeReviewSummary'] :: CodeReviewSummary -> Maybe Text

-- | The name of the code review.
[$sel:name:CodeReviewSummary'] :: CodeReviewSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
[$sel:codeReviewArn:CodeReviewSummary'] :: CodeReviewSummary -> Maybe Text

-- | The name of the repository.
[$sel:repositoryName:CodeReviewSummary'] :: CodeReviewSummary -> Maybe Text

-- | The type of the code review.
[$sel:type':CodeReviewSummary'] :: CodeReviewSummary -> Maybe Type
[$sel:sourceCodeType:CodeReviewSummary'] :: CodeReviewSummary -> Maybe SourceCodeType

-- | The statistics from the code review.
[$sel:metricsSummary:CodeReviewSummary'] :: CodeReviewSummary -> Maybe MetricsSummary

-- | The time, in milliseconds since the epoch, when the code review was
--   created.
[$sel:createdTimeStamp:CodeReviewSummary'] :: CodeReviewSummary -> Maybe POSIX

-- | The time, in milliseconds since the epoch, when the code review was
--   last updated.
[$sel:lastUpdatedTimeStamp:CodeReviewSummary'] :: CodeReviewSummary -> Maybe POSIX

-- | Create a value of <a>CodeReviewSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CodeReviewSummary'</a>, <a>codeReviewSummary_state</a> -
--   The state of the code review.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
--   
--   <a>$sel:pullRequestId:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_pullRequestId</a> - The pull request ID for the
--   code review.
--   
--   <a>$sel:providerType:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_providerType</a> - The provider type of the
--   repository association.
--   
--   <a>$sel:owner:CodeReviewSummary'</a>, <a>codeReviewSummary_owner</a> -
--   The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
--   
--   <a>$sel:name:CodeReviewSummary'</a>, <a>codeReviewSummary_name</a> -
--   The name of the code review.
--   
--   <a>$sel:codeReviewArn:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_codeReviewArn</a> - The Amazon Resource Name
--   (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:repositoryName:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_repositoryName</a> - The name of the repository.
--   
--   <a>$sel:type':CodeReviewSummary'</a>, <a>codeReviewSummary_type</a> -
--   The type of the code review.
--   
--   <a>$sel:sourceCodeType:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_sourceCodeType</a> - Undocumented member.
--   
--   <a>$sel:metricsSummary:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_metricsSummary</a> - The statistics from the code
--   review.
--   
--   <a>$sel:createdTimeStamp:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_createdTimeStamp</a> - The time, in milliseconds
--   since the epoch, when the code review was created.
--   
--   <a>$sel:lastUpdatedTimeStamp:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_lastUpdatedTimeStamp</a> - The time, in
--   milliseconds since the epoch, when the code review was last updated.
newCodeReviewSummary :: CodeReviewSummary

-- | The state of the code review.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
codeReviewSummary_state :: Lens' CodeReviewSummary (Maybe JobState)

-- | The pull request ID for the code review.
codeReviewSummary_pullRequestId :: Lens' CodeReviewSummary (Maybe Text)

-- | The provider type of the repository association.
codeReviewSummary_providerType :: Lens' CodeReviewSummary (Maybe ProviderType)

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
codeReviewSummary_owner :: Lens' CodeReviewSummary (Maybe Text)

-- | The name of the code review.
codeReviewSummary_name :: Lens' CodeReviewSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
codeReviewSummary_codeReviewArn :: Lens' CodeReviewSummary (Maybe Text)

-- | The name of the repository.
codeReviewSummary_repositoryName :: Lens' CodeReviewSummary (Maybe Text)

-- | The type of the code review.
codeReviewSummary_type :: Lens' CodeReviewSummary (Maybe Type)

-- | Undocumented member.
codeReviewSummary_sourceCodeType :: Lens' CodeReviewSummary (Maybe SourceCodeType)

-- | The statistics from the code review.
codeReviewSummary_metricsSummary :: Lens' CodeReviewSummary (Maybe MetricsSummary)

-- | The time, in milliseconds since the epoch, when the code review was
--   created.
codeReviewSummary_createdTimeStamp :: Lens' CodeReviewSummary (Maybe UTCTime)

-- | The time, in milliseconds since the epoch, when the code review was
--   last updated.
codeReviewSummary_lastUpdatedTimeStamp :: Lens' CodeReviewSummary (Maybe UTCTime)

-- | The type of a code review. There are two code review types:
--   
--   <ul>
--   <li><tt>PullRequest</tt> - A code review that is automatically
--   triggered by a pull request on an associated repository.</li>
--   <li><tt>RepositoryAnalysis</tt> - A code review that analyzes all code
--   under a specified branch in an associated repository. The associated
--   repository is specified using its ARN in <a>CreateCodeReview</a>
--   .</li>
--   </ul>
--   
--   <i>See:</i> <a>newCodeReviewType</a> smart constructor.
data CodeReviewType
CodeReviewType' :: Maybe [AnalysisType] -> RepositoryAnalysis -> CodeReviewType

-- | They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
[$sel:analysisTypes:CodeReviewType'] :: CodeReviewType -> Maybe [AnalysisType]

-- | A code review that analyzes all code under a specified branch in an
--   associated repository. The associated repository is specified using
--   its ARN in <a>CreateCodeReview</a> .
[$sel:repositoryAnalysis:CodeReviewType'] :: CodeReviewType -> RepositoryAnalysis

-- | Create a value of <a>CodeReviewType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:analysisTypes:CodeReviewType'</a>,
--   <a>codeReviewType_analysisTypes</a> - They types of analysis performed
--   during a repository analysis or a pull request review. You can specify
--   either <tt>Security</tt>, <tt>CodeQuality</tt>, or both.
--   
--   <a>$sel:repositoryAnalysis:CodeReviewType'</a>,
--   <a>codeReviewType_repositoryAnalysis</a> - A code review that analyzes
--   all code under a specified branch in an associated repository. The
--   associated repository is specified using its ARN in
--   <a>CreateCodeReview</a> .
newCodeReviewType :: RepositoryAnalysis -> CodeReviewType

-- | They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
codeReviewType_analysisTypes :: Lens' CodeReviewType (Maybe [AnalysisType])

-- | A code review that analyzes all code under a specified branch in an
--   associated repository. The associated repository is specified using
--   its ARN in <a>CreateCodeReview</a> .
codeReviewType_repositoryAnalysis :: Lens' CodeReviewType RepositoryAnalysis

-- | A type of <a>SourceCodeType</a> that specifies the commit diff for a
--   pull request on an associated repository. The <tt>SourceCommit</tt>
--   and <tt>DestinationCommit</tt> fields are required to do a pull
--   request code review.
--   
--   <i>See:</i> <a>newCommitDiffSourceCodeType</a> smart constructor.
data CommitDiffSourceCodeType
CommitDiffSourceCodeType' :: Maybe Text -> Maybe Text -> Maybe Text -> CommitDiffSourceCodeType

-- | The SHA of the source commit used to generate a commit diff. This
--   field is required for a pull request code review.
[$sel:sourceCommit:CommitDiffSourceCodeType'] :: CommitDiffSourceCodeType -> Maybe Text

-- | The SHA of the merge base of a commit.
[$sel:mergeBaseCommit:CommitDiffSourceCodeType'] :: CommitDiffSourceCodeType -> Maybe Text

-- | The SHA of the destination commit used to generate a commit diff. This
--   field is required for a pull request code review.
[$sel:destinationCommit:CommitDiffSourceCodeType'] :: CommitDiffSourceCodeType -> Maybe Text

-- | Create a value of <a>CommitDiffSourceCodeType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCommit:CommitDiffSourceCodeType'</a>,
--   <a>commitDiffSourceCodeType_sourceCommit</a> - The SHA of the source
--   commit used to generate a commit diff. This field is required for a
--   pull request code review.
--   
--   <a>$sel:mergeBaseCommit:CommitDiffSourceCodeType'</a>,
--   <a>commitDiffSourceCodeType_mergeBaseCommit</a> - The SHA of the merge
--   base of a commit.
--   
--   <a>$sel:destinationCommit:CommitDiffSourceCodeType'</a>,
--   <a>commitDiffSourceCodeType_destinationCommit</a> - The SHA of the
--   destination commit used to generate a commit diff. This field is
--   required for a pull request code review.
newCommitDiffSourceCodeType :: CommitDiffSourceCodeType

-- | The SHA of the source commit used to generate a commit diff. This
--   field is required for a pull request code review.
commitDiffSourceCodeType_sourceCommit :: Lens' CommitDiffSourceCodeType (Maybe Text)

-- | The SHA of the merge base of a commit.
commitDiffSourceCodeType_mergeBaseCommit :: Lens' CommitDiffSourceCodeType (Maybe Text)

-- | The SHA of the destination commit used to generate a commit diff. This
--   field is required for a pull request code review.
commitDiffSourceCodeType_destinationCommit :: Lens' CommitDiffSourceCodeType (Maybe Text)

-- | Information about an event. The event might be a push, pull request,
--   scheduled request, or another type of event.
--   
--   <i>See:</i> <a>newEventInfo</a> smart constructor.
data EventInfo
EventInfo' :: Maybe Text -> Maybe Text -> EventInfo

-- | The state of an event. The state might be open, closed, or another
--   state.
[$sel:state:EventInfo'] :: EventInfo -> Maybe Text

-- | The name of the event. The possible names are <tt>pull_request</tt>,
--   <tt>workflow_dispatch</tt>, <tt>schedule</tt>, and <tt>push</tt>
[$sel:name:EventInfo'] :: EventInfo -> Maybe Text

-- | Create a value of <a>EventInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:EventInfo'</a>, <a>eventInfo_state</a> - The state of an
--   event. The state might be open, closed, or another state.
--   
--   <a>$sel:name:EventInfo'</a>, <a>eventInfo_name</a> - The name of the
--   event. The possible names are <tt>pull_request</tt>,
--   <tt>workflow_dispatch</tt>, <tt>schedule</tt>, and <tt>push</tt>
newEventInfo :: EventInfo

-- | The state of an event. The state might be open, closed, or another
--   state.
eventInfo_state :: Lens' EventInfo (Maybe Text)

-- | The name of the event. The possible names are <tt>pull_request</tt>,
--   <tt>workflow_dispatch</tt>, <tt>schedule</tt>, and <tt>push</tt>
eventInfo_name :: Lens' EventInfo (Maybe Text)

-- | An object that contains:
--   
--   <ul>
--   <li>The encryption option for a repository association. It is either
--   owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   a respository association.</li>
--   </ul>
--   
--   <i>See:</i> <a>newKMSKeyDetails</a> smart constructor.
data KMSKeyDetails
KMSKeyDetails' :: Maybe EncryptionOption -> Maybe Text -> KMSKeyDetails

-- | The encryption option for a repository association. It is either owned
--   by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).
[$sel:encryptionOption:KMSKeyDetails'] :: KMSKeyDetails -> Maybe EncryptionOption

-- | The ID of the Amazon Web Services KMS key that is associated with a
--   respository association.
[$sel:kmsKeyId:KMSKeyDetails'] :: KMSKeyDetails -> Maybe Text

-- | Create a value of <a>KMSKeyDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionOption:KMSKeyDetails'</a>,
--   <a>kmsKeyDetails_encryptionOption</a> - The encryption option for a
--   repository association. It is either owned by Amazon Web Services Key
--   Management Service (KMS) (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).
--   
--   <a>$sel:kmsKeyId:KMSKeyDetails'</a>, <a>kmsKeyDetails_kmsKeyId</a> -
--   The ID of the Amazon Web Services KMS key that is associated with a
--   respository association.
newKMSKeyDetails :: KMSKeyDetails

-- | The encryption option for a repository association. It is either owned
--   by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).
kmsKeyDetails_encryptionOption :: Lens' KMSKeyDetails (Maybe EncryptionOption)

-- | The ID of the Amazon Web Services KMS key that is associated with a
--   respository association.
kmsKeyDetails_kmsKeyId :: Lens' KMSKeyDetails (Maybe Text)

-- | Information about the statistics from the code review.
--   
--   <i>See:</i> <a>newMetrics</a> smart constructor.
data Metrics
Metrics' :: Maybe Integer -> Maybe Integer -> Metrics

-- | Total number of recommendations found in the code review.
[$sel:findingsCount:Metrics'] :: Metrics -> Maybe Integer

-- | <tt>MeteredLinesOfCode</tt> is the number of lines of code in the
--   repository where the code review happened. This does not include
--   non-code lines such as comments and blank lines.
[$sel:meteredLinesOfCodeCount:Metrics'] :: Metrics -> Maybe Integer

-- | Create a value of <a>Metrics</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:findingsCount:Metrics'</a>, <a>metrics_findingsCount</a> -
--   Total number of recommendations found in the code review.
--   
--   <a>$sel:meteredLinesOfCodeCount:Metrics'</a>,
--   <a>metrics_meteredLinesOfCodeCount</a> - <tt>MeteredLinesOfCode</tt>
--   is the number of lines of code in the repository where the code review
--   happened. This does not include non-code lines such as comments and
--   blank lines.
newMetrics :: Metrics

-- | Total number of recommendations found in the code review.
metrics_findingsCount :: Lens' Metrics (Maybe Integer)

-- | <tt>MeteredLinesOfCode</tt> is the number of lines of code in the
--   repository where the code review happened. This does not include
--   non-code lines such as comments and blank lines.
metrics_meteredLinesOfCodeCount :: Lens' Metrics (Maybe Integer)

-- | Information about metrics summaries.
--   
--   <i>See:</i> <a>newMetricsSummary</a> smart constructor.
data MetricsSummary
MetricsSummary' :: Maybe Integer -> Maybe Integer -> MetricsSummary

-- | Total number of recommendations found in the code review.
[$sel:findingsCount:MetricsSummary'] :: MetricsSummary -> Maybe Integer

-- | Lines of code metered in the code review. For the initial code review
--   pull request and all subsequent revisions, this includes all lines of
--   code in the files added to the pull request. In subsequent revisions,
--   for files that already existed in the pull request, this includes only
--   the changed lines of code. In both cases, this does not include
--   non-code lines such as comments and import statements. For example, if
--   you submit a pull request containing 5 files, each with 500 lines of
--   code, and in a subsequent revision you added a new file with 200 lines
--   of code, and also modified a total of 25 lines across the initial 5
--   files, <tt>MeteredLinesOfCodeCount</tt> includes the first 5 files (5
--   * 500 = 2,500 lines), the new file (200 lines) and the 25 changed
--   lines of code for a total of 2,725 lines of code.
[$sel:meteredLinesOfCodeCount:MetricsSummary'] :: MetricsSummary -> Maybe Integer

-- | Create a value of <a>MetricsSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:findingsCount:MetricsSummary'</a>,
--   <a>metricsSummary_findingsCount</a> - Total number of recommendations
--   found in the code review.
--   
--   <a>$sel:meteredLinesOfCodeCount:MetricsSummary'</a>,
--   <a>metricsSummary_meteredLinesOfCodeCount</a> - Lines of code metered
--   in the code review. For the initial code review pull request and all
--   subsequent revisions, this includes all lines of code in the files
--   added to the pull request. In subsequent revisions, for files that
--   already existed in the pull request, this includes only the changed
--   lines of code. In both cases, this does not include non-code lines
--   such as comments and import statements. For example, if you submit a
--   pull request containing 5 files, each with 500 lines of code, and in a
--   subsequent revision you added a new file with 200 lines of code, and
--   also modified a total of 25 lines across the initial 5 files,
--   <tt>MeteredLinesOfCodeCount</tt> includes the first 5 files (5 * 500 =
--   2,500 lines), the new file (200 lines) and the 25 changed lines of
--   code for a total of 2,725 lines of code.
newMetricsSummary :: MetricsSummary

-- | Total number of recommendations found in the code review.
metricsSummary_findingsCount :: Lens' MetricsSummary (Maybe Integer)

-- | Lines of code metered in the code review. For the initial code review
--   pull request and all subsequent revisions, this includes all lines of
--   code in the files added to the pull request. In subsequent revisions,
--   for files that already existed in the pull request, this includes only
--   the changed lines of code. In both cases, this does not include
--   non-code lines such as comments and import statements. For example, if
--   you submit a pull request containing 5 files, each with 500 lines of
--   code, and in a subsequent revision you added a new file with 200 lines
--   of code, and also modified a total of 25 lines across the initial 5
--   files, <tt>MeteredLinesOfCodeCount</tt> includes the first 5 files (5
--   * 500 = 2,500 lines), the new file (200 lines) and the 25 changed
--   lines of code for a total of 2,725 lines of code.
metricsSummary_meteredLinesOfCodeCount :: Lens' MetricsSummary (Maybe Integer)

-- | Information about the recommendation feedback.
--   
--   <i>See:</i> <a>newRecommendationFeedback</a> smart constructor.
data RecommendationFeedback
RecommendationFeedback' :: Maybe Text -> Maybe Text -> Maybe [Reaction] -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> RecommendationFeedback

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
[$sel:recommendationId:RecommendationFeedback'] :: RecommendationFeedback -> Maybe Text

-- | The ID of the user that made the API call.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
[$sel:userId:RecommendationFeedback'] :: RecommendationFeedback -> Maybe Text

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
--   You can send an empty list to clear off all your feedback.
[$sel:reactions:RecommendationFeedback'] :: RecommendationFeedback -> Maybe [Reaction]

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
[$sel:codeReviewArn:RecommendationFeedback'] :: RecommendationFeedback -> Maybe Text

-- | The time at which the feedback was created.
[$sel:createdTimeStamp:RecommendationFeedback'] :: RecommendationFeedback -> Maybe POSIX

-- | The time at which the feedback was last updated.
[$sel:lastUpdatedTimeStamp:RecommendationFeedback'] :: RecommendationFeedback -> Maybe POSIX

-- | Create a value of <a>RecommendationFeedback</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recommendationId:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_recommendationId</a> - The recommendation ID
--   that can be used to track the provided recommendations. Later on it
--   can be used to collect the feedback.
--   
--   <a>$sel:userId:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_userId</a> - The ID of the user that made
--   the API call.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
--   
--   <a>$sel:reactions:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_reactions</a> - List for storing reactions.
--   Reactions are utf-8 text code for emojis. You can send an empty list
--   to clear off all your feedback.
--   
--   <a>$sel:codeReviewArn:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_codeReviewArn</a> - The Amazon Resource Name
--   (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:createdTimeStamp:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_createdTimeStamp</a> - The time at which the
--   feedback was created.
--   
--   <a>$sel:lastUpdatedTimeStamp:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_lastUpdatedTimeStamp</a> - The time at which
--   the feedback was last updated.
newRecommendationFeedback :: RecommendationFeedback

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
recommendationFeedback_recommendationId :: Lens' RecommendationFeedback (Maybe Text)

-- | The ID of the user that made the API call.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
recommendationFeedback_userId :: Lens' RecommendationFeedback (Maybe Text)

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
--   You can send an empty list to clear off all your feedback.
recommendationFeedback_reactions :: Lens' RecommendationFeedback (Maybe [Reaction])

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
recommendationFeedback_codeReviewArn :: Lens' RecommendationFeedback (Maybe Text)

-- | The time at which the feedback was created.
recommendationFeedback_createdTimeStamp :: Lens' RecommendationFeedback (Maybe UTCTime)

-- | The time at which the feedback was last updated.
recommendationFeedback_lastUpdatedTimeStamp :: Lens' RecommendationFeedback (Maybe UTCTime)

-- | Information about recommendation feedback summaries.
--   
--   <i>See:</i> <a>newRecommendationFeedbackSummary</a> smart constructor.
data RecommendationFeedbackSummary
RecommendationFeedbackSummary' :: Maybe Text -> Maybe Text -> Maybe [Reaction] -> RecommendationFeedbackSummary

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
[$sel:recommendationId:RecommendationFeedbackSummary'] :: RecommendationFeedbackSummary -> Maybe Text

-- | The ID of the user that gave the feedback.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
[$sel:userId:RecommendationFeedbackSummary'] :: RecommendationFeedbackSummary -> Maybe Text

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
[$sel:reactions:RecommendationFeedbackSummary'] :: RecommendationFeedbackSummary -> Maybe [Reaction]

-- | Create a value of <a>RecommendationFeedbackSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recommendationId:RecommendationFeedbackSummary'</a>,
--   <a>recommendationFeedbackSummary_recommendationId</a> - The
--   recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
--   
--   <a>$sel:userId:RecommendationFeedbackSummary'</a>,
--   <a>recommendationFeedbackSummary_userId</a> - The ID of the user that
--   gave the feedback.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
--   
--   <a>$sel:reactions:RecommendationFeedbackSummary'</a>,
--   <a>recommendationFeedbackSummary_reactions</a> - List for storing
--   reactions. Reactions are utf-8 text code for emojis.
newRecommendationFeedbackSummary :: RecommendationFeedbackSummary

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
recommendationFeedbackSummary_recommendationId :: Lens' RecommendationFeedbackSummary (Maybe Text)

-- | The ID of the user that gave the feedback.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
recommendationFeedbackSummary_userId :: Lens' RecommendationFeedbackSummary (Maybe Text)

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
recommendationFeedbackSummary_reactions :: Lens' RecommendationFeedbackSummary (Maybe [Reaction])

-- | Information about recommendations.
--   
--   <i>See:</i> <a>newRecommendationSummary</a> smart constructor.
data RecommendationSummary
RecommendationSummary' :: Maybe Text -> Maybe Text -> Maybe Severity -> Maybe RuleMetadata -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe RecommendationCategory -> RecommendationSummary

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
[$sel:recommendationId:RecommendationSummary'] :: RecommendationSummary -> Maybe Text

-- | Name of the file on which a recommendation is provided.
[$sel:filePath:RecommendationSummary'] :: RecommendationSummary -> Maybe Text

-- | The severity of the issue in the code that generated this
--   recommendation.
[$sel:severity:RecommendationSummary'] :: RecommendationSummary -> Maybe Severity

-- | Metadata about a rule. Rule metadata includes an ID, a name, a list of
--   tags, and a short and long description. CodeGuru Reviewer uses rules
--   to analyze code. A rule's recommendation is included in analysis
--   results if code is detected that violates the rule.
[$sel:ruleMetadata:RecommendationSummary'] :: RecommendationSummary -> Maybe RuleMetadata

-- | Start line from where the recommendation is applicable in the source
--   commit or source branch.
[$sel:startLine:RecommendationSummary'] :: RecommendationSummary -> Maybe Int

-- | Last line where the recommendation is applicable in the source commit
--   or source branch. For a single line comment the start line and end
--   line values are the same.
[$sel:endLine:RecommendationSummary'] :: RecommendationSummary -> Maybe Int

-- | A description of the recommendation generated by CodeGuru Reviewer for
--   the lines of code between the start line and the end line.
[$sel:description:RecommendationSummary'] :: RecommendationSummary -> Maybe Text

-- | The type of a recommendation.
[$sel:recommendationCategory:RecommendationSummary'] :: RecommendationSummary -> Maybe RecommendationCategory

-- | Create a value of <a>RecommendationSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recommendationId:RecommendationSummary'</a>,
--   <a>recommendationSummary_recommendationId</a> - The recommendation ID
--   that can be used to track the provided recommendations. Later on it
--   can be used to collect the feedback.
--   
--   <a>$sel:filePath:RecommendationSummary'</a>,
--   <a>recommendationSummary_filePath</a> - Name of the file on which a
--   recommendation is provided.
--   
--   <a>$sel:severity:RecommendationSummary'</a>,
--   <a>recommendationSummary_severity</a> - The severity of the issue in
--   the code that generated this recommendation.
--   
--   <a>$sel:ruleMetadata:RecommendationSummary'</a>,
--   <a>recommendationSummary_ruleMetadata</a> - Metadata about a rule.
--   Rule metadata includes an ID, a name, a list of tags, and a short and
--   long description. CodeGuru Reviewer uses rules to analyze code. A
--   rule's recommendation is included in analysis results if code is
--   detected that violates the rule.
--   
--   <a>$sel:startLine:RecommendationSummary'</a>,
--   <a>recommendationSummary_startLine</a> - Start line from where the
--   recommendation is applicable in the source commit or source branch.
--   
--   <a>$sel:endLine:RecommendationSummary'</a>,
--   <a>recommendationSummary_endLine</a> - Last line where the
--   recommendation is applicable in the source commit or source branch.
--   For a single line comment the start line and end line values are the
--   same.
--   
--   <a>$sel:description:RecommendationSummary'</a>,
--   <a>recommendationSummary_description</a> - A description of the
--   recommendation generated by CodeGuru Reviewer for the lines of code
--   between the start line and the end line.
--   
--   <a>$sel:recommendationCategory:RecommendationSummary'</a>,
--   <a>recommendationSummary_recommendationCategory</a> - The type of a
--   recommendation.
newRecommendationSummary :: RecommendationSummary

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
recommendationSummary_recommendationId :: Lens' RecommendationSummary (Maybe Text)

-- | Name of the file on which a recommendation is provided.
recommendationSummary_filePath :: Lens' RecommendationSummary (Maybe Text)

-- | The severity of the issue in the code that generated this
--   recommendation.
recommendationSummary_severity :: Lens' RecommendationSummary (Maybe Severity)

-- | Metadata about a rule. Rule metadata includes an ID, a name, a list of
--   tags, and a short and long description. CodeGuru Reviewer uses rules
--   to analyze code. A rule's recommendation is included in analysis
--   results if code is detected that violates the rule.
recommendationSummary_ruleMetadata :: Lens' RecommendationSummary (Maybe RuleMetadata)

-- | Start line from where the recommendation is applicable in the source
--   commit or source branch.
recommendationSummary_startLine :: Lens' RecommendationSummary (Maybe Int)

-- | Last line where the recommendation is applicable in the source commit
--   or source branch. For a single line comment the start line and end
--   line values are the same.
recommendationSummary_endLine :: Lens' RecommendationSummary (Maybe Int)

-- | A description of the recommendation generated by CodeGuru Reviewer for
--   the lines of code between the start line and the end line.
recommendationSummary_description :: Lens' RecommendationSummary (Maybe Text)

-- | The type of a recommendation.
recommendationSummary_recommendationCategory :: Lens' RecommendationSummary (Maybe RecommendationCategory)

-- | Information about an associated Amazon Web Services CodeCommit
--   repository or an associated repository that is managed by Amazon Web
--   Services CodeStar Connections (for example, Bitbucket). This
--   <tt>Repository</tt> object is not used if your source code is in an
--   associated GitHub repository.
--   
--   <i>See:</i> <a>newRepository</a> smart constructor.
data Repository
Repository' :: Maybe CodeCommitRepository -> Maybe ThirdPartySourceRepository -> Maybe S3Repository -> Maybe ThirdPartySourceRepository -> Repository

-- | Information about an Amazon Web Services CodeCommit repository.
[$sel:codeCommit:Repository'] :: Repository -> Maybe CodeCommitRepository

-- | Information about a GitHub Enterprise Server repository.
[$sel:gitHubEnterpriseServer:Repository'] :: Repository -> Maybe ThirdPartySourceRepository
[$sel:s3Bucket:Repository'] :: Repository -> Maybe S3Repository

-- | Information about a Bitbucket repository.
[$sel:bitbucket:Repository'] :: Repository -> Maybe ThirdPartySourceRepository

-- | Create a value of <a>Repository</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeCommit:Repository'</a>, <a>repository_codeCommit</a> -
--   Information about an Amazon Web Services CodeCommit repository.
--   
--   <a>$sel:gitHubEnterpriseServer:Repository'</a>,
--   <a>repository_gitHubEnterpriseServer</a> - Information about a GitHub
--   Enterprise Server repository.
--   
--   <a>$sel:s3Bucket:Repository'</a>, <a>repository_s3Bucket</a> -
--   Undocumented member.
--   
--   <a>$sel:bitbucket:Repository'</a>, <a>repository_bitbucket</a> -
--   Information about a Bitbucket repository.
newRepository :: Repository

-- | Information about an Amazon Web Services CodeCommit repository.
repository_codeCommit :: Lens' Repository (Maybe CodeCommitRepository)

-- | Information about a GitHub Enterprise Server repository.
repository_gitHubEnterpriseServer :: Lens' Repository (Maybe ThirdPartySourceRepository)

-- | Undocumented member.
repository_s3Bucket :: Lens' Repository (Maybe S3Repository)

-- | Information about a Bitbucket repository.
repository_bitbucket :: Lens' Repository (Maybe ThirdPartySourceRepository)

-- | A code review type that analyzes all code under a specified branch in
--   an associated repository. The associated repository is specified using
--   its ARN when you call <a>CreateCodeReview</a> .
--   
--   <i>See:</i> <a>newRepositoryAnalysis</a> smart constructor.
data RepositoryAnalysis
RepositoryAnalysis' :: Maybe RepositoryHeadSourceCodeType -> Maybe SourceCodeType -> RepositoryAnalysis

-- | A <a>SourceCodeType</a> that specifies the tip of a branch in an
--   associated repository.
[$sel:repositoryHead:RepositoryAnalysis'] :: RepositoryAnalysis -> Maybe RepositoryHeadSourceCodeType
[$sel:sourceCodeType:RepositoryAnalysis'] :: RepositoryAnalysis -> Maybe SourceCodeType

-- | Create a value of <a>RepositoryAnalysis</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryHead:RepositoryAnalysis'</a>,
--   <a>repositoryAnalysis_repositoryHead</a> - A <a>SourceCodeType</a>
--   that specifies the tip of a branch in an associated repository.
--   
--   <a>$sel:sourceCodeType:RepositoryAnalysis'</a>,
--   <a>repositoryAnalysis_sourceCodeType</a> - Undocumented member.
newRepositoryAnalysis :: RepositoryAnalysis

-- | A <a>SourceCodeType</a> that specifies the tip of a branch in an
--   associated repository.
repositoryAnalysis_repositoryHead :: Lens' RepositoryAnalysis (Maybe RepositoryHeadSourceCodeType)

-- | Undocumented member.
repositoryAnalysis_sourceCodeType :: Lens' RepositoryAnalysis (Maybe SourceCodeType)

-- | Information about a repository association. The
--   <a>DescribeRepositoryAssociation</a> operation returns a
--   <tt>RepositoryAssociation</tt> object.
--   
--   <i>See:</i> <a>newRepositoryAssociation</a> smart constructor.
data RepositoryAssociation
RepositoryAssociation' :: Maybe Text -> Maybe Text -> Maybe RepositoryAssociationState -> Maybe S3RepositoryDetails -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe KMSKeyDetails -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> RepositoryAssociation

-- | The Amazon Resource Name (ARN) identifying the repository association.
[$sel:associationArn:RepositoryAssociation'] :: RepositoryAssociation -> Maybe Text

-- | The ID of the repository association.
[$sel:associationId:RepositoryAssociation'] :: RepositoryAssociation -> Maybe Text

-- | The state of the repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
[$sel:state:RepositoryAssociation'] :: RepositoryAssociation -> Maybe RepositoryAssociationState
[$sel:s3RepositoryDetails:RepositoryAssociation'] :: RepositoryAssociation -> Maybe S3RepositoryDetails

-- | The provider type of the repository association.
[$sel:providerType:RepositoryAssociation'] :: RepositoryAssociation -> Maybe ProviderType

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
[$sel:owner:RepositoryAssociation'] :: RepositoryAssociation -> Maybe Text

-- | The name of the repository.
[$sel:name:RepositoryAssociation'] :: RepositoryAssociation -> Maybe Text

-- | A <tt>KMSKeyDetails</tt> object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
[$sel:kmsKeyDetails:RepositoryAssociation'] :: RepositoryAssociation -> Maybe KMSKeyDetails

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
[$sel:connectionArn:RepositoryAssociation'] :: RepositoryAssociation -> Maybe Text

-- | A description of why the repository association is in the current
--   state.
[$sel:stateReason:RepositoryAssociation'] :: RepositoryAssociation -> Maybe Text

-- | The time, in milliseconds since the epoch, when the repository
--   association was created.
[$sel:createdTimeStamp:RepositoryAssociation'] :: RepositoryAssociation -> Maybe POSIX

-- | The time, in milliseconds since the epoch, when the repository
--   association was last updated.
[$sel:lastUpdatedTimeStamp:RepositoryAssociation'] :: RepositoryAssociation -> Maybe POSIX

-- | Create a value of <a>RepositoryAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_associationArn</a> - The Amazon Resource Name
--   (ARN) identifying the repository association.
--   
--   <a>$sel:associationId:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_associationId</a> - The ID of the repository
--   association.
--   
--   <a>$sel:state:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_state</a> - The state of the repository
--   association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:s3RepositoryDetails:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_s3RepositoryDetails</a> - Undocumented
--   member.
--   
--   <a>$sel:providerType:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_providerType</a> - The provider type of the
--   repository association.
--   
--   <a>$sel:owner:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_owner</a> - The owner of the repository. For
--   an Amazon Web Services CodeCommit repository, this is the Amazon Web
--   Services account ID of the account that owns the repository. For a
--   GitHub, GitHub Enterprise Server, or Bitbucket repository, this is the
--   username for the account that owns the repository. For an S3
--   repository, it can be the username or Amazon Web Services account ID.
--   
--   <a>$sel:name:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_name</a> - The name of the repository.
--   
--   <a>$sel:kmsKeyDetails:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_kmsKeyDetails</a> - A <tt>KMSKeyDetails</tt>
--   object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
--   
--   <a>$sel:connectionArn:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_connectionArn</a> - The Amazon Resource Name
--   (ARN) of an Amazon Web Services CodeStar Connections connection. Its
--   format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
--   
--   <a>$sel:stateReason:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_stateReason</a> - A description of why the
--   repository association is in the current state.
--   
--   <a>$sel:createdTimeStamp:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_createdTimeStamp</a> - The time, in
--   milliseconds since the epoch, when the repository association was
--   created.
--   
--   <a>$sel:lastUpdatedTimeStamp:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_lastUpdatedTimeStamp</a> - The time, in
--   milliseconds since the epoch, when the repository association was last
--   updated.
newRepositoryAssociation :: RepositoryAssociation

-- | The Amazon Resource Name (ARN) identifying the repository association.
repositoryAssociation_associationArn :: Lens' RepositoryAssociation (Maybe Text)

-- | The ID of the repository association.
repositoryAssociation_associationId :: Lens' RepositoryAssociation (Maybe Text)

-- | The state of the repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
repositoryAssociation_state :: Lens' RepositoryAssociation (Maybe RepositoryAssociationState)

-- | Undocumented member.
repositoryAssociation_s3RepositoryDetails :: Lens' RepositoryAssociation (Maybe S3RepositoryDetails)

-- | The provider type of the repository association.
repositoryAssociation_providerType :: Lens' RepositoryAssociation (Maybe ProviderType)

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
repositoryAssociation_owner :: Lens' RepositoryAssociation (Maybe Text)

-- | The name of the repository.
repositoryAssociation_name :: Lens' RepositoryAssociation (Maybe Text)

-- | A <tt>KMSKeyDetails</tt> object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
repositoryAssociation_kmsKeyDetails :: Lens' RepositoryAssociation (Maybe KMSKeyDetails)

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
repositoryAssociation_connectionArn :: Lens' RepositoryAssociation (Maybe Text)

-- | A description of why the repository association is in the current
--   state.
repositoryAssociation_stateReason :: Lens' RepositoryAssociation (Maybe Text)

-- | The time, in milliseconds since the epoch, when the repository
--   association was created.
repositoryAssociation_createdTimeStamp :: Lens' RepositoryAssociation (Maybe UTCTime)

-- | The time, in milliseconds since the epoch, when the repository
--   association was last updated.
repositoryAssociation_lastUpdatedTimeStamp :: Lens' RepositoryAssociation (Maybe UTCTime)

-- | Summary information about a repository association. The
--   <a>ListRepositoryAssociations</a> operation returns a list of
--   <tt>RepositoryAssociationSummary</tt> objects.
--   
--   <i>See:</i> <a>newRepositoryAssociationSummary</a> smart constructor.
data RepositoryAssociationSummary
RepositoryAssociationSummary' :: Maybe Text -> Maybe Text -> Maybe RepositoryAssociationState -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> RepositoryAssociationSummary

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
[$sel:associationArn:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe Text

-- | The repository association ID.
[$sel:associationId:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe Text

-- | The state of the repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
[$sel:state:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe RepositoryAssociationState

-- | The provider type of the repository association.
[$sel:providerType:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe ProviderType

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
[$sel:owner:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe Text

-- | The name of the repository association.
[$sel:name:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe Text

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
[$sel:connectionArn:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, since the repository
--   association was last updated.
[$sel:lastUpdatedTimeStamp:RepositoryAssociationSummary'] :: RepositoryAssociationSummary -> Maybe POSIX

-- | Create a value of <a>RepositoryAssociationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_associationArn</a> - The Amazon
--   Resource Name (ARN) of the <a>RepositoryAssociation</a> object. You
--   can retrieve this ARN by calling <a>ListRepositoryAssociations</a> .
--   
--   <a>$sel:associationId:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_associationId</a> - The repository
--   association ID.
--   
--   <a>$sel:state:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_state</a> - The state of the
--   repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:providerType:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_providerType</a> - The provider type
--   of the repository association.
--   
--   <a>$sel:owner:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_owner</a> - The owner of the
--   repository. For an Amazon Web Services CodeCommit repository, this is
--   the Amazon Web Services account ID of the account that owns the
--   repository. For a GitHub, GitHub Enterprise Server, or Bitbucket
--   repository, this is the username for the account that owns the
--   repository. For an S3 repository, it can be the username or Amazon Web
--   Services account ID.
--   
--   <a>$sel:name:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_name</a> - The name of the repository
--   association.
--   
--   <a>$sel:connectionArn:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_connectionArn</a> - The Amazon
--   Resource Name (ARN) of an Amazon Web Services CodeStar Connections
--   connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
--   
--   <a>$sel:lastUpdatedTimeStamp:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_lastUpdatedTimeStamp</a> - The time,
--   in milliseconds since the epoch, since the repository association was
--   last updated.
newRepositoryAssociationSummary :: RepositoryAssociationSummary

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
repositoryAssociationSummary_associationArn :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The repository association ID.
repositoryAssociationSummary_associationId :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The state of the repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
repositoryAssociationSummary_state :: Lens' RepositoryAssociationSummary (Maybe RepositoryAssociationState)

-- | The provider type of the repository association.
repositoryAssociationSummary_providerType :: Lens' RepositoryAssociationSummary (Maybe ProviderType)

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
repositoryAssociationSummary_owner :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The name of the repository association.
repositoryAssociationSummary_name :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
repositoryAssociationSummary_connectionArn :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, since the repository
--   association was last updated.
repositoryAssociationSummary_lastUpdatedTimeStamp :: Lens' RepositoryAssociationSummary (Maybe UTCTime)

-- | A <a>SourceCodeType</a> that specifies the tip of a branch in an
--   associated repository.
--   
--   <i>See:</i> <a>newRepositoryHeadSourceCodeType</a> smart constructor.
data RepositoryHeadSourceCodeType
RepositoryHeadSourceCodeType' :: Text -> RepositoryHeadSourceCodeType

-- | The name of the branch in an associated repository. The
--   <tt>RepositoryHeadSourceCodeType</tt> specifies the tip of this
--   branch.
[$sel:branchName:RepositoryHeadSourceCodeType'] :: RepositoryHeadSourceCodeType -> Text

-- | Create a value of <a>RepositoryHeadSourceCodeType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchName:RepositoryHeadSourceCodeType'</a>,
--   <a>repositoryHeadSourceCodeType_branchName</a> - The name of the
--   branch in an associated repository. The
--   <tt>RepositoryHeadSourceCodeType</tt> specifies the tip of this
--   branch.
newRepositoryHeadSourceCodeType :: Text -> RepositoryHeadSourceCodeType

-- | The name of the branch in an associated repository. The
--   <tt>RepositoryHeadSourceCodeType</tt> specifies the tip of this
--   branch.
repositoryHeadSourceCodeType_branchName :: Lens' RepositoryHeadSourceCodeType Text

-- | Metadata that is associated with a code review. This applies to both
--   pull request and repository analysis code reviews.
--   
--   <i>See:</i> <a>newRequestMetadata</a> smart constructor.
data RequestMetadata
RequestMetadata' :: Maybe Text -> Maybe EventInfo -> Maybe VendorName -> Maybe Text -> RequestMetadata

-- | The ID of the request. This is required for a pull request code
--   review.
[$sel:requestId:RequestMetadata'] :: RequestMetadata -> Maybe Text

-- | Information about the event associated with a code review.
[$sel:eventInfo:RequestMetadata'] :: RequestMetadata -> Maybe EventInfo

-- | The name of the repository vendor used to upload code to an S3 bucket
--   for a CI/CD code review. For example, if code and artifacts are
--   uploaded to an S3 bucket for a CI/CD code review by GitHub scripts
--   from a GitHub repository, then the repository association's
--   <tt>ProviderType</tt> is <tt>S3Bucket</tt> and the CI/CD repository
--   vendor name is GitHub. For more information, see the definition for
--   <tt>ProviderType</tt> in <a>RepositoryAssociation</a>.
[$sel:vendorName:RequestMetadata'] :: RequestMetadata -> Maybe VendorName

-- | An identifier, such as a name or account ID, that is associated with
--   the requester. The <tt>Requester</tt> is used to capture the
--   <tt>author/actor</tt> name of the event request.
[$sel:requester:RequestMetadata'] :: RequestMetadata -> Maybe Text

-- | Create a value of <a>RequestMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:RequestMetadata'</a>,
--   <a>requestMetadata_requestId</a> - The ID of the request. This is
--   required for a pull request code review.
--   
--   <a>$sel:eventInfo:RequestMetadata'</a>,
--   <a>requestMetadata_eventInfo</a> - Information about the event
--   associated with a code review.
--   
--   <a>$sel:vendorName:RequestMetadata'</a>,
--   <a>requestMetadata_vendorName</a> - The name of the repository vendor
--   used to upload code to an S3 bucket for a CI/CD code review. For
--   example, if code and artifacts are uploaded to an S3 bucket for a
--   CI/CD code review by GitHub scripts from a GitHub repository, then the
--   repository association's <tt>ProviderType</tt> is <tt>S3Bucket</tt>
--   and the CI/CD repository vendor name is GitHub. For more information,
--   see the definition for <tt>ProviderType</tt> in
--   <a>RepositoryAssociation</a>.
--   
--   <a>$sel:requester:RequestMetadata'</a>,
--   <a>requestMetadata_requester</a> - An identifier, such as a name or
--   account ID, that is associated with the requester. The
--   <tt>Requester</tt> is used to capture the <tt>author/actor</tt> name
--   of the event request.
newRequestMetadata :: RequestMetadata

-- | The ID of the request. This is required for a pull request code
--   review.
requestMetadata_requestId :: Lens' RequestMetadata (Maybe Text)

-- | Information about the event associated with a code review.
requestMetadata_eventInfo :: Lens' RequestMetadata (Maybe EventInfo)

-- | The name of the repository vendor used to upload code to an S3 bucket
--   for a CI/CD code review. For example, if code and artifacts are
--   uploaded to an S3 bucket for a CI/CD code review by GitHub scripts
--   from a GitHub repository, then the repository association's
--   <tt>ProviderType</tt> is <tt>S3Bucket</tt> and the CI/CD repository
--   vendor name is GitHub. For more information, see the definition for
--   <tt>ProviderType</tt> in <a>RepositoryAssociation</a>.
requestMetadata_vendorName :: Lens' RequestMetadata (Maybe VendorName)

-- | An identifier, such as a name or account ID, that is associated with
--   the requester. The <tt>Requester</tt> is used to capture the
--   <tt>author/actor</tt> name of the event request.
requestMetadata_requester :: Lens' RequestMetadata (Maybe Text)

-- | Metadata about a rule. Rule metadata includes an ID, a name, a list of
--   tags, and a short and long description. CodeGuru Reviewer uses rules
--   to analyze code. A rule's recommendation is included in analysis
--   results if code is detected that violates the rule.
--   
--   <i>See:</i> <a>newRuleMetadata</a> smart constructor.
data RuleMetadata
RuleMetadata' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> RuleMetadata

-- | A long description of the rule.
[$sel:longDescription:RuleMetadata'] :: RuleMetadata -> Maybe Text

-- | Tags that are associated with the rule.
[$sel:ruleTags:RuleMetadata'] :: RuleMetadata -> Maybe (NonEmpty Text)

-- | The ID of the rule.
[$sel:ruleId:RuleMetadata'] :: RuleMetadata -> Maybe Text

-- | The name of the rule.
[$sel:ruleName:RuleMetadata'] :: RuleMetadata -> Maybe Text

-- | A short description of the rule.
[$sel:shortDescription:RuleMetadata'] :: RuleMetadata -> Maybe Text

-- | Create a value of <a>RuleMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:longDescription:RuleMetadata'</a>,
--   <a>ruleMetadata_longDescription</a> - A long description of the rule.
--   
--   <a>$sel:ruleTags:RuleMetadata'</a>, <a>ruleMetadata_ruleTags</a> -
--   Tags that are associated with the rule.
--   
--   <a>$sel:ruleId:RuleMetadata'</a>, <a>ruleMetadata_ruleId</a> - The ID
--   of the rule.
--   
--   <a>$sel:ruleName:RuleMetadata'</a>, <a>ruleMetadata_ruleName</a> - The
--   name of the rule.
--   
--   <a>$sel:shortDescription:RuleMetadata'</a>,
--   <a>ruleMetadata_shortDescription</a> - A short description of the
--   rule.
newRuleMetadata :: RuleMetadata

-- | A long description of the rule.
ruleMetadata_longDescription :: Lens' RuleMetadata (Maybe Text)

-- | Tags that are associated with the rule.
ruleMetadata_ruleTags :: Lens' RuleMetadata (Maybe (NonEmpty Text))

-- | The ID of the rule.
ruleMetadata_ruleId :: Lens' RuleMetadata (Maybe Text)

-- | The name of the rule.
ruleMetadata_ruleName :: Lens' RuleMetadata (Maybe Text)

-- | A short description of the rule.
ruleMetadata_shortDescription :: Lens' RuleMetadata (Maybe Text)

-- | Information about an associated repository in an S3 bucket. The
--   associated repository contains a source code .zip file and a build
--   artifacts .zip file that contains .jar or .class files.
--   
--   <i>See:</i> <a>newS3BucketRepository</a> smart constructor.
data S3BucketRepository
S3BucketRepository' :: Maybe S3RepositoryDetails -> Text -> S3BucketRepository

-- | An <tt>S3RepositoryDetails</tt> object that specifies the name of an
--   S3 bucket and a <tt>CodeArtifacts</tt> object. The
--   <tt>CodeArtifacts</tt> object includes the S3 object keys for a source
--   code .zip file and for a build artifacts .zip file.
[$sel:details:S3BucketRepository'] :: S3BucketRepository -> Maybe S3RepositoryDetails

-- | The name of the repository when the <tt>ProviderType</tt> is
--   <tt>S3Bucket</tt>.
[$sel:name:S3BucketRepository'] :: S3BucketRepository -> Text

-- | Create a value of <a>S3BucketRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:details:S3BucketRepository'</a>,
--   <a>s3BucketRepository_details</a> - An <tt>S3RepositoryDetails</tt>
--   object that specifies the name of an S3 bucket and a
--   <tt>CodeArtifacts</tt> object. The <tt>CodeArtifacts</tt> object
--   includes the S3 object keys for a source code .zip file and for a
--   build artifacts .zip file.
--   
--   <a>$sel:name:S3BucketRepository'</a>, <a>s3BucketRepository_name</a> -
--   The name of the repository when the <tt>ProviderType</tt> is
--   <tt>S3Bucket</tt>.
newS3BucketRepository :: Text -> S3BucketRepository

-- | An <tt>S3RepositoryDetails</tt> object that specifies the name of an
--   S3 bucket and a <tt>CodeArtifacts</tt> object. The
--   <tt>CodeArtifacts</tt> object includes the S3 object keys for a source
--   code .zip file and for a build artifacts .zip file.
s3BucketRepository_details :: Lens' S3BucketRepository (Maybe S3RepositoryDetails)

-- | The name of the repository when the <tt>ProviderType</tt> is
--   <tt>S3Bucket</tt>.
s3BucketRepository_name :: Lens' S3BucketRepository Text

-- | Information about a repository in an S3 bucket.
--   
--   <i>See:</i> <a>newS3Repository</a> smart constructor.
data S3Repository
S3Repository' :: Text -> Text -> S3Repository

-- | The name of the repository in the S3 bucket.
[$sel:name:S3Repository'] :: S3Repository -> Text

-- | The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
[$sel:bucketName:S3Repository'] :: S3Repository -> Text

-- | Create a value of <a>S3Repository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:S3Repository'</a>, <a>s3Repository_name</a> - The name of
--   the repository in the S3 bucket.
--   
--   <a>$sel:bucketName:S3Repository'</a>, <a>s3Repository_bucketName</a> -
--   The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
newS3Repository :: Text -> Text -> S3Repository

-- | The name of the repository in the S3 bucket.
s3Repository_name :: Lens' S3Repository Text

-- | The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
s3Repository_bucketName :: Lens' S3Repository Text

-- | Specifies the name of an S3 bucket and a <tt>CodeArtifacts</tt> object
--   that contains the S3 object keys for a source code .zip file and for a
--   build artifacts .zip file that contains .jar or .class files.
--   
--   <i>See:</i> <a>newS3RepositoryDetails</a> smart constructor.
data S3RepositoryDetails
S3RepositoryDetails' :: Maybe CodeArtifacts -> Maybe Text -> S3RepositoryDetails

-- | A <tt>CodeArtifacts</tt> object. The <tt>CodeArtifacts</tt> object
--   includes the S3 object key for a source code .zip file and for a build
--   artifacts .zip file that contains .jar or .class files.
[$sel:codeArtifacts:S3RepositoryDetails'] :: S3RepositoryDetails -> Maybe CodeArtifacts

-- | The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
[$sel:bucketName:S3RepositoryDetails'] :: S3RepositoryDetails -> Maybe Text

-- | Create a value of <a>S3RepositoryDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeArtifacts:S3RepositoryDetails'</a>,
--   <a>s3RepositoryDetails_codeArtifacts</a> - A <tt>CodeArtifacts</tt>
--   object. The <tt>CodeArtifacts</tt> object includes the S3 object key
--   for a source code .zip file and for a build artifacts .zip file that
--   contains .jar or .class files.
--   
--   <a>$sel:bucketName:S3RepositoryDetails'</a>,
--   <a>s3RepositoryDetails_bucketName</a> - The name of the S3 bucket used
--   for associating a new S3 repository. It must begin with
--   <tt>codeguru-reviewer-</tt>.
newS3RepositoryDetails :: S3RepositoryDetails

-- | A <tt>CodeArtifacts</tt> object. The <tt>CodeArtifacts</tt> object
--   includes the S3 object key for a source code .zip file and for a build
--   artifacts .zip file that contains .jar or .class files.
s3RepositoryDetails_codeArtifacts :: Lens' S3RepositoryDetails (Maybe CodeArtifacts)

-- | The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
s3RepositoryDetails_bucketName :: Lens' S3RepositoryDetails (Maybe Text)

-- | Specifies the source code that is analyzed in a code review.
--   
--   <i>See:</i> <a>newSourceCodeType</a> smart constructor.
data SourceCodeType
SourceCodeType' :: Maybe S3BucketRepository -> Maybe RequestMetadata -> Maybe RepositoryHeadSourceCodeType -> Maybe CommitDiffSourceCodeType -> Maybe BranchDiffSourceCodeType -> SourceCodeType

-- | Information about an associated repository in an S3 bucket that
--   includes its name and an <tt>S3RepositoryDetails</tt> object. The
--   <tt>S3RepositoryDetails</tt> object includes the name of an S3 bucket,
--   an S3 key for a source code .zip file, and an S3 key for a build
--   artifacts .zip file. <tt>S3BucketRepository</tt> is required in
--   <a>SourceCodeType</a> for <tt>S3BucketRepository</tt> based code
--   reviews.
[$sel:s3BucketRepository:SourceCodeType'] :: SourceCodeType -> Maybe S3BucketRepository

-- | Metadata that is associated with a code review. This applies to any
--   type of code review supported by CodeGuru Reviewer. The
--   <tt>RequestMetadaa</tt> field captures any event metadata. For
--   example, it might capture metadata associated with an event trigger,
--   such as a push or a pull request.
[$sel:requestMetadata:SourceCodeType'] :: SourceCodeType -> Maybe RequestMetadata
[$sel:repositoryHead:SourceCodeType'] :: SourceCodeType -> Maybe RepositoryHeadSourceCodeType

-- | A <a>SourceCodeType</a> that specifies a commit diff created by a pull
--   request on an associated repository.
[$sel:commitDiff:SourceCodeType'] :: SourceCodeType -> Maybe CommitDiffSourceCodeType

-- | A type of <a>SourceCodeType</a> that specifies a source branch name
--   and a destination branch name in an associated repository.
[$sel:branchDiff:SourceCodeType'] :: SourceCodeType -> Maybe BranchDiffSourceCodeType

-- | Create a value of <a>SourceCodeType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3BucketRepository:SourceCodeType'</a>,
--   <a>sourceCodeType_s3BucketRepository</a> - Information about an
--   associated repository in an S3 bucket that includes its name and an
--   <tt>S3RepositoryDetails</tt> object. The <tt>S3RepositoryDetails</tt>
--   object includes the name of an S3 bucket, an S3 key for a source code
--   .zip file, and an S3 key for a build artifacts .zip file.
--   <tt>S3BucketRepository</tt> is required in <a>SourceCodeType</a> for
--   <tt>S3BucketRepository</tt> based code reviews.
--   
--   <a>$sel:requestMetadata:SourceCodeType'</a>,
--   <a>sourceCodeType_requestMetadata</a> - Metadata that is associated
--   with a code review. This applies to any type of code review supported
--   by CodeGuru Reviewer. The <tt>RequestMetadaa</tt> field captures any
--   event metadata. For example, it might capture metadata associated with
--   an event trigger, such as a push or a pull request.
--   
--   <a>$sel:repositoryHead:SourceCodeType'</a>,
--   <a>sourceCodeType_repositoryHead</a> - Undocumented member.
--   
--   <a>$sel:commitDiff:SourceCodeType'</a>,
--   <a>sourceCodeType_commitDiff</a> - A <a>SourceCodeType</a> that
--   specifies a commit diff created by a pull request on an associated
--   repository.
--   
--   <a>$sel:branchDiff:SourceCodeType'</a>,
--   <a>sourceCodeType_branchDiff</a> - A type of <a>SourceCodeType</a>
--   that specifies a source branch name and a destination branch name in
--   an associated repository.
newSourceCodeType :: SourceCodeType

-- | Information about an associated repository in an S3 bucket that
--   includes its name and an <tt>S3RepositoryDetails</tt> object. The
--   <tt>S3RepositoryDetails</tt> object includes the name of an S3 bucket,
--   an S3 key for a source code .zip file, and an S3 key for a build
--   artifacts .zip file. <tt>S3BucketRepository</tt> is required in
--   <a>SourceCodeType</a> for <tt>S3BucketRepository</tt> based code
--   reviews.
sourceCodeType_s3BucketRepository :: Lens' SourceCodeType (Maybe S3BucketRepository)

-- | Metadata that is associated with a code review. This applies to any
--   type of code review supported by CodeGuru Reviewer. The
--   <tt>RequestMetadaa</tt> field captures any event metadata. For
--   example, it might capture metadata associated with an event trigger,
--   such as a push or a pull request.
sourceCodeType_requestMetadata :: Lens' SourceCodeType (Maybe RequestMetadata)

-- | Undocumented member.
sourceCodeType_repositoryHead :: Lens' SourceCodeType (Maybe RepositoryHeadSourceCodeType)

-- | A <a>SourceCodeType</a> that specifies a commit diff created by a pull
--   request on an associated repository.
sourceCodeType_commitDiff :: Lens' SourceCodeType (Maybe CommitDiffSourceCodeType)

-- | A type of <a>SourceCodeType</a> that specifies a source branch name
--   and a destination branch name in an associated repository.
sourceCodeType_branchDiff :: Lens' SourceCodeType (Maybe BranchDiffSourceCodeType)

-- | Information about a third-party source repository connected to
--   CodeGuru Reviewer.
--   
--   <i>See:</i> <a>newThirdPartySourceRepository</a> smart constructor.
data ThirdPartySourceRepository
ThirdPartySourceRepository' :: Text -> Text -> Text -> ThirdPartySourceRepository

-- | The name of the third party source repository.
[$sel:name:ThirdPartySourceRepository'] :: ThirdPartySourceRepository -> Text

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
[$sel:connectionArn:ThirdPartySourceRepository'] :: ThirdPartySourceRepository -> Text

-- | The owner of the repository. For a GitHub, GitHub Enterprise, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, this can be the username or
--   Amazon Web Services account ID.
[$sel:owner:ThirdPartySourceRepository'] :: ThirdPartySourceRepository -> Text

-- | Create a value of <a>ThirdPartySourceRepository</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ThirdPartySourceRepository'</a>,
--   <a>thirdPartySourceRepository_name</a> - The name of the third party
--   source repository.
--   
--   <a>$sel:connectionArn:ThirdPartySourceRepository'</a>,
--   <a>thirdPartySourceRepository_connectionArn</a> - The Amazon Resource
--   Name (ARN) of an Amazon Web Services CodeStar Connections connection.
--   Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
--   
--   <a>$sel:owner:ThirdPartySourceRepository'</a>,
--   <a>thirdPartySourceRepository_owner</a> - The owner of the repository.
--   For a GitHub, GitHub Enterprise, or Bitbucket repository, this is the
--   username for the account that owns the repository. For an S3
--   repository, this can be the username or Amazon Web Services account
--   ID.
newThirdPartySourceRepository :: Text -> Text -> Text -> ThirdPartySourceRepository

-- | The name of the third party source repository.
thirdPartySourceRepository_name :: Lens' ThirdPartySourceRepository Text

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
thirdPartySourceRepository_connectionArn :: Lens' ThirdPartySourceRepository Text

-- | The owner of the repository. For a GitHub, GitHub Enterprise, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, this can be the username or
--   Amazon Web Services account ID.
thirdPartySourceRepository_owner :: Lens' ThirdPartySourceRepository Text


-- | Adds one or more tags to an associated repository.
module Network.AWS.CodeGuruReviewer.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - An array of
--   key-value pairs used to tag an associated repository. A tag is a
--   custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
tagResource_resourceArn :: Lens' TagResource Text

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.TagResource.TagResource
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.TagResource.TagResource
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.TagResource.TagResource


-- | Stores customer feedback for a CodeGuru Reviewer recommendation. When
--   this API is called again with different reactions the previous
--   feedback is overwritten.
module Network.AWS.CodeGuruReviewer.PutRecommendationFeedback

-- | <i>See:</i> <a>newPutRecommendationFeedback</a> smart constructor.
data PutRecommendationFeedback
PutRecommendationFeedback' :: Text -> Text -> [Reaction] -> PutRecommendationFeedback

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
[$sel:codeReviewArn:PutRecommendationFeedback'] :: PutRecommendationFeedback -> Text

-- | The recommendation ID that can be used to track the provided
--   recommendations and then to collect the feedback.
[$sel:recommendationId:PutRecommendationFeedback'] :: PutRecommendationFeedback -> Text

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
--   If you send an empty list it clears all your feedback.
[$sel:reactions:PutRecommendationFeedback'] :: PutRecommendationFeedback -> [Reaction]

-- | Create a value of <a>PutRecommendationFeedback</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeReviewArn:PutRecommendationFeedback'</a>,
--   <a>putRecommendationFeedback_codeReviewArn</a> - The Amazon Resource
--   Name (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:recommendationId:PutRecommendationFeedback'</a>,
--   <a>putRecommendationFeedback_recommendationId</a> - The recommendation
--   ID that can be used to track the provided recommendations and then to
--   collect the feedback.
--   
--   <a>$sel:reactions:PutRecommendationFeedback'</a>,
--   <a>putRecommendationFeedback_reactions</a> - List for storing
--   reactions. Reactions are utf-8 text code for emojis. If you send an
--   empty list it clears all your feedback.
newPutRecommendationFeedback :: Text -> Text -> PutRecommendationFeedback

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
putRecommendationFeedback_codeReviewArn :: Lens' PutRecommendationFeedback Text

-- | The recommendation ID that can be used to track the provided
--   recommendations and then to collect the feedback.
putRecommendationFeedback_recommendationId :: Lens' PutRecommendationFeedback Text

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
--   If you send an empty list it clears all your feedback.
putRecommendationFeedback_reactions :: Lens' PutRecommendationFeedback [Reaction]

-- | <i>See:</i> <a>newPutRecommendationFeedbackResponse</a> smart
--   constructor.
data PutRecommendationFeedbackResponse
PutRecommendationFeedbackResponse' :: Int -> PutRecommendationFeedbackResponse

-- | The response's http status code.
[$sel:httpStatus:PutRecommendationFeedbackResponse'] :: PutRecommendationFeedbackResponse -> Int

-- | Create a value of <a>PutRecommendationFeedbackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutRecommendationFeedbackResponse'</a>,
--   <a>putRecommendationFeedbackResponse_httpStatus</a> - The response's
--   http status code.
newPutRecommendationFeedbackResponse :: Int -> PutRecommendationFeedbackResponse

-- | The response's http status code.
putRecommendationFeedbackResponse_httpStatus :: Lens' PutRecommendationFeedbackResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedback
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedback
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedback
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedback
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedbackResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedbackResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedbackResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedbackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedback
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedbackResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedback
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedback
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedback
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedback
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedback
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.PutRecommendationFeedback.PutRecommendationFeedback


-- | Returns the list of tags associated with an associated repository
--   resource.
module Network.AWS.CodeGuruReviewer.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the <a>RepositoryAssociation</a> object. You can retrieve
--   this ARN by calling <a>ListRepositoryAssociations</a> .
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - An array of key-value pairs
--   used to tag an associated repository. A tag is a custom attribute
--   label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.ListTagsForResource.ListTagsForResource


-- | Returns a list of <a>RepositoryAssociationSummary</a> objects that
--   contain summary information about a repository association. You can
--   filter the returned list by <a>ProviderType</a> , <a>Name</a> ,
--   <a>State</a> , and <a>Owner</a> .
--   
--   This operation returns paginated results.
module Network.AWS.CodeGuruReviewer.ListRepositoryAssociations

-- | <i>See:</i> <a>newListRepositoryAssociations</a> smart constructor.
data ListRepositoryAssociations
ListRepositoryAssociations' :: Maybe (NonEmpty RepositoryAssociationState) -> Maybe (NonEmpty Text) -> Maybe (NonEmpty ProviderType) -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> ListRepositoryAssociations

-- | List of repository association states to use as a filter.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
[$sel:states:ListRepositoryAssociations'] :: ListRepositoryAssociations -> Maybe (NonEmpty RepositoryAssociationState)

-- | List of owners to use as a filter. For Amazon Web Services CodeCommit,
--   it is the name of the CodeCommit account that was used to associate
--   the repository. For other repository source providers, such as
--   Bitbucket and GitHub Enterprise Server, this is name of the account
--   that was used to associate the repository.
[$sel:owners:ListRepositoryAssociations'] :: ListRepositoryAssociations -> Maybe (NonEmpty Text)

-- | List of provider types to use as a filter.
[$sel:providerTypes:ListRepositoryAssociations'] :: ListRepositoryAssociations -> Maybe (NonEmpty ProviderType)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListRepositoryAssociations</tt> request where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value.
--   
--   Treat this token as an opaque identifier that is only used to retrieve
--   the next items in a list and not for other programmatic purposes.
[$sel:nextToken:ListRepositoryAssociations'] :: ListRepositoryAssociations -> Maybe Text

-- | List of repository names to use as a filter.
[$sel:names:ListRepositoryAssociations'] :: ListRepositoryAssociations -> Maybe (NonEmpty Text)

-- | The maximum number of repository association results returned by
--   <tt>ListRepositoryAssociations</tt> in paginated output. When this
--   parameter is used, <tt>ListRepositoryAssociations</tt> only returns
--   <tt>maxResults</tt> results in a single page with a <tt>nextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>ListRepositoryAssociations</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If this parameter is not used,
--   <tt>ListRepositoryAssociations</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
[$sel:maxResults:ListRepositoryAssociations'] :: ListRepositoryAssociations -> Maybe Natural

-- | Create a value of <a>ListRepositoryAssociations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociations_states</a> - List of repository
--   association states to use as a filter.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:owners:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociations_owners</a> - List of owners to use as a
--   filter. For Amazon Web Services CodeCommit, it is the name of the
--   CodeCommit account that was used to associate the repository. For
--   other repository source providers, such as Bitbucket and GitHub
--   Enterprise Server, this is name of the account that was used to
--   associate the repository.
--   
--   <a>$sel:providerTypes:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociations_providerTypes</a> - List of provider
--   types to use as a filter.
--   
--   <a>$sel:nextToken:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociations_nextToken</a> - The <tt>nextToken</tt>
--   value returned from a previous paginated
--   <tt>ListRepositoryAssociations</tt> request where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value.
--   
--   Treat this token as an opaque identifier that is only used to retrieve
--   the next items in a list and not for other programmatic purposes.
--   
--   <a>$sel:names:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociations_names</a> - List of repository names to
--   use as a filter.
--   
--   <a>$sel:maxResults:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociations_maxResults</a> - The maximum number of
--   repository association results returned by
--   <tt>ListRepositoryAssociations</tt> in paginated output. When this
--   parameter is used, <tt>ListRepositoryAssociations</tt> only returns
--   <tt>maxResults</tt> results in a single page with a <tt>nextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>ListRepositoryAssociations</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If this parameter is not used,
--   <tt>ListRepositoryAssociations</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
newListRepositoryAssociations :: ListRepositoryAssociations

-- | List of repository association states to use as a filter.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
listRepositoryAssociations_states :: Lens' ListRepositoryAssociations (Maybe (NonEmpty RepositoryAssociationState))

-- | List of owners to use as a filter. For Amazon Web Services CodeCommit,
--   it is the name of the CodeCommit account that was used to associate
--   the repository. For other repository source providers, such as
--   Bitbucket and GitHub Enterprise Server, this is name of the account
--   that was used to associate the repository.
listRepositoryAssociations_owners :: Lens' ListRepositoryAssociations (Maybe (NonEmpty Text))

-- | List of provider types to use as a filter.
listRepositoryAssociations_providerTypes :: Lens' ListRepositoryAssociations (Maybe (NonEmpty ProviderType))

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListRepositoryAssociations</tt> request where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value.
--   
--   Treat this token as an opaque identifier that is only used to retrieve
--   the next items in a list and not for other programmatic purposes.
listRepositoryAssociations_nextToken :: Lens' ListRepositoryAssociations (Maybe Text)

-- | List of repository names to use as a filter.
listRepositoryAssociations_names :: Lens' ListRepositoryAssociations (Maybe (NonEmpty Text))

-- | The maximum number of repository association results returned by
--   <tt>ListRepositoryAssociations</tt> in paginated output. When this
--   parameter is used, <tt>ListRepositoryAssociations</tt> only returns
--   <tt>maxResults</tt> results in a single page with a <tt>nextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>ListRepositoryAssociations</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If this parameter is not used,
--   <tt>ListRepositoryAssociations</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
listRepositoryAssociations_maxResults :: Lens' ListRepositoryAssociations (Maybe Natural)

-- | <i>See:</i> <a>newListRepositoryAssociationsResponse</a> smart
--   constructor.
data ListRepositoryAssociationsResponse
ListRepositoryAssociationsResponse' :: Maybe Text -> Maybe [RepositoryAssociationSummary] -> Int -> ListRepositoryAssociationsResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListRecommendations</tt> request. When the results of a
--   <tt>ListRecommendations</tt> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListRepositoryAssociationsResponse'] :: ListRepositoryAssociationsResponse -> Maybe Text

-- | A list of repository associations that meet the criteria of the
--   request.
[$sel:repositoryAssociationSummaries:ListRepositoryAssociationsResponse'] :: ListRepositoryAssociationsResponse -> Maybe [RepositoryAssociationSummary]

-- | The response's http status code.
[$sel:httpStatus:ListRepositoryAssociationsResponse'] :: ListRepositoryAssociationsResponse -> Int

-- | Create a value of <a>ListRepositoryAssociationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociationsResponse_nextToken</a> - The
--   <tt>nextToken</tt> value to include in a future
--   <tt>ListRecommendations</tt> request. When the results of a
--   <tt>ListRecommendations</tt> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
--   
--   
--   <a>$sel:repositoryAssociationSummaries:ListRepositoryAssociationsResponse'</a>,
--   <a>listRepositoryAssociationsResponse_repositoryAssociationSummaries</a>
--   - A list of repository associations that meet the criteria of the
--   request.
--   
--   <a>$sel:httpStatus:ListRepositoryAssociationsResponse'</a>,
--   <a>listRepositoryAssociationsResponse_httpStatus</a> - The response's
--   http status code.
newListRepositoryAssociationsResponse :: Int -> ListRepositoryAssociationsResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListRecommendations</tt> request. When the results of a
--   <tt>ListRecommendations</tt> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listRepositoryAssociationsResponse_nextToken :: Lens' ListRepositoryAssociationsResponse (Maybe Text)

-- | A list of repository associations that meet the criteria of the
--   request.
listRepositoryAssociationsResponse_repositoryAssociationSummaries :: Lens' ListRepositoryAssociationsResponse (Maybe [RepositoryAssociationSummary])

-- | The response's http status code.
listRepositoryAssociationsResponse_httpStatus :: Lens' ListRepositoryAssociationsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociations
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociations
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociations
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociations
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociationsResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociationsResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociationsResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociations
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociations
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociations
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociations
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociations
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.ListRepositoryAssociations.ListRepositoryAssociations


-- | Returns the list of all recommendations for a completed code review.
module Network.AWS.CodeGuruReviewer.ListRecommendations

-- | <i>See:</i> <a>newListRecommendations</a> smart constructor.
data ListRecommendations
ListRecommendations' :: Maybe Text -> Maybe Natural -> Text -> ListRecommendations

-- | Pagination token.
[$sel:nextToken:ListRecommendations'] :: ListRecommendations -> Maybe Text

-- | The maximum number of results that are returned per call. The default
--   is 100.
[$sel:maxResults:ListRecommendations'] :: ListRecommendations -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
[$sel:codeReviewArn:ListRecommendations'] :: ListRecommendations -> Text

-- | Create a value of <a>ListRecommendations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecommendations'</a>,
--   <a>listRecommendations_nextToken</a> - Pagination token.
--   
--   <a>$sel:maxResults:ListRecommendations'</a>,
--   <a>listRecommendations_maxResults</a> - The maximum number of results
--   that are returned per call. The default is 100.
--   
--   <a>$sel:codeReviewArn:ListRecommendations'</a>,
--   <a>listRecommendations_codeReviewArn</a> - The Amazon Resource Name
--   (ARN) of the <a>CodeReview</a> object.
newListRecommendations :: Text -> ListRecommendations

-- | Pagination token.
listRecommendations_nextToken :: Lens' ListRecommendations (Maybe Text)

-- | The maximum number of results that are returned per call. The default
--   is 100.
listRecommendations_maxResults :: Lens' ListRecommendations (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
listRecommendations_codeReviewArn :: Lens' ListRecommendations Text

-- | <i>See:</i> <a>newListRecommendationsResponse</a> smart constructor.
data ListRecommendationsResponse
ListRecommendationsResponse' :: Maybe Text -> Maybe [RecommendationSummary] -> Int -> ListRecommendationsResponse

-- | Pagination token.
[$sel:nextToken:ListRecommendationsResponse'] :: ListRecommendationsResponse -> Maybe Text

-- | List of recommendations for the requested code review.
[$sel:recommendationSummaries:ListRecommendationsResponse'] :: ListRecommendationsResponse -> Maybe [RecommendationSummary]

-- | The response's http status code.
[$sel:httpStatus:ListRecommendationsResponse'] :: ListRecommendationsResponse -> Int

-- | Create a value of <a>ListRecommendationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecommendations'</a>,
--   <a>listRecommendationsResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:recommendationSummaries:ListRecommendationsResponse'</a>,
--   <a>listRecommendationsResponse_recommendationSummaries</a> - List of
--   recommendations for the requested code review.
--   
--   <a>$sel:httpStatus:ListRecommendationsResponse'</a>,
--   <a>listRecommendationsResponse_httpStatus</a> - The response's http
--   status code.
newListRecommendationsResponse :: Int -> ListRecommendationsResponse

-- | Pagination token.
listRecommendationsResponse_nextToken :: Lens' ListRecommendationsResponse (Maybe Text)

-- | List of recommendations for the requested code review.
listRecommendationsResponse_recommendationSummaries :: Lens' ListRecommendationsResponse (Maybe [RecommendationSummary])

-- | The response's http status code.
listRecommendationsResponse_httpStatus :: Lens' ListRecommendationsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendations
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendations
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendations
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendations
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendationsResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendationsResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendationsResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendations
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendations
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendations
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendations
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.ListRecommendations.ListRecommendations


-- | Returns a list of <a>RecommendationFeedbackSummary</a> objects that
--   contain customer recommendation feedback for all CodeGuru Reviewer
--   users.
module Network.AWS.CodeGuruReviewer.ListRecommendationFeedback

-- | <i>See:</i> <a>newListRecommendationFeedback</a> smart constructor.
data ListRecommendationFeedback
ListRecommendationFeedback' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> Text -> ListRecommendationFeedback

-- | An Amazon Web Services user's account ID or Amazon Resource Name
--   (ARN). Use this ID to query the recommendation feedback for a code
--   review from that user.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
[$sel:userIds:ListRecommendationFeedback'] :: ListRecommendationFeedback -> Maybe (NonEmpty Text)

-- | If <tt>nextToken</tt> is returned, there are more results available.
--   The value of nextToken is a unique pagination token for each page.
--   Make the call again using the returned token to retrieve the next
--   page. Keep all other arguments unchanged.
[$sel:nextToken:ListRecommendationFeedback'] :: ListRecommendationFeedback -> Maybe Text

-- | Used to query the recommendation feedback for a given recommendation.
[$sel:recommendationIds:ListRecommendationFeedback'] :: ListRecommendationFeedback -> Maybe (NonEmpty Text)

-- | The maximum number of results that are returned per call. The default
--   is 100.
[$sel:maxResults:ListRecommendationFeedback'] :: ListRecommendationFeedback -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
[$sel:codeReviewArn:ListRecommendationFeedback'] :: ListRecommendationFeedback -> Text

-- | Create a value of <a>ListRecommendationFeedback</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userIds:ListRecommendationFeedback'</a>,
--   <a>listRecommendationFeedback_userIds</a> - An Amazon Web Services
--   user's account ID or Amazon Resource Name (ARN). Use this ID to query
--   the recommendation feedback for a code review from that user.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
--   
--   <a>$sel:nextToken:ListRecommendationFeedback'</a>,
--   <a>listRecommendationFeedback_nextToken</a> - If <tt>nextToken</tt> is
--   returned, there are more results available. The value of nextToken is
--   a unique pagination token for each page. Make the call again using the
--   returned token to retrieve the next page. Keep all other arguments
--   unchanged.
--   
--   <a>$sel:recommendationIds:ListRecommendationFeedback'</a>,
--   <a>listRecommendationFeedback_recommendationIds</a> - Used to query
--   the recommendation feedback for a given recommendation.
--   
--   <a>$sel:maxResults:ListRecommendationFeedback'</a>,
--   <a>listRecommendationFeedback_maxResults</a> - The maximum number of
--   results that are returned per call. The default is 100.
--   
--   <a>$sel:codeReviewArn:ListRecommendationFeedback'</a>,
--   <a>listRecommendationFeedback_codeReviewArn</a> - The Amazon Resource
--   Name (ARN) of the <a>CodeReview</a> object.
newListRecommendationFeedback :: Text -> ListRecommendationFeedback

-- | An Amazon Web Services user's account ID or Amazon Resource Name
--   (ARN). Use this ID to query the recommendation feedback for a code
--   review from that user.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
listRecommendationFeedback_userIds :: Lens' ListRecommendationFeedback (Maybe (NonEmpty Text))

-- | If <tt>nextToken</tt> is returned, there are more results available.
--   The value of nextToken is a unique pagination token for each page.
--   Make the call again using the returned token to retrieve the next
--   page. Keep all other arguments unchanged.
listRecommendationFeedback_nextToken :: Lens' ListRecommendationFeedback (Maybe Text)

-- | Used to query the recommendation feedback for a given recommendation.
listRecommendationFeedback_recommendationIds :: Lens' ListRecommendationFeedback (Maybe (NonEmpty Text))

-- | The maximum number of results that are returned per call. The default
--   is 100.
listRecommendationFeedback_maxResults :: Lens' ListRecommendationFeedback (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
listRecommendationFeedback_codeReviewArn :: Lens' ListRecommendationFeedback Text

-- | <i>See:</i> <a>newListRecommendationFeedbackResponse</a> smart
--   constructor.
data ListRecommendationFeedbackResponse
ListRecommendationFeedbackResponse' :: Maybe Text -> Maybe [RecommendationFeedbackSummary] -> Int -> ListRecommendationFeedbackResponse

-- | If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
[$sel:nextToken:ListRecommendationFeedbackResponse'] :: ListRecommendationFeedbackResponse -> Maybe Text

-- | Recommendation feedback summaries corresponding to the code review
--   ARN.
[$sel:recommendationFeedbackSummaries:ListRecommendationFeedbackResponse'] :: ListRecommendationFeedbackResponse -> Maybe [RecommendationFeedbackSummary]

-- | The response's http status code.
[$sel:httpStatus:ListRecommendationFeedbackResponse'] :: ListRecommendationFeedbackResponse -> Int

-- | Create a value of <a>ListRecommendationFeedbackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecommendationFeedback'</a>,
--   <a>listRecommendationFeedbackResponse_nextToken</a> - If nextToken is
--   returned, there are more results available. The value of nextToken is
--   a unique pagination token for each page. Make the call again using the
--   returned token to retrieve the next page. Keep all other arguments
--   unchanged.
--   
--   
--   <a>$sel:recommendationFeedbackSummaries:ListRecommendationFeedbackResponse'</a>,
--   <a>listRecommendationFeedbackResponse_recommendationFeedbackSummaries</a>
--   - Recommendation feedback summaries corresponding to the code review
--   ARN.
--   
--   <a>$sel:httpStatus:ListRecommendationFeedbackResponse'</a>,
--   <a>listRecommendationFeedbackResponse_httpStatus</a> - The response's
--   http status code.
newListRecommendationFeedbackResponse :: Int -> ListRecommendationFeedbackResponse

-- | If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
listRecommendationFeedbackResponse_nextToken :: Lens' ListRecommendationFeedbackResponse (Maybe Text)

-- | Recommendation feedback summaries corresponding to the code review
--   ARN.
listRecommendationFeedbackResponse_recommendationFeedbackSummaries :: Lens' ListRecommendationFeedbackResponse (Maybe [RecommendationFeedbackSummary])

-- | The response's http status code.
listRecommendationFeedbackResponse_httpStatus :: Lens' ListRecommendationFeedbackResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedback
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedback
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedback
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedback
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedbackResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedbackResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedbackResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedbackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedback
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedbackResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedback
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedback
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedback
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedback
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.ListRecommendationFeedback.ListRecommendationFeedback


-- | Lists all the code reviews that the customer has created in the past
--   90 days.
module Network.AWS.CodeGuruReviewer.ListCodeReviews

-- | <i>See:</i> <a>newListCodeReviews</a> smart constructor.
data ListCodeReviews
ListCodeReviews' :: Maybe (NonEmpty JobState) -> Maybe (NonEmpty ProviderType) -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Natural -> Type -> ListCodeReviews

-- | List of states for filtering that needs to be applied before
--   displaying the result. For example, <tt>states=[Pending]</tt> lists
--   code reviews in the Pending state.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
[$sel:states:ListCodeReviews'] :: ListCodeReviews -> Maybe (NonEmpty JobState)

-- | List of provider types for filtering that needs to be applied before
--   displaying the result. For example, <tt>providerTypes=[GitHub]</tt>
--   lists code reviews from GitHub.
[$sel:providerTypes:ListCodeReviews'] :: ListCodeReviews -> Maybe (NonEmpty ProviderType)

-- | List of repository names for filtering that needs to be applied before
--   displaying the result.
[$sel:repositoryNames:ListCodeReviews'] :: ListCodeReviews -> Maybe (NonEmpty Text)

-- | If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
[$sel:nextToken:ListCodeReviews'] :: ListCodeReviews -> Maybe Text

-- | The maximum number of results that are returned per call. The default
--   is 100.
[$sel:maxResults:ListCodeReviews'] :: ListCodeReviews -> Maybe Natural

-- | The type of code reviews to list in the response.
[$sel:type':ListCodeReviews'] :: ListCodeReviews -> Type

-- | Create a value of <a>ListCodeReviews</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListCodeReviews'</a>, <a>listCodeReviews_states</a> -
--   List of states for filtering that needs to be applied before
--   displaying the result. For example, <tt>states=[Pending]</tt> lists
--   code reviews in the Pending state.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
--   
--   <a>$sel:providerTypes:ListCodeReviews'</a>,
--   <a>listCodeReviews_providerTypes</a> - List of provider types for
--   filtering that needs to be applied before displaying the result. For
--   example, <tt>providerTypes=[GitHub]</tt> lists code reviews from
--   GitHub.
--   
--   <a>$sel:repositoryNames:ListCodeReviews'</a>,
--   <a>listCodeReviews_repositoryNames</a> - List of repository names for
--   filtering that needs to be applied before displaying the result.
--   
--   <a>$sel:nextToken:ListCodeReviews'</a>,
--   <a>listCodeReviews_nextToken</a> - If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:maxResults:ListCodeReviews'</a>,
--   <a>listCodeReviews_maxResults</a> - The maximum number of results that
--   are returned per call. The default is 100.
--   
--   <a>$sel:type':ListCodeReviews'</a>, <a>listCodeReviews_type</a> - The
--   type of code reviews to list in the response.
newListCodeReviews :: Type -> ListCodeReviews

-- | List of states for filtering that needs to be applied before
--   displaying the result. For example, <tt>states=[Pending]</tt> lists
--   code reviews in the Pending state.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
listCodeReviews_states :: Lens' ListCodeReviews (Maybe (NonEmpty JobState))

-- | List of provider types for filtering that needs to be applied before
--   displaying the result. For example, <tt>providerTypes=[GitHub]</tt>
--   lists code reviews from GitHub.
listCodeReviews_providerTypes :: Lens' ListCodeReviews (Maybe (NonEmpty ProviderType))

-- | List of repository names for filtering that needs to be applied before
--   displaying the result.
listCodeReviews_repositoryNames :: Lens' ListCodeReviews (Maybe (NonEmpty Text))

-- | If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
listCodeReviews_nextToken :: Lens' ListCodeReviews (Maybe Text)

-- | The maximum number of results that are returned per call. The default
--   is 100.
listCodeReviews_maxResults :: Lens' ListCodeReviews (Maybe Natural)

-- | The type of code reviews to list in the response.
listCodeReviews_type :: Lens' ListCodeReviews Type

-- | <i>See:</i> <a>newListCodeReviewsResponse</a> smart constructor.
data ListCodeReviewsResponse
ListCodeReviewsResponse' :: Maybe [CodeReviewSummary] -> Maybe Text -> Int -> ListCodeReviewsResponse

-- | A list of code reviews that meet the criteria of the request.
[$sel:codeReviewSummaries:ListCodeReviewsResponse'] :: ListCodeReviewsResponse -> Maybe [CodeReviewSummary]

-- | Pagination token.
[$sel:nextToken:ListCodeReviewsResponse'] :: ListCodeReviewsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListCodeReviewsResponse'] :: ListCodeReviewsResponse -> Int

-- | Create a value of <a>ListCodeReviewsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeReviewSummaries:ListCodeReviewsResponse'</a>,
--   <a>listCodeReviewsResponse_codeReviewSummaries</a> - A list of code
--   reviews that meet the criteria of the request.
--   
--   <a>$sel:nextToken:ListCodeReviews'</a>,
--   <a>listCodeReviewsResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:httpStatus:ListCodeReviewsResponse'</a>,
--   <a>listCodeReviewsResponse_httpStatus</a> - The response's http status
--   code.
newListCodeReviewsResponse :: Int -> ListCodeReviewsResponse

-- | A list of code reviews that meet the criteria of the request.
listCodeReviewsResponse_codeReviewSummaries :: Lens' ListCodeReviewsResponse (Maybe [CodeReviewSummary])

-- | Pagination token.
listCodeReviewsResponse_nextToken :: Lens' ListCodeReviewsResponse (Maybe Text)

-- | The response's http status code.
listCodeReviewsResponse_httpStatus :: Lens' ListCodeReviewsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviews
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviews
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviews
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviews
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviewsResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviewsResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviewsResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviewsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviews
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviewsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviews
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviews
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviews
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviews
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.ListCodeReviews.ListCodeReviews


-- | Removes the association between Amazon CodeGuru Reviewer and a
--   repository.
module Network.AWS.CodeGuruReviewer.DisassociateRepository

-- | <i>See:</i> <a>newDisassociateRepository</a> smart constructor.
data DisassociateRepository
DisassociateRepository' :: Text -> DisassociateRepository

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
[$sel:associationArn:DisassociateRepository'] :: DisassociateRepository -> Text

-- | Create a value of <a>DisassociateRepository</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:DisassociateRepository'</a>,
--   <a>disassociateRepository_associationArn</a> - The Amazon Resource
--   Name (ARN) of the <a>RepositoryAssociation</a> object. You can
--   retrieve this ARN by calling <a>ListRepositoryAssociations</a> .
newDisassociateRepository :: Text -> DisassociateRepository

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
disassociateRepository_associationArn :: Lens' DisassociateRepository Text

-- | <i>See:</i> <a>newDisassociateRepositoryResponse</a> smart
--   constructor.
data DisassociateRepositoryResponse
DisassociateRepositoryResponse' :: Maybe RepositoryAssociation -> Maybe (HashMap Text Text) -> Int -> DisassociateRepositoryResponse

-- | Information about the disassociated repository.
[$sel:repositoryAssociation:DisassociateRepositoryResponse'] :: DisassociateRepositoryResponse -> Maybe RepositoryAssociation

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
[$sel:tags:DisassociateRepositoryResponse'] :: DisassociateRepositoryResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DisassociateRepositoryResponse'] :: DisassociateRepositoryResponse -> Int

-- | Create a value of <a>DisassociateRepositoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryAssociation:DisassociateRepositoryResponse'</a>,
--   <a>disassociateRepositoryResponse_repositoryAssociation</a> -
--   Information about the disassociated repository.
--   
--   <a>$sel:tags:DisassociateRepositoryResponse'</a>,
--   <a>disassociateRepositoryResponse_tags</a> - An array of key-value
--   pairs used to tag an associated repository. A tag is a custom
--   attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DisassociateRepositoryResponse'</a>,
--   <a>disassociateRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newDisassociateRepositoryResponse :: Int -> DisassociateRepositoryResponse

-- | Information about the disassociated repository.
disassociateRepositoryResponse_repositoryAssociation :: Lens' DisassociateRepositoryResponse (Maybe RepositoryAssociation)

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
disassociateRepositoryResponse_tags :: Lens' DisassociateRepositoryResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
disassociateRepositoryResponse_httpStatus :: Lens' DisassociateRepositoryResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepository
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepository
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepository
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepository
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepositoryResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepositoryResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepositoryResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepositoryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepository
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepositoryResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepository
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepository
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepository
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepository
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.DisassociateRepository.DisassociateRepository


-- | Returns a <a>RepositoryAssociation</a> object that contains
--   information about the requested repository association.
module Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation

-- | <i>See:</i> <a>newDescribeRepositoryAssociation</a> smart constructor.
data DescribeRepositoryAssociation
DescribeRepositoryAssociation' :: Text -> DescribeRepositoryAssociation

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
[$sel:associationArn:DescribeRepositoryAssociation'] :: DescribeRepositoryAssociation -> Text

-- | Create a value of <a>DescribeRepositoryAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:DescribeRepositoryAssociation'</a>,
--   <a>describeRepositoryAssociation_associationArn</a> - The Amazon
--   Resource Name (ARN) of the <a>RepositoryAssociation</a> object. You
--   can retrieve this ARN by calling <a>ListRepositoryAssociations</a> .
newDescribeRepositoryAssociation :: Text -> DescribeRepositoryAssociation

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
describeRepositoryAssociation_associationArn :: Lens' DescribeRepositoryAssociation Text

-- | <i>See:</i> <a>newDescribeRepositoryAssociationResponse</a> smart
--   constructor.
data DescribeRepositoryAssociationResponse
DescribeRepositoryAssociationResponse' :: Maybe RepositoryAssociation -> Maybe (HashMap Text Text) -> Int -> DescribeRepositoryAssociationResponse

-- | Information about the repository association.
[$sel:repositoryAssociation:DescribeRepositoryAssociationResponse'] :: DescribeRepositoryAssociationResponse -> Maybe RepositoryAssociation

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
[$sel:tags:DescribeRepositoryAssociationResponse'] :: DescribeRepositoryAssociationResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeRepositoryAssociationResponse'] :: DescribeRepositoryAssociationResponse -> Int

-- | Create a value of <a>DescribeRepositoryAssociationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:repositoryAssociation:DescribeRepositoryAssociationResponse'</a>,
--   <a>describeRepositoryAssociationResponse_repositoryAssociation</a> -
--   Information about the repository association.
--   
--   <a>$sel:tags:DescribeRepositoryAssociationResponse'</a>,
--   <a>describeRepositoryAssociationResponse_tags</a> - An array of
--   key-value pairs used to tag an associated repository. A tag is a
--   custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DescribeRepositoryAssociationResponse'</a>,
--   <a>describeRepositoryAssociationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRepositoryAssociationResponse :: Int -> DescribeRepositoryAssociationResponse

-- | Information about the repository association.
describeRepositoryAssociationResponse_repositoryAssociation :: Lens' DescribeRepositoryAssociationResponse (Maybe RepositoryAssociation)

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
describeRepositoryAssociationResponse_tags :: Lens' DescribeRepositoryAssociationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeRepositoryAssociationResponse_httpStatus :: Lens' DescribeRepositoryAssociationResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociation
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociation
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociation
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociation
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociationResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociationResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociationResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociation
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociation
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociation
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociation
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.DescribeRepositoryAssociation.DescribeRepositoryAssociation


-- | Describes the customer feedback for a CodeGuru Reviewer
--   recommendation.
module Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback

-- | <i>See:</i> <a>newDescribeRecommendationFeedback</a> smart
--   constructor.
data DescribeRecommendationFeedback
DescribeRecommendationFeedback' :: Maybe Text -> Text -> Text -> DescribeRecommendationFeedback

-- | Optional parameter to describe the feedback for a given user. If this
--   is not supplied, it defaults to the user making the request.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
[$sel:userId:DescribeRecommendationFeedback'] :: DescribeRecommendationFeedback -> Maybe Text

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
[$sel:codeReviewArn:DescribeRecommendationFeedback'] :: DescribeRecommendationFeedback -> Text

-- | The recommendation ID that can be used to track the provided
--   recommendations and then to collect the feedback.
[$sel:recommendationId:DescribeRecommendationFeedback'] :: DescribeRecommendationFeedback -> Text

-- | Create a value of <a>DescribeRecommendationFeedback</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userId:DescribeRecommendationFeedback'</a>,
--   <a>describeRecommendationFeedback_userId</a> - Optional parameter to
--   describe the feedback for a given user. If this is not supplied, it
--   defaults to the user making the request.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
--   
--   <a>$sel:codeReviewArn:DescribeRecommendationFeedback'</a>,
--   <a>describeRecommendationFeedback_codeReviewArn</a> - The Amazon
--   Resource Name (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:recommendationId:DescribeRecommendationFeedback'</a>,
--   <a>describeRecommendationFeedback_recommendationId</a> - The
--   recommendation ID that can be used to track the provided
--   recommendations and then to collect the feedback.
newDescribeRecommendationFeedback :: Text -> Text -> DescribeRecommendationFeedback

-- | Optional parameter to describe the feedback for a given user. If this
--   is not supplied, it defaults to the user making the request.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
describeRecommendationFeedback_userId :: Lens' DescribeRecommendationFeedback (Maybe Text)

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
describeRecommendationFeedback_codeReviewArn :: Lens' DescribeRecommendationFeedback Text

-- | The recommendation ID that can be used to track the provided
--   recommendations and then to collect the feedback.
describeRecommendationFeedback_recommendationId :: Lens' DescribeRecommendationFeedback Text

-- | <i>See:</i> <a>newDescribeRecommendationFeedbackResponse</a> smart
--   constructor.
data DescribeRecommendationFeedbackResponse
DescribeRecommendationFeedbackResponse' :: Maybe RecommendationFeedback -> Int -> DescribeRecommendationFeedbackResponse

-- | The recommendation feedback given by the user.
[$sel:recommendationFeedback:DescribeRecommendationFeedbackResponse'] :: DescribeRecommendationFeedbackResponse -> Maybe RecommendationFeedback

-- | The response's http status code.
[$sel:httpStatus:DescribeRecommendationFeedbackResponse'] :: DescribeRecommendationFeedbackResponse -> Int

-- | Create a value of <a>DescribeRecommendationFeedbackResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:recommendationFeedback:DescribeRecommendationFeedbackResponse'</a>,
--   <a>describeRecommendationFeedbackResponse_recommendationFeedback</a> -
--   The recommendation feedback given by the user.
--   
--   <a>$sel:httpStatus:DescribeRecommendationFeedbackResponse'</a>,
--   <a>describeRecommendationFeedbackResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRecommendationFeedbackResponse :: Int -> DescribeRecommendationFeedbackResponse

-- | The recommendation feedback given by the user.
describeRecommendationFeedbackResponse_recommendationFeedback :: Lens' DescribeRecommendationFeedbackResponse (Maybe RecommendationFeedback)

-- | The response's http status code.
describeRecommendationFeedbackResponse_httpStatus :: Lens' DescribeRecommendationFeedbackResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedback
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedback
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedback
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedback
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedbackResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedbackResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedbackResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedbackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedback
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedbackResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedback
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedback
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedback
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedback
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.DescribeRecommendationFeedback.DescribeRecommendationFeedback


-- | Returns the metadata associated with the code review along with its
--   status.
module Network.AWS.CodeGuruReviewer.DescribeCodeReview

-- | <i>See:</i> <a>newDescribeCodeReview</a> smart constructor.
data DescribeCodeReview
DescribeCodeReview' :: Text -> DescribeCodeReview

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
[$sel:codeReviewArn:DescribeCodeReview'] :: DescribeCodeReview -> Text

-- | Create a value of <a>DescribeCodeReview</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeReviewArn:DescribeCodeReview'</a>,
--   <a>describeCodeReview_codeReviewArn</a> - The Amazon Resource Name
--   (ARN) of the <a>CodeReview</a> object.
newDescribeCodeReview :: Text -> DescribeCodeReview

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
describeCodeReview_codeReviewArn :: Lens' DescribeCodeReview Text

-- | <i>See:</i> <a>newDescribeCodeReviewResponse</a> smart constructor.
data DescribeCodeReviewResponse
DescribeCodeReviewResponse' :: Maybe CodeReview -> Int -> DescribeCodeReviewResponse

-- | Information about the code review.
[$sel:codeReview:DescribeCodeReviewResponse'] :: DescribeCodeReviewResponse -> Maybe CodeReview

-- | The response's http status code.
[$sel:httpStatus:DescribeCodeReviewResponse'] :: DescribeCodeReviewResponse -> Int

-- | Create a value of <a>DescribeCodeReviewResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeReview:DescribeCodeReviewResponse'</a>,
--   <a>describeCodeReviewResponse_codeReview</a> - Information about the
--   code review.
--   
--   <a>$sel:httpStatus:DescribeCodeReviewResponse'</a>,
--   <a>describeCodeReviewResponse_httpStatus</a> - The response's http
--   status code.
newDescribeCodeReviewResponse :: Int -> DescribeCodeReviewResponse

-- | Information about the code review.
describeCodeReviewResponse_codeReview :: Lens' DescribeCodeReviewResponse (Maybe CodeReview)

-- | The response's http status code.
describeCodeReviewResponse_httpStatus :: Lens' DescribeCodeReviewResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReview
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReview
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReview
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReview
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReviewResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReviewResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReviewResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReviewResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReview
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReviewResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReview
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReview
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReview
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReview
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.DescribeCodeReview.DescribeCodeReview


-- | Use to create a code review with a <a>CodeReviewType</a> of
--   <tt>RepositoryAnalysis</tt>. This type of code review analyzes all
--   code under a specified branch in an associated repository.
--   <tt>PullRequest</tt> code reviews are automatically triggered by a
--   pull request.
module Network.AWS.CodeGuruReviewer.CreateCodeReview

-- | <i>See:</i> <a>newCreateCodeReview</a> smart constructor.
data CreateCodeReview
CreateCodeReview' :: Maybe Text -> Text -> Text -> CodeReviewType -> CreateCodeReview

-- | Amazon CodeGuru Reviewer uses this value to prevent the accidental
--   creation of duplicate code reviews if there are failures and retries.
[$sel:clientRequestToken:CreateCodeReview'] :: CreateCodeReview -> Maybe Text

-- | The name of the code review. The name of each code review in your
--   Amazon Web Services account must be unique.
[$sel:name:CreateCodeReview'] :: CreateCodeReview -> Text

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
--   
--   A code review can only be created on an associated repository. This is
--   the ARN of the associated repository.
[$sel:repositoryAssociationArn:CreateCodeReview'] :: CreateCodeReview -> Text

-- | The type of code review to create. This is specified using a
--   <a>CodeReviewType</a> object. You can create a code review only of
--   type <tt>RepositoryAnalysis</tt>.
[$sel:type':CreateCodeReview'] :: CreateCodeReview -> CodeReviewType

-- | Create a value of <a>CreateCodeReview</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:CreateCodeReview'</a>,
--   <a>createCodeReview_clientRequestToken</a> - Amazon CodeGuru Reviewer
--   uses this value to prevent the accidental creation of duplicate code
--   reviews if there are failures and retries.
--   
--   <a>$sel:name:CreateCodeReview'</a>, <a>createCodeReview_name</a> - The
--   name of the code review. The name of each code review in your Amazon
--   Web Services account must be unique.
--   
--   <a>$sel:repositoryAssociationArn:CreateCodeReview'</a>,
--   <a>createCodeReview_repositoryAssociationArn</a> - The Amazon Resource
--   Name (ARN) of the <a>RepositoryAssociation</a> object. You can
--   retrieve this ARN by calling <a>ListRepositoryAssociations</a> .
--   
--   A code review can only be created on an associated repository. This is
--   the ARN of the associated repository.
--   
--   <a>$sel:type':CreateCodeReview'</a>, <a>createCodeReview_type</a> -
--   The type of code review to create. This is specified using a
--   <a>CodeReviewType</a> object. You can create a code review only of
--   type <tt>RepositoryAnalysis</tt>.
newCreateCodeReview :: Text -> Text -> CodeReviewType -> CreateCodeReview

-- | Amazon CodeGuru Reviewer uses this value to prevent the accidental
--   creation of duplicate code reviews if there are failures and retries.
createCodeReview_clientRequestToken :: Lens' CreateCodeReview (Maybe Text)

-- | The name of the code review. The name of each code review in your
--   Amazon Web Services account must be unique.
createCodeReview_name :: Lens' CreateCodeReview Text

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
--   
--   A code review can only be created on an associated repository. This is
--   the ARN of the associated repository.
createCodeReview_repositoryAssociationArn :: Lens' CreateCodeReview Text

-- | The type of code review to create. This is specified using a
--   <a>CodeReviewType</a> object. You can create a code review only of
--   type <tt>RepositoryAnalysis</tt>.
createCodeReview_type :: Lens' CreateCodeReview CodeReviewType

-- | <i>See:</i> <a>newCreateCodeReviewResponse</a> smart constructor.
data CreateCodeReviewResponse
CreateCodeReviewResponse' :: Maybe CodeReview -> Int -> CreateCodeReviewResponse
[$sel:codeReview:CreateCodeReviewResponse'] :: CreateCodeReviewResponse -> Maybe CodeReview

-- | The response's http status code.
[$sel:httpStatus:CreateCodeReviewResponse'] :: CreateCodeReviewResponse -> Int

-- | Create a value of <a>CreateCodeReviewResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeReview:CreateCodeReviewResponse'</a>,
--   <a>createCodeReviewResponse_codeReview</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:CreateCodeReviewResponse'</a>,
--   <a>createCodeReviewResponse_httpStatus</a> - The response's http
--   status code.
newCreateCodeReviewResponse :: Int -> CreateCodeReviewResponse

-- | Undocumented member.
createCodeReviewResponse_codeReview :: Lens' CreateCodeReviewResponse (Maybe CodeReview)

-- | The response's http status code.
createCodeReviewResponse_httpStatus :: Lens' CreateCodeReviewResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReview
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReview
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReview
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReview
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReviewResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReviewResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReviewResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReviewResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReview
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReviewResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReview
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReview
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReview
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReview
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReview
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.CreateCodeReview.CreateCodeReview


-- | Use to associate an Amazon Web Services CodeCommit repository or a
--   repostory managed by Amazon Web Services CodeStar Connections with
--   Amazon CodeGuru Reviewer. When you associate a repository, CodeGuru
--   Reviewer reviews source code changes in the repository's pull requests
--   and provides automatic recommendations. You can view recommendations
--   using the CodeGuru Reviewer console. For more information, see
--   <a>Recommendations in Amazon CodeGuru Reviewer</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide.</i>
--   
--   If you associate a CodeCommit or S3 repository, it must be in the same
--   Amazon Web Services Region and Amazon Web Services account where its
--   CodeGuru Reviewer code reviews are configured.
--   
--   Bitbucket and GitHub Enterprise Server repositories are managed by
--   Amazon Web Services CodeStar Connections to connect to CodeGuru
--   Reviewer. For more information, see <a>Associate a repository</a> in
--   the <i>Amazon CodeGuru Reviewer User Guide.</i>
--   
--   You cannot use the CodeGuru Reviewer SDK or the Amazon Web Services
--   CLI to associate a GitHub repository with Amazon CodeGuru Reviewer. To
--   associate a GitHub repository, use the console. For more information,
--   see <a>Getting started with CodeGuru Reviewer</a> in the <i>CodeGuru
--   Reviewer User Guide.</i>
module Network.AWS.CodeGuruReviewer.AssociateRepository

-- | <i>See:</i> <a>newAssociateRepository</a> smart constructor.
data AssociateRepository
AssociateRepository' :: Maybe KMSKeyDetails -> Maybe Text -> Maybe (HashMap Text Text) -> Repository -> AssociateRepository

-- | A <tt>KMSKeyDetails</tt> object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
[$sel:kmsKeyDetails:AssociateRepository'] :: AssociateRepository -> Maybe KMSKeyDetails

-- | Amazon CodeGuru Reviewer uses this value to prevent the accidental
--   creation of duplicate repository associations if there are failures
--   and retries.
[$sel:clientRequestToken:AssociateRepository'] :: AssociateRepository -> Maybe Text

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
[$sel:tags:AssociateRepository'] :: AssociateRepository -> Maybe (HashMap Text Text)

-- | The repository to associate.
[$sel:repository:AssociateRepository'] :: AssociateRepository -> Repository

-- | Create a value of <a>AssociateRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyDetails:AssociateRepository'</a>,
--   <a>associateRepository_kmsKeyDetails</a> - A <tt>KMSKeyDetails</tt>
--   object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
--   
--   <a>$sel:clientRequestToken:AssociateRepository'</a>,
--   <a>associateRepository_clientRequestToken</a> - Amazon CodeGuru
--   Reviewer uses this value to prevent the accidental creation of
--   duplicate repository associations if there are failures and retries.
--   
--   <a>$sel:tags:AssociateRepository'</a>, <a>associateRepository_tags</a>
--   - An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
--   
--   <a>$sel:repository:AssociateRepository'</a>,
--   <a>associateRepository_repository</a> - The repository to associate.
newAssociateRepository :: Repository -> AssociateRepository

-- | A <tt>KMSKeyDetails</tt> object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
associateRepository_kmsKeyDetails :: Lens' AssociateRepository (Maybe KMSKeyDetails)

-- | Amazon CodeGuru Reviewer uses this value to prevent the accidental
--   creation of duplicate repository associations if there are failures
--   and retries.
associateRepository_clientRequestToken :: Lens' AssociateRepository (Maybe Text)

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
associateRepository_tags :: Lens' AssociateRepository (Maybe (HashMap Text Text))

-- | The repository to associate.
associateRepository_repository :: Lens' AssociateRepository Repository

-- | <i>See:</i> <a>newAssociateRepositoryResponse</a> smart constructor.
data AssociateRepositoryResponse
AssociateRepositoryResponse' :: Maybe RepositoryAssociation -> Maybe (HashMap Text Text) -> Int -> AssociateRepositoryResponse

-- | Information about the repository association.
[$sel:repositoryAssociation:AssociateRepositoryResponse'] :: AssociateRepositoryResponse -> Maybe RepositoryAssociation

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
[$sel:tags:AssociateRepositoryResponse'] :: AssociateRepositoryResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:AssociateRepositoryResponse'] :: AssociateRepositoryResponse -> Int

-- | Create a value of <a>AssociateRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryAssociation:AssociateRepositoryResponse'</a>,
--   <a>associateRepositoryResponse_repositoryAssociation</a> - Information
--   about the repository association.
--   
--   <a>$sel:tags:AssociateRepository'</a>,
--   <a>associateRepositoryResponse_tags</a> - An array of key-value pairs
--   used to tag an associated repository. A tag is a custom attribute
--   label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:AssociateRepositoryResponse'</a>,
--   <a>associateRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newAssociateRepositoryResponse :: Int -> AssociateRepositoryResponse

-- | Information about the repository association.
associateRepositoryResponse_repositoryAssociation :: Lens' AssociateRepositoryResponse (Maybe RepositoryAssociation)

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
associateRepositoryResponse_tags :: Lens' AssociateRepositoryResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
associateRepositoryResponse_httpStatus :: Lens' AssociateRepositoryResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepository
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepository
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepository
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepository
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepositoryResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepositoryResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepositoryResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepositoryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepository
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepositoryResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepository
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepository
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepository
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepository
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepository
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.AssociateRepository.AssociateRepository


-- | Removes a tag from an associated repository.
module Network.AWS.CodeGuruReviewer.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | A list of the keys for each tag you want to remove from an associated
--   repository.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the <a>RepositoryAssociation</a> object. You can retrieve this ARN by
--   calling <a>ListRepositoryAssociations</a> .
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of the keys for each tag you want to remove from an associated
--   repository.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
untagResource_resourceArn :: Lens' UntagResource Text

-- | A list of the keys for each tag you want to remove from an associated
--   repository.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.CodeGuruReviewer.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.CodeGuruReviewer.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.CodeGuruReviewer.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.CodeGuruReviewer.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeGuruReviewer.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeGuruReviewer.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CodeGuruReviewer.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeGuruReviewer.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeGuruReviewer.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeGuruReviewer.UntagResource.UntagResource


module Network.AWS.CodeGuruReviewer.Lens

-- | An Amazon Web Services user's account ID or Amazon Resource Name
--   (ARN). Use this ID to query the recommendation feedback for a code
--   review from that user.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
listRecommendationFeedback_userIds :: Lens' ListRecommendationFeedback (Maybe (NonEmpty Text))

-- | If <tt>nextToken</tt> is returned, there are more results available.
--   The value of nextToken is a unique pagination token for each page.
--   Make the call again using the returned token to retrieve the next
--   page. Keep all other arguments unchanged.
listRecommendationFeedback_nextToken :: Lens' ListRecommendationFeedback (Maybe Text)

-- | Used to query the recommendation feedback for a given recommendation.
listRecommendationFeedback_recommendationIds :: Lens' ListRecommendationFeedback (Maybe (NonEmpty Text))

-- | The maximum number of results that are returned per call. The default
--   is 100.
listRecommendationFeedback_maxResults :: Lens' ListRecommendationFeedback (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
listRecommendationFeedback_codeReviewArn :: Lens' ListRecommendationFeedback Text

-- | If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
listRecommendationFeedbackResponse_nextToken :: Lens' ListRecommendationFeedbackResponse (Maybe Text)

-- | Recommendation feedback summaries corresponding to the code review
--   ARN.
listRecommendationFeedbackResponse_recommendationFeedbackSummaries :: Lens' ListRecommendationFeedbackResponse (Maybe [RecommendationFeedbackSummary])

-- | The response's http status code.
listRecommendationFeedbackResponse_httpStatus :: Lens' ListRecommendationFeedbackResponse Int

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
disassociateRepository_associationArn :: Lens' DisassociateRepository Text

-- | Information about the disassociated repository.
disassociateRepositoryResponse_repositoryAssociation :: Lens' DisassociateRepositoryResponse (Maybe RepositoryAssociation)

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
disassociateRepositoryResponse_tags :: Lens' DisassociateRepositoryResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
disassociateRepositoryResponse_httpStatus :: Lens' DisassociateRepositoryResponse Int

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
describeRepositoryAssociation_associationArn :: Lens' DescribeRepositoryAssociation Text

-- | Information about the repository association.
describeRepositoryAssociationResponse_repositoryAssociation :: Lens' DescribeRepositoryAssociationResponse (Maybe RepositoryAssociation)

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
describeRepositoryAssociationResponse_tags :: Lens' DescribeRepositoryAssociationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeRepositoryAssociationResponse_httpStatus :: Lens' DescribeRepositoryAssociationResponse Int

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
describeCodeReview_codeReviewArn :: Lens' DescribeCodeReview Text

-- | Information about the code review.
describeCodeReviewResponse_codeReview :: Lens' DescribeCodeReviewResponse (Maybe CodeReview)

-- | The response's http status code.
describeCodeReviewResponse_httpStatus :: Lens' DescribeCodeReviewResponse Int

-- | List of repository association states to use as a filter.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
listRepositoryAssociations_states :: Lens' ListRepositoryAssociations (Maybe (NonEmpty RepositoryAssociationState))

-- | List of owners to use as a filter. For Amazon Web Services CodeCommit,
--   it is the name of the CodeCommit account that was used to associate
--   the repository. For other repository source providers, such as
--   Bitbucket and GitHub Enterprise Server, this is name of the account
--   that was used to associate the repository.
listRepositoryAssociations_owners :: Lens' ListRepositoryAssociations (Maybe (NonEmpty Text))

-- | List of provider types to use as a filter.
listRepositoryAssociations_providerTypes :: Lens' ListRepositoryAssociations (Maybe (NonEmpty ProviderType))

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListRepositoryAssociations</tt> request where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value.
--   
--   Treat this token as an opaque identifier that is only used to retrieve
--   the next items in a list and not for other programmatic purposes.
listRepositoryAssociations_nextToken :: Lens' ListRepositoryAssociations (Maybe Text)

-- | List of repository names to use as a filter.
listRepositoryAssociations_names :: Lens' ListRepositoryAssociations (Maybe (NonEmpty Text))

-- | The maximum number of repository association results returned by
--   <tt>ListRepositoryAssociations</tt> in paginated output. When this
--   parameter is used, <tt>ListRepositoryAssociations</tt> only returns
--   <tt>maxResults</tt> results in a single page with a <tt>nextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>ListRepositoryAssociations</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If this parameter is not used,
--   <tt>ListRepositoryAssociations</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
listRepositoryAssociations_maxResults :: Lens' ListRepositoryAssociations (Maybe Natural)

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListRecommendations</tt> request. When the results of a
--   <tt>ListRecommendations</tt> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listRepositoryAssociationsResponse_nextToken :: Lens' ListRepositoryAssociationsResponse (Maybe Text)

-- | A list of repository associations that meet the criteria of the
--   request.
listRepositoryAssociationsResponse_repositoryAssociationSummaries :: Lens' ListRepositoryAssociationsResponse (Maybe [RepositoryAssociationSummary])

-- | The response's http status code.
listRepositoryAssociationsResponse_httpStatus :: Lens' ListRepositoryAssociationsResponse Int

-- | Optional parameter to describe the feedback for a given user. If this
--   is not supplied, it defaults to the user making the request.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
describeRecommendationFeedback_userId :: Lens' DescribeRecommendationFeedback (Maybe Text)

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
describeRecommendationFeedback_codeReviewArn :: Lens' DescribeRecommendationFeedback Text

-- | The recommendation ID that can be used to track the provided
--   recommendations and then to collect the feedback.
describeRecommendationFeedback_recommendationId :: Lens' DescribeRecommendationFeedback Text

-- | The recommendation feedback given by the user.
describeRecommendationFeedbackResponse_recommendationFeedback :: Lens' DescribeRecommendationFeedbackResponse (Maybe RecommendationFeedback)

-- | The response's http status code.
describeRecommendationFeedbackResponse_httpStatus :: Lens' DescribeRecommendationFeedbackResponse Int

-- | Pagination token.
listRecommendations_nextToken :: Lens' ListRecommendations (Maybe Text)

-- | The maximum number of results that are returned per call. The default
--   is 100.
listRecommendations_maxResults :: Lens' ListRecommendations (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
listRecommendations_codeReviewArn :: Lens' ListRecommendations Text

-- | Pagination token.
listRecommendationsResponse_nextToken :: Lens' ListRecommendationsResponse (Maybe Text)

-- | List of recommendations for the requested code review.
listRecommendationsResponse_recommendationSummaries :: Lens' ListRecommendationsResponse (Maybe [RecommendationSummary])

-- | The response's http status code.
listRecommendationsResponse_httpStatus :: Lens' ListRecommendationsResponse Int

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
tagResource_resourceArn :: Lens' TagResource Text

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | Amazon CodeGuru Reviewer uses this value to prevent the accidental
--   creation of duplicate code reviews if there are failures and retries.
createCodeReview_clientRequestToken :: Lens' CreateCodeReview (Maybe Text)

-- | The name of the code review. The name of each code review in your
--   Amazon Web Services account must be unique.
createCodeReview_name :: Lens' CreateCodeReview Text

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
--   
--   A code review can only be created on an associated repository. This is
--   the ARN of the associated repository.
createCodeReview_repositoryAssociationArn :: Lens' CreateCodeReview Text

-- | The type of code review to create. This is specified using a
--   <a>CodeReviewType</a> object. You can create a code review only of
--   type <tt>RepositoryAnalysis</tt>.
createCodeReview_type :: Lens' CreateCodeReview CodeReviewType

-- | Undocumented member.
createCodeReviewResponse_codeReview :: Lens' CreateCodeReviewResponse (Maybe CodeReview)

-- | The response's http status code.
createCodeReviewResponse_httpStatus :: Lens' CreateCodeReviewResponse Int

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
untagResource_resourceArn :: Lens' UntagResource Text

-- | A list of the keys for each tag you want to remove from an associated
--   repository.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | List of states for filtering that needs to be applied before
--   displaying the result. For example, <tt>states=[Pending]</tt> lists
--   code reviews in the Pending state.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
listCodeReviews_states :: Lens' ListCodeReviews (Maybe (NonEmpty JobState))

-- | List of provider types for filtering that needs to be applied before
--   displaying the result. For example, <tt>providerTypes=[GitHub]</tt>
--   lists code reviews from GitHub.
listCodeReviews_providerTypes :: Lens' ListCodeReviews (Maybe (NonEmpty ProviderType))

-- | List of repository names for filtering that needs to be applied before
--   displaying the result.
listCodeReviews_repositoryNames :: Lens' ListCodeReviews (Maybe (NonEmpty Text))

-- | If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
listCodeReviews_nextToken :: Lens' ListCodeReviews (Maybe Text)

-- | The maximum number of results that are returned per call. The default
--   is 100.
listCodeReviews_maxResults :: Lens' ListCodeReviews (Maybe Natural)

-- | The type of code reviews to list in the response.
listCodeReviews_type :: Lens' ListCodeReviews Type

-- | A list of code reviews that meet the criteria of the request.
listCodeReviewsResponse_codeReviewSummaries :: Lens' ListCodeReviewsResponse (Maybe [CodeReviewSummary])

-- | Pagination token.
listCodeReviewsResponse_nextToken :: Lens' ListCodeReviewsResponse (Maybe Text)

-- | The response's http status code.
listCodeReviewsResponse_httpStatus :: Lens' ListCodeReviewsResponse Int

-- | A <tt>KMSKeyDetails</tt> object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
associateRepository_kmsKeyDetails :: Lens' AssociateRepository (Maybe KMSKeyDetails)

-- | Amazon CodeGuru Reviewer uses this value to prevent the accidental
--   creation of duplicate repository associations if there are failures
--   and retries.
associateRepository_clientRequestToken :: Lens' AssociateRepository (Maybe Text)

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
associateRepository_tags :: Lens' AssociateRepository (Maybe (HashMap Text Text))

-- | The repository to associate.
associateRepository_repository :: Lens' AssociateRepository Repository

-- | Information about the repository association.
associateRepositoryResponse_repositoryAssociation :: Lens' AssociateRepositoryResponse (Maybe RepositoryAssociation)

-- | An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
associateRepositoryResponse_tags :: Lens' AssociateRepositoryResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
associateRepositoryResponse_httpStatus :: Lens' AssociateRepositoryResponse Int

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
putRecommendationFeedback_codeReviewArn :: Lens' PutRecommendationFeedback Text

-- | The recommendation ID that can be used to track the provided
--   recommendations and then to collect the feedback.
putRecommendationFeedback_recommendationId :: Lens' PutRecommendationFeedback Text

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
--   If you send an empty list it clears all your feedback.
putRecommendationFeedback_reactions :: Lens' PutRecommendationFeedback [Reaction]

-- | The response's http status code.
putRecommendationFeedbackResponse_httpStatus :: Lens' PutRecommendationFeedbackResponse Int

-- | The source branch for a diff in an associated repository.
branchDiffSourceCodeType_sourceBranchName :: Lens' BranchDiffSourceCodeType Text

-- | The destination branch for a diff in an associated repository.
branchDiffSourceCodeType_destinationBranchName :: Lens' BranchDiffSourceCodeType Text

-- | The S3 object key for a build artifacts .zip file that contains .jar
--   or .class files. This is required for a code review with security
--   analysis. For more information, see <a>Create code reviews with
--   security analysis</a> in the <i>Amazon CodeGuru Reviewer User
--   Guide</i>.
codeArtifacts_buildArtifactsObjectKey :: Lens' CodeArtifacts (Maybe Text)

-- | The S3 object key for a source code .zip file. This is required for
--   all code reviews.
codeArtifacts_sourceCodeArtifactsObjectKey :: Lens' CodeArtifacts Text

-- | The name of the Amazon Web Services CodeCommit repository. For more
--   information, see <a>repositoryName</a> in the <i>Amazon Web Services
--   CodeCommit API Reference</i>.
codeCommitRepository_name :: Lens' CodeCommitRepository Text

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   that contains the reviewed source code. You can retrieve associated
--   repository ARNs by calling <a>ListRepositoryAssociations</a> .
codeReview_associationArn :: Lens' CodeReview (Maybe Text)

-- | The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
codeReview_state :: Lens' CodeReview (Maybe JobState)

-- | The statistics from the code review.
codeReview_metrics :: Lens' CodeReview (Maybe Metrics)

-- | The pull request ID for the code review.
codeReview_pullRequestId :: Lens' CodeReview (Maybe Text)

-- | The type of repository that contains the reviewed code (for example,
--   GitHub or Bitbucket).
codeReview_providerType :: Lens' CodeReview (Maybe ProviderType)

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
codeReview_owner :: Lens' CodeReview (Maybe Text)

-- | The name of the code review.
codeReview_name :: Lens' CodeReview (Maybe Text)

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
codeReview_codeReviewArn :: Lens' CodeReview (Maybe Text)

-- | The name of the repository.
codeReview_repositoryName :: Lens' CodeReview (Maybe Text)

-- | The type of code review.
codeReview_type :: Lens' CodeReview (Maybe Type)

-- | The type of the source code for the code review.
codeReview_sourceCodeType :: Lens' CodeReview (Maybe SourceCodeType)

-- | The reason for the state of the code review.
codeReview_stateReason :: Lens' CodeReview (Maybe Text)

-- | The time, in milliseconds since the epoch, when the code review was
--   created.
codeReview_createdTimeStamp :: Lens' CodeReview (Maybe UTCTime)

-- | They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
codeReview_analysisTypes :: Lens' CodeReview (Maybe [AnalysisType])

-- | The time, in milliseconds since the epoch, when the code review was
--   last updated.
codeReview_lastUpdatedTimeStamp :: Lens' CodeReview (Maybe UTCTime)

-- | The state of the code review.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
codeReviewSummary_state :: Lens' CodeReviewSummary (Maybe JobState)

-- | The pull request ID for the code review.
codeReviewSummary_pullRequestId :: Lens' CodeReviewSummary (Maybe Text)

-- | The provider type of the repository association.
codeReviewSummary_providerType :: Lens' CodeReviewSummary (Maybe ProviderType)

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
codeReviewSummary_owner :: Lens' CodeReviewSummary (Maybe Text)

-- | The name of the code review.
codeReviewSummary_name :: Lens' CodeReviewSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
codeReviewSummary_codeReviewArn :: Lens' CodeReviewSummary (Maybe Text)

-- | The name of the repository.
codeReviewSummary_repositoryName :: Lens' CodeReviewSummary (Maybe Text)

-- | The type of the code review.
codeReviewSummary_type :: Lens' CodeReviewSummary (Maybe Type)

-- | Undocumented member.
codeReviewSummary_sourceCodeType :: Lens' CodeReviewSummary (Maybe SourceCodeType)

-- | The statistics from the code review.
codeReviewSummary_metricsSummary :: Lens' CodeReviewSummary (Maybe MetricsSummary)

-- | The time, in milliseconds since the epoch, when the code review was
--   created.
codeReviewSummary_createdTimeStamp :: Lens' CodeReviewSummary (Maybe UTCTime)

-- | The time, in milliseconds since the epoch, when the code review was
--   last updated.
codeReviewSummary_lastUpdatedTimeStamp :: Lens' CodeReviewSummary (Maybe UTCTime)

-- | They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
codeReviewType_analysisTypes :: Lens' CodeReviewType (Maybe [AnalysisType])

-- | A code review that analyzes all code under a specified branch in an
--   associated repository. The associated repository is specified using
--   its ARN in <a>CreateCodeReview</a> .
codeReviewType_repositoryAnalysis :: Lens' CodeReviewType RepositoryAnalysis

-- | The SHA of the source commit used to generate a commit diff. This
--   field is required for a pull request code review.
commitDiffSourceCodeType_sourceCommit :: Lens' CommitDiffSourceCodeType (Maybe Text)

-- | The SHA of the merge base of a commit.
commitDiffSourceCodeType_mergeBaseCommit :: Lens' CommitDiffSourceCodeType (Maybe Text)

-- | The SHA of the destination commit used to generate a commit diff. This
--   field is required for a pull request code review.
commitDiffSourceCodeType_destinationCommit :: Lens' CommitDiffSourceCodeType (Maybe Text)

-- | The state of an event. The state might be open, closed, or another
--   state.
eventInfo_state :: Lens' EventInfo (Maybe Text)

-- | The name of the event. The possible names are <tt>pull_request</tt>,
--   <tt>workflow_dispatch</tt>, <tt>schedule</tt>, and <tt>push</tt>
eventInfo_name :: Lens' EventInfo (Maybe Text)

-- | The encryption option for a repository association. It is either owned
--   by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).
kmsKeyDetails_encryptionOption :: Lens' KMSKeyDetails (Maybe EncryptionOption)

-- | The ID of the Amazon Web Services KMS key that is associated with a
--   respository association.
kmsKeyDetails_kmsKeyId :: Lens' KMSKeyDetails (Maybe Text)

-- | Total number of recommendations found in the code review.
metrics_findingsCount :: Lens' Metrics (Maybe Integer)

-- | <tt>MeteredLinesOfCode</tt> is the number of lines of code in the
--   repository where the code review happened. This does not include
--   non-code lines such as comments and blank lines.
metrics_meteredLinesOfCodeCount :: Lens' Metrics (Maybe Integer)

-- | Total number of recommendations found in the code review.
metricsSummary_findingsCount :: Lens' MetricsSummary (Maybe Integer)

-- | Lines of code metered in the code review. For the initial code review
--   pull request and all subsequent revisions, this includes all lines of
--   code in the files added to the pull request. In subsequent revisions,
--   for files that already existed in the pull request, this includes only
--   the changed lines of code. In both cases, this does not include
--   non-code lines such as comments and import statements. For example, if
--   you submit a pull request containing 5 files, each with 500 lines of
--   code, and in a subsequent revision you added a new file with 200 lines
--   of code, and also modified a total of 25 lines across the initial 5
--   files, <tt>MeteredLinesOfCodeCount</tt> includes the first 5 files (5
--   * 500 = 2,500 lines), the new file (200 lines) and the 25 changed
--   lines of code for a total of 2,725 lines of code.
metricsSummary_meteredLinesOfCodeCount :: Lens' MetricsSummary (Maybe Integer)

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
recommendationFeedback_recommendationId :: Lens' RecommendationFeedback (Maybe Text)

-- | The ID of the user that made the API call.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
recommendationFeedback_userId :: Lens' RecommendationFeedback (Maybe Text)

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
--   You can send an empty list to clear off all your feedback.
recommendationFeedback_reactions :: Lens' RecommendationFeedback (Maybe [Reaction])

-- | The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
recommendationFeedback_codeReviewArn :: Lens' RecommendationFeedback (Maybe Text)

-- | The time at which the feedback was created.
recommendationFeedback_createdTimeStamp :: Lens' RecommendationFeedback (Maybe UTCTime)

-- | The time at which the feedback was last updated.
recommendationFeedback_lastUpdatedTimeStamp :: Lens' RecommendationFeedback (Maybe UTCTime)

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
recommendationFeedbackSummary_recommendationId :: Lens' RecommendationFeedbackSummary (Maybe Text)

-- | The ID of the user that gave the feedback.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
recommendationFeedbackSummary_userId :: Lens' RecommendationFeedbackSummary (Maybe Text)

-- | List for storing reactions. Reactions are utf-8 text code for emojis.
recommendationFeedbackSummary_reactions :: Lens' RecommendationFeedbackSummary (Maybe [Reaction])

-- | The recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
recommendationSummary_recommendationId :: Lens' RecommendationSummary (Maybe Text)

-- | Name of the file on which a recommendation is provided.
recommendationSummary_filePath :: Lens' RecommendationSummary (Maybe Text)

-- | The severity of the issue in the code that generated this
--   recommendation.
recommendationSummary_severity :: Lens' RecommendationSummary (Maybe Severity)

-- | Metadata about a rule. Rule metadata includes an ID, a name, a list of
--   tags, and a short and long description. CodeGuru Reviewer uses rules
--   to analyze code. A rule's recommendation is included in analysis
--   results if code is detected that violates the rule.
recommendationSummary_ruleMetadata :: Lens' RecommendationSummary (Maybe RuleMetadata)

-- | Start line from where the recommendation is applicable in the source
--   commit or source branch.
recommendationSummary_startLine :: Lens' RecommendationSummary (Maybe Int)

-- | Last line where the recommendation is applicable in the source commit
--   or source branch. For a single line comment the start line and end
--   line values are the same.
recommendationSummary_endLine :: Lens' RecommendationSummary (Maybe Int)

-- | A description of the recommendation generated by CodeGuru Reviewer for
--   the lines of code between the start line and the end line.
recommendationSummary_description :: Lens' RecommendationSummary (Maybe Text)

-- | The type of a recommendation.
recommendationSummary_recommendationCategory :: Lens' RecommendationSummary (Maybe RecommendationCategory)

-- | Information about an Amazon Web Services CodeCommit repository.
repository_codeCommit :: Lens' Repository (Maybe CodeCommitRepository)

-- | Information about a GitHub Enterprise Server repository.
repository_gitHubEnterpriseServer :: Lens' Repository (Maybe ThirdPartySourceRepository)

-- | Undocumented member.
repository_s3Bucket :: Lens' Repository (Maybe S3Repository)

-- | Information about a Bitbucket repository.
repository_bitbucket :: Lens' Repository (Maybe ThirdPartySourceRepository)

-- | A <a>SourceCodeType</a> that specifies the tip of a branch in an
--   associated repository.
repositoryAnalysis_repositoryHead :: Lens' RepositoryAnalysis (Maybe RepositoryHeadSourceCodeType)

-- | Undocumented member.
repositoryAnalysis_sourceCodeType :: Lens' RepositoryAnalysis (Maybe SourceCodeType)

-- | The Amazon Resource Name (ARN) identifying the repository association.
repositoryAssociation_associationArn :: Lens' RepositoryAssociation (Maybe Text)

-- | The ID of the repository association.
repositoryAssociation_associationId :: Lens' RepositoryAssociation (Maybe Text)

-- | The state of the repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
repositoryAssociation_state :: Lens' RepositoryAssociation (Maybe RepositoryAssociationState)

-- | Undocumented member.
repositoryAssociation_s3RepositoryDetails :: Lens' RepositoryAssociation (Maybe S3RepositoryDetails)

-- | The provider type of the repository association.
repositoryAssociation_providerType :: Lens' RepositoryAssociation (Maybe ProviderType)

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
repositoryAssociation_owner :: Lens' RepositoryAssociation (Maybe Text)

-- | The name of the repository.
repositoryAssociation_name :: Lens' RepositoryAssociation (Maybe Text)

-- | A <tt>KMSKeyDetails</tt> object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
repositoryAssociation_kmsKeyDetails :: Lens' RepositoryAssociation (Maybe KMSKeyDetails)

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
repositoryAssociation_connectionArn :: Lens' RepositoryAssociation (Maybe Text)

-- | A description of why the repository association is in the current
--   state.
repositoryAssociation_stateReason :: Lens' RepositoryAssociation (Maybe Text)

-- | The time, in milliseconds since the epoch, when the repository
--   association was created.
repositoryAssociation_createdTimeStamp :: Lens' RepositoryAssociation (Maybe UTCTime)

-- | The time, in milliseconds since the epoch, when the repository
--   association was last updated.
repositoryAssociation_lastUpdatedTimeStamp :: Lens' RepositoryAssociation (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
repositoryAssociationSummary_associationArn :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The repository association ID.
repositoryAssociationSummary_associationId :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The state of the repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
repositoryAssociationSummary_state :: Lens' RepositoryAssociationSummary (Maybe RepositoryAssociationState)

-- | The provider type of the repository association.
repositoryAssociationSummary_providerType :: Lens' RepositoryAssociationSummary (Maybe ProviderType)

-- | The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
repositoryAssociationSummary_owner :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The name of the repository association.
repositoryAssociationSummary_name :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
repositoryAssociationSummary_connectionArn :: Lens' RepositoryAssociationSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, since the repository
--   association was last updated.
repositoryAssociationSummary_lastUpdatedTimeStamp :: Lens' RepositoryAssociationSummary (Maybe UTCTime)

-- | The name of the branch in an associated repository. The
--   <tt>RepositoryHeadSourceCodeType</tt> specifies the tip of this
--   branch.
repositoryHeadSourceCodeType_branchName :: Lens' RepositoryHeadSourceCodeType Text

-- | The ID of the request. This is required for a pull request code
--   review.
requestMetadata_requestId :: Lens' RequestMetadata (Maybe Text)

-- | Information about the event associated with a code review.
requestMetadata_eventInfo :: Lens' RequestMetadata (Maybe EventInfo)

-- | The name of the repository vendor used to upload code to an S3 bucket
--   for a CI/CD code review. For example, if code and artifacts are
--   uploaded to an S3 bucket for a CI/CD code review by GitHub scripts
--   from a GitHub repository, then the repository association's
--   <tt>ProviderType</tt> is <tt>S3Bucket</tt> and the CI/CD repository
--   vendor name is GitHub. For more information, see the definition for
--   <tt>ProviderType</tt> in <a>RepositoryAssociation</a>.
requestMetadata_vendorName :: Lens' RequestMetadata (Maybe VendorName)

-- | An identifier, such as a name or account ID, that is associated with
--   the requester. The <tt>Requester</tt> is used to capture the
--   <tt>author/actor</tt> name of the event request.
requestMetadata_requester :: Lens' RequestMetadata (Maybe Text)

-- | A long description of the rule.
ruleMetadata_longDescription :: Lens' RuleMetadata (Maybe Text)

-- | Tags that are associated with the rule.
ruleMetadata_ruleTags :: Lens' RuleMetadata (Maybe (NonEmpty Text))

-- | The ID of the rule.
ruleMetadata_ruleId :: Lens' RuleMetadata (Maybe Text)

-- | The name of the rule.
ruleMetadata_ruleName :: Lens' RuleMetadata (Maybe Text)

-- | A short description of the rule.
ruleMetadata_shortDescription :: Lens' RuleMetadata (Maybe Text)

-- | An <tt>S3RepositoryDetails</tt> object that specifies the name of an
--   S3 bucket and a <tt>CodeArtifacts</tt> object. The
--   <tt>CodeArtifacts</tt> object includes the S3 object keys for a source
--   code .zip file and for a build artifacts .zip file.
s3BucketRepository_details :: Lens' S3BucketRepository (Maybe S3RepositoryDetails)

-- | The name of the repository when the <tt>ProviderType</tt> is
--   <tt>S3Bucket</tt>.
s3BucketRepository_name :: Lens' S3BucketRepository Text

-- | The name of the repository in the S3 bucket.
s3Repository_name :: Lens' S3Repository Text

-- | The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
s3Repository_bucketName :: Lens' S3Repository Text

-- | A <tt>CodeArtifacts</tt> object. The <tt>CodeArtifacts</tt> object
--   includes the S3 object key for a source code .zip file and for a build
--   artifacts .zip file that contains .jar or .class files.
s3RepositoryDetails_codeArtifacts :: Lens' S3RepositoryDetails (Maybe CodeArtifacts)

-- | The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
s3RepositoryDetails_bucketName :: Lens' S3RepositoryDetails (Maybe Text)

-- | Information about an associated repository in an S3 bucket that
--   includes its name and an <tt>S3RepositoryDetails</tt> object. The
--   <tt>S3RepositoryDetails</tt> object includes the name of an S3 bucket,
--   an S3 key for a source code .zip file, and an S3 key for a build
--   artifacts .zip file. <tt>S3BucketRepository</tt> is required in
--   <a>SourceCodeType</a> for <tt>S3BucketRepository</tt> based code
--   reviews.
sourceCodeType_s3BucketRepository :: Lens' SourceCodeType (Maybe S3BucketRepository)

-- | Metadata that is associated with a code review. This applies to any
--   type of code review supported by CodeGuru Reviewer. The
--   <tt>RequestMetadaa</tt> field captures any event metadata. For
--   example, it might capture metadata associated with an event trigger,
--   such as a push or a pull request.
sourceCodeType_requestMetadata :: Lens' SourceCodeType (Maybe RequestMetadata)

-- | Undocumented member.
sourceCodeType_repositoryHead :: Lens' SourceCodeType (Maybe RepositoryHeadSourceCodeType)

-- | A <a>SourceCodeType</a> that specifies a commit diff created by a pull
--   request on an associated repository.
sourceCodeType_commitDiff :: Lens' SourceCodeType (Maybe CommitDiffSourceCodeType)

-- | A type of <a>SourceCodeType</a> that specifies a source branch name
--   and a destination branch name in an associated repository.
sourceCodeType_branchDiff :: Lens' SourceCodeType (Maybe BranchDiffSourceCodeType)

-- | The name of the third party source repository.
thirdPartySourceRepository_name :: Lens' ThirdPartySourceRepository Text

-- | The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar
--   Connections connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
thirdPartySourceRepository_connectionArn :: Lens' ThirdPartySourceRepository Text

-- | The owner of the repository. For a GitHub, GitHub Enterprise, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, this can be the username or
--   Amazon Web Services account ID.
thirdPartySourceRepository_owner :: Lens' ThirdPartySourceRepository Text


module Network.AWS.CodeGuruReviewer.Waiters

-- | Polls <a>DescribeCodeReview</a> every 10 seconds until a successful
--   state is reached. An error is returned after 60 failed checks.
newCodeReviewCompleted :: Wait DescribeCodeReview

-- | Polls <a>DescribeRepositoryAssociation</a> every 10 seconds until a
--   successful state is reached. An error is returned after 20 failed
--   checks.
newRepositoryAssociationSucceeded :: Wait DescribeRepositoryAssociation


-- | Derived from API version <tt>2019-09-19</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   This section provides documentation for the Amazon CodeGuru Reviewer
--   API operations. CodeGuru Reviewer is a service that uses program
--   analysis and machine learning to detect potential defects that are
--   difficult for developers to find and recommends fixes in your Java and
--   Python code.
--   
--   By proactively detecting and providing recommendations for addressing
--   code defects and implementing best practices, CodeGuru Reviewer
--   improves the overall quality and maintainability of your code base
--   during the code review stage. For more information about CodeGuru
--   Reviewer, see the
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>codeguru<i>latest</i>reviewer-ug<i>welcome.html
--   Amazon CodeGuru Reviewer User Guide&gt;.</i>
--   
--   To improve the security of your CodeGuru Reviewer API calls, you can
--   establish a private connection between your VPC and CodeGuru Reviewer
--   by creating an <i>interface VPC endpoint</i>. For more information,
--   see <a>CodeGuru Reviewer and interface VPC endpoints (Amazon Web
--   Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User
--   Guide</i>.
module Network.AWS.CodeGuruReviewer

-- | API version <tt>2019-09-19</tt> of the Amazon CodeGuru Reviewer SDK
--   configuration.
defaultService :: Service

-- | The input fails to satisfy the specified constraints.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation would cause a conflict with the current state
--   of a service resource associated with the request. Resolve the
--   conflict before retrying this request.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource specified in the request was not found.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The server encountered an internal error and is unable to complete the
--   request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource specified in the request was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>DescribeCodeReview</a> every 10 seconds until a successful
--   state is reached. An error is returned after 60 failed checks.
newCodeReviewCompleted :: Wait DescribeCodeReview

-- | Polls <a>DescribeRepositoryAssociation</a> every 10 seconds until a
--   successful state is reached. An error is returned after 20 failed
--   checks.
newRepositoryAssociationSucceeded :: Wait DescribeRepositoryAssociation

-- | <i>See:</i> <a>newListRecommendationFeedback</a> smart constructor.
data ListRecommendationFeedback
ListRecommendationFeedback' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> Text -> ListRecommendationFeedback

-- | Create a value of <a>ListRecommendationFeedback</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userIds:ListRecommendationFeedback'</a>,
--   <a>listRecommendationFeedback_userIds</a> - An Amazon Web Services
--   user's account ID or Amazon Resource Name (ARN). Use this ID to query
--   the recommendation feedback for a code review from that user.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
--   
--   <a>$sel:nextToken:ListRecommendationFeedback'</a>,
--   <a>listRecommendationFeedback_nextToken</a> - If <tt>nextToken</tt> is
--   returned, there are more results available. The value of nextToken is
--   a unique pagination token for each page. Make the call again using the
--   returned token to retrieve the next page. Keep all other arguments
--   unchanged.
--   
--   <a>$sel:recommendationIds:ListRecommendationFeedback'</a>,
--   <a>listRecommendationFeedback_recommendationIds</a> - Used to query
--   the recommendation feedback for a given recommendation.
--   
--   <a>$sel:maxResults:ListRecommendationFeedback'</a>,
--   <a>listRecommendationFeedback_maxResults</a> - The maximum number of
--   results that are returned per call. The default is 100.
--   
--   <a>$sel:codeReviewArn:ListRecommendationFeedback'</a>,
--   <a>listRecommendationFeedback_codeReviewArn</a> - The Amazon Resource
--   Name (ARN) of the <a>CodeReview</a> object.
newListRecommendationFeedback :: Text -> ListRecommendationFeedback

-- | <i>See:</i> <a>newListRecommendationFeedbackResponse</a> smart
--   constructor.
data ListRecommendationFeedbackResponse
ListRecommendationFeedbackResponse' :: Maybe Text -> Maybe [RecommendationFeedbackSummary] -> Int -> ListRecommendationFeedbackResponse

-- | Create a value of <a>ListRecommendationFeedbackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecommendationFeedback'</a>,
--   <a>listRecommendationFeedbackResponse_nextToken</a> - If nextToken is
--   returned, there are more results available. The value of nextToken is
--   a unique pagination token for each page. Make the call again using the
--   returned token to retrieve the next page. Keep all other arguments
--   unchanged.
--   
--   
--   <a>$sel:recommendationFeedbackSummaries:ListRecommendationFeedbackResponse'</a>,
--   <a>listRecommendationFeedbackResponse_recommendationFeedbackSummaries</a>
--   - Recommendation feedback summaries corresponding to the code review
--   ARN.
--   
--   <a>$sel:httpStatus:ListRecommendationFeedbackResponse'</a>,
--   <a>listRecommendationFeedbackResponse_httpStatus</a> - The response's
--   http status code.
newListRecommendationFeedbackResponse :: Int -> ListRecommendationFeedbackResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the <a>RepositoryAssociation</a> object. You can retrieve
--   this ARN by calling <a>ListRepositoryAssociations</a> .
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - An array of key-value pairs
--   used to tag an associated repository. A tag is a custom attribute
--   label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDisassociateRepository</a> smart constructor.
data DisassociateRepository
DisassociateRepository' :: Text -> DisassociateRepository

-- | Create a value of <a>DisassociateRepository</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:DisassociateRepository'</a>,
--   <a>disassociateRepository_associationArn</a> - The Amazon Resource
--   Name (ARN) of the <a>RepositoryAssociation</a> object. You can
--   retrieve this ARN by calling <a>ListRepositoryAssociations</a> .
newDisassociateRepository :: Text -> DisassociateRepository

-- | <i>See:</i> <a>newDisassociateRepositoryResponse</a> smart
--   constructor.
data DisassociateRepositoryResponse
DisassociateRepositoryResponse' :: Maybe RepositoryAssociation -> Maybe (HashMap Text Text) -> Int -> DisassociateRepositoryResponse

-- | Create a value of <a>DisassociateRepositoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryAssociation:DisassociateRepositoryResponse'</a>,
--   <a>disassociateRepositoryResponse_repositoryAssociation</a> -
--   Information about the disassociated repository.
--   
--   <a>$sel:tags:DisassociateRepositoryResponse'</a>,
--   <a>disassociateRepositoryResponse_tags</a> - An array of key-value
--   pairs used to tag an associated repository. A tag is a custom
--   attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DisassociateRepositoryResponse'</a>,
--   <a>disassociateRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newDisassociateRepositoryResponse :: Int -> DisassociateRepositoryResponse

-- | <i>See:</i> <a>newDescribeRepositoryAssociation</a> smart constructor.
data DescribeRepositoryAssociation
DescribeRepositoryAssociation' :: Text -> DescribeRepositoryAssociation

-- | Create a value of <a>DescribeRepositoryAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:DescribeRepositoryAssociation'</a>,
--   <a>describeRepositoryAssociation_associationArn</a> - The Amazon
--   Resource Name (ARN) of the <a>RepositoryAssociation</a> object. You
--   can retrieve this ARN by calling <a>ListRepositoryAssociations</a> .
newDescribeRepositoryAssociation :: Text -> DescribeRepositoryAssociation

-- | <i>See:</i> <a>newDescribeRepositoryAssociationResponse</a> smart
--   constructor.
data DescribeRepositoryAssociationResponse
DescribeRepositoryAssociationResponse' :: Maybe RepositoryAssociation -> Maybe (HashMap Text Text) -> Int -> DescribeRepositoryAssociationResponse

-- | Create a value of <a>DescribeRepositoryAssociationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:repositoryAssociation:DescribeRepositoryAssociationResponse'</a>,
--   <a>describeRepositoryAssociationResponse_repositoryAssociation</a> -
--   Information about the repository association.
--   
--   <a>$sel:tags:DescribeRepositoryAssociationResponse'</a>,
--   <a>describeRepositoryAssociationResponse_tags</a> - An array of
--   key-value pairs used to tag an associated repository. A tag is a
--   custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:DescribeRepositoryAssociationResponse'</a>,
--   <a>describeRepositoryAssociationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRepositoryAssociationResponse :: Int -> DescribeRepositoryAssociationResponse

-- | <i>See:</i> <a>newDescribeCodeReview</a> smart constructor.
data DescribeCodeReview
DescribeCodeReview' :: Text -> DescribeCodeReview

-- | Create a value of <a>DescribeCodeReview</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeReviewArn:DescribeCodeReview'</a>,
--   <a>describeCodeReview_codeReviewArn</a> - The Amazon Resource Name
--   (ARN) of the <a>CodeReview</a> object.
newDescribeCodeReview :: Text -> DescribeCodeReview

-- | <i>See:</i> <a>newDescribeCodeReviewResponse</a> smart constructor.
data DescribeCodeReviewResponse
DescribeCodeReviewResponse' :: Maybe CodeReview -> Int -> DescribeCodeReviewResponse

-- | Create a value of <a>DescribeCodeReviewResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeReview:DescribeCodeReviewResponse'</a>,
--   <a>describeCodeReviewResponse_codeReview</a> - Information about the
--   code review.
--   
--   <a>$sel:httpStatus:DescribeCodeReviewResponse'</a>,
--   <a>describeCodeReviewResponse_httpStatus</a> - The response's http
--   status code.
newDescribeCodeReviewResponse :: Int -> DescribeCodeReviewResponse

-- | <i>See:</i> <a>newListRepositoryAssociations</a> smart constructor.
data ListRepositoryAssociations
ListRepositoryAssociations' :: Maybe (NonEmpty RepositoryAssociationState) -> Maybe (NonEmpty Text) -> Maybe (NonEmpty ProviderType) -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> ListRepositoryAssociations

-- | Create a value of <a>ListRepositoryAssociations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociations_states</a> - List of repository
--   association states to use as a filter.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:owners:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociations_owners</a> - List of owners to use as a
--   filter. For Amazon Web Services CodeCommit, it is the name of the
--   CodeCommit account that was used to associate the repository. For
--   other repository source providers, such as Bitbucket and GitHub
--   Enterprise Server, this is name of the account that was used to
--   associate the repository.
--   
--   <a>$sel:providerTypes:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociations_providerTypes</a> - List of provider
--   types to use as a filter.
--   
--   <a>$sel:nextToken:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociations_nextToken</a> - The <tt>nextToken</tt>
--   value returned from a previous paginated
--   <tt>ListRepositoryAssociations</tt> request where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value.
--   
--   Treat this token as an opaque identifier that is only used to retrieve
--   the next items in a list and not for other programmatic purposes.
--   
--   <a>$sel:names:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociations_names</a> - List of repository names to
--   use as a filter.
--   
--   <a>$sel:maxResults:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociations_maxResults</a> - The maximum number of
--   repository association results returned by
--   <tt>ListRepositoryAssociations</tt> in paginated output. When this
--   parameter is used, <tt>ListRepositoryAssociations</tt> only returns
--   <tt>maxResults</tt> results in a single page with a <tt>nextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>ListRepositoryAssociations</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If this parameter is not used,
--   <tt>ListRepositoryAssociations</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
newListRepositoryAssociations :: ListRepositoryAssociations

-- | <i>See:</i> <a>newListRepositoryAssociationsResponse</a> smart
--   constructor.
data ListRepositoryAssociationsResponse
ListRepositoryAssociationsResponse' :: Maybe Text -> Maybe [RepositoryAssociationSummary] -> Int -> ListRepositoryAssociationsResponse

-- | Create a value of <a>ListRepositoryAssociationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRepositoryAssociations'</a>,
--   <a>listRepositoryAssociationsResponse_nextToken</a> - The
--   <tt>nextToken</tt> value to include in a future
--   <tt>ListRecommendations</tt> request. When the results of a
--   <tt>ListRecommendations</tt> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
--   
--   
--   <a>$sel:repositoryAssociationSummaries:ListRepositoryAssociationsResponse'</a>,
--   <a>listRepositoryAssociationsResponse_repositoryAssociationSummaries</a>
--   - A list of repository associations that meet the criteria of the
--   request.
--   
--   <a>$sel:httpStatus:ListRepositoryAssociationsResponse'</a>,
--   <a>listRepositoryAssociationsResponse_httpStatus</a> - The response's
--   http status code.
newListRepositoryAssociationsResponse :: Int -> ListRepositoryAssociationsResponse

-- | <i>See:</i> <a>newDescribeRecommendationFeedback</a> smart
--   constructor.
data DescribeRecommendationFeedback
DescribeRecommendationFeedback' :: Maybe Text -> Text -> Text -> DescribeRecommendationFeedback

-- | Create a value of <a>DescribeRecommendationFeedback</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userId:DescribeRecommendationFeedback'</a>,
--   <a>describeRecommendationFeedback_userId</a> - Optional parameter to
--   describe the feedback for a given user. If this is not supplied, it
--   defaults to the user making the request.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
--   
--   <a>$sel:codeReviewArn:DescribeRecommendationFeedback'</a>,
--   <a>describeRecommendationFeedback_codeReviewArn</a> - The Amazon
--   Resource Name (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:recommendationId:DescribeRecommendationFeedback'</a>,
--   <a>describeRecommendationFeedback_recommendationId</a> - The
--   recommendation ID that can be used to track the provided
--   recommendations and then to collect the feedback.
newDescribeRecommendationFeedback :: Text -> Text -> DescribeRecommendationFeedback

-- | <i>See:</i> <a>newDescribeRecommendationFeedbackResponse</a> smart
--   constructor.
data DescribeRecommendationFeedbackResponse
DescribeRecommendationFeedbackResponse' :: Maybe RecommendationFeedback -> Int -> DescribeRecommendationFeedbackResponse

-- | Create a value of <a>DescribeRecommendationFeedbackResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:recommendationFeedback:DescribeRecommendationFeedbackResponse'</a>,
--   <a>describeRecommendationFeedbackResponse_recommendationFeedback</a> -
--   The recommendation feedback given by the user.
--   
--   <a>$sel:httpStatus:DescribeRecommendationFeedbackResponse'</a>,
--   <a>describeRecommendationFeedbackResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRecommendationFeedbackResponse :: Int -> DescribeRecommendationFeedbackResponse

-- | <i>See:</i> <a>newListRecommendations</a> smart constructor.
data ListRecommendations
ListRecommendations' :: Maybe Text -> Maybe Natural -> Text -> ListRecommendations

-- | Create a value of <a>ListRecommendations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecommendations'</a>,
--   <a>listRecommendations_nextToken</a> - Pagination token.
--   
--   <a>$sel:maxResults:ListRecommendations'</a>,
--   <a>listRecommendations_maxResults</a> - The maximum number of results
--   that are returned per call. The default is 100.
--   
--   <a>$sel:codeReviewArn:ListRecommendations'</a>,
--   <a>listRecommendations_codeReviewArn</a> - The Amazon Resource Name
--   (ARN) of the <a>CodeReview</a> object.
newListRecommendations :: Text -> ListRecommendations

-- | <i>See:</i> <a>newListRecommendationsResponse</a> smart constructor.
data ListRecommendationsResponse
ListRecommendationsResponse' :: Maybe Text -> Maybe [RecommendationSummary] -> Int -> ListRecommendationsResponse

-- | Create a value of <a>ListRecommendationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecommendations'</a>,
--   <a>listRecommendationsResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:recommendationSummaries:ListRecommendationsResponse'</a>,
--   <a>listRecommendationsResponse_recommendationSummaries</a> - List of
--   recommendations for the requested code review.
--   
--   <a>$sel:httpStatus:ListRecommendationsResponse'</a>,
--   <a>listRecommendationsResponse_httpStatus</a> - The response's http
--   status code.
newListRecommendationsResponse :: Int -> ListRecommendationsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the <a>RepositoryAssociation</a>
--   object. You can retrieve this ARN by calling
--   <a>ListRepositoryAssociations</a> .
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - An array of
--   key-value pairs used to tag an associated repository. A tag is a
--   custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newCreateCodeReview</a> smart constructor.
data CreateCodeReview
CreateCodeReview' :: Maybe Text -> Text -> Text -> CodeReviewType -> CreateCodeReview

-- | Create a value of <a>CreateCodeReview</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:CreateCodeReview'</a>,
--   <a>createCodeReview_clientRequestToken</a> - Amazon CodeGuru Reviewer
--   uses this value to prevent the accidental creation of duplicate code
--   reviews if there are failures and retries.
--   
--   <a>$sel:name:CreateCodeReview'</a>, <a>createCodeReview_name</a> - The
--   name of the code review. The name of each code review in your Amazon
--   Web Services account must be unique.
--   
--   <a>$sel:repositoryAssociationArn:CreateCodeReview'</a>,
--   <a>createCodeReview_repositoryAssociationArn</a> - The Amazon Resource
--   Name (ARN) of the <a>RepositoryAssociation</a> object. You can
--   retrieve this ARN by calling <a>ListRepositoryAssociations</a> .
--   
--   A code review can only be created on an associated repository. This is
--   the ARN of the associated repository.
--   
--   <a>$sel:type':CreateCodeReview'</a>, <a>createCodeReview_type</a> -
--   The type of code review to create. This is specified using a
--   <a>CodeReviewType</a> object. You can create a code review only of
--   type <tt>RepositoryAnalysis</tt>.
newCreateCodeReview :: Text -> Text -> CodeReviewType -> CreateCodeReview

-- | <i>See:</i> <a>newCreateCodeReviewResponse</a> smart constructor.
data CreateCodeReviewResponse
CreateCodeReviewResponse' :: Maybe CodeReview -> Int -> CreateCodeReviewResponse

-- | Create a value of <a>CreateCodeReviewResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeReview:CreateCodeReviewResponse'</a>,
--   <a>createCodeReviewResponse_codeReview</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:CreateCodeReviewResponse'</a>,
--   <a>createCodeReviewResponse_httpStatus</a> - The response's http
--   status code.
newCreateCodeReviewResponse :: Int -> CreateCodeReviewResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the <a>RepositoryAssociation</a> object. You can retrieve this ARN by
--   calling <a>ListRepositoryAssociations</a> .
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of the keys for each tag you want to remove from an associated
--   repository.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newListCodeReviews</a> smart constructor.
data ListCodeReviews
ListCodeReviews' :: Maybe (NonEmpty JobState) -> Maybe (NonEmpty ProviderType) -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Natural -> Type -> ListCodeReviews

-- | Create a value of <a>ListCodeReviews</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListCodeReviews'</a>, <a>listCodeReviews_states</a> -
--   List of states for filtering that needs to be applied before
--   displaying the result. For example, <tt>states=[Pending]</tt> lists
--   code reviews in the Pending state.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
--   
--   <a>$sel:providerTypes:ListCodeReviews'</a>,
--   <a>listCodeReviews_providerTypes</a> - List of provider types for
--   filtering that needs to be applied before displaying the result. For
--   example, <tt>providerTypes=[GitHub]</tt> lists code reviews from
--   GitHub.
--   
--   <a>$sel:repositoryNames:ListCodeReviews'</a>,
--   <a>listCodeReviews_repositoryNames</a> - List of repository names for
--   filtering that needs to be applied before displaying the result.
--   
--   <a>$sel:nextToken:ListCodeReviews'</a>,
--   <a>listCodeReviews_nextToken</a> - If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:maxResults:ListCodeReviews'</a>,
--   <a>listCodeReviews_maxResults</a> - The maximum number of results that
--   are returned per call. The default is 100.
--   
--   <a>$sel:type':ListCodeReviews'</a>, <a>listCodeReviews_type</a> - The
--   type of code reviews to list in the response.
newListCodeReviews :: Type -> ListCodeReviews

-- | <i>See:</i> <a>newListCodeReviewsResponse</a> smart constructor.
data ListCodeReviewsResponse
ListCodeReviewsResponse' :: Maybe [CodeReviewSummary] -> Maybe Text -> Int -> ListCodeReviewsResponse

-- | Create a value of <a>ListCodeReviewsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeReviewSummaries:ListCodeReviewsResponse'</a>,
--   <a>listCodeReviewsResponse_codeReviewSummaries</a> - A list of code
--   reviews that meet the criteria of the request.
--   
--   <a>$sel:nextToken:ListCodeReviews'</a>,
--   <a>listCodeReviewsResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:httpStatus:ListCodeReviewsResponse'</a>,
--   <a>listCodeReviewsResponse_httpStatus</a> - The response's http status
--   code.
newListCodeReviewsResponse :: Int -> ListCodeReviewsResponse

-- | <i>See:</i> <a>newAssociateRepository</a> smart constructor.
data AssociateRepository
AssociateRepository' :: Maybe KMSKeyDetails -> Maybe Text -> Maybe (HashMap Text Text) -> Repository -> AssociateRepository

-- | Create a value of <a>AssociateRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyDetails:AssociateRepository'</a>,
--   <a>associateRepository_kmsKeyDetails</a> - A <tt>KMSKeyDetails</tt>
--   object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
--   
--   <a>$sel:clientRequestToken:AssociateRepository'</a>,
--   <a>associateRepository_clientRequestToken</a> - Amazon CodeGuru
--   Reviewer uses this value to prevent the accidental creation of
--   duplicate repository associations if there are failures and retries.
--   
--   <a>$sel:tags:AssociateRepository'</a>, <a>associateRepository_tags</a>
--   - An array of key-value pairs used to tag an associated repository. A
--   tag is a custom attribute label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
--   
--   <a>$sel:repository:AssociateRepository'</a>,
--   <a>associateRepository_repository</a> - The repository to associate.
newAssociateRepository :: Repository -> AssociateRepository

-- | <i>See:</i> <a>newAssociateRepositoryResponse</a> smart constructor.
data AssociateRepositoryResponse
AssociateRepositoryResponse' :: Maybe RepositoryAssociation -> Maybe (HashMap Text Text) -> Int -> AssociateRepositoryResponse

-- | Create a value of <a>AssociateRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryAssociation:AssociateRepositoryResponse'</a>,
--   <a>associateRepositoryResponse_repositoryAssociation</a> - Information
--   about the repository association.
--   
--   <a>$sel:tags:AssociateRepository'</a>,
--   <a>associateRepositoryResponse_tags</a> - An array of key-value pairs
--   used to tag an associated repository. A tag is a custom attribute
--   label with two parts:
--   
--   <ul>
--   <li>A <i>tag key</i> (for example, <tt>CostCenter</tt>,
--   <tt>Environment</tt>, <tt>Project</tt>, or <tt>Secret</tt>). Tag keys
--   are case sensitive.</li>
--   <li>An optional field known as a <i>tag value</i> (for example,
--   <tt>111122223333</tt>, <tt>Production</tt>, or a team name). Omitting
--   the tag value is the same as using an empty string. Like tag keys, tag
--   values are case sensitive.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:AssociateRepositoryResponse'</a>,
--   <a>associateRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newAssociateRepositoryResponse :: Int -> AssociateRepositoryResponse

-- | <i>See:</i> <a>newPutRecommendationFeedback</a> smart constructor.
data PutRecommendationFeedback
PutRecommendationFeedback' :: Text -> Text -> [Reaction] -> PutRecommendationFeedback

-- | Create a value of <a>PutRecommendationFeedback</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeReviewArn:PutRecommendationFeedback'</a>,
--   <a>putRecommendationFeedback_codeReviewArn</a> - The Amazon Resource
--   Name (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:recommendationId:PutRecommendationFeedback'</a>,
--   <a>putRecommendationFeedback_recommendationId</a> - The recommendation
--   ID that can be used to track the provided recommendations and then to
--   collect the feedback.
--   
--   <a>$sel:reactions:PutRecommendationFeedback'</a>,
--   <a>putRecommendationFeedback_reactions</a> - List for storing
--   reactions. Reactions are utf-8 text code for emojis. If you send an
--   empty list it clears all your feedback.
newPutRecommendationFeedback :: Text -> Text -> PutRecommendationFeedback

-- | <i>See:</i> <a>newPutRecommendationFeedbackResponse</a> smart
--   constructor.
data PutRecommendationFeedbackResponse
PutRecommendationFeedbackResponse' :: Int -> PutRecommendationFeedbackResponse

-- | Create a value of <a>PutRecommendationFeedbackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutRecommendationFeedbackResponse'</a>,
--   <a>putRecommendationFeedbackResponse_httpStatus</a> - The response's
--   http status code.
newPutRecommendationFeedbackResponse :: Int -> PutRecommendationFeedbackResponse
newtype AnalysisType
AnalysisType' :: Text -> AnalysisType
[fromAnalysisType] :: AnalysisType -> Text
pattern AnalysisType_CodeQuality :: AnalysisType
pattern AnalysisType_Security :: AnalysisType
newtype EncryptionOption
EncryptionOption' :: Text -> EncryptionOption
[fromEncryptionOption] :: EncryptionOption -> Text
pattern EncryptionOption_AWS_OWNED_CMK :: EncryptionOption
pattern EncryptionOption_CUSTOMER_MANAGED_CMK :: EncryptionOption
newtype JobState
JobState' :: Text -> JobState
[fromJobState] :: JobState -> Text
pattern JobState_Completed :: JobState
pattern JobState_Deleting :: JobState
pattern JobState_Failed :: JobState
pattern JobState_Pending :: JobState
newtype ProviderType
ProviderType' :: Text -> ProviderType
[fromProviderType] :: ProviderType -> Text
pattern ProviderType_Bitbucket :: ProviderType
pattern ProviderType_CodeCommit :: ProviderType
pattern ProviderType_GitHub :: ProviderType
pattern ProviderType_GitHubEnterpriseServer :: ProviderType
pattern ProviderType_S3Bucket :: ProviderType
newtype Reaction
Reaction' :: Text -> Reaction
[fromReaction] :: Reaction -> Text
pattern Reaction_ThumbsDown :: Reaction
pattern Reaction_ThumbsUp :: Reaction
newtype RecommendationCategory
RecommendationCategory' :: Text -> RecommendationCategory
[fromRecommendationCategory] :: RecommendationCategory -> Text
pattern RecommendationCategory_AWSBestPractices :: RecommendationCategory
pattern RecommendationCategory_AWSCloudFormationIssues :: RecommendationCategory
pattern RecommendationCategory_CodeInconsistencies :: RecommendationCategory
pattern RecommendationCategory_CodeMaintenanceIssues :: RecommendationCategory
pattern RecommendationCategory_ConcurrencyIssues :: RecommendationCategory
pattern RecommendationCategory_DuplicateCode :: RecommendationCategory
pattern RecommendationCategory_InputValidations :: RecommendationCategory
pattern RecommendationCategory_JavaBestPractices :: RecommendationCategory
pattern RecommendationCategory_PythonBestPractices :: RecommendationCategory
pattern RecommendationCategory_ResourceLeaks :: RecommendationCategory
pattern RecommendationCategory_SecurityIssues :: RecommendationCategory
newtype RepositoryAssociationState
RepositoryAssociationState' :: Text -> RepositoryAssociationState
[fromRepositoryAssociationState] :: RepositoryAssociationState -> Text
pattern RepositoryAssociationState_Associated :: RepositoryAssociationState
pattern RepositoryAssociationState_Associating :: RepositoryAssociationState
pattern RepositoryAssociationState_Disassociated :: RepositoryAssociationState
pattern RepositoryAssociationState_Disassociating :: RepositoryAssociationState
pattern RepositoryAssociationState_Failed :: RepositoryAssociationState
newtype Severity
Severity' :: Text -> Severity
[fromSeverity] :: Severity -> Text
pattern Severity_Critical :: Severity
pattern Severity_High :: Severity
pattern Severity_Info :: Severity
pattern Severity_Low :: Severity
pattern Severity_Medium :: Severity
newtype Type
Type' :: Text -> Type
[fromType] :: Type -> Text
pattern Type_PullRequest :: Type
pattern Type_RepositoryAnalysis :: Type
newtype VendorName
VendorName' :: Text -> VendorName
[fromVendorName] :: VendorName -> Text
pattern VendorName_GitHub :: VendorName
pattern VendorName_GitLab :: VendorName
pattern VendorName_NativeS3 :: VendorName

-- | A type of <a>SourceCodeType</a> that specifies a code diff between a
--   source and destination branch in an associated repository.
--   
--   <i>See:</i> <a>newBranchDiffSourceCodeType</a> smart constructor.
data BranchDiffSourceCodeType
BranchDiffSourceCodeType' :: Text -> Text -> BranchDiffSourceCodeType

-- | Create a value of <a>BranchDiffSourceCodeType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceBranchName:BranchDiffSourceCodeType'</a>,
--   <a>branchDiffSourceCodeType_sourceBranchName</a> - The source branch
--   for a diff in an associated repository.
--   
--   <a>$sel:destinationBranchName:BranchDiffSourceCodeType'</a>,
--   <a>branchDiffSourceCodeType_destinationBranchName</a> - The
--   destination branch for a diff in an associated repository.
newBranchDiffSourceCodeType :: Text -> Text -> BranchDiffSourceCodeType

-- | Code artifacts are source code artifacts and build artifacts used in a
--   repository analysis or a pull request review.
--   
--   <ul>
--   <li>Source code artifacts are source code files in a Git repository
--   that are compressed into a .zip file.</li>
--   <li>Build artifacts are .jar or .class files that are compressed in a
--   .zip file.</li>
--   </ul>
--   
--   <i>See:</i> <a>newCodeArtifacts</a> smart constructor.
data CodeArtifacts
CodeArtifacts' :: Maybe Text -> Text -> CodeArtifacts

-- | Create a value of <a>CodeArtifacts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildArtifactsObjectKey:CodeArtifacts'</a>,
--   <a>codeArtifacts_buildArtifactsObjectKey</a> - The S3 object key for a
--   build artifacts .zip file that contains .jar or .class files. This is
--   required for a code review with security analysis. For more
--   information, see <a>Create code reviews with security analysis</a> in
--   the <i>Amazon CodeGuru Reviewer User Guide</i>.
--   
--   <a>$sel:sourceCodeArtifactsObjectKey:CodeArtifacts'</a>,
--   <a>codeArtifacts_sourceCodeArtifactsObjectKey</a> - The S3 object key
--   for a source code .zip file. This is required for all code reviews.
newCodeArtifacts :: Text -> CodeArtifacts

-- | Information about an Amazon Web Services CodeCommit repository. The
--   CodeCommit repository must be in the same Amazon Web Services Region
--   and Amazon Web Services account where its CodeGuru Reviewer code
--   reviews are configured.
--   
--   <i>See:</i> <a>newCodeCommitRepository</a> smart constructor.
data CodeCommitRepository
CodeCommitRepository' :: Text -> CodeCommitRepository

-- | Create a value of <a>CodeCommitRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CodeCommitRepository'</a>,
--   <a>codeCommitRepository_name</a> - The name of the Amazon Web Services
--   CodeCommit repository. For more information, see <a>repositoryName</a>
--   in the <i>Amazon Web Services CodeCommit API Reference</i>.
newCodeCommitRepository :: Text -> CodeCommitRepository

-- | Information about a code review. A code review belongs to the
--   associated repository that contains the reviewed code.
--   
--   <i>See:</i> <a>newCodeReview</a> smart constructor.
data CodeReview
CodeReview' :: Maybe Text -> Maybe JobState -> Maybe Metrics -> Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Type -> Maybe SourceCodeType -> Maybe Text -> Maybe POSIX -> Maybe [AnalysisType] -> Maybe POSIX -> CodeReview

-- | Create a value of <a>CodeReview</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:CodeReview'</a>,
--   <a>codeReview_associationArn</a> - The Amazon Resource Name (ARN) of
--   the <a>RepositoryAssociation</a> that contains the reviewed source
--   code. You can retrieve associated repository ARNs by calling
--   <a>ListRepositoryAssociations</a> .
--   
--   <a>$sel:state:CodeReview'</a>, <a>codeReview_state</a> - The valid
--   code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
--   
--   <a>$sel:metrics:CodeReview'</a>, <a>codeReview_metrics</a> - The
--   statistics from the code review.
--   
--   <a>$sel:pullRequestId:CodeReview'</a>, <a>codeReview_pullRequestId</a>
--   - The pull request ID for the code review.
--   
--   <a>$sel:providerType:CodeReview'</a>, <a>codeReview_providerType</a> -
--   The type of repository that contains the reviewed code (for example,
--   GitHub or Bitbucket).
--   
--   <a>$sel:owner:CodeReview'</a>, <a>codeReview_owner</a> - The owner of
--   the repository. For an Amazon Web Services CodeCommit repository, this
--   is the Amazon Web Services account ID of the account that owns the
--   repository. For a GitHub, GitHub Enterprise Server, or Bitbucket
--   repository, this is the username for the account that owns the
--   repository. For an S3 repository, it can be the username or Amazon Web
--   Services account ID.
--   
--   <a>$sel:name:CodeReview'</a>, <a>codeReview_name</a> - The name of the
--   code review.
--   
--   <a>$sel:codeReviewArn:CodeReview'</a>, <a>codeReview_codeReviewArn</a>
--   - The Amazon Resource Name (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:repositoryName:CodeReview'</a>,
--   <a>codeReview_repositoryName</a> - The name of the repository.
--   
--   <a>$sel:type':CodeReview'</a>, <a>codeReview_type</a> - The type of
--   code review.
--   
--   <a>$sel:sourceCodeType:CodeReview'</a>,
--   <a>codeReview_sourceCodeType</a> - The type of the source code for the
--   code review.
--   
--   <a>$sel:stateReason:CodeReview'</a>, <a>codeReview_stateReason</a> -
--   The reason for the state of the code review.
--   
--   <a>$sel:createdTimeStamp:CodeReview'</a>,
--   <a>codeReview_createdTimeStamp</a> - The time, in milliseconds since
--   the epoch, when the code review was created.
--   
--   <a>$sel:analysisTypes:CodeReview'</a>, <a>codeReview_analysisTypes</a>
--   - They types of analysis performed during a repository analysis or a
--   pull request review. You can specify either <tt>Security</tt>,
--   <tt>CodeQuality</tt>, or both.
--   
--   <a>$sel:lastUpdatedTimeStamp:CodeReview'</a>,
--   <a>codeReview_lastUpdatedTimeStamp</a> - The time, in milliseconds
--   since the epoch, when the code review was last updated.
newCodeReview :: CodeReview

-- | Information about the summary of the code review.
--   
--   <i>See:</i> <a>newCodeReviewSummary</a> smart constructor.
data CodeReviewSummary
CodeReviewSummary' :: Maybe JobState -> Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Type -> Maybe SourceCodeType -> Maybe MetricsSummary -> Maybe POSIX -> Maybe POSIX -> CodeReviewSummary

-- | Create a value of <a>CodeReviewSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CodeReviewSummary'</a>, <a>codeReviewSummary_state</a> -
--   The state of the code review.
--   
--   The valid code review states are:
--   
--   <ul>
--   <li><tt>Completed</tt>: The code review is complete.</li>
--   <li><tt>Pending</tt>: The code review started and has not completed or
--   failed.</li>
--   <li><tt>Failed</tt>: The code review failed.</li>
--   <li><tt>Deleting</tt>: The code review is being deleted.</li>
--   </ul>
--   
--   <a>$sel:pullRequestId:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_pullRequestId</a> - The pull request ID for the
--   code review.
--   
--   <a>$sel:providerType:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_providerType</a> - The provider type of the
--   repository association.
--   
--   <a>$sel:owner:CodeReviewSummary'</a>, <a>codeReviewSummary_owner</a> -
--   The owner of the repository. For an Amazon Web Services CodeCommit
--   repository, this is the Amazon Web Services account ID of the account
--   that owns the repository. For a GitHub, GitHub Enterprise Server, or
--   Bitbucket repository, this is the username for the account that owns
--   the repository. For an S3 repository, it can be the username or Amazon
--   Web Services account ID.
--   
--   <a>$sel:name:CodeReviewSummary'</a>, <a>codeReviewSummary_name</a> -
--   The name of the code review.
--   
--   <a>$sel:codeReviewArn:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_codeReviewArn</a> - The Amazon Resource Name
--   (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:repositoryName:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_repositoryName</a> - The name of the repository.
--   
--   <a>$sel:type':CodeReviewSummary'</a>, <a>codeReviewSummary_type</a> -
--   The type of the code review.
--   
--   <a>$sel:sourceCodeType:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_sourceCodeType</a> - Undocumented member.
--   
--   <a>$sel:metricsSummary:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_metricsSummary</a> - The statistics from the code
--   review.
--   
--   <a>$sel:createdTimeStamp:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_createdTimeStamp</a> - The time, in milliseconds
--   since the epoch, when the code review was created.
--   
--   <a>$sel:lastUpdatedTimeStamp:CodeReviewSummary'</a>,
--   <a>codeReviewSummary_lastUpdatedTimeStamp</a> - The time, in
--   milliseconds since the epoch, when the code review was last updated.
newCodeReviewSummary :: CodeReviewSummary

-- | The type of a code review. There are two code review types:
--   
--   <ul>
--   <li><tt>PullRequest</tt> - A code review that is automatically
--   triggered by a pull request on an associated repository.</li>
--   <li><tt>RepositoryAnalysis</tt> - A code review that analyzes all code
--   under a specified branch in an associated repository. The associated
--   repository is specified using its ARN in <a>CreateCodeReview</a>
--   .</li>
--   </ul>
--   
--   <i>See:</i> <a>newCodeReviewType</a> smart constructor.
data CodeReviewType
CodeReviewType' :: Maybe [AnalysisType] -> RepositoryAnalysis -> CodeReviewType

-- | Create a value of <a>CodeReviewType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:analysisTypes:CodeReviewType'</a>,
--   <a>codeReviewType_analysisTypes</a> - They types of analysis performed
--   during a repository analysis or a pull request review. You can specify
--   either <tt>Security</tt>, <tt>CodeQuality</tt>, or both.
--   
--   <a>$sel:repositoryAnalysis:CodeReviewType'</a>,
--   <a>codeReviewType_repositoryAnalysis</a> - A code review that analyzes
--   all code under a specified branch in an associated repository. The
--   associated repository is specified using its ARN in
--   <a>CreateCodeReview</a> .
newCodeReviewType :: RepositoryAnalysis -> CodeReviewType

-- | A type of <a>SourceCodeType</a> that specifies the commit diff for a
--   pull request on an associated repository. The <tt>SourceCommit</tt>
--   and <tt>DestinationCommit</tt> fields are required to do a pull
--   request code review.
--   
--   <i>See:</i> <a>newCommitDiffSourceCodeType</a> smart constructor.
data CommitDiffSourceCodeType
CommitDiffSourceCodeType' :: Maybe Text -> Maybe Text -> Maybe Text -> CommitDiffSourceCodeType

-- | Create a value of <a>CommitDiffSourceCodeType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCommit:CommitDiffSourceCodeType'</a>,
--   <a>commitDiffSourceCodeType_sourceCommit</a> - The SHA of the source
--   commit used to generate a commit diff. This field is required for a
--   pull request code review.
--   
--   <a>$sel:mergeBaseCommit:CommitDiffSourceCodeType'</a>,
--   <a>commitDiffSourceCodeType_mergeBaseCommit</a> - The SHA of the merge
--   base of a commit.
--   
--   <a>$sel:destinationCommit:CommitDiffSourceCodeType'</a>,
--   <a>commitDiffSourceCodeType_destinationCommit</a> - The SHA of the
--   destination commit used to generate a commit diff. This field is
--   required for a pull request code review.
newCommitDiffSourceCodeType :: CommitDiffSourceCodeType

-- | Information about an event. The event might be a push, pull request,
--   scheduled request, or another type of event.
--   
--   <i>See:</i> <a>newEventInfo</a> smart constructor.
data EventInfo
EventInfo' :: Maybe Text -> Maybe Text -> EventInfo

-- | Create a value of <a>EventInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:EventInfo'</a>, <a>eventInfo_state</a> - The state of an
--   event. The state might be open, closed, or another state.
--   
--   <a>$sel:name:EventInfo'</a>, <a>eventInfo_name</a> - The name of the
--   event. The possible names are <tt>pull_request</tt>,
--   <tt>workflow_dispatch</tt>, <tt>schedule</tt>, and <tt>push</tt>
newEventInfo :: EventInfo

-- | An object that contains:
--   
--   <ul>
--   <li>The encryption option for a repository association. It is either
--   owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   a respository association.</li>
--   </ul>
--   
--   <i>See:</i> <a>newKMSKeyDetails</a> smart constructor.
data KMSKeyDetails
KMSKeyDetails' :: Maybe EncryptionOption -> Maybe Text -> KMSKeyDetails

-- | Create a value of <a>KMSKeyDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionOption:KMSKeyDetails'</a>,
--   <a>kmsKeyDetails_encryptionOption</a> - The encryption option for a
--   repository association. It is either owned by Amazon Web Services Key
--   Management Service (KMS) (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).
--   
--   <a>$sel:kmsKeyId:KMSKeyDetails'</a>, <a>kmsKeyDetails_kmsKeyId</a> -
--   The ID of the Amazon Web Services KMS key that is associated with a
--   respository association.
newKMSKeyDetails :: KMSKeyDetails

-- | Information about the statistics from the code review.
--   
--   <i>See:</i> <a>newMetrics</a> smart constructor.
data Metrics
Metrics' :: Maybe Integer -> Maybe Integer -> Metrics

-- | Create a value of <a>Metrics</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:findingsCount:Metrics'</a>, <a>metrics_findingsCount</a> -
--   Total number of recommendations found in the code review.
--   
--   <a>$sel:meteredLinesOfCodeCount:Metrics'</a>,
--   <a>metrics_meteredLinesOfCodeCount</a> - <tt>MeteredLinesOfCode</tt>
--   is the number of lines of code in the repository where the code review
--   happened. This does not include non-code lines such as comments and
--   blank lines.
newMetrics :: Metrics

-- | Information about metrics summaries.
--   
--   <i>See:</i> <a>newMetricsSummary</a> smart constructor.
data MetricsSummary
MetricsSummary' :: Maybe Integer -> Maybe Integer -> MetricsSummary

-- | Create a value of <a>MetricsSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:findingsCount:MetricsSummary'</a>,
--   <a>metricsSummary_findingsCount</a> - Total number of recommendations
--   found in the code review.
--   
--   <a>$sel:meteredLinesOfCodeCount:MetricsSummary'</a>,
--   <a>metricsSummary_meteredLinesOfCodeCount</a> - Lines of code metered
--   in the code review. For the initial code review pull request and all
--   subsequent revisions, this includes all lines of code in the files
--   added to the pull request. In subsequent revisions, for files that
--   already existed in the pull request, this includes only the changed
--   lines of code. In both cases, this does not include non-code lines
--   such as comments and import statements. For example, if you submit a
--   pull request containing 5 files, each with 500 lines of code, and in a
--   subsequent revision you added a new file with 200 lines of code, and
--   also modified a total of 25 lines across the initial 5 files,
--   <tt>MeteredLinesOfCodeCount</tt> includes the first 5 files (5 * 500 =
--   2,500 lines), the new file (200 lines) and the 25 changed lines of
--   code for a total of 2,725 lines of code.
newMetricsSummary :: MetricsSummary

-- | Information about the recommendation feedback.
--   
--   <i>See:</i> <a>newRecommendationFeedback</a> smart constructor.
data RecommendationFeedback
RecommendationFeedback' :: Maybe Text -> Maybe Text -> Maybe [Reaction] -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> RecommendationFeedback

-- | Create a value of <a>RecommendationFeedback</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recommendationId:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_recommendationId</a> - The recommendation ID
--   that can be used to track the provided recommendations. Later on it
--   can be used to collect the feedback.
--   
--   <a>$sel:userId:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_userId</a> - The ID of the user that made
--   the API call.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
--   
--   <a>$sel:reactions:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_reactions</a> - List for storing reactions.
--   Reactions are utf-8 text code for emojis. You can send an empty list
--   to clear off all your feedback.
--   
--   <a>$sel:codeReviewArn:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_codeReviewArn</a> - The Amazon Resource Name
--   (ARN) of the <a>CodeReview</a> object.
--   
--   <a>$sel:createdTimeStamp:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_createdTimeStamp</a> - The time at which the
--   feedback was created.
--   
--   <a>$sel:lastUpdatedTimeStamp:RecommendationFeedback'</a>,
--   <a>recommendationFeedback_lastUpdatedTimeStamp</a> - The time at which
--   the feedback was last updated.
newRecommendationFeedback :: RecommendationFeedback

-- | Information about recommendation feedback summaries.
--   
--   <i>See:</i> <a>newRecommendationFeedbackSummary</a> smart constructor.
data RecommendationFeedbackSummary
RecommendationFeedbackSummary' :: Maybe Text -> Maybe Text -> Maybe [Reaction] -> RecommendationFeedbackSummary

-- | Create a value of <a>RecommendationFeedbackSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recommendationId:RecommendationFeedbackSummary'</a>,
--   <a>recommendationFeedbackSummary_recommendationId</a> - The
--   recommendation ID that can be used to track the provided
--   recommendations. Later on it can be used to collect the feedback.
--   
--   <a>$sel:userId:RecommendationFeedbackSummary'</a>,
--   <a>recommendationFeedbackSummary_userId</a> - The ID of the user that
--   gave the feedback.
--   
--   The <tt>UserId</tt> is an IAM principal that can be specified as an
--   Amazon Web Services account ID or an Amazon Resource Name (ARN). For
--   more information, see <a>Specifying a Principal</a> in the <i>Amazon
--   Web Services Identity and Access Management User Guide</i>.
--   
--   <a>$sel:reactions:RecommendationFeedbackSummary'</a>,
--   <a>recommendationFeedbackSummary_reactions</a> - List for storing
--   reactions. Reactions are utf-8 text code for emojis.
newRecommendationFeedbackSummary :: RecommendationFeedbackSummary

-- | Information about recommendations.
--   
--   <i>See:</i> <a>newRecommendationSummary</a> smart constructor.
data RecommendationSummary
RecommendationSummary' :: Maybe Text -> Maybe Text -> Maybe Severity -> Maybe RuleMetadata -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe RecommendationCategory -> RecommendationSummary

-- | Create a value of <a>RecommendationSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recommendationId:RecommendationSummary'</a>,
--   <a>recommendationSummary_recommendationId</a> - The recommendation ID
--   that can be used to track the provided recommendations. Later on it
--   can be used to collect the feedback.
--   
--   <a>$sel:filePath:RecommendationSummary'</a>,
--   <a>recommendationSummary_filePath</a> - Name of the file on which a
--   recommendation is provided.
--   
--   <a>$sel:severity:RecommendationSummary'</a>,
--   <a>recommendationSummary_severity</a> - The severity of the issue in
--   the code that generated this recommendation.
--   
--   <a>$sel:ruleMetadata:RecommendationSummary'</a>,
--   <a>recommendationSummary_ruleMetadata</a> - Metadata about a rule.
--   Rule metadata includes an ID, a name, a list of tags, and a short and
--   long description. CodeGuru Reviewer uses rules to analyze code. A
--   rule's recommendation is included in analysis results if code is
--   detected that violates the rule.
--   
--   <a>$sel:startLine:RecommendationSummary'</a>,
--   <a>recommendationSummary_startLine</a> - Start line from where the
--   recommendation is applicable in the source commit or source branch.
--   
--   <a>$sel:endLine:RecommendationSummary'</a>,
--   <a>recommendationSummary_endLine</a> - Last line where the
--   recommendation is applicable in the source commit or source branch.
--   For a single line comment the start line and end line values are the
--   same.
--   
--   <a>$sel:description:RecommendationSummary'</a>,
--   <a>recommendationSummary_description</a> - A description of the
--   recommendation generated by CodeGuru Reviewer for the lines of code
--   between the start line and the end line.
--   
--   <a>$sel:recommendationCategory:RecommendationSummary'</a>,
--   <a>recommendationSummary_recommendationCategory</a> - The type of a
--   recommendation.
newRecommendationSummary :: RecommendationSummary

-- | Information about an associated Amazon Web Services CodeCommit
--   repository or an associated repository that is managed by Amazon Web
--   Services CodeStar Connections (for example, Bitbucket). This
--   <tt>Repository</tt> object is not used if your source code is in an
--   associated GitHub repository.
--   
--   <i>See:</i> <a>newRepository</a> smart constructor.
data Repository
Repository' :: Maybe CodeCommitRepository -> Maybe ThirdPartySourceRepository -> Maybe S3Repository -> Maybe ThirdPartySourceRepository -> Repository

-- | Create a value of <a>Repository</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeCommit:Repository'</a>, <a>repository_codeCommit</a> -
--   Information about an Amazon Web Services CodeCommit repository.
--   
--   <a>$sel:gitHubEnterpriseServer:Repository'</a>,
--   <a>repository_gitHubEnterpriseServer</a> - Information about a GitHub
--   Enterprise Server repository.
--   
--   <a>$sel:s3Bucket:Repository'</a>, <a>repository_s3Bucket</a> -
--   Undocumented member.
--   
--   <a>$sel:bitbucket:Repository'</a>, <a>repository_bitbucket</a> -
--   Information about a Bitbucket repository.
newRepository :: Repository

-- | A code review type that analyzes all code under a specified branch in
--   an associated repository. The associated repository is specified using
--   its ARN when you call <a>CreateCodeReview</a> .
--   
--   <i>See:</i> <a>newRepositoryAnalysis</a> smart constructor.
data RepositoryAnalysis
RepositoryAnalysis' :: Maybe RepositoryHeadSourceCodeType -> Maybe SourceCodeType -> RepositoryAnalysis

-- | Create a value of <a>RepositoryAnalysis</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryHead:RepositoryAnalysis'</a>,
--   <a>repositoryAnalysis_repositoryHead</a> - A <a>SourceCodeType</a>
--   that specifies the tip of a branch in an associated repository.
--   
--   <a>$sel:sourceCodeType:RepositoryAnalysis'</a>,
--   <a>repositoryAnalysis_sourceCodeType</a> - Undocumented member.
newRepositoryAnalysis :: RepositoryAnalysis

-- | Information about a repository association. The
--   <a>DescribeRepositoryAssociation</a> operation returns a
--   <tt>RepositoryAssociation</tt> object.
--   
--   <i>See:</i> <a>newRepositoryAssociation</a> smart constructor.
data RepositoryAssociation
RepositoryAssociation' :: Maybe Text -> Maybe Text -> Maybe RepositoryAssociationState -> Maybe S3RepositoryDetails -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe KMSKeyDetails -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> RepositoryAssociation

-- | Create a value of <a>RepositoryAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_associationArn</a> - The Amazon Resource Name
--   (ARN) identifying the repository association.
--   
--   <a>$sel:associationId:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_associationId</a> - The ID of the repository
--   association.
--   
--   <a>$sel:state:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_state</a> - The state of the repository
--   association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:s3RepositoryDetails:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_s3RepositoryDetails</a> - Undocumented
--   member.
--   
--   <a>$sel:providerType:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_providerType</a> - The provider type of the
--   repository association.
--   
--   <a>$sel:owner:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_owner</a> - The owner of the repository. For
--   an Amazon Web Services CodeCommit repository, this is the Amazon Web
--   Services account ID of the account that owns the repository. For a
--   GitHub, GitHub Enterprise Server, or Bitbucket repository, this is the
--   username for the account that owns the repository. For an S3
--   repository, it can be the username or Amazon Web Services account ID.
--   
--   <a>$sel:name:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_name</a> - The name of the repository.
--   
--   <a>$sel:kmsKeyDetails:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_kmsKeyDetails</a> - A <tt>KMSKeyDetails</tt>
--   object that contains:
--   
--   <ul>
--   <li>The encryption option for this repository association. It is
--   either owned by Amazon Web Services Key Management Service (KMS)
--   (<tt>AWS_OWNED_CMK</tt>) or customer managed
--   (<tt>CUSTOMER_MANAGED_CMK</tt>).</li>
--   <li>The ID of the Amazon Web Services KMS key that is associated with
--   this respository association.</li>
--   </ul>
--   
--   <a>$sel:connectionArn:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_connectionArn</a> - The Amazon Resource Name
--   (ARN) of an Amazon Web Services CodeStar Connections connection. Its
--   format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
--   
--   <a>$sel:stateReason:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_stateReason</a> - A description of why the
--   repository association is in the current state.
--   
--   <a>$sel:createdTimeStamp:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_createdTimeStamp</a> - The time, in
--   milliseconds since the epoch, when the repository association was
--   created.
--   
--   <a>$sel:lastUpdatedTimeStamp:RepositoryAssociation'</a>,
--   <a>repositoryAssociation_lastUpdatedTimeStamp</a> - The time, in
--   milliseconds since the epoch, when the repository association was last
--   updated.
newRepositoryAssociation :: RepositoryAssociation

-- | Summary information about a repository association. The
--   <a>ListRepositoryAssociations</a> operation returns a list of
--   <tt>RepositoryAssociationSummary</tt> objects.
--   
--   <i>See:</i> <a>newRepositoryAssociationSummary</a> smart constructor.
data RepositoryAssociationSummary
RepositoryAssociationSummary' :: Maybe Text -> Maybe Text -> Maybe RepositoryAssociationState -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> RepositoryAssociationSummary

-- | Create a value of <a>RepositoryAssociationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associationArn:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_associationArn</a> - The Amazon
--   Resource Name (ARN) of the <a>RepositoryAssociation</a> object. You
--   can retrieve this ARN by calling <a>ListRepositoryAssociations</a> .
--   
--   <a>$sel:associationId:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_associationId</a> - The repository
--   association ID.
--   
--   <a>$sel:state:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_state</a> - The state of the
--   repository association.
--   
--   The valid repository association states are:
--   
--   <ul>
--   <li><b>Associated</b>: The repository association is complete.</li>
--   <li><b>Associating</b>: CodeGuru Reviewer is:<ul><li>Setting up pull
--   request notifications. This is required for pull requests to trigger a
--   CodeGuru Reviewer review.If your repository <tt>ProviderType</tt> is
--   <tt>GitHub</tt>, <tt>GitHub Enterprise Server</tt>, or
--   <tt>Bitbucket</tt>, CodeGuru Reviewer creates webhooks in your
--   repository to trigger CodeGuru Reviewer reviews. If you delete these
--   webhooks, reviews of code in your repository cannot be
--   triggered.</li><li>Setting up source code access. This is required for
--   CodeGuru Reviewer to securely clone code in your
--   repository.</li></ul></li>
--   <li><b>Failed</b>: The repository failed to associate or
--   disassociate.</li>
--   <li><b>Disassociating</b>: CodeGuru Reviewer is removing the
--   repository's pull request notifications and source code access.</li>
--   <li><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated
--   the repository. You can create a new association with this repository
--   if you want to review source code in it later. You can control access
--   to code reviews created in an associated repository with tags after it
--   has been disassociated. For more information, see <a>Using tags to
--   control access to associated repositories</a> in the <i>Amazon
--   CodeGuru Reviewer User Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:providerType:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_providerType</a> - The provider type
--   of the repository association.
--   
--   <a>$sel:owner:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_owner</a> - The owner of the
--   repository. For an Amazon Web Services CodeCommit repository, this is
--   the Amazon Web Services account ID of the account that owns the
--   repository. For a GitHub, GitHub Enterprise Server, or Bitbucket
--   repository, this is the username for the account that owns the
--   repository. For an S3 repository, it can be the username or Amazon Web
--   Services account ID.
--   
--   <a>$sel:name:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_name</a> - The name of the repository
--   association.
--   
--   <a>$sel:connectionArn:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_connectionArn</a> - The Amazon
--   Resource Name (ARN) of an Amazon Web Services CodeStar Connections
--   connection. Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
--   
--   <a>$sel:lastUpdatedTimeStamp:RepositoryAssociationSummary'</a>,
--   <a>repositoryAssociationSummary_lastUpdatedTimeStamp</a> - The time,
--   in milliseconds since the epoch, since the repository association was
--   last updated.
newRepositoryAssociationSummary :: RepositoryAssociationSummary

-- | A <a>SourceCodeType</a> that specifies the tip of a branch in an
--   associated repository.
--   
--   <i>See:</i> <a>newRepositoryHeadSourceCodeType</a> smart constructor.
data RepositoryHeadSourceCodeType
RepositoryHeadSourceCodeType' :: Text -> RepositoryHeadSourceCodeType

-- | Create a value of <a>RepositoryHeadSourceCodeType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchName:RepositoryHeadSourceCodeType'</a>,
--   <a>repositoryHeadSourceCodeType_branchName</a> - The name of the
--   branch in an associated repository. The
--   <tt>RepositoryHeadSourceCodeType</tt> specifies the tip of this
--   branch.
newRepositoryHeadSourceCodeType :: Text -> RepositoryHeadSourceCodeType

-- | Metadata that is associated with a code review. This applies to both
--   pull request and repository analysis code reviews.
--   
--   <i>See:</i> <a>newRequestMetadata</a> smart constructor.
data RequestMetadata
RequestMetadata' :: Maybe Text -> Maybe EventInfo -> Maybe VendorName -> Maybe Text -> RequestMetadata

-- | Create a value of <a>RequestMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:RequestMetadata'</a>,
--   <a>requestMetadata_requestId</a> - The ID of the request. This is
--   required for a pull request code review.
--   
--   <a>$sel:eventInfo:RequestMetadata'</a>,
--   <a>requestMetadata_eventInfo</a> - Information about the event
--   associated with a code review.
--   
--   <a>$sel:vendorName:RequestMetadata'</a>,
--   <a>requestMetadata_vendorName</a> - The name of the repository vendor
--   used to upload code to an S3 bucket for a CI/CD code review. For
--   example, if code and artifacts are uploaded to an S3 bucket for a
--   CI/CD code review by GitHub scripts from a GitHub repository, then the
--   repository association's <tt>ProviderType</tt> is <tt>S3Bucket</tt>
--   and the CI/CD repository vendor name is GitHub. For more information,
--   see the definition for <tt>ProviderType</tt> in
--   <a>RepositoryAssociation</a>.
--   
--   <a>$sel:requester:RequestMetadata'</a>,
--   <a>requestMetadata_requester</a> - An identifier, such as a name or
--   account ID, that is associated with the requester. The
--   <tt>Requester</tt> is used to capture the <tt>author/actor</tt> name
--   of the event request.
newRequestMetadata :: RequestMetadata

-- | Metadata about a rule. Rule metadata includes an ID, a name, a list of
--   tags, and a short and long description. CodeGuru Reviewer uses rules
--   to analyze code. A rule's recommendation is included in analysis
--   results if code is detected that violates the rule.
--   
--   <i>See:</i> <a>newRuleMetadata</a> smart constructor.
data RuleMetadata
RuleMetadata' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> RuleMetadata

-- | Create a value of <a>RuleMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:longDescription:RuleMetadata'</a>,
--   <a>ruleMetadata_longDescription</a> - A long description of the rule.
--   
--   <a>$sel:ruleTags:RuleMetadata'</a>, <a>ruleMetadata_ruleTags</a> -
--   Tags that are associated with the rule.
--   
--   <a>$sel:ruleId:RuleMetadata'</a>, <a>ruleMetadata_ruleId</a> - The ID
--   of the rule.
--   
--   <a>$sel:ruleName:RuleMetadata'</a>, <a>ruleMetadata_ruleName</a> - The
--   name of the rule.
--   
--   <a>$sel:shortDescription:RuleMetadata'</a>,
--   <a>ruleMetadata_shortDescription</a> - A short description of the
--   rule.
newRuleMetadata :: RuleMetadata

-- | Information about an associated repository in an S3 bucket. The
--   associated repository contains a source code .zip file and a build
--   artifacts .zip file that contains .jar or .class files.
--   
--   <i>See:</i> <a>newS3BucketRepository</a> smart constructor.
data S3BucketRepository
S3BucketRepository' :: Maybe S3RepositoryDetails -> Text -> S3BucketRepository

-- | Create a value of <a>S3BucketRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:details:S3BucketRepository'</a>,
--   <a>s3BucketRepository_details</a> - An <tt>S3RepositoryDetails</tt>
--   object that specifies the name of an S3 bucket and a
--   <tt>CodeArtifacts</tt> object. The <tt>CodeArtifacts</tt> object
--   includes the S3 object keys for a source code .zip file and for a
--   build artifacts .zip file.
--   
--   <a>$sel:name:S3BucketRepository'</a>, <a>s3BucketRepository_name</a> -
--   The name of the repository when the <tt>ProviderType</tt> is
--   <tt>S3Bucket</tt>.
newS3BucketRepository :: Text -> S3BucketRepository

-- | Information about a repository in an S3 bucket.
--   
--   <i>See:</i> <a>newS3Repository</a> smart constructor.
data S3Repository
S3Repository' :: Text -> Text -> S3Repository

-- | Create a value of <a>S3Repository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:S3Repository'</a>, <a>s3Repository_name</a> - The name of
--   the repository in the S3 bucket.
--   
--   <a>$sel:bucketName:S3Repository'</a>, <a>s3Repository_bucketName</a> -
--   The name of the S3 bucket used for associating a new S3 repository. It
--   must begin with <tt>codeguru-reviewer-</tt>.
newS3Repository :: Text -> Text -> S3Repository

-- | Specifies the name of an S3 bucket and a <tt>CodeArtifacts</tt> object
--   that contains the S3 object keys for a source code .zip file and for a
--   build artifacts .zip file that contains .jar or .class files.
--   
--   <i>See:</i> <a>newS3RepositoryDetails</a> smart constructor.
data S3RepositoryDetails
S3RepositoryDetails' :: Maybe CodeArtifacts -> Maybe Text -> S3RepositoryDetails

-- | Create a value of <a>S3RepositoryDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeArtifacts:S3RepositoryDetails'</a>,
--   <a>s3RepositoryDetails_codeArtifacts</a> - A <tt>CodeArtifacts</tt>
--   object. The <tt>CodeArtifacts</tt> object includes the S3 object key
--   for a source code .zip file and for a build artifacts .zip file that
--   contains .jar or .class files.
--   
--   <a>$sel:bucketName:S3RepositoryDetails'</a>,
--   <a>s3RepositoryDetails_bucketName</a> - The name of the S3 bucket used
--   for associating a new S3 repository. It must begin with
--   <tt>codeguru-reviewer-</tt>.
newS3RepositoryDetails :: S3RepositoryDetails

-- | Specifies the source code that is analyzed in a code review.
--   
--   <i>See:</i> <a>newSourceCodeType</a> smart constructor.
data SourceCodeType
SourceCodeType' :: Maybe S3BucketRepository -> Maybe RequestMetadata -> Maybe RepositoryHeadSourceCodeType -> Maybe CommitDiffSourceCodeType -> Maybe BranchDiffSourceCodeType -> SourceCodeType

-- | Create a value of <a>SourceCodeType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3BucketRepository:SourceCodeType'</a>,
--   <a>sourceCodeType_s3BucketRepository</a> - Information about an
--   associated repository in an S3 bucket that includes its name and an
--   <tt>S3RepositoryDetails</tt> object. The <tt>S3RepositoryDetails</tt>
--   object includes the name of an S3 bucket, an S3 key for a source code
--   .zip file, and an S3 key for a build artifacts .zip file.
--   <tt>S3BucketRepository</tt> is required in <a>SourceCodeType</a> for
--   <tt>S3BucketRepository</tt> based code reviews.
--   
--   <a>$sel:requestMetadata:SourceCodeType'</a>,
--   <a>sourceCodeType_requestMetadata</a> - Metadata that is associated
--   with a code review. This applies to any type of code review supported
--   by CodeGuru Reviewer. The <tt>RequestMetadaa</tt> field captures any
--   event metadata. For example, it might capture metadata associated with
--   an event trigger, such as a push or a pull request.
--   
--   <a>$sel:repositoryHead:SourceCodeType'</a>,
--   <a>sourceCodeType_repositoryHead</a> - Undocumented member.
--   
--   <a>$sel:commitDiff:SourceCodeType'</a>,
--   <a>sourceCodeType_commitDiff</a> - A <a>SourceCodeType</a> that
--   specifies a commit diff created by a pull request on an associated
--   repository.
--   
--   <a>$sel:branchDiff:SourceCodeType'</a>,
--   <a>sourceCodeType_branchDiff</a> - A type of <a>SourceCodeType</a>
--   that specifies a source branch name and a destination branch name in
--   an associated repository.
newSourceCodeType :: SourceCodeType

-- | Information about a third-party source repository connected to
--   CodeGuru Reviewer.
--   
--   <i>See:</i> <a>newThirdPartySourceRepository</a> smart constructor.
data ThirdPartySourceRepository
ThirdPartySourceRepository' :: Text -> Text -> Text -> ThirdPartySourceRepository

-- | Create a value of <a>ThirdPartySourceRepository</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ThirdPartySourceRepository'</a>,
--   <a>thirdPartySourceRepository_name</a> - The name of the third party
--   source repository.
--   
--   <a>$sel:connectionArn:ThirdPartySourceRepository'</a>,
--   <a>thirdPartySourceRepository_connectionArn</a> - The Amazon Resource
--   Name (ARN) of an Amazon Web Services CodeStar Connections connection.
--   Its format is
--   <tt>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</tt>.
--   For more information, see <a>Connection</a> in the <i>Amazon Web
--   Services CodeStar Connections API Reference</i>.
--   
--   <a>$sel:owner:ThirdPartySourceRepository'</a>,
--   <a>thirdPartySourceRepository_owner</a> - The owner of the repository.
--   For a GitHub, GitHub Enterprise, or Bitbucket repository, this is the
--   username for the account that owns the repository. For an S3
--   repository, this can be the username or Amazon Web Services account
--   ID.
newThirdPartySourceRepository :: Text -> Text -> Text -> ThirdPartySourceRepository
