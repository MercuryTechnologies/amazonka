-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-apigatewayZSamazonka-apigateway
@version 2.0


module Amazonka.APIGateway.Types.AccessLogSettings

-- | Access log settings, including the access log format and access log
--   destination ARN.
--   
--   <i>See:</i> <a>newAccessLogSettings</a> smart constructor.
data AccessLogSettings
AccessLogSettings' :: Maybe Text -> Maybe Text -> AccessLogSettings

-- | A single line format of the access logs of data, as specified by
--   selected <a>$context variables</a>. The format must include at least
--   <tt>$context.requestId</tt>.
[$sel:format:AccessLogSettings'] :: AccessLogSettings -> Maybe Text

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or
--   Kinesis Data Firehose delivery stream to receive access logs. If you
--   specify a Kinesis Data Firehose delivery stream, the stream name must
--   begin with <tt>amazon-apigateway-</tt>.
[$sel:destinationArn:AccessLogSettings'] :: AccessLogSettings -> Maybe Text

-- | Create a value of <a>AccessLogSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:AccessLogSettings'</a>, <a>accessLogSettings_format</a>
--   - A single line format of the access logs of data, as specified by
--   selected <a>$context variables</a>. The format must include at least
--   <tt>$context.requestId</tt>.
--   
--   <a>$sel:destinationArn:AccessLogSettings'</a>,
--   <a>accessLogSettings_destinationArn</a> - The Amazon Resource Name
--   (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose
--   delivery stream to receive access logs. If you specify a Kinesis Data
--   Firehose delivery stream, the stream name must begin with
--   <tt>amazon-apigateway-</tt>.
newAccessLogSettings :: AccessLogSettings

-- | A single line format of the access logs of data, as specified by
--   selected <a>$context variables</a>. The format must include at least
--   <tt>$context.requestId</tt>.
accessLogSettings_format :: Lens' AccessLogSettings (Maybe Text)

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or
--   Kinesis Data Firehose delivery stream to receive access logs. If you
--   specify a Kinesis Data Firehose delivery stream, the stream name must
--   begin with <tt>amazon-apigateway-</tt>.
accessLogSettings_destinationArn :: Lens' AccessLogSettings (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.AccessLogSettings.AccessLogSettings
instance GHC.Show.Show Amazonka.APIGateway.Types.AccessLogSettings.AccessLogSettings
instance GHC.Read.Read Amazonka.APIGateway.Types.AccessLogSettings.AccessLogSettings
instance GHC.Classes.Eq Amazonka.APIGateway.Types.AccessLogSettings.AccessLogSettings
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.AccessLogSettings.AccessLogSettings
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.AccessLogSettings.AccessLogSettings
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.AccessLogSettings.AccessLogSettings


module Amazonka.APIGateway.Types.ApiKey

-- | A resource that can be distributed to callers for executing Method
--   resources that require an API key. API keys can be mapped to any Stage
--   on any RestApi, which indicates that the callers with the API key can
--   make requests to that stage.
--   
--   <a>Use API Keys</a>
--   
--   <i>See:</i> <a>newApiKey</a> smart constructor.
data ApiKey
ApiKey' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ApiKey

-- | Specifies whether the API Key can be used by callers.
[$sel:enabled:ApiKey'] :: ApiKey -> Maybe Bool

-- | The value of the API Key.
[$sel:value:ApiKey'] :: ApiKey -> Maybe Text

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
[$sel:customerId:ApiKey'] :: ApiKey -> Maybe Text

-- | The timestamp when the API Key was created.
[$sel:createdDate:ApiKey'] :: ApiKey -> Maybe POSIX

-- | The name of the API Key.
[$sel:name:ApiKey'] :: ApiKey -> Maybe Text

-- | The identifier of the API Key.
[$sel:id:ApiKey'] :: ApiKey -> Maybe Text

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
[$sel:stageKeys:ApiKey'] :: ApiKey -> Maybe [Text]

-- | The timestamp when the API Key was last updated.
[$sel:lastUpdatedDate:ApiKey'] :: ApiKey -> Maybe POSIX

-- | The description of the API Key.
[$sel:description:ApiKey'] :: ApiKey -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:ApiKey'] :: ApiKey -> Maybe (HashMap Text Text)

-- | Create a value of <a>ApiKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:ApiKey'</a>, <a>apiKey_enabled</a> - Specifies whether
--   the API Key can be used by callers.
--   
--   <a>$sel:value:ApiKey'</a>, <a>apiKey_value</a> - The value of the API
--   Key.
--   
--   <a>$sel:customerId:ApiKey'</a>, <a>apiKey_customerId</a> - An AWS
--   Marketplace customer identifier , when integrating with the AWS SaaS
--   Marketplace.
--   
--   <a>$sel:createdDate:ApiKey'</a>, <a>apiKey_createdDate</a> - The
--   timestamp when the API Key was created.
--   
--   <a>$sel:name:ApiKey'</a>, <a>apiKey_name</a> - The name of the API
--   Key.
--   
--   <a>$sel:id:ApiKey'</a>, <a>apiKey_id</a> - The identifier of the API
--   Key.
--   
--   <a>$sel:stageKeys:ApiKey'</a>, <a>apiKey_stageKeys</a> - A list of
--   Stage resources that are associated with the ApiKey resource.
--   
--   <a>$sel:lastUpdatedDate:ApiKey'</a>, <a>apiKey_lastUpdatedDate</a> -
--   The timestamp when the API Key was last updated.
--   
--   <a>$sel:description:ApiKey'</a>, <a>apiKey_description</a> - The
--   description of the API Key.
--   
--   <a>$sel:tags:ApiKey'</a>, <a>apiKey_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newApiKey :: ApiKey

-- | Specifies whether the API Key can be used by callers.
apiKey_enabled :: Lens' ApiKey (Maybe Bool)

-- | The value of the API Key.
apiKey_value :: Lens' ApiKey (Maybe Text)

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
apiKey_customerId :: Lens' ApiKey (Maybe Text)

-- | The timestamp when the API Key was created.
apiKey_createdDate :: Lens' ApiKey (Maybe UTCTime)

-- | The name of the API Key.
apiKey_name :: Lens' ApiKey (Maybe Text)

-- | The identifier of the API Key.
apiKey_id :: Lens' ApiKey (Maybe Text)

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
apiKey_stageKeys :: Lens' ApiKey (Maybe [Text])

-- | The timestamp when the API Key was last updated.
apiKey_lastUpdatedDate :: Lens' ApiKey (Maybe UTCTime)

-- | The description of the API Key.
apiKey_description :: Lens' ApiKey (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
apiKey_tags :: Lens' ApiKey (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.Types.ApiKey.ApiKey
instance GHC.Show.Show Amazonka.APIGateway.Types.ApiKey.ApiKey
instance GHC.Read.Read Amazonka.APIGateway.Types.ApiKey.ApiKey
instance GHC.Classes.Eq Amazonka.APIGateway.Types.ApiKey.ApiKey
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.ApiKey.ApiKey
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.ApiKey.ApiKey
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.ApiKey.ApiKey


module Amazonka.APIGateway.Types.ApiKeySourceType
newtype ApiKeySourceType
ApiKeySourceType' :: Text -> ApiKeySourceType
[fromApiKeySourceType] :: ApiKeySourceType -> Text
pattern ApiKeySourceType_AUTHORIZER :: ApiKeySourceType
pattern ApiKeySourceType_HEADER :: ApiKeySourceType
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance GHC.Generics.Generic Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance GHC.Classes.Ord Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance GHC.Classes.Eq Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance GHC.Read.Read Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType
instance GHC.Show.Show Amazonka.APIGateway.Types.ApiKeySourceType.ApiKeySourceType


module Amazonka.APIGateway.Types.ApiKeysFormat
newtype ApiKeysFormat
ApiKeysFormat' :: Text -> ApiKeysFormat
[fromApiKeysFormat] :: ApiKeysFormat -> Text
pattern ApiKeysFormat_Csv :: ApiKeysFormat
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance GHC.Generics.Generic Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance GHC.Classes.Ord Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance GHC.Classes.Eq Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance GHC.Read.Read Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat
instance GHC.Show.Show Amazonka.APIGateway.Types.ApiKeysFormat.ApiKeysFormat


module Amazonka.APIGateway.Types.AuthorizerType

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
newtype AuthorizerType
AuthorizerType' :: Text -> AuthorizerType
[fromAuthorizerType] :: AuthorizerType -> Text
pattern AuthorizerType_COGNITO_USER_POOLS :: AuthorizerType
pattern AuthorizerType_REQUEST :: AuthorizerType
pattern AuthorizerType_TOKEN :: AuthorizerType
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance GHC.Generics.Generic Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance GHC.Classes.Ord Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance GHC.Classes.Eq Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance GHC.Read.Read Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType
instance GHC.Show.Show Amazonka.APIGateway.Types.AuthorizerType.AuthorizerType


module Amazonka.APIGateway.Types.Authorizer

-- | Represents an authorization layer for methods. If enabled on a method,
--   API Gateway will activate the authorizer when a client calls the
--   method.
--   
--   <a>Use Lambda Function as Authorizer</a> <a>Use Cognito User Pool as
--   Authorizer</a>
--   
--   <i>See:</i> <a>newAuthorizer</a> smart constructor.
data Authorizer
Authorizer' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe AuthorizerType -> Maybe Text -> Maybe Text -> Authorizer

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
[$sel:authorizerUri:Authorizer'] :: Authorizer -> Maybe Text

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
[$sel:identityValidationExpression:Authorizer'] :: Authorizer -> Maybe Text

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
[$sel:providerARNs:Authorizer'] :: Authorizer -> Maybe [Text]

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
[$sel:name:Authorizer'] :: Authorizer -> Maybe Text

-- | The identifier for the authorizer resource.
[$sel:id:Authorizer'] :: Authorizer -> Maybe Text

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
[$sel:authorizerResultTtlInSeconds:Authorizer'] :: Authorizer -> Maybe Int

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
[$sel:authType:Authorizer'] :: Authorizer -> Maybe Text

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
[$sel:type':Authorizer'] :: Authorizer -> Maybe AuthorizerType

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
[$sel:identitySource:Authorizer'] :: Authorizer -> Maybe Text

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
[$sel:authorizerCredentials:Authorizer'] :: Authorizer -> Maybe Text

-- | Create a value of <a>Authorizer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerUri:Authorizer'</a>, <a>authorizer_authorizerUri</a>
--   - Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
--   
--   <a>$sel:identityValidationExpression:Authorizer'</a>,
--   <a>authorizer_identityValidationExpression</a> - A validation
--   expression for the incoming identity token. For <tt>TOKEN</tt>
--   authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
--   
--   <a>$sel:providerARNs:Authorizer'</a>, <a>authorizer_providerARNs</a> -
--   A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
--   
--   <a>$sel:name:Authorizer'</a>, <a>authorizer_name</a> - [Required] The
--   name of the authorizer.
--   
--   <a>$sel:id:Authorizer'</a>, <a>authorizer_id</a> - The identifier for
--   the authorizer resource.
--   
--   <a>$sel:authorizerResultTtlInSeconds:Authorizer'</a>,
--   <a>authorizer_authorizerResultTtlInSeconds</a> - The TTL in seconds of
--   cached authorizer results. If it equals 0, authorization caching is
--   disabled. If it is greater than 0, API Gateway will cache authorizer
--   responses. If this field is not set, the default value is 300. The
--   maximum value is 3600, or 1 hour.
--   
--   <a>$sel:authType:Authorizer'</a>, <a>authorizer_authType</a> -
--   Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
--   
--   <a>$sel:type':Authorizer'</a>, <a>authorizer_type</a> - The authorizer
--   type. Valid values are <tt>TOKEN</tt> for a Lambda function using a
--   single authorization token submitted in a custom header,
--   <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
--   
--   <a>$sel:identitySource:Authorizer'</a>,
--   <a>authorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
--   
--   <a>$sel:authorizerCredentials:Authorizer'</a>,
--   <a>authorizer_authorizerCredentials</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, specify null.
newAuthorizer :: Authorizer

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
authorizer_authorizerUri :: Lens' Authorizer (Maybe Text)

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
authorizer_identityValidationExpression :: Lens' Authorizer (Maybe Text)

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
authorizer_providerARNs :: Lens' Authorizer (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
authorizer_name :: Lens' Authorizer (Maybe Text)

-- | The identifier for the authorizer resource.
authorizer_id :: Lens' Authorizer (Maybe Text)

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
authorizer_authorizerResultTtlInSeconds :: Lens' Authorizer (Maybe Int)

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
authorizer_authType :: Lens' Authorizer (Maybe Text)

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
authorizer_type :: Lens' Authorizer (Maybe AuthorizerType)

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
authorizer_identitySource :: Lens' Authorizer (Maybe Text)

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
authorizer_authorizerCredentials :: Lens' Authorizer (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.Authorizer.Authorizer
instance GHC.Show.Show Amazonka.APIGateway.Types.Authorizer.Authorizer
instance GHC.Read.Read Amazonka.APIGateway.Types.Authorizer.Authorizer
instance GHC.Classes.Eq Amazonka.APIGateway.Types.Authorizer.Authorizer
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.Authorizer.Authorizer
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.Authorizer.Authorizer
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.Authorizer.Authorizer


module Amazonka.APIGateway.Types.BasePathMapping

-- | Represents the base path that callers of the API must provide as part
--   of the URL after the domain name.
--   
--   A custom domain name plus a <tt>BasePathMapping</tt> specification
--   identifies a deployed RestApi in a given stage of the owner Account.
--   
--   <a>Use Custom Domain Names</a>
--   
--   <i>See:</i> <a>newBasePathMapping</a> smart constructor.
data BasePathMapping
BasePathMapping' :: Maybe Text -> Maybe Text -> Maybe Text -> BasePathMapping

-- | The name of the associated stage.
[$sel:stage:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
[$sel:basePath:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | The string identifier of the associated RestApi.
[$sel:restApiId:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | Create a value of <a>BasePathMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:BasePathMapping'</a>, <a>basePathMapping_stage</a> - The
--   name of the associated stage.
--   
--   <a>$sel:basePath:BasePathMapping'</a>, <a>basePathMapping_basePath</a>
--   - The base path name that callers of the API must provide as part of
--   the URL after the domain name.
--   
--   <a>$sel:restApiId:BasePathMapping'</a>,
--   <a>basePathMapping_restApiId</a> - The string identifier of the
--   associated RestApi.
newBasePathMapping :: BasePathMapping

-- | The name of the associated stage.
basePathMapping_stage :: Lens' BasePathMapping (Maybe Text)

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
basePathMapping_basePath :: Lens' BasePathMapping (Maybe Text)

-- | The string identifier of the associated RestApi.
basePathMapping_restApiId :: Lens' BasePathMapping (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.BasePathMapping.BasePathMapping
instance GHC.Show.Show Amazonka.APIGateway.Types.BasePathMapping.BasePathMapping
instance GHC.Read.Read Amazonka.APIGateway.Types.BasePathMapping.BasePathMapping
instance GHC.Classes.Eq Amazonka.APIGateway.Types.BasePathMapping.BasePathMapping
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.BasePathMapping.BasePathMapping
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.BasePathMapping.BasePathMapping
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.BasePathMapping.BasePathMapping


module Amazonka.APIGateway.Types.CacheClusterSize

-- | Returns the size of the <b>CacheCluster</b>.
newtype CacheClusterSize
CacheClusterSize' :: Text -> CacheClusterSize
[fromCacheClusterSize] :: CacheClusterSize -> Text
pattern CacheClusterSize_ :: CacheClusterSize
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance GHC.Generics.Generic Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance GHC.Classes.Ord Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance GHC.Classes.Eq Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance GHC.Read.Read Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize
instance GHC.Show.Show Amazonka.APIGateway.Types.CacheClusterSize.CacheClusterSize


module Amazonka.APIGateway.Types.CacheClusterStatus

-- | Returns the status of the <b>CacheCluster</b>.
newtype CacheClusterStatus
CacheClusterStatus' :: Text -> CacheClusterStatus
[fromCacheClusterStatus] :: CacheClusterStatus -> Text
pattern CacheClusterStatus_AVAILABLE :: CacheClusterStatus
pattern CacheClusterStatus_CREATE_IN_PROGRESS :: CacheClusterStatus
pattern CacheClusterStatus_DELETE_IN_PROGRESS :: CacheClusterStatus
pattern CacheClusterStatus_FLUSH_IN_PROGRESS :: CacheClusterStatus
pattern CacheClusterStatus_NOT_AVAILABLE :: CacheClusterStatus
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance GHC.Generics.Generic Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance GHC.Classes.Ord Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance GHC.Classes.Eq Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance GHC.Read.Read Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus
instance GHC.Show.Show Amazonka.APIGateway.Types.CacheClusterStatus.CacheClusterStatus


module Amazonka.APIGateway.Types.CanarySettings

-- | Configuration settings of a canary deployment.
--   
--   <i>See:</i> <a>newCanarySettings</a> smart constructor.
data CanarySettings
CanarySettings' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Double -> CanarySettings

-- | The ID of the canary deployment.
[$sel:deploymentId:CanarySettings'] :: CanarySettings -> Maybe Text

-- | Stage variables overridden for a canary release deployment, including
--   new stage variables introduced in the canary. These stage variables
--   are represented as a string-to-string map between stage variable names
--   and their values.
[$sel:stageVariableOverrides:CanarySettings'] :: CanarySettings -> Maybe (HashMap Text Text)

-- | A Boolean flag to indicate whether the canary deployment uses the
--   stage cache or not.
[$sel:useStageCache:CanarySettings'] :: CanarySettings -> Maybe Bool

-- | The percent (0-100) of traffic diverted to a canary deployment.
[$sel:percentTraffic:CanarySettings'] :: CanarySettings -> Maybe Double

-- | Create a value of <a>CanarySettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CanarySettings'</a>,
--   <a>canarySettings_deploymentId</a> - The ID of the canary deployment.
--   
--   <a>$sel:stageVariableOverrides:CanarySettings'</a>,
--   <a>canarySettings_stageVariableOverrides</a> - Stage variables
--   overridden for a canary release deployment, including new stage
--   variables introduced in the canary. These stage variables are
--   represented as a string-to-string map between stage variable names and
--   their values.
--   
--   <a>$sel:useStageCache:CanarySettings'</a>,
--   <a>canarySettings_useStageCache</a> - A Boolean flag to indicate
--   whether the canary deployment uses the stage cache or not.
--   
--   <a>$sel:percentTraffic:CanarySettings'</a>,
--   <a>canarySettings_percentTraffic</a> - The percent (0-100) of traffic
--   diverted to a canary deployment.
newCanarySettings :: CanarySettings

-- | The ID of the canary deployment.
canarySettings_deploymentId :: Lens' CanarySettings (Maybe Text)

-- | Stage variables overridden for a canary release deployment, including
--   new stage variables introduced in the canary. These stage variables
--   are represented as a string-to-string map between stage variable names
--   and their values.
canarySettings_stageVariableOverrides :: Lens' CanarySettings (Maybe (HashMap Text Text))

-- | A Boolean flag to indicate whether the canary deployment uses the
--   stage cache or not.
canarySettings_useStageCache :: Lens' CanarySettings (Maybe Bool)

-- | The percent (0-100) of traffic diverted to a canary deployment.
canarySettings_percentTraffic :: Lens' CanarySettings (Maybe Double)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.CanarySettings.CanarySettings
instance GHC.Show.Show Amazonka.APIGateway.Types.CanarySettings.CanarySettings
instance GHC.Read.Read Amazonka.APIGateway.Types.CanarySettings.CanarySettings
instance GHC.Classes.Eq Amazonka.APIGateway.Types.CanarySettings.CanarySettings
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.CanarySettings.CanarySettings
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.CanarySettings.CanarySettings
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.CanarySettings.CanarySettings
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.CanarySettings.CanarySettings


module Amazonka.APIGateway.Types.ClientCertificate

-- | Represents a client certificate used to configure client-side SSL
--   authentication while sending requests to the integration endpoint.
--   
--   Client certificates are used to authenticate an API by the backend
--   server. To authenticate an API client (or user), use IAM roles and
--   policies, a custom Authorizer or an Amazon Cognito user pool.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newClientCertificate</a> smart constructor.
data ClientCertificate
ClientCertificate' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ClientCertificate

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
[$sel:pemEncodedCertificate:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The identifier of the client certificate.
[$sel:clientCertificateId:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The timestamp when the client certificate was created.
[$sel:createdDate:ClientCertificate'] :: ClientCertificate -> Maybe POSIX

-- | The timestamp when the client certificate will expire.
[$sel:expirationDate:ClientCertificate'] :: ClientCertificate -> Maybe POSIX

-- | The description of the client certificate.
[$sel:description:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:ClientCertificate'] :: ClientCertificate -> Maybe (HashMap Text Text)

-- | Create a value of <a>ClientCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pemEncodedCertificate:ClientCertificate'</a>,
--   <a>clientCertificate_pemEncodedCertificate</a> - The PEM-encoded
--   public key of the client certificate, which can be used to configure
--   certificate authentication in the integration endpoint .
--   
--   <a>$sel:clientCertificateId:ClientCertificate'</a>,
--   <a>clientCertificate_clientCertificateId</a> - The identifier of the
--   client certificate.
--   
--   <a>$sel:createdDate:ClientCertificate'</a>,
--   <a>clientCertificate_createdDate</a> - The timestamp when the client
--   certificate was created.
--   
--   <a>$sel:expirationDate:ClientCertificate'</a>,
--   <a>clientCertificate_expirationDate</a> - The timestamp when the
--   client certificate will expire.
--   
--   <a>$sel:description:ClientCertificate'</a>,
--   <a>clientCertificate_description</a> - The description of the client
--   certificate.
--   
--   <a>$sel:tags:ClientCertificate'</a>, <a>clientCertificate_tags</a> -
--   The collection of tags. Each tag element is associated with a given
--   resource.
newClientCertificate :: ClientCertificate

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
clientCertificate_pemEncodedCertificate :: Lens' ClientCertificate (Maybe Text)

-- | The identifier of the client certificate.
clientCertificate_clientCertificateId :: Lens' ClientCertificate (Maybe Text)

-- | The timestamp when the client certificate was created.
clientCertificate_createdDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The timestamp when the client certificate will expire.
clientCertificate_expirationDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The description of the client certificate.
clientCertificate_description :: Lens' ClientCertificate (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
clientCertificate_tags :: Lens' ClientCertificate (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.Types.ClientCertificate.ClientCertificate
instance GHC.Show.Show Amazonka.APIGateway.Types.ClientCertificate.ClientCertificate
instance GHC.Read.Read Amazonka.APIGateway.Types.ClientCertificate.ClientCertificate
instance GHC.Classes.Eq Amazonka.APIGateway.Types.ClientCertificate.ClientCertificate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.ClientCertificate.ClientCertificate
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.ClientCertificate.ClientCertificate
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.ClientCertificate.ClientCertificate


module Amazonka.APIGateway.Types.ConnectionType
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_INTERNET :: ConnectionType
pattern ConnectionType_VPC_LINK :: ConnectionType
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance GHC.Generics.Generic Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance GHC.Classes.Ord Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance GHC.Classes.Eq Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance GHC.Read.Read Amazonka.APIGateway.Types.ConnectionType.ConnectionType
instance GHC.Show.Show Amazonka.APIGateway.Types.ConnectionType.ConnectionType


module Amazonka.APIGateway.Types.ContentHandlingStrategy
newtype ContentHandlingStrategy
ContentHandlingStrategy' :: Text -> ContentHandlingStrategy
[fromContentHandlingStrategy] :: ContentHandlingStrategy -> Text
pattern ContentHandlingStrategy_CONVERT_TO_BINARY :: ContentHandlingStrategy
pattern ContentHandlingStrategy_CONVERT_TO_TEXT :: ContentHandlingStrategy
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance GHC.Generics.Generic Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance GHC.Classes.Ord Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance GHC.Classes.Eq Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance GHC.Read.Read Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance GHC.Show.Show Amazonka.APIGateway.Types.ContentHandlingStrategy.ContentHandlingStrategy


module Amazonka.APIGateway.Types.DeploymentCanarySettings

-- | The input configuration for a canary deployment.
--   
--   <i>See:</i> <a>newDeploymentCanarySettings</a> smart constructor.
data DeploymentCanarySettings
DeploymentCanarySettings' :: Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Double -> DeploymentCanarySettings

-- | A stage variable overrides used for the canary release deployment.
--   They can override existing stage variables or add new stage variables
--   for the canary release deployment. These stage variables are
--   represented as a string-to-string map between stage variable names and
--   their values.
[$sel:stageVariableOverrides:DeploymentCanarySettings'] :: DeploymentCanarySettings -> Maybe (HashMap Text Text)

-- | A Boolean flag to indicate whether the canary release deployment uses
--   the stage cache or not.
[$sel:useStageCache:DeploymentCanarySettings'] :: DeploymentCanarySettings -> Maybe Bool

-- | The percentage (0.0-100.0) of traffic routed to the canary deployment.
[$sel:percentTraffic:DeploymentCanarySettings'] :: DeploymentCanarySettings -> Maybe Double

-- | Create a value of <a>DeploymentCanarySettings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageVariableOverrides:DeploymentCanarySettings'</a>,
--   <a>deploymentCanarySettings_stageVariableOverrides</a> - A stage
--   variable overrides used for the canary release deployment. They can
--   override existing stage variables or add new stage variables for the
--   canary release deployment. These stage variables are represented as a
--   string-to-string map between stage variable names and their values.
--   
--   <a>$sel:useStageCache:DeploymentCanarySettings'</a>,
--   <a>deploymentCanarySettings_useStageCache</a> - A Boolean flag to
--   indicate whether the canary release deployment uses the stage cache or
--   not.
--   
--   <a>$sel:percentTraffic:DeploymentCanarySettings'</a>,
--   <a>deploymentCanarySettings_percentTraffic</a> - The percentage
--   (0.0-100.0) of traffic routed to the canary deployment.
newDeploymentCanarySettings :: DeploymentCanarySettings

-- | A stage variable overrides used for the canary release deployment.
--   They can override existing stage variables or add new stage variables
--   for the canary release deployment. These stage variables are
--   represented as a string-to-string map between stage variable names and
--   their values.
deploymentCanarySettings_stageVariableOverrides :: Lens' DeploymentCanarySettings (Maybe (HashMap Text Text))

-- | A Boolean flag to indicate whether the canary release deployment uses
--   the stage cache or not.
deploymentCanarySettings_useStageCache :: Lens' DeploymentCanarySettings (Maybe Bool)

-- | The percentage (0.0-100.0) of traffic routed to the canary deployment.
deploymentCanarySettings_percentTraffic :: Lens' DeploymentCanarySettings (Maybe Double)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.DeploymentCanarySettings.DeploymentCanarySettings
instance GHC.Show.Show Amazonka.APIGateway.Types.DeploymentCanarySettings.DeploymentCanarySettings
instance GHC.Read.Read Amazonka.APIGateway.Types.DeploymentCanarySettings.DeploymentCanarySettings
instance GHC.Classes.Eq Amazonka.APIGateway.Types.DeploymentCanarySettings.DeploymentCanarySettings
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.DeploymentCanarySettings.DeploymentCanarySettings
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.DeploymentCanarySettings.DeploymentCanarySettings
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.DeploymentCanarySettings.DeploymentCanarySettings


module Amazonka.APIGateway.Types.DocumentationPartType
newtype DocumentationPartType
DocumentationPartType' :: Text -> DocumentationPartType
[fromDocumentationPartType] :: DocumentationPartType -> Text
pattern DocumentationPartType_API :: DocumentationPartType
pattern DocumentationPartType_AUTHORIZER :: DocumentationPartType
pattern DocumentationPartType_METHOD :: DocumentationPartType
pattern DocumentationPartType_MODEL :: DocumentationPartType
pattern DocumentationPartType_PATH_PARAMETER :: DocumentationPartType
pattern DocumentationPartType_QUERY_PARAMETER :: DocumentationPartType
pattern DocumentationPartType_REQUEST_BODY :: DocumentationPartType
pattern DocumentationPartType_REQUEST_HEADER :: DocumentationPartType
pattern DocumentationPartType_RESOURCE :: DocumentationPartType
pattern DocumentationPartType_RESPONSE :: DocumentationPartType
pattern DocumentationPartType_RESPONSE_BODY :: DocumentationPartType
pattern DocumentationPartType_RESPONSE_HEADER :: DocumentationPartType
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance GHC.Generics.Generic Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance GHC.Classes.Ord Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance GHC.Classes.Eq Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance GHC.Read.Read Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType
instance GHC.Show.Show Amazonka.APIGateway.Types.DocumentationPartType.DocumentationPartType


module Amazonka.APIGateway.Types.DocumentationPartLocation

-- | Specifies the target API entity to which the documentation applies.
--   
--   <i>See:</i> <a>newDocumentationPartLocation</a> smart constructor.
data DocumentationPartLocation
DocumentationPartLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> DocumentationPartType -> DocumentationPartLocation

-- | The URL path of the target. It is a valid field for the API entity
--   types of <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. The default value is <tt>/</tt> for the
--   root resource. When an applicable child entity inherits the content of
--   another entity of the same type with more general specifications of
--   the other <tt>location</tt> attributes, the child entity's
--   <tt>path</tt> attribute must match that of the parent entity as a
--   prefix.
[$sel:path:DocumentationPartLocation'] :: DocumentationPartLocation -> Maybe Text

-- | The name of the targeted API entity. It is a valid and required field
--   for the API entity types of <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt> and
--   <tt>RESPONSE_HEADER</tt>. It is an invalid field for any other entity
--   type.
[$sel:name:DocumentationPartLocation'] :: DocumentationPartLocation -> Maybe Text

-- | The HTTP verb of a method. It is a valid field for the API entity
--   types of <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any
--   method. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>method</tt>
--   attribute must match that of the parent entity exactly.
[$sel:method:DocumentationPartLocation'] :: DocumentationPartLocation -> Maybe Text

-- | The HTTP status code of a response. It is a valid field for the API
--   entity types of <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>, and
--   <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any status
--   code. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>statusCode</tt>
--   attribute must match that of the parent entity exactly.
[$sel:statusCode:DocumentationPartLocation'] :: DocumentationPartLocation -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The type of API entity to which the documentation
--   content applies. Valid values are <tt>API</tt>, <tt>AUTHORIZER</tt>,
--   <tt>MODEL</tt>, <tt>RESOURCE</tt>, <tt>METHOD</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. Content
--   inheritance does not apply to any entity of the <tt>API</tt>,
--   <tt>AUTHORIZER</tt>, <tt>METHOD</tt>, <tt>MODEL</tt>,
--   <tt>REQUEST_BODY</tt>, or <tt>RESOURCE</tt> type.</li>
--   </ul>
[$sel:type':DocumentationPartLocation'] :: DocumentationPartLocation -> DocumentationPartType

-- | Create a value of <a>DocumentationPartLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_path</a> - The URL path of the target. It
--   is a valid field for the API entity types of <tt>RESOURCE</tt>,
--   <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. The default
--   value is <tt>/</tt> for the root resource. When an applicable child
--   entity inherits the content of another entity of the same type with
--   more general specifications of the other <tt>location</tt> attributes,
--   the child entity's <tt>path</tt> attribute must match that of the
--   parent entity as a prefix.
--   
--   <a>$sel:name:DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_name</a> - The name of the targeted API
--   entity. It is a valid and required field for the API entity types of
--   <tt>AUTHORIZER</tt>, <tt>MODEL</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt> and <tt>RESPONSE_HEADER</tt>. It is an invalid
--   field for any other entity type.
--   
--   <a>$sel:method:DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_method</a> - The HTTP verb of a method.
--   It is a valid field for the API entity types of <tt>METHOD</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. The default
--   value is <tt>*</tt> for any method. When an applicable child entity
--   inherits the content of an entity of the same type with more general
--   specifications of the other <tt>location</tt> attributes, the child
--   entity's <tt>method</tt> attribute must match that of the parent
--   entity exactly.
--   
--   <a>$sel:statusCode:DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_statusCode</a> - The HTTP status code of
--   a response. It is a valid field for the API entity types of
--   <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>, and
--   <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any status
--   code. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>statusCode</tt>
--   attribute must match that of the parent entity exactly.
--   
--   <a>$sel:type':DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_type</a> - [Required] The type of API
--   entity to which the documentation content applies. Valid values are
--   <tt>API</tt>, <tt>AUTHORIZER</tt>, <tt>MODEL</tt>, <tt>RESOURCE</tt>,
--   <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. Content
--   inheritance does not apply to any entity of the <tt>API</tt>,
--   <tt>AUTHORIZER</tt>, <tt>METHOD</tt>, <tt>MODEL</tt>,
--   <tt>REQUEST_BODY</tt>, or <tt>RESOURCE</tt> type.
newDocumentationPartLocation :: DocumentationPartType -> DocumentationPartLocation

-- | The URL path of the target. It is a valid field for the API entity
--   types of <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. The default value is <tt>/</tt> for the
--   root resource. When an applicable child entity inherits the content of
--   another entity of the same type with more general specifications of
--   the other <tt>location</tt> attributes, the child entity's
--   <tt>path</tt> attribute must match that of the parent entity as a
--   prefix.
documentationPartLocation_path :: Lens' DocumentationPartLocation (Maybe Text)

-- | The name of the targeted API entity. It is a valid and required field
--   for the API entity types of <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt> and
--   <tt>RESPONSE_HEADER</tt>. It is an invalid field for any other entity
--   type.
documentationPartLocation_name :: Lens' DocumentationPartLocation (Maybe Text)

-- | The HTTP verb of a method. It is a valid field for the API entity
--   types of <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any
--   method. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>method</tt>
--   attribute must match that of the parent entity exactly.
documentationPartLocation_method :: Lens' DocumentationPartLocation (Maybe Text)

-- | The HTTP status code of a response. It is a valid field for the API
--   entity types of <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>, and
--   <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any status
--   code. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>statusCode</tt>
--   attribute must match that of the parent entity exactly.
documentationPartLocation_statusCode :: Lens' DocumentationPartLocation (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The type of API entity to which the documentation
--   content applies. Valid values are <tt>API</tt>, <tt>AUTHORIZER</tt>,
--   <tt>MODEL</tt>, <tt>RESOURCE</tt>, <tt>METHOD</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. Content
--   inheritance does not apply to any entity of the <tt>API</tt>,
--   <tt>AUTHORIZER</tt>, <tt>METHOD</tt>, <tt>MODEL</tt>,
--   <tt>REQUEST_BODY</tt>, or <tt>RESOURCE</tt> type.</li>
--   </ul>
documentationPartLocation_type :: Lens' DocumentationPartLocation DocumentationPartType
instance GHC.Generics.Generic Amazonka.APIGateway.Types.DocumentationPartLocation.DocumentationPartLocation
instance GHC.Show.Show Amazonka.APIGateway.Types.DocumentationPartLocation.DocumentationPartLocation
instance GHC.Read.Read Amazonka.APIGateway.Types.DocumentationPartLocation.DocumentationPartLocation
instance GHC.Classes.Eq Amazonka.APIGateway.Types.DocumentationPartLocation.DocumentationPartLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.DocumentationPartLocation.DocumentationPartLocation
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.DocumentationPartLocation.DocumentationPartLocation
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.DocumentationPartLocation.DocumentationPartLocation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.DocumentationPartLocation.DocumentationPartLocation


module Amazonka.APIGateway.Types.DocumentationPart

-- | A documentation part for a targeted API entity.
--   
--   A documentation part consists of a content map (<tt>properties</tt>)
--   and a target (<tt>location</tt>). The target specifies an API entity
--   to which the documentation content applies. The supported API entity
--   types are <tt>API</tt>, <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. Valid <tt>location</tt> fields depend on
--   the API entity type. All valid fields are not required.
--   
--   The content map is a JSON string of API-specific key-value pairs.
--   Although an API can use any shape for the content map, only the
--   OpenAPI-compliant documentation fields will be injected into the
--   associated API entity definition in the exported OpenAPI definition
--   file.
--   
--   <a>Documenting an API</a>, DocumentationParts
--   
--   <i>See:</i> <a>newDocumentationPart</a> smart constructor.
data DocumentationPart
DocumentationPart' :: Maybe DocumentationPartLocation -> Maybe Text -> Maybe Text -> DocumentationPart

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
[$sel:location:DocumentationPart'] :: DocumentationPart -> Maybe DocumentationPartLocation

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
[$sel:id:DocumentationPart'] :: DocumentationPart -> Maybe Text

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
[$sel:properties:DocumentationPart'] :: DocumentationPart -> Maybe Text

-- | Create a value of <a>DocumentationPart</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:DocumentationPart'</a>,
--   <a>documentationPart_location</a> - The location of the API entity to
--   which the documentation applies. Valid fields depend on the targeted
--   API entity type. All the valid location fields are not required. If
--   not explicitly specified, a valid location field is treated as a
--   wildcard and associated documentation content may be inherited by
--   matching entities, unless overridden.
--   
--   <a>$sel:id:DocumentationPart'</a>, <a>documentationPart_id</a> - The
--   DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
--   
--   <a>$sel:properties:DocumentationPart'</a>,
--   <a>documentationPart_properties</a> - A content map of API-specific
--   key-value pairs describing the targeted API entity. The map must be
--   encoded as a JSON string, e.g., <tt>"{ \"description\": \"The API does
--   ...\" }"</tt>. Only OpenAPI-compliant documentation-related fields
--   from the properties map are exported and, hence, published as part of
--   the API entity definitions, while the original documentation parts are
--   exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
newDocumentationPart :: DocumentationPart

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
documentationPart_location :: Lens' DocumentationPart (Maybe DocumentationPartLocation)

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
documentationPart_id :: Lens' DocumentationPart (Maybe Text)

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
documentationPart_properties :: Lens' DocumentationPart (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.DocumentationPart.DocumentationPart
instance GHC.Show.Show Amazonka.APIGateway.Types.DocumentationPart.DocumentationPart
instance GHC.Read.Read Amazonka.APIGateway.Types.DocumentationPart.DocumentationPart
instance GHC.Classes.Eq Amazonka.APIGateway.Types.DocumentationPart.DocumentationPart
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.DocumentationPart.DocumentationPart
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.DocumentationPart.DocumentationPart
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.DocumentationPart.DocumentationPart


module Amazonka.APIGateway.Types.DocumentationVersion

-- | A snapshot of the documentation of an API.
--   
--   Publishing API documentation involves creating a documentation version
--   associated with an API stage and exporting the versioned documentation
--   to an external (e.g., OpenAPI) file.
--   
--   <a>Documenting an API</a>, DocumentationPart, DocumentationVersions
--   
--   <i>See:</i> <a>newDocumentationVersion</a> smart constructor.
data DocumentationVersion
DocumentationVersion' :: Maybe POSIX -> Maybe Text -> Maybe Text -> DocumentationVersion

-- | The date when the API documentation snapshot is created.
[$sel:createdDate:DocumentationVersion'] :: DocumentationVersion -> Maybe POSIX

-- | The version identifier of the API documentation snapshot.
[$sel:version:DocumentationVersion'] :: DocumentationVersion -> Maybe Text

-- | The description of the API documentation snapshot.
[$sel:description:DocumentationVersion'] :: DocumentationVersion -> Maybe Text

-- | Create a value of <a>DocumentationVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:DocumentationVersion'</a>,
--   <a>documentationVersion_createdDate</a> - The date when the API
--   documentation snapshot is created.
--   
--   <a>$sel:version:DocumentationVersion'</a>,
--   <a>documentationVersion_version</a> - The version identifier of the
--   API documentation snapshot.
--   
--   <a>$sel:description:DocumentationVersion'</a>,
--   <a>documentationVersion_description</a> - The description of the API
--   documentation snapshot.
newDocumentationVersion :: DocumentationVersion

-- | The date when the API documentation snapshot is created.
documentationVersion_createdDate :: Lens' DocumentationVersion (Maybe UTCTime)

-- | The version identifier of the API documentation snapshot.
documentationVersion_version :: Lens' DocumentationVersion (Maybe Text)

-- | The description of the API documentation snapshot.
documentationVersion_description :: Lens' DocumentationVersion (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.DocumentationVersion.DocumentationVersion
instance GHC.Show.Show Amazonka.APIGateway.Types.DocumentationVersion.DocumentationVersion
instance GHC.Read.Read Amazonka.APIGateway.Types.DocumentationVersion.DocumentationVersion
instance GHC.Classes.Eq Amazonka.APIGateway.Types.DocumentationVersion.DocumentationVersion
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.DocumentationVersion.DocumentationVersion
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.DocumentationVersion.DocumentationVersion
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.DocumentationVersion.DocumentationVersion


module Amazonka.APIGateway.Types.DomainNameStatus
newtype DomainNameStatus
DomainNameStatus' :: Text -> DomainNameStatus
[fromDomainNameStatus] :: DomainNameStatus -> Text
pattern DomainNameStatus_AVAILABLE :: DomainNameStatus
pattern DomainNameStatus_PENDING :: DomainNameStatus
pattern DomainNameStatus_PENDING_CERTIFICATE_REIMPORT :: DomainNameStatus
pattern DomainNameStatus_PENDING_OWNERSHIP_VERIFICATION :: DomainNameStatus
pattern DomainNameStatus_UPDATING :: DomainNameStatus
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance GHC.Generics.Generic Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance GHC.Classes.Ord Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance GHC.Classes.Eq Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance GHC.Read.Read Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus
instance GHC.Show.Show Amazonka.APIGateway.Types.DomainNameStatus.DomainNameStatus


module Amazonka.APIGateway.Types.EndpointType

-- | The endpoint type. The valid values are <tt>EDGE</tt> for
--   edge-optimized API setup, most suitable for mobile applications;
--   <tt>REGIONAL</tt> for regional API endpoint setup, most suitable for
--   calling from AWS Region; and <tt>PRIVATE</tt> for private APIs.
newtype EndpointType
EndpointType' :: Text -> EndpointType
[fromEndpointType] :: EndpointType -> Text
pattern EndpointType_EDGE :: EndpointType
pattern EndpointType_PRIVATE :: EndpointType
pattern EndpointType_REGIONAL :: EndpointType
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.EndpointType.EndpointType
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.EndpointType.EndpointType
instance GHC.Generics.Generic Amazonka.APIGateway.Types.EndpointType.EndpointType
instance GHC.Classes.Ord Amazonka.APIGateway.Types.EndpointType.EndpointType
instance GHC.Classes.Eq Amazonka.APIGateway.Types.EndpointType.EndpointType
instance GHC.Read.Read Amazonka.APIGateway.Types.EndpointType.EndpointType
instance GHC.Show.Show Amazonka.APIGateway.Types.EndpointType.EndpointType


module Amazonka.APIGateway.Types.EndpointConfiguration

-- | The endpoint configuration to indicate the types of endpoints an API
--   (RestApi) or its custom domain name (DomainName) has.
--   
--   <i>See:</i> <a>newEndpointConfiguration</a> smart constructor.
data EndpointConfiguration
EndpointConfiguration' :: Maybe [EndpointType] -> Maybe [Text] -> EndpointConfiguration

-- | A list of endpoint types of an API (RestApi) or its custom domain name
--   (DomainName). For an edge-optimized API and its custom domain name,
--   the endpoint type is <tt>"EDGE"</tt>. For a regional API and its
--   custom domain name, the endpoint type is <tt>REGIONAL</tt>. For a
--   private API, the endpoint type is <tt>PRIVATE</tt>.
[$sel:types:EndpointConfiguration'] :: EndpointConfiguration -> Maybe [EndpointType]

-- | A list of VpcEndpointIds of an API (RestApi) against which to create
--   Route53 ALIASes. It is only supported for <tt>PRIVATE</tt> endpoint
--   type.
[$sel:vpcEndpointIds:EndpointConfiguration'] :: EndpointConfiguration -> Maybe [Text]

-- | Create a value of <a>EndpointConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:types:EndpointConfiguration'</a>,
--   <a>endpointConfiguration_types</a> - A list of endpoint types of an
--   API (RestApi) or its custom domain name (DomainName). For an
--   edge-optimized API and its custom domain name, the endpoint type is
--   <tt>"EDGE"</tt>. For a regional API and its custom domain name, the
--   endpoint type is <tt>REGIONAL</tt>. For a private API, the endpoint
--   type is <tt>PRIVATE</tt>.
--   
--   <a>$sel:vpcEndpointIds:EndpointConfiguration'</a>,
--   <a>endpointConfiguration_vpcEndpointIds</a> - A list of VpcEndpointIds
--   of an API (RestApi) against which to create Route53 ALIASes. It is
--   only supported for <tt>PRIVATE</tt> endpoint type.
newEndpointConfiguration :: EndpointConfiguration

-- | A list of endpoint types of an API (RestApi) or its custom domain name
--   (DomainName). For an edge-optimized API and its custom domain name,
--   the endpoint type is <tt>"EDGE"</tt>. For a regional API and its
--   custom domain name, the endpoint type is <tt>REGIONAL</tt>. For a
--   private API, the endpoint type is <tt>PRIVATE</tt>.
endpointConfiguration_types :: Lens' EndpointConfiguration (Maybe [EndpointType])

-- | A list of VpcEndpointIds of an API (RestApi) against which to create
--   Route53 ALIASes. It is only supported for <tt>PRIVATE</tt> endpoint
--   type.
endpointConfiguration_vpcEndpointIds :: Lens' EndpointConfiguration (Maybe [Text])
instance GHC.Generics.Generic Amazonka.APIGateway.Types.EndpointConfiguration.EndpointConfiguration
instance GHC.Show.Show Amazonka.APIGateway.Types.EndpointConfiguration.EndpointConfiguration
instance GHC.Read.Read Amazonka.APIGateway.Types.EndpointConfiguration.EndpointConfiguration
instance GHC.Classes.Eq Amazonka.APIGateway.Types.EndpointConfiguration.EndpointConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.EndpointConfiguration.EndpointConfiguration
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.EndpointConfiguration.EndpointConfiguration
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.EndpointConfiguration.EndpointConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.EndpointConfiguration.EndpointConfiguration


module Amazonka.APIGateway.Types.GatewayResponseType
newtype GatewayResponseType
GatewayResponseType' :: Text -> GatewayResponseType
[fromGatewayResponseType] :: GatewayResponseType -> Text
pattern GatewayResponseType_ACCESS_DENIED :: GatewayResponseType
pattern GatewayResponseType_API_CONFIGURATION_ERROR :: GatewayResponseType
pattern GatewayResponseType_AUTHORIZER_CONFIGURATION_ERROR :: GatewayResponseType
pattern GatewayResponseType_AUTHORIZER_FAILURE :: GatewayResponseType
pattern GatewayResponseType_BAD_REQUEST_BODY :: GatewayResponseType
pattern GatewayResponseType_BAD_REQUEST_PARAMETERS :: GatewayResponseType
pattern GatewayResponseType_DEFAULT_4XX :: GatewayResponseType
pattern GatewayResponseType_DEFAULT_5XX :: GatewayResponseType
pattern GatewayResponseType_EXPIRED_TOKEN :: GatewayResponseType
pattern GatewayResponseType_INTEGRATION_FAILURE :: GatewayResponseType
pattern GatewayResponseType_INTEGRATION_TIMEOUT :: GatewayResponseType
pattern GatewayResponseType_INVALID_API_KEY :: GatewayResponseType
pattern GatewayResponseType_INVALID_SIGNATURE :: GatewayResponseType
pattern GatewayResponseType_MISSING_AUTHENTICATION_TOKEN :: GatewayResponseType
pattern GatewayResponseType_QUOTA_EXCEEDED :: GatewayResponseType
pattern GatewayResponseType_REQUEST_TOO_LARGE :: GatewayResponseType
pattern GatewayResponseType_RESOURCE_NOT_FOUND :: GatewayResponseType
pattern GatewayResponseType_THROTTLED :: GatewayResponseType
pattern GatewayResponseType_UNAUTHORIZED :: GatewayResponseType
pattern GatewayResponseType_UNSUPPORTED_MEDIA_TYPE :: GatewayResponseType
pattern GatewayResponseType_WAF_FILTERED :: GatewayResponseType
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance GHC.Generics.Generic Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance GHC.Classes.Ord Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance GHC.Classes.Eq Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance GHC.Read.Read Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType
instance GHC.Show.Show Amazonka.APIGateway.Types.GatewayResponseType.GatewayResponseType


module Amazonka.APIGateway.Types.GatewayResponse

-- | A gateway response of a given response type and status code, with
--   optional response parameters and mapping templates.
--   
--   For more information about valid gateway response types, see
--   <a>Gateway Response Types Supported by API Gateway</a>
--   
--   <h4>Example: Get a Gateway Response of a given response type</h4>
--   
--   <h5>Request</h5>
--   
--   This example shows how to get a gateway response of the
--   <tt>MISSING_AUTHENTICATION_TOKEN</tt> type.
--   
--   <pre>
--   GET /restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T202516Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=1b52460e3159c1a26cff29093855d50ea141c1c5b937528fecaf60f51129697a Cache-Control: no-cache Postman-Token: 3b2a1ce9-c848-2e26-2e2f-9c2caefbed45
--   </pre>
--   
--   The response type is specified as a URL path.
--   
--   <h5>Response</h5>
--   
--   The successful operation returns the <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:delete": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": false, "responseParameters": { "gatewayresponse.header.x-request-path": "method.request.path.petId", "gatewayresponse.header.Access-Control-Allow-Origin": "'a.b.c'", "gatewayresponse.header.x-request-query": "method.request.querystring.q", "gatewayresponse.header.x-request-header": "method.request.header.Accept" }, "responseTemplates": { "application/json": "{\n \"message\": $context.error.messageString,\n \"type\": \"$context.error.responseType\",\n \"stage\": \"$context.stage\",\n \"resourcePath\": \"$context.resourcePath\",\n \"stageVariables.a\": \"$stageVariables.a\",\n \"statusCode\": \"'404'\"\n}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "404" }
--   </pre>
--   
--   <a>Customize Gateway Responses</a>
--   
--   <i>See:</i> <a>newGatewayResponse</a> smart constructor.
data GatewayResponse
GatewayResponse' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe GatewayResponseType -> Maybe Text -> Maybe (HashMap Text Text) -> GatewayResponse

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
[$sel:defaultResponse:GatewayResponse'] :: GatewayResponse -> Maybe Bool

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
[$sel:responseTemplates:GatewayResponse'] :: GatewayResponse -> Maybe (HashMap Text Text)

-- | The response type of the associated GatewayResponse.
[$sel:responseType:GatewayResponse'] :: GatewayResponse -> Maybe GatewayResponseType

-- | The HTTP status code for this GatewayResponse.
[$sel:statusCode:GatewayResponse'] :: GatewayResponse -> Maybe Text

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
[$sel:responseParameters:GatewayResponse'] :: GatewayResponse -> Maybe (HashMap Text Text)

-- | Create a value of <a>GatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultResponse:GatewayResponse'</a>,
--   <a>gatewayResponse_defaultResponse</a> - A Boolean flag to indicate
--   whether this GatewayResponse is the default gateway response
--   (<tt>true</tt>) or not (<tt>false</tt>). A default gateway response is
--   one generated by API Gateway without any customization by an API
--   developer.
--   
--   <a>$sel:responseTemplates:GatewayResponse'</a>,
--   <a>gatewayResponse_responseTemplates</a> - Response templates of the
--   GatewayResponse as a string-to-string map of key-value pairs.
--   
--   <a>$sel:responseType:GatewayResponse'</a>,
--   <a>gatewayResponse_responseType</a> - The response type of the
--   associated GatewayResponse.
--   
--   <a>$sel:statusCode:GatewayResponse'</a>,
--   <a>gatewayResponse_statusCode</a> - The HTTP status code for this
--   GatewayResponse.
--   
--   <a>$sel:responseParameters:GatewayResponse'</a>,
--   <a>gatewayResponse_responseParameters</a> - Response parameters
--   (paths, query strings and headers) of the GatewayResponse as a
--   string-to-string map of key-value pairs.
newGatewayResponse :: GatewayResponse

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
gatewayResponse_defaultResponse :: Lens' GatewayResponse (Maybe Bool)

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
gatewayResponse_responseTemplates :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | The response type of the associated GatewayResponse.
gatewayResponse_responseType :: Lens' GatewayResponse (Maybe GatewayResponseType)

-- | The HTTP status code for this GatewayResponse.
gatewayResponse_statusCode :: Lens' GatewayResponse (Maybe Text)

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
gatewayResponse_responseParameters :: Lens' GatewayResponse (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.Types.GatewayResponse.GatewayResponse
instance GHC.Show.Show Amazonka.APIGateway.Types.GatewayResponse.GatewayResponse
instance GHC.Read.Read Amazonka.APIGateway.Types.GatewayResponse.GatewayResponse
instance GHC.Classes.Eq Amazonka.APIGateway.Types.GatewayResponse.GatewayResponse
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.GatewayResponse.GatewayResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.GatewayResponse.GatewayResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.GatewayResponse.GatewayResponse


module Amazonka.APIGateway.Types.IntegrationResponse

-- | Represents an integration response. The status code must map to an
--   existing MethodResponse, and parameters and templates can be used to
--   transform the back-end response.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegrationResponse</a> smart constructor.
data IntegrationResponse
IntegrationResponse' :: Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> IntegrationResponse

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
[$sel:contentHandling:IntegrationResponse'] :: IntegrationResponse -> Maybe ContentHandlingStrategy

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
[$sel:responseTemplates:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
[$sel:selectionPattern:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
[$sel:statusCode:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
[$sel:responseParameters:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | Create a value of <a>IntegrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentHandling:IntegrationResponse'</a>,
--   <a>integrationResponse_contentHandling</a> - Specifies how to handle
--   response payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
--   
--   <a>$sel:responseTemplates:IntegrationResponse'</a>,
--   <a>integrationResponse_responseTemplates</a> - Specifies the templates
--   used to transform the integration response body. Response templates
--   are represented as a key/value map, with a content-type as the key and
--   a template as the value.
--   
--   <a>$sel:selectionPattern:IntegrationResponse'</a>,
--   <a>integrationResponse_selectionPattern</a> - Specifies the regular
--   expression (regex) pattern used to choose an integration response
--   based on the response from the back end. For example, if the success
--   response returns nothing and the error response returns some string,
--   you could use the <tt>.+</tt> regex to match error response. However,
--   make sure that the error response does not contain any newline
--   (<tt>\n</tt>) character in such cases. If the back end is an AWS
--   Lambda function, the AWS Lambda function error header is matched. For
--   all other HTTP and AWS back ends, the HTTP status code is matched.
--   
--   <a>$sel:statusCode:IntegrationResponse'</a>,
--   <a>integrationResponse_statusCode</a> - Specifies the status code that
--   is used to map the integration response to an existing MethodResponse.
--   
--   <a>$sel:responseParameters:IntegrationResponse'</a>,
--   <a>integrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the back end. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of <tt>method.response.header.{name}</tt>, where <tt>name</tt>
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
newIntegrationResponse :: IntegrationResponse

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
integrationResponse_contentHandling :: Lens' IntegrationResponse (Maybe ContentHandlingStrategy)

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
integrationResponse_responseTemplates :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
integrationResponse_selectionPattern :: Lens' IntegrationResponse (Maybe Text)

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
integrationResponse_statusCode :: Lens' IntegrationResponse (Maybe Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
integrationResponse_responseParameters :: Lens' IntegrationResponse (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.Types.IntegrationResponse.IntegrationResponse
instance GHC.Show.Show Amazonka.APIGateway.Types.IntegrationResponse.IntegrationResponse
instance GHC.Read.Read Amazonka.APIGateway.Types.IntegrationResponse.IntegrationResponse
instance GHC.Classes.Eq Amazonka.APIGateway.Types.IntegrationResponse.IntegrationResponse
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.IntegrationResponse.IntegrationResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.IntegrationResponse.IntegrationResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.IntegrationResponse.IntegrationResponse


module Amazonka.APIGateway.Types.IntegrationType

-- | The integration type. The valid value is <tt>HTTP</tt> for integrating
--   an API method with an HTTP backend; <tt>AWS</tt> with any AWS service
--   endpoints; <tt>MOCK</tt> for testing without actually invoking the
--   backend; <tt>HTTP_PROXY</tt> for integrating with the HTTP proxy
--   integration; <tt>AWS_PROXY</tt> for integrating with the Lambda proxy
--   integration.
newtype IntegrationType
IntegrationType' :: Text -> IntegrationType
[fromIntegrationType] :: IntegrationType -> Text
pattern IntegrationType_AWS :: IntegrationType
pattern IntegrationType_AWS_PROXY :: IntegrationType
pattern IntegrationType_HTTP :: IntegrationType
pattern IntegrationType_HTTP_PROXY :: IntegrationType
pattern IntegrationType_MOCK :: IntegrationType
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance GHC.Generics.Generic Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance GHC.Classes.Ord Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance GHC.Classes.Eq Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance GHC.Read.Read Amazonka.APIGateway.Types.IntegrationType.IntegrationType
instance GHC.Show.Show Amazonka.APIGateway.Types.IntegrationType.IntegrationType


module Amazonka.APIGateway.Types.LocationStatusType
newtype LocationStatusType
LocationStatusType' :: Text -> LocationStatusType
[fromLocationStatusType] :: LocationStatusType -> Text
pattern LocationStatusType_DOCUMENTED :: LocationStatusType
pattern LocationStatusType_UNDOCUMENTED :: LocationStatusType
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance GHC.Generics.Generic Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance GHC.Classes.Ord Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance GHC.Classes.Eq Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance GHC.Read.Read Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType
instance GHC.Show.Show Amazonka.APIGateway.Types.LocationStatusType.LocationStatusType


module Amazonka.APIGateway.Types.MethodResponse

-- | Represents a method response of a given HTTP status code returned to
--   the client. The method response is passed from the back end through
--   the associated integration response that can be transformed using a
--   mapping template.
--   
--   <h4>Example: A <b>MethodResponse</b> instance of an API</h4>
--   
--   <h5>Request</h5>
--   
--   The example request retrieves a <b>MethodResponse</b> of the 200
--   status code.
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T222952Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" }
--   </pre>
--   
--   Method, IntegrationResponse, Integration <a>Creating an API</a>
--   
--   <i>See:</i> <a>newMethodResponse</a> smart constructor.
data MethodResponse
MethodResponse' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Bool) -> MethodResponse

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
[$sel:responseModels:MethodResponse'] :: MethodResponse -> Maybe (HashMap Text Text)

-- | The method response's status code.
[$sel:statusCode:MethodResponse'] :: MethodResponse -> Maybe Text

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
[$sel:responseParameters:MethodResponse'] :: MethodResponse -> Maybe (HashMap Text Bool)

-- | Create a value of <a>MethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseModels:MethodResponse'</a>,
--   <a>methodResponse_responseModels</a> - Specifies the Model resources
--   used for the response's content-type. Response models are represented
--   as a key/value map, with a content-type as the key and a Model name as
--   the value.
--   
--   <a>$sel:statusCode:MethodResponse'</a>,
--   <a>methodResponse_statusCode</a> - The method response's status code.
--   
--   <a>$sel:responseParameters:MethodResponse'</a>,
--   <a>methodResponse_responseParameters</a> - A key-value map specifying
--   required or optional response parameters that API Gateway can send
--   back to the caller. A key defines a method response header and the
--   value specifies whether the associated method response header is
--   required or not. The expression of the key must match the pattern
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. API Gateway passes certain integration
--   response data to the method response headers specified here according
--   to the mapping you prescribe in the API's IntegrationResponse. The
--   integration response data that can be mapped include an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
newMethodResponse :: MethodResponse

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
methodResponse_responseModels :: Lens' MethodResponse (Maybe (HashMap Text Text))

-- | The method response's status code.
methodResponse_statusCode :: Lens' MethodResponse (Maybe Text)

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
methodResponse_responseParameters :: Lens' MethodResponse (Maybe (HashMap Text Bool))
instance GHC.Generics.Generic Amazonka.APIGateway.Types.MethodResponse.MethodResponse
instance GHC.Show.Show Amazonka.APIGateway.Types.MethodResponse.MethodResponse
instance GHC.Read.Read Amazonka.APIGateway.Types.MethodResponse.MethodResponse
instance GHC.Classes.Eq Amazonka.APIGateway.Types.MethodResponse.MethodResponse
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.MethodResponse.MethodResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.MethodResponse.MethodResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.MethodResponse.MethodResponse


module Amazonka.APIGateway.Types.MethodSnapshot

-- | Represents a summary of a Method resource, given a particular date and
--   time.
--   
--   <i>See:</i> <a>newMethodSnapshot</a> smart constructor.
data MethodSnapshot
MethodSnapshot' :: Maybe Text -> Maybe Bool -> MethodSnapshot

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
[$sel:authorizationType:MethodSnapshot'] :: MethodSnapshot -> Maybe Text

-- | Specifies whether the method requires a valid ApiKey.
[$sel:apiKeyRequired:MethodSnapshot'] :: MethodSnapshot -> Maybe Bool

-- | Create a value of <a>MethodSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationType:MethodSnapshot'</a>,
--   <a>methodSnapshot_authorizationType</a> - The method's authorization
--   type. Valid values are <tt>NONE</tt> for open access, <tt>AWS_IAM</tt>
--   for using AWS IAM permissions, <tt>CUSTOM</tt> for using a custom
--   authorizer, or <tt>COGNITO_USER_POOLS</tt> for using a Cognito user
--   pool.
--   
--   <a>$sel:apiKeyRequired:MethodSnapshot'</a>,
--   <a>methodSnapshot_apiKeyRequired</a> - Specifies whether the method
--   requires a valid ApiKey.
newMethodSnapshot :: MethodSnapshot

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
methodSnapshot_authorizationType :: Lens' MethodSnapshot (Maybe Text)

-- | Specifies whether the method requires a valid ApiKey.
methodSnapshot_apiKeyRequired :: Lens' MethodSnapshot (Maybe Bool)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.MethodSnapshot.MethodSnapshot
instance GHC.Show.Show Amazonka.APIGateway.Types.MethodSnapshot.MethodSnapshot
instance GHC.Read.Read Amazonka.APIGateway.Types.MethodSnapshot.MethodSnapshot
instance GHC.Classes.Eq Amazonka.APIGateway.Types.MethodSnapshot.MethodSnapshot
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.MethodSnapshot.MethodSnapshot
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.MethodSnapshot.MethodSnapshot
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.MethodSnapshot.MethodSnapshot


module Amazonka.APIGateway.Types.Deployment

-- | An immutable representation of a RestApi resource that can be called
--   by users using Stages. A deployment must be associated with a Stage
--   for it to be callable over the Internet.
--   
--   To create a deployment, call <tt>POST</tt> on the Deployments resource
--   of a RestApi. To view, update, or delete a deployment, call
--   <tt>GET</tt>, <tt>PATCH</tt>, or <tt>DELETE</tt> on the specified
--   deployment resource
--   (<tt>/restapis/{restapi_id}/deployments/{deployment_id}</tt>).
--   
--   RestApi, Deployments, Stage, <a>AWS CLI</a>, <a>AWS SDKs</a>
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe (HashMap Text (HashMap Text MethodSnapshot)) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Deployment

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
[$sel:apiSummary:Deployment'] :: Deployment -> Maybe (HashMap Text (HashMap Text MethodSnapshot))

-- | The date and time that the deployment resource was created.
[$sel:createdDate:Deployment'] :: Deployment -> Maybe POSIX

-- | The identifier for the deployment resource.
[$sel:id:Deployment'] :: Deployment -> Maybe Text

-- | The description for the deployment resource.
[$sel:description:Deployment'] :: Deployment -> Maybe Text

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiSummary:Deployment'</a>, <a>deployment_apiSummary</a> - A
--   summary of the RestApi at the date and time that the deployment
--   resource was created.
--   
--   <a>$sel:createdDate:Deployment'</a>, <a>deployment_createdDate</a> -
--   The date and time that the deployment resource was created.
--   
--   <a>$sel:id:Deployment'</a>, <a>deployment_id</a> - The identifier for
--   the deployment resource.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description for the deployment resource.
newDeployment :: Deployment

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
deployment_apiSummary :: Lens' Deployment (Maybe (HashMap Text (HashMap Text MethodSnapshot)))

-- | The date and time that the deployment resource was created.
deployment_createdDate :: Lens' Deployment (Maybe UTCTime)

-- | The identifier for the deployment resource.
deployment_id :: Lens' Deployment (Maybe Text)

-- | The description for the deployment resource.
deployment_description :: Lens' Deployment (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.Deployment.Deployment
instance GHC.Show.Show Amazonka.APIGateway.Types.Deployment.Deployment
instance GHC.Read.Read Amazonka.APIGateway.Types.Deployment.Deployment
instance GHC.Classes.Eq Amazonka.APIGateway.Types.Deployment.Deployment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.Deployment.Deployment
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.Deployment.Deployment
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.Deployment.Deployment


module Amazonka.APIGateway.Types.Model

-- | Represents the data structure of a method's request or response
--   payload.
--   
--   A request model defines the data structure of the client-supplied
--   request payload. A response model defines the data structure of the
--   response payload returned by the back end. Although not required,
--   models are useful for mapping payloads between the front end and back
--   end.
--   
--   A model is used for generating an API's SDK, validating the input
--   request body, and creating a skeletal mapping template.
--   
--   Method, MethodResponse, <a>Models and Mappings</a>
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Model

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
[$sel:schema:Model'] :: Model -> Maybe Text

-- | The name of the model. Must be an alphanumeric string.
[$sel:name:Model'] :: Model -> Maybe Text

-- | The identifier for the model resource.
[$sel:id:Model'] :: Model -> Maybe Text

-- | The description of the model.
[$sel:description:Model'] :: Model -> Maybe Text

-- | The content-type for the model.
[$sel:contentType:Model'] :: Model -> Maybe Text

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:Model'</a>, <a>model_schema</a> - The schema for the
--   model. For <tt>application/json</tt> models, this should be <a>JSON
--   schema draft 4</a> model. Do not include "\*/" characters in the
--   description of any properties because such "\*/" characters may be
--   interpreted as the closing marker for comments in some languages, such
--   as Java or JavaScript, causing the installation of your API's SDK
--   generated by API Gateway to fail.
--   
--   <a>$sel:name:Model'</a>, <a>model_name</a> - The name of the model.
--   Must be an alphanumeric string.
--   
--   <a>$sel:id:Model'</a>, <a>model_id</a> - The identifier for the model
--   resource.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The
--   description of the model.
--   
--   <a>$sel:contentType:Model'</a>, <a>model_contentType</a> - The
--   content-type for the model.
newModel :: Model

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
model_schema :: Lens' Model (Maybe Text)

-- | The name of the model. Must be an alphanumeric string.
model_name :: Lens' Model (Maybe Text)

-- | The identifier for the model resource.
model_id :: Lens' Model (Maybe Text)

-- | The description of the model.
model_description :: Lens' Model (Maybe Text)

-- | The content-type for the model.
model_contentType :: Lens' Model (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.Model.Model
instance GHC.Show.Show Amazonka.APIGateway.Types.Model.Model
instance GHC.Read.Read Amazonka.APIGateway.Types.Model.Model
instance GHC.Classes.Eq Amazonka.APIGateway.Types.Model.Model
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.Model.Model
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.Model.Model
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.Model.Model


module Amazonka.APIGateway.Types.MutualTlsAuthentication

-- | If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your custom domain name.
--   
--   <i>See:</i> <a>newMutualTlsAuthentication</a> smart constructor.
data MutualTlsAuthentication
MutualTlsAuthentication' :: Maybe [Text] -> Maybe Text -> Maybe Text -> MutualTlsAuthentication

-- | A list of warnings that API Gateway returns while processing your
--   truststore. Invalid certificates produce warnings. Mutual TLS is still
--   enabled, but some clients might not be able to access your API. To
--   resolve warnings, upload a new truststore to S3, and then update you
--   domain name to use the new version.
[$sel:truststoreWarnings:MutualTlsAuthentication'] :: MutualTlsAuthentication -> Maybe [Text]

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
[$sel:truststoreUri:MutualTlsAuthentication'] :: MutualTlsAuthentication -> Maybe Text

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
[$sel:truststoreVersion:MutualTlsAuthentication'] :: MutualTlsAuthentication -> Maybe Text

-- | Create a value of <a>MutualTlsAuthentication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:truststoreWarnings:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreWarnings</a> - A list of warnings
--   that API Gateway returns while processing your truststore. Invalid
--   certificates produce warnings. Mutual TLS is still enabled, but some
--   clients might not be able to access your API. To resolve warnings,
--   upload a new truststore to S3, and then update you domain name to use
--   the new version.
--   
--   <a>$sel:truststoreUri:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreUri</a> - An Amazon S3 URL that
--   specifies the truststore for mutual TLS authentication, for example
--   <tt>s3://bucket-name/key-name</tt>. The truststore can contain
--   certificates from public or private certificate authorities. To update
--   the truststore, upload a new version to S3, and then update your
--   custom domain name to use the new version. To update the truststore,
--   you must have permissions to access the S3 object.
--   
--   <a>$sel:truststoreVersion:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreVersion</a> - The version of the
--   S3 object that contains your truststore. To specify a version, you
--   must have versioning enabled for the S3 bucket.
newMutualTlsAuthentication :: MutualTlsAuthentication

-- | A list of warnings that API Gateway returns while processing your
--   truststore. Invalid certificates produce warnings. Mutual TLS is still
--   enabled, but some clients might not be able to access your API. To
--   resolve warnings, upload a new truststore to S3, and then update you
--   domain name to use the new version.
mutualTlsAuthentication_truststoreWarnings :: Lens' MutualTlsAuthentication (Maybe [Text])

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
mutualTlsAuthentication_truststoreUri :: Lens' MutualTlsAuthentication (Maybe Text)

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
mutualTlsAuthentication_truststoreVersion :: Lens' MutualTlsAuthentication (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.MutualTlsAuthentication.MutualTlsAuthentication
instance GHC.Show.Show Amazonka.APIGateway.Types.MutualTlsAuthentication.MutualTlsAuthentication
instance GHC.Read.Read Amazonka.APIGateway.Types.MutualTlsAuthentication.MutualTlsAuthentication
instance GHC.Classes.Eq Amazonka.APIGateway.Types.MutualTlsAuthentication.MutualTlsAuthentication
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.MutualTlsAuthentication.MutualTlsAuthentication
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.MutualTlsAuthentication.MutualTlsAuthentication
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.MutualTlsAuthentication.MutualTlsAuthentication


module Amazonka.APIGateway.Types.MutualTlsAuthenticationInput

-- | If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your custom domain name.
--   
--   <i>See:</i> <a>newMutualTlsAuthenticationInput</a> smart constructor.
data MutualTlsAuthenticationInput
MutualTlsAuthenticationInput' :: Maybe Text -> Maybe Text -> MutualTlsAuthenticationInput

-- | An Amazon S3 resource ARN that specifies the truststore for mutual TLS
--   authentication, for example, <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
[$sel:truststoreUri:MutualTlsAuthenticationInput'] :: MutualTlsAuthenticationInput -> Maybe Text

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
[$sel:truststoreVersion:MutualTlsAuthenticationInput'] :: MutualTlsAuthenticationInput -> Maybe Text

-- | Create a value of <a>MutualTlsAuthenticationInput</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:truststoreUri:MutualTlsAuthenticationInput'</a>,
--   <a>mutualTlsAuthenticationInput_truststoreUri</a> - An Amazon S3
--   resource ARN that specifies the truststore for mutual TLS
--   authentication, for example, <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
--   
--   <a>$sel:truststoreVersion:MutualTlsAuthenticationInput'</a>,
--   <a>mutualTlsAuthenticationInput_truststoreVersion</a> - The version of
--   the S3 object that contains your truststore. To specify a version, you
--   must have versioning enabled for the S3 bucket.
newMutualTlsAuthenticationInput :: MutualTlsAuthenticationInput

-- | An Amazon S3 resource ARN that specifies the truststore for mutual TLS
--   authentication, for example, <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
mutualTlsAuthenticationInput_truststoreUri :: Lens' MutualTlsAuthenticationInput (Maybe Text)

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
mutualTlsAuthenticationInput_truststoreVersion :: Lens' MutualTlsAuthenticationInput (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput
instance GHC.Show.Show Amazonka.APIGateway.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput
instance GHC.Read.Read Amazonka.APIGateway.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput
instance GHC.Classes.Eq Amazonka.APIGateway.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput


module Amazonka.APIGateway.Types.Op
newtype Op
Op' :: Text -> Op
[fromOp] :: Op -> Text
pattern Op_Add :: Op
pattern Op_Copy :: Op
pattern Op_Move :: Op
pattern Op_Remove :: Op
pattern Op_Replace :: Op
pattern Op_Test :: Op
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.Op.Op
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.Op.Op
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.Op.Op
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.Op.Op
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.Op.Op
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.Op.Op
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.Op.Op
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.Op.Op
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.Op.Op
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.Op.Op
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.Op.Op
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.Op.Op
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.Op.Op
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.Op.Op
instance GHC.Generics.Generic Amazonka.APIGateway.Types.Op.Op
instance GHC.Classes.Ord Amazonka.APIGateway.Types.Op.Op
instance GHC.Classes.Eq Amazonka.APIGateway.Types.Op.Op
instance GHC.Read.Read Amazonka.APIGateway.Types.Op.Op
instance GHC.Show.Show Amazonka.APIGateway.Types.Op.Op


module Amazonka.APIGateway.Types.PatchOperation

-- | A single patch operation to apply to the specified resource. Please
--   refer to http://tools.ietf.org/html/rfc6902#section-4 for an
--   explanation of how each operation is used.
--   
--   <i>See:</i> <a>newPatchOperation</a> smart constructor.
data PatchOperation
PatchOperation' :: Maybe Op -> Maybe Text -> Maybe Text -> Maybe Text -> PatchOperation

-- | An update operation to be performed with this PATCH request. The valid
--   value can be <tt>add</tt>, <tt>remove</tt>, <tt>replace</tt> or
--   <tt>copy</tt>. Not all valid operations are supported for a given
--   resource. Support of the operations depends on specific operational
--   contexts. Attempts to apply an unsupported operation on a resource
--   will return an error message.
[$sel:op:PatchOperation'] :: PatchOperation -> Maybe Op

-- | The <tt>op</tt> operation's target, as identified by a <a>JSON
--   Pointer</a> value that references a location within the targeted
--   resource. For example, if the target resource has an updateable
--   property of <tt>{"name":"value"}</tt>, the path for this property is
--   <tt>/name</tt>. If the <tt>name</tt> property value is a JSON object
--   (e.g., <tt>{"name": {"child/name": "child-value"}}</tt>), the path for
--   the <tt>child/name</tt> property will be <tt>/name/child~1name</tt>.
--   Any slash ("/") character appearing in path names must be escaped with
--   "~1", as shown in the example above. Each <tt>op</tt> operation can
--   have only one <tt>path</tt> associated with it.
[$sel:path:PatchOperation'] :: PatchOperation -> Maybe Text

-- | The new target value of the update operation. It is applicable for the
--   <tt>add</tt> or <tt>replace</tt> operation. When using AWS CLI to
--   update a property of a JSON value, enclose the JSON object with a pair
--   of single quotes in a Linux shell, e.g., '{"a": ...}'. In a Windows
--   shell, see <a>Using JSON for Parameters</a>.
[$sel:value:PatchOperation'] :: PatchOperation -> Maybe Text

-- | The <tt>copy</tt> update operation's source as identified by a
--   <tt>JSON-Pointer</tt> value referencing the location within the
--   targeted resource to copy the value from. For example, to promote a
--   canary deployment, you copy the canary deployment ID to the affiliated
--   deployment ID by calling a PATCH request on a Stage resource with
--   <tt>"op":"copy"</tt>, <tt>"from":"/canarySettings/deploymentId"</tt>
--   and <tt>"path":"/deploymentId"</tt>.
[$sel:from:PatchOperation'] :: PatchOperation -> Maybe Text

-- | Create a value of <a>PatchOperation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:op:PatchOperation'</a>, <a>patchOperation_op</a> - An update
--   operation to be performed with this PATCH request. The valid value can
--   be <tt>add</tt>, <tt>remove</tt>, <tt>replace</tt> or <tt>copy</tt>.
--   Not all valid operations are supported for a given resource. Support
--   of the operations depends on specific operational contexts. Attempts
--   to apply an unsupported operation on a resource will return an error
--   message.
--   
--   <a>$sel:path:PatchOperation'</a>, <a>patchOperation_path</a> - The
--   <tt>op</tt> operation's target, as identified by a <a>JSON Pointer</a>
--   value that references a location within the targeted resource. For
--   example, if the target resource has an updateable property of
--   <tt>{"name":"value"}</tt>, the path for this property is
--   <tt>/name</tt>. If the <tt>name</tt> property value is a JSON object
--   (e.g., <tt>{"name": {"child/name": "child-value"}}</tt>), the path for
--   the <tt>child/name</tt> property will be <tt>/name/child~1name</tt>.
--   Any slash ("/") character appearing in path names must be escaped with
--   "~1", as shown in the example above. Each <tt>op</tt> operation can
--   have only one <tt>path</tt> associated with it.
--   
--   <a>$sel:value:PatchOperation'</a>, <a>patchOperation_value</a> - The
--   new target value of the update operation. It is applicable for the
--   <tt>add</tt> or <tt>replace</tt> operation. When using AWS CLI to
--   update a property of a JSON value, enclose the JSON object with a pair
--   of single quotes in a Linux shell, e.g., '{"a": ...}'. In a Windows
--   shell, see <a>Using JSON for Parameters</a>.
--   
--   <a>$sel:from:PatchOperation'</a>, <a>patchOperation_from</a> - The
--   <tt>copy</tt> update operation's source as identified by a
--   <tt>JSON-Pointer</tt> value referencing the location within the
--   targeted resource to copy the value from. For example, to promote a
--   canary deployment, you copy the canary deployment ID to the affiliated
--   deployment ID by calling a PATCH request on a Stage resource with
--   <tt>"op":"copy"</tt>, <tt>"from":"/canarySettings/deploymentId"</tt>
--   and <tt>"path":"/deploymentId"</tt>.
newPatchOperation :: PatchOperation

-- | An update operation to be performed with this PATCH request. The valid
--   value can be <tt>add</tt>, <tt>remove</tt>, <tt>replace</tt> or
--   <tt>copy</tt>. Not all valid operations are supported for a given
--   resource. Support of the operations depends on specific operational
--   contexts. Attempts to apply an unsupported operation on a resource
--   will return an error message.
patchOperation_op :: Lens' PatchOperation (Maybe Op)

-- | The <tt>op</tt> operation's target, as identified by a <a>JSON
--   Pointer</a> value that references a location within the targeted
--   resource. For example, if the target resource has an updateable
--   property of <tt>{"name":"value"}</tt>, the path for this property is
--   <tt>/name</tt>. If the <tt>name</tt> property value is a JSON object
--   (e.g., <tt>{"name": {"child/name": "child-value"}}</tt>), the path for
--   the <tt>child/name</tt> property will be <tt>/name/child~1name</tt>.
--   Any slash ("/") character appearing in path names must be escaped with
--   "~1", as shown in the example above. Each <tt>op</tt> operation can
--   have only one <tt>path</tt> associated with it.
patchOperation_path :: Lens' PatchOperation (Maybe Text)

-- | The new target value of the update operation. It is applicable for the
--   <tt>add</tt> or <tt>replace</tt> operation. When using AWS CLI to
--   update a property of a JSON value, enclose the JSON object with a pair
--   of single quotes in a Linux shell, e.g., '{"a": ...}'. In a Windows
--   shell, see <a>Using JSON for Parameters</a>.
patchOperation_value :: Lens' PatchOperation (Maybe Text)

-- | The <tt>copy</tt> update operation's source as identified by a
--   <tt>JSON-Pointer</tt> value referencing the location within the
--   targeted resource to copy the value from. For example, to promote a
--   canary deployment, you copy the canary deployment ID to the affiliated
--   deployment ID by calling a PATCH request on a Stage resource with
--   <tt>"op":"copy"</tt>, <tt>"from":"/canarySettings/deploymentId"</tt>
--   and <tt>"path":"/deploymentId"</tt>.
patchOperation_from :: Lens' PatchOperation (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.PatchOperation.PatchOperation
instance GHC.Show.Show Amazonka.APIGateway.Types.PatchOperation.PatchOperation
instance GHC.Read.Read Amazonka.APIGateway.Types.PatchOperation.PatchOperation
instance GHC.Classes.Eq Amazonka.APIGateway.Types.PatchOperation.PatchOperation
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.PatchOperation.PatchOperation
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.PatchOperation.PatchOperation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.PatchOperation.PatchOperation


module Amazonka.APIGateway.Types.PutMode
newtype PutMode
PutMode' :: Text -> PutMode
[fromPutMode] :: PutMode -> Text
pattern PutMode_Merge :: PutMode
pattern PutMode_Overwrite :: PutMode
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.PutMode.PutMode
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.PutMode.PutMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.PutMode.PutMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.PutMode.PutMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.PutMode.PutMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.PutMode.PutMode
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.PutMode.PutMode
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.PutMode.PutMode
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.PutMode.PutMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.PutMode.PutMode
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.PutMode.PutMode
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.PutMode.PutMode
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.PutMode.PutMode
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.PutMode.PutMode
instance GHC.Generics.Generic Amazonka.APIGateway.Types.PutMode.PutMode
instance GHC.Classes.Ord Amazonka.APIGateway.Types.PutMode.PutMode
instance GHC.Classes.Eq Amazonka.APIGateway.Types.PutMode.PutMode
instance GHC.Read.Read Amazonka.APIGateway.Types.PutMode.PutMode
instance GHC.Show.Show Amazonka.APIGateway.Types.PutMode.PutMode


module Amazonka.APIGateway.Types.QuotaPeriodType
newtype QuotaPeriodType
QuotaPeriodType' :: Text -> QuotaPeriodType
[fromQuotaPeriodType] :: QuotaPeriodType -> Text
pattern QuotaPeriodType_DAY :: QuotaPeriodType
pattern QuotaPeriodType_MONTH :: QuotaPeriodType
pattern QuotaPeriodType_WEEK :: QuotaPeriodType
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance GHC.Generics.Generic Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance GHC.Classes.Ord Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance GHC.Classes.Eq Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance GHC.Read.Read Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType
instance GHC.Show.Show Amazonka.APIGateway.Types.QuotaPeriodType.QuotaPeriodType


module Amazonka.APIGateway.Types.QuotaSettings

-- | Quotas configured for a usage plan.
--   
--   <i>See:</i> <a>newQuotaSettings</a> smart constructor.
data QuotaSettings
QuotaSettings' :: Maybe Int -> Maybe QuotaPeriodType -> Maybe Int -> QuotaSettings

-- | The day that a time period starts. For example, with a time period of
--   <tt>WEEK</tt>, an offset of <tt>0</tt> starts on Sunday, and an offset
--   of <tt>1</tt> starts on Monday.
[$sel:offset:QuotaSettings'] :: QuotaSettings -> Maybe Int

-- | The time period in which the limit applies. Valid values are "DAY",
--   "WEEK" or "MONTH".
[$sel:period:QuotaSettings'] :: QuotaSettings -> Maybe QuotaPeriodType

-- | The maximum number of requests that can be made in a given time
--   period.
[$sel:limit:QuotaSettings'] :: QuotaSettings -> Maybe Int

-- | Create a value of <a>QuotaSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offset:QuotaSettings'</a>, <a>quotaSettings_offset</a> - The
--   day that a time period starts. For example, with a time period of
--   <tt>WEEK</tt>, an offset of <tt>0</tt> starts on Sunday, and an offset
--   of <tt>1</tt> starts on Monday.
--   
--   <a>$sel:period:QuotaSettings'</a>, <a>quotaSettings_period</a> - The
--   time period in which the limit applies. Valid values are "DAY", "WEEK"
--   or "MONTH".
--   
--   <a>$sel:limit:QuotaSettings'</a>, <a>quotaSettings_limit</a> - The
--   maximum number of requests that can be made in a given time period.
newQuotaSettings :: QuotaSettings

-- | The day that a time period starts. For example, with a time period of
--   <tt>WEEK</tt>, an offset of <tt>0</tt> starts on Sunday, and an offset
--   of <tt>1</tt> starts on Monday.
quotaSettings_offset :: Lens' QuotaSettings (Maybe Int)

-- | The time period in which the limit applies. Valid values are "DAY",
--   "WEEK" or "MONTH".
quotaSettings_period :: Lens' QuotaSettings (Maybe QuotaPeriodType)

-- | The maximum number of requests that can be made in a given time
--   period.
quotaSettings_limit :: Lens' QuotaSettings (Maybe Int)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.QuotaSettings.QuotaSettings
instance GHC.Show.Show Amazonka.APIGateway.Types.QuotaSettings.QuotaSettings
instance GHC.Read.Read Amazonka.APIGateway.Types.QuotaSettings.QuotaSettings
instance GHC.Classes.Eq Amazonka.APIGateway.Types.QuotaSettings.QuotaSettings
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.QuotaSettings.QuotaSettings
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.QuotaSettings.QuotaSettings
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.QuotaSettings.QuotaSettings
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.QuotaSettings.QuotaSettings


module Amazonka.APIGateway.Types.RequestValidator

-- | A set of validation rules for incoming Method requests.
--   
--   In OpenAPI, a RequestValidator of an API is defined by the
--   <a>x-amazon-apigateway-request-validators.requestValidator</a> object.
--   It the referenced using the
--   <a>x-amazon-apigateway-request-validator</a> property.
--   
--   <a>Enable Basic Request Validation in API Gateway</a>
--   
--   <i>See:</i> <a>newRequestValidator</a> smart constructor.
data RequestValidator
RequestValidator' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> RequestValidator

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
[$sel:validateRequestParameters:RequestValidator'] :: RequestValidator -> Maybe Bool

-- | The name of this RequestValidator
[$sel:name:RequestValidator'] :: RequestValidator -> Maybe Text

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
[$sel:validateRequestBody:RequestValidator'] :: RequestValidator -> Maybe Bool

-- | The identifier of this RequestValidator.
[$sel:id:RequestValidator'] :: RequestValidator -> Maybe Text

-- | Create a value of <a>RequestValidator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validateRequestParameters:RequestValidator'</a>,
--   <a>requestValidator_validateRequestParameters</a> - A Boolean flag to
--   indicate whether to validate request parameters (<tt>true</tt>) or not
--   (<tt>false</tt>).
--   
--   <a>$sel:name:RequestValidator'</a>, <a>requestValidator_name</a> - The
--   name of this RequestValidator
--   
--   <a>$sel:validateRequestBody:RequestValidator'</a>,
--   <a>requestValidator_validateRequestBody</a> - A Boolean flag to
--   indicate whether to validate a request body according to the
--   configured Model schema.
--   
--   <a>$sel:id:RequestValidator'</a>, <a>requestValidator_id</a> - The
--   identifier of this RequestValidator.
newRequestValidator :: RequestValidator

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
requestValidator_validateRequestParameters :: Lens' RequestValidator (Maybe Bool)

-- | The name of this RequestValidator
requestValidator_name :: Lens' RequestValidator (Maybe Text)

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
requestValidator_validateRequestBody :: Lens' RequestValidator (Maybe Bool)

-- | The identifier of this RequestValidator.
requestValidator_id :: Lens' RequestValidator (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.RequestValidator.RequestValidator
instance GHC.Show.Show Amazonka.APIGateway.Types.RequestValidator.RequestValidator
instance GHC.Read.Read Amazonka.APIGateway.Types.RequestValidator.RequestValidator
instance GHC.Classes.Eq Amazonka.APIGateway.Types.RequestValidator.RequestValidator
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.RequestValidator.RequestValidator
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.RequestValidator.RequestValidator
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.RequestValidator.RequestValidator


module Amazonka.APIGateway.Types.RestApi

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
[$sel:minimumCompressionSize:RestApi'] :: RestApi -> Maybe Int

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
[$sel:disableExecuteApiEndpoint:RestApi'] :: RestApi -> Maybe Bool

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
[$sel:binaryMediaTypes:RestApi'] :: RestApi -> Maybe [Text]

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
[$sel:warnings:RestApi'] :: RestApi -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:RestApi'] :: RestApi -> Maybe POSIX

-- | The API's name.
[$sel:name:RestApi'] :: RestApi -> Maybe Text

-- | A version identifier for the API.
[$sel:version:RestApi'] :: RestApi -> Maybe Text

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
[$sel:apiKeySource:RestApi'] :: RestApi -> Maybe ApiKeySourceType

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
[$sel:id:RestApi'] :: RestApi -> Maybe Text

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
[$sel:policy:RestApi'] :: RestApi -> Maybe Text

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
[$sel:endpointConfiguration:RestApi'] :: RestApi -> Maybe EndpointConfiguration

-- | The API's description.
[$sel:description:RestApi'] :: RestApi -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:RestApi'] :: RestApi -> Maybe (HashMap Text Text)

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.Types.RestApi.RestApi
instance GHC.Show.Show Amazonka.APIGateway.Types.RestApi.RestApi
instance GHC.Read.Read Amazonka.APIGateway.Types.RestApi.RestApi
instance GHC.Classes.Eq Amazonka.APIGateway.Types.RestApi.RestApi
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.RestApi.RestApi
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.RestApi.RestApi
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.RestApi.RestApi


module Amazonka.APIGateway.Types.SdkConfigurationProperty

-- | A configuration property of an SDK type.
--   
--   <i>See:</i> <a>newSdkConfigurationProperty</a> smart constructor.
data SdkConfigurationProperty
SdkConfigurationProperty' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> SdkConfigurationProperty

-- | The user-friendly name of an SdkType configuration property.
[$sel:friendlyName:SdkConfigurationProperty'] :: SdkConfigurationProperty -> Maybe Text

-- | A boolean flag of an SdkType configuration property to indicate if the
--   associated SDK configuration property is required (<tt>true</tt>) or
--   not (<tt>false</tt>).
[$sel:required:SdkConfigurationProperty'] :: SdkConfigurationProperty -> Maybe Bool

-- | The name of a an SdkType configuration property.
[$sel:name:SdkConfigurationProperty'] :: SdkConfigurationProperty -> Maybe Text

-- | The default value of an SdkType configuration property.
[$sel:defaultValue:SdkConfigurationProperty'] :: SdkConfigurationProperty -> Maybe Text

-- | The description of an SdkType configuration property.
[$sel:description:SdkConfigurationProperty'] :: SdkConfigurationProperty -> Maybe Text

-- | Create a value of <a>SdkConfigurationProperty</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:friendlyName:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_friendlyName</a> - The user-friendly name
--   of an SdkType configuration property.
--   
--   <a>$sel:required:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_required</a> - A boolean flag of an
--   SdkType configuration property to indicate if the associated SDK
--   configuration property is required (<tt>true</tt>) or not
--   (<tt>false</tt>).
--   
--   <a>$sel:name:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_name</a> - The name of a an SdkType
--   configuration property.
--   
--   <a>$sel:defaultValue:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_defaultValue</a> - The default value of an
--   SdkType configuration property.
--   
--   <a>$sel:description:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_description</a> - The description of an
--   SdkType configuration property.
newSdkConfigurationProperty :: SdkConfigurationProperty

-- | The user-friendly name of an SdkType configuration property.
sdkConfigurationProperty_friendlyName :: Lens' SdkConfigurationProperty (Maybe Text)

-- | A boolean flag of an SdkType configuration property to indicate if the
--   associated SDK configuration property is required (<tt>true</tt>) or
--   not (<tt>false</tt>).
sdkConfigurationProperty_required :: Lens' SdkConfigurationProperty (Maybe Bool)

-- | The name of a an SdkType configuration property.
sdkConfigurationProperty_name :: Lens' SdkConfigurationProperty (Maybe Text)

-- | The default value of an SdkType configuration property.
sdkConfigurationProperty_defaultValue :: Lens' SdkConfigurationProperty (Maybe Text)

-- | The description of an SdkType configuration property.
sdkConfigurationProperty_description :: Lens' SdkConfigurationProperty (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.SdkConfigurationProperty.SdkConfigurationProperty
instance GHC.Show.Show Amazonka.APIGateway.Types.SdkConfigurationProperty.SdkConfigurationProperty
instance GHC.Read.Read Amazonka.APIGateway.Types.SdkConfigurationProperty.SdkConfigurationProperty
instance GHC.Classes.Eq Amazonka.APIGateway.Types.SdkConfigurationProperty.SdkConfigurationProperty
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.SdkConfigurationProperty.SdkConfigurationProperty
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.SdkConfigurationProperty.SdkConfigurationProperty
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.SdkConfigurationProperty.SdkConfigurationProperty


module Amazonka.APIGateway.Types.SdkType

-- | A type of SDK that API Gateway can generate.
--   
--   <i>See:</i> <a>newSdkType</a> smart constructor.
data SdkType
SdkType' :: Maybe Text -> Maybe [SdkConfigurationProperty] -> Maybe Text -> Maybe Text -> SdkType

-- | The user-friendly name of an SdkType instance.
[$sel:friendlyName:SdkType'] :: SdkType -> Maybe Text

-- | A list of configuration properties of an SdkType.
[$sel:configurationProperties:SdkType'] :: SdkType -> Maybe [SdkConfigurationProperty]

-- | The identifier of an SdkType instance.
[$sel:id:SdkType'] :: SdkType -> Maybe Text

-- | The description of an SdkType.
[$sel:description:SdkType'] :: SdkType -> Maybe Text

-- | Create a value of <a>SdkType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:friendlyName:SdkType'</a>, <a>sdkType_friendlyName</a> - The
--   user-friendly name of an SdkType instance.
--   
--   <a>$sel:configurationProperties:SdkType'</a>,
--   <a>sdkType_configurationProperties</a> - A list of configuration
--   properties of an SdkType.
--   
--   <a>$sel:id:SdkType'</a>, <a>sdkType_id</a> - The identifier of an
--   SdkType instance.
--   
--   <a>$sel:description:SdkType'</a>, <a>sdkType_description</a> - The
--   description of an SdkType.
newSdkType :: SdkType

-- | The user-friendly name of an SdkType instance.
sdkType_friendlyName :: Lens' SdkType (Maybe Text)

-- | A list of configuration properties of an SdkType.
sdkType_configurationProperties :: Lens' SdkType (Maybe [SdkConfigurationProperty])

-- | The identifier of an SdkType instance.
sdkType_id :: Lens' SdkType (Maybe Text)

-- | The description of an SdkType.
sdkType_description :: Lens' SdkType (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.SdkType.SdkType
instance GHC.Show.Show Amazonka.APIGateway.Types.SdkType.SdkType
instance GHC.Read.Read Amazonka.APIGateway.Types.SdkType.SdkType
instance GHC.Classes.Eq Amazonka.APIGateway.Types.SdkType.SdkType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.SdkType.SdkType
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.SdkType.SdkType
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.SdkType.SdkType


module Amazonka.APIGateway.Types.SecurityPolicy
newtype SecurityPolicy
SecurityPolicy' :: Text -> SecurityPolicy
[fromSecurityPolicy] :: SecurityPolicy -> Text
pattern SecurityPolicy_TLS_1_0 :: SecurityPolicy
pattern SecurityPolicy_TLS_1_2 :: SecurityPolicy
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance GHC.Generics.Generic Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance GHC.Classes.Ord Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance GHC.Classes.Eq Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance GHC.Read.Read Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy
instance GHC.Show.Show Amazonka.APIGateway.Types.SecurityPolicy.SecurityPolicy


module Amazonka.APIGateway.Types.DomainName

-- | Represents a custom domain name as a user-friendly host name of an API
--   (RestApi).
--   
--   When you deploy an API, API Gateway creates a default host name for
--   the API. This default API host name is of the
--   <tt>{restapi-id}.execute-api.{region}.amazonaws.com</tt> format. With
--   the default host name, you can access the API's root resource with the
--   URL of
--   <tt>https://{restapi-id}.execute-api.{region}.amazonaws.com/{stage}/</tt>.
--   When you set up a custom domain name of <tt>apis.example.com</tt> for
--   this API, you can then access the same resource using the URL of the
--   <tt>https://apis.examples.com/myApi</tt>, where <tt>myApi</tt> is the
--   base path mapping (BasePathMapping) of your API under the custom
--   domain name.
--   
--   <a>Set a Custom Host Name for an API</a>
--   
--   <i>See:</i> <a>newDomainName</a> smart constructor.
data DomainName
DomainName' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SecurityPolicy -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe DomainNameStatus -> Maybe (HashMap Text Text) -> DomainName

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
[$sel:regionalHostedZoneId:DomainName'] :: DomainName -> Maybe Text

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
[$sel:certificateName:DomainName'] :: DomainName -> Maybe Text

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
[$sel:ownershipVerificationCertificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
[$sel:regionalCertificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
[$sel:certificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
[$sel:distributionHostedZoneId:DomainName'] :: DomainName -> Maybe Text

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
[$sel:securityPolicy:DomainName'] :: DomainName -> Maybe SecurityPolicy

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
[$sel:domainName:DomainName'] :: DomainName -> Maybe Text

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
[$sel:mutualTlsAuthentication:DomainName'] :: DomainName -> Maybe MutualTlsAuthentication

-- | The name of the certificate that will be used for validating the
--   regional domain name.
[$sel:regionalCertificateName:DomainName'] :: DomainName -> Maybe Text

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
[$sel:regionalDomainName:DomainName'] :: DomainName -> Maybe Text

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
[$sel:certificateUploadDate:DomainName'] :: DomainName -> Maybe POSIX

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
[$sel:distributionDomainName:DomainName'] :: DomainName -> Maybe Text

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
[$sel:domainNameStatusMessage:DomainName'] :: DomainName -> Maybe Text

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
[$sel:endpointConfiguration:DomainName'] :: DomainName -> Maybe EndpointConfiguration

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
[$sel:domainNameStatus:DomainName'] :: DomainName -> Maybe DomainNameStatus

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:DomainName'] :: DomainName -> Maybe (HashMap Text Text)

-- | Create a value of <a>DomainName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regionalHostedZoneId:DomainName'</a>,
--   <a>domainName_regionalHostedZoneId</a> - The region-specific Amazon
--   Route 53 Hosted Zone ID of the regional endpoint. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:certificateName:DomainName'</a>,
--   <a>domainName_certificateName</a> - The name of the certificate that
--   will be used by edge-optimized endpoint for this domain name.
--   
--   <a>$sel:ownershipVerificationCertificateArn:DomainName'</a>,
--   <a>domainName_ownershipVerificationCertificateArn</a> - The ARN of the
--   public certificate issued by ACM to validate ownership of your custom
--   domain. Only required when configuring mutual TLS and using an ACM
--   imported or private CA certificate ARN as the regionalCertificateArn.
--   
--   <a>$sel:regionalCertificateArn:DomainName'</a>,
--   <a>domainName_regionalCertificateArn</a> - The reference to an
--   AWS-managed certificate that will be used for validating the regional
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:certificateArn:DomainName'</a>,
--   <a>domainName_certificateArn</a> - The reference to an AWS-managed
--   certificate that will be used by edge-optimized endpoint for this
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:distributionHostedZoneId:DomainName'</a>,
--   <a>domainName_distributionHostedZoneId</a> - The region-agnostic
--   Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The
--   valid value is <tt>Z2FDTNDATAQYW2</tt> for all the regions. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:securityPolicy:DomainName'</a>,
--   <a>domainName_securityPolicy</a> - The Transport Layer Security (TLS)
--   version + cipher suite for this DomainName. The valid values are
--   <tt>TLS_1_0</tt> and <tt>TLS_1_2</tt>.
--   
--   <a>$sel:domainName:DomainName'</a>, <a>domainName_domainName</a> - The
--   custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
--   
--   <a>$sel:mutualTlsAuthentication:DomainName'</a>,
--   <a>domainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name. If specified,
--   API Gateway performs two-way authentication between the client and the
--   server. Clients must present a trusted certificate to access your API.
--   
--   <a>$sel:regionalCertificateName:DomainName'</a>,
--   <a>domainName_regionalCertificateName</a> - The name of the
--   certificate that will be used for validating the regional domain name.
--   
--   <a>$sel:regionalDomainName:DomainName'</a>,
--   <a>domainName_regionalDomainName</a> - The domain name associated with
--   the regional endpoint for this custom domain name. You set up this
--   association by adding a DNS record that points the custom domain name
--   to this regional domain name. The regional domain name is returned by
--   API Gateway when you create a regional endpoint.
--   
--   <a>$sel:certificateUploadDate:DomainName'</a>,
--   <a>domainName_certificateUploadDate</a> - The timestamp when the
--   certificate that was used by edge-optimized endpoint for this domain
--   name was uploaded.
--   
--   <a>$sel:distributionDomainName:DomainName'</a>,
--   <a>domainName_distributionDomainName</a> - The domain name of the
--   Amazon CloudFront distribution associated with this custom domain name
--   for an edge-optimized endpoint. You set up this association when
--   adding a DNS record pointing the custom domain name to this
--   distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
--   
--   <a>$sel:domainNameStatusMessage:DomainName'</a>,
--   <a>domainName_domainNameStatusMessage</a> - An optional text message
--   containing detailed information about status of the DomainName
--   migration.
--   
--   <a>$sel:endpointConfiguration:DomainName'</a>,
--   <a>domainName_endpointConfiguration</a> - The endpoint configuration
--   of this DomainName showing the endpoint types of the domain name.
--   
--   <a>$sel:domainNameStatus:DomainName'</a>,
--   <a>domainName_domainNameStatus</a> - The status of the DomainName
--   migration. The valid values are <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
--   
--   <a>$sel:tags:DomainName'</a>, <a>domainName_tags</a> - The collection
--   of tags. Each tag element is associated with a given resource.
newDomainName :: DomainName

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
domainName_regionalHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
domainName_certificateName :: Lens' DomainName (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
domainName_ownershipVerificationCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
domainName_regionalCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
domainName_certificateArn :: Lens' DomainName (Maybe Text)

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
domainName_distributionHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
domainName_securityPolicy :: Lens' DomainName (Maybe SecurityPolicy)

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
domainName_domainName :: Lens' DomainName (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
domainName_mutualTlsAuthentication :: Lens' DomainName (Maybe MutualTlsAuthentication)

-- | The name of the certificate that will be used for validating the
--   regional domain name.
domainName_regionalCertificateName :: Lens' DomainName (Maybe Text)

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
domainName_regionalDomainName :: Lens' DomainName (Maybe Text)

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
domainName_certificateUploadDate :: Lens' DomainName (Maybe UTCTime)

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
domainName_distributionDomainName :: Lens' DomainName (Maybe Text)

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
domainName_domainNameStatusMessage :: Lens' DomainName (Maybe Text)

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
domainName_endpointConfiguration :: Lens' DomainName (Maybe EndpointConfiguration)

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
domainName_domainNameStatus :: Lens' DomainName (Maybe DomainNameStatus)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
domainName_tags :: Lens' DomainName (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.Types.DomainName.DomainName
instance GHC.Show.Show Amazonka.APIGateway.Types.DomainName.DomainName
instance GHC.Read.Read Amazonka.APIGateway.Types.DomainName.DomainName
instance GHC.Classes.Eq Amazonka.APIGateway.Types.DomainName.DomainName
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.DomainName.DomainName
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.DomainName.DomainName
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.DomainName.DomainName


module Amazonka.APIGateway.Types.StageKey

-- | A reference to a unique stage identified in the format
--   <tt>{restApiId}/{stage}</tt>.
--   
--   <i>See:</i> <a>newStageKey</a> smart constructor.
data StageKey
StageKey' :: Maybe Text -> Maybe Text -> StageKey

-- | The string identifier of the associated RestApi.
[$sel:restApiId:StageKey'] :: StageKey -> Maybe Text

-- | The stage name associated with the stage key.
[$sel:stageName:StageKey'] :: StageKey -> Maybe Text

-- | Create a value of <a>StageKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:StageKey'</a>, <a>stageKey_restApiId</a> - The
--   string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:StageKey'</a>, <a>stageKey_stageName</a> - The stage
--   name associated with the stage key.
newStageKey :: StageKey

-- | The string identifier of the associated RestApi.
stageKey_restApiId :: Lens' StageKey (Maybe Text)

-- | The stage name associated with the stage key.
stageKey_stageName :: Lens' StageKey (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.StageKey.StageKey
instance GHC.Show.Show Amazonka.APIGateway.Types.StageKey.StageKey
instance GHC.Read.Read Amazonka.APIGateway.Types.StageKey.StageKey
instance GHC.Classes.Eq Amazonka.APIGateway.Types.StageKey.StageKey
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.StageKey.StageKey
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.StageKey.StageKey
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.StageKey.StageKey


module Amazonka.APIGateway.Types.ThrottleSettings

-- | The API request rate limits.
--   
--   <i>See:</i> <a>newThrottleSettings</a> smart constructor.
data ThrottleSettings
ThrottleSettings' :: Maybe Int -> Maybe Double -> ThrottleSettings

-- | The API request burst limit, the maximum rate limit over a time
--   ranging from one to a few seconds, depending upon whether the
--   underlying token bucket is at its full capacity.
[$sel:burstLimit:ThrottleSettings'] :: ThrottleSettings -> Maybe Int

-- | The API request steady-state rate limit.
[$sel:rateLimit:ThrottleSettings'] :: ThrottleSettings -> Maybe Double

-- | Create a value of <a>ThrottleSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:burstLimit:ThrottleSettings'</a>,
--   <a>throttleSettings_burstLimit</a> - The API request burst limit, the
--   maximum rate limit over a time ranging from one to a few seconds,
--   depending upon whether the underlying token bucket is at its full
--   capacity.
--   
--   <a>$sel:rateLimit:ThrottleSettings'</a>,
--   <a>throttleSettings_rateLimit</a> - The API request steady-state rate
--   limit.
newThrottleSettings :: ThrottleSettings

-- | The API request burst limit, the maximum rate limit over a time
--   ranging from one to a few seconds, depending upon whether the
--   underlying token bucket is at its full capacity.
throttleSettings_burstLimit :: Lens' ThrottleSettings (Maybe Int)

-- | The API request steady-state rate limit.
throttleSettings_rateLimit :: Lens' ThrottleSettings (Maybe Double)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.ThrottleSettings.ThrottleSettings
instance GHC.Show.Show Amazonka.APIGateway.Types.ThrottleSettings.ThrottleSettings
instance GHC.Read.Read Amazonka.APIGateway.Types.ThrottleSettings.ThrottleSettings
instance GHC.Classes.Eq Amazonka.APIGateway.Types.ThrottleSettings.ThrottleSettings
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.ThrottleSettings.ThrottleSettings
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.ThrottleSettings.ThrottleSettings
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.ThrottleSettings.ThrottleSettings
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.ThrottleSettings.ThrottleSettings


module Amazonka.APIGateway.Types.ApiStage

-- | API stage name of the associated API stage in a usage plan.
--   
--   <i>See:</i> <a>newApiStage</a> smart constructor.
data ApiStage
ApiStage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text ThrottleSettings) -> ApiStage

-- | API stage name of the associated API stage in a usage plan.
[$sel:stage:ApiStage'] :: ApiStage -> Maybe Text

-- | API Id of the associated API stage in a usage plan.
[$sel:apiId:ApiStage'] :: ApiStage -> Maybe Text

-- | Map containing method level throttling information for API stage in a
--   usage plan.
[$sel:throttle:ApiStage'] :: ApiStage -> Maybe (HashMap Text ThrottleSettings)

-- | Create a value of <a>ApiStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:ApiStage'</a>, <a>apiStage_stage</a> - API stage name of
--   the associated API stage in a usage plan.
--   
--   <a>$sel:apiId:ApiStage'</a>, <a>apiStage_apiId</a> - API Id of the
--   associated API stage in a usage plan.
--   
--   <a>$sel:throttle:ApiStage'</a>, <a>apiStage_throttle</a> - Map
--   containing method level throttling information for API stage in a
--   usage plan.
newApiStage :: ApiStage

-- | API stage name of the associated API stage in a usage plan.
apiStage_stage :: Lens' ApiStage (Maybe Text)

-- | API Id of the associated API stage in a usage plan.
apiStage_apiId :: Lens' ApiStage (Maybe Text)

-- | Map containing method level throttling information for API stage in a
--   usage plan.
apiStage_throttle :: Lens' ApiStage (Maybe (HashMap Text ThrottleSettings))
instance GHC.Generics.Generic Amazonka.APIGateway.Types.ApiStage.ApiStage
instance GHC.Show.Show Amazonka.APIGateway.Types.ApiStage.ApiStage
instance GHC.Read.Read Amazonka.APIGateway.Types.ApiStage.ApiStage
instance GHC.Classes.Eq Amazonka.APIGateway.Types.ApiStage.ApiStage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.ApiStage.ApiStage
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.ApiStage.ApiStage
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.ApiStage.ApiStage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.ApiStage.ApiStage


module Amazonka.APIGateway.Types.Account

-- | Represents an AWS account that is associated with API Gateway.
--   
--   To view the account info, call <tt>GET</tt> on this resource.
--   
--   <h4>Error Codes</h4>
--   
--   The following exception may be thrown when the request fails.
--   
--   <ul>
--   <li>UnauthorizedException</li>
--   <li>NotFoundException</li>
--   <li>TooManyRequestsException</li>
--   </ul>
--   
--   For detailed error code information, including the corresponding HTTP
--   Status Codes, see <a>API Gateway Error Codes</a>
--   
--   <h4>Example: Get the information about an account.</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /account HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160531T184618Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/account-apigateway-{rel}.html", "name": "account", "templated": true }, "self": { "href": "/account" }, "account:update": { "href": "/account" } }, "cloudwatchRoleArn": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "throttleSettings": { "rateLimit": 500, "burstLimit": 1000 } }
--   </pre>
--   
--   In addition to making the REST API call directly, you can use the AWS
--   CLI and an AWS SDK to access this resource.
--   
--   <a>API Gateway Limits</a> <a>Developer Guide</a>, <a>AWS CLI</a>
--   
--   <i>See:</i> <a>newAccount</a> smart constructor.
data Account
Account' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe ThrottleSettings -> Account

-- | The version of the API keys used for the account.
[$sel:apiKeyVersion:Account'] :: Account -> Maybe Text

-- | The ARN of an Amazon CloudWatch role for the current Account.
[$sel:cloudwatchRoleArn:Account'] :: Account -> Maybe Text

-- | A list of features supported for the account. When usage plans are
--   enabled, the features list will include an entry of
--   <tt>"UsagePlans"</tt>.
[$sel:features:Account'] :: Account -> Maybe [Text]

-- | Specifies the API request limits configured for the current Account.
[$sel:throttleSettings:Account'] :: Account -> Maybe ThrottleSettings

-- | Create a value of <a>Account</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyVersion:Account'</a>, <a>account_apiKeyVersion</a> - The
--   version of the API keys used for the account.
--   
--   <a>$sel:cloudwatchRoleArn:Account'</a>,
--   <a>account_cloudwatchRoleArn</a> - The ARN of an Amazon CloudWatch
--   role for the current Account.
--   
--   <a>$sel:features:Account'</a>, <a>account_features</a> - A list of
--   features supported for the account. When usage plans are enabled, the
--   features list will include an entry of <tt>"UsagePlans"</tt>.
--   
--   <a>$sel:throttleSettings:Account'</a>, <a>account_throttleSettings</a>
--   - Specifies the API request limits configured for the current Account.
newAccount :: Account

-- | The version of the API keys used for the account.
account_apiKeyVersion :: Lens' Account (Maybe Text)

-- | The ARN of an Amazon CloudWatch role for the current Account.
account_cloudwatchRoleArn :: Lens' Account (Maybe Text)

-- | A list of features supported for the account. When usage plans are
--   enabled, the features list will include an entry of
--   <tt>"UsagePlans"</tt>.
account_features :: Lens' Account (Maybe [Text])

-- | Specifies the API request limits configured for the current Account.
account_throttleSettings :: Lens' Account (Maybe ThrottleSettings)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.Account.Account
instance GHC.Show.Show Amazonka.APIGateway.Types.Account.Account
instance GHC.Read.Read Amazonka.APIGateway.Types.Account.Account
instance GHC.Classes.Eq Amazonka.APIGateway.Types.Account.Account
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.Account.Account
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.Account.Account
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.Account.Account


module Amazonka.APIGateway.Types.TlsConfig

-- | <i>See:</i> <a>newTlsConfig</a> smart constructor.
data TlsConfig
TlsConfig' :: Maybe Bool -> TlsConfig

-- | Specifies whether or not API Gateway skips verification that the
--   certificate for an integration endpoint is issued by a <a>supported
--   certificate authority</a>. This isn’t recommended, but it enables you
--   to use certificates that are signed by private certificate
--   authorities, or certificates that are self-signed. If enabled, API
--   Gateway still performs basic certificate validation, which includes
--   checking the certificate's expiration date, hostname, and presence of
--   a root certificate authority. Supported only for <tt>HTTP</tt> and
--   <tt>HTTP_PROXY</tt> integrations.
[$sel:insecureSkipVerification:TlsConfig'] :: TlsConfig -> Maybe Bool

-- | Create a value of <a>TlsConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:insecureSkipVerification:TlsConfig'</a>,
--   <a>tlsConfig_insecureSkipVerification</a> - Specifies whether or not
--   API Gateway skips verification that the certificate for an integration
--   endpoint is issued by a <a>supported certificate authority</a>. This
--   isn’t recommended, but it enables you to use certificates that are
--   signed by private certificate authorities, or certificates that are
--   self-signed. If enabled, API Gateway still performs basic certificate
--   validation, which includes checking the certificate's expiration date,
--   hostname, and presence of a root certificate authority. Supported only
--   for <tt>HTTP</tt> and <tt>HTTP_PROXY</tt> integrations.
newTlsConfig :: TlsConfig

-- | Specifies whether or not API Gateway skips verification that the
--   certificate for an integration endpoint is issued by a <a>supported
--   certificate authority</a>. This isn’t recommended, but it enables you
--   to use certificates that are signed by private certificate
--   authorities, or certificates that are self-signed. If enabled, API
--   Gateway still performs basic certificate validation, which includes
--   checking the certificate's expiration date, hostname, and presence of
--   a root certificate authority. Supported only for <tt>HTTP</tt> and
--   <tt>HTTP_PROXY</tt> integrations.
tlsConfig_insecureSkipVerification :: Lens' TlsConfig (Maybe Bool)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.TlsConfig.TlsConfig
instance GHC.Show.Show Amazonka.APIGateway.Types.TlsConfig.TlsConfig
instance GHC.Read.Read Amazonka.APIGateway.Types.TlsConfig.TlsConfig
instance GHC.Classes.Eq Amazonka.APIGateway.Types.TlsConfig.TlsConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.TlsConfig.TlsConfig
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.TlsConfig.TlsConfig
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.TlsConfig.TlsConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.TlsConfig.TlsConfig


module Amazonka.APIGateway.Types.Integration

-- | Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.
--   
--   In the API Gateway console, the built-in Lambda integration is an AWS
--   integration.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegration</a> smart constructor.
data Integration
Integration' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe Text -> Maybe (HashMap Text IntegrationResponse) -> Maybe TlsConfig -> Maybe Text -> Maybe Int -> Maybe IntegrationType -> Maybe ConnectionType -> Maybe [Text] -> Integration

-- | Specifies the integration's HTTP method type.
[$sel:httpMethod:Integration'] :: Integration -> Maybe Text

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
[$sel:requestTemplates:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
[$sel:credentials:Integration'] :: Integration -> Maybe Text

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
[$sel:connectionId:Integration'] :: Integration -> Maybe Text

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
[$sel:requestParameters:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
[$sel:contentHandling:Integration'] :: Integration -> Maybe ContentHandlingStrategy

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
[$sel:passthroughBehavior:Integration'] :: Integration -> Maybe Text

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
[$sel:uri:Integration'] :: Integration -> Maybe Text

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
[$sel:integrationResponses:Integration'] :: Integration -> Maybe (HashMap Text IntegrationResponse)

-- | Specifies the TLS configuration for an integration.
[$sel:tlsConfig:Integration'] :: Integration -> Maybe TlsConfig

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
[$sel:cacheNamespace:Integration'] :: Integration -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
[$sel:timeoutInMillis:Integration'] :: Integration -> Maybe Int

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
[$sel:type':Integration'] :: Integration -> Maybe IntegrationType

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
[$sel:connectionType:Integration'] :: Integration -> Maybe ConnectionType

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
[$sel:cacheKeyParameters:Integration'] :: Integration -> Maybe [Text]

-- | Create a value of <a>Integration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:Integration'</a>, <a>integration_httpMethod</a> -
--   Specifies the integration's HTTP method type.
--   
--   <a>$sel:requestTemplates:Integration'</a>,
--   <a>integration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   
--   <a>$sel:credentials:Integration'</a>, <a>integration_credentials</a> -
--   Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
--   
--   <a>$sel:connectionId:Integration'</a>, <a>integration_connectionId</a>
--   - The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
--   
--   <a>$sel:requestParameters:Integration'</a>,
--   <a>integration_requestParameters</a> - A key-value map specifying
--   request parameters that are passed from the method request to the back
--   end. The key is an integration request parameter name and the
--   associated value is a method request parameter value or static value
--   that must be enclosed within single quotes and pre-encoded as required
--   by the back end. The method request parameter value must match the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> must be a valid and unique method
--   request parameter name.
--   
--   <a>$sel:contentHandling:Integration'</a>,
--   <a>integration_contentHandling</a> - Specifies how to handle request
--   payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
--   
--   <a>$sel:passthroughBehavior:Integration'</a>,
--   <a>integration_passthroughBehavior</a> - Specifies how the method
--   request body of an unmapped content type will be passed through the
--   integration request to the back end without transformation. A content
--   type is unmapped if no mapping template is defined in the integration
--   or the content type does not match any of the mapped content types, as
--   specified in <tt>requestTemplates</tt>. The valid value is one of the
--   following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
--   
--   <a>$sel:uri:Integration'</a>, <a>integration_uri</a> - Specifies
--   Uniform Resource Identifier (URI) of the integration endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
--   
--   <a>$sel:integrationResponses:Integration'</a>,
--   <a>integration_integrationResponses</a> - Specifies the integration's
--   responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
--   
--   <a>$sel:tlsConfig:Integration'</a>, <a>integration_tlsConfig</a> -
--   Specifies the TLS configuration for an integration.
--   
--   <a>$sel:cacheNamespace:Integration'</a>,
--   <a>integration_cacheNamespace</a> - Specifies a group of related
--   cached parameters. By default, API Gateway uses the resource ID as the
--   <tt>cacheNamespace</tt>. You can specify the same
--   <tt>cacheNamespace</tt> across resources to return the same cached
--   data for requests to different resources.
--   
--   <a>$sel:timeoutInMillis:Integration'</a>,
--   <a>integration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds. The default value is 29,000 milliseconds or 29
--   seconds.
--   
--   <a>$sel:type':Integration'</a>, <a>integration_type</a> - Specifies an
--   API method integration type. The valid value is one of the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
--   
--   <a>$sel:connectionType:Integration'</a>,
--   <a>integration_connectionType</a> - The type of the network connection
--   to the integration endpoint. The valid value is <tt>INTERNET</tt> for
--   connections through the public routable internet or <tt>VPC_LINK</tt>
--   for private connections between API Gateway and a network load
--   balancer in a VPC. The default value is <tt>INTERNET</tt>.
--   
--   <a>$sel:cacheKeyParameters:Integration'</a>,
--   <a>integration_cacheKeyParameters</a> - A list of request parameters
--   whose values API Gateway caches. To be valid values for
--   <tt>cacheKeyParameters</tt>, these parameters must also be specified
--   for Method <tt>requestParameters</tt>.
newIntegration :: Integration

-- | Specifies the integration's HTTP method type.
integration_httpMethod :: Lens' Integration (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
integration_requestTemplates :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
integration_credentials :: Lens' Integration (Maybe Text)

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
integration_connectionId :: Lens' Integration (Maybe Text)

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
integration_requestParameters :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
integration_contentHandling :: Lens' Integration (Maybe ContentHandlingStrategy)

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
integration_passthroughBehavior :: Lens' Integration (Maybe Text)

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
integration_uri :: Lens' Integration (Maybe Text)

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
integration_integrationResponses :: Lens' Integration (Maybe (HashMap Text IntegrationResponse))

-- | Specifies the TLS configuration for an integration.
integration_tlsConfig :: Lens' Integration (Maybe TlsConfig)

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
integration_cacheNamespace :: Lens' Integration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
integration_timeoutInMillis :: Lens' Integration (Maybe Int)

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
integration_type :: Lens' Integration (Maybe IntegrationType)

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
integration_connectionType :: Lens' Integration (Maybe ConnectionType)

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
integration_cacheKeyParameters :: Lens' Integration (Maybe [Text])
instance GHC.Generics.Generic Amazonka.APIGateway.Types.Integration.Integration
instance GHC.Show.Show Amazonka.APIGateway.Types.Integration.Integration
instance GHC.Read.Read Amazonka.APIGateway.Types.Integration.Integration
instance GHC.Classes.Eq Amazonka.APIGateway.Types.Integration.Integration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.Integration.Integration
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.Integration.Integration
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.Integration.Integration


module Amazonka.APIGateway.Types.Method

-- | Represents a client-facing interface by which the client calls the API
--   to access back-end resources. A <b>Method</b> resource is integrated
--   with an Integration resource. Both consist of a request and one or
--   more responses. The method request takes the client input that is
--   passed to the back end through the integration request. A method
--   response returns the output from the back end to the client through an
--   integration response. A method request is embodied in a <b>Method</b>
--   resource, whereas an integration request is embodied in an Integration
--   resource. On the other hand, a method response is represented by a
--   MethodResponse resource, whereas an integration response is
--   represented by an IntegrationResponse resource.
--   
--   <h4>Example: Retrive the GET method on a specified resource</h4>
--   
--   <h5>Request</h5>
--   
--   The following example request retrieves the information about the GET
--   method on an API resource (<tt>3kzxbg5sa2</tt>) of an API
--   (<tt>fugvjdxtri</tt>).
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T210259Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": true, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\")" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   In the example above, the response template for the <tt>200 OK</tt>
--   response maps the JSON output from the <tt>ListStreams</tt> action in
--   the back end to an XML output. The mapping template is URL-encoded as
--   <tt>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</tt>
--   and the output is decoded using the <a>$util.urlDecode()</a> helper
--   function.
--   
--   MethodResponse, Integration, IntegrationResponse, Resource, <a>Set up
--   an API's method</a>
--   
--   <i>See:</i> <a>newMethod</a> smart constructor.
data Method
Method' :: Maybe (HashMap Text MethodResponse) -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Integration -> Method

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
[$sel:methodResponses:Method'] :: Method -> Maybe (HashMap Text MethodResponse)

-- | The method's HTTP verb.
[$sel:httpMethod:Method'] :: Method -> Maybe Text

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
[$sel:authorizationScopes:Method'] :: Method -> Maybe [Text]

-- | The identifier of a RequestValidator for request validation.
[$sel:requestValidatorId:Method'] :: Method -> Maybe Text

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
[$sel:requestModels:Method'] :: Method -> Maybe (HashMap Text Text)

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
[$sel:requestParameters:Method'] :: Method -> Maybe (HashMap Text Bool)

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
[$sel:authorizerId:Method'] :: Method -> Maybe Text

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
[$sel:operationName:Method'] :: Method -> Maybe Text

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
[$sel:authorizationType:Method'] :: Method -> Maybe Text

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
[$sel:apiKeyRequired:Method'] :: Method -> Maybe Bool

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
[$sel:methodIntegration:Method'] :: Method -> Maybe Integration

-- | Create a value of <a>Method</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodResponses:Method'</a>, <a>method_methodResponses</a> -
--   Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
--   
--   <a>$sel:httpMethod:Method'</a>, <a>method_httpMethod</a> - The
--   method's HTTP verb.
--   
--   <a>$sel:authorizationScopes:Method'</a>,
--   <a>method_authorizationScopes</a> - A list of authorization scopes
--   configured on the method. The scopes are used with a
--   <tt>COGNITO_USER_POOLS</tt> authorizer to authorize the method
--   invocation. The authorization works by matching the method scopes
--   against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:requestValidatorId:Method'</a>,
--   <a>method_requestValidatorId</a> - The identifier of a
--   RequestValidator for request validation.
--   
--   <a>$sel:requestModels:Method'</a>, <a>method_requestModels</a> - A
--   key-value map specifying data schemas, represented by Model resources,
--   (as the mapped value) of the request payloads of given content types
--   (as the mapping key).
--   
--   <a>$sel:requestParameters:Method'</a>, <a>method_requestParameters</a>
--   - A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
--   
--   <a>$sel:authorizerId:Method'</a>, <a>method_authorizerId</a> - The
--   identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
--   
--   <a>$sel:operationName:Method'</a>, <a>method_operationName</a> - A
--   human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
--   
--   <a>$sel:authorizationType:Method'</a>, <a>method_authorizationType</a>
--   - The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
--   
--   <a>$sel:apiKeyRequired:Method'</a>, <a>method_apiKeyRequired</a> - A
--   boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
--   
--   <a>$sel:methodIntegration:Method'</a>, <a>method_methodIntegration</a>
--   - Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
newMethod :: Method

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodResponses :: Lens' Method (Maybe (HashMap Text MethodResponse))

-- | The method's HTTP verb.
method_httpMethod :: Lens' Method (Maybe Text)

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
method_authorizationScopes :: Lens' Method (Maybe [Text])

-- | The identifier of a RequestValidator for request validation.
method_requestValidatorId :: Lens' Method (Maybe Text)

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
method_requestModels :: Lens' Method (Maybe (HashMap Text Text))

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
method_requestParameters :: Lens' Method (Maybe (HashMap Text Bool))

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
method_authorizerId :: Lens' Method (Maybe Text)

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
method_operationName :: Lens' Method (Maybe Text)

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
method_authorizationType :: Lens' Method (Maybe Text)

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
method_apiKeyRequired :: Lens' Method (Maybe Bool)

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodIntegration :: Lens' Method (Maybe Integration)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.Method.Method
instance GHC.Show.Show Amazonka.APIGateway.Types.Method.Method
instance GHC.Read.Read Amazonka.APIGateway.Types.Method.Method
instance GHC.Classes.Eq Amazonka.APIGateway.Types.Method.Method
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.Method.Method
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.Method.Method
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.Method.Method


module Amazonka.APIGateway.Types.Resource

-- | Represents an API resource.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Method) -> Maybe Text -> Resource

-- | The last path segment for this resource.
[$sel:pathPart:Resource'] :: Resource -> Maybe Text

-- | The full path for this resource.
[$sel:path:Resource'] :: Resource -> Maybe Text

-- | The resource's identifier.
[$sel:id:Resource'] :: Resource -> Maybe Text

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
[$sel:resourceMethods:Resource'] :: Resource -> Maybe (HashMap Text Method)

-- | The parent resource's identifier.
[$sel:parentId:Resource'] :: Resource -> Maybe Text

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathPart:Resource'</a>, <a>resource_pathPart</a> - The last
--   path segment for this resource.
--   
--   <a>$sel:path:Resource'</a>, <a>resource_path</a> - The full path for
--   this resource.
--   
--   <a>$sel:id:Resource'</a>, <a>resource_id</a> - The resource's
--   identifier.
--   
--   <a>$sel:resourceMethods:Resource'</a>, <a>resource_resourceMethods</a>
--   - Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
--   
--   <a>$sel:parentId:Resource'</a>, <a>resource_parentId</a> - The parent
--   resource's identifier.
newResource :: Resource

-- | The last path segment for this resource.
resource_pathPart :: Lens' Resource (Maybe Text)

-- | The full path for this resource.
resource_path :: Lens' Resource (Maybe Text)

-- | The resource's identifier.
resource_id :: Lens' Resource (Maybe Text)

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
resource_resourceMethods :: Lens' Resource (Maybe (HashMap Text Method))

-- | The parent resource's identifier.
resource_parentId :: Lens' Resource (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.Resource.Resource
instance GHC.Show.Show Amazonka.APIGateway.Types.Resource.Resource
instance GHC.Read.Read Amazonka.APIGateway.Types.Resource.Resource
instance GHC.Classes.Eq Amazonka.APIGateway.Types.Resource.Resource
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.Resource.Resource
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.Resource.Resource
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.Resource.Resource


module Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy
newtype UnauthorizedCacheControlHeaderStrategy
UnauthorizedCacheControlHeaderStrategy' :: Text -> UnauthorizedCacheControlHeaderStrategy
[fromUnauthorizedCacheControlHeaderStrategy] :: UnauthorizedCacheControlHeaderStrategy -> Text
pattern UnauthorizedCacheControlHeaderStrategy_FAIL_WITH_403 :: UnauthorizedCacheControlHeaderStrategy
pattern UnauthorizedCacheControlHeaderStrategy_SUCCEED_WITHOUT_RESPONSE_HEADER :: UnauthorizedCacheControlHeaderStrategy
pattern UnauthorizedCacheControlHeaderStrategy_SUCCEED_WITH_RESPONSE_HEADER :: UnauthorizedCacheControlHeaderStrategy
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance GHC.Generics.Generic Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance GHC.Classes.Ord Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance GHC.Classes.Eq Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance GHC.Read.Read Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy
instance GHC.Show.Show Amazonka.APIGateway.Types.UnauthorizedCacheControlHeaderStrategy.UnauthorizedCacheControlHeaderStrategy


module Amazonka.APIGateway.Types.MethodSetting

-- | Specifies the method setting properties.
--   
--   <i>See:</i> <a>newMethodSetting</a> smart constructor.
data MethodSetting
MethodSetting' :: Maybe Int -> Maybe Bool -> Maybe Int -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Double -> Maybe UnauthorizedCacheControlHeaderStrategy -> MethodSetting

-- | Specifies the time to live (TTL), in seconds, for cached responses.
--   The higher the TTL, the longer the response will be cached. The PATCH
--   path for this setting is
--   <tt>/{method_setting_key}/caching/ttlInSeconds</tt>, and the value is
--   an integer.
[$sel:cacheTtlInSeconds:MethodSetting'] :: MethodSetting -> Maybe Int

-- | Specifies whether data trace logging is enabled for this method, which
--   affects the log entries pushed to Amazon CloudWatch Logs. The PATCH
--   path for this setting is
--   <tt>/{method_setting_key}/logging/dataTrace</tt>, and the value is a
--   Boolean.
[$sel:dataTraceEnabled:MethodSetting'] :: MethodSetting -> Maybe Bool

-- | Specifies the throttling burst limit. The PATCH path for this setting
--   is <tt>/{method_setting_key}/throttling/burstLimit</tt>, and the value
--   is an integer.
[$sel:throttlingBurstLimit:MethodSetting'] :: MethodSetting -> Maybe Int

-- | Specifies whether the cached responses are encrypted. The PATCH path
--   for this setting is
--   <tt>/{method_setting_key}/caching/dataEncrypted</tt>, and the value is
--   a Boolean.
[$sel:cacheDataEncrypted:MethodSetting'] :: MethodSetting -> Maybe Bool

-- | Specifies the logging level for this method, which affects the log
--   entries pushed to Amazon CloudWatch Logs. The PATCH path for this
--   setting is <tt>/{method_setting_key}/logging/loglevel</tt>, and the
--   available levels are <tt>OFF</tt>, <tt>ERROR</tt>, and <tt>INFO</tt>.
--   Choose <tt>ERROR</tt> to write only error-level entries to CloudWatch
--   Logs, or choose <tt>INFO</tt> to include all <tt>ERROR</tt> events as
--   well as extra informational events.
[$sel:loggingLevel:MethodSetting'] :: MethodSetting -> Maybe Text

-- | Specifies whether authorization is required for a cache invalidation
--   request. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/requireAuthorizationForCacheControl</tt>,
--   and the value is a Boolean.
[$sel:requireAuthorizationForCacheControl:MethodSetting'] :: MethodSetting -> Maybe Bool

-- | Specifies whether responses should be cached and returned for
--   requests. A cache cluster must be enabled on the stage for responses
--   to be cached. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/enabled</tt>, and the value is a
--   Boolean.
[$sel:cachingEnabled:MethodSetting'] :: MethodSetting -> Maybe Bool

-- | Specifies whether Amazon CloudWatch metrics are enabled for this
--   method. The PATCH path for this setting is
--   <tt>/{method_setting_key}/metrics/enabled</tt>, and the value is a
--   Boolean.
[$sel:metricsEnabled:MethodSetting'] :: MethodSetting -> Maybe Bool

-- | Specifies the throttling rate limit. The PATCH path for this setting
--   is <tt>/{method_setting_key}/throttling/rateLimit</tt>, and the value
--   is a double.
[$sel:throttlingRateLimit:MethodSetting'] :: MethodSetting -> Maybe Double

-- | Specifies how to handle unauthorized requests for cache invalidation.
--   The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/unauthorizedCacheControlHeaderStrategy</tt>,
--   and the available values are <tt>FAIL_WITH_403</tt>,
--   <tt>SUCCEED_WITH_RESPONSE_HEADER</tt>,
--   <tt>SUCCEED_WITHOUT_RESPONSE_HEADER</tt>.
[$sel:unauthorizedCacheControlHeaderStrategy:MethodSetting'] :: MethodSetting -> Maybe UnauthorizedCacheControlHeaderStrategy

-- | Create a value of <a>MethodSetting</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheTtlInSeconds:MethodSetting'</a>,
--   <a>methodSetting_cacheTtlInSeconds</a> - Specifies the time to live
--   (TTL), in seconds, for cached responses. The higher the TTL, the
--   longer the response will be cached. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/ttlInSeconds</tt>, and the value is
--   an integer.
--   
--   <a>$sel:dataTraceEnabled:MethodSetting'</a>,
--   <a>methodSetting_dataTraceEnabled</a> - Specifies whether data trace
--   logging is enabled for this method, which affects the log entries
--   pushed to Amazon CloudWatch Logs. The PATCH path for this setting is
--   <tt>/{method_setting_key}/logging/dataTrace</tt>, and the value is a
--   Boolean.
--   
--   <a>$sel:throttlingBurstLimit:MethodSetting'</a>,
--   <a>methodSetting_throttlingBurstLimit</a> - Specifies the throttling
--   burst limit. The PATCH path for this setting is
--   <tt>/{method_setting_key}/throttling/burstLimit</tt>, and the value is
--   an integer.
--   
--   <a>$sel:cacheDataEncrypted:MethodSetting'</a>,
--   <a>methodSetting_cacheDataEncrypted</a> - Specifies whether the cached
--   responses are encrypted. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/dataEncrypted</tt>, and the value is
--   a Boolean.
--   
--   <a>$sel:loggingLevel:MethodSetting'</a>,
--   <a>methodSetting_loggingLevel</a> - Specifies the logging level for
--   this method, which affects the log entries pushed to Amazon CloudWatch
--   Logs. The PATCH path for this setting is
--   <tt>/{method_setting_key}/logging/loglevel</tt>, and the available
--   levels are <tt>OFF</tt>, <tt>ERROR</tt>, and <tt>INFO</tt>. Choose
--   <tt>ERROR</tt> to write only error-level entries to CloudWatch Logs,
--   or choose <tt>INFO</tt> to include all <tt>ERROR</tt> events as well
--   as extra informational events.
--   
--   <a>$sel:requireAuthorizationForCacheControl:MethodSetting'</a>,
--   <a>methodSetting_requireAuthorizationForCacheControl</a> - Specifies
--   whether authorization is required for a cache invalidation request.
--   The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/requireAuthorizationForCacheControl</tt>,
--   and the value is a Boolean.
--   
--   <a>$sel:cachingEnabled:MethodSetting'</a>,
--   <a>methodSetting_cachingEnabled</a> - Specifies whether responses
--   should be cached and returned for requests. A cache cluster must be
--   enabled on the stage for responses to be cached. The PATCH path for
--   this setting is <tt>/{method_setting_key}/caching/enabled</tt>, and
--   the value is a Boolean.
--   
--   <a>$sel:metricsEnabled:MethodSetting'</a>,
--   <a>methodSetting_metricsEnabled</a> - Specifies whether Amazon
--   CloudWatch metrics are enabled for this method. The PATCH path for
--   this setting is <tt>/{method_setting_key}/metrics/enabled</tt>, and
--   the value is a Boolean.
--   
--   <a>$sel:throttlingRateLimit:MethodSetting'</a>,
--   <a>methodSetting_throttlingRateLimit</a> - Specifies the throttling
--   rate limit. The PATCH path for this setting is
--   <tt>/{method_setting_key}/throttling/rateLimit</tt>, and the value is
--   a double.
--   
--   <a>$sel:unauthorizedCacheControlHeaderStrategy:MethodSetting'</a>,
--   <a>methodSetting_unauthorizedCacheControlHeaderStrategy</a> -
--   Specifies how to handle unauthorized requests for cache invalidation.
--   The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/unauthorizedCacheControlHeaderStrategy</tt>,
--   and the available values are <tt>FAIL_WITH_403</tt>,
--   <tt>SUCCEED_WITH_RESPONSE_HEADER</tt>,
--   <tt>SUCCEED_WITHOUT_RESPONSE_HEADER</tt>.
newMethodSetting :: MethodSetting

-- | Specifies the time to live (TTL), in seconds, for cached responses.
--   The higher the TTL, the longer the response will be cached. The PATCH
--   path for this setting is
--   <tt>/{method_setting_key}/caching/ttlInSeconds</tt>, and the value is
--   an integer.
methodSetting_cacheTtlInSeconds :: Lens' MethodSetting (Maybe Int)

-- | Specifies whether data trace logging is enabled for this method, which
--   affects the log entries pushed to Amazon CloudWatch Logs. The PATCH
--   path for this setting is
--   <tt>/{method_setting_key}/logging/dataTrace</tt>, and the value is a
--   Boolean.
methodSetting_dataTraceEnabled :: Lens' MethodSetting (Maybe Bool)

-- | Specifies the throttling burst limit. The PATCH path for this setting
--   is <tt>/{method_setting_key}/throttling/burstLimit</tt>, and the value
--   is an integer.
methodSetting_throttlingBurstLimit :: Lens' MethodSetting (Maybe Int)

-- | Specifies whether the cached responses are encrypted. The PATCH path
--   for this setting is
--   <tt>/{method_setting_key}/caching/dataEncrypted</tt>, and the value is
--   a Boolean.
methodSetting_cacheDataEncrypted :: Lens' MethodSetting (Maybe Bool)

-- | Specifies the logging level for this method, which affects the log
--   entries pushed to Amazon CloudWatch Logs. The PATCH path for this
--   setting is <tt>/{method_setting_key}/logging/loglevel</tt>, and the
--   available levels are <tt>OFF</tt>, <tt>ERROR</tt>, and <tt>INFO</tt>.
--   Choose <tt>ERROR</tt> to write only error-level entries to CloudWatch
--   Logs, or choose <tt>INFO</tt> to include all <tt>ERROR</tt> events as
--   well as extra informational events.
methodSetting_loggingLevel :: Lens' MethodSetting (Maybe Text)

-- | Specifies whether authorization is required for a cache invalidation
--   request. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/requireAuthorizationForCacheControl</tt>,
--   and the value is a Boolean.
methodSetting_requireAuthorizationForCacheControl :: Lens' MethodSetting (Maybe Bool)

-- | Specifies whether responses should be cached and returned for
--   requests. A cache cluster must be enabled on the stage for responses
--   to be cached. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/enabled</tt>, and the value is a
--   Boolean.
methodSetting_cachingEnabled :: Lens' MethodSetting (Maybe Bool)

-- | Specifies whether Amazon CloudWatch metrics are enabled for this
--   method. The PATCH path for this setting is
--   <tt>/{method_setting_key}/metrics/enabled</tt>, and the value is a
--   Boolean.
methodSetting_metricsEnabled :: Lens' MethodSetting (Maybe Bool)

-- | Specifies the throttling rate limit. The PATCH path for this setting
--   is <tt>/{method_setting_key}/throttling/rateLimit</tt>, and the value
--   is a double.
methodSetting_throttlingRateLimit :: Lens' MethodSetting (Maybe Double)

-- | Specifies how to handle unauthorized requests for cache invalidation.
--   The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/unauthorizedCacheControlHeaderStrategy</tt>,
--   and the available values are <tt>FAIL_WITH_403</tt>,
--   <tt>SUCCEED_WITH_RESPONSE_HEADER</tt>,
--   <tt>SUCCEED_WITHOUT_RESPONSE_HEADER</tt>.
methodSetting_unauthorizedCacheControlHeaderStrategy :: Lens' MethodSetting (Maybe UnauthorizedCacheControlHeaderStrategy)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.MethodSetting.MethodSetting
instance GHC.Show.Show Amazonka.APIGateway.Types.MethodSetting.MethodSetting
instance GHC.Read.Read Amazonka.APIGateway.Types.MethodSetting.MethodSetting
instance GHC.Classes.Eq Amazonka.APIGateway.Types.MethodSetting.MethodSetting
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.MethodSetting.MethodSetting
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.MethodSetting.MethodSetting
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.MethodSetting.MethodSetting


module Amazonka.APIGateway.Types.Stage

-- | Represents a unique identifier for a version of a deployed RestApi
--   that is callable by users.
--   
--   <a>Deploy an API</a>
--   
--   <i>See:</i> <a>newStage</a> smart constructor.
data Stage
Stage' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe AccessLogSettings -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe CacheClusterStatus -> Maybe (HashMap Text MethodSetting) -> Maybe POSIX -> Maybe CacheClusterSize -> Maybe Text -> Maybe CanarySettings -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Stage

-- | The identifier of the Deployment that the stage points to.
[$sel:deploymentId:Stage'] :: Stage -> Maybe Text

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
[$sel:variables:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | Settings for logging access in this stage.
[$sel:accessLogSettings:Stage'] :: Stage -> Maybe AccessLogSettings

-- | The version of the associated API documentation.
[$sel:documentationVersion:Stage'] :: Stage -> Maybe Text

-- | The identifier of a client certificate for an API stage.
[$sel:clientCertificateId:Stage'] :: Stage -> Maybe Text

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
[$sel:tracingEnabled:Stage'] :: Stage -> Maybe Bool

-- | The timestamp when the stage was created.
[$sel:createdDate:Stage'] :: Stage -> Maybe POSIX

-- | The status of the cache cluster for the stage, if enabled.
[$sel:cacheClusterStatus:Stage'] :: Stage -> Maybe CacheClusterStatus

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
[$sel:methodSettings:Stage'] :: Stage -> Maybe (HashMap Text MethodSetting)

-- | The timestamp when the stage last updated.
[$sel:lastUpdatedDate:Stage'] :: Stage -> Maybe POSIX

-- | The size of the cache cluster for the stage, if enabled.
[$sel:cacheClusterSize:Stage'] :: Stage -> Maybe CacheClusterSize

-- | The ARN of the WebAcl associated with the Stage.
[$sel:webAclArn:Stage'] :: Stage -> Maybe Text

-- | Settings for the canary deployment in this stage.
[$sel:canarySettings:Stage'] :: Stage -> Maybe CanarySettings

-- | Specifies whether a cache cluster is enabled for the stage.
[$sel:cacheClusterEnabled:Stage'] :: Stage -> Maybe Bool

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
[$sel:stageName:Stage'] :: Stage -> Maybe Text

-- | The stage's description.
[$sel:description:Stage'] :: Stage -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | Create a value of <a>Stage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Stage'</a>, <a>stage_deploymentId</a> - The
--   identifier of the Deployment that the stage points to.
--   
--   <a>$sel:variables:Stage'</a>, <a>stage_variables</a> - A map that
--   defines the stage variables for a Stage resource. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:accessLogSettings:Stage'</a>, <a>stage_accessLogSettings</a> -
--   Settings for logging access in this stage.
--   
--   <a>$sel:documentationVersion:Stage'</a>,
--   <a>stage_documentationVersion</a> - The version of the associated API
--   documentation.
--   
--   <a>$sel:clientCertificateId:Stage'</a>,
--   <a>stage_clientCertificateId</a> - The identifier of a client
--   certificate for an API stage.
--   
--   <a>$sel:tracingEnabled:Stage'</a>, <a>stage_tracingEnabled</a> -
--   Specifies whether active tracing with X-ray is enabled for the Stage.
--   
--   <a>$sel:createdDate:Stage'</a>, <a>stage_createdDate</a> - The
--   timestamp when the stage was created.
--   
--   <a>$sel:cacheClusterStatus:Stage'</a>, <a>stage_cacheClusterStatus</a>
--   - The status of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:methodSettings:Stage'</a>, <a>stage_methodSettings</a> - A map
--   that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
--   
--   <a>$sel:lastUpdatedDate:Stage'</a>, <a>stage_lastUpdatedDate</a> - The
--   timestamp when the stage last updated.
--   
--   <a>$sel:cacheClusterSize:Stage'</a>, <a>stage_cacheClusterSize</a> -
--   The size of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:webAclArn:Stage'</a>, <a>stage_webAclArn</a> - The ARN of the
--   WebAcl associated with the Stage.
--   
--   <a>$sel:canarySettings:Stage'</a>, <a>stage_canarySettings</a> -
--   Settings for the canary deployment in this stage.
--   
--   <a>$sel:cacheClusterEnabled:Stage'</a>,
--   <a>stage_cacheClusterEnabled</a> - Specifies whether a cache cluster
--   is enabled for the stage.
--   
--   <a>$sel:stageName:Stage'</a>, <a>stage_stageName</a> - The name of the
--   stage is the first path segment in the Uniform Resource Identifier
--   (URI) of a call to API Gateway. Stage names can only contain
--   alphanumeric characters, hyphens, and underscores. Maximum length is
--   128 characters.
--   
--   <a>$sel:description:Stage'</a>, <a>stage_description</a> - The stage's
--   description.
--   
--   <a>$sel:tags:Stage'</a>, <a>stage_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newStage :: Stage

-- | The identifier of the Deployment that the stage points to.
stage_deploymentId :: Lens' Stage (Maybe Text)

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
stage_variables :: Lens' Stage (Maybe (HashMap Text Text))

-- | Settings for logging access in this stage.
stage_accessLogSettings :: Lens' Stage (Maybe AccessLogSettings)

-- | The version of the associated API documentation.
stage_documentationVersion :: Lens' Stage (Maybe Text)

-- | The identifier of a client certificate for an API stage.
stage_clientCertificateId :: Lens' Stage (Maybe Text)

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
stage_tracingEnabled :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was created.
stage_createdDate :: Lens' Stage (Maybe UTCTime)

-- | The status of the cache cluster for the stage, if enabled.
stage_cacheClusterStatus :: Lens' Stage (Maybe CacheClusterStatus)

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
stage_methodSettings :: Lens' Stage (Maybe (HashMap Text MethodSetting))

-- | The timestamp when the stage last updated.
stage_lastUpdatedDate :: Lens' Stage (Maybe UTCTime)

-- | The size of the cache cluster for the stage, if enabled.
stage_cacheClusterSize :: Lens' Stage (Maybe CacheClusterSize)

-- | The ARN of the WebAcl associated with the Stage.
stage_webAclArn :: Lens' Stage (Maybe Text)

-- | Settings for the canary deployment in this stage.
stage_canarySettings :: Lens' Stage (Maybe CanarySettings)

-- | Specifies whether a cache cluster is enabled for the stage.
stage_cacheClusterEnabled :: Lens' Stage (Maybe Bool)

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
stage_stageName :: Lens' Stage (Maybe Text)

-- | The stage's description.
stage_description :: Lens' Stage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
stage_tags :: Lens' Stage (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.Types.Stage.Stage
instance GHC.Show.Show Amazonka.APIGateway.Types.Stage.Stage
instance GHC.Read.Read Amazonka.APIGateway.Types.Stage.Stage
instance GHC.Classes.Eq Amazonka.APIGateway.Types.Stage.Stage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.Stage.Stage
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.Stage.Stage
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.Stage.Stage


module Amazonka.APIGateway.Types.Usage

-- | Represents the usage data of a usage plan.
--   
--   <a>Create and Use Usage Plans</a>, <a>Manage Usage in a Usage Plan</a>
--   
--   <i>See:</i> <a>newUsage</a> smart constructor.
data Usage
Usage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text [[Integer]]) -> Maybe Text -> Maybe Text -> Usage

-- | The plan Id associated with this usage data.
[$sel:usagePlanId:Usage'] :: Usage -> Maybe Text

-- | The ending date of the usage data.
[$sel:endDate:Usage'] :: Usage -> Maybe Text

-- | The usage data, as daily logs of used and remaining quotas, over the
--   specified time interval indexed over the API keys in a usage plan. For
--   example, <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
--   [100, 10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value
--   and the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
[$sel:items:Usage'] :: Usage -> Maybe (HashMap Text [[Integer]])

-- | The starting date of the usage data.
[$sel:startDate:Usage'] :: Usage -> Maybe Text
[$sel:position:Usage'] :: Usage -> Maybe Text

-- | Create a value of <a>Usage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:Usage'</a>, <a>usage_usagePlanId</a> - The plan Id
--   associated with this usage data.
--   
--   <a>$sel:endDate:Usage'</a>, <a>usage_endDate</a> - The ending date of
--   the usage data.
--   
--   <a>$sel:items:Usage'</a>, <a>usage_items</a> - The usage data, as
--   daily logs of used and remaining quotas, over the specified time
--   interval indexed over the API keys in a usage plan. For example,
--   <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90], [100,
--   10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value and
--   the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
--   
--   <a>$sel:startDate:Usage'</a>, <a>usage_startDate</a> - The starting
--   date of the usage data.
--   
--   <a>$sel:position:Usage'</a>, <a>usage_position</a> - Undocumented
--   member.
newUsage :: Usage

-- | The plan Id associated with this usage data.
usage_usagePlanId :: Lens' Usage (Maybe Text)

-- | The ending date of the usage data.
usage_endDate :: Lens' Usage (Maybe Text)

-- | The usage data, as daily logs of used and remaining quotas, over the
--   specified time interval indexed over the API keys in a usage plan. For
--   example, <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
--   [100, 10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value
--   and the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
usage_items :: Lens' Usage (Maybe (HashMap Text [[Integer]]))

-- | The starting date of the usage data.
usage_startDate :: Lens' Usage (Maybe Text)

-- | Undocumented member.
usage_position :: Lens' Usage (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.Usage.Usage
instance GHC.Show.Show Amazonka.APIGateway.Types.Usage.Usage
instance GHC.Read.Read Amazonka.APIGateway.Types.Usage.Usage
instance GHC.Classes.Eq Amazonka.APIGateway.Types.Usage.Usage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.Usage.Usage
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.Usage.Usage
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.Usage.Usage


module Amazonka.APIGateway.Types.UsagePlan

-- | Represents a usage plan than can specify who can assess associated API
--   stages with specified request limits and quotas.
--   
--   In a usage plan, you associate an API by specifying the API's Id and a
--   stage name of the specified API. You add plan customers by adding API
--   keys to the plan.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlan</a> smart constructor.
data UsagePlan
UsagePlan' :: Maybe [ApiStage] -> Maybe Text -> Maybe Text -> Maybe ThrottleSettings -> Maybe QuotaSettings -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> UsagePlan

-- | The associated API stages of a usage plan.
[$sel:apiStages:UsagePlan'] :: UsagePlan -> Maybe [ApiStage]

-- | The name of a usage plan.
[$sel:name:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The identifier of a UsagePlan resource.
[$sel:id:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The request throttle limits of a usage plan.
[$sel:throttle:UsagePlan'] :: UsagePlan -> Maybe ThrottleSettings

-- | The maximum number of permitted requests per a given unit time
--   interval.
[$sel:quota:UsagePlan'] :: UsagePlan -> Maybe QuotaSettings

-- | The description of a usage plan.
[$sel:description:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
[$sel:productCode:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:UsagePlan'] :: UsagePlan -> Maybe (HashMap Text Text)

-- | Create a value of <a>UsagePlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiStages:UsagePlan'</a>, <a>usagePlan_apiStages</a> - The
--   associated API stages of a usage plan.
--   
--   <a>$sel:name:UsagePlan'</a>, <a>usagePlan_name</a> - The name of a
--   usage plan.
--   
--   <a>$sel:id:UsagePlan'</a>, <a>usagePlan_id</a> - The identifier of a
--   UsagePlan resource.
--   
--   <a>$sel:throttle:UsagePlan'</a>, <a>usagePlan_throttle</a> - The
--   request throttle limits of a usage plan.
--   
--   <a>$sel:quota:UsagePlan'</a>, <a>usagePlan_quota</a> - The maximum
--   number of permitted requests per a given unit time interval.
--   
--   <a>$sel:description:UsagePlan'</a>, <a>usagePlan_description</a> - The
--   description of a usage plan.
--   
--   <a>$sel:productCode:UsagePlan'</a>, <a>usagePlan_productCode</a> - The
--   AWS Markeplace product identifier to associate with the usage plan as
--   a SaaS product on AWS Marketplace.
--   
--   <a>$sel:tags:UsagePlan'</a>, <a>usagePlan_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newUsagePlan :: UsagePlan

-- | The associated API stages of a usage plan.
usagePlan_apiStages :: Lens' UsagePlan (Maybe [ApiStage])

-- | The name of a usage plan.
usagePlan_name :: Lens' UsagePlan (Maybe Text)

-- | The identifier of a UsagePlan resource.
usagePlan_id :: Lens' UsagePlan (Maybe Text)

-- | The request throttle limits of a usage plan.
usagePlan_throttle :: Lens' UsagePlan (Maybe ThrottleSettings)

-- | The maximum number of permitted requests per a given unit time
--   interval.
usagePlan_quota :: Lens' UsagePlan (Maybe QuotaSettings)

-- | The description of a usage plan.
usagePlan_description :: Lens' UsagePlan (Maybe Text)

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
usagePlan_productCode :: Lens' UsagePlan (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
usagePlan_tags :: Lens' UsagePlan (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.Types.UsagePlan.UsagePlan
instance GHC.Show.Show Amazonka.APIGateway.Types.UsagePlan.UsagePlan
instance GHC.Read.Read Amazonka.APIGateway.Types.UsagePlan.UsagePlan
instance GHC.Classes.Eq Amazonka.APIGateway.Types.UsagePlan.UsagePlan
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.UsagePlan.UsagePlan
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.UsagePlan.UsagePlan
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.UsagePlan.UsagePlan


module Amazonka.APIGateway.Types.UsagePlanKey

-- | Represents a usage plan key to identify a plan customer.
--   
--   To associate an API stage with a selected API key in a usage plan, you
--   must create a UsagePlanKey resource to represent the selected ApiKey.
--   
--   "
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlanKey</a> smart constructor.
data UsagePlanKey
UsagePlanKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UsagePlanKey

-- | The value of a usage plan key.
[$sel:value:UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | The name of a usage plan key.
[$sel:name:UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | The Id of a usage plan key.
[$sel:id:UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | The type of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
[$sel:type':UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | Create a value of <a>UsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:UsagePlanKey'</a>, <a>usagePlanKey_value</a> - The value
--   of a usage plan key.
--   
--   <a>$sel:name:UsagePlanKey'</a>, <a>usagePlanKey_name</a> - The name of
--   a usage plan key.
--   
--   <a>$sel:id:UsagePlanKey'</a>, <a>usagePlanKey_id</a> - The Id of a
--   usage plan key.
--   
--   <a>$sel:type':UsagePlanKey'</a>, <a>usagePlanKey_type</a> - The type
--   of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
newUsagePlanKey :: UsagePlanKey

-- | The value of a usage plan key.
usagePlanKey_value :: Lens' UsagePlanKey (Maybe Text)

-- | The name of a usage plan key.
usagePlanKey_name :: Lens' UsagePlanKey (Maybe Text)

-- | The Id of a usage plan key.
usagePlanKey_id :: Lens' UsagePlanKey (Maybe Text)

-- | The type of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
usagePlanKey_type :: Lens' UsagePlanKey (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.Types.UsagePlanKey.UsagePlanKey
instance GHC.Show.Show Amazonka.APIGateway.Types.UsagePlanKey.UsagePlanKey
instance GHC.Read.Read Amazonka.APIGateway.Types.UsagePlanKey.UsagePlanKey
instance GHC.Classes.Eq Amazonka.APIGateway.Types.UsagePlanKey.UsagePlanKey
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.UsagePlanKey.UsagePlanKey
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.UsagePlanKey.UsagePlanKey
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.UsagePlanKey.UsagePlanKey


module Amazonka.APIGateway.Types.VpcLinkStatus
newtype VpcLinkStatus
VpcLinkStatus' :: Text -> VpcLinkStatus
[fromVpcLinkStatus] :: VpcLinkStatus -> Text
pattern VpcLinkStatus_AVAILABLE :: VpcLinkStatus
pattern VpcLinkStatus_DELETING :: VpcLinkStatus
pattern VpcLinkStatus_FAILED :: VpcLinkStatus
pattern VpcLinkStatus_PENDING :: VpcLinkStatus
instance Amazonka.Data.XML.ToXML Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Amazonka.Data.XML.FromXML Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Amazonka.Data.Log.ToLog Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Amazonka.Data.Text.ToText Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Amazonka.Data.Text.FromText Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance GHC.Generics.Generic Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance GHC.Classes.Ord Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance GHC.Classes.Eq Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance GHC.Read.Read Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus
instance GHC.Show.Show Amazonka.APIGateway.Types.VpcLinkStatus.VpcLinkStatus


module Amazonka.APIGateway.Types.VpcLink

-- | An API Gateway VPC link for a RestApi to access resources in an Amazon
--   Virtual Private Cloud (VPC).
--   
--   To enable access to a resource in an Amazon Virtual Private Cloud
--   through Amazon API Gateway, you, as an API developer, create a VpcLink
--   resource targeted for one or more network load balancers of the VPC
--   and then integrate an API method with a private integration that uses
--   the VpcLink. The private integration has an integration type of
--   <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> and has a connection type of
--   <tt>VPC_LINK</tt>. The integration uses the <tt>connectionId</tt>
--   property to identify the VpcLink used.
--   
--   <i>See:</i> <a>newVpcLink</a> smart constructor.
data VpcLink
VpcLink' :: Maybe VpcLinkStatus -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> VpcLink

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
[$sel:status:VpcLink'] :: VpcLink -> Maybe VpcLinkStatus

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
[$sel:targetArns:VpcLink'] :: VpcLink -> Maybe [Text]

-- | The name used to label and identify the VPC link.
[$sel:name:VpcLink'] :: VpcLink -> Maybe Text

-- | A description about the VPC link status.
[$sel:statusMessage:VpcLink'] :: VpcLink -> Maybe Text

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
[$sel:id:VpcLink'] :: VpcLink -> Maybe Text

-- | The description of the VPC link.
[$sel:description:VpcLink'] :: VpcLink -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:VpcLink'] :: VpcLink -> Maybe (HashMap Text Text)

-- | Create a value of <a>VpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VpcLink'</a>, <a>vpcLink_status</a> - The status of the
--   VPC link. The valid values are <tt>AVAILABLE</tt>, <tt>PENDING</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an API will wait if
--   the status is <tt>PENDING</tt> and will fail if the status is
--   <tt>DELETING</tt>.
--   
--   <a>$sel:targetArns:VpcLink'</a>, <a>vpcLink_targetArns</a> - The ARN
--   of the network load balancer of the VPC targeted by the VPC link. The
--   network load balancer must be owned by the same AWS account of the API
--   owner.
--   
--   <a>$sel:name:VpcLink'</a>, <a>vpcLink_name</a> - The name used to
--   label and identify the VPC link.
--   
--   <a>$sel:statusMessage:VpcLink'</a>, <a>vpcLink_statusMessage</a> - A
--   description about the VPC link status.
--   
--   <a>$sel:id:VpcLink'</a>, <a>vpcLink_id</a> - The identifier of the
--   VpcLink. It is used in an Integration to reference this VpcLink.
--   
--   <a>$sel:description:VpcLink'</a>, <a>vpcLink_description</a> - The
--   description of the VPC link.
--   
--   <a>$sel:tags:VpcLink'</a>, <a>vpcLink_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newVpcLink :: VpcLink

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
vpcLink_status :: Lens' VpcLink (Maybe VpcLinkStatus)

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
vpcLink_targetArns :: Lens' VpcLink (Maybe [Text])

-- | The name used to label and identify the VPC link.
vpcLink_name :: Lens' VpcLink (Maybe Text)

-- | A description about the VPC link status.
vpcLink_statusMessage :: Lens' VpcLink (Maybe Text)

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
vpcLink_id :: Lens' VpcLink (Maybe Text)

-- | The description of the VPC link.
vpcLink_description :: Lens' VpcLink (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
vpcLink_tags :: Lens' VpcLink (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.Types.VpcLink.VpcLink
instance GHC.Show.Show Amazonka.APIGateway.Types.VpcLink.VpcLink
instance GHC.Read.Read Amazonka.APIGateway.Types.VpcLink.VpcLink
instance GHC.Classes.Eq Amazonka.APIGateway.Types.VpcLink.VpcLink
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.APIGateway.Types.VpcLink.VpcLink
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.Types.VpcLink.VpcLink
instance Control.DeepSeq.NFData Amazonka.APIGateway.Types.VpcLink.VpcLink


module Amazonka.APIGateway.Types

-- | API version <tt>2015-07-09</tt> of the Amazon API Gateway SDK
--   configuration.
defaultService :: Service

-- | The request configuration has conflicts. For details, see the
--   accompanying error message.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource is not found. Make sure that the request URI is
--   correct.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has reached its throttling limit. Retry after the
--   specified time period.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested service is not available. For details see the
--   accompanying error message. Retry after the specified time period.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request is denied because the caller has insufficient permissions.
_UnauthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The submitted request is not valid, for example, the input is
--   incomplete or incorrect. See the accompanying error message for
--   details.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request exceeded the rate limit. Retry after the specified time
--   period.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ApiKeySourceType
ApiKeySourceType' :: Text -> ApiKeySourceType
[fromApiKeySourceType] :: ApiKeySourceType -> Text
pattern ApiKeySourceType_AUTHORIZER :: ApiKeySourceType
pattern ApiKeySourceType_HEADER :: ApiKeySourceType
newtype ApiKeysFormat
ApiKeysFormat' :: Text -> ApiKeysFormat
[fromApiKeysFormat] :: ApiKeysFormat -> Text
pattern ApiKeysFormat_Csv :: ApiKeysFormat

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
newtype AuthorizerType
AuthorizerType' :: Text -> AuthorizerType
[fromAuthorizerType] :: AuthorizerType -> Text
pattern AuthorizerType_COGNITO_USER_POOLS :: AuthorizerType
pattern AuthorizerType_REQUEST :: AuthorizerType
pattern AuthorizerType_TOKEN :: AuthorizerType

-- | Returns the size of the <b>CacheCluster</b>.
newtype CacheClusterSize
CacheClusterSize' :: Text -> CacheClusterSize
[fromCacheClusterSize] :: CacheClusterSize -> Text
pattern CacheClusterSize_ :: CacheClusterSize

-- | Returns the status of the <b>CacheCluster</b>.
newtype CacheClusterStatus
CacheClusterStatus' :: Text -> CacheClusterStatus
[fromCacheClusterStatus] :: CacheClusterStatus -> Text
pattern CacheClusterStatus_AVAILABLE :: CacheClusterStatus
pattern CacheClusterStatus_CREATE_IN_PROGRESS :: CacheClusterStatus
pattern CacheClusterStatus_DELETE_IN_PROGRESS :: CacheClusterStatus
pattern CacheClusterStatus_FLUSH_IN_PROGRESS :: CacheClusterStatus
pattern CacheClusterStatus_NOT_AVAILABLE :: CacheClusterStatus
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_INTERNET :: ConnectionType
pattern ConnectionType_VPC_LINK :: ConnectionType
newtype ContentHandlingStrategy
ContentHandlingStrategy' :: Text -> ContentHandlingStrategy
[fromContentHandlingStrategy] :: ContentHandlingStrategy -> Text
pattern ContentHandlingStrategy_CONVERT_TO_BINARY :: ContentHandlingStrategy
pattern ContentHandlingStrategy_CONVERT_TO_TEXT :: ContentHandlingStrategy
newtype DocumentationPartType
DocumentationPartType' :: Text -> DocumentationPartType
[fromDocumentationPartType] :: DocumentationPartType -> Text
pattern DocumentationPartType_API :: DocumentationPartType
pattern DocumentationPartType_AUTHORIZER :: DocumentationPartType
pattern DocumentationPartType_METHOD :: DocumentationPartType
pattern DocumentationPartType_MODEL :: DocumentationPartType
pattern DocumentationPartType_PATH_PARAMETER :: DocumentationPartType
pattern DocumentationPartType_QUERY_PARAMETER :: DocumentationPartType
pattern DocumentationPartType_REQUEST_BODY :: DocumentationPartType
pattern DocumentationPartType_REQUEST_HEADER :: DocumentationPartType
pattern DocumentationPartType_RESOURCE :: DocumentationPartType
pattern DocumentationPartType_RESPONSE :: DocumentationPartType
pattern DocumentationPartType_RESPONSE_BODY :: DocumentationPartType
pattern DocumentationPartType_RESPONSE_HEADER :: DocumentationPartType
newtype DomainNameStatus
DomainNameStatus' :: Text -> DomainNameStatus
[fromDomainNameStatus] :: DomainNameStatus -> Text
pattern DomainNameStatus_AVAILABLE :: DomainNameStatus
pattern DomainNameStatus_PENDING :: DomainNameStatus
pattern DomainNameStatus_PENDING_CERTIFICATE_REIMPORT :: DomainNameStatus
pattern DomainNameStatus_PENDING_OWNERSHIP_VERIFICATION :: DomainNameStatus
pattern DomainNameStatus_UPDATING :: DomainNameStatus

-- | The endpoint type. The valid values are <tt>EDGE</tt> for
--   edge-optimized API setup, most suitable for mobile applications;
--   <tt>REGIONAL</tt> for regional API endpoint setup, most suitable for
--   calling from AWS Region; and <tt>PRIVATE</tt> for private APIs.
newtype EndpointType
EndpointType' :: Text -> EndpointType
[fromEndpointType] :: EndpointType -> Text
pattern EndpointType_EDGE :: EndpointType
pattern EndpointType_PRIVATE :: EndpointType
pattern EndpointType_REGIONAL :: EndpointType
newtype GatewayResponseType
GatewayResponseType' :: Text -> GatewayResponseType
[fromGatewayResponseType] :: GatewayResponseType -> Text
pattern GatewayResponseType_ACCESS_DENIED :: GatewayResponseType
pattern GatewayResponseType_API_CONFIGURATION_ERROR :: GatewayResponseType
pattern GatewayResponseType_AUTHORIZER_CONFIGURATION_ERROR :: GatewayResponseType
pattern GatewayResponseType_AUTHORIZER_FAILURE :: GatewayResponseType
pattern GatewayResponseType_BAD_REQUEST_BODY :: GatewayResponseType
pattern GatewayResponseType_BAD_REQUEST_PARAMETERS :: GatewayResponseType
pattern GatewayResponseType_DEFAULT_4XX :: GatewayResponseType
pattern GatewayResponseType_DEFAULT_5XX :: GatewayResponseType
pattern GatewayResponseType_EXPIRED_TOKEN :: GatewayResponseType
pattern GatewayResponseType_INTEGRATION_FAILURE :: GatewayResponseType
pattern GatewayResponseType_INTEGRATION_TIMEOUT :: GatewayResponseType
pattern GatewayResponseType_INVALID_API_KEY :: GatewayResponseType
pattern GatewayResponseType_INVALID_SIGNATURE :: GatewayResponseType
pattern GatewayResponseType_MISSING_AUTHENTICATION_TOKEN :: GatewayResponseType
pattern GatewayResponseType_QUOTA_EXCEEDED :: GatewayResponseType
pattern GatewayResponseType_REQUEST_TOO_LARGE :: GatewayResponseType
pattern GatewayResponseType_RESOURCE_NOT_FOUND :: GatewayResponseType
pattern GatewayResponseType_THROTTLED :: GatewayResponseType
pattern GatewayResponseType_UNAUTHORIZED :: GatewayResponseType
pattern GatewayResponseType_UNSUPPORTED_MEDIA_TYPE :: GatewayResponseType
pattern GatewayResponseType_WAF_FILTERED :: GatewayResponseType

-- | The integration type. The valid value is <tt>HTTP</tt> for integrating
--   an API method with an HTTP backend; <tt>AWS</tt> with any AWS service
--   endpoints; <tt>MOCK</tt> for testing without actually invoking the
--   backend; <tt>HTTP_PROXY</tt> for integrating with the HTTP proxy
--   integration; <tt>AWS_PROXY</tt> for integrating with the Lambda proxy
--   integration.
newtype IntegrationType
IntegrationType' :: Text -> IntegrationType
[fromIntegrationType] :: IntegrationType -> Text
pattern IntegrationType_AWS :: IntegrationType
pattern IntegrationType_AWS_PROXY :: IntegrationType
pattern IntegrationType_HTTP :: IntegrationType
pattern IntegrationType_HTTP_PROXY :: IntegrationType
pattern IntegrationType_MOCK :: IntegrationType
newtype LocationStatusType
LocationStatusType' :: Text -> LocationStatusType
[fromLocationStatusType] :: LocationStatusType -> Text
pattern LocationStatusType_DOCUMENTED :: LocationStatusType
pattern LocationStatusType_UNDOCUMENTED :: LocationStatusType
newtype Op
Op' :: Text -> Op
[fromOp] :: Op -> Text
pattern Op_Add :: Op
pattern Op_Copy :: Op
pattern Op_Move :: Op
pattern Op_Remove :: Op
pattern Op_Replace :: Op
pattern Op_Test :: Op
newtype PutMode
PutMode' :: Text -> PutMode
[fromPutMode] :: PutMode -> Text
pattern PutMode_Merge :: PutMode
pattern PutMode_Overwrite :: PutMode
newtype QuotaPeriodType
QuotaPeriodType' :: Text -> QuotaPeriodType
[fromQuotaPeriodType] :: QuotaPeriodType -> Text
pattern QuotaPeriodType_DAY :: QuotaPeriodType
pattern QuotaPeriodType_MONTH :: QuotaPeriodType
pattern QuotaPeriodType_WEEK :: QuotaPeriodType
newtype SecurityPolicy
SecurityPolicy' :: Text -> SecurityPolicy
[fromSecurityPolicy] :: SecurityPolicy -> Text
pattern SecurityPolicy_TLS_1_0 :: SecurityPolicy
pattern SecurityPolicy_TLS_1_2 :: SecurityPolicy
newtype UnauthorizedCacheControlHeaderStrategy
UnauthorizedCacheControlHeaderStrategy' :: Text -> UnauthorizedCacheControlHeaderStrategy
[fromUnauthorizedCacheControlHeaderStrategy] :: UnauthorizedCacheControlHeaderStrategy -> Text
pattern UnauthorizedCacheControlHeaderStrategy_FAIL_WITH_403 :: UnauthorizedCacheControlHeaderStrategy
pattern UnauthorizedCacheControlHeaderStrategy_SUCCEED_WITHOUT_RESPONSE_HEADER :: UnauthorizedCacheControlHeaderStrategy
pattern UnauthorizedCacheControlHeaderStrategy_SUCCEED_WITH_RESPONSE_HEADER :: UnauthorizedCacheControlHeaderStrategy
newtype VpcLinkStatus
VpcLinkStatus' :: Text -> VpcLinkStatus
[fromVpcLinkStatus] :: VpcLinkStatus -> Text
pattern VpcLinkStatus_AVAILABLE :: VpcLinkStatus
pattern VpcLinkStatus_DELETING :: VpcLinkStatus
pattern VpcLinkStatus_FAILED :: VpcLinkStatus
pattern VpcLinkStatus_PENDING :: VpcLinkStatus

-- | Access log settings, including the access log format and access log
--   destination ARN.
--   
--   <i>See:</i> <a>newAccessLogSettings</a> smart constructor.
data AccessLogSettings
AccessLogSettings' :: Maybe Text -> Maybe Text -> AccessLogSettings

-- | A single line format of the access logs of data, as specified by
--   selected <a>$context variables</a>. The format must include at least
--   <tt>$context.requestId</tt>.
[$sel:format:AccessLogSettings'] :: AccessLogSettings -> Maybe Text

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or
--   Kinesis Data Firehose delivery stream to receive access logs. If you
--   specify a Kinesis Data Firehose delivery stream, the stream name must
--   begin with <tt>amazon-apigateway-</tt>.
[$sel:destinationArn:AccessLogSettings'] :: AccessLogSettings -> Maybe Text

-- | Create a value of <a>AccessLogSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:AccessLogSettings'</a>, <a>accessLogSettings_format</a>
--   - A single line format of the access logs of data, as specified by
--   selected <a>$context variables</a>. The format must include at least
--   <tt>$context.requestId</tt>.
--   
--   <a>$sel:destinationArn:AccessLogSettings'</a>,
--   <a>accessLogSettings_destinationArn</a> - The Amazon Resource Name
--   (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose
--   delivery stream to receive access logs. If you specify a Kinesis Data
--   Firehose delivery stream, the stream name must begin with
--   <tt>amazon-apigateway-</tt>.
newAccessLogSettings :: AccessLogSettings

-- | A single line format of the access logs of data, as specified by
--   selected <a>$context variables</a>. The format must include at least
--   <tt>$context.requestId</tt>.
accessLogSettings_format :: Lens' AccessLogSettings (Maybe Text)

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or
--   Kinesis Data Firehose delivery stream to receive access logs. If you
--   specify a Kinesis Data Firehose delivery stream, the stream name must
--   begin with <tt>amazon-apigateway-</tt>.
accessLogSettings_destinationArn :: Lens' AccessLogSettings (Maybe Text)

-- | Represents an AWS account that is associated with API Gateway.
--   
--   To view the account info, call <tt>GET</tt> on this resource.
--   
--   <h4>Error Codes</h4>
--   
--   The following exception may be thrown when the request fails.
--   
--   <ul>
--   <li>UnauthorizedException</li>
--   <li>NotFoundException</li>
--   <li>TooManyRequestsException</li>
--   </ul>
--   
--   For detailed error code information, including the corresponding HTTP
--   Status Codes, see <a>API Gateway Error Codes</a>
--   
--   <h4>Example: Get the information about an account.</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /account HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160531T184618Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/account-apigateway-{rel}.html", "name": "account", "templated": true }, "self": { "href": "/account" }, "account:update": { "href": "/account" } }, "cloudwatchRoleArn": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "throttleSettings": { "rateLimit": 500, "burstLimit": 1000 } }
--   </pre>
--   
--   In addition to making the REST API call directly, you can use the AWS
--   CLI and an AWS SDK to access this resource.
--   
--   <a>API Gateway Limits</a> <a>Developer Guide</a>, <a>AWS CLI</a>
--   
--   <i>See:</i> <a>newAccount</a> smart constructor.
data Account
Account' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe ThrottleSettings -> Account

-- | The version of the API keys used for the account.
[$sel:apiKeyVersion:Account'] :: Account -> Maybe Text

-- | The ARN of an Amazon CloudWatch role for the current Account.
[$sel:cloudwatchRoleArn:Account'] :: Account -> Maybe Text

-- | A list of features supported for the account. When usage plans are
--   enabled, the features list will include an entry of
--   <tt>"UsagePlans"</tt>.
[$sel:features:Account'] :: Account -> Maybe [Text]

-- | Specifies the API request limits configured for the current Account.
[$sel:throttleSettings:Account'] :: Account -> Maybe ThrottleSettings

-- | Create a value of <a>Account</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyVersion:Account'</a>, <a>account_apiKeyVersion</a> - The
--   version of the API keys used for the account.
--   
--   <a>$sel:cloudwatchRoleArn:Account'</a>,
--   <a>account_cloudwatchRoleArn</a> - The ARN of an Amazon CloudWatch
--   role for the current Account.
--   
--   <a>$sel:features:Account'</a>, <a>account_features</a> - A list of
--   features supported for the account. When usage plans are enabled, the
--   features list will include an entry of <tt>"UsagePlans"</tt>.
--   
--   <a>$sel:throttleSettings:Account'</a>, <a>account_throttleSettings</a>
--   - Specifies the API request limits configured for the current Account.
newAccount :: Account

-- | The version of the API keys used for the account.
account_apiKeyVersion :: Lens' Account (Maybe Text)

-- | The ARN of an Amazon CloudWatch role for the current Account.
account_cloudwatchRoleArn :: Lens' Account (Maybe Text)

-- | A list of features supported for the account. When usage plans are
--   enabled, the features list will include an entry of
--   <tt>"UsagePlans"</tt>.
account_features :: Lens' Account (Maybe [Text])

-- | Specifies the API request limits configured for the current Account.
account_throttleSettings :: Lens' Account (Maybe ThrottleSettings)

-- | A resource that can be distributed to callers for executing Method
--   resources that require an API key. API keys can be mapped to any Stage
--   on any RestApi, which indicates that the callers with the API key can
--   make requests to that stage.
--   
--   <a>Use API Keys</a>
--   
--   <i>See:</i> <a>newApiKey</a> smart constructor.
data ApiKey
ApiKey' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ApiKey

-- | Specifies whether the API Key can be used by callers.
[$sel:enabled:ApiKey'] :: ApiKey -> Maybe Bool

-- | The value of the API Key.
[$sel:value:ApiKey'] :: ApiKey -> Maybe Text

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
[$sel:customerId:ApiKey'] :: ApiKey -> Maybe Text

-- | The timestamp when the API Key was created.
[$sel:createdDate:ApiKey'] :: ApiKey -> Maybe POSIX

-- | The name of the API Key.
[$sel:name:ApiKey'] :: ApiKey -> Maybe Text

-- | The identifier of the API Key.
[$sel:id:ApiKey'] :: ApiKey -> Maybe Text

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
[$sel:stageKeys:ApiKey'] :: ApiKey -> Maybe [Text]

-- | The timestamp when the API Key was last updated.
[$sel:lastUpdatedDate:ApiKey'] :: ApiKey -> Maybe POSIX

-- | The description of the API Key.
[$sel:description:ApiKey'] :: ApiKey -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:ApiKey'] :: ApiKey -> Maybe (HashMap Text Text)

-- | Create a value of <a>ApiKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:ApiKey'</a>, <a>apiKey_enabled</a> - Specifies whether
--   the API Key can be used by callers.
--   
--   <a>$sel:value:ApiKey'</a>, <a>apiKey_value</a> - The value of the API
--   Key.
--   
--   <a>$sel:customerId:ApiKey'</a>, <a>apiKey_customerId</a> - An AWS
--   Marketplace customer identifier , when integrating with the AWS SaaS
--   Marketplace.
--   
--   <a>$sel:createdDate:ApiKey'</a>, <a>apiKey_createdDate</a> - The
--   timestamp when the API Key was created.
--   
--   <a>$sel:name:ApiKey'</a>, <a>apiKey_name</a> - The name of the API
--   Key.
--   
--   <a>$sel:id:ApiKey'</a>, <a>apiKey_id</a> - The identifier of the API
--   Key.
--   
--   <a>$sel:stageKeys:ApiKey'</a>, <a>apiKey_stageKeys</a> - A list of
--   Stage resources that are associated with the ApiKey resource.
--   
--   <a>$sel:lastUpdatedDate:ApiKey'</a>, <a>apiKey_lastUpdatedDate</a> -
--   The timestamp when the API Key was last updated.
--   
--   <a>$sel:description:ApiKey'</a>, <a>apiKey_description</a> - The
--   description of the API Key.
--   
--   <a>$sel:tags:ApiKey'</a>, <a>apiKey_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newApiKey :: ApiKey

-- | Specifies whether the API Key can be used by callers.
apiKey_enabled :: Lens' ApiKey (Maybe Bool)

-- | The value of the API Key.
apiKey_value :: Lens' ApiKey (Maybe Text)

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
apiKey_customerId :: Lens' ApiKey (Maybe Text)

-- | The timestamp when the API Key was created.
apiKey_createdDate :: Lens' ApiKey (Maybe UTCTime)

-- | The name of the API Key.
apiKey_name :: Lens' ApiKey (Maybe Text)

-- | The identifier of the API Key.
apiKey_id :: Lens' ApiKey (Maybe Text)

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
apiKey_stageKeys :: Lens' ApiKey (Maybe [Text])

-- | The timestamp when the API Key was last updated.
apiKey_lastUpdatedDate :: Lens' ApiKey (Maybe UTCTime)

-- | The description of the API Key.
apiKey_description :: Lens' ApiKey (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
apiKey_tags :: Lens' ApiKey (Maybe (HashMap Text Text))

-- | API stage name of the associated API stage in a usage plan.
--   
--   <i>See:</i> <a>newApiStage</a> smart constructor.
data ApiStage
ApiStage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text ThrottleSettings) -> ApiStage

-- | API stage name of the associated API stage in a usage plan.
[$sel:stage:ApiStage'] :: ApiStage -> Maybe Text

-- | API Id of the associated API stage in a usage plan.
[$sel:apiId:ApiStage'] :: ApiStage -> Maybe Text

-- | Map containing method level throttling information for API stage in a
--   usage plan.
[$sel:throttle:ApiStage'] :: ApiStage -> Maybe (HashMap Text ThrottleSettings)

-- | Create a value of <a>ApiStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:ApiStage'</a>, <a>apiStage_stage</a> - API stage name of
--   the associated API stage in a usage plan.
--   
--   <a>$sel:apiId:ApiStage'</a>, <a>apiStage_apiId</a> - API Id of the
--   associated API stage in a usage plan.
--   
--   <a>$sel:throttle:ApiStage'</a>, <a>apiStage_throttle</a> - Map
--   containing method level throttling information for API stage in a
--   usage plan.
newApiStage :: ApiStage

-- | API stage name of the associated API stage in a usage plan.
apiStage_stage :: Lens' ApiStage (Maybe Text)

-- | API Id of the associated API stage in a usage plan.
apiStage_apiId :: Lens' ApiStage (Maybe Text)

-- | Map containing method level throttling information for API stage in a
--   usage plan.
apiStage_throttle :: Lens' ApiStage (Maybe (HashMap Text ThrottleSettings))

-- | Represents an authorization layer for methods. If enabled on a method,
--   API Gateway will activate the authorizer when a client calls the
--   method.
--   
--   <a>Use Lambda Function as Authorizer</a> <a>Use Cognito User Pool as
--   Authorizer</a>
--   
--   <i>See:</i> <a>newAuthorizer</a> smart constructor.
data Authorizer
Authorizer' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe AuthorizerType -> Maybe Text -> Maybe Text -> Authorizer

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
[$sel:authorizerUri:Authorizer'] :: Authorizer -> Maybe Text

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
[$sel:identityValidationExpression:Authorizer'] :: Authorizer -> Maybe Text

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
[$sel:providerARNs:Authorizer'] :: Authorizer -> Maybe [Text]

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
[$sel:name:Authorizer'] :: Authorizer -> Maybe Text

-- | The identifier for the authorizer resource.
[$sel:id:Authorizer'] :: Authorizer -> Maybe Text

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
[$sel:authorizerResultTtlInSeconds:Authorizer'] :: Authorizer -> Maybe Int

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
[$sel:authType:Authorizer'] :: Authorizer -> Maybe Text

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
[$sel:type':Authorizer'] :: Authorizer -> Maybe AuthorizerType

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
[$sel:identitySource:Authorizer'] :: Authorizer -> Maybe Text

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
[$sel:authorizerCredentials:Authorizer'] :: Authorizer -> Maybe Text

-- | Create a value of <a>Authorizer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerUri:Authorizer'</a>, <a>authorizer_authorizerUri</a>
--   - Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
--   
--   <a>$sel:identityValidationExpression:Authorizer'</a>,
--   <a>authorizer_identityValidationExpression</a> - A validation
--   expression for the incoming identity token. For <tt>TOKEN</tt>
--   authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
--   
--   <a>$sel:providerARNs:Authorizer'</a>, <a>authorizer_providerARNs</a> -
--   A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
--   
--   <a>$sel:name:Authorizer'</a>, <a>authorizer_name</a> - [Required] The
--   name of the authorizer.
--   
--   <a>$sel:id:Authorizer'</a>, <a>authorizer_id</a> - The identifier for
--   the authorizer resource.
--   
--   <a>$sel:authorizerResultTtlInSeconds:Authorizer'</a>,
--   <a>authorizer_authorizerResultTtlInSeconds</a> - The TTL in seconds of
--   cached authorizer results. If it equals 0, authorization caching is
--   disabled. If it is greater than 0, API Gateway will cache authorizer
--   responses. If this field is not set, the default value is 300. The
--   maximum value is 3600, or 1 hour.
--   
--   <a>$sel:authType:Authorizer'</a>, <a>authorizer_authType</a> -
--   Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
--   
--   <a>$sel:type':Authorizer'</a>, <a>authorizer_type</a> - The authorizer
--   type. Valid values are <tt>TOKEN</tt> for a Lambda function using a
--   single authorization token submitted in a custom header,
--   <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
--   
--   <a>$sel:identitySource:Authorizer'</a>,
--   <a>authorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
--   
--   <a>$sel:authorizerCredentials:Authorizer'</a>,
--   <a>authorizer_authorizerCredentials</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, specify null.
newAuthorizer :: Authorizer

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
authorizer_authorizerUri :: Lens' Authorizer (Maybe Text)

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
authorizer_identityValidationExpression :: Lens' Authorizer (Maybe Text)

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
authorizer_providerARNs :: Lens' Authorizer (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
authorizer_name :: Lens' Authorizer (Maybe Text)

-- | The identifier for the authorizer resource.
authorizer_id :: Lens' Authorizer (Maybe Text)

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
authorizer_authorizerResultTtlInSeconds :: Lens' Authorizer (Maybe Int)

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
authorizer_authType :: Lens' Authorizer (Maybe Text)

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
authorizer_type :: Lens' Authorizer (Maybe AuthorizerType)

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
authorizer_identitySource :: Lens' Authorizer (Maybe Text)

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
authorizer_authorizerCredentials :: Lens' Authorizer (Maybe Text)

-- | Represents the base path that callers of the API must provide as part
--   of the URL after the domain name.
--   
--   A custom domain name plus a <tt>BasePathMapping</tt> specification
--   identifies a deployed RestApi in a given stage of the owner Account.
--   
--   <a>Use Custom Domain Names</a>
--   
--   <i>See:</i> <a>newBasePathMapping</a> smart constructor.
data BasePathMapping
BasePathMapping' :: Maybe Text -> Maybe Text -> Maybe Text -> BasePathMapping

-- | The name of the associated stage.
[$sel:stage:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
[$sel:basePath:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | The string identifier of the associated RestApi.
[$sel:restApiId:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | Create a value of <a>BasePathMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:BasePathMapping'</a>, <a>basePathMapping_stage</a> - The
--   name of the associated stage.
--   
--   <a>$sel:basePath:BasePathMapping'</a>, <a>basePathMapping_basePath</a>
--   - The base path name that callers of the API must provide as part of
--   the URL after the domain name.
--   
--   <a>$sel:restApiId:BasePathMapping'</a>,
--   <a>basePathMapping_restApiId</a> - The string identifier of the
--   associated RestApi.
newBasePathMapping :: BasePathMapping

-- | The name of the associated stage.
basePathMapping_stage :: Lens' BasePathMapping (Maybe Text)

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
basePathMapping_basePath :: Lens' BasePathMapping (Maybe Text)

-- | The string identifier of the associated RestApi.
basePathMapping_restApiId :: Lens' BasePathMapping (Maybe Text)

-- | Configuration settings of a canary deployment.
--   
--   <i>See:</i> <a>newCanarySettings</a> smart constructor.
data CanarySettings
CanarySettings' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Double -> CanarySettings

-- | The ID of the canary deployment.
[$sel:deploymentId:CanarySettings'] :: CanarySettings -> Maybe Text

-- | Stage variables overridden for a canary release deployment, including
--   new stage variables introduced in the canary. These stage variables
--   are represented as a string-to-string map between stage variable names
--   and their values.
[$sel:stageVariableOverrides:CanarySettings'] :: CanarySettings -> Maybe (HashMap Text Text)

-- | A Boolean flag to indicate whether the canary deployment uses the
--   stage cache or not.
[$sel:useStageCache:CanarySettings'] :: CanarySettings -> Maybe Bool

-- | The percent (0-100) of traffic diverted to a canary deployment.
[$sel:percentTraffic:CanarySettings'] :: CanarySettings -> Maybe Double

-- | Create a value of <a>CanarySettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CanarySettings'</a>,
--   <a>canarySettings_deploymentId</a> - The ID of the canary deployment.
--   
--   <a>$sel:stageVariableOverrides:CanarySettings'</a>,
--   <a>canarySettings_stageVariableOverrides</a> - Stage variables
--   overridden for a canary release deployment, including new stage
--   variables introduced in the canary. These stage variables are
--   represented as a string-to-string map between stage variable names and
--   their values.
--   
--   <a>$sel:useStageCache:CanarySettings'</a>,
--   <a>canarySettings_useStageCache</a> - A Boolean flag to indicate
--   whether the canary deployment uses the stage cache or not.
--   
--   <a>$sel:percentTraffic:CanarySettings'</a>,
--   <a>canarySettings_percentTraffic</a> - The percent (0-100) of traffic
--   diverted to a canary deployment.
newCanarySettings :: CanarySettings

-- | The ID of the canary deployment.
canarySettings_deploymentId :: Lens' CanarySettings (Maybe Text)

-- | Stage variables overridden for a canary release deployment, including
--   new stage variables introduced in the canary. These stage variables
--   are represented as a string-to-string map between stage variable names
--   and their values.
canarySettings_stageVariableOverrides :: Lens' CanarySettings (Maybe (HashMap Text Text))

-- | A Boolean flag to indicate whether the canary deployment uses the
--   stage cache or not.
canarySettings_useStageCache :: Lens' CanarySettings (Maybe Bool)

-- | The percent (0-100) of traffic diverted to a canary deployment.
canarySettings_percentTraffic :: Lens' CanarySettings (Maybe Double)

-- | Represents a client certificate used to configure client-side SSL
--   authentication while sending requests to the integration endpoint.
--   
--   Client certificates are used to authenticate an API by the backend
--   server. To authenticate an API client (or user), use IAM roles and
--   policies, a custom Authorizer or an Amazon Cognito user pool.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newClientCertificate</a> smart constructor.
data ClientCertificate
ClientCertificate' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ClientCertificate

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
[$sel:pemEncodedCertificate:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The identifier of the client certificate.
[$sel:clientCertificateId:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The timestamp when the client certificate was created.
[$sel:createdDate:ClientCertificate'] :: ClientCertificate -> Maybe POSIX

-- | The timestamp when the client certificate will expire.
[$sel:expirationDate:ClientCertificate'] :: ClientCertificate -> Maybe POSIX

-- | The description of the client certificate.
[$sel:description:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:ClientCertificate'] :: ClientCertificate -> Maybe (HashMap Text Text)

-- | Create a value of <a>ClientCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pemEncodedCertificate:ClientCertificate'</a>,
--   <a>clientCertificate_pemEncodedCertificate</a> - The PEM-encoded
--   public key of the client certificate, which can be used to configure
--   certificate authentication in the integration endpoint .
--   
--   <a>$sel:clientCertificateId:ClientCertificate'</a>,
--   <a>clientCertificate_clientCertificateId</a> - The identifier of the
--   client certificate.
--   
--   <a>$sel:createdDate:ClientCertificate'</a>,
--   <a>clientCertificate_createdDate</a> - The timestamp when the client
--   certificate was created.
--   
--   <a>$sel:expirationDate:ClientCertificate'</a>,
--   <a>clientCertificate_expirationDate</a> - The timestamp when the
--   client certificate will expire.
--   
--   <a>$sel:description:ClientCertificate'</a>,
--   <a>clientCertificate_description</a> - The description of the client
--   certificate.
--   
--   <a>$sel:tags:ClientCertificate'</a>, <a>clientCertificate_tags</a> -
--   The collection of tags. Each tag element is associated with a given
--   resource.
newClientCertificate :: ClientCertificate

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
clientCertificate_pemEncodedCertificate :: Lens' ClientCertificate (Maybe Text)

-- | The identifier of the client certificate.
clientCertificate_clientCertificateId :: Lens' ClientCertificate (Maybe Text)

-- | The timestamp when the client certificate was created.
clientCertificate_createdDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The timestamp when the client certificate will expire.
clientCertificate_expirationDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The description of the client certificate.
clientCertificate_description :: Lens' ClientCertificate (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
clientCertificate_tags :: Lens' ClientCertificate (Maybe (HashMap Text Text))

-- | An immutable representation of a RestApi resource that can be called
--   by users using Stages. A deployment must be associated with a Stage
--   for it to be callable over the Internet.
--   
--   To create a deployment, call <tt>POST</tt> on the Deployments resource
--   of a RestApi. To view, update, or delete a deployment, call
--   <tt>GET</tt>, <tt>PATCH</tt>, or <tt>DELETE</tt> on the specified
--   deployment resource
--   (<tt>/restapis/{restapi_id}/deployments/{deployment_id}</tt>).
--   
--   RestApi, Deployments, Stage, <a>AWS CLI</a>, <a>AWS SDKs</a>
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe (HashMap Text (HashMap Text MethodSnapshot)) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Deployment

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
[$sel:apiSummary:Deployment'] :: Deployment -> Maybe (HashMap Text (HashMap Text MethodSnapshot))

-- | The date and time that the deployment resource was created.
[$sel:createdDate:Deployment'] :: Deployment -> Maybe POSIX

-- | The identifier for the deployment resource.
[$sel:id:Deployment'] :: Deployment -> Maybe Text

-- | The description for the deployment resource.
[$sel:description:Deployment'] :: Deployment -> Maybe Text

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiSummary:Deployment'</a>, <a>deployment_apiSummary</a> - A
--   summary of the RestApi at the date and time that the deployment
--   resource was created.
--   
--   <a>$sel:createdDate:Deployment'</a>, <a>deployment_createdDate</a> -
--   The date and time that the deployment resource was created.
--   
--   <a>$sel:id:Deployment'</a>, <a>deployment_id</a> - The identifier for
--   the deployment resource.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description for the deployment resource.
newDeployment :: Deployment

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
deployment_apiSummary :: Lens' Deployment (Maybe (HashMap Text (HashMap Text MethodSnapshot)))

-- | The date and time that the deployment resource was created.
deployment_createdDate :: Lens' Deployment (Maybe UTCTime)

-- | The identifier for the deployment resource.
deployment_id :: Lens' Deployment (Maybe Text)

-- | The description for the deployment resource.
deployment_description :: Lens' Deployment (Maybe Text)

-- | The input configuration for a canary deployment.
--   
--   <i>See:</i> <a>newDeploymentCanarySettings</a> smart constructor.
data DeploymentCanarySettings
DeploymentCanarySettings' :: Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Double -> DeploymentCanarySettings

-- | A stage variable overrides used for the canary release deployment.
--   They can override existing stage variables or add new stage variables
--   for the canary release deployment. These stage variables are
--   represented as a string-to-string map between stage variable names and
--   their values.
[$sel:stageVariableOverrides:DeploymentCanarySettings'] :: DeploymentCanarySettings -> Maybe (HashMap Text Text)

-- | A Boolean flag to indicate whether the canary release deployment uses
--   the stage cache or not.
[$sel:useStageCache:DeploymentCanarySettings'] :: DeploymentCanarySettings -> Maybe Bool

-- | The percentage (0.0-100.0) of traffic routed to the canary deployment.
[$sel:percentTraffic:DeploymentCanarySettings'] :: DeploymentCanarySettings -> Maybe Double

-- | Create a value of <a>DeploymentCanarySettings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageVariableOverrides:DeploymentCanarySettings'</a>,
--   <a>deploymentCanarySettings_stageVariableOverrides</a> - A stage
--   variable overrides used for the canary release deployment. They can
--   override existing stage variables or add new stage variables for the
--   canary release deployment. These stage variables are represented as a
--   string-to-string map between stage variable names and their values.
--   
--   <a>$sel:useStageCache:DeploymentCanarySettings'</a>,
--   <a>deploymentCanarySettings_useStageCache</a> - A Boolean flag to
--   indicate whether the canary release deployment uses the stage cache or
--   not.
--   
--   <a>$sel:percentTraffic:DeploymentCanarySettings'</a>,
--   <a>deploymentCanarySettings_percentTraffic</a> - The percentage
--   (0.0-100.0) of traffic routed to the canary deployment.
newDeploymentCanarySettings :: DeploymentCanarySettings

-- | A stage variable overrides used for the canary release deployment.
--   They can override existing stage variables or add new stage variables
--   for the canary release deployment. These stage variables are
--   represented as a string-to-string map between stage variable names and
--   their values.
deploymentCanarySettings_stageVariableOverrides :: Lens' DeploymentCanarySettings (Maybe (HashMap Text Text))

-- | A Boolean flag to indicate whether the canary release deployment uses
--   the stage cache or not.
deploymentCanarySettings_useStageCache :: Lens' DeploymentCanarySettings (Maybe Bool)

-- | The percentage (0.0-100.0) of traffic routed to the canary deployment.
deploymentCanarySettings_percentTraffic :: Lens' DeploymentCanarySettings (Maybe Double)

-- | A documentation part for a targeted API entity.
--   
--   A documentation part consists of a content map (<tt>properties</tt>)
--   and a target (<tt>location</tt>). The target specifies an API entity
--   to which the documentation content applies. The supported API entity
--   types are <tt>API</tt>, <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. Valid <tt>location</tt> fields depend on
--   the API entity type. All valid fields are not required.
--   
--   The content map is a JSON string of API-specific key-value pairs.
--   Although an API can use any shape for the content map, only the
--   OpenAPI-compliant documentation fields will be injected into the
--   associated API entity definition in the exported OpenAPI definition
--   file.
--   
--   <a>Documenting an API</a>, DocumentationParts
--   
--   <i>See:</i> <a>newDocumentationPart</a> smart constructor.
data DocumentationPart
DocumentationPart' :: Maybe DocumentationPartLocation -> Maybe Text -> Maybe Text -> DocumentationPart

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
[$sel:location:DocumentationPart'] :: DocumentationPart -> Maybe DocumentationPartLocation

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
[$sel:id:DocumentationPart'] :: DocumentationPart -> Maybe Text

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
[$sel:properties:DocumentationPart'] :: DocumentationPart -> Maybe Text

-- | Create a value of <a>DocumentationPart</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:DocumentationPart'</a>,
--   <a>documentationPart_location</a> - The location of the API entity to
--   which the documentation applies. Valid fields depend on the targeted
--   API entity type. All the valid location fields are not required. If
--   not explicitly specified, a valid location field is treated as a
--   wildcard and associated documentation content may be inherited by
--   matching entities, unless overridden.
--   
--   <a>$sel:id:DocumentationPart'</a>, <a>documentationPart_id</a> - The
--   DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
--   
--   <a>$sel:properties:DocumentationPart'</a>,
--   <a>documentationPart_properties</a> - A content map of API-specific
--   key-value pairs describing the targeted API entity. The map must be
--   encoded as a JSON string, e.g., <tt>"{ \"description\": \"The API does
--   ...\" }"</tt>. Only OpenAPI-compliant documentation-related fields
--   from the properties map are exported and, hence, published as part of
--   the API entity definitions, while the original documentation parts are
--   exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
newDocumentationPart :: DocumentationPart

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
documentationPart_location :: Lens' DocumentationPart (Maybe DocumentationPartLocation)

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
documentationPart_id :: Lens' DocumentationPart (Maybe Text)

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
documentationPart_properties :: Lens' DocumentationPart (Maybe Text)

-- | Specifies the target API entity to which the documentation applies.
--   
--   <i>See:</i> <a>newDocumentationPartLocation</a> smart constructor.
data DocumentationPartLocation
DocumentationPartLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> DocumentationPartType -> DocumentationPartLocation

-- | The URL path of the target. It is a valid field for the API entity
--   types of <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. The default value is <tt>/</tt> for the
--   root resource. When an applicable child entity inherits the content of
--   another entity of the same type with more general specifications of
--   the other <tt>location</tt> attributes, the child entity's
--   <tt>path</tt> attribute must match that of the parent entity as a
--   prefix.
[$sel:path:DocumentationPartLocation'] :: DocumentationPartLocation -> Maybe Text

-- | The name of the targeted API entity. It is a valid and required field
--   for the API entity types of <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt> and
--   <tt>RESPONSE_HEADER</tt>. It is an invalid field for any other entity
--   type.
[$sel:name:DocumentationPartLocation'] :: DocumentationPartLocation -> Maybe Text

-- | The HTTP verb of a method. It is a valid field for the API entity
--   types of <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any
--   method. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>method</tt>
--   attribute must match that of the parent entity exactly.
[$sel:method:DocumentationPartLocation'] :: DocumentationPartLocation -> Maybe Text

-- | The HTTP status code of a response. It is a valid field for the API
--   entity types of <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>, and
--   <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any status
--   code. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>statusCode</tt>
--   attribute must match that of the parent entity exactly.
[$sel:statusCode:DocumentationPartLocation'] :: DocumentationPartLocation -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The type of API entity to which the documentation
--   content applies. Valid values are <tt>API</tt>, <tt>AUTHORIZER</tt>,
--   <tt>MODEL</tt>, <tt>RESOURCE</tt>, <tt>METHOD</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. Content
--   inheritance does not apply to any entity of the <tt>API</tt>,
--   <tt>AUTHORIZER</tt>, <tt>METHOD</tt>, <tt>MODEL</tt>,
--   <tt>REQUEST_BODY</tt>, or <tt>RESOURCE</tt> type.</li>
--   </ul>
[$sel:type':DocumentationPartLocation'] :: DocumentationPartLocation -> DocumentationPartType

-- | Create a value of <a>DocumentationPartLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_path</a> - The URL path of the target. It
--   is a valid field for the API entity types of <tt>RESOURCE</tt>,
--   <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. The default
--   value is <tt>/</tt> for the root resource. When an applicable child
--   entity inherits the content of another entity of the same type with
--   more general specifications of the other <tt>location</tt> attributes,
--   the child entity's <tt>path</tt> attribute must match that of the
--   parent entity as a prefix.
--   
--   <a>$sel:name:DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_name</a> - The name of the targeted API
--   entity. It is a valid and required field for the API entity types of
--   <tt>AUTHORIZER</tt>, <tt>MODEL</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt> and <tt>RESPONSE_HEADER</tt>. It is an invalid
--   field for any other entity type.
--   
--   <a>$sel:method:DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_method</a> - The HTTP verb of a method.
--   It is a valid field for the API entity types of <tt>METHOD</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. The default
--   value is <tt>*</tt> for any method. When an applicable child entity
--   inherits the content of an entity of the same type with more general
--   specifications of the other <tt>location</tt> attributes, the child
--   entity's <tt>method</tt> attribute must match that of the parent
--   entity exactly.
--   
--   <a>$sel:statusCode:DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_statusCode</a> - The HTTP status code of
--   a response. It is a valid field for the API entity types of
--   <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>, and
--   <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any status
--   code. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>statusCode</tt>
--   attribute must match that of the parent entity exactly.
--   
--   <a>$sel:type':DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_type</a> - [Required] The type of API
--   entity to which the documentation content applies. Valid values are
--   <tt>API</tt>, <tt>AUTHORIZER</tt>, <tt>MODEL</tt>, <tt>RESOURCE</tt>,
--   <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. Content
--   inheritance does not apply to any entity of the <tt>API</tt>,
--   <tt>AUTHORIZER</tt>, <tt>METHOD</tt>, <tt>MODEL</tt>,
--   <tt>REQUEST_BODY</tt>, or <tt>RESOURCE</tt> type.
newDocumentationPartLocation :: DocumentationPartType -> DocumentationPartLocation

-- | The URL path of the target. It is a valid field for the API entity
--   types of <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. The default value is <tt>/</tt> for the
--   root resource. When an applicable child entity inherits the content of
--   another entity of the same type with more general specifications of
--   the other <tt>location</tt> attributes, the child entity's
--   <tt>path</tt> attribute must match that of the parent entity as a
--   prefix.
documentationPartLocation_path :: Lens' DocumentationPartLocation (Maybe Text)

-- | The name of the targeted API entity. It is a valid and required field
--   for the API entity types of <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt> and
--   <tt>RESPONSE_HEADER</tt>. It is an invalid field for any other entity
--   type.
documentationPartLocation_name :: Lens' DocumentationPartLocation (Maybe Text)

-- | The HTTP verb of a method. It is a valid field for the API entity
--   types of <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any
--   method. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>method</tt>
--   attribute must match that of the parent entity exactly.
documentationPartLocation_method :: Lens' DocumentationPartLocation (Maybe Text)

-- | The HTTP status code of a response. It is a valid field for the API
--   entity types of <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>, and
--   <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any status
--   code. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>statusCode</tt>
--   attribute must match that of the parent entity exactly.
documentationPartLocation_statusCode :: Lens' DocumentationPartLocation (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The type of API entity to which the documentation
--   content applies. Valid values are <tt>API</tt>, <tt>AUTHORIZER</tt>,
--   <tt>MODEL</tt>, <tt>RESOURCE</tt>, <tt>METHOD</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. Content
--   inheritance does not apply to any entity of the <tt>API</tt>,
--   <tt>AUTHORIZER</tt>, <tt>METHOD</tt>, <tt>MODEL</tt>,
--   <tt>REQUEST_BODY</tt>, or <tt>RESOURCE</tt> type.</li>
--   </ul>
documentationPartLocation_type :: Lens' DocumentationPartLocation DocumentationPartType

-- | A snapshot of the documentation of an API.
--   
--   Publishing API documentation involves creating a documentation version
--   associated with an API stage and exporting the versioned documentation
--   to an external (e.g., OpenAPI) file.
--   
--   <a>Documenting an API</a>, DocumentationPart, DocumentationVersions
--   
--   <i>See:</i> <a>newDocumentationVersion</a> smart constructor.
data DocumentationVersion
DocumentationVersion' :: Maybe POSIX -> Maybe Text -> Maybe Text -> DocumentationVersion

-- | The date when the API documentation snapshot is created.
[$sel:createdDate:DocumentationVersion'] :: DocumentationVersion -> Maybe POSIX

-- | The version identifier of the API documentation snapshot.
[$sel:version:DocumentationVersion'] :: DocumentationVersion -> Maybe Text

-- | The description of the API documentation snapshot.
[$sel:description:DocumentationVersion'] :: DocumentationVersion -> Maybe Text

-- | Create a value of <a>DocumentationVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:DocumentationVersion'</a>,
--   <a>documentationVersion_createdDate</a> - The date when the API
--   documentation snapshot is created.
--   
--   <a>$sel:version:DocumentationVersion'</a>,
--   <a>documentationVersion_version</a> - The version identifier of the
--   API documentation snapshot.
--   
--   <a>$sel:description:DocumentationVersion'</a>,
--   <a>documentationVersion_description</a> - The description of the API
--   documentation snapshot.
newDocumentationVersion :: DocumentationVersion

-- | The date when the API documentation snapshot is created.
documentationVersion_createdDate :: Lens' DocumentationVersion (Maybe UTCTime)

-- | The version identifier of the API documentation snapshot.
documentationVersion_version :: Lens' DocumentationVersion (Maybe Text)

-- | The description of the API documentation snapshot.
documentationVersion_description :: Lens' DocumentationVersion (Maybe Text)

-- | Represents a custom domain name as a user-friendly host name of an API
--   (RestApi).
--   
--   When you deploy an API, API Gateway creates a default host name for
--   the API. This default API host name is of the
--   <tt>{restapi-id}.execute-api.{region}.amazonaws.com</tt> format. With
--   the default host name, you can access the API's root resource with the
--   URL of
--   <tt>https://{restapi-id}.execute-api.{region}.amazonaws.com/{stage}/</tt>.
--   When you set up a custom domain name of <tt>apis.example.com</tt> for
--   this API, you can then access the same resource using the URL of the
--   <tt>https://apis.examples.com/myApi</tt>, where <tt>myApi</tt> is the
--   base path mapping (BasePathMapping) of your API under the custom
--   domain name.
--   
--   <a>Set a Custom Host Name for an API</a>
--   
--   <i>See:</i> <a>newDomainName</a> smart constructor.
data DomainName
DomainName' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SecurityPolicy -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe DomainNameStatus -> Maybe (HashMap Text Text) -> DomainName

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
[$sel:regionalHostedZoneId:DomainName'] :: DomainName -> Maybe Text

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
[$sel:certificateName:DomainName'] :: DomainName -> Maybe Text

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
[$sel:ownershipVerificationCertificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
[$sel:regionalCertificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
[$sel:certificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
[$sel:distributionHostedZoneId:DomainName'] :: DomainName -> Maybe Text

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
[$sel:securityPolicy:DomainName'] :: DomainName -> Maybe SecurityPolicy

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
[$sel:domainName:DomainName'] :: DomainName -> Maybe Text

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
[$sel:mutualTlsAuthentication:DomainName'] :: DomainName -> Maybe MutualTlsAuthentication

-- | The name of the certificate that will be used for validating the
--   regional domain name.
[$sel:regionalCertificateName:DomainName'] :: DomainName -> Maybe Text

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
[$sel:regionalDomainName:DomainName'] :: DomainName -> Maybe Text

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
[$sel:certificateUploadDate:DomainName'] :: DomainName -> Maybe POSIX

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
[$sel:distributionDomainName:DomainName'] :: DomainName -> Maybe Text

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
[$sel:domainNameStatusMessage:DomainName'] :: DomainName -> Maybe Text

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
[$sel:endpointConfiguration:DomainName'] :: DomainName -> Maybe EndpointConfiguration

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
[$sel:domainNameStatus:DomainName'] :: DomainName -> Maybe DomainNameStatus

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:DomainName'] :: DomainName -> Maybe (HashMap Text Text)

-- | Create a value of <a>DomainName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regionalHostedZoneId:DomainName'</a>,
--   <a>domainName_regionalHostedZoneId</a> - The region-specific Amazon
--   Route 53 Hosted Zone ID of the regional endpoint. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:certificateName:DomainName'</a>,
--   <a>domainName_certificateName</a> - The name of the certificate that
--   will be used by edge-optimized endpoint for this domain name.
--   
--   <a>$sel:ownershipVerificationCertificateArn:DomainName'</a>,
--   <a>domainName_ownershipVerificationCertificateArn</a> - The ARN of the
--   public certificate issued by ACM to validate ownership of your custom
--   domain. Only required when configuring mutual TLS and using an ACM
--   imported or private CA certificate ARN as the regionalCertificateArn.
--   
--   <a>$sel:regionalCertificateArn:DomainName'</a>,
--   <a>domainName_regionalCertificateArn</a> - The reference to an
--   AWS-managed certificate that will be used for validating the regional
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:certificateArn:DomainName'</a>,
--   <a>domainName_certificateArn</a> - The reference to an AWS-managed
--   certificate that will be used by edge-optimized endpoint for this
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:distributionHostedZoneId:DomainName'</a>,
--   <a>domainName_distributionHostedZoneId</a> - The region-agnostic
--   Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The
--   valid value is <tt>Z2FDTNDATAQYW2</tt> for all the regions. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:securityPolicy:DomainName'</a>,
--   <a>domainName_securityPolicy</a> - The Transport Layer Security (TLS)
--   version + cipher suite for this DomainName. The valid values are
--   <tt>TLS_1_0</tt> and <tt>TLS_1_2</tt>.
--   
--   <a>$sel:domainName:DomainName'</a>, <a>domainName_domainName</a> - The
--   custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
--   
--   <a>$sel:mutualTlsAuthentication:DomainName'</a>,
--   <a>domainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name. If specified,
--   API Gateway performs two-way authentication between the client and the
--   server. Clients must present a trusted certificate to access your API.
--   
--   <a>$sel:regionalCertificateName:DomainName'</a>,
--   <a>domainName_regionalCertificateName</a> - The name of the
--   certificate that will be used for validating the regional domain name.
--   
--   <a>$sel:regionalDomainName:DomainName'</a>,
--   <a>domainName_regionalDomainName</a> - The domain name associated with
--   the regional endpoint for this custom domain name. You set up this
--   association by adding a DNS record that points the custom domain name
--   to this regional domain name. The regional domain name is returned by
--   API Gateway when you create a regional endpoint.
--   
--   <a>$sel:certificateUploadDate:DomainName'</a>,
--   <a>domainName_certificateUploadDate</a> - The timestamp when the
--   certificate that was used by edge-optimized endpoint for this domain
--   name was uploaded.
--   
--   <a>$sel:distributionDomainName:DomainName'</a>,
--   <a>domainName_distributionDomainName</a> - The domain name of the
--   Amazon CloudFront distribution associated with this custom domain name
--   for an edge-optimized endpoint. You set up this association when
--   adding a DNS record pointing the custom domain name to this
--   distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
--   
--   <a>$sel:domainNameStatusMessage:DomainName'</a>,
--   <a>domainName_domainNameStatusMessage</a> - An optional text message
--   containing detailed information about status of the DomainName
--   migration.
--   
--   <a>$sel:endpointConfiguration:DomainName'</a>,
--   <a>domainName_endpointConfiguration</a> - The endpoint configuration
--   of this DomainName showing the endpoint types of the domain name.
--   
--   <a>$sel:domainNameStatus:DomainName'</a>,
--   <a>domainName_domainNameStatus</a> - The status of the DomainName
--   migration. The valid values are <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
--   
--   <a>$sel:tags:DomainName'</a>, <a>domainName_tags</a> - The collection
--   of tags. Each tag element is associated with a given resource.
newDomainName :: DomainName

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
domainName_regionalHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
domainName_certificateName :: Lens' DomainName (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
domainName_ownershipVerificationCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
domainName_regionalCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
domainName_certificateArn :: Lens' DomainName (Maybe Text)

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
domainName_distributionHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
domainName_securityPolicy :: Lens' DomainName (Maybe SecurityPolicy)

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
domainName_domainName :: Lens' DomainName (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
domainName_mutualTlsAuthentication :: Lens' DomainName (Maybe MutualTlsAuthentication)

-- | The name of the certificate that will be used for validating the
--   regional domain name.
domainName_regionalCertificateName :: Lens' DomainName (Maybe Text)

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
domainName_regionalDomainName :: Lens' DomainName (Maybe Text)

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
domainName_certificateUploadDate :: Lens' DomainName (Maybe UTCTime)

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
domainName_distributionDomainName :: Lens' DomainName (Maybe Text)

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
domainName_domainNameStatusMessage :: Lens' DomainName (Maybe Text)

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
domainName_endpointConfiguration :: Lens' DomainName (Maybe EndpointConfiguration)

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
domainName_domainNameStatus :: Lens' DomainName (Maybe DomainNameStatus)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
domainName_tags :: Lens' DomainName (Maybe (HashMap Text Text))

-- | The endpoint configuration to indicate the types of endpoints an API
--   (RestApi) or its custom domain name (DomainName) has.
--   
--   <i>See:</i> <a>newEndpointConfiguration</a> smart constructor.
data EndpointConfiguration
EndpointConfiguration' :: Maybe [EndpointType] -> Maybe [Text] -> EndpointConfiguration

-- | A list of endpoint types of an API (RestApi) or its custom domain name
--   (DomainName). For an edge-optimized API and its custom domain name,
--   the endpoint type is <tt>"EDGE"</tt>. For a regional API and its
--   custom domain name, the endpoint type is <tt>REGIONAL</tt>. For a
--   private API, the endpoint type is <tt>PRIVATE</tt>.
[$sel:types:EndpointConfiguration'] :: EndpointConfiguration -> Maybe [EndpointType]

-- | A list of VpcEndpointIds of an API (RestApi) against which to create
--   Route53 ALIASes. It is only supported for <tt>PRIVATE</tt> endpoint
--   type.
[$sel:vpcEndpointIds:EndpointConfiguration'] :: EndpointConfiguration -> Maybe [Text]

-- | Create a value of <a>EndpointConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:types:EndpointConfiguration'</a>,
--   <a>endpointConfiguration_types</a> - A list of endpoint types of an
--   API (RestApi) or its custom domain name (DomainName). For an
--   edge-optimized API and its custom domain name, the endpoint type is
--   <tt>"EDGE"</tt>. For a regional API and its custom domain name, the
--   endpoint type is <tt>REGIONAL</tt>. For a private API, the endpoint
--   type is <tt>PRIVATE</tt>.
--   
--   <a>$sel:vpcEndpointIds:EndpointConfiguration'</a>,
--   <a>endpointConfiguration_vpcEndpointIds</a> - A list of VpcEndpointIds
--   of an API (RestApi) against which to create Route53 ALIASes. It is
--   only supported for <tt>PRIVATE</tt> endpoint type.
newEndpointConfiguration :: EndpointConfiguration

-- | A list of endpoint types of an API (RestApi) or its custom domain name
--   (DomainName). For an edge-optimized API and its custom domain name,
--   the endpoint type is <tt>"EDGE"</tt>. For a regional API and its
--   custom domain name, the endpoint type is <tt>REGIONAL</tt>. For a
--   private API, the endpoint type is <tt>PRIVATE</tt>.
endpointConfiguration_types :: Lens' EndpointConfiguration (Maybe [EndpointType])

-- | A list of VpcEndpointIds of an API (RestApi) against which to create
--   Route53 ALIASes. It is only supported for <tt>PRIVATE</tt> endpoint
--   type.
endpointConfiguration_vpcEndpointIds :: Lens' EndpointConfiguration (Maybe [Text])

-- | A gateway response of a given response type and status code, with
--   optional response parameters and mapping templates.
--   
--   For more information about valid gateway response types, see
--   <a>Gateway Response Types Supported by API Gateway</a>
--   
--   <h4>Example: Get a Gateway Response of a given response type</h4>
--   
--   <h5>Request</h5>
--   
--   This example shows how to get a gateway response of the
--   <tt>MISSING_AUTHENTICATION_TOKEN</tt> type.
--   
--   <pre>
--   GET /restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T202516Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=1b52460e3159c1a26cff29093855d50ea141c1c5b937528fecaf60f51129697a Cache-Control: no-cache Postman-Token: 3b2a1ce9-c848-2e26-2e2f-9c2caefbed45
--   </pre>
--   
--   The response type is specified as a URL path.
--   
--   <h5>Response</h5>
--   
--   The successful operation returns the <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:delete": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": false, "responseParameters": { "gatewayresponse.header.x-request-path": "method.request.path.petId", "gatewayresponse.header.Access-Control-Allow-Origin": "'a.b.c'", "gatewayresponse.header.x-request-query": "method.request.querystring.q", "gatewayresponse.header.x-request-header": "method.request.header.Accept" }, "responseTemplates": { "application/json": "{\n \"message\": $context.error.messageString,\n \"type\": \"$context.error.responseType\",\n \"stage\": \"$context.stage\",\n \"resourcePath\": \"$context.resourcePath\",\n \"stageVariables.a\": \"$stageVariables.a\",\n \"statusCode\": \"'404'\"\n}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "404" }
--   </pre>
--   
--   <a>Customize Gateway Responses</a>
--   
--   <i>See:</i> <a>newGatewayResponse</a> smart constructor.
data GatewayResponse
GatewayResponse' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe GatewayResponseType -> Maybe Text -> Maybe (HashMap Text Text) -> GatewayResponse

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
[$sel:defaultResponse:GatewayResponse'] :: GatewayResponse -> Maybe Bool

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
[$sel:responseTemplates:GatewayResponse'] :: GatewayResponse -> Maybe (HashMap Text Text)

-- | The response type of the associated GatewayResponse.
[$sel:responseType:GatewayResponse'] :: GatewayResponse -> Maybe GatewayResponseType

-- | The HTTP status code for this GatewayResponse.
[$sel:statusCode:GatewayResponse'] :: GatewayResponse -> Maybe Text

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
[$sel:responseParameters:GatewayResponse'] :: GatewayResponse -> Maybe (HashMap Text Text)

-- | Create a value of <a>GatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultResponse:GatewayResponse'</a>,
--   <a>gatewayResponse_defaultResponse</a> - A Boolean flag to indicate
--   whether this GatewayResponse is the default gateway response
--   (<tt>true</tt>) or not (<tt>false</tt>). A default gateway response is
--   one generated by API Gateway without any customization by an API
--   developer.
--   
--   <a>$sel:responseTemplates:GatewayResponse'</a>,
--   <a>gatewayResponse_responseTemplates</a> - Response templates of the
--   GatewayResponse as a string-to-string map of key-value pairs.
--   
--   <a>$sel:responseType:GatewayResponse'</a>,
--   <a>gatewayResponse_responseType</a> - The response type of the
--   associated GatewayResponse.
--   
--   <a>$sel:statusCode:GatewayResponse'</a>,
--   <a>gatewayResponse_statusCode</a> - The HTTP status code for this
--   GatewayResponse.
--   
--   <a>$sel:responseParameters:GatewayResponse'</a>,
--   <a>gatewayResponse_responseParameters</a> - Response parameters
--   (paths, query strings and headers) of the GatewayResponse as a
--   string-to-string map of key-value pairs.
newGatewayResponse :: GatewayResponse

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
gatewayResponse_defaultResponse :: Lens' GatewayResponse (Maybe Bool)

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
gatewayResponse_responseTemplates :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | The response type of the associated GatewayResponse.
gatewayResponse_responseType :: Lens' GatewayResponse (Maybe GatewayResponseType)

-- | The HTTP status code for this GatewayResponse.
gatewayResponse_statusCode :: Lens' GatewayResponse (Maybe Text)

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
gatewayResponse_responseParameters :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.
--   
--   In the API Gateway console, the built-in Lambda integration is an AWS
--   integration.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegration</a> smart constructor.
data Integration
Integration' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe Text -> Maybe (HashMap Text IntegrationResponse) -> Maybe TlsConfig -> Maybe Text -> Maybe Int -> Maybe IntegrationType -> Maybe ConnectionType -> Maybe [Text] -> Integration

-- | Specifies the integration's HTTP method type.
[$sel:httpMethod:Integration'] :: Integration -> Maybe Text

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
[$sel:requestTemplates:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
[$sel:credentials:Integration'] :: Integration -> Maybe Text

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
[$sel:connectionId:Integration'] :: Integration -> Maybe Text

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
[$sel:requestParameters:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
[$sel:contentHandling:Integration'] :: Integration -> Maybe ContentHandlingStrategy

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
[$sel:passthroughBehavior:Integration'] :: Integration -> Maybe Text

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
[$sel:uri:Integration'] :: Integration -> Maybe Text

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
[$sel:integrationResponses:Integration'] :: Integration -> Maybe (HashMap Text IntegrationResponse)

-- | Specifies the TLS configuration for an integration.
[$sel:tlsConfig:Integration'] :: Integration -> Maybe TlsConfig

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
[$sel:cacheNamespace:Integration'] :: Integration -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
[$sel:timeoutInMillis:Integration'] :: Integration -> Maybe Int

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
[$sel:type':Integration'] :: Integration -> Maybe IntegrationType

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
[$sel:connectionType:Integration'] :: Integration -> Maybe ConnectionType

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
[$sel:cacheKeyParameters:Integration'] :: Integration -> Maybe [Text]

-- | Create a value of <a>Integration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:Integration'</a>, <a>integration_httpMethod</a> -
--   Specifies the integration's HTTP method type.
--   
--   <a>$sel:requestTemplates:Integration'</a>,
--   <a>integration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   
--   <a>$sel:credentials:Integration'</a>, <a>integration_credentials</a> -
--   Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
--   
--   <a>$sel:connectionId:Integration'</a>, <a>integration_connectionId</a>
--   - The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
--   
--   <a>$sel:requestParameters:Integration'</a>,
--   <a>integration_requestParameters</a> - A key-value map specifying
--   request parameters that are passed from the method request to the back
--   end. The key is an integration request parameter name and the
--   associated value is a method request parameter value or static value
--   that must be enclosed within single quotes and pre-encoded as required
--   by the back end. The method request parameter value must match the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> must be a valid and unique method
--   request parameter name.
--   
--   <a>$sel:contentHandling:Integration'</a>,
--   <a>integration_contentHandling</a> - Specifies how to handle request
--   payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
--   
--   <a>$sel:passthroughBehavior:Integration'</a>,
--   <a>integration_passthroughBehavior</a> - Specifies how the method
--   request body of an unmapped content type will be passed through the
--   integration request to the back end without transformation. A content
--   type is unmapped if no mapping template is defined in the integration
--   or the content type does not match any of the mapped content types, as
--   specified in <tt>requestTemplates</tt>. The valid value is one of the
--   following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
--   
--   <a>$sel:uri:Integration'</a>, <a>integration_uri</a> - Specifies
--   Uniform Resource Identifier (URI) of the integration endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
--   
--   <a>$sel:integrationResponses:Integration'</a>,
--   <a>integration_integrationResponses</a> - Specifies the integration's
--   responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
--   
--   <a>$sel:tlsConfig:Integration'</a>, <a>integration_tlsConfig</a> -
--   Specifies the TLS configuration for an integration.
--   
--   <a>$sel:cacheNamespace:Integration'</a>,
--   <a>integration_cacheNamespace</a> - Specifies a group of related
--   cached parameters. By default, API Gateway uses the resource ID as the
--   <tt>cacheNamespace</tt>. You can specify the same
--   <tt>cacheNamespace</tt> across resources to return the same cached
--   data for requests to different resources.
--   
--   <a>$sel:timeoutInMillis:Integration'</a>,
--   <a>integration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds. The default value is 29,000 milliseconds or 29
--   seconds.
--   
--   <a>$sel:type':Integration'</a>, <a>integration_type</a> - Specifies an
--   API method integration type. The valid value is one of the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
--   
--   <a>$sel:connectionType:Integration'</a>,
--   <a>integration_connectionType</a> - The type of the network connection
--   to the integration endpoint. The valid value is <tt>INTERNET</tt> for
--   connections through the public routable internet or <tt>VPC_LINK</tt>
--   for private connections between API Gateway and a network load
--   balancer in a VPC. The default value is <tt>INTERNET</tt>.
--   
--   <a>$sel:cacheKeyParameters:Integration'</a>,
--   <a>integration_cacheKeyParameters</a> - A list of request parameters
--   whose values API Gateway caches. To be valid values for
--   <tt>cacheKeyParameters</tt>, these parameters must also be specified
--   for Method <tt>requestParameters</tt>.
newIntegration :: Integration

-- | Specifies the integration's HTTP method type.
integration_httpMethod :: Lens' Integration (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
integration_requestTemplates :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
integration_credentials :: Lens' Integration (Maybe Text)

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
integration_connectionId :: Lens' Integration (Maybe Text)

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
integration_requestParameters :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
integration_contentHandling :: Lens' Integration (Maybe ContentHandlingStrategy)

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
integration_passthroughBehavior :: Lens' Integration (Maybe Text)

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
integration_uri :: Lens' Integration (Maybe Text)

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
integration_integrationResponses :: Lens' Integration (Maybe (HashMap Text IntegrationResponse))

-- | Specifies the TLS configuration for an integration.
integration_tlsConfig :: Lens' Integration (Maybe TlsConfig)

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
integration_cacheNamespace :: Lens' Integration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
integration_timeoutInMillis :: Lens' Integration (Maybe Int)

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
integration_type :: Lens' Integration (Maybe IntegrationType)

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
integration_connectionType :: Lens' Integration (Maybe ConnectionType)

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
integration_cacheKeyParameters :: Lens' Integration (Maybe [Text])

-- | Represents an integration response. The status code must map to an
--   existing MethodResponse, and parameters and templates can be used to
--   transform the back-end response.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegrationResponse</a> smart constructor.
data IntegrationResponse
IntegrationResponse' :: Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> IntegrationResponse

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
[$sel:contentHandling:IntegrationResponse'] :: IntegrationResponse -> Maybe ContentHandlingStrategy

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
[$sel:responseTemplates:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
[$sel:selectionPattern:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
[$sel:statusCode:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
[$sel:responseParameters:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | Create a value of <a>IntegrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentHandling:IntegrationResponse'</a>,
--   <a>integrationResponse_contentHandling</a> - Specifies how to handle
--   response payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
--   
--   <a>$sel:responseTemplates:IntegrationResponse'</a>,
--   <a>integrationResponse_responseTemplates</a> - Specifies the templates
--   used to transform the integration response body. Response templates
--   are represented as a key/value map, with a content-type as the key and
--   a template as the value.
--   
--   <a>$sel:selectionPattern:IntegrationResponse'</a>,
--   <a>integrationResponse_selectionPattern</a> - Specifies the regular
--   expression (regex) pattern used to choose an integration response
--   based on the response from the back end. For example, if the success
--   response returns nothing and the error response returns some string,
--   you could use the <tt>.+</tt> regex to match error response. However,
--   make sure that the error response does not contain any newline
--   (<tt>\n</tt>) character in such cases. If the back end is an AWS
--   Lambda function, the AWS Lambda function error header is matched. For
--   all other HTTP and AWS back ends, the HTTP status code is matched.
--   
--   <a>$sel:statusCode:IntegrationResponse'</a>,
--   <a>integrationResponse_statusCode</a> - Specifies the status code that
--   is used to map the integration response to an existing MethodResponse.
--   
--   <a>$sel:responseParameters:IntegrationResponse'</a>,
--   <a>integrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the back end. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of <tt>method.response.header.{name}</tt>, where <tt>name</tt>
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
newIntegrationResponse :: IntegrationResponse

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
integrationResponse_contentHandling :: Lens' IntegrationResponse (Maybe ContentHandlingStrategy)

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
integrationResponse_responseTemplates :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
integrationResponse_selectionPattern :: Lens' IntegrationResponse (Maybe Text)

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
integrationResponse_statusCode :: Lens' IntegrationResponse (Maybe Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
integrationResponse_responseParameters :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | Represents a client-facing interface by which the client calls the API
--   to access back-end resources. A <b>Method</b> resource is integrated
--   with an Integration resource. Both consist of a request and one or
--   more responses. The method request takes the client input that is
--   passed to the back end through the integration request. A method
--   response returns the output from the back end to the client through an
--   integration response. A method request is embodied in a <b>Method</b>
--   resource, whereas an integration request is embodied in an Integration
--   resource. On the other hand, a method response is represented by a
--   MethodResponse resource, whereas an integration response is
--   represented by an IntegrationResponse resource.
--   
--   <h4>Example: Retrive the GET method on a specified resource</h4>
--   
--   <h5>Request</h5>
--   
--   The following example request retrieves the information about the GET
--   method on an API resource (<tt>3kzxbg5sa2</tt>) of an API
--   (<tt>fugvjdxtri</tt>).
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T210259Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": true, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\")" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   In the example above, the response template for the <tt>200 OK</tt>
--   response maps the JSON output from the <tt>ListStreams</tt> action in
--   the back end to an XML output. The mapping template is URL-encoded as
--   <tt>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</tt>
--   and the output is decoded using the <a>$util.urlDecode()</a> helper
--   function.
--   
--   MethodResponse, Integration, IntegrationResponse, Resource, <a>Set up
--   an API's method</a>
--   
--   <i>See:</i> <a>newMethod</a> smart constructor.
data Method
Method' :: Maybe (HashMap Text MethodResponse) -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Integration -> Method

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
[$sel:methodResponses:Method'] :: Method -> Maybe (HashMap Text MethodResponse)

-- | The method's HTTP verb.
[$sel:httpMethod:Method'] :: Method -> Maybe Text

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
[$sel:authorizationScopes:Method'] :: Method -> Maybe [Text]

-- | The identifier of a RequestValidator for request validation.
[$sel:requestValidatorId:Method'] :: Method -> Maybe Text

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
[$sel:requestModels:Method'] :: Method -> Maybe (HashMap Text Text)

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
[$sel:requestParameters:Method'] :: Method -> Maybe (HashMap Text Bool)

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
[$sel:authorizerId:Method'] :: Method -> Maybe Text

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
[$sel:operationName:Method'] :: Method -> Maybe Text

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
[$sel:authorizationType:Method'] :: Method -> Maybe Text

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
[$sel:apiKeyRequired:Method'] :: Method -> Maybe Bool

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
[$sel:methodIntegration:Method'] :: Method -> Maybe Integration

-- | Create a value of <a>Method</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodResponses:Method'</a>, <a>method_methodResponses</a> -
--   Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
--   
--   <a>$sel:httpMethod:Method'</a>, <a>method_httpMethod</a> - The
--   method's HTTP verb.
--   
--   <a>$sel:authorizationScopes:Method'</a>,
--   <a>method_authorizationScopes</a> - A list of authorization scopes
--   configured on the method. The scopes are used with a
--   <tt>COGNITO_USER_POOLS</tt> authorizer to authorize the method
--   invocation. The authorization works by matching the method scopes
--   against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:requestValidatorId:Method'</a>,
--   <a>method_requestValidatorId</a> - The identifier of a
--   RequestValidator for request validation.
--   
--   <a>$sel:requestModels:Method'</a>, <a>method_requestModels</a> - A
--   key-value map specifying data schemas, represented by Model resources,
--   (as the mapped value) of the request payloads of given content types
--   (as the mapping key).
--   
--   <a>$sel:requestParameters:Method'</a>, <a>method_requestParameters</a>
--   - A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
--   
--   <a>$sel:authorizerId:Method'</a>, <a>method_authorizerId</a> - The
--   identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
--   
--   <a>$sel:operationName:Method'</a>, <a>method_operationName</a> - A
--   human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
--   
--   <a>$sel:authorizationType:Method'</a>, <a>method_authorizationType</a>
--   - The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
--   
--   <a>$sel:apiKeyRequired:Method'</a>, <a>method_apiKeyRequired</a> - A
--   boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
--   
--   <a>$sel:methodIntegration:Method'</a>, <a>method_methodIntegration</a>
--   - Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
newMethod :: Method

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodResponses :: Lens' Method (Maybe (HashMap Text MethodResponse))

-- | The method's HTTP verb.
method_httpMethod :: Lens' Method (Maybe Text)

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
method_authorizationScopes :: Lens' Method (Maybe [Text])

-- | The identifier of a RequestValidator for request validation.
method_requestValidatorId :: Lens' Method (Maybe Text)

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
method_requestModels :: Lens' Method (Maybe (HashMap Text Text))

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
method_requestParameters :: Lens' Method (Maybe (HashMap Text Bool))

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
method_authorizerId :: Lens' Method (Maybe Text)

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
method_operationName :: Lens' Method (Maybe Text)

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
method_authorizationType :: Lens' Method (Maybe Text)

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
method_apiKeyRequired :: Lens' Method (Maybe Bool)

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodIntegration :: Lens' Method (Maybe Integration)

-- | Represents a method response of a given HTTP status code returned to
--   the client. The method response is passed from the back end through
--   the associated integration response that can be transformed using a
--   mapping template.
--   
--   <h4>Example: A <b>MethodResponse</b> instance of an API</h4>
--   
--   <h5>Request</h5>
--   
--   The example request retrieves a <b>MethodResponse</b> of the 200
--   status code.
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T222952Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" }
--   </pre>
--   
--   Method, IntegrationResponse, Integration <a>Creating an API</a>
--   
--   <i>See:</i> <a>newMethodResponse</a> smart constructor.
data MethodResponse
MethodResponse' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Bool) -> MethodResponse

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
[$sel:responseModels:MethodResponse'] :: MethodResponse -> Maybe (HashMap Text Text)

-- | The method response's status code.
[$sel:statusCode:MethodResponse'] :: MethodResponse -> Maybe Text

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
[$sel:responseParameters:MethodResponse'] :: MethodResponse -> Maybe (HashMap Text Bool)

-- | Create a value of <a>MethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseModels:MethodResponse'</a>,
--   <a>methodResponse_responseModels</a> - Specifies the Model resources
--   used for the response's content-type. Response models are represented
--   as a key/value map, with a content-type as the key and a Model name as
--   the value.
--   
--   <a>$sel:statusCode:MethodResponse'</a>,
--   <a>methodResponse_statusCode</a> - The method response's status code.
--   
--   <a>$sel:responseParameters:MethodResponse'</a>,
--   <a>methodResponse_responseParameters</a> - A key-value map specifying
--   required or optional response parameters that API Gateway can send
--   back to the caller. A key defines a method response header and the
--   value specifies whether the associated method response header is
--   required or not. The expression of the key must match the pattern
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. API Gateway passes certain integration
--   response data to the method response headers specified here according
--   to the mapping you prescribe in the API's IntegrationResponse. The
--   integration response data that can be mapped include an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
newMethodResponse :: MethodResponse

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
methodResponse_responseModels :: Lens' MethodResponse (Maybe (HashMap Text Text))

-- | The method response's status code.
methodResponse_statusCode :: Lens' MethodResponse (Maybe Text)

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
methodResponse_responseParameters :: Lens' MethodResponse (Maybe (HashMap Text Bool))

-- | Specifies the method setting properties.
--   
--   <i>See:</i> <a>newMethodSetting</a> smart constructor.
data MethodSetting
MethodSetting' :: Maybe Int -> Maybe Bool -> Maybe Int -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Double -> Maybe UnauthorizedCacheControlHeaderStrategy -> MethodSetting

-- | Specifies the time to live (TTL), in seconds, for cached responses.
--   The higher the TTL, the longer the response will be cached. The PATCH
--   path for this setting is
--   <tt>/{method_setting_key}/caching/ttlInSeconds</tt>, and the value is
--   an integer.
[$sel:cacheTtlInSeconds:MethodSetting'] :: MethodSetting -> Maybe Int

-- | Specifies whether data trace logging is enabled for this method, which
--   affects the log entries pushed to Amazon CloudWatch Logs. The PATCH
--   path for this setting is
--   <tt>/{method_setting_key}/logging/dataTrace</tt>, and the value is a
--   Boolean.
[$sel:dataTraceEnabled:MethodSetting'] :: MethodSetting -> Maybe Bool

-- | Specifies the throttling burst limit. The PATCH path for this setting
--   is <tt>/{method_setting_key}/throttling/burstLimit</tt>, and the value
--   is an integer.
[$sel:throttlingBurstLimit:MethodSetting'] :: MethodSetting -> Maybe Int

-- | Specifies whether the cached responses are encrypted. The PATCH path
--   for this setting is
--   <tt>/{method_setting_key}/caching/dataEncrypted</tt>, and the value is
--   a Boolean.
[$sel:cacheDataEncrypted:MethodSetting'] :: MethodSetting -> Maybe Bool

-- | Specifies the logging level for this method, which affects the log
--   entries pushed to Amazon CloudWatch Logs. The PATCH path for this
--   setting is <tt>/{method_setting_key}/logging/loglevel</tt>, and the
--   available levels are <tt>OFF</tt>, <tt>ERROR</tt>, and <tt>INFO</tt>.
--   Choose <tt>ERROR</tt> to write only error-level entries to CloudWatch
--   Logs, or choose <tt>INFO</tt> to include all <tt>ERROR</tt> events as
--   well as extra informational events.
[$sel:loggingLevel:MethodSetting'] :: MethodSetting -> Maybe Text

-- | Specifies whether authorization is required for a cache invalidation
--   request. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/requireAuthorizationForCacheControl</tt>,
--   and the value is a Boolean.
[$sel:requireAuthorizationForCacheControl:MethodSetting'] :: MethodSetting -> Maybe Bool

-- | Specifies whether responses should be cached and returned for
--   requests. A cache cluster must be enabled on the stage for responses
--   to be cached. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/enabled</tt>, and the value is a
--   Boolean.
[$sel:cachingEnabled:MethodSetting'] :: MethodSetting -> Maybe Bool

-- | Specifies whether Amazon CloudWatch metrics are enabled for this
--   method. The PATCH path for this setting is
--   <tt>/{method_setting_key}/metrics/enabled</tt>, and the value is a
--   Boolean.
[$sel:metricsEnabled:MethodSetting'] :: MethodSetting -> Maybe Bool

-- | Specifies the throttling rate limit. The PATCH path for this setting
--   is <tt>/{method_setting_key}/throttling/rateLimit</tt>, and the value
--   is a double.
[$sel:throttlingRateLimit:MethodSetting'] :: MethodSetting -> Maybe Double

-- | Specifies how to handle unauthorized requests for cache invalidation.
--   The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/unauthorizedCacheControlHeaderStrategy</tt>,
--   and the available values are <tt>FAIL_WITH_403</tt>,
--   <tt>SUCCEED_WITH_RESPONSE_HEADER</tt>,
--   <tt>SUCCEED_WITHOUT_RESPONSE_HEADER</tt>.
[$sel:unauthorizedCacheControlHeaderStrategy:MethodSetting'] :: MethodSetting -> Maybe UnauthorizedCacheControlHeaderStrategy

-- | Create a value of <a>MethodSetting</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheTtlInSeconds:MethodSetting'</a>,
--   <a>methodSetting_cacheTtlInSeconds</a> - Specifies the time to live
--   (TTL), in seconds, for cached responses. The higher the TTL, the
--   longer the response will be cached. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/ttlInSeconds</tt>, and the value is
--   an integer.
--   
--   <a>$sel:dataTraceEnabled:MethodSetting'</a>,
--   <a>methodSetting_dataTraceEnabled</a> - Specifies whether data trace
--   logging is enabled for this method, which affects the log entries
--   pushed to Amazon CloudWatch Logs. The PATCH path for this setting is
--   <tt>/{method_setting_key}/logging/dataTrace</tt>, and the value is a
--   Boolean.
--   
--   <a>$sel:throttlingBurstLimit:MethodSetting'</a>,
--   <a>methodSetting_throttlingBurstLimit</a> - Specifies the throttling
--   burst limit. The PATCH path for this setting is
--   <tt>/{method_setting_key}/throttling/burstLimit</tt>, and the value is
--   an integer.
--   
--   <a>$sel:cacheDataEncrypted:MethodSetting'</a>,
--   <a>methodSetting_cacheDataEncrypted</a> - Specifies whether the cached
--   responses are encrypted. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/dataEncrypted</tt>, and the value is
--   a Boolean.
--   
--   <a>$sel:loggingLevel:MethodSetting'</a>,
--   <a>methodSetting_loggingLevel</a> - Specifies the logging level for
--   this method, which affects the log entries pushed to Amazon CloudWatch
--   Logs. The PATCH path for this setting is
--   <tt>/{method_setting_key}/logging/loglevel</tt>, and the available
--   levels are <tt>OFF</tt>, <tt>ERROR</tt>, and <tt>INFO</tt>. Choose
--   <tt>ERROR</tt> to write only error-level entries to CloudWatch Logs,
--   or choose <tt>INFO</tt> to include all <tt>ERROR</tt> events as well
--   as extra informational events.
--   
--   <a>$sel:requireAuthorizationForCacheControl:MethodSetting'</a>,
--   <a>methodSetting_requireAuthorizationForCacheControl</a> - Specifies
--   whether authorization is required for a cache invalidation request.
--   The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/requireAuthorizationForCacheControl</tt>,
--   and the value is a Boolean.
--   
--   <a>$sel:cachingEnabled:MethodSetting'</a>,
--   <a>methodSetting_cachingEnabled</a> - Specifies whether responses
--   should be cached and returned for requests. A cache cluster must be
--   enabled on the stage for responses to be cached. The PATCH path for
--   this setting is <tt>/{method_setting_key}/caching/enabled</tt>, and
--   the value is a Boolean.
--   
--   <a>$sel:metricsEnabled:MethodSetting'</a>,
--   <a>methodSetting_metricsEnabled</a> - Specifies whether Amazon
--   CloudWatch metrics are enabled for this method. The PATCH path for
--   this setting is <tt>/{method_setting_key}/metrics/enabled</tt>, and
--   the value is a Boolean.
--   
--   <a>$sel:throttlingRateLimit:MethodSetting'</a>,
--   <a>methodSetting_throttlingRateLimit</a> - Specifies the throttling
--   rate limit. The PATCH path for this setting is
--   <tt>/{method_setting_key}/throttling/rateLimit</tt>, and the value is
--   a double.
--   
--   <a>$sel:unauthorizedCacheControlHeaderStrategy:MethodSetting'</a>,
--   <a>methodSetting_unauthorizedCacheControlHeaderStrategy</a> -
--   Specifies how to handle unauthorized requests for cache invalidation.
--   The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/unauthorizedCacheControlHeaderStrategy</tt>,
--   and the available values are <tt>FAIL_WITH_403</tt>,
--   <tt>SUCCEED_WITH_RESPONSE_HEADER</tt>,
--   <tt>SUCCEED_WITHOUT_RESPONSE_HEADER</tt>.
newMethodSetting :: MethodSetting

-- | Specifies the time to live (TTL), in seconds, for cached responses.
--   The higher the TTL, the longer the response will be cached. The PATCH
--   path for this setting is
--   <tt>/{method_setting_key}/caching/ttlInSeconds</tt>, and the value is
--   an integer.
methodSetting_cacheTtlInSeconds :: Lens' MethodSetting (Maybe Int)

-- | Specifies whether data trace logging is enabled for this method, which
--   affects the log entries pushed to Amazon CloudWatch Logs. The PATCH
--   path for this setting is
--   <tt>/{method_setting_key}/logging/dataTrace</tt>, and the value is a
--   Boolean.
methodSetting_dataTraceEnabled :: Lens' MethodSetting (Maybe Bool)

-- | Specifies the throttling burst limit. The PATCH path for this setting
--   is <tt>/{method_setting_key}/throttling/burstLimit</tt>, and the value
--   is an integer.
methodSetting_throttlingBurstLimit :: Lens' MethodSetting (Maybe Int)

-- | Specifies whether the cached responses are encrypted. The PATCH path
--   for this setting is
--   <tt>/{method_setting_key}/caching/dataEncrypted</tt>, and the value is
--   a Boolean.
methodSetting_cacheDataEncrypted :: Lens' MethodSetting (Maybe Bool)

-- | Specifies the logging level for this method, which affects the log
--   entries pushed to Amazon CloudWatch Logs. The PATCH path for this
--   setting is <tt>/{method_setting_key}/logging/loglevel</tt>, and the
--   available levels are <tt>OFF</tt>, <tt>ERROR</tt>, and <tt>INFO</tt>.
--   Choose <tt>ERROR</tt> to write only error-level entries to CloudWatch
--   Logs, or choose <tt>INFO</tt> to include all <tt>ERROR</tt> events as
--   well as extra informational events.
methodSetting_loggingLevel :: Lens' MethodSetting (Maybe Text)

-- | Specifies whether authorization is required for a cache invalidation
--   request. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/requireAuthorizationForCacheControl</tt>,
--   and the value is a Boolean.
methodSetting_requireAuthorizationForCacheControl :: Lens' MethodSetting (Maybe Bool)

-- | Specifies whether responses should be cached and returned for
--   requests. A cache cluster must be enabled on the stage for responses
--   to be cached. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/enabled</tt>, and the value is a
--   Boolean.
methodSetting_cachingEnabled :: Lens' MethodSetting (Maybe Bool)

-- | Specifies whether Amazon CloudWatch metrics are enabled for this
--   method. The PATCH path for this setting is
--   <tt>/{method_setting_key}/metrics/enabled</tt>, and the value is a
--   Boolean.
methodSetting_metricsEnabled :: Lens' MethodSetting (Maybe Bool)

-- | Specifies the throttling rate limit. The PATCH path for this setting
--   is <tt>/{method_setting_key}/throttling/rateLimit</tt>, and the value
--   is a double.
methodSetting_throttlingRateLimit :: Lens' MethodSetting (Maybe Double)

-- | Specifies how to handle unauthorized requests for cache invalidation.
--   The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/unauthorizedCacheControlHeaderStrategy</tt>,
--   and the available values are <tt>FAIL_WITH_403</tt>,
--   <tt>SUCCEED_WITH_RESPONSE_HEADER</tt>,
--   <tt>SUCCEED_WITHOUT_RESPONSE_HEADER</tt>.
methodSetting_unauthorizedCacheControlHeaderStrategy :: Lens' MethodSetting (Maybe UnauthorizedCacheControlHeaderStrategy)

-- | Represents a summary of a Method resource, given a particular date and
--   time.
--   
--   <i>See:</i> <a>newMethodSnapshot</a> smart constructor.
data MethodSnapshot
MethodSnapshot' :: Maybe Text -> Maybe Bool -> MethodSnapshot

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
[$sel:authorizationType:MethodSnapshot'] :: MethodSnapshot -> Maybe Text

-- | Specifies whether the method requires a valid ApiKey.
[$sel:apiKeyRequired:MethodSnapshot'] :: MethodSnapshot -> Maybe Bool

-- | Create a value of <a>MethodSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationType:MethodSnapshot'</a>,
--   <a>methodSnapshot_authorizationType</a> - The method's authorization
--   type. Valid values are <tt>NONE</tt> for open access, <tt>AWS_IAM</tt>
--   for using AWS IAM permissions, <tt>CUSTOM</tt> for using a custom
--   authorizer, or <tt>COGNITO_USER_POOLS</tt> for using a Cognito user
--   pool.
--   
--   <a>$sel:apiKeyRequired:MethodSnapshot'</a>,
--   <a>methodSnapshot_apiKeyRequired</a> - Specifies whether the method
--   requires a valid ApiKey.
newMethodSnapshot :: MethodSnapshot

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
methodSnapshot_authorizationType :: Lens' MethodSnapshot (Maybe Text)

-- | Specifies whether the method requires a valid ApiKey.
methodSnapshot_apiKeyRequired :: Lens' MethodSnapshot (Maybe Bool)

-- | Represents the data structure of a method's request or response
--   payload.
--   
--   A request model defines the data structure of the client-supplied
--   request payload. A response model defines the data structure of the
--   response payload returned by the back end. Although not required,
--   models are useful for mapping payloads between the front end and back
--   end.
--   
--   A model is used for generating an API's SDK, validating the input
--   request body, and creating a skeletal mapping template.
--   
--   Method, MethodResponse, <a>Models and Mappings</a>
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Model

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
[$sel:schema:Model'] :: Model -> Maybe Text

-- | The name of the model. Must be an alphanumeric string.
[$sel:name:Model'] :: Model -> Maybe Text

-- | The identifier for the model resource.
[$sel:id:Model'] :: Model -> Maybe Text

-- | The description of the model.
[$sel:description:Model'] :: Model -> Maybe Text

-- | The content-type for the model.
[$sel:contentType:Model'] :: Model -> Maybe Text

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:Model'</a>, <a>model_schema</a> - The schema for the
--   model. For <tt>application/json</tt> models, this should be <a>JSON
--   schema draft 4</a> model. Do not include "\*/" characters in the
--   description of any properties because such "\*/" characters may be
--   interpreted as the closing marker for comments in some languages, such
--   as Java or JavaScript, causing the installation of your API's SDK
--   generated by API Gateway to fail.
--   
--   <a>$sel:name:Model'</a>, <a>model_name</a> - The name of the model.
--   Must be an alphanumeric string.
--   
--   <a>$sel:id:Model'</a>, <a>model_id</a> - The identifier for the model
--   resource.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The
--   description of the model.
--   
--   <a>$sel:contentType:Model'</a>, <a>model_contentType</a> - The
--   content-type for the model.
newModel :: Model

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
model_schema :: Lens' Model (Maybe Text)

-- | The name of the model. Must be an alphanumeric string.
model_name :: Lens' Model (Maybe Text)

-- | The identifier for the model resource.
model_id :: Lens' Model (Maybe Text)

-- | The description of the model.
model_description :: Lens' Model (Maybe Text)

-- | The content-type for the model.
model_contentType :: Lens' Model (Maybe Text)

-- | If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your custom domain name.
--   
--   <i>See:</i> <a>newMutualTlsAuthentication</a> smart constructor.
data MutualTlsAuthentication
MutualTlsAuthentication' :: Maybe [Text] -> Maybe Text -> Maybe Text -> MutualTlsAuthentication

-- | A list of warnings that API Gateway returns while processing your
--   truststore. Invalid certificates produce warnings. Mutual TLS is still
--   enabled, but some clients might not be able to access your API. To
--   resolve warnings, upload a new truststore to S3, and then update you
--   domain name to use the new version.
[$sel:truststoreWarnings:MutualTlsAuthentication'] :: MutualTlsAuthentication -> Maybe [Text]

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
[$sel:truststoreUri:MutualTlsAuthentication'] :: MutualTlsAuthentication -> Maybe Text

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
[$sel:truststoreVersion:MutualTlsAuthentication'] :: MutualTlsAuthentication -> Maybe Text

-- | Create a value of <a>MutualTlsAuthentication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:truststoreWarnings:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreWarnings</a> - A list of warnings
--   that API Gateway returns while processing your truststore. Invalid
--   certificates produce warnings. Mutual TLS is still enabled, but some
--   clients might not be able to access your API. To resolve warnings,
--   upload a new truststore to S3, and then update you domain name to use
--   the new version.
--   
--   <a>$sel:truststoreUri:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreUri</a> - An Amazon S3 URL that
--   specifies the truststore for mutual TLS authentication, for example
--   <tt>s3://bucket-name/key-name</tt>. The truststore can contain
--   certificates from public or private certificate authorities. To update
--   the truststore, upload a new version to S3, and then update your
--   custom domain name to use the new version. To update the truststore,
--   you must have permissions to access the S3 object.
--   
--   <a>$sel:truststoreVersion:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreVersion</a> - The version of the
--   S3 object that contains your truststore. To specify a version, you
--   must have versioning enabled for the S3 bucket.
newMutualTlsAuthentication :: MutualTlsAuthentication

-- | A list of warnings that API Gateway returns while processing your
--   truststore. Invalid certificates produce warnings. Mutual TLS is still
--   enabled, but some clients might not be able to access your API. To
--   resolve warnings, upload a new truststore to S3, and then update you
--   domain name to use the new version.
mutualTlsAuthentication_truststoreWarnings :: Lens' MutualTlsAuthentication (Maybe [Text])

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
mutualTlsAuthentication_truststoreUri :: Lens' MutualTlsAuthentication (Maybe Text)

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
mutualTlsAuthentication_truststoreVersion :: Lens' MutualTlsAuthentication (Maybe Text)

-- | If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your custom domain name.
--   
--   <i>See:</i> <a>newMutualTlsAuthenticationInput</a> smart constructor.
data MutualTlsAuthenticationInput
MutualTlsAuthenticationInput' :: Maybe Text -> Maybe Text -> MutualTlsAuthenticationInput

-- | An Amazon S3 resource ARN that specifies the truststore for mutual TLS
--   authentication, for example, <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
[$sel:truststoreUri:MutualTlsAuthenticationInput'] :: MutualTlsAuthenticationInput -> Maybe Text

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
[$sel:truststoreVersion:MutualTlsAuthenticationInput'] :: MutualTlsAuthenticationInput -> Maybe Text

-- | Create a value of <a>MutualTlsAuthenticationInput</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:truststoreUri:MutualTlsAuthenticationInput'</a>,
--   <a>mutualTlsAuthenticationInput_truststoreUri</a> - An Amazon S3
--   resource ARN that specifies the truststore for mutual TLS
--   authentication, for example, <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
--   
--   <a>$sel:truststoreVersion:MutualTlsAuthenticationInput'</a>,
--   <a>mutualTlsAuthenticationInput_truststoreVersion</a> - The version of
--   the S3 object that contains your truststore. To specify a version, you
--   must have versioning enabled for the S3 bucket.
newMutualTlsAuthenticationInput :: MutualTlsAuthenticationInput

-- | An Amazon S3 resource ARN that specifies the truststore for mutual TLS
--   authentication, for example, <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
mutualTlsAuthenticationInput_truststoreUri :: Lens' MutualTlsAuthenticationInput (Maybe Text)

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
mutualTlsAuthenticationInput_truststoreVersion :: Lens' MutualTlsAuthenticationInput (Maybe Text)

-- | A single patch operation to apply to the specified resource. Please
--   refer to http://tools.ietf.org/html/rfc6902#section-4 for an
--   explanation of how each operation is used.
--   
--   <i>See:</i> <a>newPatchOperation</a> smart constructor.
data PatchOperation
PatchOperation' :: Maybe Op -> Maybe Text -> Maybe Text -> Maybe Text -> PatchOperation

-- | An update operation to be performed with this PATCH request. The valid
--   value can be <tt>add</tt>, <tt>remove</tt>, <tt>replace</tt> or
--   <tt>copy</tt>. Not all valid operations are supported for a given
--   resource. Support of the operations depends on specific operational
--   contexts. Attempts to apply an unsupported operation on a resource
--   will return an error message.
[$sel:op:PatchOperation'] :: PatchOperation -> Maybe Op

-- | The <tt>op</tt> operation's target, as identified by a <a>JSON
--   Pointer</a> value that references a location within the targeted
--   resource. For example, if the target resource has an updateable
--   property of <tt>{"name":"value"}</tt>, the path for this property is
--   <tt>/name</tt>. If the <tt>name</tt> property value is a JSON object
--   (e.g., <tt>{"name": {"child/name": "child-value"}}</tt>), the path for
--   the <tt>child/name</tt> property will be <tt>/name/child~1name</tt>.
--   Any slash ("/") character appearing in path names must be escaped with
--   "~1", as shown in the example above. Each <tt>op</tt> operation can
--   have only one <tt>path</tt> associated with it.
[$sel:path:PatchOperation'] :: PatchOperation -> Maybe Text

-- | The new target value of the update operation. It is applicable for the
--   <tt>add</tt> or <tt>replace</tt> operation. When using AWS CLI to
--   update a property of a JSON value, enclose the JSON object with a pair
--   of single quotes in a Linux shell, e.g., '{"a": ...}'. In a Windows
--   shell, see <a>Using JSON for Parameters</a>.
[$sel:value:PatchOperation'] :: PatchOperation -> Maybe Text

-- | The <tt>copy</tt> update operation's source as identified by a
--   <tt>JSON-Pointer</tt> value referencing the location within the
--   targeted resource to copy the value from. For example, to promote a
--   canary deployment, you copy the canary deployment ID to the affiliated
--   deployment ID by calling a PATCH request on a Stage resource with
--   <tt>"op":"copy"</tt>, <tt>"from":"/canarySettings/deploymentId"</tt>
--   and <tt>"path":"/deploymentId"</tt>.
[$sel:from:PatchOperation'] :: PatchOperation -> Maybe Text

-- | Create a value of <a>PatchOperation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:op:PatchOperation'</a>, <a>patchOperation_op</a> - An update
--   operation to be performed with this PATCH request. The valid value can
--   be <tt>add</tt>, <tt>remove</tt>, <tt>replace</tt> or <tt>copy</tt>.
--   Not all valid operations are supported for a given resource. Support
--   of the operations depends on specific operational contexts. Attempts
--   to apply an unsupported operation on a resource will return an error
--   message.
--   
--   <a>$sel:path:PatchOperation'</a>, <a>patchOperation_path</a> - The
--   <tt>op</tt> operation's target, as identified by a <a>JSON Pointer</a>
--   value that references a location within the targeted resource. For
--   example, if the target resource has an updateable property of
--   <tt>{"name":"value"}</tt>, the path for this property is
--   <tt>/name</tt>. If the <tt>name</tt> property value is a JSON object
--   (e.g., <tt>{"name": {"child/name": "child-value"}}</tt>), the path for
--   the <tt>child/name</tt> property will be <tt>/name/child~1name</tt>.
--   Any slash ("/") character appearing in path names must be escaped with
--   "~1", as shown in the example above. Each <tt>op</tt> operation can
--   have only one <tt>path</tt> associated with it.
--   
--   <a>$sel:value:PatchOperation'</a>, <a>patchOperation_value</a> - The
--   new target value of the update operation. It is applicable for the
--   <tt>add</tt> or <tt>replace</tt> operation. When using AWS CLI to
--   update a property of a JSON value, enclose the JSON object with a pair
--   of single quotes in a Linux shell, e.g., '{"a": ...}'. In a Windows
--   shell, see <a>Using JSON for Parameters</a>.
--   
--   <a>$sel:from:PatchOperation'</a>, <a>patchOperation_from</a> - The
--   <tt>copy</tt> update operation's source as identified by a
--   <tt>JSON-Pointer</tt> value referencing the location within the
--   targeted resource to copy the value from. For example, to promote a
--   canary deployment, you copy the canary deployment ID to the affiliated
--   deployment ID by calling a PATCH request on a Stage resource with
--   <tt>"op":"copy"</tt>, <tt>"from":"/canarySettings/deploymentId"</tt>
--   and <tt>"path":"/deploymentId"</tt>.
newPatchOperation :: PatchOperation

-- | An update operation to be performed with this PATCH request. The valid
--   value can be <tt>add</tt>, <tt>remove</tt>, <tt>replace</tt> or
--   <tt>copy</tt>. Not all valid operations are supported for a given
--   resource. Support of the operations depends on specific operational
--   contexts. Attempts to apply an unsupported operation on a resource
--   will return an error message.
patchOperation_op :: Lens' PatchOperation (Maybe Op)

-- | The <tt>op</tt> operation's target, as identified by a <a>JSON
--   Pointer</a> value that references a location within the targeted
--   resource. For example, if the target resource has an updateable
--   property of <tt>{"name":"value"}</tt>, the path for this property is
--   <tt>/name</tt>. If the <tt>name</tt> property value is a JSON object
--   (e.g., <tt>{"name": {"child/name": "child-value"}}</tt>), the path for
--   the <tt>child/name</tt> property will be <tt>/name/child~1name</tt>.
--   Any slash ("/") character appearing in path names must be escaped with
--   "~1", as shown in the example above. Each <tt>op</tt> operation can
--   have only one <tt>path</tt> associated with it.
patchOperation_path :: Lens' PatchOperation (Maybe Text)

-- | The new target value of the update operation. It is applicable for the
--   <tt>add</tt> or <tt>replace</tt> operation. When using AWS CLI to
--   update a property of a JSON value, enclose the JSON object with a pair
--   of single quotes in a Linux shell, e.g., '{"a": ...}'. In a Windows
--   shell, see <a>Using JSON for Parameters</a>.
patchOperation_value :: Lens' PatchOperation (Maybe Text)

-- | The <tt>copy</tt> update operation's source as identified by a
--   <tt>JSON-Pointer</tt> value referencing the location within the
--   targeted resource to copy the value from. For example, to promote a
--   canary deployment, you copy the canary deployment ID to the affiliated
--   deployment ID by calling a PATCH request on a Stage resource with
--   <tt>"op":"copy"</tt>, <tt>"from":"/canarySettings/deploymentId"</tt>
--   and <tt>"path":"/deploymentId"</tt>.
patchOperation_from :: Lens' PatchOperation (Maybe Text)

-- | Quotas configured for a usage plan.
--   
--   <i>See:</i> <a>newQuotaSettings</a> smart constructor.
data QuotaSettings
QuotaSettings' :: Maybe Int -> Maybe QuotaPeriodType -> Maybe Int -> QuotaSettings

-- | The day that a time period starts. For example, with a time period of
--   <tt>WEEK</tt>, an offset of <tt>0</tt> starts on Sunday, and an offset
--   of <tt>1</tt> starts on Monday.
[$sel:offset:QuotaSettings'] :: QuotaSettings -> Maybe Int

-- | The time period in which the limit applies. Valid values are "DAY",
--   "WEEK" or "MONTH".
[$sel:period:QuotaSettings'] :: QuotaSettings -> Maybe QuotaPeriodType

-- | The maximum number of requests that can be made in a given time
--   period.
[$sel:limit:QuotaSettings'] :: QuotaSettings -> Maybe Int

-- | Create a value of <a>QuotaSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offset:QuotaSettings'</a>, <a>quotaSettings_offset</a> - The
--   day that a time period starts. For example, with a time period of
--   <tt>WEEK</tt>, an offset of <tt>0</tt> starts on Sunday, and an offset
--   of <tt>1</tt> starts on Monday.
--   
--   <a>$sel:period:QuotaSettings'</a>, <a>quotaSettings_period</a> - The
--   time period in which the limit applies. Valid values are "DAY", "WEEK"
--   or "MONTH".
--   
--   <a>$sel:limit:QuotaSettings'</a>, <a>quotaSettings_limit</a> - The
--   maximum number of requests that can be made in a given time period.
newQuotaSettings :: QuotaSettings

-- | The day that a time period starts. For example, with a time period of
--   <tt>WEEK</tt>, an offset of <tt>0</tt> starts on Sunday, and an offset
--   of <tt>1</tt> starts on Monday.
quotaSettings_offset :: Lens' QuotaSettings (Maybe Int)

-- | The time period in which the limit applies. Valid values are "DAY",
--   "WEEK" or "MONTH".
quotaSettings_period :: Lens' QuotaSettings (Maybe QuotaPeriodType)

-- | The maximum number of requests that can be made in a given time
--   period.
quotaSettings_limit :: Lens' QuotaSettings (Maybe Int)

-- | A set of validation rules for incoming Method requests.
--   
--   In OpenAPI, a RequestValidator of an API is defined by the
--   <a>x-amazon-apigateway-request-validators.requestValidator</a> object.
--   It the referenced using the
--   <a>x-amazon-apigateway-request-validator</a> property.
--   
--   <a>Enable Basic Request Validation in API Gateway</a>
--   
--   <i>See:</i> <a>newRequestValidator</a> smart constructor.
data RequestValidator
RequestValidator' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> RequestValidator

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
[$sel:validateRequestParameters:RequestValidator'] :: RequestValidator -> Maybe Bool

-- | The name of this RequestValidator
[$sel:name:RequestValidator'] :: RequestValidator -> Maybe Text

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
[$sel:validateRequestBody:RequestValidator'] :: RequestValidator -> Maybe Bool

-- | The identifier of this RequestValidator.
[$sel:id:RequestValidator'] :: RequestValidator -> Maybe Text

-- | Create a value of <a>RequestValidator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validateRequestParameters:RequestValidator'</a>,
--   <a>requestValidator_validateRequestParameters</a> - A Boolean flag to
--   indicate whether to validate request parameters (<tt>true</tt>) or not
--   (<tt>false</tt>).
--   
--   <a>$sel:name:RequestValidator'</a>, <a>requestValidator_name</a> - The
--   name of this RequestValidator
--   
--   <a>$sel:validateRequestBody:RequestValidator'</a>,
--   <a>requestValidator_validateRequestBody</a> - A Boolean flag to
--   indicate whether to validate a request body according to the
--   configured Model schema.
--   
--   <a>$sel:id:RequestValidator'</a>, <a>requestValidator_id</a> - The
--   identifier of this RequestValidator.
newRequestValidator :: RequestValidator

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
requestValidator_validateRequestParameters :: Lens' RequestValidator (Maybe Bool)

-- | The name of this RequestValidator
requestValidator_name :: Lens' RequestValidator (Maybe Text)

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
requestValidator_validateRequestBody :: Lens' RequestValidator (Maybe Bool)

-- | The identifier of this RequestValidator.
requestValidator_id :: Lens' RequestValidator (Maybe Text)

-- | Represents an API resource.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Method) -> Maybe Text -> Resource

-- | The last path segment for this resource.
[$sel:pathPart:Resource'] :: Resource -> Maybe Text

-- | The full path for this resource.
[$sel:path:Resource'] :: Resource -> Maybe Text

-- | The resource's identifier.
[$sel:id:Resource'] :: Resource -> Maybe Text

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
[$sel:resourceMethods:Resource'] :: Resource -> Maybe (HashMap Text Method)

-- | The parent resource's identifier.
[$sel:parentId:Resource'] :: Resource -> Maybe Text

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathPart:Resource'</a>, <a>resource_pathPart</a> - The last
--   path segment for this resource.
--   
--   <a>$sel:path:Resource'</a>, <a>resource_path</a> - The full path for
--   this resource.
--   
--   <a>$sel:id:Resource'</a>, <a>resource_id</a> - The resource's
--   identifier.
--   
--   <a>$sel:resourceMethods:Resource'</a>, <a>resource_resourceMethods</a>
--   - Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
--   
--   <a>$sel:parentId:Resource'</a>, <a>resource_parentId</a> - The parent
--   resource's identifier.
newResource :: Resource

-- | The last path segment for this resource.
resource_pathPart :: Lens' Resource (Maybe Text)

-- | The full path for this resource.
resource_path :: Lens' Resource (Maybe Text)

-- | The resource's identifier.
resource_id :: Lens' Resource (Maybe Text)

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
resource_resourceMethods :: Lens' Resource (Maybe (HashMap Text Method))

-- | The parent resource's identifier.
resource_parentId :: Lens' Resource (Maybe Text)

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
[$sel:minimumCompressionSize:RestApi'] :: RestApi -> Maybe Int

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
[$sel:disableExecuteApiEndpoint:RestApi'] :: RestApi -> Maybe Bool

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
[$sel:binaryMediaTypes:RestApi'] :: RestApi -> Maybe [Text]

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
[$sel:warnings:RestApi'] :: RestApi -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:RestApi'] :: RestApi -> Maybe POSIX

-- | The API's name.
[$sel:name:RestApi'] :: RestApi -> Maybe Text

-- | A version identifier for the API.
[$sel:version:RestApi'] :: RestApi -> Maybe Text

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
[$sel:apiKeySource:RestApi'] :: RestApi -> Maybe ApiKeySourceType

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
[$sel:id:RestApi'] :: RestApi -> Maybe Text

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
[$sel:policy:RestApi'] :: RestApi -> Maybe Text

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
[$sel:endpointConfiguration:RestApi'] :: RestApi -> Maybe EndpointConfiguration

-- | The API's description.
[$sel:description:RestApi'] :: RestApi -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:RestApi'] :: RestApi -> Maybe (HashMap Text Text)

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))

-- | A configuration property of an SDK type.
--   
--   <i>See:</i> <a>newSdkConfigurationProperty</a> smart constructor.
data SdkConfigurationProperty
SdkConfigurationProperty' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> SdkConfigurationProperty

-- | The user-friendly name of an SdkType configuration property.
[$sel:friendlyName:SdkConfigurationProperty'] :: SdkConfigurationProperty -> Maybe Text

-- | A boolean flag of an SdkType configuration property to indicate if the
--   associated SDK configuration property is required (<tt>true</tt>) or
--   not (<tt>false</tt>).
[$sel:required:SdkConfigurationProperty'] :: SdkConfigurationProperty -> Maybe Bool

-- | The name of a an SdkType configuration property.
[$sel:name:SdkConfigurationProperty'] :: SdkConfigurationProperty -> Maybe Text

-- | The default value of an SdkType configuration property.
[$sel:defaultValue:SdkConfigurationProperty'] :: SdkConfigurationProperty -> Maybe Text

-- | The description of an SdkType configuration property.
[$sel:description:SdkConfigurationProperty'] :: SdkConfigurationProperty -> Maybe Text

-- | Create a value of <a>SdkConfigurationProperty</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:friendlyName:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_friendlyName</a> - The user-friendly name
--   of an SdkType configuration property.
--   
--   <a>$sel:required:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_required</a> - A boolean flag of an
--   SdkType configuration property to indicate if the associated SDK
--   configuration property is required (<tt>true</tt>) or not
--   (<tt>false</tt>).
--   
--   <a>$sel:name:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_name</a> - The name of a an SdkType
--   configuration property.
--   
--   <a>$sel:defaultValue:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_defaultValue</a> - The default value of an
--   SdkType configuration property.
--   
--   <a>$sel:description:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_description</a> - The description of an
--   SdkType configuration property.
newSdkConfigurationProperty :: SdkConfigurationProperty

-- | The user-friendly name of an SdkType configuration property.
sdkConfigurationProperty_friendlyName :: Lens' SdkConfigurationProperty (Maybe Text)

-- | A boolean flag of an SdkType configuration property to indicate if the
--   associated SDK configuration property is required (<tt>true</tt>) or
--   not (<tt>false</tt>).
sdkConfigurationProperty_required :: Lens' SdkConfigurationProperty (Maybe Bool)

-- | The name of a an SdkType configuration property.
sdkConfigurationProperty_name :: Lens' SdkConfigurationProperty (Maybe Text)

-- | The default value of an SdkType configuration property.
sdkConfigurationProperty_defaultValue :: Lens' SdkConfigurationProperty (Maybe Text)

-- | The description of an SdkType configuration property.
sdkConfigurationProperty_description :: Lens' SdkConfigurationProperty (Maybe Text)

-- | A type of SDK that API Gateway can generate.
--   
--   <i>See:</i> <a>newSdkType</a> smart constructor.
data SdkType
SdkType' :: Maybe Text -> Maybe [SdkConfigurationProperty] -> Maybe Text -> Maybe Text -> SdkType

-- | The user-friendly name of an SdkType instance.
[$sel:friendlyName:SdkType'] :: SdkType -> Maybe Text

-- | A list of configuration properties of an SdkType.
[$sel:configurationProperties:SdkType'] :: SdkType -> Maybe [SdkConfigurationProperty]

-- | The identifier of an SdkType instance.
[$sel:id:SdkType'] :: SdkType -> Maybe Text

-- | The description of an SdkType.
[$sel:description:SdkType'] :: SdkType -> Maybe Text

-- | Create a value of <a>SdkType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:friendlyName:SdkType'</a>, <a>sdkType_friendlyName</a> - The
--   user-friendly name of an SdkType instance.
--   
--   <a>$sel:configurationProperties:SdkType'</a>,
--   <a>sdkType_configurationProperties</a> - A list of configuration
--   properties of an SdkType.
--   
--   <a>$sel:id:SdkType'</a>, <a>sdkType_id</a> - The identifier of an
--   SdkType instance.
--   
--   <a>$sel:description:SdkType'</a>, <a>sdkType_description</a> - The
--   description of an SdkType.
newSdkType :: SdkType

-- | The user-friendly name of an SdkType instance.
sdkType_friendlyName :: Lens' SdkType (Maybe Text)

-- | A list of configuration properties of an SdkType.
sdkType_configurationProperties :: Lens' SdkType (Maybe [SdkConfigurationProperty])

-- | The identifier of an SdkType instance.
sdkType_id :: Lens' SdkType (Maybe Text)

-- | The description of an SdkType.
sdkType_description :: Lens' SdkType (Maybe Text)

-- | Represents a unique identifier for a version of a deployed RestApi
--   that is callable by users.
--   
--   <a>Deploy an API</a>
--   
--   <i>See:</i> <a>newStage</a> smart constructor.
data Stage
Stage' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe AccessLogSettings -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe CacheClusterStatus -> Maybe (HashMap Text MethodSetting) -> Maybe POSIX -> Maybe CacheClusterSize -> Maybe Text -> Maybe CanarySettings -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Stage

-- | The identifier of the Deployment that the stage points to.
[$sel:deploymentId:Stage'] :: Stage -> Maybe Text

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
[$sel:variables:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | Settings for logging access in this stage.
[$sel:accessLogSettings:Stage'] :: Stage -> Maybe AccessLogSettings

-- | The version of the associated API documentation.
[$sel:documentationVersion:Stage'] :: Stage -> Maybe Text

-- | The identifier of a client certificate for an API stage.
[$sel:clientCertificateId:Stage'] :: Stage -> Maybe Text

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
[$sel:tracingEnabled:Stage'] :: Stage -> Maybe Bool

-- | The timestamp when the stage was created.
[$sel:createdDate:Stage'] :: Stage -> Maybe POSIX

-- | The status of the cache cluster for the stage, if enabled.
[$sel:cacheClusterStatus:Stage'] :: Stage -> Maybe CacheClusterStatus

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
[$sel:methodSettings:Stage'] :: Stage -> Maybe (HashMap Text MethodSetting)

-- | The timestamp when the stage last updated.
[$sel:lastUpdatedDate:Stage'] :: Stage -> Maybe POSIX

-- | The size of the cache cluster for the stage, if enabled.
[$sel:cacheClusterSize:Stage'] :: Stage -> Maybe CacheClusterSize

-- | The ARN of the WebAcl associated with the Stage.
[$sel:webAclArn:Stage'] :: Stage -> Maybe Text

-- | Settings for the canary deployment in this stage.
[$sel:canarySettings:Stage'] :: Stage -> Maybe CanarySettings

-- | Specifies whether a cache cluster is enabled for the stage.
[$sel:cacheClusterEnabled:Stage'] :: Stage -> Maybe Bool

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
[$sel:stageName:Stage'] :: Stage -> Maybe Text

-- | The stage's description.
[$sel:description:Stage'] :: Stage -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | Create a value of <a>Stage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Stage'</a>, <a>stage_deploymentId</a> - The
--   identifier of the Deployment that the stage points to.
--   
--   <a>$sel:variables:Stage'</a>, <a>stage_variables</a> - A map that
--   defines the stage variables for a Stage resource. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:accessLogSettings:Stage'</a>, <a>stage_accessLogSettings</a> -
--   Settings for logging access in this stage.
--   
--   <a>$sel:documentationVersion:Stage'</a>,
--   <a>stage_documentationVersion</a> - The version of the associated API
--   documentation.
--   
--   <a>$sel:clientCertificateId:Stage'</a>,
--   <a>stage_clientCertificateId</a> - The identifier of a client
--   certificate for an API stage.
--   
--   <a>$sel:tracingEnabled:Stage'</a>, <a>stage_tracingEnabled</a> -
--   Specifies whether active tracing with X-ray is enabled for the Stage.
--   
--   <a>$sel:createdDate:Stage'</a>, <a>stage_createdDate</a> - The
--   timestamp when the stage was created.
--   
--   <a>$sel:cacheClusterStatus:Stage'</a>, <a>stage_cacheClusterStatus</a>
--   - The status of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:methodSettings:Stage'</a>, <a>stage_methodSettings</a> - A map
--   that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
--   
--   <a>$sel:lastUpdatedDate:Stage'</a>, <a>stage_lastUpdatedDate</a> - The
--   timestamp when the stage last updated.
--   
--   <a>$sel:cacheClusterSize:Stage'</a>, <a>stage_cacheClusterSize</a> -
--   The size of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:webAclArn:Stage'</a>, <a>stage_webAclArn</a> - The ARN of the
--   WebAcl associated with the Stage.
--   
--   <a>$sel:canarySettings:Stage'</a>, <a>stage_canarySettings</a> -
--   Settings for the canary deployment in this stage.
--   
--   <a>$sel:cacheClusterEnabled:Stage'</a>,
--   <a>stage_cacheClusterEnabled</a> - Specifies whether a cache cluster
--   is enabled for the stage.
--   
--   <a>$sel:stageName:Stage'</a>, <a>stage_stageName</a> - The name of the
--   stage is the first path segment in the Uniform Resource Identifier
--   (URI) of a call to API Gateway. Stage names can only contain
--   alphanumeric characters, hyphens, and underscores. Maximum length is
--   128 characters.
--   
--   <a>$sel:description:Stage'</a>, <a>stage_description</a> - The stage's
--   description.
--   
--   <a>$sel:tags:Stage'</a>, <a>stage_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newStage :: Stage

-- | The identifier of the Deployment that the stage points to.
stage_deploymentId :: Lens' Stage (Maybe Text)

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
stage_variables :: Lens' Stage (Maybe (HashMap Text Text))

-- | Settings for logging access in this stage.
stage_accessLogSettings :: Lens' Stage (Maybe AccessLogSettings)

-- | The version of the associated API documentation.
stage_documentationVersion :: Lens' Stage (Maybe Text)

-- | The identifier of a client certificate for an API stage.
stage_clientCertificateId :: Lens' Stage (Maybe Text)

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
stage_tracingEnabled :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was created.
stage_createdDate :: Lens' Stage (Maybe UTCTime)

-- | The status of the cache cluster for the stage, if enabled.
stage_cacheClusterStatus :: Lens' Stage (Maybe CacheClusterStatus)

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
stage_methodSettings :: Lens' Stage (Maybe (HashMap Text MethodSetting))

-- | The timestamp when the stage last updated.
stage_lastUpdatedDate :: Lens' Stage (Maybe UTCTime)

-- | The size of the cache cluster for the stage, if enabled.
stage_cacheClusterSize :: Lens' Stage (Maybe CacheClusterSize)

-- | The ARN of the WebAcl associated with the Stage.
stage_webAclArn :: Lens' Stage (Maybe Text)

-- | Settings for the canary deployment in this stage.
stage_canarySettings :: Lens' Stage (Maybe CanarySettings)

-- | Specifies whether a cache cluster is enabled for the stage.
stage_cacheClusterEnabled :: Lens' Stage (Maybe Bool)

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
stage_stageName :: Lens' Stage (Maybe Text)

-- | The stage's description.
stage_description :: Lens' Stage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
stage_tags :: Lens' Stage (Maybe (HashMap Text Text))

-- | A reference to a unique stage identified in the format
--   <tt>{restApiId}/{stage}</tt>.
--   
--   <i>See:</i> <a>newStageKey</a> smart constructor.
data StageKey
StageKey' :: Maybe Text -> Maybe Text -> StageKey

-- | The string identifier of the associated RestApi.
[$sel:restApiId:StageKey'] :: StageKey -> Maybe Text

-- | The stage name associated with the stage key.
[$sel:stageName:StageKey'] :: StageKey -> Maybe Text

-- | Create a value of <a>StageKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:StageKey'</a>, <a>stageKey_restApiId</a> - The
--   string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:StageKey'</a>, <a>stageKey_stageName</a> - The stage
--   name associated with the stage key.
newStageKey :: StageKey

-- | The string identifier of the associated RestApi.
stageKey_restApiId :: Lens' StageKey (Maybe Text)

-- | The stage name associated with the stage key.
stageKey_stageName :: Lens' StageKey (Maybe Text)

-- | The API request rate limits.
--   
--   <i>See:</i> <a>newThrottleSettings</a> smart constructor.
data ThrottleSettings
ThrottleSettings' :: Maybe Int -> Maybe Double -> ThrottleSettings

-- | The API request burst limit, the maximum rate limit over a time
--   ranging from one to a few seconds, depending upon whether the
--   underlying token bucket is at its full capacity.
[$sel:burstLimit:ThrottleSettings'] :: ThrottleSettings -> Maybe Int

-- | The API request steady-state rate limit.
[$sel:rateLimit:ThrottleSettings'] :: ThrottleSettings -> Maybe Double

-- | Create a value of <a>ThrottleSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:burstLimit:ThrottleSettings'</a>,
--   <a>throttleSettings_burstLimit</a> - The API request burst limit, the
--   maximum rate limit over a time ranging from one to a few seconds,
--   depending upon whether the underlying token bucket is at its full
--   capacity.
--   
--   <a>$sel:rateLimit:ThrottleSettings'</a>,
--   <a>throttleSettings_rateLimit</a> - The API request steady-state rate
--   limit.
newThrottleSettings :: ThrottleSettings

-- | The API request burst limit, the maximum rate limit over a time
--   ranging from one to a few seconds, depending upon whether the
--   underlying token bucket is at its full capacity.
throttleSettings_burstLimit :: Lens' ThrottleSettings (Maybe Int)

-- | The API request steady-state rate limit.
throttleSettings_rateLimit :: Lens' ThrottleSettings (Maybe Double)

-- | <i>See:</i> <a>newTlsConfig</a> smart constructor.
data TlsConfig
TlsConfig' :: Maybe Bool -> TlsConfig

-- | Specifies whether or not API Gateway skips verification that the
--   certificate for an integration endpoint is issued by a <a>supported
--   certificate authority</a>. This isn’t recommended, but it enables you
--   to use certificates that are signed by private certificate
--   authorities, or certificates that are self-signed. If enabled, API
--   Gateway still performs basic certificate validation, which includes
--   checking the certificate's expiration date, hostname, and presence of
--   a root certificate authority. Supported only for <tt>HTTP</tt> and
--   <tt>HTTP_PROXY</tt> integrations.
[$sel:insecureSkipVerification:TlsConfig'] :: TlsConfig -> Maybe Bool

-- | Create a value of <a>TlsConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:insecureSkipVerification:TlsConfig'</a>,
--   <a>tlsConfig_insecureSkipVerification</a> - Specifies whether or not
--   API Gateway skips verification that the certificate for an integration
--   endpoint is issued by a <a>supported certificate authority</a>. This
--   isn’t recommended, but it enables you to use certificates that are
--   signed by private certificate authorities, or certificates that are
--   self-signed. If enabled, API Gateway still performs basic certificate
--   validation, which includes checking the certificate's expiration date,
--   hostname, and presence of a root certificate authority. Supported only
--   for <tt>HTTP</tt> and <tt>HTTP_PROXY</tt> integrations.
newTlsConfig :: TlsConfig

-- | Specifies whether or not API Gateway skips verification that the
--   certificate for an integration endpoint is issued by a <a>supported
--   certificate authority</a>. This isn’t recommended, but it enables you
--   to use certificates that are signed by private certificate
--   authorities, or certificates that are self-signed. If enabled, API
--   Gateway still performs basic certificate validation, which includes
--   checking the certificate's expiration date, hostname, and presence of
--   a root certificate authority. Supported only for <tt>HTTP</tt> and
--   <tt>HTTP_PROXY</tt> integrations.
tlsConfig_insecureSkipVerification :: Lens' TlsConfig (Maybe Bool)

-- | Represents the usage data of a usage plan.
--   
--   <a>Create and Use Usage Plans</a>, <a>Manage Usage in a Usage Plan</a>
--   
--   <i>See:</i> <a>newUsage</a> smart constructor.
data Usage
Usage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text [[Integer]]) -> Maybe Text -> Maybe Text -> Usage

-- | The plan Id associated with this usage data.
[$sel:usagePlanId:Usage'] :: Usage -> Maybe Text

-- | The ending date of the usage data.
[$sel:endDate:Usage'] :: Usage -> Maybe Text

-- | The usage data, as daily logs of used and remaining quotas, over the
--   specified time interval indexed over the API keys in a usage plan. For
--   example, <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
--   [100, 10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value
--   and the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
[$sel:items:Usage'] :: Usage -> Maybe (HashMap Text [[Integer]])

-- | The starting date of the usage data.
[$sel:startDate:Usage'] :: Usage -> Maybe Text
[$sel:position:Usage'] :: Usage -> Maybe Text

-- | Create a value of <a>Usage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:Usage'</a>, <a>usage_usagePlanId</a> - The plan Id
--   associated with this usage data.
--   
--   <a>$sel:endDate:Usage'</a>, <a>usage_endDate</a> - The ending date of
--   the usage data.
--   
--   <a>$sel:items:Usage'</a>, <a>usage_items</a> - The usage data, as
--   daily logs of used and remaining quotas, over the specified time
--   interval indexed over the API keys in a usage plan. For example,
--   <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90], [100,
--   10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value and
--   the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
--   
--   <a>$sel:startDate:Usage'</a>, <a>usage_startDate</a> - The starting
--   date of the usage data.
--   
--   <a>$sel:position:Usage'</a>, <a>usage_position</a> - Undocumented
--   member.
newUsage :: Usage

-- | The plan Id associated with this usage data.
usage_usagePlanId :: Lens' Usage (Maybe Text)

-- | The ending date of the usage data.
usage_endDate :: Lens' Usage (Maybe Text)

-- | The usage data, as daily logs of used and remaining quotas, over the
--   specified time interval indexed over the API keys in a usage plan. For
--   example, <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
--   [100, 10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value
--   and the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
usage_items :: Lens' Usage (Maybe (HashMap Text [[Integer]]))

-- | The starting date of the usage data.
usage_startDate :: Lens' Usage (Maybe Text)

-- | Undocumented member.
usage_position :: Lens' Usage (Maybe Text)

-- | Represents a usage plan than can specify who can assess associated API
--   stages with specified request limits and quotas.
--   
--   In a usage plan, you associate an API by specifying the API's Id and a
--   stage name of the specified API. You add plan customers by adding API
--   keys to the plan.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlan</a> smart constructor.
data UsagePlan
UsagePlan' :: Maybe [ApiStage] -> Maybe Text -> Maybe Text -> Maybe ThrottleSettings -> Maybe QuotaSettings -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> UsagePlan

-- | The associated API stages of a usage plan.
[$sel:apiStages:UsagePlan'] :: UsagePlan -> Maybe [ApiStage]

-- | The name of a usage plan.
[$sel:name:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The identifier of a UsagePlan resource.
[$sel:id:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The request throttle limits of a usage plan.
[$sel:throttle:UsagePlan'] :: UsagePlan -> Maybe ThrottleSettings

-- | The maximum number of permitted requests per a given unit time
--   interval.
[$sel:quota:UsagePlan'] :: UsagePlan -> Maybe QuotaSettings

-- | The description of a usage plan.
[$sel:description:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
[$sel:productCode:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:UsagePlan'] :: UsagePlan -> Maybe (HashMap Text Text)

-- | Create a value of <a>UsagePlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiStages:UsagePlan'</a>, <a>usagePlan_apiStages</a> - The
--   associated API stages of a usage plan.
--   
--   <a>$sel:name:UsagePlan'</a>, <a>usagePlan_name</a> - The name of a
--   usage plan.
--   
--   <a>$sel:id:UsagePlan'</a>, <a>usagePlan_id</a> - The identifier of a
--   UsagePlan resource.
--   
--   <a>$sel:throttle:UsagePlan'</a>, <a>usagePlan_throttle</a> - The
--   request throttle limits of a usage plan.
--   
--   <a>$sel:quota:UsagePlan'</a>, <a>usagePlan_quota</a> - The maximum
--   number of permitted requests per a given unit time interval.
--   
--   <a>$sel:description:UsagePlan'</a>, <a>usagePlan_description</a> - The
--   description of a usage plan.
--   
--   <a>$sel:productCode:UsagePlan'</a>, <a>usagePlan_productCode</a> - The
--   AWS Markeplace product identifier to associate with the usage plan as
--   a SaaS product on AWS Marketplace.
--   
--   <a>$sel:tags:UsagePlan'</a>, <a>usagePlan_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newUsagePlan :: UsagePlan

-- | The associated API stages of a usage plan.
usagePlan_apiStages :: Lens' UsagePlan (Maybe [ApiStage])

-- | The name of a usage plan.
usagePlan_name :: Lens' UsagePlan (Maybe Text)

-- | The identifier of a UsagePlan resource.
usagePlan_id :: Lens' UsagePlan (Maybe Text)

-- | The request throttle limits of a usage plan.
usagePlan_throttle :: Lens' UsagePlan (Maybe ThrottleSettings)

-- | The maximum number of permitted requests per a given unit time
--   interval.
usagePlan_quota :: Lens' UsagePlan (Maybe QuotaSettings)

-- | The description of a usage plan.
usagePlan_description :: Lens' UsagePlan (Maybe Text)

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
usagePlan_productCode :: Lens' UsagePlan (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
usagePlan_tags :: Lens' UsagePlan (Maybe (HashMap Text Text))

-- | Represents a usage plan key to identify a plan customer.
--   
--   To associate an API stage with a selected API key in a usage plan, you
--   must create a UsagePlanKey resource to represent the selected ApiKey.
--   
--   "
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlanKey</a> smart constructor.
data UsagePlanKey
UsagePlanKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UsagePlanKey

-- | The value of a usage plan key.
[$sel:value:UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | The name of a usage plan key.
[$sel:name:UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | The Id of a usage plan key.
[$sel:id:UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | The type of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
[$sel:type':UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | Create a value of <a>UsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:UsagePlanKey'</a>, <a>usagePlanKey_value</a> - The value
--   of a usage plan key.
--   
--   <a>$sel:name:UsagePlanKey'</a>, <a>usagePlanKey_name</a> - The name of
--   a usage plan key.
--   
--   <a>$sel:id:UsagePlanKey'</a>, <a>usagePlanKey_id</a> - The Id of a
--   usage plan key.
--   
--   <a>$sel:type':UsagePlanKey'</a>, <a>usagePlanKey_type</a> - The type
--   of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
newUsagePlanKey :: UsagePlanKey

-- | The value of a usage plan key.
usagePlanKey_value :: Lens' UsagePlanKey (Maybe Text)

-- | The name of a usage plan key.
usagePlanKey_name :: Lens' UsagePlanKey (Maybe Text)

-- | The Id of a usage plan key.
usagePlanKey_id :: Lens' UsagePlanKey (Maybe Text)

-- | The type of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
usagePlanKey_type :: Lens' UsagePlanKey (Maybe Text)

-- | An API Gateway VPC link for a RestApi to access resources in an Amazon
--   Virtual Private Cloud (VPC).
--   
--   To enable access to a resource in an Amazon Virtual Private Cloud
--   through Amazon API Gateway, you, as an API developer, create a VpcLink
--   resource targeted for one or more network load balancers of the VPC
--   and then integrate an API method with a private integration that uses
--   the VpcLink. The private integration has an integration type of
--   <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> and has a connection type of
--   <tt>VPC_LINK</tt>. The integration uses the <tt>connectionId</tt>
--   property to identify the VpcLink used.
--   
--   <i>See:</i> <a>newVpcLink</a> smart constructor.
data VpcLink
VpcLink' :: Maybe VpcLinkStatus -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> VpcLink

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
[$sel:status:VpcLink'] :: VpcLink -> Maybe VpcLinkStatus

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
[$sel:targetArns:VpcLink'] :: VpcLink -> Maybe [Text]

-- | The name used to label and identify the VPC link.
[$sel:name:VpcLink'] :: VpcLink -> Maybe Text

-- | A description about the VPC link status.
[$sel:statusMessage:VpcLink'] :: VpcLink -> Maybe Text

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
[$sel:id:VpcLink'] :: VpcLink -> Maybe Text

-- | The description of the VPC link.
[$sel:description:VpcLink'] :: VpcLink -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:VpcLink'] :: VpcLink -> Maybe (HashMap Text Text)

-- | Create a value of <a>VpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VpcLink'</a>, <a>vpcLink_status</a> - The status of the
--   VPC link. The valid values are <tt>AVAILABLE</tt>, <tt>PENDING</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an API will wait if
--   the status is <tt>PENDING</tt> and will fail if the status is
--   <tt>DELETING</tt>.
--   
--   <a>$sel:targetArns:VpcLink'</a>, <a>vpcLink_targetArns</a> - The ARN
--   of the network load balancer of the VPC targeted by the VPC link. The
--   network load balancer must be owned by the same AWS account of the API
--   owner.
--   
--   <a>$sel:name:VpcLink'</a>, <a>vpcLink_name</a> - The name used to
--   label and identify the VPC link.
--   
--   <a>$sel:statusMessage:VpcLink'</a>, <a>vpcLink_statusMessage</a> - A
--   description about the VPC link status.
--   
--   <a>$sel:id:VpcLink'</a>, <a>vpcLink_id</a> - The identifier of the
--   VpcLink. It is used in an Integration to reference this VpcLink.
--   
--   <a>$sel:description:VpcLink'</a>, <a>vpcLink_description</a> - The
--   description of the VPC link.
--   
--   <a>$sel:tags:VpcLink'</a>, <a>vpcLink_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newVpcLink :: VpcLink

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
vpcLink_status :: Lens' VpcLink (Maybe VpcLinkStatus)

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
vpcLink_targetArns :: Lens' VpcLink (Maybe [Text])

-- | The name used to label and identify the VPC link.
vpcLink_name :: Lens' VpcLink (Maybe Text)

-- | A description about the VPC link status.
vpcLink_statusMessage :: Lens' VpcLink (Maybe Text)

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
vpcLink_id :: Lens' VpcLink (Maybe Text)

-- | The description of the VPC link.
vpcLink_description :: Lens' VpcLink (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
vpcLink_tags :: Lens' VpcLink (Maybe (HashMap Text Text))


-- | Simulate the execution of a Method in your RestApi with headers,
--   parameters, and an incoming request body.
module Amazonka.APIGateway.TestInvokeMethod

-- | Make a request to simulate the execution of a Method.
--   
--   <i>See:</i> <a>newTestInvokeMethod</a> smart constructor.
data TestInvokeMethod
TestInvokeMethod' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Maybe (HashMap Text [Text]) -> Text -> Text -> Text -> TestInvokeMethod

-- | The URI path, including query string, of the simulated invocation
--   request. Use this to specify path parameters and query string
--   parameters.
[$sel:pathWithQueryString:TestInvokeMethod'] :: TestInvokeMethod -> Maybe Text

-- | The simulated request body of an incoming invocation request.
[$sel:body:TestInvokeMethod'] :: TestInvokeMethod -> Maybe Text

-- | A ClientCertificate identifier to use in the test invocation. API
--   Gateway will use the certificate when making the HTTPS request to the
--   defined back-end endpoint.
[$sel:clientCertificateId:TestInvokeMethod'] :: TestInvokeMethod -> Maybe Text

-- | A key-value map of stage variables to simulate an invocation on a
--   deployed Stage.
[$sel:stageVariables:TestInvokeMethod'] :: TestInvokeMethod -> Maybe (HashMap Text Text)

-- | A key-value map of headers to simulate an incoming invocation request.
[$sel:headers:TestInvokeMethod'] :: TestInvokeMethod -> Maybe (HashMap Text Text)

-- | The headers as a map from string to list of values to simulate an
--   incoming invocation request.
[$sel:multiValueHeaders:TestInvokeMethod'] :: TestInvokeMethod -> Maybe (HashMap Text [Text])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:TestInvokeMethod'] :: TestInvokeMethod -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a test invoke method request's resource
--   ID.</li>
--   </ul>
[$sel:resourceId:TestInvokeMethod'] :: TestInvokeMethod -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a test invoke method request's HTTP
--   method.</li>
--   </ul>
[$sel:httpMethod:TestInvokeMethod'] :: TestInvokeMethod -> Text

-- | Create a value of <a>TestInvokeMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathWithQueryString:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_pathWithQueryString</a> - The URI path, including
--   query string, of the simulated invocation request. Use this to specify
--   path parameters and query string parameters.
--   
--   <a>$sel:body:TestInvokeMethod'</a>, <a>testInvokeMethod_body</a> - The
--   simulated request body of an incoming invocation request.
--   
--   <a>$sel:clientCertificateId:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_clientCertificateId</a> - A ClientCertificate
--   identifier to use in the test invocation. API Gateway will use the
--   certificate when making the HTTPS request to the defined back-end
--   endpoint.
--   
--   <a>$sel:stageVariables:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_stageVariables</a> - A key-value map of stage
--   variables to simulate an invocation on a deployed Stage.
--   
--   <a>$sel:headers:TestInvokeMethod'</a>, <a>testInvokeMethod_headers</a>
--   - A key-value map of headers to simulate an incoming invocation
--   request.
--   
--   <a>$sel:multiValueHeaders:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_multiValueHeaders</a> - The headers as a map from
--   string to list of values to simulate an incoming invocation request.
--   
--   <a>$sel:restApiId:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:resourceId:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_resourceId</a> - [Required] Specifies a test
--   invoke method request's resource ID.
--   
--   <a>$sel:httpMethod:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_httpMethod</a> - [Required] Specifies a test
--   invoke method request's HTTP method.
newTestInvokeMethod :: Text -> Text -> Text -> TestInvokeMethod

-- | The URI path, including query string, of the simulated invocation
--   request. Use this to specify path parameters and query string
--   parameters.
testInvokeMethod_pathWithQueryString :: Lens' TestInvokeMethod (Maybe Text)

-- | The simulated request body of an incoming invocation request.
testInvokeMethod_body :: Lens' TestInvokeMethod (Maybe Text)

-- | A ClientCertificate identifier to use in the test invocation. API
--   Gateway will use the certificate when making the HTTPS request to the
--   defined back-end endpoint.
testInvokeMethod_clientCertificateId :: Lens' TestInvokeMethod (Maybe Text)

-- | A key-value map of stage variables to simulate an invocation on a
--   deployed Stage.
testInvokeMethod_stageVariables :: Lens' TestInvokeMethod (Maybe (HashMap Text Text))

-- | A key-value map of headers to simulate an incoming invocation request.
testInvokeMethod_headers :: Lens' TestInvokeMethod (Maybe (HashMap Text Text))

-- | The headers as a map from string to list of values to simulate an
--   incoming invocation request.
testInvokeMethod_multiValueHeaders :: Lens' TestInvokeMethod (Maybe (HashMap Text [Text]))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
testInvokeMethod_restApiId :: Lens' TestInvokeMethod Text

-- | <ul>
--   <li><i>Required</i> Specifies a test invoke method request's resource
--   ID.</li>
--   </ul>
testInvokeMethod_resourceId :: Lens' TestInvokeMethod Text

-- | <ul>
--   <li><i>Required</i> Specifies a test invoke method request's HTTP
--   method.</li>
--   </ul>
testInvokeMethod_httpMethod :: Lens' TestInvokeMethod Text

-- | Represents the response of the test invoke request in the HTTP method.
--   
--   <a>Test API using the API Gateway console</a>
--   
--   <i>See:</i> <a>newTestInvokeMethodResponse</a> smart constructor.
data TestInvokeMethodResponse
TestInvokeMethodResponse' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe (HashMap Text Text) -> Maybe (HashMap Text [Text]) -> Int -> TestInvokeMethodResponse

-- | The API Gateway execution log for the test invoke request.
[$sel:log:TestInvokeMethodResponse'] :: TestInvokeMethodResponse -> Maybe Text

-- | The HTTP status code.
[$sel:status:TestInvokeMethodResponse'] :: TestInvokeMethodResponse -> Maybe Int

-- | The body of the HTTP response.
[$sel:body:TestInvokeMethodResponse'] :: TestInvokeMethodResponse -> Maybe Text

-- | The execution latency of the test invoke request.
[$sel:latency:TestInvokeMethodResponse'] :: TestInvokeMethodResponse -> Maybe Integer

-- | The headers of the HTTP response.
[$sel:headers:TestInvokeMethodResponse'] :: TestInvokeMethodResponse -> Maybe (HashMap Text Text)

-- | The headers of the HTTP response as a map from string to list of
--   values.
[$sel:multiValueHeaders:TestInvokeMethodResponse'] :: TestInvokeMethodResponse -> Maybe (HashMap Text [Text])

-- | The response's http status code.
[$sel:httpStatus:TestInvokeMethodResponse'] :: TestInvokeMethodResponse -> Int

-- | Create a value of <a>TestInvokeMethodResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:log:TestInvokeMethodResponse'</a>,
--   <a>testInvokeMethodResponse_log</a> - The API Gateway execution log
--   for the test invoke request.
--   
--   <a>$sel:status:TestInvokeMethodResponse'</a>,
--   <a>testInvokeMethodResponse_status</a> - The HTTP status code.
--   
--   <a>$sel:body:TestInvokeMethod'</a>,
--   <a>testInvokeMethodResponse_body</a> - The body of the HTTP response.
--   
--   <a>$sel:latency:TestInvokeMethodResponse'</a>,
--   <a>testInvokeMethodResponse_latency</a> - The execution latency of the
--   test invoke request.
--   
--   <a>$sel:headers:TestInvokeMethod'</a>,
--   <a>testInvokeMethodResponse_headers</a> - The headers of the HTTP
--   response.
--   
--   <a>$sel:multiValueHeaders:TestInvokeMethod'</a>,
--   <a>testInvokeMethodResponse_multiValueHeaders</a> - The headers of the
--   HTTP response as a map from string to list of values.
--   
--   <a>$sel:httpStatus:TestInvokeMethodResponse'</a>,
--   <a>testInvokeMethodResponse_httpStatus</a> - The response's http
--   status code.
newTestInvokeMethodResponse :: Int -> TestInvokeMethodResponse

-- | The API Gateway execution log for the test invoke request.
testInvokeMethodResponse_log :: Lens' TestInvokeMethodResponse (Maybe Text)

-- | The HTTP status code.
testInvokeMethodResponse_status :: Lens' TestInvokeMethodResponse (Maybe Int)

-- | The body of the HTTP response.
testInvokeMethodResponse_body :: Lens' TestInvokeMethodResponse (Maybe Text)

-- | The execution latency of the test invoke request.
testInvokeMethodResponse_latency :: Lens' TestInvokeMethodResponse (Maybe Integer)

-- | The headers of the HTTP response.
testInvokeMethodResponse_headers :: Lens' TestInvokeMethodResponse (Maybe (HashMap Text Text))

-- | The headers of the HTTP response as a map from string to list of
--   values.
testInvokeMethodResponse_multiValueHeaders :: Lens' TestInvokeMethodResponse (Maybe (HashMap Text [Text]))

-- | The response's http status code.
testInvokeMethodResponse_httpStatus :: Lens' TestInvokeMethodResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethod
instance GHC.Show.Show Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethod
instance GHC.Read.Read Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethod
instance GHC.Classes.Eq Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethod
instance GHC.Generics.Generic Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethodResponse
instance GHC.Show.Show Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethodResponse
instance GHC.Read.Read Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethodResponse
instance GHC.Classes.Eq Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethodResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethod
instance Control.DeepSeq.NFData Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethodResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethod
instance Control.DeepSeq.NFData Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethod
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethod
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethod
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethod
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.TestInvokeMethod.TestInvokeMethod


-- | Simulate the execution of an Authorizer in your RestApi with headers,
--   parameters, and an incoming request body.
--   
--   <a>Use Lambda Function as Authorizer</a> <a>Use Cognito User Pool as
--   Authorizer</a>
module Amazonka.APIGateway.TestInvokeAuthorizer

-- | Make a request to simulate the execution of an Authorizer.
--   
--   <i>See:</i> <a>newTestInvokeAuthorizer</a> smart constructor.
data TestInvokeAuthorizer
TestInvokeAuthorizer' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Maybe (HashMap Text [Text]) -> Text -> Text -> TestInvokeAuthorizer

-- | <ul>
--   <li><i>Optional</i> The URI path, including query string, of the
--   simulated invocation request. Use this to specify path parameters and
--   query string parameters.</li>
--   </ul>
[$sel:pathWithQueryString:TestInvokeAuthorizer'] :: TestInvokeAuthorizer -> Maybe Text

-- | <ul>
--   <li><i>Optional</i> The simulated request body of an incoming
--   invocation request.</li>
--   </ul>
[$sel:body:TestInvokeAuthorizer'] :: TestInvokeAuthorizer -> Maybe Text

-- | <ul>
--   <li><i>Optional</i> A key-value map of additional context
--   variables.</li>
--   </ul>
[$sel:additionalContext:TestInvokeAuthorizer'] :: TestInvokeAuthorizer -> Maybe (HashMap Text Text)

-- | A key-value map of stage variables to simulate an invocation on a
--   deployed Stage.
[$sel:stageVariables:TestInvokeAuthorizer'] :: TestInvokeAuthorizer -> Maybe (HashMap Text Text)

-- | <ul>
--   <li><i>Required</i> A key-value map of headers to simulate an incoming
--   invocation request. This is where the incoming authorization token, or
--   identity source, should be specified.</li>
--   </ul>
[$sel:headers:TestInvokeAuthorizer'] :: TestInvokeAuthorizer -> Maybe (HashMap Text Text)

-- | <ul>
--   <li><i>Optional</i> The headers as a map from string to list of values
--   to simulate an incoming invocation request. This is where the incoming
--   authorization token, or identity source, may be specified.</li>
--   </ul>
[$sel:multiValueHeaders:TestInvokeAuthorizer'] :: TestInvokeAuthorizer -> Maybe (HashMap Text [Text])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:TestInvokeAuthorizer'] :: TestInvokeAuthorizer -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a test invoke authorizer request's
--   Authorizer ID.</li>
--   </ul>
[$sel:authorizerId:TestInvokeAuthorizer'] :: TestInvokeAuthorizer -> Text

-- | Create a value of <a>TestInvokeAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathWithQueryString:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_pathWithQueryString</a> - [Optional] The URI
--   path, including query string, of the simulated invocation request. Use
--   this to specify path parameters and query string parameters.
--   
--   <a>$sel:body:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_body</a> - [Optional] The simulated request
--   body of an incoming invocation request.
--   
--   <a>$sel:additionalContext:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_additionalContext</a> - [Optional] A key-value
--   map of additional context variables.
--   
--   <a>$sel:stageVariables:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_stageVariables</a> - A key-value map of stage
--   variables to simulate an invocation on a deployed Stage.
--   
--   <a>$sel:headers:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_headers</a> - [Required] A key-value map of
--   headers to simulate an incoming invocation request. This is where the
--   incoming authorization token, or identity source, should be specified.
--   
--   <a>$sel:multiValueHeaders:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_multiValueHeaders</a> - [Optional] The headers
--   as a map from string to list of values to simulate an incoming
--   invocation request. This is where the incoming authorization token, or
--   identity source, may be specified.
--   
--   <a>$sel:restApiId:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:authorizerId:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_authorizerId</a> - [Required] Specifies a test
--   invoke authorizer request's Authorizer ID.
newTestInvokeAuthorizer :: Text -> Text -> TestInvokeAuthorizer

-- | <ul>
--   <li><i>Optional</i> The URI path, including query string, of the
--   simulated invocation request. Use this to specify path parameters and
--   query string parameters.</li>
--   </ul>
testInvokeAuthorizer_pathWithQueryString :: Lens' TestInvokeAuthorizer (Maybe Text)

-- | <ul>
--   <li><i>Optional</i> The simulated request body of an incoming
--   invocation request.</li>
--   </ul>
testInvokeAuthorizer_body :: Lens' TestInvokeAuthorizer (Maybe Text)

-- | <ul>
--   <li><i>Optional</i> A key-value map of additional context
--   variables.</li>
--   </ul>
testInvokeAuthorizer_additionalContext :: Lens' TestInvokeAuthorizer (Maybe (HashMap Text Text))

-- | A key-value map of stage variables to simulate an invocation on a
--   deployed Stage.
testInvokeAuthorizer_stageVariables :: Lens' TestInvokeAuthorizer (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> A key-value map of headers to simulate an incoming
--   invocation request. This is where the incoming authorization token, or
--   identity source, should be specified.</li>
--   </ul>
testInvokeAuthorizer_headers :: Lens' TestInvokeAuthorizer (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Optional</i> The headers as a map from string to list of values
--   to simulate an incoming invocation request. This is where the incoming
--   authorization token, or identity source, may be specified.</li>
--   </ul>
testInvokeAuthorizer_multiValueHeaders :: Lens' TestInvokeAuthorizer (Maybe (HashMap Text [Text]))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
testInvokeAuthorizer_restApiId :: Lens' TestInvokeAuthorizer Text

-- | <ul>
--   <li><i>Required</i> Specifies a test invoke authorizer request's
--   Authorizer ID.</li>
--   </ul>
testInvokeAuthorizer_authorizerId :: Lens' TestInvokeAuthorizer Text

-- | Represents the response of the test invoke request for a custom
--   Authorizer
--   
--   <i>See:</i> <a>newTestInvokeAuthorizerResponse</a> smart constructor.
data TestInvokeAuthorizerResponse
TestInvokeAuthorizerResponse' :: Maybe Text -> Maybe Text -> Maybe Integer -> Maybe (HashMap Text [Text]) -> Maybe (HashMap Text Text) -> Maybe Int -> Maybe Text -> Int -> TestInvokeAuthorizerResponse

-- | The API Gateway execution log for the test authorizer request.
[$sel:log:TestInvokeAuthorizerResponse'] :: TestInvokeAuthorizerResponse -> Maybe Text

-- | The principal identity returned by the Authorizer
[$sel:principalId:TestInvokeAuthorizerResponse'] :: TestInvokeAuthorizerResponse -> Maybe Text

-- | The execution latency of the test authorizer request.
[$sel:latency:TestInvokeAuthorizerResponse'] :: TestInvokeAuthorizerResponse -> Maybe Integer
[$sel:authorization:TestInvokeAuthorizerResponse'] :: TestInvokeAuthorizerResponse -> Maybe (HashMap Text [Text])

-- | The <a>open identity claims</a>, with any supported custom attributes,
--   returned from the Cognito Your User Pool configured for the API.
[$sel:claims:TestInvokeAuthorizerResponse'] :: TestInvokeAuthorizerResponse -> Maybe (HashMap Text Text)

-- | The HTTP status code that the client would have received. Value is 0
--   if the authorizer succeeded.
[$sel:clientStatus:TestInvokeAuthorizerResponse'] :: TestInvokeAuthorizerResponse -> Maybe Int

-- | The JSON policy document returned by the Authorizer
[$sel:policy:TestInvokeAuthorizerResponse'] :: TestInvokeAuthorizerResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:TestInvokeAuthorizerResponse'] :: TestInvokeAuthorizerResponse -> Int

-- | Create a value of <a>TestInvokeAuthorizerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:log:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_log</a> - The API Gateway execution
--   log for the test authorizer request.
--   
--   <a>$sel:principalId:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_principalId</a> - The principal
--   identity returned by the Authorizer
--   
--   <a>$sel:latency:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_latency</a> - The execution latency of
--   the test authorizer request.
--   
--   <a>$sel:authorization:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_authorization</a> - Undocumented
--   member.
--   
--   <a>$sel:claims:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_claims</a> - The <a>open identity
--   claims</a>, with any supported custom attributes, returned from the
--   Cognito Your User Pool configured for the API.
--   
--   <a>$sel:clientStatus:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_clientStatus</a> - The HTTP status
--   code that the client would have received. Value is 0 if the authorizer
--   succeeded.
--   
--   <a>$sel:policy:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_policy</a> - The JSON policy document
--   returned by the Authorizer
--   
--   <a>$sel:httpStatus:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_httpStatus</a> - The response's http
--   status code.
newTestInvokeAuthorizerResponse :: Int -> TestInvokeAuthorizerResponse

-- | The API Gateway execution log for the test authorizer request.
testInvokeAuthorizerResponse_log :: Lens' TestInvokeAuthorizerResponse (Maybe Text)

-- | The principal identity returned by the Authorizer
testInvokeAuthorizerResponse_principalId :: Lens' TestInvokeAuthorizerResponse (Maybe Text)

-- | The execution latency of the test authorizer request.
testInvokeAuthorizerResponse_latency :: Lens' TestInvokeAuthorizerResponse (Maybe Integer)

-- | Undocumented member.
testInvokeAuthorizerResponse_authorization :: Lens' TestInvokeAuthorizerResponse (Maybe (HashMap Text [Text]))

-- | The <a>open identity claims</a>, with any supported custom attributes,
--   returned from the Cognito Your User Pool configured for the API.
testInvokeAuthorizerResponse_claims :: Lens' TestInvokeAuthorizerResponse (Maybe (HashMap Text Text))

-- | The HTTP status code that the client would have received. Value is 0
--   if the authorizer succeeded.
testInvokeAuthorizerResponse_clientStatus :: Lens' TestInvokeAuthorizerResponse (Maybe Int)

-- | The JSON policy document returned by the Authorizer
testInvokeAuthorizerResponse_policy :: Lens' TestInvokeAuthorizerResponse (Maybe Text)

-- | The response's http status code.
testInvokeAuthorizerResponse_httpStatus :: Lens' TestInvokeAuthorizerResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizer
instance GHC.Show.Show Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizer
instance GHC.Read.Read Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizer
instance GHC.Classes.Eq Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizer
instance GHC.Generics.Generic Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizerResponse
instance GHC.Show.Show Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizerResponse
instance GHC.Read.Read Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizerResponse
instance GHC.Classes.Eq Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizerResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizer
instance Control.DeepSeq.NFData Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizerResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizer
instance Control.DeepSeq.NFData Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizer
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizer
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizer
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.TestInvokeAuthorizer.TestInvokeAuthorizer


-- | Adds or updates a tag on a given resource.
module Amazonka.APIGateway.TagResource

-- | Adds or updates a tag on a given resource.
--   
--   <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | <ul>
--   <li><i>Required</i> The ARN of a resource that can be tagged.</li>
--   </ul>
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | <ul>
--   <li><i>Required</i> The key-value map of strings. The valid character
--   set is</li>
--   <li><i>a-zA-Z+-=._:/</i> . The tag key can be up to 128 characters and
--   must not start with <tt>aws:</tt>. The tag value can be up to 256
--   characters.</li>
--   </ul>
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   [Required] The ARN of a resource that can be tagged.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - [Required]
--   The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
newTagResource :: Text -> TagResource

-- | <ul>
--   <li><i>Required</i> The ARN of a resource that can be tagged.</li>
--   </ul>
tagResource_resourceArn :: Lens' TagResource Text

-- | <ul>
--   <li><i>Required</i> The key-value map of strings. The valid character
--   set is</li>
--   <li><i>a-zA-Z+-=._:/</i> . The tag key can be up to 128 characters and
--   must not start with <tt>aws:</tt>. The tag value can be up to 256
--   characters.</li>
--   </ul>
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Amazonka.APIGateway.TagResource.TagResource
instance GHC.Show.Show Amazonka.APIGateway.TagResource.TagResource
instance GHC.Read.Read Amazonka.APIGateway.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.APIGateway.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.APIGateway.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.APIGateway.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.APIGateway.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.APIGateway.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.APIGateway.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.APIGateway.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.TagResource.TagResource


-- | A feature of the API Gateway control service for updating an existing
--   API with an input of external API definitions. The update can take the
--   form of merging the supplied definition into the existing API or
--   overwriting the existing API.
module Amazonka.APIGateway.PutRestApi

-- | A PUT request to update an existing API, with external API definitions
--   specified as the request body.
--   
--   <i>See:</i> <a>newPutRestApi</a> smart constructor.
data PutRestApi
PutRestApi' :: Maybe PutMode -> Maybe Bool -> Maybe (HashMap Text Text) -> Text -> ByteString -> PutRestApi

-- | The <tt>mode</tt> query parameter to specify the update mode. Valid
--   values are "merge" and "overwrite". By default, the update mode is
--   "merge".
[$sel:mode:PutRestApi'] :: PutRestApi -> Maybe PutMode

-- | A query parameter to indicate whether to rollback the API update
--   (<tt>true</tt>) or not (<tt>false</tt>) when a warning is encountered.
--   The default value is <tt>false</tt>.
[$sel:failOnWarnings:PutRestApi'] :: PutRestApi -> Maybe Bool

-- | Custom header parameters as part of the request. For example, to
--   exclude DocumentationParts from an imported API, set
--   <tt>ignore=documentation</tt> as a <tt>parameters</tt> value, as in
--   the AWS CLI command of <tt>aws apigateway import-rest-api --parameters
--   ignore=documentation --body
--   'file:///path/to/imported-api-body.json'</tt>.
[$sel:parameters:PutRestApi'] :: PutRestApi -> Maybe (HashMap Text Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:PutRestApi'] :: PutRestApi -> Text

-- | <ul>
--   <li><i>Required</i> The PUT request body containing external API
--   definitions. Currently, only OpenAPI definition JSON/YAML files are
--   supported. The maximum size of the API definition file is 6MB.</li>
--   </ul>
[$sel:body:PutRestApi'] :: PutRestApi -> ByteString

-- | Create a value of <a>PutRestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:PutRestApi'</a>, <a>putRestApi_mode</a> - The
--   <tt>mode</tt> query parameter to specify the update mode. Valid values
--   are "merge" and "overwrite". By default, the update mode is "merge".
--   
--   <a>$sel:failOnWarnings:PutRestApi'</a>,
--   <a>putRestApi_failOnWarnings</a> - A query parameter to indicate
--   whether to rollback the API update (<tt>true</tt>) or not
--   (<tt>false</tt>) when a warning is encountered. The default value is
--   <tt>false</tt>.
--   
--   <a>$sel:parameters:PutRestApi'</a>, <a>putRestApi_parameters</a> -
--   Custom header parameters as part of the request. For example, to
--   exclude DocumentationParts from an imported API, set
--   <tt>ignore=documentation</tt> as a <tt>parameters</tt> value, as in
--   the AWS CLI command of <tt>aws apigateway import-rest-api --parameters
--   ignore=documentation --body
--   'file:///path/to/imported-api-body.json'</tt>.
--   
--   <a>$sel:restApiId:PutRestApi'</a>, <a>putRestApi_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:body:PutRestApi'</a>, <a>putRestApi_body</a> - [Required] The
--   PUT request body containing external API definitions. Currently, only
--   OpenAPI definition JSON/YAML files are supported. The maximum size of
--   the API definition file is 6MB.
newPutRestApi :: Text -> ByteString -> PutRestApi

-- | The <tt>mode</tt> query parameter to specify the update mode. Valid
--   values are "merge" and "overwrite". By default, the update mode is
--   "merge".
putRestApi_mode :: Lens' PutRestApi (Maybe PutMode)

-- | A query parameter to indicate whether to rollback the API update
--   (<tt>true</tt>) or not (<tt>false</tt>) when a warning is encountered.
--   The default value is <tt>false</tt>.
putRestApi_failOnWarnings :: Lens' PutRestApi (Maybe Bool)

-- | Custom header parameters as part of the request. For example, to
--   exclude DocumentationParts from an imported API, set
--   <tt>ignore=documentation</tt> as a <tt>parameters</tt> value, as in
--   the AWS CLI command of <tt>aws apigateway import-rest-api --parameters
--   ignore=documentation --body
--   'file:///path/to/imported-api-body.json'</tt>.
putRestApi_parameters :: Lens' PutRestApi (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
putRestApi_restApiId :: Lens' PutRestApi Text

-- | <ul>
--   <li><i>Required</i> The PUT request body containing external API
--   definitions. Currently, only OpenAPI definition JSON/YAML files are
--   supported. The maximum size of the API definition file is 6MB.</li>
--   </ul>
putRestApi_body :: Lens' PutRestApi ByteString

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
[$sel:minimumCompressionSize:RestApi'] :: RestApi -> Maybe Int

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
[$sel:disableExecuteApiEndpoint:RestApi'] :: RestApi -> Maybe Bool

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
[$sel:binaryMediaTypes:RestApi'] :: RestApi -> Maybe [Text]

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
[$sel:warnings:RestApi'] :: RestApi -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:RestApi'] :: RestApi -> Maybe POSIX

-- | The API's name.
[$sel:name:RestApi'] :: RestApi -> Maybe Text

-- | A version identifier for the API.
[$sel:version:RestApi'] :: RestApi -> Maybe Text

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
[$sel:apiKeySource:RestApi'] :: RestApi -> Maybe ApiKeySourceType

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
[$sel:id:RestApi'] :: RestApi -> Maybe Text

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
[$sel:policy:RestApi'] :: RestApi -> Maybe Text

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
[$sel:endpointConfiguration:RestApi'] :: RestApi -> Maybe EndpointConfiguration

-- | The API's description.
[$sel:description:RestApi'] :: RestApi -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:RestApi'] :: RestApi -> Maybe (HashMap Text Text)

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.PutRestApi.PutRestApi
instance GHC.Show.Show Amazonka.APIGateway.PutRestApi.PutRestApi
instance GHC.Classes.Eq Amazonka.APIGateway.PutRestApi.PutRestApi
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.PutRestApi.PutRestApi
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.PutRestApi.PutRestApi
instance Control.DeepSeq.NFData Amazonka.APIGateway.PutRestApi.PutRestApi
instance Amazonka.Data.Body.ToBody Amazonka.APIGateway.PutRestApi.PutRestApi
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.PutRestApi.PutRestApi
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.PutRestApi.PutRestApi
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.PutRestApi.PutRestApi


-- | Adds a MethodResponse to an existing Method resource.
module Amazonka.APIGateway.PutMethodResponse

-- | Request to add a MethodResponse to an existing Method resource.
--   
--   <i>See:</i> <a>newPutMethodResponse</a> smart constructor.
data PutMethodResponse
PutMethodResponse' :: Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Text -> Text -> Text -> Text -> PutMethodResponse

-- | Specifies the Model resources used for the response's content type.
--   Response models are represented as a key/value map, with a content
--   type as the key and a Model name as the value.
[$sel:responseModels:PutMethodResponse'] :: PutMethodResponse -> Maybe (HashMap Text Text)

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header name and the associated value is a Boolean flag
--   indicating whether the method response parameter is required or not.
--   The method response header names must match the pattern of
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. The response parameter names defined here are
--   available in the integration response to be mapped from an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
[$sel:responseParameters:PutMethodResponse'] :: PutMethodResponse -> Maybe (HashMap Text Bool)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:PutMethodResponse'] :: PutMethodResponse -> Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the Method
--   resource.</li>
--   </ul>
[$sel:resourceId:PutMethodResponse'] :: PutMethodResponse -> Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
[$sel:httpMethod:PutMethodResponse'] :: PutMethodResponse -> Text

-- | <ul>
--   <li><i>Required</i> The method response's status code.</li>
--   </ul>
[$sel:statusCode:PutMethodResponse'] :: PutMethodResponse -> Text

-- | Create a value of <a>PutMethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseModels:PutMethodResponse'</a>,
--   <a>putMethodResponse_responseModels</a> - Specifies the Model
--   resources used for the response's content type. Response models are
--   represented as a key/value map, with a content type as the key and a
--   Model name as the value.
--   
--   <a>$sel:responseParameters:PutMethodResponse'</a>,
--   <a>putMethodResponse_responseParameters</a> - A key-value map
--   specifying required or optional response parameters that API Gateway
--   can send back to the caller. A key defines a method response header
--   name and the associated value is a Boolean flag indicating whether the
--   method response parameter is required or not. The method response
--   header names must match the pattern of
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. The response parameter names defined here are
--   available in the integration response to be mapped from an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
--   
--   <a>$sel:restApiId:PutMethodResponse'</a>,
--   <a>putMethodResponse_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:resourceId:PutMethodResponse'</a>,
--   <a>putMethodResponse_resourceId</a> - [Required] The Resource
--   identifier for the Method resource.
--   
--   <a>$sel:httpMethod:PutMethodResponse'</a>,
--   <a>putMethodResponse_httpMethod</a> - [Required] The HTTP verb of the
--   Method resource.
--   
--   <a>$sel:statusCode:PutMethodResponse'</a>,
--   <a>putMethodResponse_statusCode</a> - [Required] The method response's
--   status code.
newPutMethodResponse :: Text -> Text -> Text -> Text -> PutMethodResponse

-- | Specifies the Model resources used for the response's content type.
--   Response models are represented as a key/value map, with a content
--   type as the key and a Model name as the value.
putMethodResponse_responseModels :: Lens' PutMethodResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header name and the associated value is a Boolean flag
--   indicating whether the method response parameter is required or not.
--   The method response header names must match the pattern of
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. The response parameter names defined here are
--   available in the integration response to be mapped from an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
putMethodResponse_responseParameters :: Lens' PutMethodResponse (Maybe (HashMap Text Bool))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
putMethodResponse_restApiId :: Lens' PutMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the Method
--   resource.</li>
--   </ul>
putMethodResponse_resourceId :: Lens' PutMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
putMethodResponse_httpMethod :: Lens' PutMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The method response's status code.</li>
--   </ul>
putMethodResponse_statusCode :: Lens' PutMethodResponse Text

-- | Represents a method response of a given HTTP status code returned to
--   the client. The method response is passed from the back end through
--   the associated integration response that can be transformed using a
--   mapping template.
--   
--   <h4>Example: A <b>MethodResponse</b> instance of an API</h4>
--   
--   <h5>Request</h5>
--   
--   The example request retrieves a <b>MethodResponse</b> of the 200
--   status code.
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T222952Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" }
--   </pre>
--   
--   Method, IntegrationResponse, Integration <a>Creating an API</a>
--   
--   <i>See:</i> <a>newMethodResponse</a> smart constructor.
data MethodResponse
MethodResponse' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Bool) -> MethodResponse

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
[$sel:responseModels:MethodResponse'] :: MethodResponse -> Maybe (HashMap Text Text)

-- | The method response's status code.
[$sel:statusCode:MethodResponse'] :: MethodResponse -> Maybe Text

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
[$sel:responseParameters:MethodResponse'] :: MethodResponse -> Maybe (HashMap Text Bool)

-- | Create a value of <a>MethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseModels:MethodResponse'</a>,
--   <a>methodResponse_responseModels</a> - Specifies the Model resources
--   used for the response's content-type. Response models are represented
--   as a key/value map, with a content-type as the key and a Model name as
--   the value.
--   
--   <a>$sel:statusCode:MethodResponse'</a>,
--   <a>methodResponse_statusCode</a> - The method response's status code.
--   
--   <a>$sel:responseParameters:MethodResponse'</a>,
--   <a>methodResponse_responseParameters</a> - A key-value map specifying
--   required or optional response parameters that API Gateway can send
--   back to the caller. A key defines a method response header and the
--   value specifies whether the associated method response header is
--   required or not. The expression of the key must match the pattern
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. API Gateway passes certain integration
--   response data to the method response headers specified here according
--   to the mapping you prescribe in the API's IntegrationResponse. The
--   integration response data that can be mapped include an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
newMethodResponse :: MethodResponse

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
methodResponse_responseModels :: Lens' MethodResponse (Maybe (HashMap Text Text))

-- | The method response's status code.
methodResponse_statusCode :: Lens' MethodResponse (Maybe Text)

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
methodResponse_responseParameters :: Lens' MethodResponse (Maybe (HashMap Text Bool))
instance GHC.Generics.Generic Amazonka.APIGateway.PutMethodResponse.PutMethodResponse
instance GHC.Show.Show Amazonka.APIGateway.PutMethodResponse.PutMethodResponse
instance GHC.Read.Read Amazonka.APIGateway.PutMethodResponse.PutMethodResponse
instance GHC.Classes.Eq Amazonka.APIGateway.PutMethodResponse.PutMethodResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.PutMethodResponse.PutMethodResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.PutMethodResponse.PutMethodResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.PutMethodResponse.PutMethodResponse
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.PutMethodResponse.PutMethodResponse
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.PutMethodResponse.PutMethodResponse
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.PutMethodResponse.PutMethodResponse
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.PutMethodResponse.PutMethodResponse


-- | Add a method to an existing Resource resource.
module Amazonka.APIGateway.PutMethod

-- | Request to add a method to an existing Resource resource.
--   
--   <i>See:</i> <a>newPutMethod</a> smart constructor.
data PutMethod
PutMethod' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Maybe Text -> Maybe Text -> Maybe Bool -> Text -> Text -> Text -> Text -> PutMethod

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
[$sel:authorizationScopes:PutMethod'] :: PutMethod -> Maybe [Text]

-- | The identifier of a RequestValidator for validating the method
--   request.
[$sel:requestValidatorId:PutMethod'] :: PutMethod -> Maybe Text

-- | Specifies the Model resources used for the request's content type.
--   Request models are represented as a key/value map, with a content type
--   as the key and a Model name as the value.
[$sel:requestModels:PutMethod'] :: PutMethod -> Maybe (HashMap Text Text)

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key defines a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   body-mapping templates.
[$sel:requestParameters:PutMethod'] :: PutMethod -> Maybe (HashMap Text Bool)

-- | Specifies the identifier of an Authorizer to use on this Method, if
--   the type is CUSTOM or COGNITO_USER_POOLS. The authorizer identifier is
--   generated by API Gateway when you created the authorizer.
[$sel:authorizerId:PutMethod'] :: PutMethod -> Maybe Text

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
[$sel:operationName:PutMethod'] :: PutMethod -> Maybe Text

-- | Specifies whether the method required a valid ApiKey.
[$sel:apiKeyRequired:PutMethod'] :: PutMethod -> Maybe Bool

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:PutMethod'] :: PutMethod -> Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the new Method
--   resource.</li>
--   </ul>
[$sel:resourceId:PutMethod'] :: PutMethod -> Text

-- | <ul>
--   <li><i>Required</i> Specifies the method request's HTTP method
--   type.</li>
--   </ul>
[$sel:httpMethod:PutMethod'] :: PutMethod -> Text

-- | <ul>
--   <li><i>Required</i> The method's authorization type. Valid values are
--   <tt>NONE</tt> for open access, <tt>AWS_IAM</tt> for using AWS IAM
--   permissions, <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.</li>
--   </ul>
[$sel:authorizationType:PutMethod'] :: PutMethod -> Text

-- | Create a value of <a>PutMethod</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:PutMethod'</a>,
--   <a>putMethod_authorizationScopes</a> - A list of authorization scopes
--   configured on the method. The scopes are used with a
--   <tt>COGNITO_USER_POOLS</tt> authorizer to authorize the method
--   invocation. The authorization works by matching the method scopes
--   against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:requestValidatorId:PutMethod'</a>,
--   <a>putMethod_requestValidatorId</a> - The identifier of a
--   RequestValidator for validating the method request.
--   
--   <a>$sel:requestModels:PutMethod'</a>, <a>putMethod_requestModels</a> -
--   Specifies the Model resources used for the request's content type.
--   Request models are represented as a key/value map, with a content type
--   as the key and a Model name as the value.
--   
--   <a>$sel:requestParameters:PutMethod'</a>,
--   <a>putMethod_requestParameters</a> - A key-value map defining required
--   or optional method request parameters that can be accepted by API
--   Gateway. A key defines a method request parameter name matching the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> is a valid and unique parameter
--   name. The value associated with the key is a Boolean flag indicating
--   whether the parameter is required (<tt>true</tt>) or optional
--   (<tt>false</tt>). The method request parameter names defined here are
--   available in Integration to be mapped to integration request
--   parameters or body-mapping templates.
--   
--   <a>$sel:authorizerId:PutMethod'</a>, <a>putMethod_authorizerId</a> -
--   Specifies the identifier of an Authorizer to use on this Method, if
--   the type is CUSTOM or COGNITO_USER_POOLS. The authorizer identifier is
--   generated by API Gateway when you created the authorizer.
--   
--   <a>$sel:operationName:PutMethod'</a>, <a>putMethod_operationName</a> -
--   A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
--   
--   <a>$sel:apiKeyRequired:PutMethod'</a>, <a>putMethod_apiKeyRequired</a>
--   - Specifies whether the method required a valid ApiKey.
--   
--   <a>$sel:restApiId:PutMethod'</a>, <a>putMethod_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:PutMethod'</a>, <a>putMethod_resourceId</a> -
--   [Required] The Resource identifier for the new Method resource.
--   
--   <a>$sel:httpMethod:PutMethod'</a>, <a>putMethod_httpMethod</a> -
--   [Required] Specifies the method request's HTTP method type.
--   
--   <a>$sel:authorizationType:PutMethod'</a>,
--   <a>putMethod_authorizationType</a> - [Required] The method's
--   authorization type. Valid values are <tt>NONE</tt> for open access,
--   <tt>AWS_IAM</tt> for using AWS IAM permissions, <tt>CUSTOM</tt> for
--   using a custom authorizer, or <tt>COGNITO_USER_POOLS</tt> for using a
--   Cognito user pool.
newPutMethod :: Text -> Text -> Text -> Text -> PutMethod

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
putMethod_authorizationScopes :: Lens' PutMethod (Maybe [Text])

-- | The identifier of a RequestValidator for validating the method
--   request.
putMethod_requestValidatorId :: Lens' PutMethod (Maybe Text)

-- | Specifies the Model resources used for the request's content type.
--   Request models are represented as a key/value map, with a content type
--   as the key and a Model name as the value.
putMethod_requestModels :: Lens' PutMethod (Maybe (HashMap Text Text))

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key defines a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   body-mapping templates.
putMethod_requestParameters :: Lens' PutMethod (Maybe (HashMap Text Bool))

-- | Specifies the identifier of an Authorizer to use on this Method, if
--   the type is CUSTOM or COGNITO_USER_POOLS. The authorizer identifier is
--   generated by API Gateway when you created the authorizer.
putMethod_authorizerId :: Lens' PutMethod (Maybe Text)

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
putMethod_operationName :: Lens' PutMethod (Maybe Text)

-- | Specifies whether the method required a valid ApiKey.
putMethod_apiKeyRequired :: Lens' PutMethod (Maybe Bool)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
putMethod_restApiId :: Lens' PutMethod Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the new Method
--   resource.</li>
--   </ul>
putMethod_resourceId :: Lens' PutMethod Text

-- | <ul>
--   <li><i>Required</i> Specifies the method request's HTTP method
--   type.</li>
--   </ul>
putMethod_httpMethod :: Lens' PutMethod Text

-- | <ul>
--   <li><i>Required</i> The method's authorization type. Valid values are
--   <tt>NONE</tt> for open access, <tt>AWS_IAM</tt> for using AWS IAM
--   permissions, <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.</li>
--   </ul>
putMethod_authorizationType :: Lens' PutMethod Text

-- | Represents a client-facing interface by which the client calls the API
--   to access back-end resources. A <b>Method</b> resource is integrated
--   with an Integration resource. Both consist of a request and one or
--   more responses. The method request takes the client input that is
--   passed to the back end through the integration request. A method
--   response returns the output from the back end to the client through an
--   integration response. A method request is embodied in a <b>Method</b>
--   resource, whereas an integration request is embodied in an Integration
--   resource. On the other hand, a method response is represented by a
--   MethodResponse resource, whereas an integration response is
--   represented by an IntegrationResponse resource.
--   
--   <h4>Example: Retrive the GET method on a specified resource</h4>
--   
--   <h5>Request</h5>
--   
--   The following example request retrieves the information about the GET
--   method on an API resource (<tt>3kzxbg5sa2</tt>) of an API
--   (<tt>fugvjdxtri</tt>).
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T210259Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": true, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\")" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   In the example above, the response template for the <tt>200 OK</tt>
--   response maps the JSON output from the <tt>ListStreams</tt> action in
--   the back end to an XML output. The mapping template is URL-encoded as
--   <tt>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</tt>
--   and the output is decoded using the <a>$util.urlDecode()</a> helper
--   function.
--   
--   MethodResponse, Integration, IntegrationResponse, Resource, <a>Set up
--   an API's method</a>
--   
--   <i>See:</i> <a>newMethod</a> smart constructor.
data Method
Method' :: Maybe (HashMap Text MethodResponse) -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Integration -> Method

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
[$sel:methodResponses:Method'] :: Method -> Maybe (HashMap Text MethodResponse)

-- | The method's HTTP verb.
[$sel:httpMethod:Method'] :: Method -> Maybe Text

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
[$sel:authorizationScopes:Method'] :: Method -> Maybe [Text]

-- | The identifier of a RequestValidator for request validation.
[$sel:requestValidatorId:Method'] :: Method -> Maybe Text

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
[$sel:requestModels:Method'] :: Method -> Maybe (HashMap Text Text)

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
[$sel:requestParameters:Method'] :: Method -> Maybe (HashMap Text Bool)

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
[$sel:authorizerId:Method'] :: Method -> Maybe Text

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
[$sel:operationName:Method'] :: Method -> Maybe Text

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
[$sel:authorizationType:Method'] :: Method -> Maybe Text

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
[$sel:apiKeyRequired:Method'] :: Method -> Maybe Bool

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
[$sel:methodIntegration:Method'] :: Method -> Maybe Integration

-- | Create a value of <a>Method</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodResponses:Method'</a>, <a>method_methodResponses</a> -
--   Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
--   
--   <a>$sel:httpMethod:Method'</a>, <a>method_httpMethod</a> - The
--   method's HTTP verb.
--   
--   <a>$sel:authorizationScopes:Method'</a>,
--   <a>method_authorizationScopes</a> - A list of authorization scopes
--   configured on the method. The scopes are used with a
--   <tt>COGNITO_USER_POOLS</tt> authorizer to authorize the method
--   invocation. The authorization works by matching the method scopes
--   against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:requestValidatorId:Method'</a>,
--   <a>method_requestValidatorId</a> - The identifier of a
--   RequestValidator for request validation.
--   
--   <a>$sel:requestModels:Method'</a>, <a>method_requestModels</a> - A
--   key-value map specifying data schemas, represented by Model resources,
--   (as the mapped value) of the request payloads of given content types
--   (as the mapping key).
--   
--   <a>$sel:requestParameters:Method'</a>, <a>method_requestParameters</a>
--   - A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
--   
--   <a>$sel:authorizerId:Method'</a>, <a>method_authorizerId</a> - The
--   identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
--   
--   <a>$sel:operationName:Method'</a>, <a>method_operationName</a> - A
--   human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
--   
--   <a>$sel:authorizationType:Method'</a>, <a>method_authorizationType</a>
--   - The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
--   
--   <a>$sel:apiKeyRequired:Method'</a>, <a>method_apiKeyRequired</a> - A
--   boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
--   
--   <a>$sel:methodIntegration:Method'</a>, <a>method_methodIntegration</a>
--   - Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
newMethod :: Method

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodResponses :: Lens' Method (Maybe (HashMap Text MethodResponse))

-- | The method's HTTP verb.
method_httpMethod :: Lens' Method (Maybe Text)

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
method_authorizationScopes :: Lens' Method (Maybe [Text])

-- | The identifier of a RequestValidator for request validation.
method_requestValidatorId :: Lens' Method (Maybe Text)

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
method_requestModels :: Lens' Method (Maybe (HashMap Text Text))

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
method_requestParameters :: Lens' Method (Maybe (HashMap Text Bool))

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
method_authorizerId :: Lens' Method (Maybe Text)

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
method_operationName :: Lens' Method (Maybe Text)

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
method_authorizationType :: Lens' Method (Maybe Text)

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
method_apiKeyRequired :: Lens' Method (Maybe Bool)

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodIntegration :: Lens' Method (Maybe Integration)
instance GHC.Generics.Generic Amazonka.APIGateway.PutMethod.PutMethod
instance GHC.Show.Show Amazonka.APIGateway.PutMethod.PutMethod
instance GHC.Read.Read Amazonka.APIGateway.PutMethod.PutMethod
instance GHC.Classes.Eq Amazonka.APIGateway.PutMethod.PutMethod
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.PutMethod.PutMethod
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.PutMethod.PutMethod
instance Control.DeepSeq.NFData Amazonka.APIGateway.PutMethod.PutMethod
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.PutMethod.PutMethod
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.PutMethod.PutMethod
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.PutMethod.PutMethod
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.PutMethod.PutMethod


-- | Represents a put integration.
module Amazonka.APIGateway.PutIntegrationResponse

-- | Represents a put integration response request.
--   
--   <i>See:</i> <a>newPutIntegrationResponse</a> smart constructor.
data PutIntegrationResponse
PutIntegrationResponse' :: Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> PutIntegrationResponse

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
[$sel:contentHandling:PutIntegrationResponse'] :: PutIntegrationResponse -> Maybe ContentHandlingStrategy

-- | Specifies a put integration response's templates.
[$sel:responseTemplates:PutIntegrationResponse'] :: PutIntegrationResponse -> Maybe (HashMap Text Text)

-- | Specifies the selection pattern of a put integration response.
[$sel:selectionPattern:PutIntegrationResponse'] :: PutIntegrationResponse -> Maybe Text

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> must be a valid and unique response header name and
--   <tt>JSON-expression</tt> a valid JSON expression without the
--   <tt>$</tt> prefix.
[$sel:responseParameters:PutIntegrationResponse'] :: PutIntegrationResponse -> Maybe (HashMap Text Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:PutIntegrationResponse'] :: PutIntegrationResponse -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration response request's
--   resource identifier.</li>
--   </ul>
[$sel:resourceId:PutIntegrationResponse'] :: PutIntegrationResponse -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration response request's
--   HTTP method.</li>
--   </ul>
[$sel:httpMethod:PutIntegrationResponse'] :: PutIntegrationResponse -> Text

-- | <ul>
--   <li><i>Required</i> Specifies the status code that is used to map the
--   integration response to an existing MethodResponse.</li>
--   </ul>
[$sel:statusCode:PutIntegrationResponse'] :: PutIntegrationResponse -> Text

-- | Create a value of <a>PutIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentHandling:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_contentHandling</a> - Specifies how to
--   handle response payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
--   
--   <a>$sel:responseTemplates:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_responseTemplates</a> - Specifies a put
--   integration response's templates.
--   
--   <a>$sel:selectionPattern:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_selectionPattern</a> - Specifies the
--   selection pattern of a put integration response.
--   
--   <a>$sel:responseParameters:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the back end. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of <tt>method.response.header.{name}</tt>, where <tt>name</tt>
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> must be a valid and unique response header name and
--   <tt>JSON-expression</tt> a valid JSON expression without the
--   <tt>$</tt> prefix.
--   
--   <a>$sel:restApiId:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_resourceId</a> - [Required] Specifies a put
--   integration response request's resource identifier.
--   
--   <a>$sel:httpMethod:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_httpMethod</a> - [Required] Specifies a put
--   integration response request's HTTP method.
--   
--   <a>$sel:statusCode:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_statusCode</a> - [Required] Specifies the
--   status code that is used to map the integration response to an
--   existing MethodResponse.
newPutIntegrationResponse :: Text -> Text -> Text -> Text -> PutIntegrationResponse

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
putIntegrationResponse_contentHandling :: Lens' PutIntegrationResponse (Maybe ContentHandlingStrategy)

-- | Specifies a put integration response's templates.
putIntegrationResponse_responseTemplates :: Lens' PutIntegrationResponse (Maybe (HashMap Text Text))

-- | Specifies the selection pattern of a put integration response.
putIntegrationResponse_selectionPattern :: Lens' PutIntegrationResponse (Maybe Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> must be a valid and unique response header name and
--   <tt>JSON-expression</tt> a valid JSON expression without the
--   <tt>$</tt> prefix.
putIntegrationResponse_responseParameters :: Lens' PutIntegrationResponse (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
putIntegrationResponse_restApiId :: Lens' PutIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration response request's
--   resource identifier.</li>
--   </ul>
putIntegrationResponse_resourceId :: Lens' PutIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration response request's
--   HTTP method.</li>
--   </ul>
putIntegrationResponse_httpMethod :: Lens' PutIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies the status code that is used to map the
--   integration response to an existing MethodResponse.</li>
--   </ul>
putIntegrationResponse_statusCode :: Lens' PutIntegrationResponse Text

-- | Represents an integration response. The status code must map to an
--   existing MethodResponse, and parameters and templates can be used to
--   transform the back-end response.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegrationResponse</a> smart constructor.
data IntegrationResponse
IntegrationResponse' :: Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> IntegrationResponse

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
[$sel:contentHandling:IntegrationResponse'] :: IntegrationResponse -> Maybe ContentHandlingStrategy

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
[$sel:responseTemplates:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
[$sel:selectionPattern:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
[$sel:statusCode:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
[$sel:responseParameters:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | Create a value of <a>IntegrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentHandling:IntegrationResponse'</a>,
--   <a>integrationResponse_contentHandling</a> - Specifies how to handle
--   response payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
--   
--   <a>$sel:responseTemplates:IntegrationResponse'</a>,
--   <a>integrationResponse_responseTemplates</a> - Specifies the templates
--   used to transform the integration response body. Response templates
--   are represented as a key/value map, with a content-type as the key and
--   a template as the value.
--   
--   <a>$sel:selectionPattern:IntegrationResponse'</a>,
--   <a>integrationResponse_selectionPattern</a> - Specifies the regular
--   expression (regex) pattern used to choose an integration response
--   based on the response from the back end. For example, if the success
--   response returns nothing and the error response returns some string,
--   you could use the <tt>.+</tt> regex to match error response. However,
--   make sure that the error response does not contain any newline
--   (<tt>\n</tt>) character in such cases. If the back end is an AWS
--   Lambda function, the AWS Lambda function error header is matched. For
--   all other HTTP and AWS back ends, the HTTP status code is matched.
--   
--   <a>$sel:statusCode:IntegrationResponse'</a>,
--   <a>integrationResponse_statusCode</a> - Specifies the status code that
--   is used to map the integration response to an existing MethodResponse.
--   
--   <a>$sel:responseParameters:IntegrationResponse'</a>,
--   <a>integrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the back end. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of <tt>method.response.header.{name}</tt>, where <tt>name</tt>
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
newIntegrationResponse :: IntegrationResponse

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
integrationResponse_contentHandling :: Lens' IntegrationResponse (Maybe ContentHandlingStrategy)

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
integrationResponse_responseTemplates :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
integrationResponse_selectionPattern :: Lens' IntegrationResponse (Maybe Text)

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
integrationResponse_statusCode :: Lens' IntegrationResponse (Maybe Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
integrationResponse_responseParameters :: Lens' IntegrationResponse (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.PutIntegrationResponse.PutIntegrationResponse
instance GHC.Show.Show Amazonka.APIGateway.PutIntegrationResponse.PutIntegrationResponse
instance GHC.Read.Read Amazonka.APIGateway.PutIntegrationResponse.PutIntegrationResponse
instance GHC.Classes.Eq Amazonka.APIGateway.PutIntegrationResponse.PutIntegrationResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.PutIntegrationResponse.PutIntegrationResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.PutIntegrationResponse.PutIntegrationResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.PutIntegrationResponse.PutIntegrationResponse
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.PutIntegrationResponse.PutIntegrationResponse
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.PutIntegrationResponse.PutIntegrationResponse
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.PutIntegrationResponse.PutIntegrationResponse
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.PutIntegrationResponse.PutIntegrationResponse


-- | Sets up a method's integration.
module Amazonka.APIGateway.PutIntegration

-- | Sets up a method's integration.
--   
--   <i>See:</i> <a>newPutIntegration</a> smart constructor.
data PutIntegration
PutIntegration' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe Text -> Maybe TlsConfig -> Maybe Text -> Maybe Int -> Maybe ConnectionType -> Maybe Text -> Maybe [Text] -> Text -> Text -> Text -> IntegrationType -> PutIntegration

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
[$sel:requestTemplates:PutIntegration'] :: PutIntegration -> Maybe (HashMap Text Text)

-- | Specifies whether credentials are required for a put integration.
[$sel:credentials:PutIntegration'] :: PutIntegration -> Maybe Text

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
[$sel:connectionId:PutIntegration'] :: PutIntegration -> Maybe Text

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
[$sel:requestParameters:PutIntegration'] :: PutIntegration -> Maybe (HashMap Text Text)

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
[$sel:contentHandling:PutIntegration'] :: PutIntegration -> Maybe ContentHandlingStrategy

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the <tt>requestTemplates</tt> property on the
--   Integration resource. There are three valid values:
--   <tt>WHEN_NO_MATCH</tt>, <tt>WHEN_NO_TEMPLATES</tt>, and
--   <tt>NEVER</tt>.
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt> passes the request body for unmapped
--   content types through to the integration back end without
--   transformation.</li>
--   <li><tt>NEVER</tt> rejects unmapped content types with an HTTP 415
--   'Unsupported Media Type' response.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt> allows pass-through when the
--   integration has NO content types mapped to templates. However if there
--   is at least one content type defined, unmapped content types will be
--   rejected with the same 415 response.</li>
--   </ul>
[$sel:passthroughBehavior:PutIntegration'] :: PutIntegration -> Maybe Text

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
[$sel:uri:PutIntegration'] :: PutIntegration -> Maybe Text
[$sel:tlsConfig:PutIntegration'] :: PutIntegration -> Maybe TlsConfig

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
[$sel:cacheNamespace:PutIntegration'] :: PutIntegration -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
[$sel:timeoutInMillis:PutIntegration'] :: PutIntegration -> Maybe Int

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
[$sel:connectionType:PutIntegration'] :: PutIntegration -> Maybe ConnectionType

-- | Specifies a put integration HTTP method. When the integration type is
--   HTTP or AWS, this field is required.
[$sel:integrationHttpMethod:PutIntegration'] :: PutIntegration -> Maybe Text

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
[$sel:cacheKeyParameters:PutIntegration'] :: PutIntegration -> Maybe [Text]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:PutIntegration'] :: PutIntegration -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration request's resource
--   ID.</li>
--   </ul>
[$sel:resourceId:PutIntegration'] :: PutIntegration -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration request's HTTP
--   method.</li>
--   </ul>
[$sel:httpMethod:PutIntegration'] :: PutIntegration -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration input's type.</li>
--   </ul>
[$sel:type':PutIntegration'] :: PutIntegration -> IntegrationType

-- | Create a value of <a>PutIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestTemplates:PutIntegration'</a>,
--   <a>putIntegration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   
--   <a>$sel:credentials:PutIntegration'</a>,
--   <a>putIntegration_credentials</a> - Specifies whether credentials are
--   required for a put integration.
--   
--   <a>$sel:connectionId:PutIntegration'</a>,
--   <a>putIntegration_connectionId</a> - The (<a>id</a>) of the VpcLink
--   used for the integration when <tt>connectionType=VPC_LINK</tt> and
--   undefined, otherwise.
--   
--   <a>$sel:requestParameters:PutIntegration'</a>,
--   <a>putIntegration_requestParameters</a> - A key-value map specifying
--   request parameters that are passed from the method request to the back
--   end. The key is an integration request parameter name and the
--   associated value is a method request parameter value or static value
--   that must be enclosed within single quotes and pre-encoded as required
--   by the back end. The method request parameter value must match the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> must be a valid and unique method
--   request parameter name.
--   
--   <a>$sel:contentHandling:PutIntegration'</a>,
--   <a>putIntegration_contentHandling</a> - Specifies how to handle
--   request payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
--   
--   <a>$sel:passthroughBehavior:PutIntegration'</a>,
--   <a>putIntegration_passthroughBehavior</a> - Specifies the pass-through
--   behavior for incoming requests based on the Content-Type header in the
--   request, and the available mapping templates specified as the
--   <tt>requestTemplates</tt> property on the Integration resource. There
--   are three valid values: <tt>WHEN_NO_MATCH</tt>,
--   <tt>WHEN_NO_TEMPLATES</tt>, and <tt>NEVER</tt>.
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt> passes the request body for unmapped
--   content types through to the integration back end without
--   transformation.</li>
--   <li><tt>NEVER</tt> rejects unmapped content types with an HTTP 415
--   'Unsupported Media Type' response.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt> allows pass-through when the
--   integration has NO content types mapped to templates. However if there
--   is at least one content type defined, unmapped content types will be
--   rejected with the same 415 response.</li>
--   </ul>
--   
--   <a>$sel:uri:PutIntegration'</a>, <a>putIntegration_uri</a> - Specifies
--   Uniform Resource Identifier (URI) of the integration endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
--   
--   <a>$sel:tlsConfig:PutIntegration'</a>, <a>putIntegration_tlsConfig</a>
--   - Undocumented member.
--   
--   <a>$sel:cacheNamespace:PutIntegration'</a>,
--   <a>putIntegration_cacheNamespace</a> - Specifies a group of related
--   cached parameters. By default, API Gateway uses the resource ID as the
--   <tt>cacheNamespace</tt>. You can specify the same
--   <tt>cacheNamespace</tt> across resources to return the same cached
--   data for requests to different resources.
--   
--   <a>$sel:timeoutInMillis:PutIntegration'</a>,
--   <a>putIntegration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds. The default value is 29,000 milliseconds or 29
--   seconds.
--   
--   <a>$sel:connectionType:PutIntegration'</a>,
--   <a>putIntegration_connectionType</a> - The type of the network
--   connection to the integration endpoint. The valid value is
--   <tt>INTERNET</tt> for connections through the public routable internet
--   or <tt>VPC_LINK</tt> for private connections between API Gateway and a
--   network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
--   
--   <a>$sel:integrationHttpMethod:PutIntegration'</a>,
--   <a>putIntegration_integrationHttpMethod</a> - Specifies a put
--   integration HTTP method. When the integration type is HTTP or AWS,
--   this field is required.
--   
--   <a>$sel:cacheKeyParameters:PutIntegration'</a>,
--   <a>putIntegration_cacheKeyParameters</a> - A list of request
--   parameters whose values API Gateway caches. To be valid values for
--   <tt>cacheKeyParameters</tt>, these parameters must also be specified
--   for Method <tt>requestParameters</tt>.
--   
--   <a>$sel:restApiId:PutIntegration'</a>, <a>putIntegration_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:PutIntegration'</a>,
--   <a>putIntegration_resourceId</a> - [Required] Specifies a put
--   integration request's resource ID.
--   
--   <a>$sel:httpMethod:PutIntegration'</a>,
--   <a>putIntegration_httpMethod</a> - [Required] Specifies a put
--   integration request's HTTP method.
--   
--   <a>$sel:type':PutIntegration'</a>, <a>putIntegration_type</a> -
--   [Required] Specifies a put integration input's type.
newPutIntegration :: Text -> Text -> Text -> IntegrationType -> PutIntegration

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
putIntegration_requestTemplates :: Lens' PutIntegration (Maybe (HashMap Text Text))

-- | Specifies whether credentials are required for a put integration.
putIntegration_credentials :: Lens' PutIntegration (Maybe Text)

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
putIntegration_connectionId :: Lens' PutIntegration (Maybe Text)

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
putIntegration_requestParameters :: Lens' PutIntegration (Maybe (HashMap Text Text))

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
putIntegration_contentHandling :: Lens' PutIntegration (Maybe ContentHandlingStrategy)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the <tt>requestTemplates</tt> property on the
--   Integration resource. There are three valid values:
--   <tt>WHEN_NO_MATCH</tt>, <tt>WHEN_NO_TEMPLATES</tt>, and
--   <tt>NEVER</tt>.
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt> passes the request body for unmapped
--   content types through to the integration back end without
--   transformation.</li>
--   <li><tt>NEVER</tt> rejects unmapped content types with an HTTP 415
--   'Unsupported Media Type' response.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt> allows pass-through when the
--   integration has NO content types mapped to templates. However if there
--   is at least one content type defined, unmapped content types will be
--   rejected with the same 415 response.</li>
--   </ul>
putIntegration_passthroughBehavior :: Lens' PutIntegration (Maybe Text)

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
putIntegration_uri :: Lens' PutIntegration (Maybe Text)

-- | Undocumented member.
putIntegration_tlsConfig :: Lens' PutIntegration (Maybe TlsConfig)

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
putIntegration_cacheNamespace :: Lens' PutIntegration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
putIntegration_timeoutInMillis :: Lens' PutIntegration (Maybe Int)

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
putIntegration_connectionType :: Lens' PutIntegration (Maybe ConnectionType)

-- | Specifies a put integration HTTP method. When the integration type is
--   HTTP or AWS, this field is required.
putIntegration_integrationHttpMethod :: Lens' PutIntegration (Maybe Text)

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
putIntegration_cacheKeyParameters :: Lens' PutIntegration (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
putIntegration_restApiId :: Lens' PutIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration request's resource
--   ID.</li>
--   </ul>
putIntegration_resourceId :: Lens' PutIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration request's HTTP
--   method.</li>
--   </ul>
putIntegration_httpMethod :: Lens' PutIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration input's type.</li>
--   </ul>
putIntegration_type :: Lens' PutIntegration IntegrationType

-- | Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.
--   
--   In the API Gateway console, the built-in Lambda integration is an AWS
--   integration.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegration</a> smart constructor.
data Integration
Integration' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe Text -> Maybe (HashMap Text IntegrationResponse) -> Maybe TlsConfig -> Maybe Text -> Maybe Int -> Maybe IntegrationType -> Maybe ConnectionType -> Maybe [Text] -> Integration

-- | Specifies the integration's HTTP method type.
[$sel:httpMethod:Integration'] :: Integration -> Maybe Text

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
[$sel:requestTemplates:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
[$sel:credentials:Integration'] :: Integration -> Maybe Text

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
[$sel:connectionId:Integration'] :: Integration -> Maybe Text

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
[$sel:requestParameters:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
[$sel:contentHandling:Integration'] :: Integration -> Maybe ContentHandlingStrategy

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
[$sel:passthroughBehavior:Integration'] :: Integration -> Maybe Text

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
[$sel:uri:Integration'] :: Integration -> Maybe Text

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
[$sel:integrationResponses:Integration'] :: Integration -> Maybe (HashMap Text IntegrationResponse)

-- | Specifies the TLS configuration for an integration.
[$sel:tlsConfig:Integration'] :: Integration -> Maybe TlsConfig

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
[$sel:cacheNamespace:Integration'] :: Integration -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
[$sel:timeoutInMillis:Integration'] :: Integration -> Maybe Int

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
[$sel:type':Integration'] :: Integration -> Maybe IntegrationType

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
[$sel:connectionType:Integration'] :: Integration -> Maybe ConnectionType

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
[$sel:cacheKeyParameters:Integration'] :: Integration -> Maybe [Text]

-- | Create a value of <a>Integration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:Integration'</a>, <a>integration_httpMethod</a> -
--   Specifies the integration's HTTP method type.
--   
--   <a>$sel:requestTemplates:Integration'</a>,
--   <a>integration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   
--   <a>$sel:credentials:Integration'</a>, <a>integration_credentials</a> -
--   Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
--   
--   <a>$sel:connectionId:Integration'</a>, <a>integration_connectionId</a>
--   - The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
--   
--   <a>$sel:requestParameters:Integration'</a>,
--   <a>integration_requestParameters</a> - A key-value map specifying
--   request parameters that are passed from the method request to the back
--   end. The key is an integration request parameter name and the
--   associated value is a method request parameter value or static value
--   that must be enclosed within single quotes and pre-encoded as required
--   by the back end. The method request parameter value must match the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> must be a valid and unique method
--   request parameter name.
--   
--   <a>$sel:contentHandling:Integration'</a>,
--   <a>integration_contentHandling</a> - Specifies how to handle request
--   payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
--   
--   <a>$sel:passthroughBehavior:Integration'</a>,
--   <a>integration_passthroughBehavior</a> - Specifies how the method
--   request body of an unmapped content type will be passed through the
--   integration request to the back end without transformation. A content
--   type is unmapped if no mapping template is defined in the integration
--   or the content type does not match any of the mapped content types, as
--   specified in <tt>requestTemplates</tt>. The valid value is one of the
--   following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
--   
--   <a>$sel:uri:Integration'</a>, <a>integration_uri</a> - Specifies
--   Uniform Resource Identifier (URI) of the integration endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
--   
--   <a>$sel:integrationResponses:Integration'</a>,
--   <a>integration_integrationResponses</a> - Specifies the integration's
--   responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
--   
--   <a>$sel:tlsConfig:Integration'</a>, <a>integration_tlsConfig</a> -
--   Specifies the TLS configuration for an integration.
--   
--   <a>$sel:cacheNamespace:Integration'</a>,
--   <a>integration_cacheNamespace</a> - Specifies a group of related
--   cached parameters. By default, API Gateway uses the resource ID as the
--   <tt>cacheNamespace</tt>. You can specify the same
--   <tt>cacheNamespace</tt> across resources to return the same cached
--   data for requests to different resources.
--   
--   <a>$sel:timeoutInMillis:Integration'</a>,
--   <a>integration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds. The default value is 29,000 milliseconds or 29
--   seconds.
--   
--   <a>$sel:type':Integration'</a>, <a>integration_type</a> - Specifies an
--   API method integration type. The valid value is one of the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
--   
--   <a>$sel:connectionType:Integration'</a>,
--   <a>integration_connectionType</a> - The type of the network connection
--   to the integration endpoint. The valid value is <tt>INTERNET</tt> for
--   connections through the public routable internet or <tt>VPC_LINK</tt>
--   for private connections between API Gateway and a network load
--   balancer in a VPC. The default value is <tt>INTERNET</tt>.
--   
--   <a>$sel:cacheKeyParameters:Integration'</a>,
--   <a>integration_cacheKeyParameters</a> - A list of request parameters
--   whose values API Gateway caches. To be valid values for
--   <tt>cacheKeyParameters</tt>, these parameters must also be specified
--   for Method <tt>requestParameters</tt>.
newIntegration :: Integration

-- | Specifies the integration's HTTP method type.
integration_httpMethod :: Lens' Integration (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
integration_requestTemplates :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
integration_credentials :: Lens' Integration (Maybe Text)

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
integration_connectionId :: Lens' Integration (Maybe Text)

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
integration_requestParameters :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
integration_contentHandling :: Lens' Integration (Maybe ContentHandlingStrategy)

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
integration_passthroughBehavior :: Lens' Integration (Maybe Text)

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
integration_uri :: Lens' Integration (Maybe Text)

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
integration_integrationResponses :: Lens' Integration (Maybe (HashMap Text IntegrationResponse))

-- | Specifies the TLS configuration for an integration.
integration_tlsConfig :: Lens' Integration (Maybe TlsConfig)

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
integration_cacheNamespace :: Lens' Integration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
integration_timeoutInMillis :: Lens' Integration (Maybe Int)

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
integration_type :: Lens' Integration (Maybe IntegrationType)

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
integration_connectionType :: Lens' Integration (Maybe ConnectionType)

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
integration_cacheKeyParameters :: Lens' Integration (Maybe [Text])
instance GHC.Generics.Generic Amazonka.APIGateway.PutIntegration.PutIntegration
instance GHC.Show.Show Amazonka.APIGateway.PutIntegration.PutIntegration
instance GHC.Read.Read Amazonka.APIGateway.PutIntegration.PutIntegration
instance GHC.Classes.Eq Amazonka.APIGateway.PutIntegration.PutIntegration
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.PutIntegration.PutIntegration
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.PutIntegration.PutIntegration
instance Control.DeepSeq.NFData Amazonka.APIGateway.PutIntegration.PutIntegration
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.PutIntegration.PutIntegration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.PutIntegration.PutIntegration
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.PutIntegration.PutIntegration
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.PutIntegration.PutIntegration


-- | Creates a customization of a GatewayResponse of a specified response
--   type and status code on the given RestApi.
module Amazonka.APIGateway.PutGatewayResponse

-- | Creates a customization of a GatewayResponse of a specified response
--   type and status code on the given RestApi.
--   
--   <i>See:</i> <a>newPutGatewayResponse</a> smart constructor.
data PutGatewayResponse
PutGatewayResponse' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> GatewayResponseType -> PutGatewayResponse

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
[$sel:responseTemplates:PutGatewayResponse'] :: PutGatewayResponse -> Maybe (HashMap Text Text)

-- | The HTTP status code of the GatewayResponse.
[$sel:statusCode:PutGatewayResponse'] :: PutGatewayResponse -> Maybe Text

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
[$sel:responseParameters:PutGatewayResponse'] :: PutGatewayResponse -> Maybe (HashMap Text Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:PutGatewayResponse'] :: PutGatewayResponse -> Text

-- | <ul>
--   <li><i>Required</i></li>
--   </ul>
--   
--   The response type of the associated GatewayResponse.
[$sel:responseType:PutGatewayResponse'] :: PutGatewayResponse -> GatewayResponseType

-- | Create a value of <a>PutGatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseTemplates:PutGatewayResponse'</a>,
--   <a>putGatewayResponse_responseTemplates</a> - Response templates of
--   the GatewayResponse as a string-to-string map of key-value pairs.
--   
--   <a>$sel:statusCode:PutGatewayResponse'</a>,
--   <a>putGatewayResponse_statusCode</a> - The HTTP status code of the
--   GatewayResponse.
--   
--   <a>$sel:responseParameters:PutGatewayResponse'</a>,
--   <a>putGatewayResponse_responseParameters</a> - Response parameters
--   (paths, query strings and headers) of the GatewayResponse as a
--   string-to-string map of key-value pairs.
--   
--   <a>$sel:restApiId:PutGatewayResponse'</a>,
--   <a>putGatewayResponse_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:responseType:PutGatewayResponse'</a>,
--   <a>putGatewayResponse_responseType</a> - [Required]
--   
--   The response type of the associated GatewayResponse.
newPutGatewayResponse :: Text -> GatewayResponseType -> PutGatewayResponse

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
putGatewayResponse_responseTemplates :: Lens' PutGatewayResponse (Maybe (HashMap Text Text))

-- | The HTTP status code of the GatewayResponse.
putGatewayResponse_statusCode :: Lens' PutGatewayResponse (Maybe Text)

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
putGatewayResponse_responseParameters :: Lens' PutGatewayResponse (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
putGatewayResponse_restApiId :: Lens' PutGatewayResponse Text

-- | <ul>
--   <li><i>Required</i></li>
--   </ul>
--   
--   The response type of the associated GatewayResponse.
putGatewayResponse_responseType :: Lens' PutGatewayResponse GatewayResponseType

-- | A gateway response of a given response type and status code, with
--   optional response parameters and mapping templates.
--   
--   For more information about valid gateway response types, see
--   <a>Gateway Response Types Supported by API Gateway</a>
--   
--   <h4>Example: Get a Gateway Response of a given response type</h4>
--   
--   <h5>Request</h5>
--   
--   This example shows how to get a gateway response of the
--   <tt>MISSING_AUTHENTICATION_TOKEN</tt> type.
--   
--   <pre>
--   GET /restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T202516Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=1b52460e3159c1a26cff29093855d50ea141c1c5b937528fecaf60f51129697a Cache-Control: no-cache Postman-Token: 3b2a1ce9-c848-2e26-2e2f-9c2caefbed45
--   </pre>
--   
--   The response type is specified as a URL path.
--   
--   <h5>Response</h5>
--   
--   The successful operation returns the <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:delete": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": false, "responseParameters": { "gatewayresponse.header.x-request-path": "method.request.path.petId", "gatewayresponse.header.Access-Control-Allow-Origin": "'a.b.c'", "gatewayresponse.header.x-request-query": "method.request.querystring.q", "gatewayresponse.header.x-request-header": "method.request.header.Accept" }, "responseTemplates": { "application/json": "{\n \"message\": $context.error.messageString,\n \"type\": \"$context.error.responseType\",\n \"stage\": \"$context.stage\",\n \"resourcePath\": \"$context.resourcePath\",\n \"stageVariables.a\": \"$stageVariables.a\",\n \"statusCode\": \"'404'\"\n}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "404" }
--   </pre>
--   
--   <a>Customize Gateway Responses</a>
--   
--   <i>See:</i> <a>newGatewayResponse</a> smart constructor.
data GatewayResponse
GatewayResponse' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe GatewayResponseType -> Maybe Text -> Maybe (HashMap Text Text) -> GatewayResponse

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
[$sel:defaultResponse:GatewayResponse'] :: GatewayResponse -> Maybe Bool

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
[$sel:responseTemplates:GatewayResponse'] :: GatewayResponse -> Maybe (HashMap Text Text)

-- | The response type of the associated GatewayResponse.
[$sel:responseType:GatewayResponse'] :: GatewayResponse -> Maybe GatewayResponseType

-- | The HTTP status code for this GatewayResponse.
[$sel:statusCode:GatewayResponse'] :: GatewayResponse -> Maybe Text

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
[$sel:responseParameters:GatewayResponse'] :: GatewayResponse -> Maybe (HashMap Text Text)

-- | Create a value of <a>GatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultResponse:GatewayResponse'</a>,
--   <a>gatewayResponse_defaultResponse</a> - A Boolean flag to indicate
--   whether this GatewayResponse is the default gateway response
--   (<tt>true</tt>) or not (<tt>false</tt>). A default gateway response is
--   one generated by API Gateway without any customization by an API
--   developer.
--   
--   <a>$sel:responseTemplates:GatewayResponse'</a>,
--   <a>gatewayResponse_responseTemplates</a> - Response templates of the
--   GatewayResponse as a string-to-string map of key-value pairs.
--   
--   <a>$sel:responseType:GatewayResponse'</a>,
--   <a>gatewayResponse_responseType</a> - The response type of the
--   associated GatewayResponse.
--   
--   <a>$sel:statusCode:GatewayResponse'</a>,
--   <a>gatewayResponse_statusCode</a> - The HTTP status code for this
--   GatewayResponse.
--   
--   <a>$sel:responseParameters:GatewayResponse'</a>,
--   <a>gatewayResponse_responseParameters</a> - Response parameters
--   (paths, query strings and headers) of the GatewayResponse as a
--   string-to-string map of key-value pairs.
newGatewayResponse :: GatewayResponse

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
gatewayResponse_defaultResponse :: Lens' GatewayResponse (Maybe Bool)

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
gatewayResponse_responseTemplates :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | The response type of the associated GatewayResponse.
gatewayResponse_responseType :: Lens' GatewayResponse (Maybe GatewayResponseType)

-- | The HTTP status code for this GatewayResponse.
gatewayResponse_statusCode :: Lens' GatewayResponse (Maybe Text)

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
gatewayResponse_responseParameters :: Lens' GatewayResponse (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.PutGatewayResponse.PutGatewayResponse
instance GHC.Show.Show Amazonka.APIGateway.PutGatewayResponse.PutGatewayResponse
instance GHC.Read.Read Amazonka.APIGateway.PutGatewayResponse.PutGatewayResponse
instance GHC.Classes.Eq Amazonka.APIGateway.PutGatewayResponse.PutGatewayResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.PutGatewayResponse.PutGatewayResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.PutGatewayResponse.PutGatewayResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.PutGatewayResponse.PutGatewayResponse
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.PutGatewayResponse.PutGatewayResponse
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.PutGatewayResponse.PutGatewayResponse
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.PutGatewayResponse.PutGatewayResponse
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.PutGatewayResponse.PutGatewayResponse


-- | A feature of the API Gateway control service for creating a new API
--   from an external API definition file.
module Amazonka.APIGateway.ImportRestApi

-- | A POST request to import an API to API Gateway using an input of an
--   API definition file.
--   
--   <i>See:</i> <a>newImportRestApi</a> smart constructor.
data ImportRestApi
ImportRestApi' :: Maybe Bool -> Maybe (HashMap Text Text) -> ByteString -> ImportRestApi

-- | A query parameter to indicate whether to rollback the API creation
--   (<tt>true</tt>) or not (<tt>false</tt>) when a warning is encountered.
--   The default value is <tt>false</tt>.
[$sel:failOnWarnings:ImportRestApi'] :: ImportRestApi -> Maybe Bool

-- | A key-value map of context-specific query string parameters specifying
--   the behavior of different API importing operations. The following
--   shows operation-specific parameters and their supported values.
--   
--   To exclude DocumentationParts from the import, set <tt>parameters</tt>
--   as <tt>ignore=documentation</tt>.
--   
--   To configure the endpoint type, set <tt>parameters</tt> as
--   <tt>endpointConfigurationTypes=EDGE</tt>,
--   <tt>endpointConfigurationTypes=REGIONAL</tt>, or
--   <tt>endpointConfigurationTypes=PRIVATE</tt>. The default endpoint type
--   is <tt>EDGE</tt>.
--   
--   To handle imported <tt>basepath</tt>, set <tt>parameters</tt> as
--   <tt>basepath=ignore</tt>, <tt>basepath=prepend</tt> or
--   <tt>basepath=split</tt>.
--   
--   For example, the AWS CLI command to exclude documentation from the
--   imported API is:
--   
--   <pre>
--   aws apigateway import-rest-api --parameters ignore=documentation --body 'file:///path/to/imported-api-body.json'
--   </pre>
--   
--   The AWS CLI command to set the regional endpoint on the imported API
--   is:
--   
--   <pre>
--   aws apigateway import-rest-api --parameters endpointConfigurationTypes=REGIONAL --body 'file:///path/to/imported-api-body.json'
--   </pre>
[$sel:parameters:ImportRestApi'] :: ImportRestApi -> Maybe (HashMap Text Text)

-- | <ul>
--   <li><i>Required</i> The POST request body containing external API
--   definitions. Currently, only OpenAPI definition JSON/YAML files are
--   supported. The maximum size of the API definition file is 6MB.</li>
--   </ul>
[$sel:body:ImportRestApi'] :: ImportRestApi -> ByteString

-- | Create a value of <a>ImportRestApi</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failOnWarnings:ImportRestApi'</a>,
--   <a>importRestApi_failOnWarnings</a> - A query parameter to indicate
--   whether to rollback the API creation (<tt>true</tt>) or not
--   (<tt>false</tt>) when a warning is encountered. The default value is
--   <tt>false</tt>.
--   
--   <a>$sel:parameters:ImportRestApi'</a>, <a>importRestApi_parameters</a>
--   - A key-value map of context-specific query string parameters
--   specifying the behavior of different API importing operations. The
--   following shows operation-specific parameters and their supported
--   values.
--   
--   To exclude DocumentationParts from the import, set <tt>parameters</tt>
--   as <tt>ignore=documentation</tt>.
--   
--   To configure the endpoint type, set <tt>parameters</tt> as
--   <tt>endpointConfigurationTypes=EDGE</tt>,
--   <tt>endpointConfigurationTypes=REGIONAL</tt>, or
--   <tt>endpointConfigurationTypes=PRIVATE</tt>. The default endpoint type
--   is <tt>EDGE</tt>.
--   
--   To handle imported <tt>basepath</tt>, set <tt>parameters</tt> as
--   <tt>basepath=ignore</tt>, <tt>basepath=prepend</tt> or
--   <tt>basepath=split</tt>.
--   
--   For example, the AWS CLI command to exclude documentation from the
--   imported API is:
--   
--   <pre>
--   aws apigateway import-rest-api --parameters ignore=documentation --body 'file:///path/to/imported-api-body.json'
--   </pre>
--   
--   The AWS CLI command to set the regional endpoint on the imported API
--   is:
--   
--   <pre>
--   aws apigateway import-rest-api --parameters endpointConfigurationTypes=REGIONAL --body 'file:///path/to/imported-api-body.json'
--   </pre>
--   
--   <a>$sel:body:ImportRestApi'</a>, <a>importRestApi_body</a> -
--   [Required] The POST request body containing external API definitions.
--   Currently, only OpenAPI definition JSON/YAML files are supported. The
--   maximum size of the API definition file is 6MB.
newImportRestApi :: ByteString -> ImportRestApi

-- | A query parameter to indicate whether to rollback the API creation
--   (<tt>true</tt>) or not (<tt>false</tt>) when a warning is encountered.
--   The default value is <tt>false</tt>.
importRestApi_failOnWarnings :: Lens' ImportRestApi (Maybe Bool)

-- | A key-value map of context-specific query string parameters specifying
--   the behavior of different API importing operations. The following
--   shows operation-specific parameters and their supported values.
--   
--   To exclude DocumentationParts from the import, set <tt>parameters</tt>
--   as <tt>ignore=documentation</tt>.
--   
--   To configure the endpoint type, set <tt>parameters</tt> as
--   <tt>endpointConfigurationTypes=EDGE</tt>,
--   <tt>endpointConfigurationTypes=REGIONAL</tt>, or
--   <tt>endpointConfigurationTypes=PRIVATE</tt>. The default endpoint type
--   is <tt>EDGE</tt>.
--   
--   To handle imported <tt>basepath</tt>, set <tt>parameters</tt> as
--   <tt>basepath=ignore</tt>, <tt>basepath=prepend</tt> or
--   <tt>basepath=split</tt>.
--   
--   For example, the AWS CLI command to exclude documentation from the
--   imported API is:
--   
--   <pre>
--   aws apigateway import-rest-api --parameters ignore=documentation --body 'file:///path/to/imported-api-body.json'
--   </pre>
--   
--   The AWS CLI command to set the regional endpoint on the imported API
--   is:
--   
--   <pre>
--   aws apigateway import-rest-api --parameters endpointConfigurationTypes=REGIONAL --body 'file:///path/to/imported-api-body.json'
--   </pre>
importRestApi_parameters :: Lens' ImportRestApi (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The POST request body containing external API
--   definitions. Currently, only OpenAPI definition JSON/YAML files are
--   supported. The maximum size of the API definition file is 6MB.</li>
--   </ul>
importRestApi_body :: Lens' ImportRestApi ByteString

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
[$sel:minimumCompressionSize:RestApi'] :: RestApi -> Maybe Int

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
[$sel:disableExecuteApiEndpoint:RestApi'] :: RestApi -> Maybe Bool

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
[$sel:binaryMediaTypes:RestApi'] :: RestApi -> Maybe [Text]

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
[$sel:warnings:RestApi'] :: RestApi -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:RestApi'] :: RestApi -> Maybe POSIX

-- | The API's name.
[$sel:name:RestApi'] :: RestApi -> Maybe Text

-- | A version identifier for the API.
[$sel:version:RestApi'] :: RestApi -> Maybe Text

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
[$sel:apiKeySource:RestApi'] :: RestApi -> Maybe ApiKeySourceType

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
[$sel:id:RestApi'] :: RestApi -> Maybe Text

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
[$sel:policy:RestApi'] :: RestApi -> Maybe Text

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
[$sel:endpointConfiguration:RestApi'] :: RestApi -> Maybe EndpointConfiguration

-- | The API's description.
[$sel:description:RestApi'] :: RestApi -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:RestApi'] :: RestApi -> Maybe (HashMap Text Text)

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.ImportRestApi.ImportRestApi
instance GHC.Show.Show Amazonka.APIGateway.ImportRestApi.ImportRestApi
instance GHC.Classes.Eq Amazonka.APIGateway.ImportRestApi.ImportRestApi
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.ImportRestApi.ImportRestApi
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.ImportRestApi.ImportRestApi
instance Control.DeepSeq.NFData Amazonka.APIGateway.ImportRestApi.ImportRestApi
instance Amazonka.Data.Body.ToBody Amazonka.APIGateway.ImportRestApi.ImportRestApi
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.ImportRestApi.ImportRestApi
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.ImportRestApi.ImportRestApi
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.ImportRestApi.ImportRestApi


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
module Amazonka.APIGateway.ImportDocumentationParts

-- | Import documentation parts from an external (e.g., OpenAPI) definition
--   file.
--   
--   <i>See:</i> <a>newImportDocumentationParts</a> smart constructor.
data ImportDocumentationParts
ImportDocumentationParts' :: Maybe PutMode -> Maybe Bool -> Text -> ByteString -> ImportDocumentationParts

-- | A query parameter to indicate whether to overwrite
--   (<tt>OVERWRITE</tt>) any existing DocumentationParts definition or to
--   merge (<tt>MERGE</tt>) the new definition into the existing one. The
--   default value is <tt>MERGE</tt>.
[$sel:mode:ImportDocumentationParts'] :: ImportDocumentationParts -> Maybe PutMode

-- | A query parameter to specify whether to rollback the documentation
--   importation (<tt>true</tt>) or not (<tt>false</tt>) when a warning is
--   encountered. The default value is <tt>false</tt>.
[$sel:failOnWarnings:ImportDocumentationParts'] :: ImportDocumentationParts -> Maybe Bool

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:ImportDocumentationParts'] :: ImportDocumentationParts -> Text

-- | <ul>
--   <li><i>Required</i> Raw byte array representing the to-be-imported
--   documentation parts. To import from an OpenAPI file, this is a JSON
--   object.</li>
--   </ul>
[$sel:body:ImportDocumentationParts'] :: ImportDocumentationParts -> ByteString

-- | Create a value of <a>ImportDocumentationParts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:ImportDocumentationParts'</a>,
--   <a>importDocumentationParts_mode</a> - A query parameter to indicate
--   whether to overwrite (<tt>OVERWRITE</tt>) any existing
--   DocumentationParts definition or to merge (<tt>MERGE</tt>) the new
--   definition into the existing one. The default value is <tt>MERGE</tt>.
--   
--   <a>$sel:failOnWarnings:ImportDocumentationParts'</a>,
--   <a>importDocumentationParts_failOnWarnings</a> - A query parameter to
--   specify whether to rollback the documentation importation
--   (<tt>true</tt>) or not (<tt>false</tt>) when a warning is encountered.
--   The default value is <tt>false</tt>.
--   
--   <a>$sel:restApiId:ImportDocumentationParts'</a>,
--   <a>importDocumentationParts_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:body:ImportDocumentationParts'</a>,
--   <a>importDocumentationParts_body</a> - [Required] Raw byte array
--   representing the to-be-imported documentation parts. To import from an
--   OpenAPI file, this is a JSON object.
newImportDocumentationParts :: Text -> ByteString -> ImportDocumentationParts

-- | A query parameter to indicate whether to overwrite
--   (<tt>OVERWRITE</tt>) any existing DocumentationParts definition or to
--   merge (<tt>MERGE</tt>) the new definition into the existing one. The
--   default value is <tt>MERGE</tt>.
importDocumentationParts_mode :: Lens' ImportDocumentationParts (Maybe PutMode)

-- | A query parameter to specify whether to rollback the documentation
--   importation (<tt>true</tt>) or not (<tt>false</tt>) when a warning is
--   encountered. The default value is <tt>false</tt>.
importDocumentationParts_failOnWarnings :: Lens' ImportDocumentationParts (Maybe Bool)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
importDocumentationParts_restApiId :: Lens' ImportDocumentationParts Text

-- | <ul>
--   <li><i>Required</i> Raw byte array representing the to-be-imported
--   documentation parts. To import from an OpenAPI file, this is a JSON
--   object.</li>
--   </ul>
importDocumentationParts_body :: Lens' ImportDocumentationParts ByteString

-- | A collection of the imported DocumentationPart identifiers.
--   
--   This is used to return the result when documentation parts in an
--   external (e.g., OpenAPI) file are imported into API Gateway
--   
--   <a>Documenting an API</a>, <a>documentationpart:import</a>,
--   DocumentationPart
--   
--   <i>See:</i> <a>newImportDocumentationPartsResponse</a> smart
--   constructor.
data ImportDocumentationPartsResponse
ImportDocumentationPartsResponse' :: Maybe [Text] -> Maybe [Text] -> Int -> ImportDocumentationPartsResponse

-- | A list of the returned documentation part identifiers.
[$sel:ids:ImportDocumentationPartsResponse'] :: ImportDocumentationPartsResponse -> Maybe [Text]

-- | A list of warning messages reported during import of documentation
--   parts.
[$sel:warnings:ImportDocumentationPartsResponse'] :: ImportDocumentationPartsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ImportDocumentationPartsResponse'] :: ImportDocumentationPartsResponse -> Int

-- | Create a value of <a>ImportDocumentationPartsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:ImportDocumentationPartsResponse'</a>,
--   <a>importDocumentationPartsResponse_ids</a> - A list of the returned
--   documentation part identifiers.
--   
--   <a>$sel:warnings:ImportDocumentationPartsResponse'</a>,
--   <a>importDocumentationPartsResponse_warnings</a> - A list of warning
--   messages reported during import of documentation parts.
--   
--   <a>$sel:httpStatus:ImportDocumentationPartsResponse'</a>,
--   <a>importDocumentationPartsResponse_httpStatus</a> - The response's
--   http status code.
newImportDocumentationPartsResponse :: Int -> ImportDocumentationPartsResponse

-- | A list of the returned documentation part identifiers.
importDocumentationPartsResponse_ids :: Lens' ImportDocumentationPartsResponse (Maybe [Text])

-- | A list of warning messages reported during import of documentation
--   parts.
importDocumentationPartsResponse_warnings :: Lens' ImportDocumentationPartsResponse (Maybe [Text])

-- | The response's http status code.
importDocumentationPartsResponse_httpStatus :: Lens' ImportDocumentationPartsResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationParts
instance GHC.Show.Show Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationParts
instance GHC.Classes.Eq Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationParts
instance GHC.Generics.Generic Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationPartsResponse
instance GHC.Show.Show Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationPartsResponse
instance GHC.Read.Read Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationPartsResponse
instance GHC.Classes.Eq Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationPartsResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationParts
instance Control.DeepSeq.NFData Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationPartsResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationParts
instance Control.DeepSeq.NFData Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationParts
instance Amazonka.Data.Body.ToBody Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationParts
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationParts
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationParts
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.ImportDocumentationParts.ImportDocumentationParts


-- | Import API keys from an external source, such as a CSV-formatted file.
module Amazonka.APIGateway.ImportApiKeys

-- | The POST request to import API keys from an external source, such as a
--   CSV-formatted file.
--   
--   <i>See:</i> <a>newImportApiKeys</a> smart constructor.
data ImportApiKeys
ImportApiKeys' :: Maybe Bool -> ByteString -> ApiKeysFormat -> ImportApiKeys

-- | A query parameter to indicate whether to rollback ApiKey importation
--   (<tt>true</tt>) or not (<tt>false</tt>) when error is encountered.
[$sel:failOnWarnings:ImportApiKeys'] :: ImportApiKeys -> Maybe Bool

-- | The payload of the POST request to import API keys. For the payload
--   format, see <a>API Key File Format</a>.
[$sel:body:ImportApiKeys'] :: ImportApiKeys -> ByteString

-- | A query parameter to specify the input format to imported API keys.
--   Currently, only the <tt>csv</tt> format is supported.
[$sel:format:ImportApiKeys'] :: ImportApiKeys -> ApiKeysFormat

-- | Create a value of <a>ImportApiKeys</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failOnWarnings:ImportApiKeys'</a>,
--   <a>importApiKeys_failOnWarnings</a> - A query parameter to indicate
--   whether to rollback ApiKey importation (<tt>true</tt>) or not
--   (<tt>false</tt>) when error is encountered.
--   
--   <a>$sel:body:ImportApiKeys'</a>, <a>importApiKeys_body</a> - The
--   payload of the POST request to import API keys. For the payload
--   format, see <a>API Key File Format</a>.
--   
--   <a>$sel:format:ImportApiKeys'</a>, <a>importApiKeys_format</a> - A
--   query parameter to specify the input format to imported API keys.
--   Currently, only the <tt>csv</tt> format is supported.
newImportApiKeys :: ByteString -> ApiKeysFormat -> ImportApiKeys

-- | A query parameter to indicate whether to rollback ApiKey importation
--   (<tt>true</tt>) or not (<tt>false</tt>) when error is encountered.
importApiKeys_failOnWarnings :: Lens' ImportApiKeys (Maybe Bool)

-- | The payload of the POST request to import API keys. For the payload
--   format, see <a>API Key File Format</a>.
importApiKeys_body :: Lens' ImportApiKeys ByteString

-- | A query parameter to specify the input format to imported API keys.
--   Currently, only the <tt>csv</tt> format is supported.
importApiKeys_format :: Lens' ImportApiKeys ApiKeysFormat

-- | The identifier of an ApiKey used in a UsagePlan.
--   
--   <i>See:</i> <a>newImportApiKeysResponse</a> smart constructor.
data ImportApiKeysResponse
ImportApiKeysResponse' :: Maybe [Text] -> Maybe [Text] -> Int -> ImportApiKeysResponse

-- | A list of all the ApiKey identifiers.
[$sel:ids:ImportApiKeysResponse'] :: ImportApiKeysResponse -> Maybe [Text]

-- | A list of warning messages.
[$sel:warnings:ImportApiKeysResponse'] :: ImportApiKeysResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ImportApiKeysResponse'] :: ImportApiKeysResponse -> Int

-- | Create a value of <a>ImportApiKeysResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:ImportApiKeysResponse'</a>,
--   <a>importApiKeysResponse_ids</a> - A list of all the ApiKey
--   identifiers.
--   
--   <a>$sel:warnings:ImportApiKeysResponse'</a>,
--   <a>importApiKeysResponse_warnings</a> - A list of warning messages.
--   
--   <a>$sel:httpStatus:ImportApiKeysResponse'</a>,
--   <a>importApiKeysResponse_httpStatus</a> - The response's http status
--   code.
newImportApiKeysResponse :: Int -> ImportApiKeysResponse

-- | A list of all the ApiKey identifiers.
importApiKeysResponse_ids :: Lens' ImportApiKeysResponse (Maybe [Text])

-- | A list of warning messages.
importApiKeysResponse_warnings :: Lens' ImportApiKeysResponse (Maybe [Text])

-- | The response's http status code.
importApiKeysResponse_httpStatus :: Lens' ImportApiKeysResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.ImportApiKeys.ImportApiKeys
instance GHC.Show.Show Amazonka.APIGateway.ImportApiKeys.ImportApiKeys
instance GHC.Classes.Eq Amazonka.APIGateway.ImportApiKeys.ImportApiKeys
instance GHC.Generics.Generic Amazonka.APIGateway.ImportApiKeys.ImportApiKeysResponse
instance GHC.Show.Show Amazonka.APIGateway.ImportApiKeys.ImportApiKeysResponse
instance GHC.Read.Read Amazonka.APIGateway.ImportApiKeys.ImportApiKeysResponse
instance GHC.Classes.Eq Amazonka.APIGateway.ImportApiKeys.ImportApiKeysResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.ImportApiKeys.ImportApiKeys
instance Control.DeepSeq.NFData Amazonka.APIGateway.ImportApiKeys.ImportApiKeysResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.ImportApiKeys.ImportApiKeys
instance Control.DeepSeq.NFData Amazonka.APIGateway.ImportApiKeys.ImportApiKeys
instance Amazonka.Data.Body.ToBody Amazonka.APIGateway.ImportApiKeys.ImportApiKeys
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.ImportApiKeys.ImportApiKeys
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.ImportApiKeys.ImportApiKeys
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.ImportApiKeys.ImportApiKeys


-- | Gets the VpcLinks collection under the caller's account in a selected
--   region.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetVpcLinks

-- | Gets the VpcLinks collection under the caller's account in a selected
--   region.
--   
--   <i>See:</i> <a>newGetVpcLinks</a> smart constructor.
data GetVpcLinks
GetVpcLinks' :: Maybe Int -> Maybe Text -> GetVpcLinks

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetVpcLinks'] :: GetVpcLinks -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetVpcLinks'] :: GetVpcLinks -> Maybe Text

-- | Create a value of <a>GetVpcLinks</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetVpcLinks'</a>, <a>getVpcLinks_limit</a> - The maximum
--   number of returned results per page. The default value is 25 and the
--   maximum value is 500.
--   
--   <a>$sel:position:GetVpcLinks'</a>, <a>getVpcLinks_position</a> - The
--   current pagination position in the paged result set.
newGetVpcLinks :: GetVpcLinks

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getVpcLinks_limit :: Lens' GetVpcLinks (Maybe Int)

-- | The current pagination position in the paged result set.
getVpcLinks_position :: Lens' GetVpcLinks (Maybe Text)

-- | The collection of VPC links under the caller's account in a region.
--   
--   <a>Getting Started with Private Integrations</a>, <a>Set up Private
--   Integrations</a>
--   
--   <i>See:</i> <a>newGetVpcLinksResponse</a> smart constructor.
data GetVpcLinksResponse
GetVpcLinksResponse' :: Maybe [VpcLink] -> Maybe Text -> Int -> GetVpcLinksResponse

-- | The current page of elements from this collection.
[$sel:items:GetVpcLinksResponse'] :: GetVpcLinksResponse -> Maybe [VpcLink]
[$sel:position:GetVpcLinksResponse'] :: GetVpcLinksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetVpcLinksResponse'] :: GetVpcLinksResponse -> Int

-- | Create a value of <a>GetVpcLinksResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetVpcLinksResponse'</a>,
--   <a>getVpcLinksResponse_items</a> - The current page of elements from
--   this collection.
--   
--   <a>$sel:position:GetVpcLinks'</a>, <a>getVpcLinksResponse_position</a>
--   - Undocumented member.
--   
--   <a>$sel:httpStatus:GetVpcLinksResponse'</a>,
--   <a>getVpcLinksResponse_httpStatus</a> - The response's http status
--   code.
newGetVpcLinksResponse :: Int -> GetVpcLinksResponse

-- | The current page of elements from this collection.
getVpcLinksResponse_items :: Lens' GetVpcLinksResponse (Maybe [VpcLink])

-- | Undocumented member.
getVpcLinksResponse_position :: Lens' GetVpcLinksResponse (Maybe Text)

-- | The response's http status code.
getVpcLinksResponse_httpStatus :: Lens' GetVpcLinksResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetVpcLinks.GetVpcLinks
instance GHC.Show.Show Amazonka.APIGateway.GetVpcLinks.GetVpcLinks
instance GHC.Read.Read Amazonka.APIGateway.GetVpcLinks.GetVpcLinks
instance GHC.Classes.Eq Amazonka.APIGateway.GetVpcLinks.GetVpcLinks
instance GHC.Generics.Generic Amazonka.APIGateway.GetVpcLinks.GetVpcLinksResponse
instance GHC.Show.Show Amazonka.APIGateway.GetVpcLinks.GetVpcLinksResponse
instance GHC.Read.Read Amazonka.APIGateway.GetVpcLinks.GetVpcLinksResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetVpcLinks.GetVpcLinksResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetVpcLinks.GetVpcLinks
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetVpcLinks.GetVpcLinksResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetVpcLinks.GetVpcLinks
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetVpcLinks.GetVpcLinks
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetVpcLinks.GetVpcLinks
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetVpcLinks.GetVpcLinks
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetVpcLinks.GetVpcLinks
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetVpcLinks.GetVpcLinks


-- | Gets a specified VPC link under the caller's account in a region.
module Amazonka.APIGateway.GetVpcLink

-- | Gets a specified VPC link under the caller's account in a region.
--   
--   <i>See:</i> <a>newGetVpcLink</a> smart constructor.
data GetVpcLink
GetVpcLink' :: Text -> GetVpcLink

-- | <ul>
--   <li><i>Required</i> The identifier of the VpcLink. It is used in an
--   Integration to reference this VpcLink.</li>
--   </ul>
[$sel:vpcLinkId:GetVpcLink'] :: GetVpcLink -> Text

-- | Create a value of <a>GetVpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcLinkId:GetVpcLink'</a>, <a>getVpcLink_vpcLinkId</a> -
--   [Required] The identifier of the VpcLink. It is used in an Integration
--   to reference this VpcLink.
newGetVpcLink :: Text -> GetVpcLink

-- | <ul>
--   <li><i>Required</i> The identifier of the VpcLink. It is used in an
--   Integration to reference this VpcLink.</li>
--   </ul>
getVpcLink_vpcLinkId :: Lens' GetVpcLink Text

-- | An API Gateway VPC link for a RestApi to access resources in an Amazon
--   Virtual Private Cloud (VPC).
--   
--   To enable access to a resource in an Amazon Virtual Private Cloud
--   through Amazon API Gateway, you, as an API developer, create a VpcLink
--   resource targeted for one or more network load balancers of the VPC
--   and then integrate an API method with a private integration that uses
--   the VpcLink. The private integration has an integration type of
--   <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> and has a connection type of
--   <tt>VPC_LINK</tt>. The integration uses the <tt>connectionId</tt>
--   property to identify the VpcLink used.
--   
--   <i>See:</i> <a>newVpcLink</a> smart constructor.
data VpcLink
VpcLink' :: Maybe VpcLinkStatus -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> VpcLink

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
[$sel:status:VpcLink'] :: VpcLink -> Maybe VpcLinkStatus

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
[$sel:targetArns:VpcLink'] :: VpcLink -> Maybe [Text]

-- | The name used to label and identify the VPC link.
[$sel:name:VpcLink'] :: VpcLink -> Maybe Text

-- | A description about the VPC link status.
[$sel:statusMessage:VpcLink'] :: VpcLink -> Maybe Text

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
[$sel:id:VpcLink'] :: VpcLink -> Maybe Text

-- | The description of the VPC link.
[$sel:description:VpcLink'] :: VpcLink -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:VpcLink'] :: VpcLink -> Maybe (HashMap Text Text)

-- | Create a value of <a>VpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VpcLink'</a>, <a>vpcLink_status</a> - The status of the
--   VPC link. The valid values are <tt>AVAILABLE</tt>, <tt>PENDING</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an API will wait if
--   the status is <tt>PENDING</tt> and will fail if the status is
--   <tt>DELETING</tt>.
--   
--   <a>$sel:targetArns:VpcLink'</a>, <a>vpcLink_targetArns</a> - The ARN
--   of the network load balancer of the VPC targeted by the VPC link. The
--   network load balancer must be owned by the same AWS account of the API
--   owner.
--   
--   <a>$sel:name:VpcLink'</a>, <a>vpcLink_name</a> - The name used to
--   label and identify the VPC link.
--   
--   <a>$sel:statusMessage:VpcLink'</a>, <a>vpcLink_statusMessage</a> - A
--   description about the VPC link status.
--   
--   <a>$sel:id:VpcLink'</a>, <a>vpcLink_id</a> - The identifier of the
--   VpcLink. It is used in an Integration to reference this VpcLink.
--   
--   <a>$sel:description:VpcLink'</a>, <a>vpcLink_description</a> - The
--   description of the VPC link.
--   
--   <a>$sel:tags:VpcLink'</a>, <a>vpcLink_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newVpcLink :: VpcLink

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
vpcLink_status :: Lens' VpcLink (Maybe VpcLinkStatus)

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
vpcLink_targetArns :: Lens' VpcLink (Maybe [Text])

-- | The name used to label and identify the VPC link.
vpcLink_name :: Lens' VpcLink (Maybe Text)

-- | A description about the VPC link status.
vpcLink_statusMessage :: Lens' VpcLink (Maybe Text)

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
vpcLink_id :: Lens' VpcLink (Maybe Text)

-- | The description of the VPC link.
vpcLink_description :: Lens' VpcLink (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
vpcLink_tags :: Lens' VpcLink (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.GetVpcLink.GetVpcLink
instance GHC.Show.Show Amazonka.APIGateway.GetVpcLink.GetVpcLink
instance GHC.Read.Read Amazonka.APIGateway.GetVpcLink.GetVpcLink
instance GHC.Classes.Eq Amazonka.APIGateway.GetVpcLink.GetVpcLink
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetVpcLink.GetVpcLink
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetVpcLink.GetVpcLink
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetVpcLink.GetVpcLink
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetVpcLink.GetVpcLink
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetVpcLink.GetVpcLink
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetVpcLink.GetVpcLink


-- | Gets all the usage plans of the caller's account.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetUsagePlans

-- | The GET request to get all the usage plans of the caller's account.
--   
--   <i>See:</i> <a>newGetUsagePlans</a> smart constructor.
data GetUsagePlans
GetUsagePlans' :: Maybe Text -> Maybe Int -> Maybe Text -> GetUsagePlans

-- | The identifier of the API key associated with the usage plans.
[$sel:keyId:GetUsagePlans'] :: GetUsagePlans -> Maybe Text

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetUsagePlans'] :: GetUsagePlans -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetUsagePlans'] :: GetUsagePlans -> Maybe Text

-- | Create a value of <a>GetUsagePlans</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyId:GetUsagePlans'</a>, <a>getUsagePlans_keyId</a> - The
--   identifier of the API key associated with the usage plans.
--   
--   <a>$sel:limit:GetUsagePlans'</a>, <a>getUsagePlans_limit</a> - The
--   maximum number of returned results per page. The default value is 25
--   and the maximum value is 500.
--   
--   <a>$sel:position:GetUsagePlans'</a>, <a>getUsagePlans_position</a> -
--   The current pagination position in the paged result set.
newGetUsagePlans :: GetUsagePlans

-- | The identifier of the API key associated with the usage plans.
getUsagePlans_keyId :: Lens' GetUsagePlans (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getUsagePlans_limit :: Lens' GetUsagePlans (Maybe Int)

-- | The current pagination position in the paged result set.
getUsagePlans_position :: Lens' GetUsagePlans (Maybe Text)

-- | Represents a collection of usage plans for an AWS account.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newGetUsagePlansResponse</a> smart constructor.
data GetUsagePlansResponse
GetUsagePlansResponse' :: Maybe [UsagePlan] -> Maybe Text -> Int -> GetUsagePlansResponse

-- | The current page of elements from this collection.
[$sel:items:GetUsagePlansResponse'] :: GetUsagePlansResponse -> Maybe [UsagePlan]
[$sel:position:GetUsagePlansResponse'] :: GetUsagePlansResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetUsagePlansResponse'] :: GetUsagePlansResponse -> Int

-- | Create a value of <a>GetUsagePlansResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetUsagePlansResponse'</a>,
--   <a>getUsagePlansResponse_items</a> - The current page of elements from
--   this collection.
--   
--   <a>$sel:position:GetUsagePlans'</a>,
--   <a>getUsagePlansResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetUsagePlansResponse'</a>,
--   <a>getUsagePlansResponse_httpStatus</a> - The response's http status
--   code.
newGetUsagePlansResponse :: Int -> GetUsagePlansResponse

-- | The current page of elements from this collection.
getUsagePlansResponse_items :: Lens' GetUsagePlansResponse (Maybe [UsagePlan])

-- | Undocumented member.
getUsagePlansResponse_position :: Lens' GetUsagePlansResponse (Maybe Text)

-- | The response's http status code.
getUsagePlansResponse_httpStatus :: Lens' GetUsagePlansResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetUsagePlans.GetUsagePlans
instance GHC.Show.Show Amazonka.APIGateway.GetUsagePlans.GetUsagePlans
instance GHC.Read.Read Amazonka.APIGateway.GetUsagePlans.GetUsagePlans
instance GHC.Classes.Eq Amazonka.APIGateway.GetUsagePlans.GetUsagePlans
instance GHC.Generics.Generic Amazonka.APIGateway.GetUsagePlans.GetUsagePlansResponse
instance GHC.Show.Show Amazonka.APIGateway.GetUsagePlans.GetUsagePlansResponse
instance GHC.Read.Read Amazonka.APIGateway.GetUsagePlans.GetUsagePlansResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetUsagePlans.GetUsagePlansResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetUsagePlans.GetUsagePlans
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetUsagePlans.GetUsagePlansResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetUsagePlans.GetUsagePlans
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetUsagePlans.GetUsagePlans
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetUsagePlans.GetUsagePlans
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetUsagePlans.GetUsagePlans
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetUsagePlans.GetUsagePlans
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetUsagePlans.GetUsagePlans


-- | Gets all the usage plan keys representing the API keys added to a
--   specified usage plan.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetUsagePlanKeys

-- | The GET request to get all the usage plan keys representing the API
--   keys added to a specified usage plan.
--   
--   <i>See:</i> <a>newGetUsagePlanKeys</a> smart constructor.
data GetUsagePlanKeys
GetUsagePlanKeys' :: Maybe Text -> Maybe Int -> Maybe Text -> Text -> GetUsagePlanKeys

-- | A query parameter specifying the name of the to-be-returned usage plan
--   keys.
[$sel:nameQuery:GetUsagePlanKeys'] :: GetUsagePlanKeys -> Maybe Text

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetUsagePlanKeys'] :: GetUsagePlanKeys -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetUsagePlanKeys'] :: GetUsagePlanKeys -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlan resource representing the
--   usage plan containing the to-be-retrieved UsagePlanKey resource
--   representing a plan customer.</li>
--   </ul>
[$sel:usagePlanId:GetUsagePlanKeys'] :: GetUsagePlanKeys -> Text

-- | Create a value of <a>GetUsagePlanKeys</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameQuery:GetUsagePlanKeys'</a>,
--   <a>getUsagePlanKeys_nameQuery</a> - A query parameter specifying the
--   name of the to-be-returned usage plan keys.
--   
--   <a>$sel:limit:GetUsagePlanKeys'</a>, <a>getUsagePlanKeys_limit</a> -
--   The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
--   
--   <a>$sel:position:GetUsagePlanKeys'</a>,
--   <a>getUsagePlanKeys_position</a> - The current pagination position in
--   the paged result set.
--   
--   <a>$sel:usagePlanId:GetUsagePlanKeys'</a>,
--   <a>getUsagePlanKeys_usagePlanId</a> - [Required] The Id of the
--   UsagePlan resource representing the usage plan containing the
--   to-be-retrieved UsagePlanKey resource representing a plan customer.
newGetUsagePlanKeys :: Text -> GetUsagePlanKeys

-- | A query parameter specifying the name of the to-be-returned usage plan
--   keys.
getUsagePlanKeys_nameQuery :: Lens' GetUsagePlanKeys (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getUsagePlanKeys_limit :: Lens' GetUsagePlanKeys (Maybe Int)

-- | The current pagination position in the paged result set.
getUsagePlanKeys_position :: Lens' GetUsagePlanKeys (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlan resource representing the
--   usage plan containing the to-be-retrieved UsagePlanKey resource
--   representing a plan customer.</li>
--   </ul>
getUsagePlanKeys_usagePlanId :: Lens' GetUsagePlanKeys Text

-- | Represents the collection of usage plan keys added to usage plans for
--   the associated API keys and, possibly, other types of keys.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newGetUsagePlanKeysResponse</a> smart constructor.
data GetUsagePlanKeysResponse
GetUsagePlanKeysResponse' :: Maybe [UsagePlanKey] -> Maybe Text -> Int -> GetUsagePlanKeysResponse

-- | The current page of elements from this collection.
[$sel:items:GetUsagePlanKeysResponse'] :: GetUsagePlanKeysResponse -> Maybe [UsagePlanKey]
[$sel:position:GetUsagePlanKeysResponse'] :: GetUsagePlanKeysResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetUsagePlanKeysResponse'] :: GetUsagePlanKeysResponse -> Int

-- | Create a value of <a>GetUsagePlanKeysResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetUsagePlanKeysResponse'</a>,
--   <a>getUsagePlanKeysResponse_items</a> - The current page of elements
--   from this collection.
--   
--   <a>$sel:position:GetUsagePlanKeys'</a>,
--   <a>getUsagePlanKeysResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetUsagePlanKeysResponse'</a>,
--   <a>getUsagePlanKeysResponse_httpStatus</a> - The response's http
--   status code.
newGetUsagePlanKeysResponse :: Int -> GetUsagePlanKeysResponse

-- | The current page of elements from this collection.
getUsagePlanKeysResponse_items :: Lens' GetUsagePlanKeysResponse (Maybe [UsagePlanKey])

-- | Undocumented member.
getUsagePlanKeysResponse_position :: Lens' GetUsagePlanKeysResponse (Maybe Text)

-- | The response's http status code.
getUsagePlanKeysResponse_httpStatus :: Lens' GetUsagePlanKeysResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeys
instance GHC.Show.Show Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeys
instance GHC.Read.Read Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeys
instance GHC.Classes.Eq Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeys
instance GHC.Generics.Generic Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeysResponse
instance GHC.Show.Show Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeysResponse
instance GHC.Read.Read Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeysResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeysResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeys
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeysResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeys
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeys
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeys
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeys
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeys
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetUsagePlanKeys.GetUsagePlanKeys


-- | Gets a usage plan key of a given key identifier.
module Amazonka.APIGateway.GetUsagePlanKey

-- | The GET request to get a usage plan key of a given key identifier.
--   
--   <i>See:</i> <a>newGetUsagePlanKey</a> smart constructor.
data GetUsagePlanKey
GetUsagePlanKey' :: Text -> Text -> GetUsagePlanKey

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlan resource representing the
--   usage plan containing the to-be-retrieved UsagePlanKey resource
--   representing a plan customer.</li>
--   </ul>
[$sel:usagePlanId:GetUsagePlanKey'] :: GetUsagePlanKey -> Text

-- | <ul>
--   <li><i>Required</i> The key Id of the to-be-retrieved UsagePlanKey
--   resource representing a plan customer.</li>
--   </ul>
[$sel:keyId:GetUsagePlanKey'] :: GetUsagePlanKey -> Text

-- | Create a value of <a>GetUsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:GetUsagePlanKey'</a>,
--   <a>getUsagePlanKey_usagePlanId</a> - [Required] The Id of the
--   UsagePlan resource representing the usage plan containing the
--   to-be-retrieved UsagePlanKey resource representing a plan customer.
--   
--   <a>$sel:keyId:GetUsagePlanKey'</a>, <a>getUsagePlanKey_keyId</a> -
--   [Required] The key Id of the to-be-retrieved UsagePlanKey resource
--   representing a plan customer.
newGetUsagePlanKey :: Text -> Text -> GetUsagePlanKey

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlan resource representing the
--   usage plan containing the to-be-retrieved UsagePlanKey resource
--   representing a plan customer.</li>
--   </ul>
getUsagePlanKey_usagePlanId :: Lens' GetUsagePlanKey Text

-- | <ul>
--   <li><i>Required</i> The key Id of the to-be-retrieved UsagePlanKey
--   resource representing a plan customer.</li>
--   </ul>
getUsagePlanKey_keyId :: Lens' GetUsagePlanKey Text

-- | Represents a usage plan key to identify a plan customer.
--   
--   To associate an API stage with a selected API key in a usage plan, you
--   must create a UsagePlanKey resource to represent the selected ApiKey.
--   
--   "
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlanKey</a> smart constructor.
data UsagePlanKey
UsagePlanKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UsagePlanKey

-- | The value of a usage plan key.
[$sel:value:UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | The name of a usage plan key.
[$sel:name:UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | The Id of a usage plan key.
[$sel:id:UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | The type of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
[$sel:type':UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | Create a value of <a>UsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:UsagePlanKey'</a>, <a>usagePlanKey_value</a> - The value
--   of a usage plan key.
--   
--   <a>$sel:name:UsagePlanKey'</a>, <a>usagePlanKey_name</a> - The name of
--   a usage plan key.
--   
--   <a>$sel:id:UsagePlanKey'</a>, <a>usagePlanKey_id</a> - The Id of a
--   usage plan key.
--   
--   <a>$sel:type':UsagePlanKey'</a>, <a>usagePlanKey_type</a> - The type
--   of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
newUsagePlanKey :: UsagePlanKey

-- | The value of a usage plan key.
usagePlanKey_value :: Lens' UsagePlanKey (Maybe Text)

-- | The name of a usage plan key.
usagePlanKey_name :: Lens' UsagePlanKey (Maybe Text)

-- | The Id of a usage plan key.
usagePlanKey_id :: Lens' UsagePlanKey (Maybe Text)

-- | The type of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
usagePlanKey_type :: Lens' UsagePlanKey (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.GetUsagePlanKey.GetUsagePlanKey
instance GHC.Show.Show Amazonka.APIGateway.GetUsagePlanKey.GetUsagePlanKey
instance GHC.Read.Read Amazonka.APIGateway.GetUsagePlanKey.GetUsagePlanKey
instance GHC.Classes.Eq Amazonka.APIGateway.GetUsagePlanKey.GetUsagePlanKey
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetUsagePlanKey.GetUsagePlanKey
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetUsagePlanKey.GetUsagePlanKey
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetUsagePlanKey.GetUsagePlanKey
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetUsagePlanKey.GetUsagePlanKey
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetUsagePlanKey.GetUsagePlanKey
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetUsagePlanKey.GetUsagePlanKey


-- | Gets a usage plan of a given plan identifier.
module Amazonka.APIGateway.GetUsagePlan

-- | The GET request to get a usage plan of a given plan identifier.
--   
--   <i>See:</i> <a>newGetUsagePlan</a> smart constructor.
data GetUsagePlan
GetUsagePlan' :: Text -> GetUsagePlan

-- | <ul>
--   <li><i>Required</i> The identifier of the UsagePlan resource to be
--   retrieved.</li>
--   </ul>
[$sel:usagePlanId:GetUsagePlan'] :: GetUsagePlan -> Text

-- | Create a value of <a>GetUsagePlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:GetUsagePlan'</a>, <a>getUsagePlan_usagePlanId</a>
--   - [Required] The identifier of the UsagePlan resource to be retrieved.
newGetUsagePlan :: Text -> GetUsagePlan

-- | <ul>
--   <li><i>Required</i> The identifier of the UsagePlan resource to be
--   retrieved.</li>
--   </ul>
getUsagePlan_usagePlanId :: Lens' GetUsagePlan Text

-- | Represents a usage plan than can specify who can assess associated API
--   stages with specified request limits and quotas.
--   
--   In a usage plan, you associate an API by specifying the API's Id and a
--   stage name of the specified API. You add plan customers by adding API
--   keys to the plan.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlan</a> smart constructor.
data UsagePlan
UsagePlan' :: Maybe [ApiStage] -> Maybe Text -> Maybe Text -> Maybe ThrottleSettings -> Maybe QuotaSettings -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> UsagePlan

-- | The associated API stages of a usage plan.
[$sel:apiStages:UsagePlan'] :: UsagePlan -> Maybe [ApiStage]

-- | The name of a usage plan.
[$sel:name:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The identifier of a UsagePlan resource.
[$sel:id:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The request throttle limits of a usage plan.
[$sel:throttle:UsagePlan'] :: UsagePlan -> Maybe ThrottleSettings

-- | The maximum number of permitted requests per a given unit time
--   interval.
[$sel:quota:UsagePlan'] :: UsagePlan -> Maybe QuotaSettings

-- | The description of a usage plan.
[$sel:description:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
[$sel:productCode:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:UsagePlan'] :: UsagePlan -> Maybe (HashMap Text Text)

-- | Create a value of <a>UsagePlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiStages:UsagePlan'</a>, <a>usagePlan_apiStages</a> - The
--   associated API stages of a usage plan.
--   
--   <a>$sel:name:UsagePlan'</a>, <a>usagePlan_name</a> - The name of a
--   usage plan.
--   
--   <a>$sel:id:UsagePlan'</a>, <a>usagePlan_id</a> - The identifier of a
--   UsagePlan resource.
--   
--   <a>$sel:throttle:UsagePlan'</a>, <a>usagePlan_throttle</a> - The
--   request throttle limits of a usage plan.
--   
--   <a>$sel:quota:UsagePlan'</a>, <a>usagePlan_quota</a> - The maximum
--   number of permitted requests per a given unit time interval.
--   
--   <a>$sel:description:UsagePlan'</a>, <a>usagePlan_description</a> - The
--   description of a usage plan.
--   
--   <a>$sel:productCode:UsagePlan'</a>, <a>usagePlan_productCode</a> - The
--   AWS Markeplace product identifier to associate with the usage plan as
--   a SaaS product on AWS Marketplace.
--   
--   <a>$sel:tags:UsagePlan'</a>, <a>usagePlan_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newUsagePlan :: UsagePlan

-- | The associated API stages of a usage plan.
usagePlan_apiStages :: Lens' UsagePlan (Maybe [ApiStage])

-- | The name of a usage plan.
usagePlan_name :: Lens' UsagePlan (Maybe Text)

-- | The identifier of a UsagePlan resource.
usagePlan_id :: Lens' UsagePlan (Maybe Text)

-- | The request throttle limits of a usage plan.
usagePlan_throttle :: Lens' UsagePlan (Maybe ThrottleSettings)

-- | The maximum number of permitted requests per a given unit time
--   interval.
usagePlan_quota :: Lens' UsagePlan (Maybe QuotaSettings)

-- | The description of a usage plan.
usagePlan_description :: Lens' UsagePlan (Maybe Text)

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
usagePlan_productCode :: Lens' UsagePlan (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
usagePlan_tags :: Lens' UsagePlan (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.GetUsagePlan.GetUsagePlan
instance GHC.Show.Show Amazonka.APIGateway.GetUsagePlan.GetUsagePlan
instance GHC.Read.Read Amazonka.APIGateway.GetUsagePlan.GetUsagePlan
instance GHC.Classes.Eq Amazonka.APIGateway.GetUsagePlan.GetUsagePlan
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetUsagePlan.GetUsagePlan
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetUsagePlan.GetUsagePlan
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetUsagePlan.GetUsagePlan
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetUsagePlan.GetUsagePlan
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetUsagePlan.GetUsagePlan
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetUsagePlan.GetUsagePlan


-- | Gets the usage data of a usage plan in a specified time interval.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetUsage

-- | The GET request to get the usage data of a usage plan in a specified
--   time interval.
--   
--   <i>See:</i> <a>newGetUsage</a> smart constructor.
data GetUsage
GetUsage' :: Maybe Text -> Maybe Int -> Maybe Text -> Text -> Text -> Text -> GetUsage

-- | The Id of the API key associated with the resultant usage data.
[$sel:keyId:GetUsage'] :: GetUsage -> Maybe Text

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetUsage'] :: GetUsage -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetUsage'] :: GetUsage -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The Id of the usage plan associated with the usage
--   data.</li>
--   </ul>
[$sel:usagePlanId:GetUsage'] :: GetUsage -> Text

-- | <ul>
--   <li><i>Required</i> The starting date (e.g., 2016-01-01) of the usage
--   data.</li>
--   </ul>
[$sel:startDate:GetUsage'] :: GetUsage -> Text

-- | <ul>
--   <li><i>Required</i> The ending date (e.g., 2016-12-31) of the usage
--   data.</li>
--   </ul>
[$sel:endDate:GetUsage'] :: GetUsage -> Text

-- | Create a value of <a>GetUsage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyId:GetUsage'</a>, <a>getUsage_keyId</a> - The Id of the API
--   key associated with the resultant usage data.
--   
--   <a>$sel:limit:GetUsage'</a>, <a>getUsage_limit</a> - The maximum
--   number of returned results per page. The default value is 25 and the
--   maximum value is 500.
--   
--   <a>$sel:position:GetUsage'</a>, <a>getUsage_position</a> - The current
--   pagination position in the paged result set.
--   
--   <a>$sel:usagePlanId:GetUsage'</a>, <a>getUsage_usagePlanId</a> -
--   [Required] The Id of the usage plan associated with the usage data.
--   
--   <a>$sel:startDate:GetUsage'</a>, <a>getUsage_startDate</a> -
--   [Required] The starting date (e.g., 2016-01-01) of the usage data.
--   
--   <a>$sel:endDate:GetUsage'</a>, <a>getUsage_endDate</a> - [Required]
--   The ending date (e.g., 2016-12-31) of the usage data.
newGetUsage :: Text -> Text -> Text -> GetUsage

-- | The Id of the API key associated with the resultant usage data.
getUsage_keyId :: Lens' GetUsage (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getUsage_limit :: Lens' GetUsage (Maybe Int)

-- | The current pagination position in the paged result set.
getUsage_position :: Lens' GetUsage (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The Id of the usage plan associated with the usage
--   data.</li>
--   </ul>
getUsage_usagePlanId :: Lens' GetUsage Text

-- | <ul>
--   <li><i>Required</i> The starting date (e.g., 2016-01-01) of the usage
--   data.</li>
--   </ul>
getUsage_startDate :: Lens' GetUsage Text

-- | <ul>
--   <li><i>Required</i> The ending date (e.g., 2016-12-31) of the usage
--   data.</li>
--   </ul>
getUsage_endDate :: Lens' GetUsage Text

-- | Represents the usage data of a usage plan.
--   
--   <a>Create and Use Usage Plans</a>, <a>Manage Usage in a Usage Plan</a>
--   
--   <i>See:</i> <a>newUsage</a> smart constructor.
data Usage
Usage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text [[Integer]]) -> Maybe Text -> Maybe Text -> Usage

-- | The plan Id associated with this usage data.
[$sel:usagePlanId:Usage'] :: Usage -> Maybe Text

-- | The ending date of the usage data.
[$sel:endDate:Usage'] :: Usage -> Maybe Text

-- | The usage data, as daily logs of used and remaining quotas, over the
--   specified time interval indexed over the API keys in a usage plan. For
--   example, <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
--   [100, 10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value
--   and the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
[$sel:items:Usage'] :: Usage -> Maybe (HashMap Text [[Integer]])

-- | The starting date of the usage data.
[$sel:startDate:Usage'] :: Usage -> Maybe Text
[$sel:position:Usage'] :: Usage -> Maybe Text

-- | Create a value of <a>Usage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:Usage'</a>, <a>usage_usagePlanId</a> - The plan Id
--   associated with this usage data.
--   
--   <a>$sel:endDate:Usage'</a>, <a>usage_endDate</a> - The ending date of
--   the usage data.
--   
--   <a>$sel:items:Usage'</a>, <a>usage_items</a> - The usage data, as
--   daily logs of used and remaining quotas, over the specified time
--   interval indexed over the API keys in a usage plan. For example,
--   <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90], [100,
--   10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value and
--   the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
--   
--   <a>$sel:startDate:Usage'</a>, <a>usage_startDate</a> - The starting
--   date of the usage data.
--   
--   <a>$sel:position:Usage'</a>, <a>usage_position</a> - Undocumented
--   member.
newUsage :: Usage

-- | The plan Id associated with this usage data.
usage_usagePlanId :: Lens' Usage (Maybe Text)

-- | The ending date of the usage data.
usage_endDate :: Lens' Usage (Maybe Text)

-- | The usage data, as daily logs of used and remaining quotas, over the
--   specified time interval indexed over the API keys in a usage plan. For
--   example, <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
--   [100, 10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value
--   and the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
usage_items :: Lens' Usage (Maybe (HashMap Text [[Integer]]))

-- | The starting date of the usage data.
usage_startDate :: Lens' Usage (Maybe Text)

-- | Undocumented member.
usage_position :: Lens' Usage (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.GetUsage.GetUsage
instance GHC.Show.Show Amazonka.APIGateway.GetUsage.GetUsage
instance GHC.Read.Read Amazonka.APIGateway.GetUsage.GetUsage
instance GHC.Classes.Eq Amazonka.APIGateway.GetUsage.GetUsage
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetUsage.GetUsage
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetUsage.GetUsage
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetUsage.GetUsage
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetUsage.GetUsage
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetUsage.GetUsage
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetUsage.GetUsage
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetUsage.GetUsage


-- | Gets the Tags collection for a given resource.
module Amazonka.APIGateway.GetTags

-- | Gets the Tags collection for a given resource.
--   
--   <i>See:</i> <a>newGetTags</a> smart constructor.
data GetTags
GetTags' :: Maybe Int -> Maybe Text -> Text -> GetTags

-- | (Not currently supported) The maximum number of returned results per
--   page. The default value is 25 and the maximum value is 500.
[$sel:limit:GetTags'] :: GetTags -> Maybe Int

-- | (Not currently supported) The current pagination position in the paged
--   result set.
[$sel:position:GetTags'] :: GetTags -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The ARN of a resource that can be tagged.</li>
--   </ul>
[$sel:resourceArn:GetTags'] :: GetTags -> Text

-- | Create a value of <a>GetTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetTags'</a>, <a>getTags_limit</a> - (Not currently
--   supported) The maximum number of returned results per page. The
--   default value is 25 and the maximum value is 500.
--   
--   <a>$sel:position:GetTags'</a>, <a>getTags_position</a> - (Not
--   currently supported) The current pagination position in the paged
--   result set.
--   
--   <a>$sel:resourceArn:GetTags'</a>, <a>getTags_resourceArn</a> -
--   [Required] The ARN of a resource that can be tagged.
newGetTags :: Text -> GetTags

-- | (Not currently supported) The maximum number of returned results per
--   page. The default value is 25 and the maximum value is 500.
getTags_limit :: Lens' GetTags (Maybe Int)

-- | (Not currently supported) The current pagination position in the paged
--   result set.
getTags_position :: Lens' GetTags (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The ARN of a resource that can be tagged.</li>
--   </ul>
getTags_resourceArn :: Lens' GetTags Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <i>See:</i> <a>newGetTagsResponse</a> smart constructor.
data GetTagsResponse
GetTagsResponse' :: Maybe (HashMap Text Text) -> Int -> GetTagsResponse

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:GetTagsResponse'] :: GetTagsResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetTagsResponse'] :: GetTagsResponse -> Int

-- | Create a value of <a>GetTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:GetTagsResponse'</a>, <a>getTagsResponse_tags</a> - The
--   collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <a>$sel:httpStatus:GetTagsResponse'</a>,
--   <a>getTagsResponse_httpStatus</a> - The response's http status code.
newGetTagsResponse :: Int -> GetTagsResponse

-- | The collection of tags. Each tag element is associated with a given
--   resource.
getTagsResponse_tags :: Lens' GetTagsResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getTagsResponse_httpStatus :: Lens' GetTagsResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetTags.GetTags
instance GHC.Show.Show Amazonka.APIGateway.GetTags.GetTags
instance GHC.Read.Read Amazonka.APIGateway.GetTags.GetTags
instance GHC.Classes.Eq Amazonka.APIGateway.GetTags.GetTags
instance GHC.Generics.Generic Amazonka.APIGateway.GetTags.GetTagsResponse
instance GHC.Show.Show Amazonka.APIGateway.GetTags.GetTagsResponse
instance GHC.Read.Read Amazonka.APIGateway.GetTags.GetTagsResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetTags.GetTagsResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetTags.GetTags
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetTags.GetTagsResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetTags.GetTags
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetTags.GetTags
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetTags.GetTags
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetTags.GetTags
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetTags.GetTags


-- | Gets information about one or more Stage resources.
module Amazonka.APIGateway.GetStages

-- | Requests API Gateway to get information about one or more Stage
--   resources.
--   
--   <i>See:</i> <a>newGetStages</a> smart constructor.
data GetStages
GetStages' :: Maybe Text -> Text -> GetStages

-- | The stages' deployment identifiers.
[$sel:deploymentId:GetStages'] :: GetStages -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetStages'] :: GetStages -> Text

-- | Create a value of <a>GetStages</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:GetStages'</a>, <a>getStages_deploymentId</a> -
--   The stages' deployment identifiers.
--   
--   <a>$sel:restApiId:GetStages'</a>, <a>getStages_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
newGetStages :: Text -> GetStages

-- | The stages' deployment identifiers.
getStages_deploymentId :: Lens' GetStages (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getStages_restApiId :: Lens' GetStages Text

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
--   
--   <a>Deploying API in Stages</a>
--   
--   <i>See:</i> <a>newGetStagesResponse</a> smart constructor.
data GetStagesResponse
GetStagesResponse' :: Maybe [Stage] -> Int -> GetStagesResponse

-- | The current page of elements from this collection.
[$sel:item:GetStagesResponse'] :: GetStagesResponse -> Maybe [Stage]

-- | The response's http status code.
[$sel:httpStatus:GetStagesResponse'] :: GetStagesResponse -> Int

-- | Create a value of <a>GetStagesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:item:GetStagesResponse'</a>, <a>getStagesResponse_item</a> -
--   The current page of elements from this collection.
--   
--   <a>$sel:httpStatus:GetStagesResponse'</a>,
--   <a>getStagesResponse_httpStatus</a> - The response's http status code.
newGetStagesResponse :: Int -> GetStagesResponse

-- | The current page of elements from this collection.
getStagesResponse_item :: Lens' GetStagesResponse (Maybe [Stage])

-- | The response's http status code.
getStagesResponse_httpStatus :: Lens' GetStagesResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetStages.GetStages
instance GHC.Show.Show Amazonka.APIGateway.GetStages.GetStages
instance GHC.Read.Read Amazonka.APIGateway.GetStages.GetStages
instance GHC.Classes.Eq Amazonka.APIGateway.GetStages.GetStages
instance GHC.Generics.Generic Amazonka.APIGateway.GetStages.GetStagesResponse
instance GHC.Show.Show Amazonka.APIGateway.GetStages.GetStagesResponse
instance GHC.Read.Read Amazonka.APIGateway.GetStages.GetStagesResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetStages.GetStagesResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetStages.GetStages
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetStages.GetStagesResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetStages.GetStages
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetStages.GetStages
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetStages.GetStages
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetStages.GetStages
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetStages.GetStages


-- | Gets information about a Stage resource.
module Amazonka.APIGateway.GetStage

-- | Requests API Gateway to get information about a Stage resource.
--   
--   <i>See:</i> <a>newGetStage</a> smart constructor.
data GetStage
GetStage' :: Text -> Text -> GetStage

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetStage'] :: GetStage -> Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage resource to get information
--   about.</li>
--   </ul>
[$sel:stageName:GetStage'] :: GetStage -> Text

-- | Create a value of <a>GetStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetStage'</a>, <a>getStage_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:GetStage'</a>, <a>getStage_stageName</a> -
--   [Required] The name of the Stage resource to get information about.
newGetStage :: Text -> Text -> GetStage

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getStage_restApiId :: Lens' GetStage Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage resource to get information
--   about.</li>
--   </ul>
getStage_stageName :: Lens' GetStage Text

-- | Represents a unique identifier for a version of a deployed RestApi
--   that is callable by users.
--   
--   <a>Deploy an API</a>
--   
--   <i>See:</i> <a>newStage</a> smart constructor.
data Stage
Stage' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe AccessLogSettings -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe CacheClusterStatus -> Maybe (HashMap Text MethodSetting) -> Maybe POSIX -> Maybe CacheClusterSize -> Maybe Text -> Maybe CanarySettings -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Stage

-- | The identifier of the Deployment that the stage points to.
[$sel:deploymentId:Stage'] :: Stage -> Maybe Text

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
[$sel:variables:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | Settings for logging access in this stage.
[$sel:accessLogSettings:Stage'] :: Stage -> Maybe AccessLogSettings

-- | The version of the associated API documentation.
[$sel:documentationVersion:Stage'] :: Stage -> Maybe Text

-- | The identifier of a client certificate for an API stage.
[$sel:clientCertificateId:Stage'] :: Stage -> Maybe Text

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
[$sel:tracingEnabled:Stage'] :: Stage -> Maybe Bool

-- | The timestamp when the stage was created.
[$sel:createdDate:Stage'] :: Stage -> Maybe POSIX

-- | The status of the cache cluster for the stage, if enabled.
[$sel:cacheClusterStatus:Stage'] :: Stage -> Maybe CacheClusterStatus

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
[$sel:methodSettings:Stage'] :: Stage -> Maybe (HashMap Text MethodSetting)

-- | The timestamp when the stage last updated.
[$sel:lastUpdatedDate:Stage'] :: Stage -> Maybe POSIX

-- | The size of the cache cluster for the stage, if enabled.
[$sel:cacheClusterSize:Stage'] :: Stage -> Maybe CacheClusterSize

-- | The ARN of the WebAcl associated with the Stage.
[$sel:webAclArn:Stage'] :: Stage -> Maybe Text

-- | Settings for the canary deployment in this stage.
[$sel:canarySettings:Stage'] :: Stage -> Maybe CanarySettings

-- | Specifies whether a cache cluster is enabled for the stage.
[$sel:cacheClusterEnabled:Stage'] :: Stage -> Maybe Bool

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
[$sel:stageName:Stage'] :: Stage -> Maybe Text

-- | The stage's description.
[$sel:description:Stage'] :: Stage -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | Create a value of <a>Stage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Stage'</a>, <a>stage_deploymentId</a> - The
--   identifier of the Deployment that the stage points to.
--   
--   <a>$sel:variables:Stage'</a>, <a>stage_variables</a> - A map that
--   defines the stage variables for a Stage resource. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:accessLogSettings:Stage'</a>, <a>stage_accessLogSettings</a> -
--   Settings for logging access in this stage.
--   
--   <a>$sel:documentationVersion:Stage'</a>,
--   <a>stage_documentationVersion</a> - The version of the associated API
--   documentation.
--   
--   <a>$sel:clientCertificateId:Stage'</a>,
--   <a>stage_clientCertificateId</a> - The identifier of a client
--   certificate for an API stage.
--   
--   <a>$sel:tracingEnabled:Stage'</a>, <a>stage_tracingEnabled</a> -
--   Specifies whether active tracing with X-ray is enabled for the Stage.
--   
--   <a>$sel:createdDate:Stage'</a>, <a>stage_createdDate</a> - The
--   timestamp when the stage was created.
--   
--   <a>$sel:cacheClusterStatus:Stage'</a>, <a>stage_cacheClusterStatus</a>
--   - The status of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:methodSettings:Stage'</a>, <a>stage_methodSettings</a> - A map
--   that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
--   
--   <a>$sel:lastUpdatedDate:Stage'</a>, <a>stage_lastUpdatedDate</a> - The
--   timestamp when the stage last updated.
--   
--   <a>$sel:cacheClusterSize:Stage'</a>, <a>stage_cacheClusterSize</a> -
--   The size of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:webAclArn:Stage'</a>, <a>stage_webAclArn</a> - The ARN of the
--   WebAcl associated with the Stage.
--   
--   <a>$sel:canarySettings:Stage'</a>, <a>stage_canarySettings</a> -
--   Settings for the canary deployment in this stage.
--   
--   <a>$sel:cacheClusterEnabled:Stage'</a>,
--   <a>stage_cacheClusterEnabled</a> - Specifies whether a cache cluster
--   is enabled for the stage.
--   
--   <a>$sel:stageName:Stage'</a>, <a>stage_stageName</a> - The name of the
--   stage is the first path segment in the Uniform Resource Identifier
--   (URI) of a call to API Gateway. Stage names can only contain
--   alphanumeric characters, hyphens, and underscores. Maximum length is
--   128 characters.
--   
--   <a>$sel:description:Stage'</a>, <a>stage_description</a> - The stage's
--   description.
--   
--   <a>$sel:tags:Stage'</a>, <a>stage_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newStage :: Stage

-- | The identifier of the Deployment that the stage points to.
stage_deploymentId :: Lens' Stage (Maybe Text)

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
stage_variables :: Lens' Stage (Maybe (HashMap Text Text))

-- | Settings for logging access in this stage.
stage_accessLogSettings :: Lens' Stage (Maybe AccessLogSettings)

-- | The version of the associated API documentation.
stage_documentationVersion :: Lens' Stage (Maybe Text)

-- | The identifier of a client certificate for an API stage.
stage_clientCertificateId :: Lens' Stage (Maybe Text)

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
stage_tracingEnabled :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was created.
stage_createdDate :: Lens' Stage (Maybe UTCTime)

-- | The status of the cache cluster for the stage, if enabled.
stage_cacheClusterStatus :: Lens' Stage (Maybe CacheClusterStatus)

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
stage_methodSettings :: Lens' Stage (Maybe (HashMap Text MethodSetting))

-- | The timestamp when the stage last updated.
stage_lastUpdatedDate :: Lens' Stage (Maybe UTCTime)

-- | The size of the cache cluster for the stage, if enabled.
stage_cacheClusterSize :: Lens' Stage (Maybe CacheClusterSize)

-- | The ARN of the WebAcl associated with the Stage.
stage_webAclArn :: Lens' Stage (Maybe Text)

-- | Settings for the canary deployment in this stage.
stage_canarySettings :: Lens' Stage (Maybe CanarySettings)

-- | Specifies whether a cache cluster is enabled for the stage.
stage_cacheClusterEnabled :: Lens' Stage (Maybe Bool)

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
stage_stageName :: Lens' Stage (Maybe Text)

-- | The stage's description.
stage_description :: Lens' Stage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
stage_tags :: Lens' Stage (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.GetStage.GetStage
instance GHC.Show.Show Amazonka.APIGateway.GetStage.GetStage
instance GHC.Read.Read Amazonka.APIGateway.GetStage.GetStage
instance GHC.Classes.Eq Amazonka.APIGateway.GetStage.GetStage
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetStage.GetStage
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetStage.GetStage
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetStage.GetStage
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetStage.GetStage
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetStage.GetStage
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetStage.GetStage


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetSdkTypes

-- | Get the SdkTypes collection.
--   
--   <i>See:</i> <a>newGetSdkTypes</a> smart constructor.
data GetSdkTypes
GetSdkTypes' :: Maybe Int -> Maybe Text -> GetSdkTypes

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetSdkTypes'] :: GetSdkTypes -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetSdkTypes'] :: GetSdkTypes -> Maybe Text

-- | Create a value of <a>GetSdkTypes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetSdkTypes'</a>, <a>getSdkTypes_limit</a> - The maximum
--   number of returned results per page. The default value is 25 and the
--   maximum value is 500.
--   
--   <a>$sel:position:GetSdkTypes'</a>, <a>getSdkTypes_position</a> - The
--   current pagination position in the paged result set.
newGetSdkTypes :: GetSdkTypes

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getSdkTypes_limit :: Lens' GetSdkTypes (Maybe Int)

-- | The current pagination position in the paged result set.
getSdkTypes_position :: Lens' GetSdkTypes (Maybe Text)

-- | The collection of SdkType instances.
--   
--   <i>See:</i> <a>newGetSdkTypesResponse</a> smart constructor.
data GetSdkTypesResponse
GetSdkTypesResponse' :: Maybe [SdkType] -> Maybe Text -> Int -> GetSdkTypesResponse

-- | The current page of elements from this collection.
[$sel:items:GetSdkTypesResponse'] :: GetSdkTypesResponse -> Maybe [SdkType]
[$sel:position:GetSdkTypesResponse'] :: GetSdkTypesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSdkTypesResponse'] :: GetSdkTypesResponse -> Int

-- | Create a value of <a>GetSdkTypesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetSdkTypesResponse'</a>,
--   <a>getSdkTypesResponse_items</a> - The current page of elements from
--   this collection.
--   
--   <a>$sel:position:GetSdkTypes'</a>, <a>getSdkTypesResponse_position</a>
--   - Undocumented member.
--   
--   <a>$sel:httpStatus:GetSdkTypesResponse'</a>,
--   <a>getSdkTypesResponse_httpStatus</a> - The response's http status
--   code.
newGetSdkTypesResponse :: Int -> GetSdkTypesResponse

-- | The current page of elements from this collection.
getSdkTypesResponse_items :: Lens' GetSdkTypesResponse (Maybe [SdkType])

-- | Undocumented member.
getSdkTypesResponse_position :: Lens' GetSdkTypesResponse (Maybe Text)

-- | The response's http status code.
getSdkTypesResponse_httpStatus :: Lens' GetSdkTypesResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetSdkTypes.GetSdkTypes
instance GHC.Show.Show Amazonka.APIGateway.GetSdkTypes.GetSdkTypes
instance GHC.Read.Read Amazonka.APIGateway.GetSdkTypes.GetSdkTypes
instance GHC.Classes.Eq Amazonka.APIGateway.GetSdkTypes.GetSdkTypes
instance GHC.Generics.Generic Amazonka.APIGateway.GetSdkTypes.GetSdkTypesResponse
instance GHC.Show.Show Amazonka.APIGateway.GetSdkTypes.GetSdkTypesResponse
instance GHC.Read.Read Amazonka.APIGateway.GetSdkTypes.GetSdkTypesResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetSdkTypes.GetSdkTypesResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetSdkTypes.GetSdkTypes
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetSdkTypes.GetSdkTypesResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetSdkTypes.GetSdkTypes
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetSdkTypes.GetSdkTypes
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetSdkTypes.GetSdkTypes
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetSdkTypes.GetSdkTypes
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetSdkTypes.GetSdkTypes
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetSdkTypes.GetSdkTypes


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
module Amazonka.APIGateway.GetSdkType

-- | Get an SdkType instance.
--   
--   <i>See:</i> <a>newGetSdkType</a> smart constructor.
data GetSdkType
GetSdkType' :: Text -> GetSdkType

-- | <ul>
--   <li><i>Required</i> The identifier of the queried SdkType
--   instance.</li>
--   </ul>
[$sel:id:GetSdkType'] :: GetSdkType -> Text

-- | Create a value of <a>GetSdkType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetSdkType'</a>, <a>getSdkType_id</a> - [Required] The
--   identifier of the queried SdkType instance.
newGetSdkType :: Text -> GetSdkType

-- | <ul>
--   <li><i>Required</i> The identifier of the queried SdkType
--   instance.</li>
--   </ul>
getSdkType_id :: Lens' GetSdkType Text

-- | A type of SDK that API Gateway can generate.
--   
--   <i>See:</i> <a>newSdkType</a> smart constructor.
data SdkType
SdkType' :: Maybe Text -> Maybe [SdkConfigurationProperty] -> Maybe Text -> Maybe Text -> SdkType

-- | The user-friendly name of an SdkType instance.
[$sel:friendlyName:SdkType'] :: SdkType -> Maybe Text

-- | A list of configuration properties of an SdkType.
[$sel:configurationProperties:SdkType'] :: SdkType -> Maybe [SdkConfigurationProperty]

-- | The identifier of an SdkType instance.
[$sel:id:SdkType'] :: SdkType -> Maybe Text

-- | The description of an SdkType.
[$sel:description:SdkType'] :: SdkType -> Maybe Text

-- | Create a value of <a>SdkType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:friendlyName:SdkType'</a>, <a>sdkType_friendlyName</a> - The
--   user-friendly name of an SdkType instance.
--   
--   <a>$sel:configurationProperties:SdkType'</a>,
--   <a>sdkType_configurationProperties</a> - A list of configuration
--   properties of an SdkType.
--   
--   <a>$sel:id:SdkType'</a>, <a>sdkType_id</a> - The identifier of an
--   SdkType instance.
--   
--   <a>$sel:description:SdkType'</a>, <a>sdkType_description</a> - The
--   description of an SdkType.
newSdkType :: SdkType

-- | The user-friendly name of an SdkType instance.
sdkType_friendlyName :: Lens' SdkType (Maybe Text)

-- | A list of configuration properties of an SdkType.
sdkType_configurationProperties :: Lens' SdkType (Maybe [SdkConfigurationProperty])

-- | The identifier of an SdkType instance.
sdkType_id :: Lens' SdkType (Maybe Text)

-- | The description of an SdkType.
sdkType_description :: Lens' SdkType (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.GetSdkType.GetSdkType
instance GHC.Show.Show Amazonka.APIGateway.GetSdkType.GetSdkType
instance GHC.Read.Read Amazonka.APIGateway.GetSdkType.GetSdkType
instance GHC.Classes.Eq Amazonka.APIGateway.GetSdkType.GetSdkType
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetSdkType.GetSdkType
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetSdkType.GetSdkType
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetSdkType.GetSdkType
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetSdkType.GetSdkType
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetSdkType.GetSdkType
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetSdkType.GetSdkType


-- | Generates a client SDK for a RestApi and Stage.
module Amazonka.APIGateway.GetSdk

-- | Request a new generated client SDK for a RestApi and Stage.
--   
--   <i>See:</i> <a>newGetSdk</a> smart constructor.
data GetSdk
GetSdk' :: Maybe (HashMap Text Text) -> Text -> Text -> Text -> GetSdk

-- | A string-to-string key-value map of query parameters
--   <tt>sdkType</tt>-dependent properties of the SDK. For <tt>sdkType</tt>
--   of <tt>objectivec</tt> or <tt>swift</tt>, a parameter named
--   <tt>classPrefix</tt> is required. For <tt>sdkType</tt> of
--   <tt>android</tt>, parameters named <tt>groupId</tt>,
--   <tt>artifactId</tt>, <tt>artifactVersion</tt>, and
--   <tt>invokerPackage</tt> are required. For <tt>sdkType</tt> of
--   <tt>java</tt>, parameters named <tt>serviceName</tt> and
--   <tt>javaPackageName</tt> are required.
[$sel:parameters:GetSdk'] :: GetSdk -> Maybe (HashMap Text Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetSdk'] :: GetSdk -> Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage that the SDK will use.</li>
--   </ul>
[$sel:stageName:GetSdk'] :: GetSdk -> Text

-- | <ul>
--   <li><i>Required</i> The language for the generated SDK. Currently
--   <tt>java</tt>, <tt>javascript</tt>, <tt>android</tt>,
--   <tt>objectivec</tt> (for iOS), <tt>swift</tt> (for iOS), and
--   <tt>ruby</tt> are supported.</li>
--   </ul>
[$sel:sdkType:GetSdk'] :: GetSdk -> Text

-- | Create a value of <a>GetSdk</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:GetSdk'</a>, <a>getSdk_parameters</a> - A
--   string-to-string key-value map of query parameters
--   <tt>sdkType</tt>-dependent properties of the SDK. For <tt>sdkType</tt>
--   of <tt>objectivec</tt> or <tt>swift</tt>, a parameter named
--   <tt>classPrefix</tt> is required. For <tt>sdkType</tt> of
--   <tt>android</tt>, parameters named <tt>groupId</tt>,
--   <tt>artifactId</tt>, <tt>artifactVersion</tt>, and
--   <tt>invokerPackage</tt> are required. For <tt>sdkType</tt> of
--   <tt>java</tt>, parameters named <tt>serviceName</tt> and
--   <tt>javaPackageName</tt> are required.
--   
--   <a>$sel:restApiId:GetSdk'</a>, <a>getSdk_restApiId</a> - [Required]
--   The string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:GetSdk'</a>, <a>getSdk_stageName</a> - [Required]
--   The name of the Stage that the SDK will use.
--   
--   <a>$sel:sdkType:GetSdk'</a>, <a>getSdk_sdkType</a> - [Required] The
--   language for the generated SDK. Currently <tt>java</tt>,
--   <tt>javascript</tt>, <tt>android</tt>, <tt>objectivec</tt> (for iOS),
--   <tt>swift</tt> (for iOS), and <tt>ruby</tt> are supported.
newGetSdk :: Text -> Text -> Text -> GetSdk

-- | A string-to-string key-value map of query parameters
--   <tt>sdkType</tt>-dependent properties of the SDK. For <tt>sdkType</tt>
--   of <tt>objectivec</tt> or <tt>swift</tt>, a parameter named
--   <tt>classPrefix</tt> is required. For <tt>sdkType</tt> of
--   <tt>android</tt>, parameters named <tt>groupId</tt>,
--   <tt>artifactId</tt>, <tt>artifactVersion</tt>, and
--   <tt>invokerPackage</tt> are required. For <tt>sdkType</tt> of
--   <tt>java</tt>, parameters named <tt>serviceName</tt> and
--   <tt>javaPackageName</tt> are required.
getSdk_parameters :: Lens' GetSdk (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getSdk_restApiId :: Lens' GetSdk Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage that the SDK will use.</li>
--   </ul>
getSdk_stageName :: Lens' GetSdk Text

-- | <ul>
--   <li><i>Required</i> The language for the generated SDK. Currently
--   <tt>java</tt>, <tt>javascript</tt>, <tt>android</tt>,
--   <tt>objectivec</tt> (for iOS), <tt>swift</tt> (for iOS), and
--   <tt>ruby</tt> are supported.</li>
--   </ul>
getSdk_sdkType :: Lens' GetSdk Text

-- | The binary blob response to GetSdk, which contains the generated SDK.
--   
--   <i>See:</i> <a>newGetSdkResponse</a> smart constructor.
data GetSdkResponse
GetSdkResponse' :: Maybe ByteString -> Maybe Text -> Maybe Text -> Int -> GetSdkResponse

-- | The binary blob response to GetSdk, which contains the generated SDK.
[$sel:body:GetSdkResponse'] :: GetSdkResponse -> Maybe ByteString

-- | The content-disposition header value in the HTTP response.
[$sel:contentDisposition:GetSdkResponse'] :: GetSdkResponse -> Maybe Text

-- | The content-type header value in the HTTP response.
[$sel:contentType:GetSdkResponse'] :: GetSdkResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSdkResponse'] :: GetSdkResponse -> Int

-- | Create a value of <a>GetSdkResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:body:GetSdkResponse'</a>, <a>getSdkResponse_body</a> - The
--   binary blob response to GetSdk, which contains the generated SDK.
--   
--   <a>$sel:contentDisposition:GetSdkResponse'</a>,
--   <a>getSdkResponse_contentDisposition</a> - The content-disposition
--   header value in the HTTP response.
--   
--   <a>$sel:contentType:GetSdkResponse'</a>,
--   <a>getSdkResponse_contentType</a> - The content-type header value in
--   the HTTP response.
--   
--   <a>$sel:httpStatus:GetSdkResponse'</a>,
--   <a>getSdkResponse_httpStatus</a> - The response's http status code.
newGetSdkResponse :: Int -> GetSdkResponse

-- | The binary blob response to GetSdk, which contains the generated SDK.
getSdkResponse_body :: Lens' GetSdkResponse (Maybe ByteString)

-- | The content-disposition header value in the HTTP response.
getSdkResponse_contentDisposition :: Lens' GetSdkResponse (Maybe Text)

-- | The content-type header value in the HTTP response.
getSdkResponse_contentType :: Lens' GetSdkResponse (Maybe Text)

-- | The response's http status code.
getSdkResponse_httpStatus :: Lens' GetSdkResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetSdk.GetSdk
instance GHC.Show.Show Amazonka.APIGateway.GetSdk.GetSdk
instance GHC.Read.Read Amazonka.APIGateway.GetSdk.GetSdk
instance GHC.Classes.Eq Amazonka.APIGateway.GetSdk.GetSdk
instance GHC.Generics.Generic Amazonka.APIGateway.GetSdk.GetSdkResponse
instance GHC.Show.Show Amazonka.APIGateway.GetSdk.GetSdkResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetSdk.GetSdkResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetSdk.GetSdk
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetSdk.GetSdkResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetSdk.GetSdk
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetSdk.GetSdk
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetSdk.GetSdk
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetSdk.GetSdk
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetSdk.GetSdk


-- | Lists the RestApis resources for your collection.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetRestApis

-- | The GET request to list existing RestApis defined for your collection.
--   
--   <i>See:</i> <a>newGetRestApis</a> smart constructor.
data GetRestApis
GetRestApis' :: Maybe Int -> Maybe Text -> GetRestApis

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetRestApis'] :: GetRestApis -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetRestApis'] :: GetRestApis -> Maybe Text

-- | Create a value of <a>GetRestApis</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetRestApis'</a>, <a>getRestApis_limit</a> - The maximum
--   number of returned results per page. The default value is 25 and the
--   maximum value is 500.
--   
--   <a>$sel:position:GetRestApis'</a>, <a>getRestApis_position</a> - The
--   current pagination position in the paged result set.
newGetRestApis :: GetRestApis

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getRestApis_limit :: Lens' GetRestApis (Maybe Int)

-- | The current pagination position in the paged result set.
getRestApis_position :: Lens' GetRestApis (Maybe Text)

-- | Contains references to your APIs and links that guide you in how to
--   interact with your collection. A collection offers a paginated view of
--   your APIs.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newGetRestApisResponse</a> smart constructor.
data GetRestApisResponse
GetRestApisResponse' :: Maybe [RestApi] -> Maybe Text -> Int -> GetRestApisResponse

-- | The current page of elements from this collection.
[$sel:items:GetRestApisResponse'] :: GetRestApisResponse -> Maybe [RestApi]
[$sel:position:GetRestApisResponse'] :: GetRestApisResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetRestApisResponse'] :: GetRestApisResponse -> Int

-- | Create a value of <a>GetRestApisResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetRestApisResponse'</a>,
--   <a>getRestApisResponse_items</a> - The current page of elements from
--   this collection.
--   
--   <a>$sel:position:GetRestApis'</a>, <a>getRestApisResponse_position</a>
--   - Undocumented member.
--   
--   <a>$sel:httpStatus:GetRestApisResponse'</a>,
--   <a>getRestApisResponse_httpStatus</a> - The response's http status
--   code.
newGetRestApisResponse :: Int -> GetRestApisResponse

-- | The current page of elements from this collection.
getRestApisResponse_items :: Lens' GetRestApisResponse (Maybe [RestApi])

-- | Undocumented member.
getRestApisResponse_position :: Lens' GetRestApisResponse (Maybe Text)

-- | The response's http status code.
getRestApisResponse_httpStatus :: Lens' GetRestApisResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetRestApis.GetRestApis
instance GHC.Show.Show Amazonka.APIGateway.GetRestApis.GetRestApis
instance GHC.Read.Read Amazonka.APIGateway.GetRestApis.GetRestApis
instance GHC.Classes.Eq Amazonka.APIGateway.GetRestApis.GetRestApis
instance GHC.Generics.Generic Amazonka.APIGateway.GetRestApis.GetRestApisResponse
instance GHC.Show.Show Amazonka.APIGateway.GetRestApis.GetRestApisResponse
instance GHC.Read.Read Amazonka.APIGateway.GetRestApis.GetRestApisResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetRestApis.GetRestApisResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetRestApis.GetRestApis
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetRestApis.GetRestApisResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetRestApis.GetRestApis
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetRestApis.GetRestApis
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetRestApis.GetRestApis
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetRestApis.GetRestApis
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetRestApis.GetRestApis
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetRestApis.GetRestApis


-- | Lists the RestApi resource in the collection.
module Amazonka.APIGateway.GetRestApi

-- | The GET request to list an existing RestApi defined for your
--   collection.
--   
--   <i>See:</i> <a>newGetRestApi</a> smart constructor.
data GetRestApi
GetRestApi' :: Text -> GetRestApi

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetRestApi'] :: GetRestApi -> Text

-- | Create a value of <a>GetRestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetRestApi'</a>, <a>getRestApi_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
newGetRestApi :: Text -> GetRestApi

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getRestApi_restApiId :: Lens' GetRestApi Text

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
[$sel:minimumCompressionSize:RestApi'] :: RestApi -> Maybe Int

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
[$sel:disableExecuteApiEndpoint:RestApi'] :: RestApi -> Maybe Bool

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
[$sel:binaryMediaTypes:RestApi'] :: RestApi -> Maybe [Text]

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
[$sel:warnings:RestApi'] :: RestApi -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:RestApi'] :: RestApi -> Maybe POSIX

-- | The API's name.
[$sel:name:RestApi'] :: RestApi -> Maybe Text

-- | A version identifier for the API.
[$sel:version:RestApi'] :: RestApi -> Maybe Text

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
[$sel:apiKeySource:RestApi'] :: RestApi -> Maybe ApiKeySourceType

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
[$sel:id:RestApi'] :: RestApi -> Maybe Text

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
[$sel:policy:RestApi'] :: RestApi -> Maybe Text

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
[$sel:endpointConfiguration:RestApi'] :: RestApi -> Maybe EndpointConfiguration

-- | The API's description.
[$sel:description:RestApi'] :: RestApi -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:RestApi'] :: RestApi -> Maybe (HashMap Text Text)

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.GetRestApi.GetRestApi
instance GHC.Show.Show Amazonka.APIGateway.GetRestApi.GetRestApi
instance GHC.Read.Read Amazonka.APIGateway.GetRestApi.GetRestApi
instance GHC.Classes.Eq Amazonka.APIGateway.GetRestApi.GetRestApi
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetRestApi.GetRestApi
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetRestApi.GetRestApi
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetRestApi.GetRestApi
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetRestApi.GetRestApi
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetRestApi.GetRestApi
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetRestApi.GetRestApi


-- | Lists information about a collection of Resource resources.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetResources

-- | Request to list information about a collection of resources.
--   
--   <i>See:</i> <a>newGetResources</a> smart constructor.
data GetResources
GetResources' :: Maybe [Text] -> Maybe Int -> Maybe Text -> Text -> GetResources

-- | A query parameter used to retrieve the specified resources embedded in
--   the returned Resources resource in the response. This <tt>embed</tt>
--   parameter value is a list of comma-separated strings. Currently, the
--   request supports only retrieval of the embedded Method resources this
--   way. The query parameter value must be a single-valued list and
--   contain the <tt>"methods"</tt> string. For example, <tt>GET
--   /restapis/{restapi_id}/resources?embed=methods</tt>.
[$sel:embed:GetResources'] :: GetResources -> Maybe [Text]

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetResources'] :: GetResources -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetResources'] :: GetResources -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetResources'] :: GetResources -> Text

-- | Create a value of <a>GetResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:embed:GetResources'</a>, <a>getResources_embed</a> - A query
--   parameter used to retrieve the specified resources embedded in the
--   returned Resources resource in the response. This <tt>embed</tt>
--   parameter value is a list of comma-separated strings. Currently, the
--   request supports only retrieval of the embedded Method resources this
--   way. The query parameter value must be a single-valued list and
--   contain the <tt>"methods"</tt> string. For example, <tt>GET
--   /restapis/{restapi_id}/resources?embed=methods</tt>.
--   
--   <a>$sel:limit:GetResources'</a>, <a>getResources_limit</a> - The
--   maximum number of returned results per page. The default value is 25
--   and the maximum value is 500.
--   
--   <a>$sel:position:GetResources'</a>, <a>getResources_position</a> - The
--   current pagination position in the paged result set.
--   
--   <a>$sel:restApiId:GetResources'</a>, <a>getResources_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
newGetResources :: Text -> GetResources

-- | A query parameter used to retrieve the specified resources embedded in
--   the returned Resources resource in the response. This <tt>embed</tt>
--   parameter value is a list of comma-separated strings. Currently, the
--   request supports only retrieval of the embedded Method resources this
--   way. The query parameter value must be a single-valued list and
--   contain the <tt>"methods"</tt> string. For example, <tt>GET
--   /restapis/{restapi_id}/resources?embed=methods</tt>.
getResources_embed :: Lens' GetResources (Maybe [Text])

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getResources_limit :: Lens' GetResources (Maybe Int)

-- | The current pagination position in the paged result set.
getResources_position :: Lens' GetResources (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getResources_restApiId :: Lens' GetResources Text

-- | Represents a collection of Resource resources.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newGetResourcesResponse</a> smart constructor.
data GetResourcesResponse
GetResourcesResponse' :: Maybe [Resource] -> Maybe Text -> Int -> GetResourcesResponse

-- | The current page of elements from this collection.
[$sel:items:GetResourcesResponse'] :: GetResourcesResponse -> Maybe [Resource]
[$sel:position:GetResourcesResponse'] :: GetResourcesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetResourcesResponse'] :: GetResourcesResponse -> Int

-- | Create a value of <a>GetResourcesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetResourcesResponse'</a>,
--   <a>getResourcesResponse_items</a> - The current page of elements from
--   this collection.
--   
--   <a>$sel:position:GetResources'</a>,
--   <a>getResourcesResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetResourcesResponse'</a>,
--   <a>getResourcesResponse_httpStatus</a> - The response's http status
--   code.
newGetResourcesResponse :: Int -> GetResourcesResponse

-- | The current page of elements from this collection.
getResourcesResponse_items :: Lens' GetResourcesResponse (Maybe [Resource])

-- | Undocumented member.
getResourcesResponse_position :: Lens' GetResourcesResponse (Maybe Text)

-- | The response's http status code.
getResourcesResponse_httpStatus :: Lens' GetResourcesResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetResources.GetResources
instance GHC.Show.Show Amazonka.APIGateway.GetResources.GetResources
instance GHC.Read.Read Amazonka.APIGateway.GetResources.GetResources
instance GHC.Classes.Eq Amazonka.APIGateway.GetResources.GetResources
instance GHC.Generics.Generic Amazonka.APIGateway.GetResources.GetResourcesResponse
instance GHC.Show.Show Amazonka.APIGateway.GetResources.GetResourcesResponse
instance GHC.Read.Read Amazonka.APIGateway.GetResources.GetResourcesResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetResources.GetResourcesResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetResources.GetResources
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetResources.GetResourcesResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetResources.GetResources
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetResources.GetResources
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetResources.GetResources
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetResources.GetResources
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetResources.GetResources
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetResources.GetResources


-- | Lists information about a resource.
module Amazonka.APIGateway.GetResource

-- | Request to list information about a resource.
--   
--   <i>See:</i> <a>newGetResource</a> smart constructor.
data GetResource
GetResource' :: Maybe [Text] -> Text -> Text -> GetResource

-- | A query parameter to retrieve the specified resources embedded in the
--   returned Resource representation in the response. This <tt>embed</tt>
--   parameter value is a list of comma-separated strings. Currently, the
--   request supports only retrieval of the embedded Method resources this
--   way. The query parameter value must be a single-valued list and
--   contain the <tt>"methods"</tt> string. For example, <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>.
[$sel:embed:GetResource'] :: GetResource -> Maybe [Text]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetResource'] :: GetResource -> Text

-- | <ul>
--   <li><i>Required</i> The identifier for the Resource resource.</li>
--   </ul>
[$sel:resourceId:GetResource'] :: GetResource -> Text

-- | Create a value of <a>GetResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:embed:GetResource'</a>, <a>getResource_embed</a> - A query
--   parameter to retrieve the specified resources embedded in the returned
--   Resource representation in the response. This <tt>embed</tt> parameter
--   value is a list of comma-separated strings. Currently, the request
--   supports only retrieval of the embedded Method resources this way. The
--   query parameter value must be a single-valued list and contain the
--   <tt>"methods"</tt> string. For example, <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>.
--   
--   <a>$sel:restApiId:GetResource'</a>, <a>getResource_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:GetResource'</a>, <a>getResource_resourceId</a> -
--   [Required] The identifier for the Resource resource.
newGetResource :: Text -> Text -> GetResource

-- | A query parameter to retrieve the specified resources embedded in the
--   returned Resource representation in the response. This <tt>embed</tt>
--   parameter value is a list of comma-separated strings. Currently, the
--   request supports only retrieval of the embedded Method resources this
--   way. The query parameter value must be a single-valued list and
--   contain the <tt>"methods"</tt> string. For example, <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>.
getResource_embed :: Lens' GetResource (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getResource_restApiId :: Lens' GetResource Text

-- | <ul>
--   <li><i>Required</i> The identifier for the Resource resource.</li>
--   </ul>
getResource_resourceId :: Lens' GetResource Text

-- | Represents an API resource.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Method) -> Maybe Text -> Resource

-- | The last path segment for this resource.
[$sel:pathPart:Resource'] :: Resource -> Maybe Text

-- | The full path for this resource.
[$sel:path:Resource'] :: Resource -> Maybe Text

-- | The resource's identifier.
[$sel:id:Resource'] :: Resource -> Maybe Text

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
[$sel:resourceMethods:Resource'] :: Resource -> Maybe (HashMap Text Method)

-- | The parent resource's identifier.
[$sel:parentId:Resource'] :: Resource -> Maybe Text

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathPart:Resource'</a>, <a>resource_pathPart</a> - The last
--   path segment for this resource.
--   
--   <a>$sel:path:Resource'</a>, <a>resource_path</a> - The full path for
--   this resource.
--   
--   <a>$sel:id:Resource'</a>, <a>resource_id</a> - The resource's
--   identifier.
--   
--   <a>$sel:resourceMethods:Resource'</a>, <a>resource_resourceMethods</a>
--   - Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
--   
--   <a>$sel:parentId:Resource'</a>, <a>resource_parentId</a> - The parent
--   resource's identifier.
newResource :: Resource

-- | The last path segment for this resource.
resource_pathPart :: Lens' Resource (Maybe Text)

-- | The full path for this resource.
resource_path :: Lens' Resource (Maybe Text)

-- | The resource's identifier.
resource_id :: Lens' Resource (Maybe Text)

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
resource_resourceMethods :: Lens' Resource (Maybe (HashMap Text Method))

-- | The parent resource's identifier.
resource_parentId :: Lens' Resource (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.GetResource.GetResource
instance GHC.Show.Show Amazonka.APIGateway.GetResource.GetResource
instance GHC.Read.Read Amazonka.APIGateway.GetResource.GetResource
instance GHC.Classes.Eq Amazonka.APIGateway.GetResource.GetResource
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetResource.GetResource
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetResource.GetResource
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetResource.GetResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetResource.GetResource
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetResource.GetResource
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetResource.GetResource


-- | Gets the RequestValidators collection of a given RestApi.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetRequestValidators

-- | Gets the RequestValidators collection of a given RestApi.
--   
--   <i>See:</i> <a>newGetRequestValidators</a> smart constructor.
data GetRequestValidators
GetRequestValidators' :: Maybe Int -> Maybe Text -> Text -> GetRequestValidators

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetRequestValidators'] :: GetRequestValidators -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetRequestValidators'] :: GetRequestValidators -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetRequestValidators'] :: GetRequestValidators -> Text

-- | Create a value of <a>GetRequestValidators</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetRequestValidators'</a>,
--   <a>getRequestValidators_limit</a> - The maximum number of returned
--   results per page. The default value is 25 and the maximum value is
--   500.
--   
--   <a>$sel:position:GetRequestValidators'</a>,
--   <a>getRequestValidators_position</a> - The current pagination position
--   in the paged result set.
--   
--   <a>$sel:restApiId:GetRequestValidators'</a>,
--   <a>getRequestValidators_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
newGetRequestValidators :: Text -> GetRequestValidators

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getRequestValidators_limit :: Lens' GetRequestValidators (Maybe Int)

-- | The current pagination position in the paged result set.
getRequestValidators_position :: Lens' GetRequestValidators (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getRequestValidators_restApiId :: Lens' GetRequestValidators Text

-- | A collection of RequestValidator resources of a given RestApi.
--   
--   In OpenAPI, the RequestValidators of an API is defined by the
--   <a>x-amazon-apigateway-request-validators</a> extension.
--   
--   <a>Enable Basic Request Validation in API Gateway</a>
--   
--   <i>See:</i> <a>newGetRequestValidatorsResponse</a> smart constructor.
data GetRequestValidatorsResponse
GetRequestValidatorsResponse' :: Maybe [RequestValidator] -> Maybe Text -> Int -> GetRequestValidatorsResponse

-- | The current page of elements from this collection.
[$sel:items:GetRequestValidatorsResponse'] :: GetRequestValidatorsResponse -> Maybe [RequestValidator]
[$sel:position:GetRequestValidatorsResponse'] :: GetRequestValidatorsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetRequestValidatorsResponse'] :: GetRequestValidatorsResponse -> Int

-- | Create a value of <a>GetRequestValidatorsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetRequestValidatorsResponse'</a>,
--   <a>getRequestValidatorsResponse_items</a> - The current page of
--   elements from this collection.
--   
--   <a>$sel:position:GetRequestValidators'</a>,
--   <a>getRequestValidatorsResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetRequestValidatorsResponse'</a>,
--   <a>getRequestValidatorsResponse_httpStatus</a> - The response's http
--   status code.
newGetRequestValidatorsResponse :: Int -> GetRequestValidatorsResponse

-- | The current page of elements from this collection.
getRequestValidatorsResponse_items :: Lens' GetRequestValidatorsResponse (Maybe [RequestValidator])

-- | Undocumented member.
getRequestValidatorsResponse_position :: Lens' GetRequestValidatorsResponse (Maybe Text)

-- | The response's http status code.
getRequestValidatorsResponse_httpStatus :: Lens' GetRequestValidatorsResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetRequestValidators.GetRequestValidators
instance GHC.Show.Show Amazonka.APIGateway.GetRequestValidators.GetRequestValidators
instance GHC.Read.Read Amazonka.APIGateway.GetRequestValidators.GetRequestValidators
instance GHC.Classes.Eq Amazonka.APIGateway.GetRequestValidators.GetRequestValidators
instance GHC.Generics.Generic Amazonka.APIGateway.GetRequestValidators.GetRequestValidatorsResponse
instance GHC.Show.Show Amazonka.APIGateway.GetRequestValidators.GetRequestValidatorsResponse
instance GHC.Read.Read Amazonka.APIGateway.GetRequestValidators.GetRequestValidatorsResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetRequestValidators.GetRequestValidatorsResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetRequestValidators.GetRequestValidators
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetRequestValidators.GetRequestValidatorsResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetRequestValidators.GetRequestValidators
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetRequestValidators.GetRequestValidators
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetRequestValidators.GetRequestValidators
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetRequestValidators.GetRequestValidators
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetRequestValidators.GetRequestValidators
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetRequestValidators.GetRequestValidators


-- | Gets a RequestValidator of a given RestApi.
module Amazonka.APIGateway.GetRequestValidator

-- | Gets a RequestValidator of a given RestApi.
--   
--   <i>See:</i> <a>newGetRequestValidator</a> smart constructor.
data GetRequestValidator
GetRequestValidator' :: Text -> Text -> GetRequestValidator

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetRequestValidator'] :: GetRequestValidator -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the RequestValidator to be
--   retrieved.</li>
--   </ul>
[$sel:requestValidatorId:GetRequestValidator'] :: GetRequestValidator -> Text

-- | Create a value of <a>GetRequestValidator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetRequestValidator'</a>,
--   <a>getRequestValidator_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:requestValidatorId:GetRequestValidator'</a>,
--   <a>getRequestValidator_requestValidatorId</a> - [Required] The
--   identifier of the RequestValidator to be retrieved.
newGetRequestValidator :: Text -> Text -> GetRequestValidator

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getRequestValidator_restApiId :: Lens' GetRequestValidator Text

-- | <ul>
--   <li><i>Required</i> The identifier of the RequestValidator to be
--   retrieved.</li>
--   </ul>
getRequestValidator_requestValidatorId :: Lens' GetRequestValidator Text

-- | A set of validation rules for incoming Method requests.
--   
--   In OpenAPI, a RequestValidator of an API is defined by the
--   <a>x-amazon-apigateway-request-validators.requestValidator</a> object.
--   It the referenced using the
--   <a>x-amazon-apigateway-request-validator</a> property.
--   
--   <a>Enable Basic Request Validation in API Gateway</a>
--   
--   <i>See:</i> <a>newRequestValidator</a> smart constructor.
data RequestValidator
RequestValidator' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> RequestValidator

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
[$sel:validateRequestParameters:RequestValidator'] :: RequestValidator -> Maybe Bool

-- | The name of this RequestValidator
[$sel:name:RequestValidator'] :: RequestValidator -> Maybe Text

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
[$sel:validateRequestBody:RequestValidator'] :: RequestValidator -> Maybe Bool

-- | The identifier of this RequestValidator.
[$sel:id:RequestValidator'] :: RequestValidator -> Maybe Text

-- | Create a value of <a>RequestValidator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validateRequestParameters:RequestValidator'</a>,
--   <a>requestValidator_validateRequestParameters</a> - A Boolean flag to
--   indicate whether to validate request parameters (<tt>true</tt>) or not
--   (<tt>false</tt>).
--   
--   <a>$sel:name:RequestValidator'</a>, <a>requestValidator_name</a> - The
--   name of this RequestValidator
--   
--   <a>$sel:validateRequestBody:RequestValidator'</a>,
--   <a>requestValidator_validateRequestBody</a> - A Boolean flag to
--   indicate whether to validate a request body according to the
--   configured Model schema.
--   
--   <a>$sel:id:RequestValidator'</a>, <a>requestValidator_id</a> - The
--   identifier of this RequestValidator.
newRequestValidator :: RequestValidator

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
requestValidator_validateRequestParameters :: Lens' RequestValidator (Maybe Bool)

-- | The name of this RequestValidator
requestValidator_name :: Lens' RequestValidator (Maybe Text)

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
requestValidator_validateRequestBody :: Lens' RequestValidator (Maybe Bool)

-- | The identifier of this RequestValidator.
requestValidator_id :: Lens' RequestValidator (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.GetRequestValidator.GetRequestValidator
instance GHC.Show.Show Amazonka.APIGateway.GetRequestValidator.GetRequestValidator
instance GHC.Read.Read Amazonka.APIGateway.GetRequestValidator.GetRequestValidator
instance GHC.Classes.Eq Amazonka.APIGateway.GetRequestValidator.GetRequestValidator
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetRequestValidator.GetRequestValidator
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetRequestValidator.GetRequestValidator
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetRequestValidator.GetRequestValidator
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetRequestValidator.GetRequestValidator
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetRequestValidator.GetRequestValidator
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetRequestValidator.GetRequestValidator


-- | Describes existing Models defined for a RestApi resource.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetModels

-- | Request to list existing Models defined for a RestApi resource.
--   
--   <i>See:</i> <a>newGetModels</a> smart constructor.
data GetModels
GetModels' :: Maybe Int -> Maybe Text -> Text -> GetModels

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetModels'] :: GetModels -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetModels'] :: GetModels -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetModels'] :: GetModels -> Text

-- | Create a value of <a>GetModels</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetModels'</a>, <a>getModels_limit</a> - The maximum
--   number of returned results per page. The default value is 25 and the
--   maximum value is 500.
--   
--   <a>$sel:position:GetModels'</a>, <a>getModels_position</a> - The
--   current pagination position in the paged result set.
--   
--   <a>$sel:restApiId:GetModels'</a>, <a>getModels_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
newGetModels :: Text -> GetModels

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getModels_limit :: Lens' GetModels (Maybe Int)

-- | The current pagination position in the paged result set.
getModels_position :: Lens' GetModels (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getModels_restApiId :: Lens' GetModels Text

-- | Represents a collection of Model resources.
--   
--   Method, MethodResponse, <a>Models and Mappings</a>
--   
--   <i>See:</i> <a>newGetModelsResponse</a> smart constructor.
data GetModelsResponse
GetModelsResponse' :: Maybe [Model] -> Maybe Text -> Int -> GetModelsResponse

-- | The current page of elements from this collection.
[$sel:items:GetModelsResponse'] :: GetModelsResponse -> Maybe [Model]
[$sel:position:GetModelsResponse'] :: GetModelsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetModelsResponse'] :: GetModelsResponse -> Int

-- | Create a value of <a>GetModelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetModelsResponse'</a>, <a>getModelsResponse_items</a> -
--   The current page of elements from this collection.
--   
--   <a>$sel:position:GetModels'</a>, <a>getModelsResponse_position</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:GetModelsResponse'</a>,
--   <a>getModelsResponse_httpStatus</a> - The response's http status code.
newGetModelsResponse :: Int -> GetModelsResponse

-- | The current page of elements from this collection.
getModelsResponse_items :: Lens' GetModelsResponse (Maybe [Model])

-- | Undocumented member.
getModelsResponse_position :: Lens' GetModelsResponse (Maybe Text)

-- | The response's http status code.
getModelsResponse_httpStatus :: Lens' GetModelsResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetModels.GetModels
instance GHC.Show.Show Amazonka.APIGateway.GetModels.GetModels
instance GHC.Read.Read Amazonka.APIGateway.GetModels.GetModels
instance GHC.Classes.Eq Amazonka.APIGateway.GetModels.GetModels
instance GHC.Generics.Generic Amazonka.APIGateway.GetModels.GetModelsResponse
instance GHC.Show.Show Amazonka.APIGateway.GetModels.GetModelsResponse
instance GHC.Read.Read Amazonka.APIGateway.GetModels.GetModelsResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetModels.GetModelsResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetModels.GetModels
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetModels.GetModelsResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetModels.GetModels
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetModels.GetModels
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetModels.GetModels
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetModels.GetModels
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetModels.GetModels
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetModels.GetModels


-- | Generates a sample mapping template that can be used to transform a
--   payload into the structure of a model.
module Amazonka.APIGateway.GetModelTemplate

-- | Request to generate a sample mapping template used to transform the
--   payload.
--   
--   <i>See:</i> <a>newGetModelTemplate</a> smart constructor.
data GetModelTemplate
GetModelTemplate' :: Text -> Text -> GetModelTemplate

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetModelTemplate'] :: GetModelTemplate -> Text

-- | <ul>
--   <li><i>Required</i> The name of the model for which to generate a
--   template.</li>
--   </ul>
[$sel:modelName:GetModelTemplate'] :: GetModelTemplate -> Text

-- | Create a value of <a>GetModelTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetModelTemplate'</a>,
--   <a>getModelTemplate_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:modelName:GetModelTemplate'</a>,
--   <a>getModelTemplate_modelName</a> - [Required] The name of the model
--   for which to generate a template.
newGetModelTemplate :: Text -> Text -> GetModelTemplate

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getModelTemplate_restApiId :: Lens' GetModelTemplate Text

-- | <ul>
--   <li><i>Required</i> The name of the model for which to generate a
--   template.</li>
--   </ul>
getModelTemplate_modelName :: Lens' GetModelTemplate Text

-- | Represents a mapping template used to transform a payload.
--   
--   <a>Mapping Templates</a>
--   
--   <i>See:</i> <a>newGetModelTemplateResponse</a> smart constructor.
data GetModelTemplateResponse
GetModelTemplateResponse' :: Maybe Text -> Int -> GetModelTemplateResponse

-- | The Apache <a>Velocity Template Language (VTL)</a> template content
--   used for the template resource.
[$sel:value:GetModelTemplateResponse'] :: GetModelTemplateResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetModelTemplateResponse'] :: GetModelTemplateResponse -> Int

-- | Create a value of <a>GetModelTemplateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:GetModelTemplateResponse'</a>,
--   <a>getModelTemplateResponse_value</a> - The Apache <a>Velocity
--   Template Language (VTL)</a> template content used for the template
--   resource.
--   
--   <a>$sel:httpStatus:GetModelTemplateResponse'</a>,
--   <a>getModelTemplateResponse_httpStatus</a> - The response's http
--   status code.
newGetModelTemplateResponse :: Int -> GetModelTemplateResponse

-- | The Apache <a>Velocity Template Language (VTL)</a> template content
--   used for the template resource.
getModelTemplateResponse_value :: Lens' GetModelTemplateResponse (Maybe Text)

-- | The response's http status code.
getModelTemplateResponse_httpStatus :: Lens' GetModelTemplateResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetModelTemplate.GetModelTemplate
instance GHC.Show.Show Amazonka.APIGateway.GetModelTemplate.GetModelTemplate
instance GHC.Read.Read Amazonka.APIGateway.GetModelTemplate.GetModelTemplate
instance GHC.Classes.Eq Amazonka.APIGateway.GetModelTemplate.GetModelTemplate
instance GHC.Generics.Generic Amazonka.APIGateway.GetModelTemplate.GetModelTemplateResponse
instance GHC.Show.Show Amazonka.APIGateway.GetModelTemplate.GetModelTemplateResponse
instance GHC.Read.Read Amazonka.APIGateway.GetModelTemplate.GetModelTemplateResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetModelTemplate.GetModelTemplateResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetModelTemplate.GetModelTemplate
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetModelTemplate.GetModelTemplateResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetModelTemplate.GetModelTemplate
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetModelTemplate.GetModelTemplate
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetModelTemplate.GetModelTemplate
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetModelTemplate.GetModelTemplate
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetModelTemplate.GetModelTemplate


-- | Describes an existing model defined for a RestApi resource.
module Amazonka.APIGateway.GetModel

-- | Request to list information about a model in an existing RestApi
--   resource.
--   
--   <i>See:</i> <a>newGetModel</a> smart constructor.
data GetModel
GetModel' :: Maybe Bool -> Text -> Text -> GetModel

-- | A query parameter of a Boolean value to resolve (<tt>true</tt>) all
--   external model references and returns a flattened model schema or not
--   (<tt>false</tt>) The default is <tt>false</tt>.
[$sel:flatten:GetModel'] :: GetModel -> Maybe Bool

-- | <ul>
--   <li><i>Required</i> The RestApi identifier under which the Model
--   exists.</li>
--   </ul>
[$sel:restApiId:GetModel'] :: GetModel -> Text

-- | <ul>
--   <li><i>Required</i> The name of the model as an identifier.</li>
--   </ul>
[$sel:modelName:GetModel'] :: GetModel -> Text

-- | Create a value of <a>GetModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flatten:GetModel'</a>, <a>getModel_flatten</a> - A query
--   parameter of a Boolean value to resolve (<tt>true</tt>) all external
--   model references and returns a flattened model schema or not
--   (<tt>false</tt>) The default is <tt>false</tt>.
--   
--   <a>$sel:restApiId:GetModel'</a>, <a>getModel_restApiId</a> -
--   [Required] The RestApi identifier under which the Model exists.
--   
--   <a>$sel:modelName:GetModel'</a>, <a>getModel_modelName</a> -
--   [Required] The name of the model as an identifier.
newGetModel :: Text -> Text -> GetModel

-- | A query parameter of a Boolean value to resolve (<tt>true</tt>) all
--   external model references and returns a flattened model schema or not
--   (<tt>false</tt>) The default is <tt>false</tt>.
getModel_flatten :: Lens' GetModel (Maybe Bool)

-- | <ul>
--   <li><i>Required</i> The RestApi identifier under which the Model
--   exists.</li>
--   </ul>
getModel_restApiId :: Lens' GetModel Text

-- | <ul>
--   <li><i>Required</i> The name of the model as an identifier.</li>
--   </ul>
getModel_modelName :: Lens' GetModel Text

-- | Represents the data structure of a method's request or response
--   payload.
--   
--   A request model defines the data structure of the client-supplied
--   request payload. A response model defines the data structure of the
--   response payload returned by the back end. Although not required,
--   models are useful for mapping payloads between the front end and back
--   end.
--   
--   A model is used for generating an API's SDK, validating the input
--   request body, and creating a skeletal mapping template.
--   
--   Method, MethodResponse, <a>Models and Mappings</a>
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Model

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
[$sel:schema:Model'] :: Model -> Maybe Text

-- | The name of the model. Must be an alphanumeric string.
[$sel:name:Model'] :: Model -> Maybe Text

-- | The identifier for the model resource.
[$sel:id:Model'] :: Model -> Maybe Text

-- | The description of the model.
[$sel:description:Model'] :: Model -> Maybe Text

-- | The content-type for the model.
[$sel:contentType:Model'] :: Model -> Maybe Text

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:Model'</a>, <a>model_schema</a> - The schema for the
--   model. For <tt>application/json</tt> models, this should be <a>JSON
--   schema draft 4</a> model. Do not include "\*/" characters in the
--   description of any properties because such "\*/" characters may be
--   interpreted as the closing marker for comments in some languages, such
--   as Java or JavaScript, causing the installation of your API's SDK
--   generated by API Gateway to fail.
--   
--   <a>$sel:name:Model'</a>, <a>model_name</a> - The name of the model.
--   Must be an alphanumeric string.
--   
--   <a>$sel:id:Model'</a>, <a>model_id</a> - The identifier for the model
--   resource.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The
--   description of the model.
--   
--   <a>$sel:contentType:Model'</a>, <a>model_contentType</a> - The
--   content-type for the model.
newModel :: Model

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
model_schema :: Lens' Model (Maybe Text)

-- | The name of the model. Must be an alphanumeric string.
model_name :: Lens' Model (Maybe Text)

-- | The identifier for the model resource.
model_id :: Lens' Model (Maybe Text)

-- | The description of the model.
model_description :: Lens' Model (Maybe Text)

-- | The content-type for the model.
model_contentType :: Lens' Model (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.GetModel.GetModel
instance GHC.Show.Show Amazonka.APIGateway.GetModel.GetModel
instance GHC.Read.Read Amazonka.APIGateway.GetModel.GetModel
instance GHC.Classes.Eq Amazonka.APIGateway.GetModel.GetModel
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetModel.GetModel
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetModel.GetModel
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetModel.GetModel
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetModel.GetModel
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetModel.GetModel
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetModel.GetModel


-- | Describes a MethodResponse resource.
module Amazonka.APIGateway.GetMethodResponse

-- | Request to describe a MethodResponse resource.
--   
--   <i>See:</i> <a>newGetMethodResponse</a> smart constructor.
data GetMethodResponse
GetMethodResponse' :: Text -> Text -> Text -> Text -> GetMethodResponse

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetMethodResponse'] :: GetMethodResponse -> Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the MethodResponse
--   resource.</li>
--   </ul>
[$sel:resourceId:GetMethodResponse'] :: GetMethodResponse -> Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
[$sel:httpMethod:GetMethodResponse'] :: GetMethodResponse -> Text

-- | <ul>
--   <li><i>Required</i> The status code for the MethodResponse
--   resource.</li>
--   </ul>
[$sel:statusCode:GetMethodResponse'] :: GetMethodResponse -> Text

-- | Create a value of <a>GetMethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetMethodResponse'</a>,
--   <a>getMethodResponse_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:resourceId:GetMethodResponse'</a>,
--   <a>getMethodResponse_resourceId</a> - [Required] The Resource
--   identifier for the MethodResponse resource.
--   
--   <a>$sel:httpMethod:GetMethodResponse'</a>,
--   <a>getMethodResponse_httpMethod</a> - [Required] The HTTP verb of the
--   Method resource.
--   
--   <a>$sel:statusCode:GetMethodResponse'</a>,
--   <a>getMethodResponse_statusCode</a> - [Required] The status code for
--   the MethodResponse resource.
newGetMethodResponse :: Text -> Text -> Text -> Text -> GetMethodResponse

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getMethodResponse_restApiId :: Lens' GetMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the MethodResponse
--   resource.</li>
--   </ul>
getMethodResponse_resourceId :: Lens' GetMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
getMethodResponse_httpMethod :: Lens' GetMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The status code for the MethodResponse
--   resource.</li>
--   </ul>
getMethodResponse_statusCode :: Lens' GetMethodResponse Text

-- | Represents a method response of a given HTTP status code returned to
--   the client. The method response is passed from the back end through
--   the associated integration response that can be transformed using a
--   mapping template.
--   
--   <h4>Example: A <b>MethodResponse</b> instance of an API</h4>
--   
--   <h5>Request</h5>
--   
--   The example request retrieves a <b>MethodResponse</b> of the 200
--   status code.
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T222952Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" }
--   </pre>
--   
--   Method, IntegrationResponse, Integration <a>Creating an API</a>
--   
--   <i>See:</i> <a>newMethodResponse</a> smart constructor.
data MethodResponse
MethodResponse' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Bool) -> MethodResponse

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
[$sel:responseModels:MethodResponse'] :: MethodResponse -> Maybe (HashMap Text Text)

-- | The method response's status code.
[$sel:statusCode:MethodResponse'] :: MethodResponse -> Maybe Text

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
[$sel:responseParameters:MethodResponse'] :: MethodResponse -> Maybe (HashMap Text Bool)

-- | Create a value of <a>MethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseModels:MethodResponse'</a>,
--   <a>methodResponse_responseModels</a> - Specifies the Model resources
--   used for the response's content-type. Response models are represented
--   as a key/value map, with a content-type as the key and a Model name as
--   the value.
--   
--   <a>$sel:statusCode:MethodResponse'</a>,
--   <a>methodResponse_statusCode</a> - The method response's status code.
--   
--   <a>$sel:responseParameters:MethodResponse'</a>,
--   <a>methodResponse_responseParameters</a> - A key-value map specifying
--   required or optional response parameters that API Gateway can send
--   back to the caller. A key defines a method response header and the
--   value specifies whether the associated method response header is
--   required or not. The expression of the key must match the pattern
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. API Gateway passes certain integration
--   response data to the method response headers specified here according
--   to the mapping you prescribe in the API's IntegrationResponse. The
--   integration response data that can be mapped include an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
newMethodResponse :: MethodResponse

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
methodResponse_responseModels :: Lens' MethodResponse (Maybe (HashMap Text Text))

-- | The method response's status code.
methodResponse_statusCode :: Lens' MethodResponse (Maybe Text)

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
methodResponse_responseParameters :: Lens' MethodResponse (Maybe (HashMap Text Bool))
instance GHC.Generics.Generic Amazonka.APIGateway.GetMethodResponse.GetMethodResponse
instance GHC.Show.Show Amazonka.APIGateway.GetMethodResponse.GetMethodResponse
instance GHC.Read.Read Amazonka.APIGateway.GetMethodResponse.GetMethodResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetMethodResponse.GetMethodResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetMethodResponse.GetMethodResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetMethodResponse.GetMethodResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetMethodResponse.GetMethodResponse
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetMethodResponse.GetMethodResponse
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetMethodResponse.GetMethodResponse
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetMethodResponse.GetMethodResponse


-- | Describe an existing Method resource.
module Amazonka.APIGateway.GetMethod

-- | Request to describe an existing Method resource.
--   
--   <i>See:</i> <a>newGetMethod</a> smart constructor.
data GetMethod
GetMethod' :: Text -> Text -> Text -> GetMethod

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetMethod'] :: GetMethod -> Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the Method
--   resource.</li>
--   </ul>
[$sel:resourceId:GetMethod'] :: GetMethod -> Text

-- | <ul>
--   <li><i>Required</i> Specifies the method request's HTTP method
--   type.</li>
--   </ul>
[$sel:httpMethod:GetMethod'] :: GetMethod -> Text

-- | Create a value of <a>GetMethod</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetMethod'</a>, <a>getMethod_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:GetMethod'</a>, <a>getMethod_resourceId</a> -
--   [Required] The Resource identifier for the Method resource.
--   
--   <a>$sel:httpMethod:GetMethod'</a>, <a>getMethod_httpMethod</a> -
--   [Required] Specifies the method request's HTTP method type.
newGetMethod :: Text -> Text -> Text -> GetMethod

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getMethod_restApiId :: Lens' GetMethod Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the Method
--   resource.</li>
--   </ul>
getMethod_resourceId :: Lens' GetMethod Text

-- | <ul>
--   <li><i>Required</i> Specifies the method request's HTTP method
--   type.</li>
--   </ul>
getMethod_httpMethod :: Lens' GetMethod Text

-- | Represents a client-facing interface by which the client calls the API
--   to access back-end resources. A <b>Method</b> resource is integrated
--   with an Integration resource. Both consist of a request and one or
--   more responses. The method request takes the client input that is
--   passed to the back end through the integration request. A method
--   response returns the output from the back end to the client through an
--   integration response. A method request is embodied in a <b>Method</b>
--   resource, whereas an integration request is embodied in an Integration
--   resource. On the other hand, a method response is represented by a
--   MethodResponse resource, whereas an integration response is
--   represented by an IntegrationResponse resource.
--   
--   <h4>Example: Retrive the GET method on a specified resource</h4>
--   
--   <h5>Request</h5>
--   
--   The following example request retrieves the information about the GET
--   method on an API resource (<tt>3kzxbg5sa2</tt>) of an API
--   (<tt>fugvjdxtri</tt>).
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T210259Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": true, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\")" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   In the example above, the response template for the <tt>200 OK</tt>
--   response maps the JSON output from the <tt>ListStreams</tt> action in
--   the back end to an XML output. The mapping template is URL-encoded as
--   <tt>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</tt>
--   and the output is decoded using the <a>$util.urlDecode()</a> helper
--   function.
--   
--   MethodResponse, Integration, IntegrationResponse, Resource, <a>Set up
--   an API's method</a>
--   
--   <i>See:</i> <a>newMethod</a> smart constructor.
data Method
Method' :: Maybe (HashMap Text MethodResponse) -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Integration -> Method

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
[$sel:methodResponses:Method'] :: Method -> Maybe (HashMap Text MethodResponse)

-- | The method's HTTP verb.
[$sel:httpMethod:Method'] :: Method -> Maybe Text

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
[$sel:authorizationScopes:Method'] :: Method -> Maybe [Text]

-- | The identifier of a RequestValidator for request validation.
[$sel:requestValidatorId:Method'] :: Method -> Maybe Text

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
[$sel:requestModels:Method'] :: Method -> Maybe (HashMap Text Text)

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
[$sel:requestParameters:Method'] :: Method -> Maybe (HashMap Text Bool)

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
[$sel:authorizerId:Method'] :: Method -> Maybe Text

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
[$sel:operationName:Method'] :: Method -> Maybe Text

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
[$sel:authorizationType:Method'] :: Method -> Maybe Text

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
[$sel:apiKeyRequired:Method'] :: Method -> Maybe Bool

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
[$sel:methodIntegration:Method'] :: Method -> Maybe Integration

-- | Create a value of <a>Method</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodResponses:Method'</a>, <a>method_methodResponses</a> -
--   Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
--   
--   <a>$sel:httpMethod:Method'</a>, <a>method_httpMethod</a> - The
--   method's HTTP verb.
--   
--   <a>$sel:authorizationScopes:Method'</a>,
--   <a>method_authorizationScopes</a> - A list of authorization scopes
--   configured on the method. The scopes are used with a
--   <tt>COGNITO_USER_POOLS</tt> authorizer to authorize the method
--   invocation. The authorization works by matching the method scopes
--   against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:requestValidatorId:Method'</a>,
--   <a>method_requestValidatorId</a> - The identifier of a
--   RequestValidator for request validation.
--   
--   <a>$sel:requestModels:Method'</a>, <a>method_requestModels</a> - A
--   key-value map specifying data schemas, represented by Model resources,
--   (as the mapped value) of the request payloads of given content types
--   (as the mapping key).
--   
--   <a>$sel:requestParameters:Method'</a>, <a>method_requestParameters</a>
--   - A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
--   
--   <a>$sel:authorizerId:Method'</a>, <a>method_authorizerId</a> - The
--   identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
--   
--   <a>$sel:operationName:Method'</a>, <a>method_operationName</a> - A
--   human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
--   
--   <a>$sel:authorizationType:Method'</a>, <a>method_authorizationType</a>
--   - The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
--   
--   <a>$sel:apiKeyRequired:Method'</a>, <a>method_apiKeyRequired</a> - A
--   boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
--   
--   <a>$sel:methodIntegration:Method'</a>, <a>method_methodIntegration</a>
--   - Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
newMethod :: Method

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodResponses :: Lens' Method (Maybe (HashMap Text MethodResponse))

-- | The method's HTTP verb.
method_httpMethod :: Lens' Method (Maybe Text)

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
method_authorizationScopes :: Lens' Method (Maybe [Text])

-- | The identifier of a RequestValidator for request validation.
method_requestValidatorId :: Lens' Method (Maybe Text)

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
method_requestModels :: Lens' Method (Maybe (HashMap Text Text))

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
method_requestParameters :: Lens' Method (Maybe (HashMap Text Bool))

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
method_authorizerId :: Lens' Method (Maybe Text)

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
method_operationName :: Lens' Method (Maybe Text)

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
method_authorizationType :: Lens' Method (Maybe Text)

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
method_apiKeyRequired :: Lens' Method (Maybe Bool)

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodIntegration :: Lens' Method (Maybe Integration)
instance GHC.Generics.Generic Amazonka.APIGateway.GetMethod.GetMethod
instance GHC.Show.Show Amazonka.APIGateway.GetMethod.GetMethod
instance GHC.Read.Read Amazonka.APIGateway.GetMethod.GetMethod
instance GHC.Classes.Eq Amazonka.APIGateway.GetMethod.GetMethod
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetMethod.GetMethod
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetMethod.GetMethod
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetMethod.GetMethod
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetMethod.GetMethod
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetMethod.GetMethod
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetMethod.GetMethod


-- | Represents a get integration response.
module Amazonka.APIGateway.GetIntegrationResponse

-- | Represents a get integration response request.
--   
--   <i>See:</i> <a>newGetIntegrationResponse</a> smart constructor.
data GetIntegrationResponse
GetIntegrationResponse' :: Text -> Text -> Text -> Text -> GetIntegrationResponse

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetIntegrationResponse'] :: GetIntegrationResponse -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration response request's
--   resource identifier.</li>
--   </ul>
[$sel:resourceId:GetIntegrationResponse'] :: GetIntegrationResponse -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration response request's
--   HTTP method.</li>
--   </ul>
[$sel:httpMethod:GetIntegrationResponse'] :: GetIntegrationResponse -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration response request's
--   status code.</li>
--   </ul>
[$sel:statusCode:GetIntegrationResponse'] :: GetIntegrationResponse -> Text

-- | Create a value of <a>GetIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_resourceId</a> - [Required] Specifies a get
--   integration response request's resource identifier.
--   
--   <a>$sel:httpMethod:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_httpMethod</a> - [Required] Specifies a get
--   integration response request's HTTP method.
--   
--   <a>$sel:statusCode:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_statusCode</a> - [Required] Specifies a get
--   integration response request's status code.
newGetIntegrationResponse :: Text -> Text -> Text -> Text -> GetIntegrationResponse

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getIntegrationResponse_restApiId :: Lens' GetIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration response request's
--   resource identifier.</li>
--   </ul>
getIntegrationResponse_resourceId :: Lens' GetIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration response request's
--   HTTP method.</li>
--   </ul>
getIntegrationResponse_httpMethod :: Lens' GetIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration response request's
--   status code.</li>
--   </ul>
getIntegrationResponse_statusCode :: Lens' GetIntegrationResponse Text

-- | Represents an integration response. The status code must map to an
--   existing MethodResponse, and parameters and templates can be used to
--   transform the back-end response.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegrationResponse</a> smart constructor.
data IntegrationResponse
IntegrationResponse' :: Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> IntegrationResponse

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
[$sel:contentHandling:IntegrationResponse'] :: IntegrationResponse -> Maybe ContentHandlingStrategy

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
[$sel:responseTemplates:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
[$sel:selectionPattern:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
[$sel:statusCode:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
[$sel:responseParameters:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | Create a value of <a>IntegrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentHandling:IntegrationResponse'</a>,
--   <a>integrationResponse_contentHandling</a> - Specifies how to handle
--   response payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
--   
--   <a>$sel:responseTemplates:IntegrationResponse'</a>,
--   <a>integrationResponse_responseTemplates</a> - Specifies the templates
--   used to transform the integration response body. Response templates
--   are represented as a key/value map, with a content-type as the key and
--   a template as the value.
--   
--   <a>$sel:selectionPattern:IntegrationResponse'</a>,
--   <a>integrationResponse_selectionPattern</a> - Specifies the regular
--   expression (regex) pattern used to choose an integration response
--   based on the response from the back end. For example, if the success
--   response returns nothing and the error response returns some string,
--   you could use the <tt>.+</tt> regex to match error response. However,
--   make sure that the error response does not contain any newline
--   (<tt>\n</tt>) character in such cases. If the back end is an AWS
--   Lambda function, the AWS Lambda function error header is matched. For
--   all other HTTP and AWS back ends, the HTTP status code is matched.
--   
--   <a>$sel:statusCode:IntegrationResponse'</a>,
--   <a>integrationResponse_statusCode</a> - Specifies the status code that
--   is used to map the integration response to an existing MethodResponse.
--   
--   <a>$sel:responseParameters:IntegrationResponse'</a>,
--   <a>integrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the back end. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of <tt>method.response.header.{name}</tt>, where <tt>name</tt>
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
newIntegrationResponse :: IntegrationResponse

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
integrationResponse_contentHandling :: Lens' IntegrationResponse (Maybe ContentHandlingStrategy)

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
integrationResponse_responseTemplates :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
integrationResponse_selectionPattern :: Lens' IntegrationResponse (Maybe Text)

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
integrationResponse_statusCode :: Lens' IntegrationResponse (Maybe Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
integrationResponse_responseParameters :: Lens' IntegrationResponse (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.GetIntegrationResponse.GetIntegrationResponse
instance GHC.Show.Show Amazonka.APIGateway.GetIntegrationResponse.GetIntegrationResponse
instance GHC.Read.Read Amazonka.APIGateway.GetIntegrationResponse.GetIntegrationResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetIntegrationResponse.GetIntegrationResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetIntegrationResponse.GetIntegrationResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetIntegrationResponse.GetIntegrationResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetIntegrationResponse.GetIntegrationResponse
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetIntegrationResponse.GetIntegrationResponse
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetIntegrationResponse.GetIntegrationResponse
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetIntegrationResponse.GetIntegrationResponse


-- | Get the integration settings.
module Amazonka.APIGateway.GetIntegration

-- | Represents a request to get the integration configuration.
--   
--   <i>See:</i> <a>newGetIntegration</a> smart constructor.
data GetIntegration
GetIntegration' :: Text -> Text -> Text -> GetIntegration

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetIntegration'] :: GetIntegration -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration request's resource
--   identifier</li>
--   </ul>
[$sel:resourceId:GetIntegration'] :: GetIntegration -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration request's HTTP
--   method.</li>
--   </ul>
[$sel:httpMethod:GetIntegration'] :: GetIntegration -> Text

-- | Create a value of <a>GetIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetIntegration'</a>, <a>getIntegration_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:GetIntegration'</a>,
--   <a>getIntegration_resourceId</a> - [Required] Specifies a get
--   integration request's resource identifier
--   
--   <a>$sel:httpMethod:GetIntegration'</a>,
--   <a>getIntegration_httpMethod</a> - [Required] Specifies a get
--   integration request's HTTP method.
newGetIntegration :: Text -> Text -> Text -> GetIntegration

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getIntegration_restApiId :: Lens' GetIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration request's resource
--   identifier</li>
--   </ul>
getIntegration_resourceId :: Lens' GetIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration request's HTTP
--   method.</li>
--   </ul>
getIntegration_httpMethod :: Lens' GetIntegration Text

-- | Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.
--   
--   In the API Gateway console, the built-in Lambda integration is an AWS
--   integration.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegration</a> smart constructor.
data Integration
Integration' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe Text -> Maybe (HashMap Text IntegrationResponse) -> Maybe TlsConfig -> Maybe Text -> Maybe Int -> Maybe IntegrationType -> Maybe ConnectionType -> Maybe [Text] -> Integration

-- | Specifies the integration's HTTP method type.
[$sel:httpMethod:Integration'] :: Integration -> Maybe Text

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
[$sel:requestTemplates:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
[$sel:credentials:Integration'] :: Integration -> Maybe Text

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
[$sel:connectionId:Integration'] :: Integration -> Maybe Text

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
[$sel:requestParameters:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
[$sel:contentHandling:Integration'] :: Integration -> Maybe ContentHandlingStrategy

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
[$sel:passthroughBehavior:Integration'] :: Integration -> Maybe Text

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
[$sel:uri:Integration'] :: Integration -> Maybe Text

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
[$sel:integrationResponses:Integration'] :: Integration -> Maybe (HashMap Text IntegrationResponse)

-- | Specifies the TLS configuration for an integration.
[$sel:tlsConfig:Integration'] :: Integration -> Maybe TlsConfig

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
[$sel:cacheNamespace:Integration'] :: Integration -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
[$sel:timeoutInMillis:Integration'] :: Integration -> Maybe Int

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
[$sel:type':Integration'] :: Integration -> Maybe IntegrationType

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
[$sel:connectionType:Integration'] :: Integration -> Maybe ConnectionType

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
[$sel:cacheKeyParameters:Integration'] :: Integration -> Maybe [Text]

-- | Create a value of <a>Integration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:Integration'</a>, <a>integration_httpMethod</a> -
--   Specifies the integration's HTTP method type.
--   
--   <a>$sel:requestTemplates:Integration'</a>,
--   <a>integration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   
--   <a>$sel:credentials:Integration'</a>, <a>integration_credentials</a> -
--   Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
--   
--   <a>$sel:connectionId:Integration'</a>, <a>integration_connectionId</a>
--   - The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
--   
--   <a>$sel:requestParameters:Integration'</a>,
--   <a>integration_requestParameters</a> - A key-value map specifying
--   request parameters that are passed from the method request to the back
--   end. The key is an integration request parameter name and the
--   associated value is a method request parameter value or static value
--   that must be enclosed within single quotes and pre-encoded as required
--   by the back end. The method request parameter value must match the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> must be a valid and unique method
--   request parameter name.
--   
--   <a>$sel:contentHandling:Integration'</a>,
--   <a>integration_contentHandling</a> - Specifies how to handle request
--   payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
--   
--   <a>$sel:passthroughBehavior:Integration'</a>,
--   <a>integration_passthroughBehavior</a> - Specifies how the method
--   request body of an unmapped content type will be passed through the
--   integration request to the back end without transformation. A content
--   type is unmapped if no mapping template is defined in the integration
--   or the content type does not match any of the mapped content types, as
--   specified in <tt>requestTemplates</tt>. The valid value is one of the
--   following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
--   
--   <a>$sel:uri:Integration'</a>, <a>integration_uri</a> - Specifies
--   Uniform Resource Identifier (URI) of the integration endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
--   
--   <a>$sel:integrationResponses:Integration'</a>,
--   <a>integration_integrationResponses</a> - Specifies the integration's
--   responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
--   
--   <a>$sel:tlsConfig:Integration'</a>, <a>integration_tlsConfig</a> -
--   Specifies the TLS configuration for an integration.
--   
--   <a>$sel:cacheNamespace:Integration'</a>,
--   <a>integration_cacheNamespace</a> - Specifies a group of related
--   cached parameters. By default, API Gateway uses the resource ID as the
--   <tt>cacheNamespace</tt>. You can specify the same
--   <tt>cacheNamespace</tt> across resources to return the same cached
--   data for requests to different resources.
--   
--   <a>$sel:timeoutInMillis:Integration'</a>,
--   <a>integration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds. The default value is 29,000 milliseconds or 29
--   seconds.
--   
--   <a>$sel:type':Integration'</a>, <a>integration_type</a> - Specifies an
--   API method integration type. The valid value is one of the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
--   
--   <a>$sel:connectionType:Integration'</a>,
--   <a>integration_connectionType</a> - The type of the network connection
--   to the integration endpoint. The valid value is <tt>INTERNET</tt> for
--   connections through the public routable internet or <tt>VPC_LINK</tt>
--   for private connections between API Gateway and a network load
--   balancer in a VPC. The default value is <tt>INTERNET</tt>.
--   
--   <a>$sel:cacheKeyParameters:Integration'</a>,
--   <a>integration_cacheKeyParameters</a> - A list of request parameters
--   whose values API Gateway caches. To be valid values for
--   <tt>cacheKeyParameters</tt>, these parameters must also be specified
--   for Method <tt>requestParameters</tt>.
newIntegration :: Integration

-- | Specifies the integration's HTTP method type.
integration_httpMethod :: Lens' Integration (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
integration_requestTemplates :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
integration_credentials :: Lens' Integration (Maybe Text)

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
integration_connectionId :: Lens' Integration (Maybe Text)

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
integration_requestParameters :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
integration_contentHandling :: Lens' Integration (Maybe ContentHandlingStrategy)

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
integration_passthroughBehavior :: Lens' Integration (Maybe Text)

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
integration_uri :: Lens' Integration (Maybe Text)

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
integration_integrationResponses :: Lens' Integration (Maybe (HashMap Text IntegrationResponse))

-- | Specifies the TLS configuration for an integration.
integration_tlsConfig :: Lens' Integration (Maybe TlsConfig)

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
integration_cacheNamespace :: Lens' Integration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
integration_timeoutInMillis :: Lens' Integration (Maybe Int)

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
integration_type :: Lens' Integration (Maybe IntegrationType)

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
integration_connectionType :: Lens' Integration (Maybe ConnectionType)

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
integration_cacheKeyParameters :: Lens' Integration (Maybe [Text])
instance GHC.Generics.Generic Amazonka.APIGateway.GetIntegration.GetIntegration
instance GHC.Show.Show Amazonka.APIGateway.GetIntegration.GetIntegration
instance GHC.Read.Read Amazonka.APIGateway.GetIntegration.GetIntegration
instance GHC.Classes.Eq Amazonka.APIGateway.GetIntegration.GetIntegration
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetIntegration.GetIntegration
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetIntegration.GetIntegration
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetIntegration.GetIntegration
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetIntegration.GetIntegration
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetIntegration.GetIntegration
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetIntegration.GetIntegration


-- | Gets the GatewayResponses collection on the given RestApi. If an API
--   developer has not added any definitions for gateway responses, the
--   result will be the API Gateway-generated default GatewayResponses
--   collection for the supported response types.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetGatewayResponses

-- | Gets the GatewayResponses collection on the given RestApi. If an API
--   developer has not added any definitions for gateway responses, the
--   result will be the API Gateway-generated default GatewayResponses
--   collection for the supported response types.
--   
--   <i>See:</i> <a>newGetGatewayResponses</a> smart constructor.
data GetGatewayResponses
GetGatewayResponses' :: Maybe Int -> Maybe Text -> Text -> GetGatewayResponses

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500. The GatewayResponses collection does
--   not support pagination and the limit does not apply here.
[$sel:limit:GetGatewayResponses'] :: GetGatewayResponses -> Maybe Int

-- | The current pagination position in the paged result set. The
--   GatewayResponse collection does not support pagination and the
--   position does not apply here.
[$sel:position:GetGatewayResponses'] :: GetGatewayResponses -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetGatewayResponses'] :: GetGatewayResponses -> Text

-- | Create a value of <a>GetGatewayResponses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetGatewayResponses'</a>,
--   <a>getGatewayResponses_limit</a> - The maximum number of returned
--   results per page. The default value is 25 and the maximum value is
--   500. The GatewayResponses collection does not support pagination and
--   the limit does not apply here.
--   
--   <a>$sel:position:GetGatewayResponses'</a>,
--   <a>getGatewayResponses_position</a> - The current pagination position
--   in the paged result set. The GatewayResponse collection does not
--   support pagination and the position does not apply here.
--   
--   <a>$sel:restApiId:GetGatewayResponses'</a>,
--   <a>getGatewayResponses_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
newGetGatewayResponses :: Text -> GetGatewayResponses

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500. The GatewayResponses collection does
--   not support pagination and the limit does not apply here.
getGatewayResponses_limit :: Lens' GetGatewayResponses (Maybe Int)

-- | The current pagination position in the paged result set. The
--   GatewayResponse collection does not support pagination and the
--   position does not apply here.
getGatewayResponses_position :: Lens' GetGatewayResponses (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getGatewayResponses_restApiId :: Lens' GetGatewayResponses Text

-- | The collection of the GatewayResponse instances of a RestApi as a
--   <tt>responseType</tt>-to-GatewayResponse object map of key-value
--   pairs. As such, pagination is not supported for querying this
--   collection.
--   
--   For more information about valid gateway response types, see
--   <a>Gateway Response Types Supported by API Gateway</a>
--   
--   <h4>Example: Get the collection of gateway responses of an API</h4>
--   
--   <h5>Request</h5>
--   
--   This example request shows how to retrieve the GatewayResponses
--   collection from an API.
--   
--   <pre>
--   GET /restapis/o81lxisefl/gatewayresponses HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T220604Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=59b42fe54a76a5de8adf2c67baa6d39206f8e9ad49a1d77ccc6a5da3103a398a Cache-Control: no-cache Postman-Token: 5637af27-dc29-fc5c-9dfe-0645d52cb515
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful operation returns the <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses" }, "first": { "href": "/restapis/o81lxisefl/gatewayresponses" }, "gatewayresponse:by-type": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "item": [ { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_FAILURE" }, { "href": "/restapis/o81lxisefl/gatewayresponses/RESOURCE_NOT_FOUND" }, { "href": "/restapis/o81lxisefl/gatewayresponses/REQUEST_TOO_LARGE" }, { "href": "/restapis/o81lxisefl/gatewayresponses/THROTTLED" }, { "href": "/restapis/o81lxisefl/gatewayresponses/UNSUPPORTED_MEDIA_TYPE" }, { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_CONFIGURATION_ERROR" }, { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_5XX" }, { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_4XX" }, { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_PARAMETERS" }, { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_BODY" }, { "href": "/restapis/o81lxisefl/gatewayresponses/EXPIRED_TOKEN" }, { "href": "/restapis/o81lxisefl/gatewayresponses/ACCESS_DENIED" }, { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_API_KEY" }, { "href": "/restapis/o81lxisefl/gatewayresponses/UNAUTHORIZED" }, { "href": "/restapis/o81lxisefl/gatewayresponses/API_CONFIGURATION_ERROR" }, { "href": "/restapis/o81lxisefl/gatewayresponses/QUOTA_EXCEEDED" }, { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_TIMEOUT" }, { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_SIGNATURE" }, { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_FAILURE" } ] }, "_embedded": { "item": [ { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_FAILURE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_FAILURE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "INTEGRATION_FAILURE", "statusCode": "504" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/RESOURCE_NOT_FOUND" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/RESOURCE_NOT_FOUND" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "RESOURCE_NOT_FOUND", "statusCode": "404" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/REQUEST_TOO_LARGE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/REQUEST_TOO_LARGE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "REQUEST_TOO_LARGE", "statusCode": "413" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/THROTTLED" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/THROTTLED" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "THROTTLED", "statusCode": "429" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/UNSUPPORTED_MEDIA_TYPE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/UNSUPPORTED_MEDIA_TYPE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "UNSUPPORTED_MEDIA_TYPE", "statusCode": "415" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_CONFIGURATION_ERROR" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_CONFIGURATION_ERROR" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "AUTHORIZER_CONFIGURATION_ERROR", "statusCode": "500" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_5XX" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_5XX" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "DEFAULT_5XX" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_4XX" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_4XX" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "DEFAULT_4XX" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_PARAMETERS" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_PARAMETERS" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "BAD_REQUEST_PARAMETERS", "statusCode": "400" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_BODY" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_BODY" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "BAD_REQUEST_BODY", "statusCode": "400" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/EXPIRED_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/EXPIRED_TOKEN" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "EXPIRED_TOKEN", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/ACCESS_DENIED" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/ACCESS_DENIED" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "ACCESS_DENIED", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_API_KEY" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_API_KEY" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "INVALID_API_KEY", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/UNAUTHORIZED" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/UNAUTHORIZED" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "UNAUTHORIZED", "statusCode": "401" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/API_CONFIGURATION_ERROR" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/API_CONFIGURATION_ERROR" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "API_CONFIGURATION_ERROR", "statusCode": "500" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/QUOTA_EXCEEDED" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/QUOTA_EXCEEDED" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "QUOTA_EXCEEDED", "statusCode": "429" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_TIMEOUT" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_TIMEOUT" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "INTEGRATION_TIMEOUT", "statusCode": "504" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_SIGNATURE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_SIGNATURE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "INVALID_SIGNATURE", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_FAILURE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_FAILURE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "AUTHORIZER_FAILURE", "statusCode": "500" } ] } }
--   </pre>
--   
--   <a>Customize Gateway Responses</a>
--   
--   <i>See:</i> <a>newGetGatewayResponsesResponse</a> smart constructor.
data GetGatewayResponsesResponse
GetGatewayResponsesResponse' :: Maybe [GatewayResponse] -> Maybe Text -> Int -> GetGatewayResponsesResponse

-- | Returns the entire collection, because of no pagination support.
[$sel:items:GetGatewayResponsesResponse'] :: GetGatewayResponsesResponse -> Maybe [GatewayResponse]
[$sel:position:GetGatewayResponsesResponse'] :: GetGatewayResponsesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetGatewayResponsesResponse'] :: GetGatewayResponsesResponse -> Int

-- | Create a value of <a>GetGatewayResponsesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetGatewayResponsesResponse'</a>,
--   <a>getGatewayResponsesResponse_items</a> - Returns the entire
--   collection, because of no pagination support.
--   
--   <a>$sel:position:GetGatewayResponses'</a>,
--   <a>getGatewayResponsesResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetGatewayResponsesResponse'</a>,
--   <a>getGatewayResponsesResponse_httpStatus</a> - The response's http
--   status code.
newGetGatewayResponsesResponse :: Int -> GetGatewayResponsesResponse

-- | Returns the entire collection, because of no pagination support.
getGatewayResponsesResponse_items :: Lens' GetGatewayResponsesResponse (Maybe [GatewayResponse])

-- | Undocumented member.
getGatewayResponsesResponse_position :: Lens' GetGatewayResponsesResponse (Maybe Text)

-- | The response's http status code.
getGatewayResponsesResponse_httpStatus :: Lens' GetGatewayResponsesResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponses
instance GHC.Show.Show Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponses
instance GHC.Read.Read Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponses
instance GHC.Classes.Eq Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponses
instance GHC.Generics.Generic Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponsesResponse
instance GHC.Show.Show Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponsesResponse
instance GHC.Read.Read Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponsesResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponsesResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponses
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponsesResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponses
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponses
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponses
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponses
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponses
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetGatewayResponses.GetGatewayResponses


-- | Gets a GatewayResponse of a specified response type on the given
--   RestApi.
module Amazonka.APIGateway.GetGatewayResponse

-- | Gets a GatewayResponse of a specified response type on the given
--   RestApi.
--   
--   <i>See:</i> <a>newGetGatewayResponse</a> smart constructor.
data GetGatewayResponse
GetGatewayResponse' :: Text -> GatewayResponseType -> GetGatewayResponse

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetGatewayResponse'] :: GetGatewayResponse -> Text

-- | <ul>
--   <li><i>Required</i></li>
--   </ul>
--   
--   The response type of the associated GatewayResponse.
[$sel:responseType:GetGatewayResponse'] :: GetGatewayResponse -> GatewayResponseType

-- | Create a value of <a>GetGatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetGatewayResponse'</a>,
--   <a>getGatewayResponse_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:responseType:GetGatewayResponse'</a>,
--   <a>getGatewayResponse_responseType</a> - [Required]
--   
--   The response type of the associated GatewayResponse.
newGetGatewayResponse :: Text -> GatewayResponseType -> GetGatewayResponse

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getGatewayResponse_restApiId :: Lens' GetGatewayResponse Text

-- | <ul>
--   <li><i>Required</i></li>
--   </ul>
--   
--   The response type of the associated GatewayResponse.
getGatewayResponse_responseType :: Lens' GetGatewayResponse GatewayResponseType

-- | A gateway response of a given response type and status code, with
--   optional response parameters and mapping templates.
--   
--   For more information about valid gateway response types, see
--   <a>Gateway Response Types Supported by API Gateway</a>
--   
--   <h4>Example: Get a Gateway Response of a given response type</h4>
--   
--   <h5>Request</h5>
--   
--   This example shows how to get a gateway response of the
--   <tt>MISSING_AUTHENTICATION_TOKEN</tt> type.
--   
--   <pre>
--   GET /restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T202516Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=1b52460e3159c1a26cff29093855d50ea141c1c5b937528fecaf60f51129697a Cache-Control: no-cache Postman-Token: 3b2a1ce9-c848-2e26-2e2f-9c2caefbed45
--   </pre>
--   
--   The response type is specified as a URL path.
--   
--   <h5>Response</h5>
--   
--   The successful operation returns the <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:delete": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": false, "responseParameters": { "gatewayresponse.header.x-request-path": "method.request.path.petId", "gatewayresponse.header.Access-Control-Allow-Origin": "'a.b.c'", "gatewayresponse.header.x-request-query": "method.request.querystring.q", "gatewayresponse.header.x-request-header": "method.request.header.Accept" }, "responseTemplates": { "application/json": "{\n \"message\": $context.error.messageString,\n \"type\": \"$context.error.responseType\",\n \"stage\": \"$context.stage\",\n \"resourcePath\": \"$context.resourcePath\",\n \"stageVariables.a\": \"$stageVariables.a\",\n \"statusCode\": \"'404'\"\n}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "404" }
--   </pre>
--   
--   <a>Customize Gateway Responses</a>
--   
--   <i>See:</i> <a>newGatewayResponse</a> smart constructor.
data GatewayResponse
GatewayResponse' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe GatewayResponseType -> Maybe Text -> Maybe (HashMap Text Text) -> GatewayResponse

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
[$sel:defaultResponse:GatewayResponse'] :: GatewayResponse -> Maybe Bool

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
[$sel:responseTemplates:GatewayResponse'] :: GatewayResponse -> Maybe (HashMap Text Text)

-- | The response type of the associated GatewayResponse.
[$sel:responseType:GatewayResponse'] :: GatewayResponse -> Maybe GatewayResponseType

-- | The HTTP status code for this GatewayResponse.
[$sel:statusCode:GatewayResponse'] :: GatewayResponse -> Maybe Text

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
[$sel:responseParameters:GatewayResponse'] :: GatewayResponse -> Maybe (HashMap Text Text)

-- | Create a value of <a>GatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultResponse:GatewayResponse'</a>,
--   <a>gatewayResponse_defaultResponse</a> - A Boolean flag to indicate
--   whether this GatewayResponse is the default gateway response
--   (<tt>true</tt>) or not (<tt>false</tt>). A default gateway response is
--   one generated by API Gateway without any customization by an API
--   developer.
--   
--   <a>$sel:responseTemplates:GatewayResponse'</a>,
--   <a>gatewayResponse_responseTemplates</a> - Response templates of the
--   GatewayResponse as a string-to-string map of key-value pairs.
--   
--   <a>$sel:responseType:GatewayResponse'</a>,
--   <a>gatewayResponse_responseType</a> - The response type of the
--   associated GatewayResponse.
--   
--   <a>$sel:statusCode:GatewayResponse'</a>,
--   <a>gatewayResponse_statusCode</a> - The HTTP status code for this
--   GatewayResponse.
--   
--   <a>$sel:responseParameters:GatewayResponse'</a>,
--   <a>gatewayResponse_responseParameters</a> - Response parameters
--   (paths, query strings and headers) of the GatewayResponse as a
--   string-to-string map of key-value pairs.
newGatewayResponse :: GatewayResponse

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
gatewayResponse_defaultResponse :: Lens' GatewayResponse (Maybe Bool)

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
gatewayResponse_responseTemplates :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | The response type of the associated GatewayResponse.
gatewayResponse_responseType :: Lens' GatewayResponse (Maybe GatewayResponseType)

-- | The HTTP status code for this GatewayResponse.
gatewayResponse_statusCode :: Lens' GatewayResponse (Maybe Text)

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
gatewayResponse_responseParameters :: Lens' GatewayResponse (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.GetGatewayResponse.GetGatewayResponse
instance GHC.Show.Show Amazonka.APIGateway.GetGatewayResponse.GetGatewayResponse
instance GHC.Read.Read Amazonka.APIGateway.GetGatewayResponse.GetGatewayResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetGatewayResponse.GetGatewayResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetGatewayResponse.GetGatewayResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetGatewayResponse.GetGatewayResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetGatewayResponse.GetGatewayResponse
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetGatewayResponse.GetGatewayResponse
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetGatewayResponse.GetGatewayResponse
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetGatewayResponse.GetGatewayResponse


-- | Exports a deployed version of a RestApi in a specified format.
module Amazonka.APIGateway.GetExport

-- | Request a new export of a RestApi for a particular Stage.
--   
--   <i>See:</i> <a>newGetExport</a> smart constructor.
data GetExport
GetExport' :: Maybe (HashMap Text Text) -> Maybe Text -> Text -> Text -> Text -> GetExport

-- | A key-value map of query string parameters that specify properties of
--   the export, depending on the requested <tt>exportType</tt>. For
--   <tt>exportType</tt> <tt>oas30</tt> and <tt>swagger</tt>, any
--   combination of the following parameters are supported:
--   <tt>extensions='integrations'</tt> or <tt>extensions='apigateway'</tt>
--   will export the API with x-amazon-apigateway-integration extensions.
--   <tt>extensions='authorizers'</tt> will export the API with
--   x-amazon-apigateway-authorizer extensions. <tt>postman</tt> will
--   export the API with Postman extensions, allowing for import to the
--   Postman tool
[$sel:parameters:GetExport'] :: GetExport -> Maybe (HashMap Text Text)

-- | The content-type of the export, for example <tt>application/json</tt>.
--   Currently <tt>application/json</tt> and <tt>application/yaml</tt> are
--   supported for <tt>exportType</tt> of<tt>oas30</tt> and
--   <tt>swagger</tt>. This should be specified in the <tt>Accept</tt>
--   header for direct API requests.
[$sel:accepts:GetExport'] :: GetExport -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetExport'] :: GetExport -> Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage that will be exported.</li>
--   </ul>
[$sel:stageName:GetExport'] :: GetExport -> Text

-- | <ul>
--   <li><i>Required</i> The type of export. Acceptable values are 'oas30'
--   for OpenAPI 3.0.x and 'swagger' for Swagger/OpenAPI 2.0.</li>
--   </ul>
[$sel:exportType:GetExport'] :: GetExport -> Text

-- | Create a value of <a>GetExport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:GetExport'</a>, <a>getExport_parameters</a> - A
--   key-value map of query string parameters that specify properties of
--   the export, depending on the requested <tt>exportType</tt>. For
--   <tt>exportType</tt> <tt>oas30</tt> and <tt>swagger</tt>, any
--   combination of the following parameters are supported:
--   <tt>extensions='integrations'</tt> or <tt>extensions='apigateway'</tt>
--   will export the API with x-amazon-apigateway-integration extensions.
--   <tt>extensions='authorizers'</tt> will export the API with
--   x-amazon-apigateway-authorizer extensions. <tt>postman</tt> will
--   export the API with Postman extensions, allowing for import to the
--   Postman tool
--   
--   <a>$sel:accepts:GetExport'</a>, <a>getExport_accepts</a> - The
--   content-type of the export, for example <tt>application/json</tt>.
--   Currently <tt>application/json</tt> and <tt>application/yaml</tt> are
--   supported for <tt>exportType</tt> of<tt>oas30</tt> and
--   <tt>swagger</tt>. This should be specified in the <tt>Accept</tt>
--   header for direct API requests.
--   
--   <a>$sel:restApiId:GetExport'</a>, <a>getExport_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:GetExport'</a>, <a>getExport_stageName</a> -
--   [Required] The name of the Stage that will be exported.
--   
--   <a>$sel:exportType:GetExport'</a>, <a>getExport_exportType</a> -
--   [Required] The type of export. Acceptable values are 'oas30' for
--   OpenAPI 3.0.x and 'swagger' for Swagger/OpenAPI 2.0.
newGetExport :: Text -> Text -> Text -> GetExport

-- | A key-value map of query string parameters that specify properties of
--   the export, depending on the requested <tt>exportType</tt>. For
--   <tt>exportType</tt> <tt>oas30</tt> and <tt>swagger</tt>, any
--   combination of the following parameters are supported:
--   <tt>extensions='integrations'</tt> or <tt>extensions='apigateway'</tt>
--   will export the API with x-amazon-apigateway-integration extensions.
--   <tt>extensions='authorizers'</tt> will export the API with
--   x-amazon-apigateway-authorizer extensions. <tt>postman</tt> will
--   export the API with Postman extensions, allowing for import to the
--   Postman tool
getExport_parameters :: Lens' GetExport (Maybe (HashMap Text Text))

-- | The content-type of the export, for example <tt>application/json</tt>.
--   Currently <tt>application/json</tt> and <tt>application/yaml</tt> are
--   supported for <tt>exportType</tt> of<tt>oas30</tt> and
--   <tt>swagger</tt>. This should be specified in the <tt>Accept</tt>
--   header for direct API requests.
getExport_accepts :: Lens' GetExport (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getExport_restApiId :: Lens' GetExport Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage that will be exported.</li>
--   </ul>
getExport_stageName :: Lens' GetExport Text

-- | <ul>
--   <li><i>Required</i> The type of export. Acceptable values are 'oas30'
--   for OpenAPI 3.0.x and 'swagger' for Swagger/OpenAPI 2.0.</li>
--   </ul>
getExport_exportType :: Lens' GetExport Text

-- | The binary blob response to GetExport, which contains the generated
--   SDK.
--   
--   <i>See:</i> <a>newGetExportResponse</a> smart constructor.
data GetExportResponse
GetExportResponse' :: Maybe ByteString -> Maybe Text -> Maybe Text -> Int -> GetExportResponse

-- | The binary blob response to GetExport, which contains the export.
[$sel:body:GetExportResponse'] :: GetExportResponse -> Maybe ByteString

-- | The content-disposition header value in the HTTP response.
[$sel:contentDisposition:GetExportResponse'] :: GetExportResponse -> Maybe Text

-- | The content-type header value in the HTTP response. This will
--   correspond to a valid 'accept' type in the request.
[$sel:contentType:GetExportResponse'] :: GetExportResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetExportResponse'] :: GetExportResponse -> Int

-- | Create a value of <a>GetExportResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:body:GetExportResponse'</a>, <a>getExportResponse_body</a> -
--   The binary blob response to GetExport, which contains the export.
--   
--   <a>$sel:contentDisposition:GetExportResponse'</a>,
--   <a>getExportResponse_contentDisposition</a> - The content-disposition
--   header value in the HTTP response.
--   
--   <a>$sel:contentType:GetExportResponse'</a>,
--   <a>getExportResponse_contentType</a> - The content-type header value
--   in the HTTP response. This will correspond to a valid 'accept' type in
--   the request.
--   
--   <a>$sel:httpStatus:GetExportResponse'</a>,
--   <a>getExportResponse_httpStatus</a> - The response's http status code.
newGetExportResponse :: Int -> GetExportResponse

-- | The binary blob response to GetExport, which contains the export.
getExportResponse_body :: Lens' GetExportResponse (Maybe ByteString)

-- | The content-disposition header value in the HTTP response.
getExportResponse_contentDisposition :: Lens' GetExportResponse (Maybe Text)

-- | The content-type header value in the HTTP response. This will
--   correspond to a valid 'accept' type in the request.
getExportResponse_contentType :: Lens' GetExportResponse (Maybe Text)

-- | The response's http status code.
getExportResponse_httpStatus :: Lens' GetExportResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetExport.GetExport
instance GHC.Show.Show Amazonka.APIGateway.GetExport.GetExport
instance GHC.Read.Read Amazonka.APIGateway.GetExport.GetExport
instance GHC.Classes.Eq Amazonka.APIGateway.GetExport.GetExport
instance GHC.Generics.Generic Amazonka.APIGateway.GetExport.GetExportResponse
instance GHC.Show.Show Amazonka.APIGateway.GetExport.GetExportResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetExport.GetExportResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetExport.GetExport
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetExport.GetExportResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetExport.GetExport
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetExport.GetExport
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetExport.GetExport
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetExport.GetExport
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetExport.GetExport


-- | Represents a collection of DomainName resources.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetDomainNames

-- | Request to describe a collection of DomainName resources.
--   
--   <i>See:</i> <a>newGetDomainNames</a> smart constructor.
data GetDomainNames
GetDomainNames' :: Maybe Int -> Maybe Text -> GetDomainNames

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetDomainNames'] :: GetDomainNames -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetDomainNames'] :: GetDomainNames -> Maybe Text

-- | Create a value of <a>GetDomainNames</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetDomainNames'</a>, <a>getDomainNames_limit</a> - The
--   maximum number of returned results per page. The default value is 25
--   and the maximum value is 500.
--   
--   <a>$sel:position:GetDomainNames'</a>, <a>getDomainNames_position</a> -
--   The current pagination position in the paged result set.
newGetDomainNames :: GetDomainNames

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getDomainNames_limit :: Lens' GetDomainNames (Maybe Int)

-- | The current pagination position in the paged result set.
getDomainNames_position :: Lens' GetDomainNames (Maybe Text)

-- | Represents a collection of DomainName resources.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newGetDomainNamesResponse</a> smart constructor.
data GetDomainNamesResponse
GetDomainNamesResponse' :: Maybe [DomainName] -> Maybe Text -> Int -> GetDomainNamesResponse

-- | The current page of elements from this collection.
[$sel:items:GetDomainNamesResponse'] :: GetDomainNamesResponse -> Maybe [DomainName]
[$sel:position:GetDomainNamesResponse'] :: GetDomainNamesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDomainNamesResponse'] :: GetDomainNamesResponse -> Int

-- | Create a value of <a>GetDomainNamesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetDomainNamesResponse'</a>,
--   <a>getDomainNamesResponse_items</a> - The current page of elements
--   from this collection.
--   
--   <a>$sel:position:GetDomainNames'</a>,
--   <a>getDomainNamesResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetDomainNamesResponse'</a>,
--   <a>getDomainNamesResponse_httpStatus</a> - The response's http status
--   code.
newGetDomainNamesResponse :: Int -> GetDomainNamesResponse

-- | The current page of elements from this collection.
getDomainNamesResponse_items :: Lens' GetDomainNamesResponse (Maybe [DomainName])

-- | Undocumented member.
getDomainNamesResponse_position :: Lens' GetDomainNamesResponse (Maybe Text)

-- | The response's http status code.
getDomainNamesResponse_httpStatus :: Lens' GetDomainNamesResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetDomainNames.GetDomainNames
instance GHC.Show.Show Amazonka.APIGateway.GetDomainNames.GetDomainNames
instance GHC.Read.Read Amazonka.APIGateway.GetDomainNames.GetDomainNames
instance GHC.Classes.Eq Amazonka.APIGateway.GetDomainNames.GetDomainNames
instance GHC.Generics.Generic Amazonka.APIGateway.GetDomainNames.GetDomainNamesResponse
instance GHC.Show.Show Amazonka.APIGateway.GetDomainNames.GetDomainNamesResponse
instance GHC.Read.Read Amazonka.APIGateway.GetDomainNames.GetDomainNamesResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetDomainNames.GetDomainNamesResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetDomainNames.GetDomainNames
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetDomainNames.GetDomainNamesResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetDomainNames.GetDomainNames
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetDomainNames.GetDomainNames
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetDomainNames.GetDomainNames
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetDomainNames.GetDomainNames
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetDomainNames.GetDomainNames
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetDomainNames.GetDomainNames


-- | Represents a domain name that is contained in a simpler, more
--   intuitive URL that can be called.
module Amazonka.APIGateway.GetDomainName

-- | Request to get the name of a DomainName resource.
--   
--   <i>See:</i> <a>newGetDomainName</a> smart constructor.
data GetDomainName
GetDomainName' :: Text -> GetDomainName

-- | <ul>
--   <li><i>Required</i> The name of the DomainName resource.</li>
--   </ul>
[$sel:domainName:GetDomainName'] :: GetDomainName -> Text

-- | Create a value of <a>GetDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:GetDomainName'</a>, <a>getDomainName_domainName</a>
--   - [Required] The name of the DomainName resource.
newGetDomainName :: Text -> GetDomainName

-- | <ul>
--   <li><i>Required</i> The name of the DomainName resource.</li>
--   </ul>
getDomainName_domainName :: Lens' GetDomainName Text

-- | Represents a custom domain name as a user-friendly host name of an API
--   (RestApi).
--   
--   When you deploy an API, API Gateway creates a default host name for
--   the API. This default API host name is of the
--   <tt>{restapi-id}.execute-api.{region}.amazonaws.com</tt> format. With
--   the default host name, you can access the API's root resource with the
--   URL of
--   <tt>https://{restapi-id}.execute-api.{region}.amazonaws.com/{stage}/</tt>.
--   When you set up a custom domain name of <tt>apis.example.com</tt> for
--   this API, you can then access the same resource using the URL of the
--   <tt>https://apis.examples.com/myApi</tt>, where <tt>myApi</tt> is the
--   base path mapping (BasePathMapping) of your API under the custom
--   domain name.
--   
--   <a>Set a Custom Host Name for an API</a>
--   
--   <i>See:</i> <a>newDomainName</a> smart constructor.
data DomainName
DomainName' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SecurityPolicy -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe DomainNameStatus -> Maybe (HashMap Text Text) -> DomainName

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
[$sel:regionalHostedZoneId:DomainName'] :: DomainName -> Maybe Text

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
[$sel:certificateName:DomainName'] :: DomainName -> Maybe Text

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
[$sel:ownershipVerificationCertificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
[$sel:regionalCertificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
[$sel:certificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
[$sel:distributionHostedZoneId:DomainName'] :: DomainName -> Maybe Text

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
[$sel:securityPolicy:DomainName'] :: DomainName -> Maybe SecurityPolicy

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
[$sel:domainName:DomainName'] :: DomainName -> Maybe Text

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
[$sel:mutualTlsAuthentication:DomainName'] :: DomainName -> Maybe MutualTlsAuthentication

-- | The name of the certificate that will be used for validating the
--   regional domain name.
[$sel:regionalCertificateName:DomainName'] :: DomainName -> Maybe Text

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
[$sel:regionalDomainName:DomainName'] :: DomainName -> Maybe Text

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
[$sel:certificateUploadDate:DomainName'] :: DomainName -> Maybe POSIX

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
[$sel:distributionDomainName:DomainName'] :: DomainName -> Maybe Text

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
[$sel:domainNameStatusMessage:DomainName'] :: DomainName -> Maybe Text

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
[$sel:endpointConfiguration:DomainName'] :: DomainName -> Maybe EndpointConfiguration

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
[$sel:domainNameStatus:DomainName'] :: DomainName -> Maybe DomainNameStatus

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:DomainName'] :: DomainName -> Maybe (HashMap Text Text)

-- | Create a value of <a>DomainName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regionalHostedZoneId:DomainName'</a>,
--   <a>domainName_regionalHostedZoneId</a> - The region-specific Amazon
--   Route 53 Hosted Zone ID of the regional endpoint. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:certificateName:DomainName'</a>,
--   <a>domainName_certificateName</a> - The name of the certificate that
--   will be used by edge-optimized endpoint for this domain name.
--   
--   <a>$sel:ownershipVerificationCertificateArn:DomainName'</a>,
--   <a>domainName_ownershipVerificationCertificateArn</a> - The ARN of the
--   public certificate issued by ACM to validate ownership of your custom
--   domain. Only required when configuring mutual TLS and using an ACM
--   imported or private CA certificate ARN as the regionalCertificateArn.
--   
--   <a>$sel:regionalCertificateArn:DomainName'</a>,
--   <a>domainName_regionalCertificateArn</a> - The reference to an
--   AWS-managed certificate that will be used for validating the regional
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:certificateArn:DomainName'</a>,
--   <a>domainName_certificateArn</a> - The reference to an AWS-managed
--   certificate that will be used by edge-optimized endpoint for this
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:distributionHostedZoneId:DomainName'</a>,
--   <a>domainName_distributionHostedZoneId</a> - The region-agnostic
--   Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The
--   valid value is <tt>Z2FDTNDATAQYW2</tt> for all the regions. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:securityPolicy:DomainName'</a>,
--   <a>domainName_securityPolicy</a> - The Transport Layer Security (TLS)
--   version + cipher suite for this DomainName. The valid values are
--   <tt>TLS_1_0</tt> and <tt>TLS_1_2</tt>.
--   
--   <a>$sel:domainName:DomainName'</a>, <a>domainName_domainName</a> - The
--   custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
--   
--   <a>$sel:mutualTlsAuthentication:DomainName'</a>,
--   <a>domainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name. If specified,
--   API Gateway performs two-way authentication between the client and the
--   server. Clients must present a trusted certificate to access your API.
--   
--   <a>$sel:regionalCertificateName:DomainName'</a>,
--   <a>domainName_regionalCertificateName</a> - The name of the
--   certificate that will be used for validating the regional domain name.
--   
--   <a>$sel:regionalDomainName:DomainName'</a>,
--   <a>domainName_regionalDomainName</a> - The domain name associated with
--   the regional endpoint for this custom domain name. You set up this
--   association by adding a DNS record that points the custom domain name
--   to this regional domain name. The regional domain name is returned by
--   API Gateway when you create a regional endpoint.
--   
--   <a>$sel:certificateUploadDate:DomainName'</a>,
--   <a>domainName_certificateUploadDate</a> - The timestamp when the
--   certificate that was used by edge-optimized endpoint for this domain
--   name was uploaded.
--   
--   <a>$sel:distributionDomainName:DomainName'</a>,
--   <a>domainName_distributionDomainName</a> - The domain name of the
--   Amazon CloudFront distribution associated with this custom domain name
--   for an edge-optimized endpoint. You set up this association when
--   adding a DNS record pointing the custom domain name to this
--   distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
--   
--   <a>$sel:domainNameStatusMessage:DomainName'</a>,
--   <a>domainName_domainNameStatusMessage</a> - An optional text message
--   containing detailed information about status of the DomainName
--   migration.
--   
--   <a>$sel:endpointConfiguration:DomainName'</a>,
--   <a>domainName_endpointConfiguration</a> - The endpoint configuration
--   of this DomainName showing the endpoint types of the domain name.
--   
--   <a>$sel:domainNameStatus:DomainName'</a>,
--   <a>domainName_domainNameStatus</a> - The status of the DomainName
--   migration. The valid values are <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
--   
--   <a>$sel:tags:DomainName'</a>, <a>domainName_tags</a> - The collection
--   of tags. Each tag element is associated with a given resource.
newDomainName :: DomainName

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
domainName_regionalHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
domainName_certificateName :: Lens' DomainName (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
domainName_ownershipVerificationCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
domainName_regionalCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
domainName_certificateArn :: Lens' DomainName (Maybe Text)

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
domainName_distributionHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
domainName_securityPolicy :: Lens' DomainName (Maybe SecurityPolicy)

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
domainName_domainName :: Lens' DomainName (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
domainName_mutualTlsAuthentication :: Lens' DomainName (Maybe MutualTlsAuthentication)

-- | The name of the certificate that will be used for validating the
--   regional domain name.
domainName_regionalCertificateName :: Lens' DomainName (Maybe Text)

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
domainName_regionalDomainName :: Lens' DomainName (Maybe Text)

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
domainName_certificateUploadDate :: Lens' DomainName (Maybe UTCTime)

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
domainName_distributionDomainName :: Lens' DomainName (Maybe Text)

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
domainName_domainNameStatusMessage :: Lens' DomainName (Maybe Text)

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
domainName_endpointConfiguration :: Lens' DomainName (Maybe EndpointConfiguration)

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
domainName_domainNameStatus :: Lens' DomainName (Maybe DomainNameStatus)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
domainName_tags :: Lens' DomainName (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.GetDomainName.GetDomainName
instance GHC.Show.Show Amazonka.APIGateway.GetDomainName.GetDomainName
instance GHC.Read.Read Amazonka.APIGateway.GetDomainName.GetDomainName
instance GHC.Classes.Eq Amazonka.APIGateway.GetDomainName.GetDomainName
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetDomainName.GetDomainName
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetDomainName.GetDomainName
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetDomainName.GetDomainName
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetDomainName.GetDomainName
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetDomainName.GetDomainName
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetDomainName.GetDomainName


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetDocumentationVersions

-- | Gets the documentation versions of an API.
--   
--   <i>See:</i> <a>newGetDocumentationVersions</a> smart constructor.
data GetDocumentationVersions
GetDocumentationVersions' :: Maybe Int -> Maybe Text -> Text -> GetDocumentationVersions

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetDocumentationVersions'] :: GetDocumentationVersions -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetDocumentationVersions'] :: GetDocumentationVersions -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetDocumentationVersions'] :: GetDocumentationVersions -> Text

-- | Create a value of <a>GetDocumentationVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetDocumentationVersions'</a>,
--   <a>getDocumentationVersions_limit</a> - The maximum number of returned
--   results per page. The default value is 25 and the maximum value is
--   500.
--   
--   <a>$sel:position:GetDocumentationVersions'</a>,
--   <a>getDocumentationVersions_position</a> - The current pagination
--   position in the paged result set.
--   
--   <a>$sel:restApiId:GetDocumentationVersions'</a>,
--   <a>getDocumentationVersions_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
newGetDocumentationVersions :: Text -> GetDocumentationVersions

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getDocumentationVersions_limit :: Lens' GetDocumentationVersions (Maybe Int)

-- | The current pagination position in the paged result set.
getDocumentationVersions_position :: Lens' GetDocumentationVersions (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDocumentationVersions_restApiId :: Lens' GetDocumentationVersions Text

-- | The collection of documentation snapshots of an API.
--   
--   Use the DocumentationVersions to manage documentation snapshots
--   associated with various API stages.
--   
--   <a>Documenting an API</a>, DocumentationPart, DocumentationVersion
--   
--   <i>See:</i> <a>newGetDocumentationVersionsResponse</a> smart
--   constructor.
data GetDocumentationVersionsResponse
GetDocumentationVersionsResponse' :: Maybe [DocumentationVersion] -> Maybe Text -> Int -> GetDocumentationVersionsResponse

-- | The current page of elements from this collection.
[$sel:items:GetDocumentationVersionsResponse'] :: GetDocumentationVersionsResponse -> Maybe [DocumentationVersion]
[$sel:position:GetDocumentationVersionsResponse'] :: GetDocumentationVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDocumentationVersionsResponse'] :: GetDocumentationVersionsResponse -> Int

-- | Create a value of <a>GetDocumentationVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetDocumentationVersionsResponse'</a>,
--   <a>getDocumentationVersionsResponse_items</a> - The current page of
--   elements from this collection.
--   
--   <a>$sel:position:GetDocumentationVersions'</a>,
--   <a>getDocumentationVersionsResponse_position</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:GetDocumentationVersionsResponse'</a>,
--   <a>getDocumentationVersionsResponse_httpStatus</a> - The response's
--   http status code.
newGetDocumentationVersionsResponse :: Int -> GetDocumentationVersionsResponse

-- | The current page of elements from this collection.
getDocumentationVersionsResponse_items :: Lens' GetDocumentationVersionsResponse (Maybe [DocumentationVersion])

-- | Undocumented member.
getDocumentationVersionsResponse_position :: Lens' GetDocumentationVersionsResponse (Maybe Text)

-- | The response's http status code.
getDocumentationVersionsResponse_httpStatus :: Lens' GetDocumentationVersionsResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersions
instance GHC.Show.Show Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersions
instance GHC.Read.Read Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersions
instance GHC.Classes.Eq Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersions
instance GHC.Generics.Generic Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersionsResponse
instance GHC.Show.Show Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersionsResponse
instance GHC.Read.Read Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersionsResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersions
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersionsResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersions
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersions
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersions
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersions
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetDocumentationVersions.GetDocumentationVersions


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
module Amazonka.APIGateway.GetDocumentationVersion

-- | Gets a documentation snapshot of an API.
--   
--   <i>See:</i> <a>newGetDocumentationVersion</a> smart constructor.
data GetDocumentationVersion
GetDocumentationVersion' :: Text -> Text -> GetDocumentationVersion

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetDocumentationVersion'] :: GetDocumentationVersion -> Text

-- | <ul>
--   <li><i>Required</i> The version identifier of the to-be-retrieved
--   documentation snapshot.</li>
--   </ul>
[$sel:documentationVersion:GetDocumentationVersion'] :: GetDocumentationVersion -> Text

-- | Create a value of <a>GetDocumentationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetDocumentationVersion'</a>,
--   <a>getDocumentationVersion_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:documentationVersion:GetDocumentationVersion'</a>,
--   <a>getDocumentationVersion_documentationVersion</a> - [Required] The
--   version identifier of the to-be-retrieved documentation snapshot.
newGetDocumentationVersion :: Text -> Text -> GetDocumentationVersion

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDocumentationVersion_restApiId :: Lens' GetDocumentationVersion Text

-- | <ul>
--   <li><i>Required</i> The version identifier of the to-be-retrieved
--   documentation snapshot.</li>
--   </ul>
getDocumentationVersion_documentationVersion :: Lens' GetDocumentationVersion Text

-- | A snapshot of the documentation of an API.
--   
--   Publishing API documentation involves creating a documentation version
--   associated with an API stage and exporting the versioned documentation
--   to an external (e.g., OpenAPI) file.
--   
--   <a>Documenting an API</a>, DocumentationPart, DocumentationVersions
--   
--   <i>See:</i> <a>newDocumentationVersion</a> smart constructor.
data DocumentationVersion
DocumentationVersion' :: Maybe POSIX -> Maybe Text -> Maybe Text -> DocumentationVersion

-- | The date when the API documentation snapshot is created.
[$sel:createdDate:DocumentationVersion'] :: DocumentationVersion -> Maybe POSIX

-- | The version identifier of the API documentation snapshot.
[$sel:version:DocumentationVersion'] :: DocumentationVersion -> Maybe Text

-- | The description of the API documentation snapshot.
[$sel:description:DocumentationVersion'] :: DocumentationVersion -> Maybe Text

-- | Create a value of <a>DocumentationVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:DocumentationVersion'</a>,
--   <a>documentationVersion_createdDate</a> - The date when the API
--   documentation snapshot is created.
--   
--   <a>$sel:version:DocumentationVersion'</a>,
--   <a>documentationVersion_version</a> - The version identifier of the
--   API documentation snapshot.
--   
--   <a>$sel:description:DocumentationVersion'</a>,
--   <a>documentationVersion_description</a> - The description of the API
--   documentation snapshot.
newDocumentationVersion :: DocumentationVersion

-- | The date when the API documentation snapshot is created.
documentationVersion_createdDate :: Lens' DocumentationVersion (Maybe UTCTime)

-- | The version identifier of the API documentation snapshot.
documentationVersion_version :: Lens' DocumentationVersion (Maybe Text)

-- | The description of the API documentation snapshot.
documentationVersion_description :: Lens' DocumentationVersion (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.GetDocumentationVersion.GetDocumentationVersion
instance GHC.Show.Show Amazonka.APIGateway.GetDocumentationVersion.GetDocumentationVersion
instance GHC.Read.Read Amazonka.APIGateway.GetDocumentationVersion.GetDocumentationVersion
instance GHC.Classes.Eq Amazonka.APIGateway.GetDocumentationVersion.GetDocumentationVersion
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetDocumentationVersion.GetDocumentationVersion
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetDocumentationVersion.GetDocumentationVersion
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetDocumentationVersion.GetDocumentationVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetDocumentationVersion.GetDocumentationVersion
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetDocumentationVersion.GetDocumentationVersion
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetDocumentationVersion.GetDocumentationVersion


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetDocumentationParts

-- | Gets the documentation parts of an API. The result may be filtered by
--   the type, name, or path of API entities (targets).
--   
--   <i>See:</i> <a>newGetDocumentationParts</a> smart constructor.
data GetDocumentationParts
GetDocumentationParts' :: Maybe Text -> Maybe LocationStatusType -> Maybe Text -> Maybe Int -> Maybe DocumentationPartType -> Maybe Text -> Text -> GetDocumentationParts

-- | The path of API entities of the to-be-retrieved documentation parts.
[$sel:path:GetDocumentationParts'] :: GetDocumentationParts -> Maybe Text

-- | The status of the API documentation parts to retrieve. Valid values
--   are <tt>DOCUMENTED</tt> for retrieving DocumentationPart resources
--   with content and <tt>UNDOCUMENTED</tt> for DocumentationPart resources
--   without content.
[$sel:locationStatus:GetDocumentationParts'] :: GetDocumentationParts -> Maybe LocationStatusType

-- | The name of API entities of the to-be-retrieved documentation parts.
[$sel:nameQuery:GetDocumentationParts'] :: GetDocumentationParts -> Maybe Text

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetDocumentationParts'] :: GetDocumentationParts -> Maybe Int

-- | The type of API entities of the to-be-retrieved documentation parts.
[$sel:type':GetDocumentationParts'] :: GetDocumentationParts -> Maybe DocumentationPartType

-- | The current pagination position in the paged result set.
[$sel:position:GetDocumentationParts'] :: GetDocumentationParts -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetDocumentationParts'] :: GetDocumentationParts -> Text

-- | Create a value of <a>GetDocumentationParts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:GetDocumentationParts'</a>,
--   <a>getDocumentationParts_path</a> - The path of API entities of the
--   to-be-retrieved documentation parts.
--   
--   <a>$sel:locationStatus:GetDocumentationParts'</a>,
--   <a>getDocumentationParts_locationStatus</a> - The status of the API
--   documentation parts to retrieve. Valid values are <tt>DOCUMENTED</tt>
--   for retrieving DocumentationPart resources with content and
--   <tt>UNDOCUMENTED</tt> for DocumentationPart resources without content.
--   
--   <a>$sel:nameQuery:GetDocumentationParts'</a>,
--   <a>getDocumentationParts_nameQuery</a> - The name of API entities of
--   the to-be-retrieved documentation parts.
--   
--   <a>$sel:limit:GetDocumentationParts'</a>,
--   <a>getDocumentationParts_limit</a> - The maximum number of returned
--   results per page. The default value is 25 and the maximum value is
--   500.
--   
--   <a>$sel:type':GetDocumentationParts'</a>,
--   <a>getDocumentationParts_type</a> - The type of API entities of the
--   to-be-retrieved documentation parts.
--   
--   <a>$sel:position:GetDocumentationParts'</a>,
--   <a>getDocumentationParts_position</a> - The current pagination
--   position in the paged result set.
--   
--   <a>$sel:restApiId:GetDocumentationParts'</a>,
--   <a>getDocumentationParts_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
newGetDocumentationParts :: Text -> GetDocumentationParts

-- | The path of API entities of the to-be-retrieved documentation parts.
getDocumentationParts_path :: Lens' GetDocumentationParts (Maybe Text)

-- | The status of the API documentation parts to retrieve. Valid values
--   are <tt>DOCUMENTED</tt> for retrieving DocumentationPart resources
--   with content and <tt>UNDOCUMENTED</tt> for DocumentationPart resources
--   without content.
getDocumentationParts_locationStatus :: Lens' GetDocumentationParts (Maybe LocationStatusType)

-- | The name of API entities of the to-be-retrieved documentation parts.
getDocumentationParts_nameQuery :: Lens' GetDocumentationParts (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getDocumentationParts_limit :: Lens' GetDocumentationParts (Maybe Int)

-- | The type of API entities of the to-be-retrieved documentation parts.
getDocumentationParts_type :: Lens' GetDocumentationParts (Maybe DocumentationPartType)

-- | The current pagination position in the paged result set.
getDocumentationParts_position :: Lens' GetDocumentationParts (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDocumentationParts_restApiId :: Lens' GetDocumentationParts Text

-- | The collection of documentation parts of an API.
--   
--   <a>Documenting an API</a>, DocumentationPart
--   
--   <i>See:</i> <a>newGetDocumentationPartsResponse</a> smart constructor.
data GetDocumentationPartsResponse
GetDocumentationPartsResponse' :: Maybe [DocumentationPart] -> Maybe Text -> Int -> GetDocumentationPartsResponse

-- | The current page of elements from this collection.
[$sel:items:GetDocumentationPartsResponse'] :: GetDocumentationPartsResponse -> Maybe [DocumentationPart]
[$sel:position:GetDocumentationPartsResponse'] :: GetDocumentationPartsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDocumentationPartsResponse'] :: GetDocumentationPartsResponse -> Int

-- | Create a value of <a>GetDocumentationPartsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetDocumentationPartsResponse'</a>,
--   <a>getDocumentationPartsResponse_items</a> - The current page of
--   elements from this collection.
--   
--   <a>$sel:position:GetDocumentationParts'</a>,
--   <a>getDocumentationPartsResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetDocumentationPartsResponse'</a>,
--   <a>getDocumentationPartsResponse_httpStatus</a> - The response's http
--   status code.
newGetDocumentationPartsResponse :: Int -> GetDocumentationPartsResponse

-- | The current page of elements from this collection.
getDocumentationPartsResponse_items :: Lens' GetDocumentationPartsResponse (Maybe [DocumentationPart])

-- | Undocumented member.
getDocumentationPartsResponse_position :: Lens' GetDocumentationPartsResponse (Maybe Text)

-- | The response's http status code.
getDocumentationPartsResponse_httpStatus :: Lens' GetDocumentationPartsResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetDocumentationParts.GetDocumentationParts
instance GHC.Show.Show Amazonka.APIGateway.GetDocumentationParts.GetDocumentationParts
instance GHC.Read.Read Amazonka.APIGateway.GetDocumentationParts.GetDocumentationParts
instance GHC.Classes.Eq Amazonka.APIGateway.GetDocumentationParts.GetDocumentationParts
instance GHC.Generics.Generic Amazonka.APIGateway.GetDocumentationParts.GetDocumentationPartsResponse
instance GHC.Show.Show Amazonka.APIGateway.GetDocumentationParts.GetDocumentationPartsResponse
instance GHC.Read.Read Amazonka.APIGateway.GetDocumentationParts.GetDocumentationPartsResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetDocumentationParts.GetDocumentationPartsResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetDocumentationParts.GetDocumentationParts
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetDocumentationParts.GetDocumentationPartsResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetDocumentationParts.GetDocumentationParts
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetDocumentationParts.GetDocumentationParts
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetDocumentationParts.GetDocumentationParts
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetDocumentationParts.GetDocumentationParts
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetDocumentationParts.GetDocumentationParts
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetDocumentationParts.GetDocumentationParts


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
module Amazonka.APIGateway.GetDocumentationPart

-- | Gets a specified documentation part of a given API.
--   
--   <i>See:</i> <a>newGetDocumentationPart</a> smart constructor.
data GetDocumentationPart
GetDocumentationPart' :: Text -> Text -> GetDocumentationPart

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetDocumentationPart'] :: GetDocumentationPart -> Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:documentationPartId:GetDocumentationPart'] :: GetDocumentationPart -> Text

-- | Create a value of <a>GetDocumentationPart</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetDocumentationPart'</a>,
--   <a>getDocumentationPart_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:documentationPartId:GetDocumentationPart'</a>,
--   <a>getDocumentationPart_documentationPartId</a> - [Required] The
--   string identifier of the associated RestApi.
newGetDocumentationPart :: Text -> Text -> GetDocumentationPart

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDocumentationPart_restApiId :: Lens' GetDocumentationPart Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDocumentationPart_documentationPartId :: Lens' GetDocumentationPart Text

-- | A documentation part for a targeted API entity.
--   
--   A documentation part consists of a content map (<tt>properties</tt>)
--   and a target (<tt>location</tt>). The target specifies an API entity
--   to which the documentation content applies. The supported API entity
--   types are <tt>API</tt>, <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. Valid <tt>location</tt> fields depend on
--   the API entity type. All valid fields are not required.
--   
--   The content map is a JSON string of API-specific key-value pairs.
--   Although an API can use any shape for the content map, only the
--   OpenAPI-compliant documentation fields will be injected into the
--   associated API entity definition in the exported OpenAPI definition
--   file.
--   
--   <a>Documenting an API</a>, DocumentationParts
--   
--   <i>See:</i> <a>newDocumentationPart</a> smart constructor.
data DocumentationPart
DocumentationPart' :: Maybe DocumentationPartLocation -> Maybe Text -> Maybe Text -> DocumentationPart

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
[$sel:location:DocumentationPart'] :: DocumentationPart -> Maybe DocumentationPartLocation

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
[$sel:id:DocumentationPart'] :: DocumentationPart -> Maybe Text

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
[$sel:properties:DocumentationPart'] :: DocumentationPart -> Maybe Text

-- | Create a value of <a>DocumentationPart</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:DocumentationPart'</a>,
--   <a>documentationPart_location</a> - The location of the API entity to
--   which the documentation applies. Valid fields depend on the targeted
--   API entity type. All the valid location fields are not required. If
--   not explicitly specified, a valid location field is treated as a
--   wildcard and associated documentation content may be inherited by
--   matching entities, unless overridden.
--   
--   <a>$sel:id:DocumentationPart'</a>, <a>documentationPart_id</a> - The
--   DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
--   
--   <a>$sel:properties:DocumentationPart'</a>,
--   <a>documentationPart_properties</a> - A content map of API-specific
--   key-value pairs describing the targeted API entity. The map must be
--   encoded as a JSON string, e.g., <tt>"{ \"description\": \"The API does
--   ...\" }"</tt>. Only OpenAPI-compliant documentation-related fields
--   from the properties map are exported and, hence, published as part of
--   the API entity definitions, while the original documentation parts are
--   exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
newDocumentationPart :: DocumentationPart

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
documentationPart_location :: Lens' DocumentationPart (Maybe DocumentationPartLocation)

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
documentationPart_id :: Lens' DocumentationPart (Maybe Text)

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
documentationPart_properties :: Lens' DocumentationPart (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.GetDocumentationPart.GetDocumentationPart
instance GHC.Show.Show Amazonka.APIGateway.GetDocumentationPart.GetDocumentationPart
instance GHC.Read.Read Amazonka.APIGateway.GetDocumentationPart.GetDocumentationPart
instance GHC.Classes.Eq Amazonka.APIGateway.GetDocumentationPart.GetDocumentationPart
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetDocumentationPart.GetDocumentationPart
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetDocumentationPart.GetDocumentationPart
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetDocumentationPart.GetDocumentationPart
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetDocumentationPart.GetDocumentationPart
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetDocumentationPart.GetDocumentationPart
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetDocumentationPart.GetDocumentationPart


-- | Gets information about a Deployments collection.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetDeployments

-- | Requests API Gateway to get information about a Deployments
--   collection.
--   
--   <i>See:</i> <a>newGetDeployments</a> smart constructor.
data GetDeployments
GetDeployments' :: Maybe Int -> Maybe Text -> Text -> GetDeployments

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetDeployments'] :: GetDeployments -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetDeployments'] :: GetDeployments -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetDeployments'] :: GetDeployments -> Text

-- | Create a value of <a>GetDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetDeployments'</a>, <a>getDeployments_limit</a> - The
--   maximum number of returned results per page. The default value is 25
--   and the maximum value is 500.
--   
--   <a>$sel:position:GetDeployments'</a>, <a>getDeployments_position</a> -
--   The current pagination position in the paged result set.
--   
--   <a>$sel:restApiId:GetDeployments'</a>, <a>getDeployments_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
newGetDeployments :: Text -> GetDeployments

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getDeployments_limit :: Lens' GetDeployments (Maybe Int)

-- | The current pagination position in the paged result set.
getDeployments_position :: Lens' GetDeployments (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDeployments_restApiId :: Lens' GetDeployments Text

-- | Represents a collection resource that contains zero or more references
--   to your existing deployments, and links that guide you on how to
--   interact with your collection. The collection offers a paginated view
--   of the contained deployments.
--   
--   To create a new deployment of a RestApi, make a <tt>POST</tt> request
--   against this resource. To view, update, or delete an existing
--   deployment, make a <tt>GET</tt>, <tt>PATCH</tt>, or <tt>DELETE</tt>
--   request, respectively, on a specified Deployment resource.
--   
--   <a>Deploying an API</a>, <a>AWS CLI</a>, <a>AWS SDKs</a>
--   
--   <i>See:</i> <a>newGetDeploymentsResponse</a> smart constructor.
data GetDeploymentsResponse
GetDeploymentsResponse' :: Maybe [Deployment] -> Maybe Text -> Int -> GetDeploymentsResponse

-- | The current page of elements from this collection.
[$sel:items:GetDeploymentsResponse'] :: GetDeploymentsResponse -> Maybe [Deployment]
[$sel:position:GetDeploymentsResponse'] :: GetDeploymentsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDeploymentsResponse'] :: GetDeploymentsResponse -> Int

-- | Create a value of <a>GetDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetDeploymentsResponse'</a>,
--   <a>getDeploymentsResponse_items</a> - The current page of elements
--   from this collection.
--   
--   <a>$sel:position:GetDeployments'</a>,
--   <a>getDeploymentsResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetDeploymentsResponse'</a>,
--   <a>getDeploymentsResponse_httpStatus</a> - The response's http status
--   code.
newGetDeploymentsResponse :: Int -> GetDeploymentsResponse

-- | The current page of elements from this collection.
getDeploymentsResponse_items :: Lens' GetDeploymentsResponse (Maybe [Deployment])

-- | Undocumented member.
getDeploymentsResponse_position :: Lens' GetDeploymentsResponse (Maybe Text)

-- | The response's http status code.
getDeploymentsResponse_httpStatus :: Lens' GetDeploymentsResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetDeployments.GetDeployments
instance GHC.Show.Show Amazonka.APIGateway.GetDeployments.GetDeployments
instance GHC.Read.Read Amazonka.APIGateway.GetDeployments.GetDeployments
instance GHC.Classes.Eq Amazonka.APIGateway.GetDeployments.GetDeployments
instance GHC.Generics.Generic Amazonka.APIGateway.GetDeployments.GetDeploymentsResponse
instance GHC.Show.Show Amazonka.APIGateway.GetDeployments.GetDeploymentsResponse
instance GHC.Read.Read Amazonka.APIGateway.GetDeployments.GetDeploymentsResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetDeployments.GetDeploymentsResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetDeployments.GetDeployments
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetDeployments.GetDeploymentsResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetDeployments.GetDeployments
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetDeployments.GetDeployments
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetDeployments.GetDeployments
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetDeployments.GetDeployments
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetDeployments.GetDeployments
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetDeployments.GetDeployments


-- | Gets information about a Deployment resource.
module Amazonka.APIGateway.GetDeployment

-- | Requests API Gateway to get information about a Deployment resource.
--   
--   <i>See:</i> <a>newGetDeployment</a> smart constructor.
data GetDeployment
GetDeployment' :: Maybe [Text] -> Text -> Text -> GetDeployment

-- | A query parameter to retrieve the specified embedded resources of the
--   returned Deployment resource in the response. In a REST API call, this
--   <tt>embed</tt> parameter value is a list of comma-separated strings,
--   as in <tt>GET
--   /restapis/{restapi_id}/deployments/{deployment_id}?embed=var1,var2</tt>.
--   The SDK and other platform-dependent libraries might use a different
--   format for the list. Currently, this request supports only retrieval
--   of the embedded API summary this way. Hence, the parameter value must
--   be a single-valued list containing only the <tt>"apisummary"</tt>
--   string. For example, <tt>GET
--   /restapis/{restapi_id}/deployments/{deployment_id}?embed=apisummary</tt>.
[$sel:embed:GetDeployment'] :: GetDeployment -> Maybe [Text]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetDeployment'] :: GetDeployment -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Deployment resource to get
--   information about.</li>
--   </ul>
[$sel:deploymentId:GetDeployment'] :: GetDeployment -> Text

-- | Create a value of <a>GetDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:embed:GetDeployment'</a>, <a>getDeployment_embed</a> - A query
--   parameter to retrieve the specified embedded resources of the returned
--   Deployment resource in the response. In a REST API call, this
--   <tt>embed</tt> parameter value is a list of comma-separated strings,
--   as in <tt>GET
--   /restapis/{restapi_id}/deployments/{deployment_id}?embed=var1,var2</tt>.
--   The SDK and other platform-dependent libraries might use a different
--   format for the list. Currently, this request supports only retrieval
--   of the embedded API summary this way. Hence, the parameter value must
--   be a single-valued list containing only the <tt>"apisummary"</tt>
--   string. For example, <tt>GET
--   /restapis/{restapi_id}/deployments/{deployment_id}?embed=apisummary</tt>.
--   
--   <a>$sel:restApiId:GetDeployment'</a>, <a>getDeployment_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:deploymentId:GetDeployment'</a>,
--   <a>getDeployment_deploymentId</a> - [Required] The identifier of the
--   Deployment resource to get information about.
newGetDeployment :: Text -> Text -> GetDeployment

-- | A query parameter to retrieve the specified embedded resources of the
--   returned Deployment resource in the response. In a REST API call, this
--   <tt>embed</tt> parameter value is a list of comma-separated strings,
--   as in <tt>GET
--   /restapis/{restapi_id}/deployments/{deployment_id}?embed=var1,var2</tt>.
--   The SDK and other platform-dependent libraries might use a different
--   format for the list. Currently, this request supports only retrieval
--   of the embedded API summary this way. Hence, the parameter value must
--   be a single-valued list containing only the <tt>"apisummary"</tt>
--   string. For example, <tt>GET
--   /restapis/{restapi_id}/deployments/{deployment_id}?embed=apisummary</tt>.
getDeployment_embed :: Lens' GetDeployment (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDeployment_restApiId :: Lens' GetDeployment Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Deployment resource to get
--   information about.</li>
--   </ul>
getDeployment_deploymentId :: Lens' GetDeployment Text

-- | An immutable representation of a RestApi resource that can be called
--   by users using Stages. A deployment must be associated with a Stage
--   for it to be callable over the Internet.
--   
--   To create a deployment, call <tt>POST</tt> on the Deployments resource
--   of a RestApi. To view, update, or delete a deployment, call
--   <tt>GET</tt>, <tt>PATCH</tt>, or <tt>DELETE</tt> on the specified
--   deployment resource
--   (<tt>/restapis/{restapi_id}/deployments/{deployment_id}</tt>).
--   
--   RestApi, Deployments, Stage, <a>AWS CLI</a>, <a>AWS SDKs</a>
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe (HashMap Text (HashMap Text MethodSnapshot)) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Deployment

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
[$sel:apiSummary:Deployment'] :: Deployment -> Maybe (HashMap Text (HashMap Text MethodSnapshot))

-- | The date and time that the deployment resource was created.
[$sel:createdDate:Deployment'] :: Deployment -> Maybe POSIX

-- | The identifier for the deployment resource.
[$sel:id:Deployment'] :: Deployment -> Maybe Text

-- | The description for the deployment resource.
[$sel:description:Deployment'] :: Deployment -> Maybe Text

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiSummary:Deployment'</a>, <a>deployment_apiSummary</a> - A
--   summary of the RestApi at the date and time that the deployment
--   resource was created.
--   
--   <a>$sel:createdDate:Deployment'</a>, <a>deployment_createdDate</a> -
--   The date and time that the deployment resource was created.
--   
--   <a>$sel:id:Deployment'</a>, <a>deployment_id</a> - The identifier for
--   the deployment resource.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description for the deployment resource.
newDeployment :: Deployment

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
deployment_apiSummary :: Lens' Deployment (Maybe (HashMap Text (HashMap Text MethodSnapshot)))

-- | The date and time that the deployment resource was created.
deployment_createdDate :: Lens' Deployment (Maybe UTCTime)

-- | The identifier for the deployment resource.
deployment_id :: Lens' Deployment (Maybe Text)

-- | The description for the deployment resource.
deployment_description :: Lens' Deployment (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.GetDeployment.GetDeployment
instance GHC.Show.Show Amazonka.APIGateway.GetDeployment.GetDeployment
instance GHC.Read.Read Amazonka.APIGateway.GetDeployment.GetDeployment
instance GHC.Classes.Eq Amazonka.APIGateway.GetDeployment.GetDeployment
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetDeployment.GetDeployment
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetDeployment.GetDeployment
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetDeployment.GetDeployment
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetDeployment.GetDeployment
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetDeployment.GetDeployment
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetDeployment.GetDeployment


-- | Gets a collection of ClientCertificate resources.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetClientCertificates

-- | A request to get information about a collection of ClientCertificate
--   resources.
--   
--   <i>See:</i> <a>newGetClientCertificates</a> smart constructor.
data GetClientCertificates
GetClientCertificates' :: Maybe Int -> Maybe Text -> GetClientCertificates

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetClientCertificates'] :: GetClientCertificates -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetClientCertificates'] :: GetClientCertificates -> Maybe Text

-- | Create a value of <a>GetClientCertificates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetClientCertificates'</a>,
--   <a>getClientCertificates_limit</a> - The maximum number of returned
--   results per page. The default value is 25 and the maximum value is
--   500.
--   
--   <a>$sel:position:GetClientCertificates'</a>,
--   <a>getClientCertificates_position</a> - The current pagination
--   position in the paged result set.
newGetClientCertificates :: GetClientCertificates

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getClientCertificates_limit :: Lens' GetClientCertificates (Maybe Int)

-- | The current pagination position in the paged result set.
getClientCertificates_position :: Lens' GetClientCertificates (Maybe Text)

-- | Represents a collection of ClientCertificate resources.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newGetClientCertificatesResponse</a> smart constructor.
data GetClientCertificatesResponse
GetClientCertificatesResponse' :: Maybe [ClientCertificate] -> Maybe Text -> Int -> GetClientCertificatesResponse

-- | The current page of elements from this collection.
[$sel:items:GetClientCertificatesResponse'] :: GetClientCertificatesResponse -> Maybe [ClientCertificate]
[$sel:position:GetClientCertificatesResponse'] :: GetClientCertificatesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetClientCertificatesResponse'] :: GetClientCertificatesResponse -> Int

-- | Create a value of <a>GetClientCertificatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetClientCertificatesResponse'</a>,
--   <a>getClientCertificatesResponse_items</a> - The current page of
--   elements from this collection.
--   
--   <a>$sel:position:GetClientCertificates'</a>,
--   <a>getClientCertificatesResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetClientCertificatesResponse'</a>,
--   <a>getClientCertificatesResponse_httpStatus</a> - The response's http
--   status code.
newGetClientCertificatesResponse :: Int -> GetClientCertificatesResponse

-- | The current page of elements from this collection.
getClientCertificatesResponse_items :: Lens' GetClientCertificatesResponse (Maybe [ClientCertificate])

-- | Undocumented member.
getClientCertificatesResponse_position :: Lens' GetClientCertificatesResponse (Maybe Text)

-- | The response's http status code.
getClientCertificatesResponse_httpStatus :: Lens' GetClientCertificatesResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetClientCertificates.GetClientCertificates
instance GHC.Show.Show Amazonka.APIGateway.GetClientCertificates.GetClientCertificates
instance GHC.Read.Read Amazonka.APIGateway.GetClientCertificates.GetClientCertificates
instance GHC.Classes.Eq Amazonka.APIGateway.GetClientCertificates.GetClientCertificates
instance GHC.Generics.Generic Amazonka.APIGateway.GetClientCertificates.GetClientCertificatesResponse
instance GHC.Show.Show Amazonka.APIGateway.GetClientCertificates.GetClientCertificatesResponse
instance GHC.Read.Read Amazonka.APIGateway.GetClientCertificates.GetClientCertificatesResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetClientCertificates.GetClientCertificatesResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetClientCertificates.GetClientCertificates
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetClientCertificates.GetClientCertificatesResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetClientCertificates.GetClientCertificates
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetClientCertificates.GetClientCertificates
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetClientCertificates.GetClientCertificates
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetClientCertificates.GetClientCertificates
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetClientCertificates.GetClientCertificates
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetClientCertificates.GetClientCertificates


-- | Gets information about the current ClientCertificate resource.
module Amazonka.APIGateway.GetClientCertificate

-- | A request to get information about the current ClientCertificate
--   resource.
--   
--   <i>See:</i> <a>newGetClientCertificate</a> smart constructor.
data GetClientCertificate
GetClientCertificate' :: Text -> GetClientCertificate

-- | <ul>
--   <li><i>Required</i> The identifier of the ClientCertificate resource
--   to be described.</li>
--   </ul>
[$sel:clientCertificateId:GetClientCertificate'] :: GetClientCertificate -> Text

-- | Create a value of <a>GetClientCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientCertificateId:GetClientCertificate'</a>,
--   <a>getClientCertificate_clientCertificateId</a> - [Required] The
--   identifier of the ClientCertificate resource to be described.
newGetClientCertificate :: Text -> GetClientCertificate

-- | <ul>
--   <li><i>Required</i> The identifier of the ClientCertificate resource
--   to be described.</li>
--   </ul>
getClientCertificate_clientCertificateId :: Lens' GetClientCertificate Text

-- | Represents a client certificate used to configure client-side SSL
--   authentication while sending requests to the integration endpoint.
--   
--   Client certificates are used to authenticate an API by the backend
--   server. To authenticate an API client (or user), use IAM roles and
--   policies, a custom Authorizer or an Amazon Cognito user pool.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newClientCertificate</a> smart constructor.
data ClientCertificate
ClientCertificate' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ClientCertificate

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
[$sel:pemEncodedCertificate:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The identifier of the client certificate.
[$sel:clientCertificateId:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The timestamp when the client certificate was created.
[$sel:createdDate:ClientCertificate'] :: ClientCertificate -> Maybe POSIX

-- | The timestamp when the client certificate will expire.
[$sel:expirationDate:ClientCertificate'] :: ClientCertificate -> Maybe POSIX

-- | The description of the client certificate.
[$sel:description:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:ClientCertificate'] :: ClientCertificate -> Maybe (HashMap Text Text)

-- | Create a value of <a>ClientCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pemEncodedCertificate:ClientCertificate'</a>,
--   <a>clientCertificate_pemEncodedCertificate</a> - The PEM-encoded
--   public key of the client certificate, which can be used to configure
--   certificate authentication in the integration endpoint .
--   
--   <a>$sel:clientCertificateId:ClientCertificate'</a>,
--   <a>clientCertificate_clientCertificateId</a> - The identifier of the
--   client certificate.
--   
--   <a>$sel:createdDate:ClientCertificate'</a>,
--   <a>clientCertificate_createdDate</a> - The timestamp when the client
--   certificate was created.
--   
--   <a>$sel:expirationDate:ClientCertificate'</a>,
--   <a>clientCertificate_expirationDate</a> - The timestamp when the
--   client certificate will expire.
--   
--   <a>$sel:description:ClientCertificate'</a>,
--   <a>clientCertificate_description</a> - The description of the client
--   certificate.
--   
--   <a>$sel:tags:ClientCertificate'</a>, <a>clientCertificate_tags</a> -
--   The collection of tags. Each tag element is associated with a given
--   resource.
newClientCertificate :: ClientCertificate

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
clientCertificate_pemEncodedCertificate :: Lens' ClientCertificate (Maybe Text)

-- | The identifier of the client certificate.
clientCertificate_clientCertificateId :: Lens' ClientCertificate (Maybe Text)

-- | The timestamp when the client certificate was created.
clientCertificate_createdDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The timestamp when the client certificate will expire.
clientCertificate_expirationDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The description of the client certificate.
clientCertificate_description :: Lens' ClientCertificate (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
clientCertificate_tags :: Lens' ClientCertificate (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.GetClientCertificate.GetClientCertificate
instance GHC.Show.Show Amazonka.APIGateway.GetClientCertificate.GetClientCertificate
instance GHC.Read.Read Amazonka.APIGateway.GetClientCertificate.GetClientCertificate
instance GHC.Classes.Eq Amazonka.APIGateway.GetClientCertificate.GetClientCertificate
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetClientCertificate.GetClientCertificate
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetClientCertificate.GetClientCertificate
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetClientCertificate.GetClientCertificate
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetClientCertificate.GetClientCertificate
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetClientCertificate.GetClientCertificate
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetClientCertificate.GetClientCertificate


-- | Represents a collection of BasePathMapping resources.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetBasePathMappings

-- | A request to get information about a collection of BasePathMapping
--   resources.
--   
--   <i>See:</i> <a>newGetBasePathMappings</a> smart constructor.
data GetBasePathMappings
GetBasePathMappings' :: Maybe Int -> Maybe Text -> Text -> GetBasePathMappings

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetBasePathMappings'] :: GetBasePathMappings -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetBasePathMappings'] :: GetBasePathMappings -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The domain name of a BasePathMapping
--   resource.</li>
--   </ul>
[$sel:domainName:GetBasePathMappings'] :: GetBasePathMappings -> Text

-- | Create a value of <a>GetBasePathMappings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetBasePathMappings'</a>,
--   <a>getBasePathMappings_limit</a> - The maximum number of returned
--   results per page. The default value is 25 and the maximum value is
--   500.
--   
--   <a>$sel:position:GetBasePathMappings'</a>,
--   <a>getBasePathMappings_position</a> - The current pagination position
--   in the paged result set.
--   
--   <a>$sel:domainName:GetBasePathMappings'</a>,
--   <a>getBasePathMappings_domainName</a> - [Required] The domain name of
--   a BasePathMapping resource.
newGetBasePathMappings :: Text -> GetBasePathMappings

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getBasePathMappings_limit :: Lens' GetBasePathMappings (Maybe Int)

-- | The current pagination position in the paged result set.
getBasePathMappings_position :: Lens' GetBasePathMappings (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The domain name of a BasePathMapping
--   resource.</li>
--   </ul>
getBasePathMappings_domainName :: Lens' GetBasePathMappings Text

-- | Represents a collection of BasePathMapping resources.
--   
--   <a>Use Custom Domain Names</a>
--   
--   <i>See:</i> <a>newGetBasePathMappingsResponse</a> smart constructor.
data GetBasePathMappingsResponse
GetBasePathMappingsResponse' :: Maybe [BasePathMapping] -> Maybe Text -> Int -> GetBasePathMappingsResponse

-- | The current page of elements from this collection.
[$sel:items:GetBasePathMappingsResponse'] :: GetBasePathMappingsResponse -> Maybe [BasePathMapping]
[$sel:position:GetBasePathMappingsResponse'] :: GetBasePathMappingsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetBasePathMappingsResponse'] :: GetBasePathMappingsResponse -> Int

-- | Create a value of <a>GetBasePathMappingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetBasePathMappingsResponse'</a>,
--   <a>getBasePathMappingsResponse_items</a> - The current page of
--   elements from this collection.
--   
--   <a>$sel:position:GetBasePathMappings'</a>,
--   <a>getBasePathMappingsResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetBasePathMappingsResponse'</a>,
--   <a>getBasePathMappingsResponse_httpStatus</a> - The response's http
--   status code.
newGetBasePathMappingsResponse :: Int -> GetBasePathMappingsResponse

-- | The current page of elements from this collection.
getBasePathMappingsResponse_items :: Lens' GetBasePathMappingsResponse (Maybe [BasePathMapping])

-- | Undocumented member.
getBasePathMappingsResponse_position :: Lens' GetBasePathMappingsResponse (Maybe Text)

-- | The response's http status code.
getBasePathMappingsResponse_httpStatus :: Lens' GetBasePathMappingsResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappings
instance GHC.Show.Show Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappings
instance GHC.Read.Read Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappings
instance GHC.Classes.Eq Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappings
instance GHC.Generics.Generic Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappingsResponse
instance GHC.Show.Show Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappingsResponse
instance GHC.Read.Read Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappingsResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappingsResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappings
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappingsResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappings
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappings
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappings
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappings
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappings
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetBasePathMappings.GetBasePathMappings


-- | Describe a BasePathMapping resource.
module Amazonka.APIGateway.GetBasePathMapping

-- | Request to describe a BasePathMapping resource.
--   
--   <i>See:</i> <a>newGetBasePathMapping</a> smart constructor.
data GetBasePathMapping
GetBasePathMapping' :: Text -> Text -> GetBasePathMapping

-- | <ul>
--   <li><i>Required</i> The domain name of the BasePathMapping resource to
--   be described.</li>
--   </ul>
[$sel:domainName:GetBasePathMapping'] :: GetBasePathMapping -> Text

-- | <ul>
--   <li><i>Required</i> The base path name that callers of the API must
--   provide as part of the URL after the domain name. This value must be
--   unique for all of the mappings across a single API. Specify '(none)'
--   if you do not want callers to specify any base path name after the
--   domain name.</li>
--   </ul>
[$sel:basePath:GetBasePathMapping'] :: GetBasePathMapping -> Text

-- | Create a value of <a>GetBasePathMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:GetBasePathMapping'</a>,
--   <a>getBasePathMapping_domainName</a> - [Required] The domain name of
--   the BasePathMapping resource to be described.
--   
--   <a>$sel:basePath:GetBasePathMapping'</a>,
--   <a>getBasePathMapping_basePath</a> - [Required] The base path name
--   that callers of the API must provide as part of the URL after the
--   domain name. This value must be unique for all of the mappings across
--   a single API. Specify '(none)' if you do not want callers to specify
--   any base path name after the domain name.
newGetBasePathMapping :: Text -> Text -> GetBasePathMapping

-- | <ul>
--   <li><i>Required</i> The domain name of the BasePathMapping resource to
--   be described.</li>
--   </ul>
getBasePathMapping_domainName :: Lens' GetBasePathMapping Text

-- | <ul>
--   <li><i>Required</i> The base path name that callers of the API must
--   provide as part of the URL after the domain name. This value must be
--   unique for all of the mappings across a single API. Specify '(none)'
--   if you do not want callers to specify any base path name after the
--   domain name.</li>
--   </ul>
getBasePathMapping_basePath :: Lens' GetBasePathMapping Text

-- | Represents the base path that callers of the API must provide as part
--   of the URL after the domain name.
--   
--   A custom domain name plus a <tt>BasePathMapping</tt> specification
--   identifies a deployed RestApi in a given stage of the owner Account.
--   
--   <a>Use Custom Domain Names</a>
--   
--   <i>See:</i> <a>newBasePathMapping</a> smart constructor.
data BasePathMapping
BasePathMapping' :: Maybe Text -> Maybe Text -> Maybe Text -> BasePathMapping

-- | The name of the associated stage.
[$sel:stage:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
[$sel:basePath:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | The string identifier of the associated RestApi.
[$sel:restApiId:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | Create a value of <a>BasePathMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:BasePathMapping'</a>, <a>basePathMapping_stage</a> - The
--   name of the associated stage.
--   
--   <a>$sel:basePath:BasePathMapping'</a>, <a>basePathMapping_basePath</a>
--   - The base path name that callers of the API must provide as part of
--   the URL after the domain name.
--   
--   <a>$sel:restApiId:BasePathMapping'</a>,
--   <a>basePathMapping_restApiId</a> - The string identifier of the
--   associated RestApi.
newBasePathMapping :: BasePathMapping

-- | The name of the associated stage.
basePathMapping_stage :: Lens' BasePathMapping (Maybe Text)

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
basePathMapping_basePath :: Lens' BasePathMapping (Maybe Text)

-- | The string identifier of the associated RestApi.
basePathMapping_restApiId :: Lens' BasePathMapping (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.GetBasePathMapping.GetBasePathMapping
instance GHC.Show.Show Amazonka.APIGateway.GetBasePathMapping.GetBasePathMapping
instance GHC.Read.Read Amazonka.APIGateway.GetBasePathMapping.GetBasePathMapping
instance GHC.Classes.Eq Amazonka.APIGateway.GetBasePathMapping.GetBasePathMapping
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetBasePathMapping.GetBasePathMapping
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetBasePathMapping.GetBasePathMapping
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetBasePathMapping.GetBasePathMapping
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetBasePathMapping.GetBasePathMapping
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetBasePathMapping.GetBasePathMapping
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetBasePathMapping.GetBasePathMapping


-- | Describe an existing Authorizers resource.
--   
--   <a>AWS CLI</a>
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetAuthorizers

-- | Request to describe an existing Authorizers resource.
--   
--   <i>See:</i> <a>newGetAuthorizers</a> smart constructor.
data GetAuthorizers
GetAuthorizers' :: Maybe Int -> Maybe Text -> Text -> GetAuthorizers

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetAuthorizers'] :: GetAuthorizers -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetAuthorizers'] :: GetAuthorizers -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetAuthorizers'] :: GetAuthorizers -> Text

-- | Create a value of <a>GetAuthorizers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetAuthorizers'</a>, <a>getAuthorizers_limit</a> - The
--   maximum number of returned results per page. The default value is 25
--   and the maximum value is 500.
--   
--   <a>$sel:position:GetAuthorizers'</a>, <a>getAuthorizers_position</a> -
--   The current pagination position in the paged result set.
--   
--   <a>$sel:restApiId:GetAuthorizers'</a>, <a>getAuthorizers_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
newGetAuthorizers :: Text -> GetAuthorizers

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getAuthorizers_limit :: Lens' GetAuthorizers (Maybe Int)

-- | The current pagination position in the paged result set.
getAuthorizers_position :: Lens' GetAuthorizers (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getAuthorizers_restApiId :: Lens' GetAuthorizers Text

-- | Represents a collection of Authorizer resources.
--   
--   <a>Use Lambda Function as Authorizer</a> <a>Use Cognito User Pool as
--   Authorizer</a>
--   
--   <i>See:</i> <a>newGetAuthorizersResponse</a> smart constructor.
data GetAuthorizersResponse
GetAuthorizersResponse' :: Maybe [Authorizer] -> Maybe Text -> Int -> GetAuthorizersResponse

-- | The current page of elements from this collection.
[$sel:items:GetAuthorizersResponse'] :: GetAuthorizersResponse -> Maybe [Authorizer]
[$sel:position:GetAuthorizersResponse'] :: GetAuthorizersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetAuthorizersResponse'] :: GetAuthorizersResponse -> Int

-- | Create a value of <a>GetAuthorizersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetAuthorizersResponse'</a>,
--   <a>getAuthorizersResponse_items</a> - The current page of elements
--   from this collection.
--   
--   <a>$sel:position:GetAuthorizers'</a>,
--   <a>getAuthorizersResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetAuthorizersResponse'</a>,
--   <a>getAuthorizersResponse_httpStatus</a> - The response's http status
--   code.
newGetAuthorizersResponse :: Int -> GetAuthorizersResponse

-- | The current page of elements from this collection.
getAuthorizersResponse_items :: Lens' GetAuthorizersResponse (Maybe [Authorizer])

-- | Undocumented member.
getAuthorizersResponse_position :: Lens' GetAuthorizersResponse (Maybe Text)

-- | The response's http status code.
getAuthorizersResponse_httpStatus :: Lens' GetAuthorizersResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetAuthorizers.GetAuthorizers
instance GHC.Show.Show Amazonka.APIGateway.GetAuthorizers.GetAuthorizers
instance GHC.Read.Read Amazonka.APIGateway.GetAuthorizers.GetAuthorizers
instance GHC.Classes.Eq Amazonka.APIGateway.GetAuthorizers.GetAuthorizers
instance GHC.Generics.Generic Amazonka.APIGateway.GetAuthorizers.GetAuthorizersResponse
instance GHC.Show.Show Amazonka.APIGateway.GetAuthorizers.GetAuthorizersResponse
instance GHC.Read.Read Amazonka.APIGateway.GetAuthorizers.GetAuthorizersResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetAuthorizers.GetAuthorizersResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetAuthorizers.GetAuthorizers
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetAuthorizers.GetAuthorizersResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetAuthorizers.GetAuthorizers
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetAuthorizers.GetAuthorizers
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetAuthorizers.GetAuthorizers
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetAuthorizers.GetAuthorizers
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetAuthorizers.GetAuthorizers
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetAuthorizers.GetAuthorizers


-- | Describe an existing Authorizer resource.
--   
--   <a>AWS CLI</a>
module Amazonka.APIGateway.GetAuthorizer

-- | Request to describe an existing Authorizer resource.
--   
--   <i>See:</i> <a>newGetAuthorizer</a> smart constructor.
data GetAuthorizer
GetAuthorizer' :: Text -> Text -> GetAuthorizer

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:GetAuthorizer'] :: GetAuthorizer -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Authorizer resource.</li>
--   </ul>
[$sel:authorizerId:GetAuthorizer'] :: GetAuthorizer -> Text

-- | Create a value of <a>GetAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetAuthorizer'</a>, <a>getAuthorizer_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:authorizerId:GetAuthorizer'</a>,
--   <a>getAuthorizer_authorizerId</a> - [Required] The identifier of the
--   Authorizer resource.
newGetAuthorizer :: Text -> Text -> GetAuthorizer

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getAuthorizer_restApiId :: Lens' GetAuthorizer Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Authorizer resource.</li>
--   </ul>
getAuthorizer_authorizerId :: Lens' GetAuthorizer Text

-- | Represents an authorization layer for methods. If enabled on a method,
--   API Gateway will activate the authorizer when a client calls the
--   method.
--   
--   <a>Use Lambda Function as Authorizer</a> <a>Use Cognito User Pool as
--   Authorizer</a>
--   
--   <i>See:</i> <a>newAuthorizer</a> smart constructor.
data Authorizer
Authorizer' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe AuthorizerType -> Maybe Text -> Maybe Text -> Authorizer

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
[$sel:authorizerUri:Authorizer'] :: Authorizer -> Maybe Text

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
[$sel:identityValidationExpression:Authorizer'] :: Authorizer -> Maybe Text

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
[$sel:providerARNs:Authorizer'] :: Authorizer -> Maybe [Text]

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
[$sel:name:Authorizer'] :: Authorizer -> Maybe Text

-- | The identifier for the authorizer resource.
[$sel:id:Authorizer'] :: Authorizer -> Maybe Text

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
[$sel:authorizerResultTtlInSeconds:Authorizer'] :: Authorizer -> Maybe Int

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
[$sel:authType:Authorizer'] :: Authorizer -> Maybe Text

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
[$sel:type':Authorizer'] :: Authorizer -> Maybe AuthorizerType

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
[$sel:identitySource:Authorizer'] :: Authorizer -> Maybe Text

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
[$sel:authorizerCredentials:Authorizer'] :: Authorizer -> Maybe Text

-- | Create a value of <a>Authorizer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerUri:Authorizer'</a>, <a>authorizer_authorizerUri</a>
--   - Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
--   
--   <a>$sel:identityValidationExpression:Authorizer'</a>,
--   <a>authorizer_identityValidationExpression</a> - A validation
--   expression for the incoming identity token. For <tt>TOKEN</tt>
--   authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
--   
--   <a>$sel:providerARNs:Authorizer'</a>, <a>authorizer_providerARNs</a> -
--   A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
--   
--   <a>$sel:name:Authorizer'</a>, <a>authorizer_name</a> - [Required] The
--   name of the authorizer.
--   
--   <a>$sel:id:Authorizer'</a>, <a>authorizer_id</a> - The identifier for
--   the authorizer resource.
--   
--   <a>$sel:authorizerResultTtlInSeconds:Authorizer'</a>,
--   <a>authorizer_authorizerResultTtlInSeconds</a> - The TTL in seconds of
--   cached authorizer results. If it equals 0, authorization caching is
--   disabled. If it is greater than 0, API Gateway will cache authorizer
--   responses. If this field is not set, the default value is 300. The
--   maximum value is 3600, or 1 hour.
--   
--   <a>$sel:authType:Authorizer'</a>, <a>authorizer_authType</a> -
--   Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
--   
--   <a>$sel:type':Authorizer'</a>, <a>authorizer_type</a> - The authorizer
--   type. Valid values are <tt>TOKEN</tt> for a Lambda function using a
--   single authorization token submitted in a custom header,
--   <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
--   
--   <a>$sel:identitySource:Authorizer'</a>,
--   <a>authorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
--   
--   <a>$sel:authorizerCredentials:Authorizer'</a>,
--   <a>authorizer_authorizerCredentials</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, specify null.
newAuthorizer :: Authorizer

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
authorizer_authorizerUri :: Lens' Authorizer (Maybe Text)

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
authorizer_identityValidationExpression :: Lens' Authorizer (Maybe Text)

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
authorizer_providerARNs :: Lens' Authorizer (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
authorizer_name :: Lens' Authorizer (Maybe Text)

-- | The identifier for the authorizer resource.
authorizer_id :: Lens' Authorizer (Maybe Text)

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
authorizer_authorizerResultTtlInSeconds :: Lens' Authorizer (Maybe Int)

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
authorizer_authType :: Lens' Authorizer (Maybe Text)

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
authorizer_type :: Lens' Authorizer (Maybe AuthorizerType)

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
authorizer_identitySource :: Lens' Authorizer (Maybe Text)

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
authorizer_authorizerCredentials :: Lens' Authorizer (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.GetAuthorizer.GetAuthorizer
instance GHC.Show.Show Amazonka.APIGateway.GetAuthorizer.GetAuthorizer
instance GHC.Read.Read Amazonka.APIGateway.GetAuthorizer.GetAuthorizer
instance GHC.Classes.Eq Amazonka.APIGateway.GetAuthorizer.GetAuthorizer
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetAuthorizer.GetAuthorizer
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetAuthorizer.GetAuthorizer
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetAuthorizer.GetAuthorizer
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetAuthorizer.GetAuthorizer
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetAuthorizer.GetAuthorizer
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetAuthorizer.GetAuthorizer


-- | Gets information about the current ApiKeys resource.
--   
--   This operation returns paginated results.
module Amazonka.APIGateway.GetApiKeys

-- | A request to get information about the current ApiKeys resource.
--   
--   <i>See:</i> <a>newGetApiKeys</a> smart constructor.
data GetApiKeys
GetApiKeys' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> GetApiKeys

-- | A boolean flag to specify whether (<tt>true</tt>) or not
--   (<tt>false</tt>) the result contains key values.
[$sel:includeValues:GetApiKeys'] :: GetApiKeys -> Maybe Bool

-- | The identifier of a customer in AWS Marketplace or an external system,
--   such as a developer portal.
[$sel:customerId:GetApiKeys'] :: GetApiKeys -> Maybe Text

-- | The name of queried API keys.
[$sel:nameQuery:GetApiKeys'] :: GetApiKeys -> Maybe Text

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
[$sel:limit:GetApiKeys'] :: GetApiKeys -> Maybe Int

-- | The current pagination position in the paged result set.
[$sel:position:GetApiKeys'] :: GetApiKeys -> Maybe Text

-- | Create a value of <a>GetApiKeys</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeValues:GetApiKeys'</a>, <a>getApiKeys_includeValues</a>
--   - A boolean flag to specify whether (<tt>true</tt>) or not
--   (<tt>false</tt>) the result contains key values.
--   
--   <a>$sel:customerId:GetApiKeys'</a>, <a>getApiKeys_customerId</a> - The
--   identifier of a customer in AWS Marketplace or an external system,
--   such as a developer portal.
--   
--   <a>$sel:nameQuery:GetApiKeys'</a>, <a>getApiKeys_nameQuery</a> - The
--   name of queried API keys.
--   
--   <a>$sel:limit:GetApiKeys'</a>, <a>getApiKeys_limit</a> - The maximum
--   number of returned results per page. The default value is 25 and the
--   maximum value is 500.
--   
--   <a>$sel:position:GetApiKeys'</a>, <a>getApiKeys_position</a> - The
--   current pagination position in the paged result set.
newGetApiKeys :: GetApiKeys

-- | A boolean flag to specify whether (<tt>true</tt>) or not
--   (<tt>false</tt>) the result contains key values.
getApiKeys_includeValues :: Lens' GetApiKeys (Maybe Bool)

-- | The identifier of a customer in AWS Marketplace or an external system,
--   such as a developer portal.
getApiKeys_customerId :: Lens' GetApiKeys (Maybe Text)

-- | The name of queried API keys.
getApiKeys_nameQuery :: Lens' GetApiKeys (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getApiKeys_limit :: Lens' GetApiKeys (Maybe Int)

-- | The current pagination position in the paged result set.
getApiKeys_position :: Lens' GetApiKeys (Maybe Text)

-- | Represents a collection of API keys as represented by an ApiKeys
--   resource.
--   
--   <a>Use API Keys</a>
--   
--   <i>See:</i> <a>newGetApiKeysResponse</a> smart constructor.
data GetApiKeysResponse
GetApiKeysResponse' :: Maybe [ApiKey] -> Maybe [Text] -> Maybe Text -> Int -> GetApiKeysResponse

-- | The current page of elements from this collection.
[$sel:items:GetApiKeysResponse'] :: GetApiKeysResponse -> Maybe [ApiKey]

-- | A list of warning messages logged during the import of API keys when
--   the <tt>failOnWarnings</tt> option is set to true.
[$sel:warnings:GetApiKeysResponse'] :: GetApiKeysResponse -> Maybe [Text]
[$sel:position:GetApiKeysResponse'] :: GetApiKeysResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetApiKeysResponse'] :: GetApiKeysResponse -> Int

-- | Create a value of <a>GetApiKeysResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetApiKeysResponse'</a>, <a>getApiKeysResponse_items</a>
--   - The current page of elements from this collection.
--   
--   <a>$sel:warnings:GetApiKeysResponse'</a>,
--   <a>getApiKeysResponse_warnings</a> - A list of warning messages logged
--   during the import of API keys when the <tt>failOnWarnings</tt> option
--   is set to true.
--   
--   <a>$sel:position:GetApiKeys'</a>, <a>getApiKeysResponse_position</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:GetApiKeysResponse'</a>,
--   <a>getApiKeysResponse_httpStatus</a> - The response's http status
--   code.
newGetApiKeysResponse :: Int -> GetApiKeysResponse

-- | The current page of elements from this collection.
getApiKeysResponse_items :: Lens' GetApiKeysResponse (Maybe [ApiKey])

-- | A list of warning messages logged during the import of API keys when
--   the <tt>failOnWarnings</tt> option is set to true.
getApiKeysResponse_warnings :: Lens' GetApiKeysResponse (Maybe [Text])

-- | Undocumented member.
getApiKeysResponse_position :: Lens' GetApiKeysResponse (Maybe Text)

-- | The response's http status code.
getApiKeysResponse_httpStatus :: Lens' GetApiKeysResponse Int
instance GHC.Generics.Generic Amazonka.APIGateway.GetApiKeys.GetApiKeys
instance GHC.Show.Show Amazonka.APIGateway.GetApiKeys.GetApiKeys
instance GHC.Read.Read Amazonka.APIGateway.GetApiKeys.GetApiKeys
instance GHC.Classes.Eq Amazonka.APIGateway.GetApiKeys.GetApiKeys
instance GHC.Generics.Generic Amazonka.APIGateway.GetApiKeys.GetApiKeysResponse
instance GHC.Show.Show Amazonka.APIGateway.GetApiKeys.GetApiKeysResponse
instance GHC.Read.Read Amazonka.APIGateway.GetApiKeys.GetApiKeysResponse
instance GHC.Classes.Eq Amazonka.APIGateway.GetApiKeys.GetApiKeysResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetApiKeys.GetApiKeys
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetApiKeys.GetApiKeysResponse
instance Amazonka.Pager.AWSPager Amazonka.APIGateway.GetApiKeys.GetApiKeys
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetApiKeys.GetApiKeys
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetApiKeys.GetApiKeys
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetApiKeys.GetApiKeys
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetApiKeys.GetApiKeys
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetApiKeys.GetApiKeys


-- | Gets information about the current ApiKey resource.
module Amazonka.APIGateway.GetApiKey

-- | A request to get information about the current ApiKey resource.
--   
--   <i>See:</i> <a>newGetApiKey</a> smart constructor.
data GetApiKey
GetApiKey' :: Maybe Bool -> Text -> GetApiKey

-- | A boolean flag to specify whether (<tt>true</tt>) or not
--   (<tt>false</tt>) the result contains the key value.
[$sel:includeValue:GetApiKey'] :: GetApiKey -> Maybe Bool

-- | <ul>
--   <li><i>Required</i> The identifier of the ApiKey resource.</li>
--   </ul>
[$sel:apiKey:GetApiKey'] :: GetApiKey -> Text

-- | Create a value of <a>GetApiKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeValue:GetApiKey'</a>, <a>getApiKey_includeValue</a> - A
--   boolean flag to specify whether (<tt>true</tt>) or not
--   (<tt>false</tt>) the result contains the key value.
--   
--   <a>$sel:apiKey:GetApiKey'</a>, <a>getApiKey_apiKey</a> - [Required]
--   The identifier of the ApiKey resource.
newGetApiKey :: Text -> GetApiKey

-- | A boolean flag to specify whether (<tt>true</tt>) or not
--   (<tt>false</tt>) the result contains the key value.
getApiKey_includeValue :: Lens' GetApiKey (Maybe Bool)

-- | <ul>
--   <li><i>Required</i> The identifier of the ApiKey resource.</li>
--   </ul>
getApiKey_apiKey :: Lens' GetApiKey Text

-- | A resource that can be distributed to callers for executing Method
--   resources that require an API key. API keys can be mapped to any Stage
--   on any RestApi, which indicates that the callers with the API key can
--   make requests to that stage.
--   
--   <a>Use API Keys</a>
--   
--   <i>See:</i> <a>newApiKey</a> smart constructor.
data ApiKey
ApiKey' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ApiKey

-- | Specifies whether the API Key can be used by callers.
[$sel:enabled:ApiKey'] :: ApiKey -> Maybe Bool

-- | The value of the API Key.
[$sel:value:ApiKey'] :: ApiKey -> Maybe Text

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
[$sel:customerId:ApiKey'] :: ApiKey -> Maybe Text

-- | The timestamp when the API Key was created.
[$sel:createdDate:ApiKey'] :: ApiKey -> Maybe POSIX

-- | The name of the API Key.
[$sel:name:ApiKey'] :: ApiKey -> Maybe Text

-- | The identifier of the API Key.
[$sel:id:ApiKey'] :: ApiKey -> Maybe Text

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
[$sel:stageKeys:ApiKey'] :: ApiKey -> Maybe [Text]

-- | The timestamp when the API Key was last updated.
[$sel:lastUpdatedDate:ApiKey'] :: ApiKey -> Maybe POSIX

-- | The description of the API Key.
[$sel:description:ApiKey'] :: ApiKey -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:ApiKey'] :: ApiKey -> Maybe (HashMap Text Text)

-- | Create a value of <a>ApiKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:ApiKey'</a>, <a>apiKey_enabled</a> - Specifies whether
--   the API Key can be used by callers.
--   
--   <a>$sel:value:ApiKey'</a>, <a>apiKey_value</a> - The value of the API
--   Key.
--   
--   <a>$sel:customerId:ApiKey'</a>, <a>apiKey_customerId</a> - An AWS
--   Marketplace customer identifier , when integrating with the AWS SaaS
--   Marketplace.
--   
--   <a>$sel:createdDate:ApiKey'</a>, <a>apiKey_createdDate</a> - The
--   timestamp when the API Key was created.
--   
--   <a>$sel:name:ApiKey'</a>, <a>apiKey_name</a> - The name of the API
--   Key.
--   
--   <a>$sel:id:ApiKey'</a>, <a>apiKey_id</a> - The identifier of the API
--   Key.
--   
--   <a>$sel:stageKeys:ApiKey'</a>, <a>apiKey_stageKeys</a> - A list of
--   Stage resources that are associated with the ApiKey resource.
--   
--   <a>$sel:lastUpdatedDate:ApiKey'</a>, <a>apiKey_lastUpdatedDate</a> -
--   The timestamp when the API Key was last updated.
--   
--   <a>$sel:description:ApiKey'</a>, <a>apiKey_description</a> - The
--   description of the API Key.
--   
--   <a>$sel:tags:ApiKey'</a>, <a>apiKey_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newApiKey :: ApiKey

-- | Specifies whether the API Key can be used by callers.
apiKey_enabled :: Lens' ApiKey (Maybe Bool)

-- | The value of the API Key.
apiKey_value :: Lens' ApiKey (Maybe Text)

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
apiKey_customerId :: Lens' ApiKey (Maybe Text)

-- | The timestamp when the API Key was created.
apiKey_createdDate :: Lens' ApiKey (Maybe UTCTime)

-- | The name of the API Key.
apiKey_name :: Lens' ApiKey (Maybe Text)

-- | The identifier of the API Key.
apiKey_id :: Lens' ApiKey (Maybe Text)

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
apiKey_stageKeys :: Lens' ApiKey (Maybe [Text])

-- | The timestamp when the API Key was last updated.
apiKey_lastUpdatedDate :: Lens' ApiKey (Maybe UTCTime)

-- | The description of the API Key.
apiKey_description :: Lens' ApiKey (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
apiKey_tags :: Lens' ApiKey (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.GetApiKey.GetApiKey
instance GHC.Show.Show Amazonka.APIGateway.GetApiKey.GetApiKey
instance GHC.Read.Read Amazonka.APIGateway.GetApiKey.GetApiKey
instance GHC.Classes.Eq Amazonka.APIGateway.GetApiKey.GetApiKey
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetApiKey.GetApiKey
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetApiKey.GetApiKey
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetApiKey.GetApiKey
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetApiKey.GetApiKey
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetApiKey.GetApiKey
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetApiKey.GetApiKey


-- | Gets information about the current Account resource.
module Amazonka.APIGateway.GetAccount

-- | Requests API Gateway to get information about the current Account
--   resource.
--   
--   <i>See:</i> <a>newGetAccount</a> smart constructor.
data GetAccount
GetAccount' :: GetAccount

-- | Create a value of <a>GetAccount</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetAccount :: GetAccount

-- | Represents an AWS account that is associated with API Gateway.
--   
--   To view the account info, call <tt>GET</tt> on this resource.
--   
--   <h4>Error Codes</h4>
--   
--   The following exception may be thrown when the request fails.
--   
--   <ul>
--   <li>UnauthorizedException</li>
--   <li>NotFoundException</li>
--   <li>TooManyRequestsException</li>
--   </ul>
--   
--   For detailed error code information, including the corresponding HTTP
--   Status Codes, see <a>API Gateway Error Codes</a>
--   
--   <h4>Example: Get the information about an account.</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /account HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160531T184618Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/account-apigateway-{rel}.html", "name": "account", "templated": true }, "self": { "href": "/account" }, "account:update": { "href": "/account" } }, "cloudwatchRoleArn": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "throttleSettings": { "rateLimit": 500, "burstLimit": 1000 } }
--   </pre>
--   
--   In addition to making the REST API call directly, you can use the AWS
--   CLI and an AWS SDK to access this resource.
--   
--   <a>API Gateway Limits</a> <a>Developer Guide</a>, <a>AWS CLI</a>
--   
--   <i>See:</i> <a>newAccount</a> smart constructor.
data Account
Account' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe ThrottleSettings -> Account

-- | The version of the API keys used for the account.
[$sel:apiKeyVersion:Account'] :: Account -> Maybe Text

-- | The ARN of an Amazon CloudWatch role for the current Account.
[$sel:cloudwatchRoleArn:Account'] :: Account -> Maybe Text

-- | A list of features supported for the account. When usage plans are
--   enabled, the features list will include an entry of
--   <tt>"UsagePlans"</tt>.
[$sel:features:Account'] :: Account -> Maybe [Text]

-- | Specifies the API request limits configured for the current Account.
[$sel:throttleSettings:Account'] :: Account -> Maybe ThrottleSettings

-- | Create a value of <a>Account</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyVersion:Account'</a>, <a>account_apiKeyVersion</a> - The
--   version of the API keys used for the account.
--   
--   <a>$sel:cloudwatchRoleArn:Account'</a>,
--   <a>account_cloudwatchRoleArn</a> - The ARN of an Amazon CloudWatch
--   role for the current Account.
--   
--   <a>$sel:features:Account'</a>, <a>account_features</a> - A list of
--   features supported for the account. When usage plans are enabled, the
--   features list will include an entry of <tt>"UsagePlans"</tt>.
--   
--   <a>$sel:throttleSettings:Account'</a>, <a>account_throttleSettings</a>
--   - Specifies the API request limits configured for the current Account.
newAccount :: Account

-- | The version of the API keys used for the account.
account_apiKeyVersion :: Lens' Account (Maybe Text)

-- | The ARN of an Amazon CloudWatch role for the current Account.
account_cloudwatchRoleArn :: Lens' Account (Maybe Text)

-- | A list of features supported for the account. When usage plans are
--   enabled, the features list will include an entry of
--   <tt>"UsagePlans"</tt>.
account_features :: Lens' Account (Maybe [Text])

-- | Specifies the API request limits configured for the current Account.
account_throttleSettings :: Lens' Account (Maybe ThrottleSettings)
instance GHC.Generics.Generic Amazonka.APIGateway.GetAccount.GetAccount
instance GHC.Show.Show Amazonka.APIGateway.GetAccount.GetAccount
instance GHC.Read.Read Amazonka.APIGateway.GetAccount.GetAccount
instance GHC.Classes.Eq Amazonka.APIGateway.GetAccount.GetAccount
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GetAccount.GetAccount
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GetAccount.GetAccount
instance Control.DeepSeq.NFData Amazonka.APIGateway.GetAccount.GetAccount
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GetAccount.GetAccount
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GetAccount.GetAccount
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GetAccount.GetAccount


-- | Generates a ClientCertificate resource.
module Amazonka.APIGateway.GenerateClientCertificate

-- | A request to generate a ClientCertificate resource.
--   
--   <i>See:</i> <a>newGenerateClientCertificate</a> smart constructor.
data GenerateClientCertificate
GenerateClientCertificate' :: Maybe Text -> Maybe (HashMap Text Text) -> GenerateClientCertificate

-- | The description of the ClientCertificate.
[$sel:description:GenerateClientCertificate'] :: GenerateClientCertificate -> Maybe Text

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
[$sel:tags:GenerateClientCertificate'] :: GenerateClientCertificate -> Maybe (HashMap Text Text)

-- | Create a value of <a>GenerateClientCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:GenerateClientCertificate'</a>,
--   <a>generateClientCertificate_description</a> - The description of the
--   ClientCertificate.
--   
--   <a>$sel:tags:GenerateClientCertificate'</a>,
--   <a>generateClientCertificate_tags</a> - The key-value map of strings.
--   The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to
--   128 characters and must not start with <tt>aws:</tt>. The tag value
--   can be up to 256 characters.
newGenerateClientCertificate :: GenerateClientCertificate

-- | The description of the ClientCertificate.
generateClientCertificate_description :: Lens' GenerateClientCertificate (Maybe Text)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
generateClientCertificate_tags :: Lens' GenerateClientCertificate (Maybe (HashMap Text Text))

-- | Represents a client certificate used to configure client-side SSL
--   authentication while sending requests to the integration endpoint.
--   
--   Client certificates are used to authenticate an API by the backend
--   server. To authenticate an API client (or user), use IAM roles and
--   policies, a custom Authorizer or an Amazon Cognito user pool.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newClientCertificate</a> smart constructor.
data ClientCertificate
ClientCertificate' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ClientCertificate

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
[$sel:pemEncodedCertificate:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The identifier of the client certificate.
[$sel:clientCertificateId:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The timestamp when the client certificate was created.
[$sel:createdDate:ClientCertificate'] :: ClientCertificate -> Maybe POSIX

-- | The timestamp when the client certificate will expire.
[$sel:expirationDate:ClientCertificate'] :: ClientCertificate -> Maybe POSIX

-- | The description of the client certificate.
[$sel:description:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:ClientCertificate'] :: ClientCertificate -> Maybe (HashMap Text Text)

-- | Create a value of <a>ClientCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pemEncodedCertificate:ClientCertificate'</a>,
--   <a>clientCertificate_pemEncodedCertificate</a> - The PEM-encoded
--   public key of the client certificate, which can be used to configure
--   certificate authentication in the integration endpoint .
--   
--   <a>$sel:clientCertificateId:ClientCertificate'</a>,
--   <a>clientCertificate_clientCertificateId</a> - The identifier of the
--   client certificate.
--   
--   <a>$sel:createdDate:ClientCertificate'</a>,
--   <a>clientCertificate_createdDate</a> - The timestamp when the client
--   certificate was created.
--   
--   <a>$sel:expirationDate:ClientCertificate'</a>,
--   <a>clientCertificate_expirationDate</a> - The timestamp when the
--   client certificate will expire.
--   
--   <a>$sel:description:ClientCertificate'</a>,
--   <a>clientCertificate_description</a> - The description of the client
--   certificate.
--   
--   <a>$sel:tags:ClientCertificate'</a>, <a>clientCertificate_tags</a> -
--   The collection of tags. Each tag element is associated with a given
--   resource.
newClientCertificate :: ClientCertificate

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
clientCertificate_pemEncodedCertificate :: Lens' ClientCertificate (Maybe Text)

-- | The identifier of the client certificate.
clientCertificate_clientCertificateId :: Lens' ClientCertificate (Maybe Text)

-- | The timestamp when the client certificate was created.
clientCertificate_createdDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The timestamp when the client certificate will expire.
clientCertificate_expirationDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The description of the client certificate.
clientCertificate_description :: Lens' ClientCertificate (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
clientCertificate_tags :: Lens' ClientCertificate (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.GenerateClientCertificate.GenerateClientCertificate
instance GHC.Show.Show Amazonka.APIGateway.GenerateClientCertificate.GenerateClientCertificate
instance GHC.Read.Read Amazonka.APIGateway.GenerateClientCertificate.GenerateClientCertificate
instance GHC.Classes.Eq Amazonka.APIGateway.GenerateClientCertificate.GenerateClientCertificate
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.GenerateClientCertificate.GenerateClientCertificate
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.GenerateClientCertificate.GenerateClientCertificate
instance Control.DeepSeq.NFData Amazonka.APIGateway.GenerateClientCertificate.GenerateClientCertificate
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.GenerateClientCertificate.GenerateClientCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.GenerateClientCertificate.GenerateClientCertificate
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.GenerateClientCertificate.GenerateClientCertificate
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.GenerateClientCertificate.GenerateClientCertificate


-- | Flushes a stage's cache.
module Amazonka.APIGateway.FlushStageCache

-- | Requests API Gateway to flush a stage's cache.
--   
--   <i>See:</i> <a>newFlushStageCache</a> smart constructor.
data FlushStageCache
FlushStageCache' :: Text -> Text -> FlushStageCache

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:FlushStageCache'] :: FlushStageCache -> Text

-- | <ul>
--   <li><i>Required</i> The name of the stage to flush its cache.</li>
--   </ul>
[$sel:stageName:FlushStageCache'] :: FlushStageCache -> Text

-- | Create a value of <a>FlushStageCache</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:FlushStageCache'</a>,
--   <a>flushStageCache_restApiId</a> - [Required] The string identifier of
--   the associated RestApi.
--   
--   <a>$sel:stageName:FlushStageCache'</a>,
--   <a>flushStageCache_stageName</a> - [Required] The name of the stage to
--   flush its cache.
newFlushStageCache :: Text -> Text -> FlushStageCache

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
flushStageCache_restApiId :: Lens' FlushStageCache Text

-- | <ul>
--   <li><i>Required</i> The name of the stage to flush its cache.</li>
--   </ul>
flushStageCache_stageName :: Lens' FlushStageCache Text

-- | <i>See:</i> <a>newFlushStageCacheResponse</a> smart constructor.
data FlushStageCacheResponse
FlushStageCacheResponse' :: FlushStageCacheResponse

-- | Create a value of <a>FlushStageCacheResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newFlushStageCacheResponse :: FlushStageCacheResponse
instance GHC.Generics.Generic Amazonka.APIGateway.FlushStageCache.FlushStageCache
instance GHC.Show.Show Amazonka.APIGateway.FlushStageCache.FlushStageCache
instance GHC.Read.Read Amazonka.APIGateway.FlushStageCache.FlushStageCache
instance GHC.Classes.Eq Amazonka.APIGateway.FlushStageCache.FlushStageCache
instance GHC.Generics.Generic Amazonka.APIGateway.FlushStageCache.FlushStageCacheResponse
instance GHC.Show.Show Amazonka.APIGateway.FlushStageCache.FlushStageCacheResponse
instance GHC.Read.Read Amazonka.APIGateway.FlushStageCache.FlushStageCacheResponse
instance GHC.Classes.Eq Amazonka.APIGateway.FlushStageCache.FlushStageCacheResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.FlushStageCache.FlushStageCache
instance Control.DeepSeq.NFData Amazonka.APIGateway.FlushStageCache.FlushStageCacheResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.FlushStageCache.FlushStageCache
instance Control.DeepSeq.NFData Amazonka.APIGateway.FlushStageCache.FlushStageCache
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.FlushStageCache.FlushStageCache
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.FlushStageCache.FlushStageCache
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.FlushStageCache.FlushStageCache


-- | Flushes all authorizer cache entries on a stage.
module Amazonka.APIGateway.FlushStageAuthorizersCache

-- | Request to flush authorizer cache entries on a specified stage.
--   
--   <i>See:</i> <a>newFlushStageAuthorizersCache</a> smart constructor.
data FlushStageAuthorizersCache
FlushStageAuthorizersCache' :: Text -> Text -> FlushStageAuthorizersCache

-- | The string identifier of the associated RestApi.
[$sel:restApiId:FlushStageAuthorizersCache'] :: FlushStageAuthorizersCache -> Text

-- | The name of the stage to flush.
[$sel:stageName:FlushStageAuthorizersCache'] :: FlushStageAuthorizersCache -> Text

-- | Create a value of <a>FlushStageAuthorizersCache</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:FlushStageAuthorizersCache'</a>,
--   <a>flushStageAuthorizersCache_restApiId</a> - The string identifier of
--   the associated RestApi.
--   
--   <a>$sel:stageName:FlushStageAuthorizersCache'</a>,
--   <a>flushStageAuthorizersCache_stageName</a> - The name of the stage to
--   flush.
newFlushStageAuthorizersCache :: Text -> Text -> FlushStageAuthorizersCache

-- | The string identifier of the associated RestApi.
flushStageAuthorizersCache_restApiId :: Lens' FlushStageAuthorizersCache Text

-- | The name of the stage to flush.
flushStageAuthorizersCache_stageName :: Lens' FlushStageAuthorizersCache Text

-- | <i>See:</i> <a>newFlushStageAuthorizersCacheResponse</a> smart
--   constructor.
data FlushStageAuthorizersCacheResponse
FlushStageAuthorizersCacheResponse' :: FlushStageAuthorizersCacheResponse

-- | Create a value of <a>FlushStageAuthorizersCacheResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newFlushStageAuthorizersCacheResponse :: FlushStageAuthorizersCacheResponse
instance GHC.Generics.Generic Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCache
instance GHC.Show.Show Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCache
instance GHC.Read.Read Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCache
instance GHC.Classes.Eq Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCache
instance GHC.Generics.Generic Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCacheResponse
instance GHC.Show.Show Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCacheResponse
instance GHC.Read.Read Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCacheResponse
instance GHC.Classes.Eq Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCacheResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCache
instance Control.DeepSeq.NFData Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCacheResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCache
instance Control.DeepSeq.NFData Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCache
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCache
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCache
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.FlushStageAuthorizersCache.FlushStageAuthorizersCache


-- | Deletes an existing VpcLink of a specified identifier.
module Amazonka.APIGateway.DeleteVpcLink

-- | Deletes an existing VpcLink of a specified identifier.
--   
--   <i>See:</i> <a>newDeleteVpcLink</a> smart constructor.
data DeleteVpcLink
DeleteVpcLink' :: Text -> DeleteVpcLink

-- | <ul>
--   <li><i>Required</i> The identifier of the VpcLink. It is used in an
--   Integration to reference this VpcLink.</li>
--   </ul>
[$sel:vpcLinkId:DeleteVpcLink'] :: DeleteVpcLink -> Text

-- | Create a value of <a>DeleteVpcLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcLinkId:DeleteVpcLink'</a>, <a>deleteVpcLink_vpcLinkId</a> -
--   [Required] The identifier of the VpcLink. It is used in an Integration
--   to reference this VpcLink.
newDeleteVpcLink :: Text -> DeleteVpcLink

-- | <ul>
--   <li><i>Required</i> The identifier of the VpcLink. It is used in an
--   Integration to reference this VpcLink.</li>
--   </ul>
deleteVpcLink_vpcLinkId :: Lens' DeleteVpcLink Text

-- | <i>See:</i> <a>newDeleteVpcLinkResponse</a> smart constructor.
data DeleteVpcLinkResponse
DeleteVpcLinkResponse' :: DeleteVpcLinkResponse

-- | Create a value of <a>DeleteVpcLinkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteVpcLinkResponse :: DeleteVpcLinkResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLink
instance GHC.Show.Show Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLink
instance GHC.Read.Read Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLink
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLink
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLinkResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLinkResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLinkResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLinkResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLink
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLinkResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLink
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLink
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLink
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLink
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteVpcLink.DeleteVpcLink


-- | Deletes a usage plan key and remove the underlying API key from the
--   associated usage plan.
module Amazonka.APIGateway.DeleteUsagePlanKey

-- | The DELETE request to delete a usage plan key and remove the
--   underlying API key from the associated usage plan.
--   
--   <i>See:</i> <a>newDeleteUsagePlanKey</a> smart constructor.
data DeleteUsagePlanKey
DeleteUsagePlanKey' :: Text -> Text -> DeleteUsagePlanKey

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlan resource representing the
--   usage plan containing the to-be-deleted UsagePlanKey resource
--   representing a plan customer.</li>
--   </ul>
[$sel:usagePlanId:DeleteUsagePlanKey'] :: DeleteUsagePlanKey -> Text

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlanKey resource to be
--   deleted.</li>
--   </ul>
[$sel:keyId:DeleteUsagePlanKey'] :: DeleteUsagePlanKey -> Text

-- | Create a value of <a>DeleteUsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:DeleteUsagePlanKey'</a>,
--   <a>deleteUsagePlanKey_usagePlanId</a> - [Required] The Id of the
--   UsagePlan resource representing the usage plan containing the
--   to-be-deleted UsagePlanKey resource representing a plan customer.
--   
--   <a>$sel:keyId:DeleteUsagePlanKey'</a>, <a>deleteUsagePlanKey_keyId</a>
--   - [Required] The Id of the UsagePlanKey resource to be deleted.
newDeleteUsagePlanKey :: Text -> Text -> DeleteUsagePlanKey

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlan resource representing the
--   usage plan containing the to-be-deleted UsagePlanKey resource
--   representing a plan customer.</li>
--   </ul>
deleteUsagePlanKey_usagePlanId :: Lens' DeleteUsagePlanKey Text

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlanKey resource to be
--   deleted.</li>
--   </ul>
deleteUsagePlanKey_keyId :: Lens' DeleteUsagePlanKey Text

-- | <i>See:</i> <a>newDeleteUsagePlanKeyResponse</a> smart constructor.
data DeleteUsagePlanKeyResponse
DeleteUsagePlanKeyResponse' :: DeleteUsagePlanKeyResponse

-- | Create a value of <a>DeleteUsagePlanKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUsagePlanKeyResponse :: DeleteUsagePlanKeyResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKey
instance GHC.Show.Show Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKey
instance GHC.Read.Read Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKey
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKey
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKeyResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKeyResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKeyResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKeyResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKey
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKeyResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKey
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKey
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKey
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKey
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteUsagePlanKey.DeleteUsagePlanKey


-- | Deletes a usage plan of a given plan Id.
module Amazonka.APIGateway.DeleteUsagePlan

-- | The DELETE request to delete a usage plan of a given plan Id.
--   
--   <i>See:</i> <a>newDeleteUsagePlan</a> smart constructor.
data DeleteUsagePlan
DeleteUsagePlan' :: Text -> DeleteUsagePlan

-- | <ul>
--   <li><i>Required</i> The Id of the to-be-deleted usage plan.</li>
--   </ul>
[$sel:usagePlanId:DeleteUsagePlan'] :: DeleteUsagePlan -> Text

-- | Create a value of <a>DeleteUsagePlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:DeleteUsagePlan'</a>,
--   <a>deleteUsagePlan_usagePlanId</a> - [Required] The Id of the
--   to-be-deleted usage plan.
newDeleteUsagePlan :: Text -> DeleteUsagePlan

-- | <ul>
--   <li><i>Required</i> The Id of the to-be-deleted usage plan.</li>
--   </ul>
deleteUsagePlan_usagePlanId :: Lens' DeleteUsagePlan Text

-- | <i>See:</i> <a>newDeleteUsagePlanResponse</a> smart constructor.
data DeleteUsagePlanResponse
DeleteUsagePlanResponse' :: DeleteUsagePlanResponse

-- | Create a value of <a>DeleteUsagePlanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUsagePlanResponse :: DeleteUsagePlanResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlan
instance GHC.Show.Show Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlan
instance GHC.Read.Read Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlan
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlan
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlanResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlanResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlanResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlanResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlan
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlanResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlan
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlan
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlan
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlan
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteUsagePlan.DeleteUsagePlan


-- | Deletes a Stage resource.
module Amazonka.APIGateway.DeleteStage

-- | Requests API Gateway to delete a Stage resource.
--   
--   <i>See:</i> <a>newDeleteStage</a> smart constructor.
data DeleteStage
DeleteStage' :: Text -> Text -> DeleteStage

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteStage'] :: DeleteStage -> Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage resource to delete.</li>
--   </ul>
[$sel:stageName:DeleteStage'] :: DeleteStage -> Text

-- | Create a value of <a>DeleteStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteStage'</a>, <a>deleteStage_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:DeleteStage'</a>, <a>deleteStage_stageName</a> -
--   [Required] The name of the Stage resource to delete.
newDeleteStage :: Text -> Text -> DeleteStage

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteStage_restApiId :: Lens' DeleteStage Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage resource to delete.</li>
--   </ul>
deleteStage_stageName :: Lens' DeleteStage Text

-- | <i>See:</i> <a>newDeleteStageResponse</a> smart constructor.
data DeleteStageResponse
DeleteStageResponse' :: DeleteStageResponse

-- | Create a value of <a>DeleteStageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteStageResponse :: DeleteStageResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteStage.DeleteStage
instance GHC.Show.Show Amazonka.APIGateway.DeleteStage.DeleteStage
instance GHC.Read.Read Amazonka.APIGateway.DeleteStage.DeleteStage
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteStage.DeleteStage
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteStage.DeleteStageResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteStage.DeleteStageResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteStage.DeleteStageResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteStage.DeleteStageResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteStage.DeleteStage
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteStage.DeleteStageResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteStage.DeleteStage
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteStage.DeleteStage
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteStage.DeleteStage
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteStage.DeleteStage
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteStage.DeleteStage


-- | Deletes the specified API.
module Amazonka.APIGateway.DeleteRestApi

-- | Request to delete the specified API from your collection.
--   
--   <i>See:</i> <a>newDeleteRestApi</a> smart constructor.
data DeleteRestApi
DeleteRestApi' :: Text -> DeleteRestApi

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteRestApi'] :: DeleteRestApi -> Text

-- | Create a value of <a>DeleteRestApi</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteRestApi'</a>, <a>deleteRestApi_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
newDeleteRestApi :: Text -> DeleteRestApi

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteRestApi_restApiId :: Lens' DeleteRestApi Text

-- | <i>See:</i> <a>newDeleteRestApiResponse</a> smart constructor.
data DeleteRestApiResponse
DeleteRestApiResponse' :: DeleteRestApiResponse

-- | Create a value of <a>DeleteRestApiResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRestApiResponse :: DeleteRestApiResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteRestApi.DeleteRestApi
instance GHC.Show.Show Amazonka.APIGateway.DeleteRestApi.DeleteRestApi
instance GHC.Read.Read Amazonka.APIGateway.DeleteRestApi.DeleteRestApi
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteRestApi.DeleteRestApi
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteRestApi.DeleteRestApiResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteRestApi.DeleteRestApiResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteRestApi.DeleteRestApiResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteRestApi.DeleteRestApiResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteRestApi.DeleteRestApi
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteRestApi.DeleteRestApiResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteRestApi.DeleteRestApi
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteRestApi.DeleteRestApi
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteRestApi.DeleteRestApi
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteRestApi.DeleteRestApi
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteRestApi.DeleteRestApi


-- | Deletes a Resource resource.
module Amazonka.APIGateway.DeleteResource

-- | Request to delete a Resource.
--   
--   <i>See:</i> <a>newDeleteResource</a> smart constructor.
data DeleteResource
DeleteResource' :: Text -> Text -> DeleteResource

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteResource'] :: DeleteResource -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Resource resource.</li>
--   </ul>
[$sel:resourceId:DeleteResource'] :: DeleteResource -> Text

-- | Create a value of <a>DeleteResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteResource'</a>, <a>deleteResource_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:DeleteResource'</a>,
--   <a>deleteResource_resourceId</a> - [Required] The identifier of the
--   Resource resource.
newDeleteResource :: Text -> Text -> DeleteResource

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteResource_restApiId :: Lens' DeleteResource Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Resource resource.</li>
--   </ul>
deleteResource_resourceId :: Lens' DeleteResource Text

-- | <i>See:</i> <a>newDeleteResourceResponse</a> smart constructor.
data DeleteResourceResponse
DeleteResourceResponse' :: DeleteResourceResponse

-- | Create a value of <a>DeleteResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteResourceResponse :: DeleteResourceResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteResource.DeleteResource
instance GHC.Show.Show Amazonka.APIGateway.DeleteResource.DeleteResource
instance GHC.Read.Read Amazonka.APIGateway.DeleteResource.DeleteResource
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteResource.DeleteResource
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteResource.DeleteResourceResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteResource.DeleteResourceResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteResource.DeleteResourceResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteResource.DeleteResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteResource.DeleteResource
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteResource.DeleteResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteResource.DeleteResource
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteResource.DeleteResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteResource.DeleteResource
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteResource.DeleteResource
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteResource.DeleteResource


-- | Deletes a RequestValidator of a given RestApi.
module Amazonka.APIGateway.DeleteRequestValidator

-- | Deletes a specified RequestValidator of a given RestApi.
--   
--   <i>See:</i> <a>newDeleteRequestValidator</a> smart constructor.
data DeleteRequestValidator
DeleteRequestValidator' :: Text -> Text -> DeleteRequestValidator

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteRequestValidator'] :: DeleteRequestValidator -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the RequestValidator to be
--   deleted.</li>
--   </ul>
[$sel:requestValidatorId:DeleteRequestValidator'] :: DeleteRequestValidator -> Text

-- | Create a value of <a>DeleteRequestValidator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteRequestValidator'</a>,
--   <a>deleteRequestValidator_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:requestValidatorId:DeleteRequestValidator'</a>,
--   <a>deleteRequestValidator_requestValidatorId</a> - [Required] The
--   identifier of the RequestValidator to be deleted.
newDeleteRequestValidator :: Text -> Text -> DeleteRequestValidator

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteRequestValidator_restApiId :: Lens' DeleteRequestValidator Text

-- | <ul>
--   <li><i>Required</i> The identifier of the RequestValidator to be
--   deleted.</li>
--   </ul>
deleteRequestValidator_requestValidatorId :: Lens' DeleteRequestValidator Text

-- | <i>See:</i> <a>newDeleteRequestValidatorResponse</a> smart
--   constructor.
data DeleteRequestValidatorResponse
DeleteRequestValidatorResponse' :: DeleteRequestValidatorResponse

-- | Create a value of <a>DeleteRequestValidatorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRequestValidatorResponse :: DeleteRequestValidatorResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidator
instance GHC.Show.Show Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidator
instance GHC.Read.Read Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidator
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidator
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidatorResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidatorResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidatorResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidatorResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidator
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidatorResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidator
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidator
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidator
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidator
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteRequestValidator.DeleteRequestValidator


-- | Deletes a model.
module Amazonka.APIGateway.DeleteModel

-- | Request to delete an existing model in an existing RestApi resource.
--   
--   <i>See:</i> <a>newDeleteModel</a> smart constructor.
data DeleteModel
DeleteModel' :: Text -> Text -> DeleteModel

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteModel'] :: DeleteModel -> Text

-- | <ul>
--   <li><i>Required</i> The name of the model to delete.</li>
--   </ul>
[$sel:modelName:DeleteModel'] :: DeleteModel -> Text

-- | Create a value of <a>DeleteModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteModel'</a>, <a>deleteModel_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:modelName:DeleteModel'</a>, <a>deleteModel_modelName</a> -
--   [Required] The name of the model to delete.
newDeleteModel :: Text -> Text -> DeleteModel

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteModel_restApiId :: Lens' DeleteModel Text

-- | <ul>
--   <li><i>Required</i> The name of the model to delete.</li>
--   </ul>
deleteModel_modelName :: Lens' DeleteModel Text

-- | <i>See:</i> <a>newDeleteModelResponse</a> smart constructor.
data DeleteModelResponse
DeleteModelResponse' :: DeleteModelResponse

-- | Create a value of <a>DeleteModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteModelResponse :: DeleteModelResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteModel.DeleteModel
instance GHC.Show.Show Amazonka.APIGateway.DeleteModel.DeleteModel
instance GHC.Read.Read Amazonka.APIGateway.DeleteModel.DeleteModel
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteModel.DeleteModel
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteModel.DeleteModelResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteModel.DeleteModelResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteModel.DeleteModelResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteModel.DeleteModelResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteModel.DeleteModel
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteModel.DeleteModelResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteModel.DeleteModel
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteModel.DeleteModel
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteModel.DeleteModel
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteModel.DeleteModel
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteModel.DeleteModel


-- | Deletes an existing MethodResponse resource.
module Amazonka.APIGateway.DeleteMethodResponse

-- | A request to delete an existing MethodResponse resource.
--   
--   <i>See:</i> <a>newDeleteMethodResponse</a> smart constructor.
data DeleteMethodResponse
DeleteMethodResponse' :: Text -> Text -> Text -> Text -> DeleteMethodResponse

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteMethodResponse'] :: DeleteMethodResponse -> Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the MethodResponse
--   resource.</li>
--   </ul>
[$sel:resourceId:DeleteMethodResponse'] :: DeleteMethodResponse -> Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
[$sel:httpMethod:DeleteMethodResponse'] :: DeleteMethodResponse -> Text

-- | <ul>
--   <li><i>Required</i> The status code identifier for the MethodResponse
--   resource.</li>
--   </ul>
[$sel:statusCode:DeleteMethodResponse'] :: DeleteMethodResponse -> Text

-- | Create a value of <a>DeleteMethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteMethodResponse'</a>,
--   <a>deleteMethodResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:DeleteMethodResponse'</a>,
--   <a>deleteMethodResponse_resourceId</a> - [Required] The Resource
--   identifier for the MethodResponse resource.
--   
--   <a>$sel:httpMethod:DeleteMethodResponse'</a>,
--   <a>deleteMethodResponse_httpMethod</a> - [Required] The HTTP verb of
--   the Method resource.
--   
--   <a>$sel:statusCode:DeleteMethodResponse'</a>,
--   <a>deleteMethodResponse_statusCode</a> - [Required] The status code
--   identifier for the MethodResponse resource.
newDeleteMethodResponse :: Text -> Text -> Text -> Text -> DeleteMethodResponse

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteMethodResponse_restApiId :: Lens' DeleteMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the MethodResponse
--   resource.</li>
--   </ul>
deleteMethodResponse_resourceId :: Lens' DeleteMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
deleteMethodResponse_httpMethod :: Lens' DeleteMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The status code identifier for the MethodResponse
--   resource.</li>
--   </ul>
deleteMethodResponse_statusCode :: Lens' DeleteMethodResponse Text

-- | <i>See:</i> <a>newDeleteMethodResponseResponse</a> smart constructor.
data DeleteMethodResponseResponse
DeleteMethodResponseResponse' :: DeleteMethodResponseResponse

-- | Create a value of <a>DeleteMethodResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteMethodResponseResponse :: DeleteMethodResponseResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponseResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponseResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponseResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponseResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponseResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponse
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponse
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponse
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteMethodResponse.DeleteMethodResponse


-- | Deletes an existing Method resource.
module Amazonka.APIGateway.DeleteMethod

-- | Request to delete an existing Method resource.
--   
--   <i>See:</i> <a>newDeleteMethod</a> smart constructor.
data DeleteMethod
DeleteMethod' :: Text -> Text -> Text -> DeleteMethod

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteMethod'] :: DeleteMethod -> Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the Method
--   resource.</li>
--   </ul>
[$sel:resourceId:DeleteMethod'] :: DeleteMethod -> Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
[$sel:httpMethod:DeleteMethod'] :: DeleteMethod -> Text

-- | Create a value of <a>DeleteMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteMethod'</a>, <a>deleteMethod_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:DeleteMethod'</a>, <a>deleteMethod_resourceId</a> -
--   [Required] The Resource identifier for the Method resource.
--   
--   <a>$sel:httpMethod:DeleteMethod'</a>, <a>deleteMethod_httpMethod</a> -
--   [Required] The HTTP verb of the Method resource.
newDeleteMethod :: Text -> Text -> Text -> DeleteMethod

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteMethod_restApiId :: Lens' DeleteMethod Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the Method
--   resource.</li>
--   </ul>
deleteMethod_resourceId :: Lens' DeleteMethod Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
deleteMethod_httpMethod :: Lens' DeleteMethod Text

-- | <i>See:</i> <a>newDeleteMethodResponse'</a> smart constructor.
data DeleteMethodResponse'
DeleteMethodResponse'' :: DeleteMethodResponse'

-- | Create a value of <a>DeleteMethodResponse'</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteMethodResponse' :: DeleteMethodResponse'
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteMethod.DeleteMethod
instance GHC.Show.Show Amazonka.APIGateway.DeleteMethod.DeleteMethod
instance GHC.Read.Read Amazonka.APIGateway.DeleteMethod.DeleteMethod
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteMethod.DeleteMethod
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteMethod.DeleteMethodResponse'
instance GHC.Show.Show Amazonka.APIGateway.DeleteMethod.DeleteMethodResponse'
instance GHC.Read.Read Amazonka.APIGateway.DeleteMethod.DeleteMethodResponse'
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteMethod.DeleteMethodResponse'
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteMethod.DeleteMethod
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteMethod.DeleteMethodResponse'
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteMethod.DeleteMethod
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteMethod.DeleteMethod
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteMethod.DeleteMethod
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteMethod.DeleteMethod
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteMethod.DeleteMethod


-- | Represents a delete integration response.
module Amazonka.APIGateway.DeleteIntegrationResponse

-- | Represents a delete integration response request.
--   
--   <i>See:</i> <a>newDeleteIntegrationResponse</a> smart constructor.
data DeleteIntegrationResponse
DeleteIntegrationResponse' :: Text -> Text -> Text -> Text -> DeleteIntegrationResponse

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteIntegrationResponse'] :: DeleteIntegrationResponse -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration response request's
--   resource identifier.</li>
--   </ul>
[$sel:resourceId:DeleteIntegrationResponse'] :: DeleteIntegrationResponse -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration response request's
--   HTTP method.</li>
--   </ul>
[$sel:httpMethod:DeleteIntegrationResponse'] :: DeleteIntegrationResponse -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration response request's
--   status code.</li>
--   </ul>
[$sel:statusCode:DeleteIntegrationResponse'] :: DeleteIntegrationResponse -> Text

-- | Create a value of <a>DeleteIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_resourceId</a> - [Required] Specifies a
--   delete integration response request's resource identifier.
--   
--   <a>$sel:httpMethod:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_httpMethod</a> - [Required] Specifies a
--   delete integration response request's HTTP method.
--   
--   <a>$sel:statusCode:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_statusCode</a> - [Required] Specifies a
--   delete integration response request's status code.
newDeleteIntegrationResponse :: Text -> Text -> Text -> Text -> DeleteIntegrationResponse

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteIntegrationResponse_restApiId :: Lens' DeleteIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration response request's
--   resource identifier.</li>
--   </ul>
deleteIntegrationResponse_resourceId :: Lens' DeleteIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration response request's
--   HTTP method.</li>
--   </ul>
deleteIntegrationResponse_httpMethod :: Lens' DeleteIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration response request's
--   status code.</li>
--   </ul>
deleteIntegrationResponse_statusCode :: Lens' DeleteIntegrationResponse Text

-- | <i>See:</i> <a>newDeleteIntegrationResponseResponse</a> smart
--   constructor.
data DeleteIntegrationResponseResponse
DeleteIntegrationResponseResponse' :: DeleteIntegrationResponseResponse

-- | Create a value of <a>DeleteIntegrationResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIntegrationResponseResponse :: DeleteIntegrationResponseResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponseResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponseResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponseResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponseResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponseResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponse
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponse
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponse
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteIntegrationResponse.DeleteIntegrationResponse


-- | Represents a delete integration.
module Amazonka.APIGateway.DeleteIntegration

-- | Represents a delete integration request.
--   
--   <i>See:</i> <a>newDeleteIntegration</a> smart constructor.
data DeleteIntegration
DeleteIntegration' :: Text -> Text -> Text -> DeleteIntegration

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteIntegration'] :: DeleteIntegration -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration request's resource
--   identifier.</li>
--   </ul>
[$sel:resourceId:DeleteIntegration'] :: DeleteIntegration -> Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration request's HTTP
--   method.</li>
--   </ul>
[$sel:httpMethod:DeleteIntegration'] :: DeleteIntegration -> Text

-- | Create a value of <a>DeleteIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteIntegration'</a>,
--   <a>deleteIntegration_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:resourceId:DeleteIntegration'</a>,
--   <a>deleteIntegration_resourceId</a> - [Required] Specifies a delete
--   integration request's resource identifier.
--   
--   <a>$sel:httpMethod:DeleteIntegration'</a>,
--   <a>deleteIntegration_httpMethod</a> - [Required] Specifies a delete
--   integration request's HTTP method.
newDeleteIntegration :: Text -> Text -> Text -> DeleteIntegration

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteIntegration_restApiId :: Lens' DeleteIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration request's resource
--   identifier.</li>
--   </ul>
deleteIntegration_resourceId :: Lens' DeleteIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration request's HTTP
--   method.</li>
--   </ul>
deleteIntegration_httpMethod :: Lens' DeleteIntegration Text

-- | <i>See:</i> <a>newDeleteIntegrationResponse'</a> smart constructor.
data DeleteIntegrationResponse'
DeleteIntegrationResponse'' :: DeleteIntegrationResponse'

-- | Create a value of <a>DeleteIntegrationResponse'</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIntegrationResponse' :: DeleteIntegrationResponse'
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteIntegration.DeleteIntegration
instance GHC.Show.Show Amazonka.APIGateway.DeleteIntegration.DeleteIntegration
instance GHC.Read.Read Amazonka.APIGateway.DeleteIntegration.DeleteIntegration
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteIntegration.DeleteIntegration
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteIntegration.DeleteIntegrationResponse'
instance GHC.Show.Show Amazonka.APIGateway.DeleteIntegration.DeleteIntegrationResponse'
instance GHC.Read.Read Amazonka.APIGateway.DeleteIntegration.DeleteIntegrationResponse'
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteIntegration.DeleteIntegrationResponse'
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteIntegration.DeleteIntegration
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteIntegration.DeleteIntegrationResponse'
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteIntegration.DeleteIntegration
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteIntegration.DeleteIntegration
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteIntegration.DeleteIntegration
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteIntegration.DeleteIntegration
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteIntegration.DeleteIntegration


-- | Clears any customization of a GatewayResponse of a specified response
--   type on the given RestApi and resets it with the default settings.
module Amazonka.APIGateway.DeleteGatewayResponse

-- | Clears any customization of a GatewayResponse of a specified response
--   type on the given RestApi and resets it with the default settings.
--   
--   <i>See:</i> <a>newDeleteGatewayResponse</a> smart constructor.
data DeleteGatewayResponse
DeleteGatewayResponse' :: Text -> GatewayResponseType -> DeleteGatewayResponse

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteGatewayResponse'] :: DeleteGatewayResponse -> Text

-- | <ul>
--   <li><i>Required</i></li>
--   </ul>
--   
--   The response type of the associated GatewayResponse.
[$sel:responseType:DeleteGatewayResponse'] :: DeleteGatewayResponse -> GatewayResponseType

-- | Create a value of <a>DeleteGatewayResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteGatewayResponse'</a>,
--   <a>deleteGatewayResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:responseType:DeleteGatewayResponse'</a>,
--   <a>deleteGatewayResponse_responseType</a> - [Required]
--   
--   The response type of the associated GatewayResponse.
newDeleteGatewayResponse :: Text -> GatewayResponseType -> DeleteGatewayResponse

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteGatewayResponse_restApiId :: Lens' DeleteGatewayResponse Text

-- | <ul>
--   <li><i>Required</i></li>
--   </ul>
--   
--   The response type of the associated GatewayResponse.
deleteGatewayResponse_responseType :: Lens' DeleteGatewayResponse GatewayResponseType

-- | <i>See:</i> <a>newDeleteGatewayResponseResponse</a> smart constructor.
data DeleteGatewayResponseResponse
DeleteGatewayResponseResponse' :: DeleteGatewayResponseResponse

-- | Create a value of <a>DeleteGatewayResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteGatewayResponseResponse :: DeleteGatewayResponseResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponseResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponseResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponseResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponseResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponseResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponse
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponse
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponse
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteGatewayResponse.DeleteGatewayResponse


-- | Deletes the DomainName resource.
module Amazonka.APIGateway.DeleteDomainName

-- | A request to delete the DomainName resource.
--   
--   <i>See:</i> <a>newDeleteDomainName</a> smart constructor.
data DeleteDomainName
DeleteDomainName' :: Text -> DeleteDomainName

-- | <ul>
--   <li><i>Required</i> The name of the DomainName resource to be
--   deleted.</li>
--   </ul>
[$sel:domainName:DeleteDomainName'] :: DeleteDomainName -> Text

-- | Create a value of <a>DeleteDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:DeleteDomainName'</a>,
--   <a>deleteDomainName_domainName</a> - [Required] The name of the
--   DomainName resource to be deleted.
newDeleteDomainName :: Text -> DeleteDomainName

-- | <ul>
--   <li><i>Required</i> The name of the DomainName resource to be
--   deleted.</li>
--   </ul>
deleteDomainName_domainName :: Lens' DeleteDomainName Text

-- | <i>See:</i> <a>newDeleteDomainNameResponse</a> smart constructor.
data DeleteDomainNameResponse
DeleteDomainNameResponse' :: DeleteDomainNameResponse

-- | Create a value of <a>DeleteDomainNameResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDomainNameResponse :: DeleteDomainNameResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteDomainName.DeleteDomainName
instance GHC.Show.Show Amazonka.APIGateway.DeleteDomainName.DeleteDomainName
instance GHC.Read.Read Amazonka.APIGateway.DeleteDomainName.DeleteDomainName
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteDomainName.DeleteDomainName
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteDomainName.DeleteDomainNameResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteDomainName.DeleteDomainNameResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteDomainName.DeleteDomainNameResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteDomainName.DeleteDomainNameResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteDomainName.DeleteDomainName
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteDomainName.DeleteDomainNameResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteDomainName.DeleteDomainName
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteDomainName.DeleteDomainName
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteDomainName.DeleteDomainName
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteDomainName.DeleteDomainName
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteDomainName.DeleteDomainName


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
module Amazonka.APIGateway.DeleteDocumentationVersion

-- | Deletes an existing documentation version of an API.
--   
--   <i>See:</i> <a>newDeleteDocumentationVersion</a> smart constructor.
data DeleteDocumentationVersion
DeleteDocumentationVersion' :: Text -> Text -> DeleteDocumentationVersion

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteDocumentationVersion'] :: DeleteDocumentationVersion -> Text

-- | <ul>
--   <li><i>Required</i> The version identifier of a to-be-deleted
--   documentation snapshot.</li>
--   </ul>
[$sel:documentationVersion:DeleteDocumentationVersion'] :: DeleteDocumentationVersion -> Text

-- | Create a value of <a>DeleteDocumentationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteDocumentationVersion'</a>,
--   <a>deleteDocumentationVersion_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:documentationVersion:DeleteDocumentationVersion'</a>,
--   <a>deleteDocumentationVersion_documentationVersion</a> - [Required]
--   The version identifier of a to-be-deleted documentation snapshot.
newDeleteDocumentationVersion :: Text -> Text -> DeleteDocumentationVersion

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteDocumentationVersion_restApiId :: Lens' DeleteDocumentationVersion Text

-- | <ul>
--   <li><i>Required</i> The version identifier of a to-be-deleted
--   documentation snapshot.</li>
--   </ul>
deleteDocumentationVersion_documentationVersion :: Lens' DeleteDocumentationVersion Text

-- | <i>See:</i> <a>newDeleteDocumentationVersionResponse</a> smart
--   constructor.
data DeleteDocumentationVersionResponse
DeleteDocumentationVersionResponse' :: DeleteDocumentationVersionResponse

-- | Create a value of <a>DeleteDocumentationVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDocumentationVersionResponse :: DeleteDocumentationVersionResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersion
instance GHC.Show.Show Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersion
instance GHC.Read.Read Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersion
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersion
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersionResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersionResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersionResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersion
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersion
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersion
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersion
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteDocumentationVersion.DeleteDocumentationVersion


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
module Amazonka.APIGateway.DeleteDocumentationPart

-- | Deletes an existing documentation part of an API.
--   
--   <i>See:</i> <a>newDeleteDocumentationPart</a> smart constructor.
data DeleteDocumentationPart
DeleteDocumentationPart' :: Text -> Text -> DeleteDocumentationPart

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteDocumentationPart'] :: DeleteDocumentationPart -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the to-be-deleted documentation
--   part.</li>
--   </ul>
[$sel:documentationPartId:DeleteDocumentationPart'] :: DeleteDocumentationPart -> Text

-- | Create a value of <a>DeleteDocumentationPart</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteDocumentationPart'</a>,
--   <a>deleteDocumentationPart_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:documentationPartId:DeleteDocumentationPart'</a>,
--   <a>deleteDocumentationPart_documentationPartId</a> - [Required] The
--   identifier of the to-be-deleted documentation part.
newDeleteDocumentationPart :: Text -> Text -> DeleteDocumentationPart

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteDocumentationPart_restApiId :: Lens' DeleteDocumentationPart Text

-- | <ul>
--   <li><i>Required</i> The identifier of the to-be-deleted documentation
--   part.</li>
--   </ul>
deleteDocumentationPart_documentationPartId :: Lens' DeleteDocumentationPart Text

-- | <i>See:</i> <a>newDeleteDocumentationPartResponse</a> smart
--   constructor.
data DeleteDocumentationPartResponse
DeleteDocumentationPartResponse' :: DeleteDocumentationPartResponse

-- | Create a value of <a>DeleteDocumentationPartResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDocumentationPartResponse :: DeleteDocumentationPartResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPart
instance GHC.Show.Show Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPart
instance GHC.Read.Read Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPart
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPart
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPartResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPartResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPartResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPartResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPart
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPartResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPart
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPart
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPart
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPart
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteDocumentationPart.DeleteDocumentationPart


-- | Deletes a Deployment resource. Deleting a deployment will only succeed
--   if there are no Stage resources associated with it.
module Amazonka.APIGateway.DeleteDeployment

-- | Requests API Gateway to delete a Deployment resource.
--   
--   <i>See:</i> <a>newDeleteDeployment</a> smart constructor.
data DeleteDeployment
DeleteDeployment' :: Text -> Text -> DeleteDeployment

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteDeployment'] :: DeleteDeployment -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Deployment resource to
--   delete.</li>
--   </ul>
[$sel:deploymentId:DeleteDeployment'] :: DeleteDeployment -> Text

-- | Create a value of <a>DeleteDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteDeployment'</a>,
--   <a>deleteDeployment_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:deploymentId:DeleteDeployment'</a>,
--   <a>deleteDeployment_deploymentId</a> - [Required] The identifier of
--   the Deployment resource to delete.
newDeleteDeployment :: Text -> Text -> DeleteDeployment

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteDeployment_restApiId :: Lens' DeleteDeployment Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Deployment resource to
--   delete.</li>
--   </ul>
deleteDeployment_deploymentId :: Lens' DeleteDeployment Text

-- | <i>See:</i> <a>newDeleteDeploymentResponse</a> smart constructor.
data DeleteDeploymentResponse
DeleteDeploymentResponse' :: DeleteDeploymentResponse

-- | Create a value of <a>DeleteDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDeploymentResponse :: DeleteDeploymentResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteDeployment.DeleteDeployment
instance GHC.Show.Show Amazonka.APIGateway.DeleteDeployment.DeleteDeployment
instance GHC.Read.Read Amazonka.APIGateway.DeleteDeployment.DeleteDeployment
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteDeployment.DeleteDeployment
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteDeployment.DeleteDeploymentResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteDeployment.DeleteDeploymentResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteDeployment.DeleteDeploymentResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteDeployment.DeleteDeploymentResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteDeployment.DeleteDeployment
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteDeployment.DeleteDeploymentResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteDeployment.DeleteDeployment
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteDeployment.DeleteDeployment
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteDeployment.DeleteDeployment
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteDeployment.DeleteDeployment
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteDeployment.DeleteDeployment


-- | Deletes the ClientCertificate resource.
module Amazonka.APIGateway.DeleteClientCertificate

-- | A request to delete the ClientCertificate resource.
--   
--   <i>See:</i> <a>newDeleteClientCertificate</a> smart constructor.
data DeleteClientCertificate
DeleteClientCertificate' :: Text -> DeleteClientCertificate

-- | <ul>
--   <li><i>Required</i> The identifier of the ClientCertificate resource
--   to be deleted.</li>
--   </ul>
[$sel:clientCertificateId:DeleteClientCertificate'] :: DeleteClientCertificate -> Text

-- | Create a value of <a>DeleteClientCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientCertificateId:DeleteClientCertificate'</a>,
--   <a>deleteClientCertificate_clientCertificateId</a> - [Required] The
--   identifier of the ClientCertificate resource to be deleted.
newDeleteClientCertificate :: Text -> DeleteClientCertificate

-- | <ul>
--   <li><i>Required</i> The identifier of the ClientCertificate resource
--   to be deleted.</li>
--   </ul>
deleteClientCertificate_clientCertificateId :: Lens' DeleteClientCertificate Text

-- | <i>See:</i> <a>newDeleteClientCertificateResponse</a> smart
--   constructor.
data DeleteClientCertificateResponse
DeleteClientCertificateResponse' :: DeleteClientCertificateResponse

-- | Create a value of <a>DeleteClientCertificateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteClientCertificateResponse :: DeleteClientCertificateResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificate
instance GHC.Show.Show Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificate
instance GHC.Read.Read Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificate
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificate
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificateResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificateResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificateResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificateResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificate
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificateResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificate
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificate
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificate
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificate
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteClientCertificate.DeleteClientCertificate


-- | Deletes the BasePathMapping resource.
module Amazonka.APIGateway.DeleteBasePathMapping

-- | A request to delete the BasePathMapping resource.
--   
--   <i>See:</i> <a>newDeleteBasePathMapping</a> smart constructor.
data DeleteBasePathMapping
DeleteBasePathMapping' :: Text -> Text -> DeleteBasePathMapping

-- | <ul>
--   <li><i>Required</i> The domain name of the BasePathMapping resource to
--   delete.</li>
--   </ul>
[$sel:domainName:DeleteBasePathMapping'] :: DeleteBasePathMapping -> Text

-- | <ul>
--   <li><i>Required</i> The base path name of the BasePathMapping resource
--   to delete.</li>
--   </ul>
--   
--   To specify an empty base path, set this parameter to
--   <tt>'(none)'</tt>.
[$sel:basePath:DeleteBasePathMapping'] :: DeleteBasePathMapping -> Text

-- | Create a value of <a>DeleteBasePathMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:DeleteBasePathMapping'</a>,
--   <a>deleteBasePathMapping_domainName</a> - [Required] The domain name
--   of the BasePathMapping resource to delete.
--   
--   <a>$sel:basePath:DeleteBasePathMapping'</a>,
--   <a>deleteBasePathMapping_basePath</a> - [Required] The base path name
--   of the BasePathMapping resource to delete.
--   
--   To specify an empty base path, set this parameter to
--   <tt>'(none)'</tt>.
newDeleteBasePathMapping :: Text -> Text -> DeleteBasePathMapping

-- | <ul>
--   <li><i>Required</i> The domain name of the BasePathMapping resource to
--   delete.</li>
--   </ul>
deleteBasePathMapping_domainName :: Lens' DeleteBasePathMapping Text

-- | <ul>
--   <li><i>Required</i> The base path name of the BasePathMapping resource
--   to delete.</li>
--   </ul>
--   
--   To specify an empty base path, set this parameter to
--   <tt>'(none)'</tt>.
deleteBasePathMapping_basePath :: Lens' DeleteBasePathMapping Text

-- | <i>See:</i> <a>newDeleteBasePathMappingResponse</a> smart constructor.
data DeleteBasePathMappingResponse
DeleteBasePathMappingResponse' :: DeleteBasePathMappingResponse

-- | Create a value of <a>DeleteBasePathMappingResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteBasePathMappingResponse :: DeleteBasePathMappingResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMapping
instance GHC.Show.Show Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMapping
instance GHC.Read.Read Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMapping
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMapping
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMappingResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMappingResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMappingResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMappingResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMapping
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMappingResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMapping
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMapping
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMapping
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMapping
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteBasePathMapping.DeleteBasePathMapping


-- | Deletes an existing Authorizer resource.
--   
--   <a>AWS CLI</a>
module Amazonka.APIGateway.DeleteAuthorizer

-- | Request to delete an existing Authorizer resource.
--   
--   <i>See:</i> <a>newDeleteAuthorizer</a> smart constructor.
data DeleteAuthorizer
DeleteAuthorizer' :: Text -> Text -> DeleteAuthorizer

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:DeleteAuthorizer'] :: DeleteAuthorizer -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Authorizer resource.</li>
--   </ul>
[$sel:authorizerId:DeleteAuthorizer'] :: DeleteAuthorizer -> Text

-- | Create a value of <a>DeleteAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteAuthorizer'</a>,
--   <a>deleteAuthorizer_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:authorizerId:DeleteAuthorizer'</a>,
--   <a>deleteAuthorizer_authorizerId</a> - [Required] The identifier of
--   the Authorizer resource.
newDeleteAuthorizer :: Text -> Text -> DeleteAuthorizer

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteAuthorizer_restApiId :: Lens' DeleteAuthorizer Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Authorizer resource.</li>
--   </ul>
deleteAuthorizer_authorizerId :: Lens' DeleteAuthorizer Text

-- | <i>See:</i> <a>newDeleteAuthorizerResponse</a> smart constructor.
data DeleteAuthorizerResponse
DeleteAuthorizerResponse' :: DeleteAuthorizerResponse

-- | Create a value of <a>DeleteAuthorizerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAuthorizerResponse :: DeleteAuthorizerResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizer
instance GHC.Show.Show Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizer
instance GHC.Read.Read Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizer
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizer
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizerResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizerResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizerResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizerResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizer
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizerResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizer
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizer
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizer
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizer
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteAuthorizer.DeleteAuthorizer


-- | Deletes the ApiKey resource.
module Amazonka.APIGateway.DeleteApiKey

-- | A request to delete the ApiKey resource.
--   
--   <i>See:</i> <a>newDeleteApiKey</a> smart constructor.
data DeleteApiKey
DeleteApiKey' :: Text -> DeleteApiKey

-- | <ul>
--   <li><i>Required</i> The identifier of the ApiKey resource to be
--   deleted.</li>
--   </ul>
[$sel:apiKey:DeleteApiKey'] :: DeleteApiKey -> Text

-- | Create a value of <a>DeleteApiKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKey:DeleteApiKey'</a>, <a>deleteApiKey_apiKey</a> -
--   [Required] The identifier of the ApiKey resource to be deleted.
newDeleteApiKey :: Text -> DeleteApiKey

-- | <ul>
--   <li><i>Required</i> The identifier of the ApiKey resource to be
--   deleted.</li>
--   </ul>
deleteApiKey_apiKey :: Lens' DeleteApiKey Text

-- | <i>See:</i> <a>newDeleteApiKeyResponse</a> smart constructor.
data DeleteApiKeyResponse
DeleteApiKeyResponse' :: DeleteApiKeyResponse

-- | Create a value of <a>DeleteApiKeyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteApiKeyResponse :: DeleteApiKeyResponse
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteApiKey.DeleteApiKey
instance GHC.Show.Show Amazonka.APIGateway.DeleteApiKey.DeleteApiKey
instance GHC.Read.Read Amazonka.APIGateway.DeleteApiKey.DeleteApiKey
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteApiKey.DeleteApiKey
instance GHC.Generics.Generic Amazonka.APIGateway.DeleteApiKey.DeleteApiKeyResponse
instance GHC.Show.Show Amazonka.APIGateway.DeleteApiKey.DeleteApiKeyResponse
instance GHC.Read.Read Amazonka.APIGateway.DeleteApiKey.DeleteApiKeyResponse
instance GHC.Classes.Eq Amazonka.APIGateway.DeleteApiKey.DeleteApiKeyResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.DeleteApiKey.DeleteApiKey
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteApiKey.DeleteApiKeyResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.DeleteApiKey.DeleteApiKey
instance Control.DeepSeq.NFData Amazonka.APIGateway.DeleteApiKey.DeleteApiKey
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.DeleteApiKey.DeleteApiKey
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.DeleteApiKey.DeleteApiKey
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.DeleteApiKey.DeleteApiKey


-- | Creates a VPC link, under the caller's account in a selected region,
--   in an asynchronous operation that typically takes 2-4 minutes to
--   complete and become operational. The caller must have permissions to
--   create and update VPC Endpoint services.
module Amazonka.APIGateway.CreateVpcLink

-- | Creates a VPC link, under the caller's account in a selected region,
--   in an asynchronous operation that typically takes 2-4 minutes to
--   complete and become operational. The caller must have permissions to
--   create and update VPC Endpoint services.
--   
--   <i>See:</i> <a>newCreateVpcLink</a> smart constructor.
data CreateVpcLink
CreateVpcLink' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> [Text] -> CreateVpcLink

-- | The description of the VPC link.
[$sel:description:CreateVpcLink'] :: CreateVpcLink -> Maybe Text

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
[$sel:tags:CreateVpcLink'] :: CreateVpcLink -> Maybe (HashMap Text Text)

-- | <ul>
--   <li><i>Required</i> The name used to label and identify the VPC
--   link.</li>
--   </ul>
[$sel:name:CreateVpcLink'] :: CreateVpcLink -> Text

-- | <ul>
--   <li><i>Required</i> The ARN of the network load balancer of the VPC
--   targeted by the VPC link. The network load balancer must be owned by
--   the same AWS account of the API owner.</li>
--   </ul>
[$sel:targetArns:CreateVpcLink'] :: CreateVpcLink -> [Text]

-- | Create a value of <a>CreateVpcLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateVpcLink'</a>,
--   <a>createVpcLink_description</a> - The description of the VPC link.
--   
--   <a>$sel:tags:CreateVpcLink'</a>, <a>createVpcLink_tags</a> - The
--   key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
--   
--   <a>$sel:name:CreateVpcLink'</a>, <a>createVpcLink_name</a> -
--   [Required] The name used to label and identify the VPC link.
--   
--   <a>$sel:targetArns:CreateVpcLink'</a>, <a>createVpcLink_targetArns</a>
--   - [Required] The ARN of the network load balancer of the VPC targeted
--   by the VPC link. The network load balancer must be owned by the same
--   AWS account of the API owner.
newCreateVpcLink :: Text -> CreateVpcLink

-- | The description of the VPC link.
createVpcLink_description :: Lens' CreateVpcLink (Maybe Text)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
createVpcLink_tags :: Lens' CreateVpcLink (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The name used to label and identify the VPC
--   link.</li>
--   </ul>
createVpcLink_name :: Lens' CreateVpcLink Text

-- | <ul>
--   <li><i>Required</i> The ARN of the network load balancer of the VPC
--   targeted by the VPC link. The network load balancer must be owned by
--   the same AWS account of the API owner.</li>
--   </ul>
createVpcLink_targetArns :: Lens' CreateVpcLink [Text]

-- | An API Gateway VPC link for a RestApi to access resources in an Amazon
--   Virtual Private Cloud (VPC).
--   
--   To enable access to a resource in an Amazon Virtual Private Cloud
--   through Amazon API Gateway, you, as an API developer, create a VpcLink
--   resource targeted for one or more network load balancers of the VPC
--   and then integrate an API method with a private integration that uses
--   the VpcLink. The private integration has an integration type of
--   <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> and has a connection type of
--   <tt>VPC_LINK</tt>. The integration uses the <tt>connectionId</tt>
--   property to identify the VpcLink used.
--   
--   <i>See:</i> <a>newVpcLink</a> smart constructor.
data VpcLink
VpcLink' :: Maybe VpcLinkStatus -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> VpcLink

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
[$sel:status:VpcLink'] :: VpcLink -> Maybe VpcLinkStatus

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
[$sel:targetArns:VpcLink'] :: VpcLink -> Maybe [Text]

-- | The name used to label and identify the VPC link.
[$sel:name:VpcLink'] :: VpcLink -> Maybe Text

-- | A description about the VPC link status.
[$sel:statusMessage:VpcLink'] :: VpcLink -> Maybe Text

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
[$sel:id:VpcLink'] :: VpcLink -> Maybe Text

-- | The description of the VPC link.
[$sel:description:VpcLink'] :: VpcLink -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:VpcLink'] :: VpcLink -> Maybe (HashMap Text Text)

-- | Create a value of <a>VpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VpcLink'</a>, <a>vpcLink_status</a> - The status of the
--   VPC link. The valid values are <tt>AVAILABLE</tt>, <tt>PENDING</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an API will wait if
--   the status is <tt>PENDING</tt> and will fail if the status is
--   <tt>DELETING</tt>.
--   
--   <a>$sel:targetArns:VpcLink'</a>, <a>vpcLink_targetArns</a> - The ARN
--   of the network load balancer of the VPC targeted by the VPC link. The
--   network load balancer must be owned by the same AWS account of the API
--   owner.
--   
--   <a>$sel:name:VpcLink'</a>, <a>vpcLink_name</a> - The name used to
--   label and identify the VPC link.
--   
--   <a>$sel:statusMessage:VpcLink'</a>, <a>vpcLink_statusMessage</a> - A
--   description about the VPC link status.
--   
--   <a>$sel:id:VpcLink'</a>, <a>vpcLink_id</a> - The identifier of the
--   VpcLink. It is used in an Integration to reference this VpcLink.
--   
--   <a>$sel:description:VpcLink'</a>, <a>vpcLink_description</a> - The
--   description of the VPC link.
--   
--   <a>$sel:tags:VpcLink'</a>, <a>vpcLink_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newVpcLink :: VpcLink

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
vpcLink_status :: Lens' VpcLink (Maybe VpcLinkStatus)

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
vpcLink_targetArns :: Lens' VpcLink (Maybe [Text])

-- | The name used to label and identify the VPC link.
vpcLink_name :: Lens' VpcLink (Maybe Text)

-- | A description about the VPC link status.
vpcLink_statusMessage :: Lens' VpcLink (Maybe Text)

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
vpcLink_id :: Lens' VpcLink (Maybe Text)

-- | The description of the VPC link.
vpcLink_description :: Lens' VpcLink (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
vpcLink_tags :: Lens' VpcLink (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.CreateVpcLink.CreateVpcLink
instance GHC.Show.Show Amazonka.APIGateway.CreateVpcLink.CreateVpcLink
instance GHC.Read.Read Amazonka.APIGateway.CreateVpcLink.CreateVpcLink
instance GHC.Classes.Eq Amazonka.APIGateway.CreateVpcLink.CreateVpcLink
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateVpcLink.CreateVpcLink
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateVpcLink.CreateVpcLink
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateVpcLink.CreateVpcLink
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateVpcLink.CreateVpcLink
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateVpcLink.CreateVpcLink
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateVpcLink.CreateVpcLink
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateVpcLink.CreateVpcLink


-- | Creates a usage plan key for adding an existing API key to a usage
--   plan.
module Amazonka.APIGateway.CreateUsagePlanKey

-- | The POST request to create a usage plan key for adding an existing API
--   key to a usage plan.
--   
--   <i>See:</i> <a>newCreateUsagePlanKey</a> smart constructor.
data CreateUsagePlanKey
CreateUsagePlanKey' :: Text -> Text -> Text -> CreateUsagePlanKey

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlan resource representing the
--   usage plan containing the to-be-created UsagePlanKey resource
--   representing a plan customer.</li>
--   </ul>
[$sel:usagePlanId:CreateUsagePlanKey'] :: CreateUsagePlanKey -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of a UsagePlanKey resource for a
--   plan customer.</li>
--   </ul>
[$sel:keyId:CreateUsagePlanKey'] :: CreateUsagePlanKey -> Text

-- | <ul>
--   <li><i>Required</i> The type of a UsagePlanKey resource for a plan
--   customer.</li>
--   </ul>
[$sel:keyType:CreateUsagePlanKey'] :: CreateUsagePlanKey -> Text

-- | Create a value of <a>CreateUsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:CreateUsagePlanKey'</a>,
--   <a>createUsagePlanKey_usagePlanId</a> - [Required] The Id of the
--   UsagePlan resource representing the usage plan containing the
--   to-be-created UsagePlanKey resource representing a plan customer.
--   
--   <a>$sel:keyId:CreateUsagePlanKey'</a>, <a>createUsagePlanKey_keyId</a>
--   - [Required] The identifier of a UsagePlanKey resource for a plan
--   customer.
--   
--   <a>$sel:keyType:CreateUsagePlanKey'</a>,
--   <a>createUsagePlanKey_keyType</a> - [Required] The type of a
--   UsagePlanKey resource for a plan customer.
newCreateUsagePlanKey :: Text -> Text -> Text -> CreateUsagePlanKey

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlan resource representing the
--   usage plan containing the to-be-created UsagePlanKey resource
--   representing a plan customer.</li>
--   </ul>
createUsagePlanKey_usagePlanId :: Lens' CreateUsagePlanKey Text

-- | <ul>
--   <li><i>Required</i> The identifier of a UsagePlanKey resource for a
--   plan customer.</li>
--   </ul>
createUsagePlanKey_keyId :: Lens' CreateUsagePlanKey Text

-- | <ul>
--   <li><i>Required</i> The type of a UsagePlanKey resource for a plan
--   customer.</li>
--   </ul>
createUsagePlanKey_keyType :: Lens' CreateUsagePlanKey Text

-- | Represents a usage plan key to identify a plan customer.
--   
--   To associate an API stage with a selected API key in a usage plan, you
--   must create a UsagePlanKey resource to represent the selected ApiKey.
--   
--   "
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlanKey</a> smart constructor.
data UsagePlanKey
UsagePlanKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UsagePlanKey

-- | The value of a usage plan key.
[$sel:value:UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | The name of a usage plan key.
[$sel:name:UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | The Id of a usage plan key.
[$sel:id:UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | The type of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
[$sel:type':UsagePlanKey'] :: UsagePlanKey -> Maybe Text

-- | Create a value of <a>UsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:UsagePlanKey'</a>, <a>usagePlanKey_value</a> - The value
--   of a usage plan key.
--   
--   <a>$sel:name:UsagePlanKey'</a>, <a>usagePlanKey_name</a> - The name of
--   a usage plan key.
--   
--   <a>$sel:id:UsagePlanKey'</a>, <a>usagePlanKey_id</a> - The Id of a
--   usage plan key.
--   
--   <a>$sel:type':UsagePlanKey'</a>, <a>usagePlanKey_type</a> - The type
--   of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
newUsagePlanKey :: UsagePlanKey

-- | The value of a usage plan key.
usagePlanKey_value :: Lens' UsagePlanKey (Maybe Text)

-- | The name of a usage plan key.
usagePlanKey_name :: Lens' UsagePlanKey (Maybe Text)

-- | The Id of a usage plan key.
usagePlanKey_id :: Lens' UsagePlanKey (Maybe Text)

-- | The type of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
usagePlanKey_type :: Lens' UsagePlanKey (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.CreateUsagePlanKey.CreateUsagePlanKey
instance GHC.Show.Show Amazonka.APIGateway.CreateUsagePlanKey.CreateUsagePlanKey
instance GHC.Read.Read Amazonka.APIGateway.CreateUsagePlanKey.CreateUsagePlanKey
instance GHC.Classes.Eq Amazonka.APIGateway.CreateUsagePlanKey.CreateUsagePlanKey
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateUsagePlanKey.CreateUsagePlanKey
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateUsagePlanKey.CreateUsagePlanKey
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateUsagePlanKey.CreateUsagePlanKey
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateUsagePlanKey.CreateUsagePlanKey
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateUsagePlanKey.CreateUsagePlanKey
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateUsagePlanKey.CreateUsagePlanKey
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateUsagePlanKey.CreateUsagePlanKey


-- | Creates a usage plan with the throttle and quota limits, as well as
--   the associated API stages, specified in the payload.
module Amazonka.APIGateway.CreateUsagePlan

-- | The POST request to create a usage plan with the name, description,
--   throttle limits and quota limits, as well as the associated API
--   stages, specified in the payload.
--   
--   <i>See:</i> <a>newCreateUsagePlan</a> smart constructor.
data CreateUsagePlan
CreateUsagePlan' :: Maybe [ApiStage] -> Maybe ThrottleSettings -> Maybe QuotaSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateUsagePlan

-- | The associated API stages of the usage plan.
[$sel:apiStages:CreateUsagePlan'] :: CreateUsagePlan -> Maybe [ApiStage]

-- | The throttling limits of the usage plan.
[$sel:throttle:CreateUsagePlan'] :: CreateUsagePlan -> Maybe ThrottleSettings

-- | The quota of the usage plan.
[$sel:quota:CreateUsagePlan'] :: CreateUsagePlan -> Maybe QuotaSettings

-- | The description of the usage plan.
[$sel:description:CreateUsagePlan'] :: CreateUsagePlan -> Maybe Text

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
[$sel:tags:CreateUsagePlan'] :: CreateUsagePlan -> Maybe (HashMap Text Text)

-- | <ul>
--   <li><i>Required</i> The name of the usage plan.</li>
--   </ul>
[$sel:name:CreateUsagePlan'] :: CreateUsagePlan -> Text

-- | Create a value of <a>CreateUsagePlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiStages:CreateUsagePlan'</a>,
--   <a>createUsagePlan_apiStages</a> - The associated API stages of the
--   usage plan.
--   
--   <a>$sel:throttle:CreateUsagePlan'</a>, <a>createUsagePlan_throttle</a>
--   - The throttling limits of the usage plan.
--   
--   <a>$sel:quota:CreateUsagePlan'</a>, <a>createUsagePlan_quota</a> - The
--   quota of the usage plan.
--   
--   <a>$sel:description:CreateUsagePlan'</a>,
--   <a>createUsagePlan_description</a> - The description of the usage
--   plan.
--   
--   <a>$sel:tags:CreateUsagePlan'</a>, <a>createUsagePlan_tags</a> - The
--   key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
--   
--   <a>$sel:name:CreateUsagePlan'</a>, <a>createUsagePlan_name</a> -
--   [Required] The name of the usage plan.
newCreateUsagePlan :: Text -> CreateUsagePlan

-- | The associated API stages of the usage plan.
createUsagePlan_apiStages :: Lens' CreateUsagePlan (Maybe [ApiStage])

-- | The throttling limits of the usage plan.
createUsagePlan_throttle :: Lens' CreateUsagePlan (Maybe ThrottleSettings)

-- | The quota of the usage plan.
createUsagePlan_quota :: Lens' CreateUsagePlan (Maybe QuotaSettings)

-- | The description of the usage plan.
createUsagePlan_description :: Lens' CreateUsagePlan (Maybe Text)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
createUsagePlan_tags :: Lens' CreateUsagePlan (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The name of the usage plan.</li>
--   </ul>
createUsagePlan_name :: Lens' CreateUsagePlan Text

-- | Represents a usage plan than can specify who can assess associated API
--   stages with specified request limits and quotas.
--   
--   In a usage plan, you associate an API by specifying the API's Id and a
--   stage name of the specified API. You add plan customers by adding API
--   keys to the plan.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlan</a> smart constructor.
data UsagePlan
UsagePlan' :: Maybe [ApiStage] -> Maybe Text -> Maybe Text -> Maybe ThrottleSettings -> Maybe QuotaSettings -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> UsagePlan

-- | The associated API stages of a usage plan.
[$sel:apiStages:UsagePlan'] :: UsagePlan -> Maybe [ApiStage]

-- | The name of a usage plan.
[$sel:name:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The identifier of a UsagePlan resource.
[$sel:id:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The request throttle limits of a usage plan.
[$sel:throttle:UsagePlan'] :: UsagePlan -> Maybe ThrottleSettings

-- | The maximum number of permitted requests per a given unit time
--   interval.
[$sel:quota:UsagePlan'] :: UsagePlan -> Maybe QuotaSettings

-- | The description of a usage plan.
[$sel:description:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
[$sel:productCode:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:UsagePlan'] :: UsagePlan -> Maybe (HashMap Text Text)

-- | Create a value of <a>UsagePlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiStages:UsagePlan'</a>, <a>usagePlan_apiStages</a> - The
--   associated API stages of a usage plan.
--   
--   <a>$sel:name:UsagePlan'</a>, <a>usagePlan_name</a> - The name of a
--   usage plan.
--   
--   <a>$sel:id:UsagePlan'</a>, <a>usagePlan_id</a> - The identifier of a
--   UsagePlan resource.
--   
--   <a>$sel:throttle:UsagePlan'</a>, <a>usagePlan_throttle</a> - The
--   request throttle limits of a usage plan.
--   
--   <a>$sel:quota:UsagePlan'</a>, <a>usagePlan_quota</a> - The maximum
--   number of permitted requests per a given unit time interval.
--   
--   <a>$sel:description:UsagePlan'</a>, <a>usagePlan_description</a> - The
--   description of a usage plan.
--   
--   <a>$sel:productCode:UsagePlan'</a>, <a>usagePlan_productCode</a> - The
--   AWS Markeplace product identifier to associate with the usage plan as
--   a SaaS product on AWS Marketplace.
--   
--   <a>$sel:tags:UsagePlan'</a>, <a>usagePlan_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newUsagePlan :: UsagePlan

-- | The associated API stages of a usage plan.
usagePlan_apiStages :: Lens' UsagePlan (Maybe [ApiStage])

-- | The name of a usage plan.
usagePlan_name :: Lens' UsagePlan (Maybe Text)

-- | The identifier of a UsagePlan resource.
usagePlan_id :: Lens' UsagePlan (Maybe Text)

-- | The request throttle limits of a usage plan.
usagePlan_throttle :: Lens' UsagePlan (Maybe ThrottleSettings)

-- | The maximum number of permitted requests per a given unit time
--   interval.
usagePlan_quota :: Lens' UsagePlan (Maybe QuotaSettings)

-- | The description of a usage plan.
usagePlan_description :: Lens' UsagePlan (Maybe Text)

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
usagePlan_productCode :: Lens' UsagePlan (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
usagePlan_tags :: Lens' UsagePlan (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.CreateUsagePlan.CreateUsagePlan
instance GHC.Show.Show Amazonka.APIGateway.CreateUsagePlan.CreateUsagePlan
instance GHC.Read.Read Amazonka.APIGateway.CreateUsagePlan.CreateUsagePlan
instance GHC.Classes.Eq Amazonka.APIGateway.CreateUsagePlan.CreateUsagePlan
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateUsagePlan.CreateUsagePlan
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateUsagePlan.CreateUsagePlan
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateUsagePlan.CreateUsagePlan
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateUsagePlan.CreateUsagePlan
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateUsagePlan.CreateUsagePlan
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateUsagePlan.CreateUsagePlan
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateUsagePlan.CreateUsagePlan


-- | Creates a new Stage resource that references a pre-existing Deployment
--   for the API.
module Amazonka.APIGateway.CreateStage

-- | Requests API Gateway to create a Stage resource.
--   
--   <i>See:</i> <a>newCreateStage</a> smart constructor.
data CreateStage
CreateStage' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Bool -> Maybe CacheClusterSize -> Maybe CanarySettings -> Maybe Bool -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> CreateStage

-- | A map that defines the stage variables for the new Stage resource.
--   Variable names can have alphanumeric and underscore characters, and
--   the values must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
[$sel:variables:CreateStage'] :: CreateStage -> Maybe (HashMap Text Text)

-- | The version of the associated API documentation.
[$sel:documentationVersion:CreateStage'] :: CreateStage -> Maybe Text

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
[$sel:tracingEnabled:CreateStage'] :: CreateStage -> Maybe Bool

-- | The stage's cache cluster size.
[$sel:cacheClusterSize:CreateStage'] :: CreateStage -> Maybe CacheClusterSize

-- | The canary deployment settings of this stage.
[$sel:canarySettings:CreateStage'] :: CreateStage -> Maybe CanarySettings

-- | Whether cache clustering is enabled for the stage.
[$sel:cacheClusterEnabled:CreateStage'] :: CreateStage -> Maybe Bool

-- | The description of the Stage resource.
[$sel:description:CreateStage'] :: CreateStage -> Maybe Text

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
[$sel:tags:CreateStage'] :: CreateStage -> Maybe (HashMap Text Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:CreateStage'] :: CreateStage -> Text

-- | <ul>
--   <li><i>Required</i> The name for the Stage resource. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.</li>
--   </ul>
[$sel:stageName:CreateStage'] :: CreateStage -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Deployment resource for the
--   Stage resource.</li>
--   </ul>
[$sel:deploymentId:CreateStage'] :: CreateStage -> Text

-- | Create a value of <a>CreateStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:CreateStage'</a>, <a>createStage_variables</a> - A
--   map that defines the stage variables for the new Stage resource.
--   Variable names can have alphanumeric and underscore characters, and
--   the values must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:documentationVersion:CreateStage'</a>,
--   <a>createStage_documentationVersion</a> - The version of the
--   associated API documentation.
--   
--   <a>$sel:tracingEnabled:CreateStage'</a>,
--   <a>createStage_tracingEnabled</a> - Specifies whether active tracing
--   with X-ray is enabled for the Stage.
--   
--   <a>$sel:cacheClusterSize:CreateStage'</a>,
--   <a>createStage_cacheClusterSize</a> - The stage's cache cluster size.
--   
--   <a>$sel:canarySettings:CreateStage'</a>,
--   <a>createStage_canarySettings</a> - The canary deployment settings of
--   this stage.
--   
--   <a>$sel:cacheClusterEnabled:CreateStage'</a>,
--   <a>createStage_cacheClusterEnabled</a> - Whether cache clustering is
--   enabled for the stage.
--   
--   <a>$sel:description:CreateStage'</a>, <a>createStage_description</a> -
--   The description of the Stage resource.
--   
--   <a>$sel:tags:CreateStage'</a>, <a>createStage_tags</a> - The key-value
--   map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag
--   key can be up to 128 characters and must not start with <tt>aws:</tt>.
--   The tag value can be up to 256 characters.
--   
--   <a>$sel:restApiId:CreateStage'</a>, <a>createStage_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:CreateStage'</a>, <a>createStage_stageName</a> -
--   [Required] The name for the Stage resource. Stage names can only
--   contain alphanumeric characters, hyphens, and underscores. Maximum
--   length is 128 characters.
--   
--   <a>$sel:deploymentId:CreateStage'</a>, <a>createStage_deploymentId</a>
--   - [Required] The identifier of the Deployment resource for the Stage
--   resource.
newCreateStage :: Text -> Text -> Text -> CreateStage

-- | A map that defines the stage variables for the new Stage resource.
--   Variable names can have alphanumeric and underscore characters, and
--   the values must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
createStage_variables :: Lens' CreateStage (Maybe (HashMap Text Text))

-- | The version of the associated API documentation.
createStage_documentationVersion :: Lens' CreateStage (Maybe Text)

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
createStage_tracingEnabled :: Lens' CreateStage (Maybe Bool)

-- | The stage's cache cluster size.
createStage_cacheClusterSize :: Lens' CreateStage (Maybe CacheClusterSize)

-- | The canary deployment settings of this stage.
createStage_canarySettings :: Lens' CreateStage (Maybe CanarySettings)

-- | Whether cache clustering is enabled for the stage.
createStage_cacheClusterEnabled :: Lens' CreateStage (Maybe Bool)

-- | The description of the Stage resource.
createStage_description :: Lens' CreateStage (Maybe Text)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
createStage_tags :: Lens' CreateStage (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createStage_restApiId :: Lens' CreateStage Text

-- | <ul>
--   <li><i>Required</i> The name for the Stage resource. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.</li>
--   </ul>
createStage_stageName :: Lens' CreateStage Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Deployment resource for the
--   Stage resource.</li>
--   </ul>
createStage_deploymentId :: Lens' CreateStage Text

-- | Represents a unique identifier for a version of a deployed RestApi
--   that is callable by users.
--   
--   <a>Deploy an API</a>
--   
--   <i>See:</i> <a>newStage</a> smart constructor.
data Stage
Stage' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe AccessLogSettings -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe CacheClusterStatus -> Maybe (HashMap Text MethodSetting) -> Maybe POSIX -> Maybe CacheClusterSize -> Maybe Text -> Maybe CanarySettings -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Stage

-- | The identifier of the Deployment that the stage points to.
[$sel:deploymentId:Stage'] :: Stage -> Maybe Text

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
[$sel:variables:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | Settings for logging access in this stage.
[$sel:accessLogSettings:Stage'] :: Stage -> Maybe AccessLogSettings

-- | The version of the associated API documentation.
[$sel:documentationVersion:Stage'] :: Stage -> Maybe Text

-- | The identifier of a client certificate for an API stage.
[$sel:clientCertificateId:Stage'] :: Stage -> Maybe Text

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
[$sel:tracingEnabled:Stage'] :: Stage -> Maybe Bool

-- | The timestamp when the stage was created.
[$sel:createdDate:Stage'] :: Stage -> Maybe POSIX

-- | The status of the cache cluster for the stage, if enabled.
[$sel:cacheClusterStatus:Stage'] :: Stage -> Maybe CacheClusterStatus

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
[$sel:methodSettings:Stage'] :: Stage -> Maybe (HashMap Text MethodSetting)

-- | The timestamp when the stage last updated.
[$sel:lastUpdatedDate:Stage'] :: Stage -> Maybe POSIX

-- | The size of the cache cluster for the stage, if enabled.
[$sel:cacheClusterSize:Stage'] :: Stage -> Maybe CacheClusterSize

-- | The ARN of the WebAcl associated with the Stage.
[$sel:webAclArn:Stage'] :: Stage -> Maybe Text

-- | Settings for the canary deployment in this stage.
[$sel:canarySettings:Stage'] :: Stage -> Maybe CanarySettings

-- | Specifies whether a cache cluster is enabled for the stage.
[$sel:cacheClusterEnabled:Stage'] :: Stage -> Maybe Bool

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
[$sel:stageName:Stage'] :: Stage -> Maybe Text

-- | The stage's description.
[$sel:description:Stage'] :: Stage -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | Create a value of <a>Stage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Stage'</a>, <a>stage_deploymentId</a> - The
--   identifier of the Deployment that the stage points to.
--   
--   <a>$sel:variables:Stage'</a>, <a>stage_variables</a> - A map that
--   defines the stage variables for a Stage resource. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:accessLogSettings:Stage'</a>, <a>stage_accessLogSettings</a> -
--   Settings for logging access in this stage.
--   
--   <a>$sel:documentationVersion:Stage'</a>,
--   <a>stage_documentationVersion</a> - The version of the associated API
--   documentation.
--   
--   <a>$sel:clientCertificateId:Stage'</a>,
--   <a>stage_clientCertificateId</a> - The identifier of a client
--   certificate for an API stage.
--   
--   <a>$sel:tracingEnabled:Stage'</a>, <a>stage_tracingEnabled</a> -
--   Specifies whether active tracing with X-ray is enabled for the Stage.
--   
--   <a>$sel:createdDate:Stage'</a>, <a>stage_createdDate</a> - The
--   timestamp when the stage was created.
--   
--   <a>$sel:cacheClusterStatus:Stage'</a>, <a>stage_cacheClusterStatus</a>
--   - The status of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:methodSettings:Stage'</a>, <a>stage_methodSettings</a> - A map
--   that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
--   
--   <a>$sel:lastUpdatedDate:Stage'</a>, <a>stage_lastUpdatedDate</a> - The
--   timestamp when the stage last updated.
--   
--   <a>$sel:cacheClusterSize:Stage'</a>, <a>stage_cacheClusterSize</a> -
--   The size of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:webAclArn:Stage'</a>, <a>stage_webAclArn</a> - The ARN of the
--   WebAcl associated with the Stage.
--   
--   <a>$sel:canarySettings:Stage'</a>, <a>stage_canarySettings</a> -
--   Settings for the canary deployment in this stage.
--   
--   <a>$sel:cacheClusterEnabled:Stage'</a>,
--   <a>stage_cacheClusterEnabled</a> - Specifies whether a cache cluster
--   is enabled for the stage.
--   
--   <a>$sel:stageName:Stage'</a>, <a>stage_stageName</a> - The name of the
--   stage is the first path segment in the Uniform Resource Identifier
--   (URI) of a call to API Gateway. Stage names can only contain
--   alphanumeric characters, hyphens, and underscores. Maximum length is
--   128 characters.
--   
--   <a>$sel:description:Stage'</a>, <a>stage_description</a> - The stage's
--   description.
--   
--   <a>$sel:tags:Stage'</a>, <a>stage_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newStage :: Stage

-- | The identifier of the Deployment that the stage points to.
stage_deploymentId :: Lens' Stage (Maybe Text)

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
stage_variables :: Lens' Stage (Maybe (HashMap Text Text))

-- | Settings for logging access in this stage.
stage_accessLogSettings :: Lens' Stage (Maybe AccessLogSettings)

-- | The version of the associated API documentation.
stage_documentationVersion :: Lens' Stage (Maybe Text)

-- | The identifier of a client certificate for an API stage.
stage_clientCertificateId :: Lens' Stage (Maybe Text)

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
stage_tracingEnabled :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was created.
stage_createdDate :: Lens' Stage (Maybe UTCTime)

-- | The status of the cache cluster for the stage, if enabled.
stage_cacheClusterStatus :: Lens' Stage (Maybe CacheClusterStatus)

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
stage_methodSettings :: Lens' Stage (Maybe (HashMap Text MethodSetting))

-- | The timestamp when the stage last updated.
stage_lastUpdatedDate :: Lens' Stage (Maybe UTCTime)

-- | The size of the cache cluster for the stage, if enabled.
stage_cacheClusterSize :: Lens' Stage (Maybe CacheClusterSize)

-- | The ARN of the WebAcl associated with the Stage.
stage_webAclArn :: Lens' Stage (Maybe Text)

-- | Settings for the canary deployment in this stage.
stage_canarySettings :: Lens' Stage (Maybe CanarySettings)

-- | Specifies whether a cache cluster is enabled for the stage.
stage_cacheClusterEnabled :: Lens' Stage (Maybe Bool)

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
stage_stageName :: Lens' Stage (Maybe Text)

-- | The stage's description.
stage_description :: Lens' Stage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
stage_tags :: Lens' Stage (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.CreateStage.CreateStage
instance GHC.Show.Show Amazonka.APIGateway.CreateStage.CreateStage
instance GHC.Read.Read Amazonka.APIGateway.CreateStage.CreateStage
instance GHC.Classes.Eq Amazonka.APIGateway.CreateStage.CreateStage
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateStage.CreateStage
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateStage.CreateStage
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateStage.CreateStage
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateStage.CreateStage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateStage.CreateStage
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateStage.CreateStage
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateStage.CreateStage


-- | Creates a new RestApi resource.
module Amazonka.APIGateway.CreateRestApi

-- | The POST Request to add a new RestApi resource to your collection.
--   
--   <i>See:</i> <a>newCreateRestApi</a> smart constructor.
data CreateRestApi
CreateRestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateRestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
[$sel:minimumCompressionSize:CreateRestApi'] :: CreateRestApi -> Maybe Int

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
[$sel:disableExecuteApiEndpoint:CreateRestApi'] :: CreateRestApi -> Maybe Bool

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
[$sel:binaryMediaTypes:CreateRestApi'] :: CreateRestApi -> Maybe [Text]

-- | A version identifier for the API.
[$sel:version:CreateRestApi'] :: CreateRestApi -> Maybe Text

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
[$sel:apiKeySource:CreateRestApi'] :: CreateRestApi -> Maybe ApiKeySourceType

-- | The ID of the RestApi that you want to clone from.
[$sel:cloneFrom:CreateRestApi'] :: CreateRestApi -> Maybe Text

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
[$sel:policy:CreateRestApi'] :: CreateRestApi -> Maybe Text

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
[$sel:endpointConfiguration:CreateRestApi'] :: CreateRestApi -> Maybe EndpointConfiguration

-- | The description of the RestApi.
[$sel:description:CreateRestApi'] :: CreateRestApi -> Maybe Text

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
[$sel:tags:CreateRestApi'] :: CreateRestApi -> Maybe (HashMap Text Text)

-- | <ul>
--   <li><i>Required</i> The name of the RestApi.</li>
--   </ul>
[$sel:name:CreateRestApi'] :: CreateRestApi -> Text

-- | Create a value of <a>CreateRestApi</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:CreateRestApi'</a>,
--   <a>createRestApi_minimumCompressionSize</a> - A nullable integer that
--   is used to enable compression (with non-negative between 0 and
--   10485760 (10M) bytes, inclusive) or disable compression (with a null
--   value) on an API. When compression is enabled, compression or
--   decompression is not applied on the payload if the payload size is
--   smaller than this value. Setting it to zero allows compression for any
--   payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:CreateRestApi'</a>,
--   <a>createRestApi_disableExecuteApiEndpoint</a> - Specifies whether
--   clients can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:CreateRestApi'</a>,
--   <a>createRestApi_binaryMediaTypes</a> - The list of binary media types
--   supported by the RestApi. By default, the RestApi supports only
--   UTF-8-encoded text payloads.
--   
--   <a>$sel:version:CreateRestApi'</a>, <a>createRestApi_version</a> - A
--   version identifier for the API.
--   
--   <a>$sel:apiKeySource:CreateRestApi'</a>,
--   <a>createRestApi_apiKeySource</a> - The source of the API key for
--   metering requests according to a usage plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:cloneFrom:CreateRestApi'</a>, <a>createRestApi_cloneFrom</a> -
--   The ID of the RestApi that you want to clone from.
--   
--   <a>$sel:policy:CreateRestApi'</a>, <a>createRestApi_policy</a> - A
--   stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:CreateRestApi'</a>,
--   <a>createRestApi_endpointConfiguration</a> - The endpoint
--   configuration of this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:CreateRestApi'</a>,
--   <a>createRestApi_description</a> - The description of the RestApi.
--   
--   <a>$sel:tags:CreateRestApi'</a>, <a>createRestApi_tags</a> - The
--   key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
--   
--   <a>$sel:name:CreateRestApi'</a>, <a>createRestApi_name</a> -
--   [Required] The name of the RestApi.
newCreateRestApi :: Text -> CreateRestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
createRestApi_minimumCompressionSize :: Lens' CreateRestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
createRestApi_disableExecuteApiEndpoint :: Lens' CreateRestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
createRestApi_binaryMediaTypes :: Lens' CreateRestApi (Maybe [Text])

-- | A version identifier for the API.
createRestApi_version :: Lens' CreateRestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
createRestApi_apiKeySource :: Lens' CreateRestApi (Maybe ApiKeySourceType)

-- | The ID of the RestApi that you want to clone from.
createRestApi_cloneFrom :: Lens' CreateRestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
createRestApi_policy :: Lens' CreateRestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
createRestApi_endpointConfiguration :: Lens' CreateRestApi (Maybe EndpointConfiguration)

-- | The description of the RestApi.
createRestApi_description :: Lens' CreateRestApi (Maybe Text)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
createRestApi_tags :: Lens' CreateRestApi (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The name of the RestApi.</li>
--   </ul>
createRestApi_name :: Lens' CreateRestApi Text

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
[$sel:minimumCompressionSize:RestApi'] :: RestApi -> Maybe Int

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
[$sel:disableExecuteApiEndpoint:RestApi'] :: RestApi -> Maybe Bool

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
[$sel:binaryMediaTypes:RestApi'] :: RestApi -> Maybe [Text]

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
[$sel:warnings:RestApi'] :: RestApi -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:RestApi'] :: RestApi -> Maybe POSIX

-- | The API's name.
[$sel:name:RestApi'] :: RestApi -> Maybe Text

-- | A version identifier for the API.
[$sel:version:RestApi'] :: RestApi -> Maybe Text

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
[$sel:apiKeySource:RestApi'] :: RestApi -> Maybe ApiKeySourceType

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
[$sel:id:RestApi'] :: RestApi -> Maybe Text

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
[$sel:policy:RestApi'] :: RestApi -> Maybe Text

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
[$sel:endpointConfiguration:RestApi'] :: RestApi -> Maybe EndpointConfiguration

-- | The API's description.
[$sel:description:RestApi'] :: RestApi -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:RestApi'] :: RestApi -> Maybe (HashMap Text Text)

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.CreateRestApi.CreateRestApi
instance GHC.Show.Show Amazonka.APIGateway.CreateRestApi.CreateRestApi
instance GHC.Read.Read Amazonka.APIGateway.CreateRestApi.CreateRestApi
instance GHC.Classes.Eq Amazonka.APIGateway.CreateRestApi.CreateRestApi
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateRestApi.CreateRestApi
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateRestApi.CreateRestApi
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateRestApi.CreateRestApi
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateRestApi.CreateRestApi
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateRestApi.CreateRestApi
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateRestApi.CreateRestApi
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateRestApi.CreateRestApi


-- | Creates a Resource resource.
module Amazonka.APIGateway.CreateResource

-- | Requests API Gateway to create a Resource resource.
--   
--   <i>See:</i> <a>newCreateResource</a> smart constructor.
data CreateResource
CreateResource' :: Text -> Text -> Text -> CreateResource

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:CreateResource'] :: CreateResource -> Text

-- | <ul>
--   <li><i>Required</i> The parent resource's identifier.</li>
--   </ul>
[$sel:parentId:CreateResource'] :: CreateResource -> Text

-- | The last path segment for this resource.
[$sel:pathPart:CreateResource'] :: CreateResource -> Text

-- | Create a value of <a>CreateResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:CreateResource'</a>, <a>createResource_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:parentId:CreateResource'</a>, <a>createResource_parentId</a> -
--   [Required] The parent resource's identifier.
--   
--   <a>$sel:pathPart:CreateResource'</a>, <a>createResource_pathPart</a> -
--   The last path segment for this resource.
newCreateResource :: Text -> Text -> Text -> CreateResource

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createResource_restApiId :: Lens' CreateResource Text

-- | <ul>
--   <li><i>Required</i> The parent resource's identifier.</li>
--   </ul>
createResource_parentId :: Lens' CreateResource Text

-- | The last path segment for this resource.
createResource_pathPart :: Lens' CreateResource Text

-- | Represents an API resource.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Method) -> Maybe Text -> Resource

-- | The last path segment for this resource.
[$sel:pathPart:Resource'] :: Resource -> Maybe Text

-- | The full path for this resource.
[$sel:path:Resource'] :: Resource -> Maybe Text

-- | The resource's identifier.
[$sel:id:Resource'] :: Resource -> Maybe Text

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
[$sel:resourceMethods:Resource'] :: Resource -> Maybe (HashMap Text Method)

-- | The parent resource's identifier.
[$sel:parentId:Resource'] :: Resource -> Maybe Text

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathPart:Resource'</a>, <a>resource_pathPart</a> - The last
--   path segment for this resource.
--   
--   <a>$sel:path:Resource'</a>, <a>resource_path</a> - The full path for
--   this resource.
--   
--   <a>$sel:id:Resource'</a>, <a>resource_id</a> - The resource's
--   identifier.
--   
--   <a>$sel:resourceMethods:Resource'</a>, <a>resource_resourceMethods</a>
--   - Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
--   
--   <a>$sel:parentId:Resource'</a>, <a>resource_parentId</a> - The parent
--   resource's identifier.
newResource :: Resource

-- | The last path segment for this resource.
resource_pathPart :: Lens' Resource (Maybe Text)

-- | The full path for this resource.
resource_path :: Lens' Resource (Maybe Text)

-- | The resource's identifier.
resource_id :: Lens' Resource (Maybe Text)

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
resource_resourceMethods :: Lens' Resource (Maybe (HashMap Text Method))

-- | The parent resource's identifier.
resource_parentId :: Lens' Resource (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.CreateResource.CreateResource
instance GHC.Show.Show Amazonka.APIGateway.CreateResource.CreateResource
instance GHC.Read.Read Amazonka.APIGateway.CreateResource.CreateResource
instance GHC.Classes.Eq Amazonka.APIGateway.CreateResource.CreateResource
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateResource.CreateResource
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateResource.CreateResource
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateResource.CreateResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateResource.CreateResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateResource.CreateResource
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateResource.CreateResource
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateResource.CreateResource


-- | Creates a ReqeustValidator of a given RestApi.
module Amazonka.APIGateway.CreateRequestValidator

-- | Creates a RequestValidator of a given RestApi.
--   
--   <i>See:</i> <a>newCreateRequestValidator</a> smart constructor.
data CreateRequestValidator
CreateRequestValidator' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Text -> CreateRequestValidator

-- | A Boolean flag to indicate whether to validate request parameters,
--   <tt>true</tt>, or not <tt>false</tt>.
[$sel:validateRequestParameters:CreateRequestValidator'] :: CreateRequestValidator -> Maybe Bool

-- | The name of the to-be-created RequestValidator.
[$sel:name:CreateRequestValidator'] :: CreateRequestValidator -> Maybe Text

-- | A Boolean flag to indicate whether to validate request body according
--   to the configured model schema for the method (<tt>true</tt>) or not
--   (<tt>false</tt>).
[$sel:validateRequestBody:CreateRequestValidator'] :: CreateRequestValidator -> Maybe Bool

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:CreateRequestValidator'] :: CreateRequestValidator -> Text

-- | Create a value of <a>CreateRequestValidator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validateRequestParameters:CreateRequestValidator'</a>,
--   <a>createRequestValidator_validateRequestParameters</a> - A Boolean
--   flag to indicate whether to validate request parameters,
--   <tt>true</tt>, or not <tt>false</tt>.
--   
--   <a>$sel:name:CreateRequestValidator'</a>,
--   <a>createRequestValidator_name</a> - The name of the to-be-created
--   RequestValidator.
--   
--   <a>$sel:validateRequestBody:CreateRequestValidator'</a>,
--   <a>createRequestValidator_validateRequestBody</a> - A Boolean flag to
--   indicate whether to validate request body according to the configured
--   model schema for the method (<tt>true</tt>) or not (<tt>false</tt>).
--   
--   <a>$sel:restApiId:CreateRequestValidator'</a>,
--   <a>createRequestValidator_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
newCreateRequestValidator :: Text -> CreateRequestValidator

-- | A Boolean flag to indicate whether to validate request parameters,
--   <tt>true</tt>, or not <tt>false</tt>.
createRequestValidator_validateRequestParameters :: Lens' CreateRequestValidator (Maybe Bool)

-- | The name of the to-be-created RequestValidator.
createRequestValidator_name :: Lens' CreateRequestValidator (Maybe Text)

-- | A Boolean flag to indicate whether to validate request body according
--   to the configured model schema for the method (<tt>true</tt>) or not
--   (<tt>false</tt>).
createRequestValidator_validateRequestBody :: Lens' CreateRequestValidator (Maybe Bool)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createRequestValidator_restApiId :: Lens' CreateRequestValidator Text

-- | A set of validation rules for incoming Method requests.
--   
--   In OpenAPI, a RequestValidator of an API is defined by the
--   <a>x-amazon-apigateway-request-validators.requestValidator</a> object.
--   It the referenced using the
--   <a>x-amazon-apigateway-request-validator</a> property.
--   
--   <a>Enable Basic Request Validation in API Gateway</a>
--   
--   <i>See:</i> <a>newRequestValidator</a> smart constructor.
data RequestValidator
RequestValidator' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> RequestValidator

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
[$sel:validateRequestParameters:RequestValidator'] :: RequestValidator -> Maybe Bool

-- | The name of this RequestValidator
[$sel:name:RequestValidator'] :: RequestValidator -> Maybe Text

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
[$sel:validateRequestBody:RequestValidator'] :: RequestValidator -> Maybe Bool

-- | The identifier of this RequestValidator.
[$sel:id:RequestValidator'] :: RequestValidator -> Maybe Text

-- | Create a value of <a>RequestValidator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validateRequestParameters:RequestValidator'</a>,
--   <a>requestValidator_validateRequestParameters</a> - A Boolean flag to
--   indicate whether to validate request parameters (<tt>true</tt>) or not
--   (<tt>false</tt>).
--   
--   <a>$sel:name:RequestValidator'</a>, <a>requestValidator_name</a> - The
--   name of this RequestValidator
--   
--   <a>$sel:validateRequestBody:RequestValidator'</a>,
--   <a>requestValidator_validateRequestBody</a> - A Boolean flag to
--   indicate whether to validate a request body according to the
--   configured Model schema.
--   
--   <a>$sel:id:RequestValidator'</a>, <a>requestValidator_id</a> - The
--   identifier of this RequestValidator.
newRequestValidator :: RequestValidator

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
requestValidator_validateRequestParameters :: Lens' RequestValidator (Maybe Bool)

-- | The name of this RequestValidator
requestValidator_name :: Lens' RequestValidator (Maybe Text)

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
requestValidator_validateRequestBody :: Lens' RequestValidator (Maybe Bool)

-- | The identifier of this RequestValidator.
requestValidator_id :: Lens' RequestValidator (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.CreateRequestValidator.CreateRequestValidator
instance GHC.Show.Show Amazonka.APIGateway.CreateRequestValidator.CreateRequestValidator
instance GHC.Read.Read Amazonka.APIGateway.CreateRequestValidator.CreateRequestValidator
instance GHC.Classes.Eq Amazonka.APIGateway.CreateRequestValidator.CreateRequestValidator
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateRequestValidator.CreateRequestValidator
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateRequestValidator.CreateRequestValidator
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateRequestValidator.CreateRequestValidator
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateRequestValidator.CreateRequestValidator
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateRequestValidator.CreateRequestValidator
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateRequestValidator.CreateRequestValidator
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateRequestValidator.CreateRequestValidator


-- | Adds a new Model resource to an existing RestApi resource.
module Amazonka.APIGateway.CreateModel

-- | Request to add a new Model to an existing RestApi resource.
--   
--   <i>See:</i> <a>newCreateModel</a> smart constructor.
data CreateModel
CreateModel' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> CreateModel

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model.
[$sel:schema:CreateModel'] :: CreateModel -> Maybe Text

-- | The description of the model.
[$sel:description:CreateModel'] :: CreateModel -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The RestApi identifier under which the Model will
--   be created.</li>
--   </ul>
[$sel:restApiId:CreateModel'] :: CreateModel -> Text

-- | <ul>
--   <li><i>Required</i> The name of the model. Must be alphanumeric.</li>
--   </ul>
[$sel:name:CreateModel'] :: CreateModel -> Text

-- | <ul>
--   <li><i>Required</i> The content-type for the model.</li>
--   </ul>
[$sel:contentType:CreateModel'] :: CreateModel -> Text

-- | Create a value of <a>CreateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:CreateModel'</a>, <a>createModel_schema</a> - The
--   schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model.
--   
--   <a>$sel:description:CreateModel'</a>, <a>createModel_description</a> -
--   The description of the model.
--   
--   <a>$sel:restApiId:CreateModel'</a>, <a>createModel_restApiId</a> -
--   [Required] The RestApi identifier under which the Model will be
--   created.
--   
--   <a>$sel:name:CreateModel'</a>, <a>createModel_name</a> - [Required]
--   The name of the model. Must be alphanumeric.
--   
--   <a>$sel:contentType:CreateModel'</a>, <a>createModel_contentType</a> -
--   [Required] The content-type for the model.
newCreateModel :: Text -> Text -> Text -> CreateModel

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model.
createModel_schema :: Lens' CreateModel (Maybe Text)

-- | The description of the model.
createModel_description :: Lens' CreateModel (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The RestApi identifier under which the Model will
--   be created.</li>
--   </ul>
createModel_restApiId :: Lens' CreateModel Text

-- | <ul>
--   <li><i>Required</i> The name of the model. Must be alphanumeric.</li>
--   </ul>
createModel_name :: Lens' CreateModel Text

-- | <ul>
--   <li><i>Required</i> The content-type for the model.</li>
--   </ul>
createModel_contentType :: Lens' CreateModel Text

-- | Represents the data structure of a method's request or response
--   payload.
--   
--   A request model defines the data structure of the client-supplied
--   request payload. A response model defines the data structure of the
--   response payload returned by the back end. Although not required,
--   models are useful for mapping payloads between the front end and back
--   end.
--   
--   A model is used for generating an API's SDK, validating the input
--   request body, and creating a skeletal mapping template.
--   
--   Method, MethodResponse, <a>Models and Mappings</a>
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Model

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
[$sel:schema:Model'] :: Model -> Maybe Text

-- | The name of the model. Must be an alphanumeric string.
[$sel:name:Model'] :: Model -> Maybe Text

-- | The identifier for the model resource.
[$sel:id:Model'] :: Model -> Maybe Text

-- | The description of the model.
[$sel:description:Model'] :: Model -> Maybe Text

-- | The content-type for the model.
[$sel:contentType:Model'] :: Model -> Maybe Text

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:Model'</a>, <a>model_schema</a> - The schema for the
--   model. For <tt>application/json</tt> models, this should be <a>JSON
--   schema draft 4</a> model. Do not include "\*/" characters in the
--   description of any properties because such "\*/" characters may be
--   interpreted as the closing marker for comments in some languages, such
--   as Java or JavaScript, causing the installation of your API's SDK
--   generated by API Gateway to fail.
--   
--   <a>$sel:name:Model'</a>, <a>model_name</a> - The name of the model.
--   Must be an alphanumeric string.
--   
--   <a>$sel:id:Model'</a>, <a>model_id</a> - The identifier for the model
--   resource.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The
--   description of the model.
--   
--   <a>$sel:contentType:Model'</a>, <a>model_contentType</a> - The
--   content-type for the model.
newModel :: Model

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
model_schema :: Lens' Model (Maybe Text)

-- | The name of the model. Must be an alphanumeric string.
model_name :: Lens' Model (Maybe Text)

-- | The identifier for the model resource.
model_id :: Lens' Model (Maybe Text)

-- | The description of the model.
model_description :: Lens' Model (Maybe Text)

-- | The content-type for the model.
model_contentType :: Lens' Model (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.CreateModel.CreateModel
instance GHC.Show.Show Amazonka.APIGateway.CreateModel.CreateModel
instance GHC.Read.Read Amazonka.APIGateway.CreateModel.CreateModel
instance GHC.Classes.Eq Amazonka.APIGateway.CreateModel.CreateModel
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateModel.CreateModel
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateModel.CreateModel
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateModel.CreateModel
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateModel.CreateModel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateModel.CreateModel
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateModel.CreateModel
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateModel.CreateModel


-- | Creates a new domain name.
module Amazonka.APIGateway.CreateDomainName

-- | A request to create a new domain name.
--   
--   <i>See:</i> <a>newCreateDomainName</a> smart constructor.
data CreateDomainName
CreateDomainName' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SecurityPolicy -> Maybe MutualTlsAuthenticationInput -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe (HashMap Text Text) -> Text -> CreateDomainName

-- | The user-friendly name of the certificate that will be used by
--   edge-optimized endpoint for this domain name.
[$sel:certificateName:CreateDomainName'] :: CreateDomainName -> Maybe Text

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
[$sel:ownershipVerificationCertificateArn:CreateDomainName'] :: CreateDomainName -> Maybe Text

-- | The reference to an AWS-managed certificate that will be used by
--   regional endpoint for this domain name. AWS Certificate Manager is the
--   only supported source.
[$sel:regionalCertificateArn:CreateDomainName'] :: CreateDomainName -> Maybe Text

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
[$sel:certificateArn:CreateDomainName'] :: CreateDomainName -> Maybe Text

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
[$sel:securityPolicy:CreateDomainName'] :: CreateDomainName -> Maybe SecurityPolicy
[$sel:mutualTlsAuthentication:CreateDomainName'] :: CreateDomainName -> Maybe MutualTlsAuthenticationInput

-- | <ul>
--   <li><i>Deprecated</i> Your edge-optimized endpoint's domain name
--   certificate's private key.</li>
--   </ul>
[$sel:certificatePrivateKey:CreateDomainName'] :: CreateDomainName -> Maybe Text

-- | The user-friendly name of the certificate that will be used by
--   regional endpoint for this domain name.
[$sel:regionalCertificateName:CreateDomainName'] :: CreateDomainName -> Maybe Text

-- | <ul>
--   <li><i>Deprecated</i> The body of the server certificate that will be
--   used by edge-optimized endpoint for this domain name provided by your
--   certificate authority.</li>
--   </ul>
[$sel:certificateBody:CreateDomainName'] :: CreateDomainName -> Maybe Text

-- | <ul>
--   <li><i>Deprecated</i> The intermediate certificates and optionally the
--   root certificate, one after the other without any blank lines, used by
--   an edge-optimized endpoint for this domain name. If you include the
--   root certificate, your certificate chain must start with intermediate
--   certificates and end with the root certificate. Use the intermediate
--   certificates that were provided by your certificate authority. Do not
--   include any intermediaries that are not in the chain of trust
--   path.</li>
--   </ul>
[$sel:certificateChain:CreateDomainName'] :: CreateDomainName -> Maybe Text

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
[$sel:endpointConfiguration:CreateDomainName'] :: CreateDomainName -> Maybe EndpointConfiguration

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
[$sel:tags:CreateDomainName'] :: CreateDomainName -> Maybe (HashMap Text Text)

-- | <ul>
--   <li><i>Required</i> The name of the DomainName resource.</li>
--   </ul>
[$sel:domainName:CreateDomainName'] :: CreateDomainName -> Text

-- | Create a value of <a>CreateDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateName:CreateDomainName'</a>,
--   <a>createDomainName_certificateName</a> - The user-friendly name of
--   the certificate that will be used by edge-optimized endpoint for this
--   domain name.
--   
--   <a>$sel:ownershipVerificationCertificateArn:CreateDomainName'</a>,
--   <a>createDomainName_ownershipVerificationCertificateArn</a> - The ARN
--   of the public certificate issued by ACM to validate ownership of your
--   custom domain. Only required when configuring mutual TLS and using an
--   ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
--   
--   <a>$sel:regionalCertificateArn:CreateDomainName'</a>,
--   <a>createDomainName_regionalCertificateArn</a> - The reference to an
--   AWS-managed certificate that will be used by regional endpoint for
--   this domain name. AWS Certificate Manager is the only supported
--   source.
--   
--   <a>$sel:certificateArn:CreateDomainName'</a>,
--   <a>createDomainName_certificateArn</a> - The reference to an
--   AWS-managed certificate that will be used by edge-optimized endpoint
--   for this domain name. AWS Certificate Manager is the only supported
--   source.
--   
--   <a>$sel:securityPolicy:CreateDomainName'</a>,
--   <a>createDomainName_securityPolicy</a> - The Transport Layer Security
--   (TLS) version + cipher suite for this DomainName. The valid values are
--   <tt>TLS_1_0</tt> and <tt>TLS_1_2</tt>.
--   
--   <a>$sel:mutualTlsAuthentication:CreateDomainName'</a>,
--   <a>createDomainName_mutualTlsAuthentication</a> - Undocumented member.
--   
--   <a>$sel:certificatePrivateKey:CreateDomainName'</a>,
--   <a>createDomainName_certificatePrivateKey</a> - [Deprecated] Your
--   edge-optimized endpoint's domain name certificate's private key.
--   
--   <a>$sel:regionalCertificateName:CreateDomainName'</a>,
--   <a>createDomainName_regionalCertificateName</a> - The user-friendly
--   name of the certificate that will be used by regional endpoint for
--   this domain name.
--   
--   <a>$sel:certificateBody:CreateDomainName'</a>,
--   <a>createDomainName_certificateBody</a> - [Deprecated] The body of the
--   server certificate that will be used by edge-optimized endpoint for
--   this domain name provided by your certificate authority.
--   
--   <a>$sel:certificateChain:CreateDomainName'</a>,
--   <a>createDomainName_certificateChain</a> - [Deprecated] The
--   intermediate certificates and optionally the root certificate, one
--   after the other without any blank lines, used by an edge-optimized
--   endpoint for this domain name. If you include the root certificate,
--   your certificate chain must start with intermediate certificates and
--   end with the root certificate. Use the intermediate certificates that
--   were provided by your certificate authority. Do not include any
--   intermediaries that are not in the chain of trust path.
--   
--   <a>$sel:endpointConfiguration:CreateDomainName'</a>,
--   <a>createDomainName_endpointConfiguration</a> - The endpoint
--   configuration of this DomainName showing the endpoint types of the
--   domain name.
--   
--   <a>$sel:tags:CreateDomainName'</a>, <a>createDomainName_tags</a> - The
--   key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
--   
--   <a>$sel:domainName:CreateDomainName'</a>,
--   <a>createDomainName_domainName</a> - [Required] The name of the
--   DomainName resource.
newCreateDomainName :: Text -> CreateDomainName

-- | The user-friendly name of the certificate that will be used by
--   edge-optimized endpoint for this domain name.
createDomainName_certificateName :: Lens' CreateDomainName (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
createDomainName_ownershipVerificationCertificateArn :: Lens' CreateDomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   regional endpoint for this domain name. AWS Certificate Manager is the
--   only supported source.
createDomainName_regionalCertificateArn :: Lens' CreateDomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
createDomainName_certificateArn :: Lens' CreateDomainName (Maybe Text)

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
createDomainName_securityPolicy :: Lens' CreateDomainName (Maybe SecurityPolicy)

-- | Undocumented member.
createDomainName_mutualTlsAuthentication :: Lens' CreateDomainName (Maybe MutualTlsAuthenticationInput)

-- | <ul>
--   <li><i>Deprecated</i> Your edge-optimized endpoint's domain name
--   certificate's private key.</li>
--   </ul>
createDomainName_certificatePrivateKey :: Lens' CreateDomainName (Maybe Text)

-- | The user-friendly name of the certificate that will be used by
--   regional endpoint for this domain name.
createDomainName_regionalCertificateName :: Lens' CreateDomainName (Maybe Text)

-- | <ul>
--   <li><i>Deprecated</i> The body of the server certificate that will be
--   used by edge-optimized endpoint for this domain name provided by your
--   certificate authority.</li>
--   </ul>
createDomainName_certificateBody :: Lens' CreateDomainName (Maybe Text)

-- | <ul>
--   <li><i>Deprecated</i> The intermediate certificates and optionally the
--   root certificate, one after the other without any blank lines, used by
--   an edge-optimized endpoint for this domain name. If you include the
--   root certificate, your certificate chain must start with intermediate
--   certificates and end with the root certificate. Use the intermediate
--   certificates that were provided by your certificate authority. Do not
--   include any intermediaries that are not in the chain of trust
--   path.</li>
--   </ul>
createDomainName_certificateChain :: Lens' CreateDomainName (Maybe Text)

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
createDomainName_endpointConfiguration :: Lens' CreateDomainName (Maybe EndpointConfiguration)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
createDomainName_tags :: Lens' CreateDomainName (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The name of the DomainName resource.</li>
--   </ul>
createDomainName_domainName :: Lens' CreateDomainName Text

-- | Represents a custom domain name as a user-friendly host name of an API
--   (RestApi).
--   
--   When you deploy an API, API Gateway creates a default host name for
--   the API. This default API host name is of the
--   <tt>{restapi-id}.execute-api.{region}.amazonaws.com</tt> format. With
--   the default host name, you can access the API's root resource with the
--   URL of
--   <tt>https://{restapi-id}.execute-api.{region}.amazonaws.com/{stage}/</tt>.
--   When you set up a custom domain name of <tt>apis.example.com</tt> for
--   this API, you can then access the same resource using the URL of the
--   <tt>https://apis.examples.com/myApi</tt>, where <tt>myApi</tt> is the
--   base path mapping (BasePathMapping) of your API under the custom
--   domain name.
--   
--   <a>Set a Custom Host Name for an API</a>
--   
--   <i>See:</i> <a>newDomainName</a> smart constructor.
data DomainName
DomainName' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SecurityPolicy -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe DomainNameStatus -> Maybe (HashMap Text Text) -> DomainName

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
[$sel:regionalHostedZoneId:DomainName'] :: DomainName -> Maybe Text

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
[$sel:certificateName:DomainName'] :: DomainName -> Maybe Text

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
[$sel:ownershipVerificationCertificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
[$sel:regionalCertificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
[$sel:certificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
[$sel:distributionHostedZoneId:DomainName'] :: DomainName -> Maybe Text

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
[$sel:securityPolicy:DomainName'] :: DomainName -> Maybe SecurityPolicy

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
[$sel:domainName:DomainName'] :: DomainName -> Maybe Text

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
[$sel:mutualTlsAuthentication:DomainName'] :: DomainName -> Maybe MutualTlsAuthentication

-- | The name of the certificate that will be used for validating the
--   regional domain name.
[$sel:regionalCertificateName:DomainName'] :: DomainName -> Maybe Text

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
[$sel:regionalDomainName:DomainName'] :: DomainName -> Maybe Text

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
[$sel:certificateUploadDate:DomainName'] :: DomainName -> Maybe POSIX

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
[$sel:distributionDomainName:DomainName'] :: DomainName -> Maybe Text

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
[$sel:domainNameStatusMessage:DomainName'] :: DomainName -> Maybe Text

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
[$sel:endpointConfiguration:DomainName'] :: DomainName -> Maybe EndpointConfiguration

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
[$sel:domainNameStatus:DomainName'] :: DomainName -> Maybe DomainNameStatus

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:DomainName'] :: DomainName -> Maybe (HashMap Text Text)

-- | Create a value of <a>DomainName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regionalHostedZoneId:DomainName'</a>,
--   <a>domainName_regionalHostedZoneId</a> - The region-specific Amazon
--   Route 53 Hosted Zone ID of the regional endpoint. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:certificateName:DomainName'</a>,
--   <a>domainName_certificateName</a> - The name of the certificate that
--   will be used by edge-optimized endpoint for this domain name.
--   
--   <a>$sel:ownershipVerificationCertificateArn:DomainName'</a>,
--   <a>domainName_ownershipVerificationCertificateArn</a> - The ARN of the
--   public certificate issued by ACM to validate ownership of your custom
--   domain. Only required when configuring mutual TLS and using an ACM
--   imported or private CA certificate ARN as the regionalCertificateArn.
--   
--   <a>$sel:regionalCertificateArn:DomainName'</a>,
--   <a>domainName_regionalCertificateArn</a> - The reference to an
--   AWS-managed certificate that will be used for validating the regional
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:certificateArn:DomainName'</a>,
--   <a>domainName_certificateArn</a> - The reference to an AWS-managed
--   certificate that will be used by edge-optimized endpoint for this
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:distributionHostedZoneId:DomainName'</a>,
--   <a>domainName_distributionHostedZoneId</a> - The region-agnostic
--   Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The
--   valid value is <tt>Z2FDTNDATAQYW2</tt> for all the regions. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:securityPolicy:DomainName'</a>,
--   <a>domainName_securityPolicy</a> - The Transport Layer Security (TLS)
--   version + cipher suite for this DomainName. The valid values are
--   <tt>TLS_1_0</tt> and <tt>TLS_1_2</tt>.
--   
--   <a>$sel:domainName:DomainName'</a>, <a>domainName_domainName</a> - The
--   custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
--   
--   <a>$sel:mutualTlsAuthentication:DomainName'</a>,
--   <a>domainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name. If specified,
--   API Gateway performs two-way authentication between the client and the
--   server. Clients must present a trusted certificate to access your API.
--   
--   <a>$sel:regionalCertificateName:DomainName'</a>,
--   <a>domainName_regionalCertificateName</a> - The name of the
--   certificate that will be used for validating the regional domain name.
--   
--   <a>$sel:regionalDomainName:DomainName'</a>,
--   <a>domainName_regionalDomainName</a> - The domain name associated with
--   the regional endpoint for this custom domain name. You set up this
--   association by adding a DNS record that points the custom domain name
--   to this regional domain name. The regional domain name is returned by
--   API Gateway when you create a regional endpoint.
--   
--   <a>$sel:certificateUploadDate:DomainName'</a>,
--   <a>domainName_certificateUploadDate</a> - The timestamp when the
--   certificate that was used by edge-optimized endpoint for this domain
--   name was uploaded.
--   
--   <a>$sel:distributionDomainName:DomainName'</a>,
--   <a>domainName_distributionDomainName</a> - The domain name of the
--   Amazon CloudFront distribution associated with this custom domain name
--   for an edge-optimized endpoint. You set up this association when
--   adding a DNS record pointing the custom domain name to this
--   distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
--   
--   <a>$sel:domainNameStatusMessage:DomainName'</a>,
--   <a>domainName_domainNameStatusMessage</a> - An optional text message
--   containing detailed information about status of the DomainName
--   migration.
--   
--   <a>$sel:endpointConfiguration:DomainName'</a>,
--   <a>domainName_endpointConfiguration</a> - The endpoint configuration
--   of this DomainName showing the endpoint types of the domain name.
--   
--   <a>$sel:domainNameStatus:DomainName'</a>,
--   <a>domainName_domainNameStatus</a> - The status of the DomainName
--   migration. The valid values are <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
--   
--   <a>$sel:tags:DomainName'</a>, <a>domainName_tags</a> - The collection
--   of tags. Each tag element is associated with a given resource.
newDomainName :: DomainName

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
domainName_regionalHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
domainName_certificateName :: Lens' DomainName (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
domainName_ownershipVerificationCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
domainName_regionalCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
domainName_certificateArn :: Lens' DomainName (Maybe Text)

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
domainName_distributionHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
domainName_securityPolicy :: Lens' DomainName (Maybe SecurityPolicy)

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
domainName_domainName :: Lens' DomainName (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
domainName_mutualTlsAuthentication :: Lens' DomainName (Maybe MutualTlsAuthentication)

-- | The name of the certificate that will be used for validating the
--   regional domain name.
domainName_regionalCertificateName :: Lens' DomainName (Maybe Text)

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
domainName_regionalDomainName :: Lens' DomainName (Maybe Text)

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
domainName_certificateUploadDate :: Lens' DomainName (Maybe UTCTime)

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
domainName_distributionDomainName :: Lens' DomainName (Maybe Text)

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
domainName_domainNameStatusMessage :: Lens' DomainName (Maybe Text)

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
domainName_endpointConfiguration :: Lens' DomainName (Maybe EndpointConfiguration)

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
domainName_domainNameStatus :: Lens' DomainName (Maybe DomainNameStatus)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
domainName_tags :: Lens' DomainName (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.CreateDomainName.CreateDomainName
instance GHC.Show.Show Amazonka.APIGateway.CreateDomainName.CreateDomainName
instance GHC.Read.Read Amazonka.APIGateway.CreateDomainName.CreateDomainName
instance GHC.Classes.Eq Amazonka.APIGateway.CreateDomainName.CreateDomainName
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateDomainName.CreateDomainName
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateDomainName.CreateDomainName
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateDomainName.CreateDomainName
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateDomainName.CreateDomainName
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateDomainName.CreateDomainName
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateDomainName.CreateDomainName
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateDomainName.CreateDomainName


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
module Amazonka.APIGateway.CreateDocumentationVersion

-- | Creates a new documentation version of a given API.
--   
--   <i>See:</i> <a>newCreateDocumentationVersion</a> smart constructor.
data CreateDocumentationVersion
CreateDocumentationVersion' :: Maybe Text -> Maybe Text -> Text -> Text -> CreateDocumentationVersion

-- | The stage name to be associated with the new documentation snapshot.
[$sel:stageName:CreateDocumentationVersion'] :: CreateDocumentationVersion -> Maybe Text

-- | A description about the new documentation snapshot.
[$sel:description:CreateDocumentationVersion'] :: CreateDocumentationVersion -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:CreateDocumentationVersion'] :: CreateDocumentationVersion -> Text

-- | <ul>
--   <li><i>Required</i> The version identifier of the new snapshot.</li>
--   </ul>
[$sel:documentationVersion:CreateDocumentationVersion'] :: CreateDocumentationVersion -> Text

-- | Create a value of <a>CreateDocumentationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:CreateDocumentationVersion'</a>,
--   <a>createDocumentationVersion_stageName</a> - The stage name to be
--   associated with the new documentation snapshot.
--   
--   <a>$sel:description:CreateDocumentationVersion'</a>,
--   <a>createDocumentationVersion_description</a> - A description about
--   the new documentation snapshot.
--   
--   <a>$sel:restApiId:CreateDocumentationVersion'</a>,
--   <a>createDocumentationVersion_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:documentationVersion:CreateDocumentationVersion'</a>,
--   <a>createDocumentationVersion_documentationVersion</a> - [Required]
--   The version identifier of the new snapshot.
newCreateDocumentationVersion :: Text -> Text -> CreateDocumentationVersion

-- | The stage name to be associated with the new documentation snapshot.
createDocumentationVersion_stageName :: Lens' CreateDocumentationVersion (Maybe Text)

-- | A description about the new documentation snapshot.
createDocumentationVersion_description :: Lens' CreateDocumentationVersion (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createDocumentationVersion_restApiId :: Lens' CreateDocumentationVersion Text

-- | <ul>
--   <li><i>Required</i> The version identifier of the new snapshot.</li>
--   </ul>
createDocumentationVersion_documentationVersion :: Lens' CreateDocumentationVersion Text

-- | A snapshot of the documentation of an API.
--   
--   Publishing API documentation involves creating a documentation version
--   associated with an API stage and exporting the versioned documentation
--   to an external (e.g., OpenAPI) file.
--   
--   <a>Documenting an API</a>, DocumentationPart, DocumentationVersions
--   
--   <i>See:</i> <a>newDocumentationVersion</a> smart constructor.
data DocumentationVersion
DocumentationVersion' :: Maybe POSIX -> Maybe Text -> Maybe Text -> DocumentationVersion

-- | The date when the API documentation snapshot is created.
[$sel:createdDate:DocumentationVersion'] :: DocumentationVersion -> Maybe POSIX

-- | The version identifier of the API documentation snapshot.
[$sel:version:DocumentationVersion'] :: DocumentationVersion -> Maybe Text

-- | The description of the API documentation snapshot.
[$sel:description:DocumentationVersion'] :: DocumentationVersion -> Maybe Text

-- | Create a value of <a>DocumentationVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:DocumentationVersion'</a>,
--   <a>documentationVersion_createdDate</a> - The date when the API
--   documentation snapshot is created.
--   
--   <a>$sel:version:DocumentationVersion'</a>,
--   <a>documentationVersion_version</a> - The version identifier of the
--   API documentation snapshot.
--   
--   <a>$sel:description:DocumentationVersion'</a>,
--   <a>documentationVersion_description</a> - The description of the API
--   documentation snapshot.
newDocumentationVersion :: DocumentationVersion

-- | The date when the API documentation snapshot is created.
documentationVersion_createdDate :: Lens' DocumentationVersion (Maybe UTCTime)

-- | The version identifier of the API documentation snapshot.
documentationVersion_version :: Lens' DocumentationVersion (Maybe Text)

-- | The description of the API documentation snapshot.
documentationVersion_description :: Lens' DocumentationVersion (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.CreateDocumentationVersion.CreateDocumentationVersion
instance GHC.Show.Show Amazonka.APIGateway.CreateDocumentationVersion.CreateDocumentationVersion
instance GHC.Read.Read Amazonka.APIGateway.CreateDocumentationVersion.CreateDocumentationVersion
instance GHC.Classes.Eq Amazonka.APIGateway.CreateDocumentationVersion.CreateDocumentationVersion
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateDocumentationVersion.CreateDocumentationVersion
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateDocumentationVersion.CreateDocumentationVersion
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateDocumentationVersion.CreateDocumentationVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateDocumentationVersion.CreateDocumentationVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateDocumentationVersion.CreateDocumentationVersion
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateDocumentationVersion.CreateDocumentationVersion
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateDocumentationVersion.CreateDocumentationVersion


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
module Amazonka.APIGateway.CreateDocumentationPart

-- | Creates a new documentation part of a given API.
--   
--   <i>See:</i> <a>newCreateDocumentationPart</a> smart constructor.
data CreateDocumentationPart
CreateDocumentationPart' :: Text -> DocumentationPartLocation -> Text -> CreateDocumentationPart

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:CreateDocumentationPart'] :: CreateDocumentationPart -> Text

-- | <ul>
--   <li><i>Required</i> The location of the targeted API entity of the
--   to-be-created documentation part.</li>
--   </ul>
[$sel:location:CreateDocumentationPart'] :: CreateDocumentationPart -> DocumentationPartLocation

-- | <ul>
--   <li><i>Required</i> The new documentation content map of the targeted
--   API entity. Enclosed key-value pairs are API-specific, but only
--   OpenAPI-compliant key-value pairs can be exported and, hence,
--   published.</li>
--   </ul>
[$sel:properties:CreateDocumentationPart'] :: CreateDocumentationPart -> Text

-- | Create a value of <a>CreateDocumentationPart</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:CreateDocumentationPart'</a>,
--   <a>createDocumentationPart_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:location:CreateDocumentationPart'</a>,
--   <a>createDocumentationPart_location</a> - [Required] The location of
--   the targeted API entity of the to-be-created documentation part.
--   
--   <a>$sel:properties:CreateDocumentationPart'</a>,
--   <a>createDocumentationPart_properties</a> - [Required] The new
--   documentation content map of the targeted API entity. Enclosed
--   key-value pairs are API-specific, but only OpenAPI-compliant key-value
--   pairs can be exported and, hence, published.
newCreateDocumentationPart :: Text -> DocumentationPartLocation -> Text -> CreateDocumentationPart

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createDocumentationPart_restApiId :: Lens' CreateDocumentationPart Text

-- | <ul>
--   <li><i>Required</i> The location of the targeted API entity of the
--   to-be-created documentation part.</li>
--   </ul>
createDocumentationPart_location :: Lens' CreateDocumentationPart DocumentationPartLocation

-- | <ul>
--   <li><i>Required</i> The new documentation content map of the targeted
--   API entity. Enclosed key-value pairs are API-specific, but only
--   OpenAPI-compliant key-value pairs can be exported and, hence,
--   published.</li>
--   </ul>
createDocumentationPart_properties :: Lens' CreateDocumentationPart Text

-- | A documentation part for a targeted API entity.
--   
--   A documentation part consists of a content map (<tt>properties</tt>)
--   and a target (<tt>location</tt>). The target specifies an API entity
--   to which the documentation content applies. The supported API entity
--   types are <tt>API</tt>, <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. Valid <tt>location</tt> fields depend on
--   the API entity type. All valid fields are not required.
--   
--   The content map is a JSON string of API-specific key-value pairs.
--   Although an API can use any shape for the content map, only the
--   OpenAPI-compliant documentation fields will be injected into the
--   associated API entity definition in the exported OpenAPI definition
--   file.
--   
--   <a>Documenting an API</a>, DocumentationParts
--   
--   <i>See:</i> <a>newDocumentationPart</a> smart constructor.
data DocumentationPart
DocumentationPart' :: Maybe DocumentationPartLocation -> Maybe Text -> Maybe Text -> DocumentationPart

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
[$sel:location:DocumentationPart'] :: DocumentationPart -> Maybe DocumentationPartLocation

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
[$sel:id:DocumentationPart'] :: DocumentationPart -> Maybe Text

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
[$sel:properties:DocumentationPart'] :: DocumentationPart -> Maybe Text

-- | Create a value of <a>DocumentationPart</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:DocumentationPart'</a>,
--   <a>documentationPart_location</a> - The location of the API entity to
--   which the documentation applies. Valid fields depend on the targeted
--   API entity type. All the valid location fields are not required. If
--   not explicitly specified, a valid location field is treated as a
--   wildcard and associated documentation content may be inherited by
--   matching entities, unless overridden.
--   
--   <a>$sel:id:DocumentationPart'</a>, <a>documentationPart_id</a> - The
--   DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
--   
--   <a>$sel:properties:DocumentationPart'</a>,
--   <a>documentationPart_properties</a> - A content map of API-specific
--   key-value pairs describing the targeted API entity. The map must be
--   encoded as a JSON string, e.g., <tt>"{ \"description\": \"The API does
--   ...\" }"</tt>. Only OpenAPI-compliant documentation-related fields
--   from the properties map are exported and, hence, published as part of
--   the API entity definitions, while the original documentation parts are
--   exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
newDocumentationPart :: DocumentationPart

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
documentationPart_location :: Lens' DocumentationPart (Maybe DocumentationPartLocation)

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
documentationPart_id :: Lens' DocumentationPart (Maybe Text)

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
documentationPart_properties :: Lens' DocumentationPart (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.CreateDocumentationPart.CreateDocumentationPart
instance GHC.Show.Show Amazonka.APIGateway.CreateDocumentationPart.CreateDocumentationPart
instance GHC.Read.Read Amazonka.APIGateway.CreateDocumentationPart.CreateDocumentationPart
instance GHC.Classes.Eq Amazonka.APIGateway.CreateDocumentationPart.CreateDocumentationPart
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateDocumentationPart.CreateDocumentationPart
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateDocumentationPart.CreateDocumentationPart
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateDocumentationPart.CreateDocumentationPart
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateDocumentationPart.CreateDocumentationPart
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateDocumentationPart.CreateDocumentationPart
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateDocumentationPart.CreateDocumentationPart
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateDocumentationPart.CreateDocumentationPart


-- | Creates a Deployment resource, which makes a specified RestApi
--   callable over the internet.
module Amazonka.APIGateway.CreateDeployment

-- | Requests API Gateway to create a Deployment resource.
--   
--   <i>See:</i> <a>newCreateDeployment</a> smart constructor.
data CreateDeployment
CreateDeployment' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe CacheClusterSize -> Maybe DeploymentCanarySettings -> Maybe Bool -> Maybe Text -> Maybe Text -> Text -> CreateDeployment

-- | The description of the Stage resource for the Deployment resource to
--   create.
[$sel:stageDescription:CreateDeployment'] :: CreateDeployment -> Maybe Text

-- | A map that defines the stage variables for the Stage resource that is
--   associated with the new deployment. Variable names can have
--   alphanumeric and underscore characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
[$sel:variables:CreateDeployment'] :: CreateDeployment -> Maybe (HashMap Text Text)

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
[$sel:tracingEnabled:CreateDeployment'] :: CreateDeployment -> Maybe Bool

-- | Specifies the cache cluster size for the Stage resource specified in
--   the input, if a cache cluster is enabled.
[$sel:cacheClusterSize:CreateDeployment'] :: CreateDeployment -> Maybe CacheClusterSize

-- | The input configuration for the canary deployment when the deployment
--   is a canary release deployment.
[$sel:canarySettings:CreateDeployment'] :: CreateDeployment -> Maybe DeploymentCanarySettings

-- | Enables a cache cluster for the Stage resource specified in the input.
[$sel:cacheClusterEnabled:CreateDeployment'] :: CreateDeployment -> Maybe Bool

-- | The name of the Stage resource for the Deployment resource to create.
[$sel:stageName:CreateDeployment'] :: CreateDeployment -> Maybe Text

-- | The description for the Deployment resource to create.
[$sel:description:CreateDeployment'] :: CreateDeployment -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:CreateDeployment'] :: CreateDeployment -> Text

-- | Create a value of <a>CreateDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageDescription:CreateDeployment'</a>,
--   <a>createDeployment_stageDescription</a> - The description of the
--   Stage resource for the Deployment resource to create.
--   
--   <a>$sel:variables:CreateDeployment'</a>,
--   <a>createDeployment_variables</a> - A map that defines the stage
--   variables for the Stage resource that is associated with the new
--   deployment. Variable names can have alphanumeric and underscore
--   characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:tracingEnabled:CreateDeployment'</a>,
--   <a>createDeployment_tracingEnabled</a> - Specifies whether active
--   tracing with X-ray is enabled for the Stage.
--   
--   <a>$sel:cacheClusterSize:CreateDeployment'</a>,
--   <a>createDeployment_cacheClusterSize</a> - Specifies the cache cluster
--   size for the Stage resource specified in the input, if a cache cluster
--   is enabled.
--   
--   <a>$sel:canarySettings:CreateDeployment'</a>,
--   <a>createDeployment_canarySettings</a> - The input configuration for
--   the canary deployment when the deployment is a canary release
--   deployment.
--   
--   <a>$sel:cacheClusterEnabled:CreateDeployment'</a>,
--   <a>createDeployment_cacheClusterEnabled</a> - Enables a cache cluster
--   for the Stage resource specified in the input.
--   
--   <a>$sel:stageName:CreateDeployment'</a>,
--   <a>createDeployment_stageName</a> - The name of the Stage resource for
--   the Deployment resource to create.
--   
--   <a>$sel:description:CreateDeployment'</a>,
--   <a>createDeployment_description</a> - The description for the
--   Deployment resource to create.
--   
--   <a>$sel:restApiId:CreateDeployment'</a>,
--   <a>createDeployment_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
newCreateDeployment :: Text -> CreateDeployment

-- | The description of the Stage resource for the Deployment resource to
--   create.
createDeployment_stageDescription :: Lens' CreateDeployment (Maybe Text)

-- | A map that defines the stage variables for the Stage resource that is
--   associated with the new deployment. Variable names can have
--   alphanumeric and underscore characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
createDeployment_variables :: Lens' CreateDeployment (Maybe (HashMap Text Text))

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
createDeployment_tracingEnabled :: Lens' CreateDeployment (Maybe Bool)

-- | Specifies the cache cluster size for the Stage resource specified in
--   the input, if a cache cluster is enabled.
createDeployment_cacheClusterSize :: Lens' CreateDeployment (Maybe CacheClusterSize)

-- | The input configuration for the canary deployment when the deployment
--   is a canary release deployment.
createDeployment_canarySettings :: Lens' CreateDeployment (Maybe DeploymentCanarySettings)

-- | Enables a cache cluster for the Stage resource specified in the input.
createDeployment_cacheClusterEnabled :: Lens' CreateDeployment (Maybe Bool)

-- | The name of the Stage resource for the Deployment resource to create.
createDeployment_stageName :: Lens' CreateDeployment (Maybe Text)

-- | The description for the Deployment resource to create.
createDeployment_description :: Lens' CreateDeployment (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createDeployment_restApiId :: Lens' CreateDeployment Text

-- | An immutable representation of a RestApi resource that can be called
--   by users using Stages. A deployment must be associated with a Stage
--   for it to be callable over the Internet.
--   
--   To create a deployment, call <tt>POST</tt> on the Deployments resource
--   of a RestApi. To view, update, or delete a deployment, call
--   <tt>GET</tt>, <tt>PATCH</tt>, or <tt>DELETE</tt> on the specified
--   deployment resource
--   (<tt>/restapis/{restapi_id}/deployments/{deployment_id}</tt>).
--   
--   RestApi, Deployments, Stage, <a>AWS CLI</a>, <a>AWS SDKs</a>
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe (HashMap Text (HashMap Text MethodSnapshot)) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Deployment

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
[$sel:apiSummary:Deployment'] :: Deployment -> Maybe (HashMap Text (HashMap Text MethodSnapshot))

-- | The date and time that the deployment resource was created.
[$sel:createdDate:Deployment'] :: Deployment -> Maybe POSIX

-- | The identifier for the deployment resource.
[$sel:id:Deployment'] :: Deployment -> Maybe Text

-- | The description for the deployment resource.
[$sel:description:Deployment'] :: Deployment -> Maybe Text

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiSummary:Deployment'</a>, <a>deployment_apiSummary</a> - A
--   summary of the RestApi at the date and time that the deployment
--   resource was created.
--   
--   <a>$sel:createdDate:Deployment'</a>, <a>deployment_createdDate</a> -
--   The date and time that the deployment resource was created.
--   
--   <a>$sel:id:Deployment'</a>, <a>deployment_id</a> - The identifier for
--   the deployment resource.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description for the deployment resource.
newDeployment :: Deployment

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
deployment_apiSummary :: Lens' Deployment (Maybe (HashMap Text (HashMap Text MethodSnapshot)))

-- | The date and time that the deployment resource was created.
deployment_createdDate :: Lens' Deployment (Maybe UTCTime)

-- | The identifier for the deployment resource.
deployment_id :: Lens' Deployment (Maybe Text)

-- | The description for the deployment resource.
deployment_description :: Lens' Deployment (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.CreateDeployment.CreateDeployment
instance GHC.Show.Show Amazonka.APIGateway.CreateDeployment.CreateDeployment
instance GHC.Read.Read Amazonka.APIGateway.CreateDeployment.CreateDeployment
instance GHC.Classes.Eq Amazonka.APIGateway.CreateDeployment.CreateDeployment
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateDeployment.CreateDeployment
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateDeployment.CreateDeployment
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateDeployment.CreateDeployment
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateDeployment.CreateDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateDeployment.CreateDeployment
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateDeployment.CreateDeployment
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateDeployment.CreateDeployment


-- | Creates a new BasePathMapping resource.
module Amazonka.APIGateway.CreateBasePathMapping

-- | Requests API Gateway to create a new BasePathMapping resource.
--   
--   <i>See:</i> <a>newCreateBasePathMapping</a> smart constructor.
data CreateBasePathMapping
CreateBasePathMapping' :: Maybe Text -> Maybe Text -> Text -> Text -> CreateBasePathMapping

-- | The name of the API's stage that you want to use for this mapping.
--   Specify '(none)' if you want callers to explicitly specify the stage
--   name after any base path name.
[$sel:stage:CreateBasePathMapping'] :: CreateBasePathMapping -> Maybe Text

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name. This value must be unique for all of the
--   mappings across a single API. Specify '(none)' if you do not want
--   callers to specify a base path name after the domain name.
[$sel:basePath:CreateBasePathMapping'] :: CreateBasePathMapping -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The domain name of the BasePathMapping resource to
--   create.</li>
--   </ul>
[$sel:domainName:CreateBasePathMapping'] :: CreateBasePathMapping -> Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:CreateBasePathMapping'] :: CreateBasePathMapping -> Text

-- | Create a value of <a>CreateBasePathMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:CreateBasePathMapping'</a>,
--   <a>createBasePathMapping_stage</a> - The name of the API's stage that
--   you want to use for this mapping. Specify '(none)' if you want callers
--   to explicitly specify the stage name after any base path name.
--   
--   <a>$sel:basePath:CreateBasePathMapping'</a>,
--   <a>createBasePathMapping_basePath</a> - The base path name that
--   callers of the API must provide as part of the URL after the domain
--   name. This value must be unique for all of the mappings across a
--   single API. Specify '(none)' if you do not want callers to specify a
--   base path name after the domain name.
--   
--   <a>$sel:domainName:CreateBasePathMapping'</a>,
--   <a>createBasePathMapping_domainName</a> - [Required] The domain name
--   of the BasePathMapping resource to create.
--   
--   <a>$sel:restApiId:CreateBasePathMapping'</a>,
--   <a>createBasePathMapping_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
newCreateBasePathMapping :: Text -> Text -> CreateBasePathMapping

-- | The name of the API's stage that you want to use for this mapping.
--   Specify '(none)' if you want callers to explicitly specify the stage
--   name after any base path name.
createBasePathMapping_stage :: Lens' CreateBasePathMapping (Maybe Text)

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name. This value must be unique for all of the
--   mappings across a single API. Specify '(none)' if you do not want
--   callers to specify a base path name after the domain name.
createBasePathMapping_basePath :: Lens' CreateBasePathMapping (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The domain name of the BasePathMapping resource to
--   create.</li>
--   </ul>
createBasePathMapping_domainName :: Lens' CreateBasePathMapping Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createBasePathMapping_restApiId :: Lens' CreateBasePathMapping Text

-- | Represents the base path that callers of the API must provide as part
--   of the URL after the domain name.
--   
--   A custom domain name plus a <tt>BasePathMapping</tt> specification
--   identifies a deployed RestApi in a given stage of the owner Account.
--   
--   <a>Use Custom Domain Names</a>
--   
--   <i>See:</i> <a>newBasePathMapping</a> smart constructor.
data BasePathMapping
BasePathMapping' :: Maybe Text -> Maybe Text -> Maybe Text -> BasePathMapping

-- | The name of the associated stage.
[$sel:stage:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
[$sel:basePath:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | The string identifier of the associated RestApi.
[$sel:restApiId:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | Create a value of <a>BasePathMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:BasePathMapping'</a>, <a>basePathMapping_stage</a> - The
--   name of the associated stage.
--   
--   <a>$sel:basePath:BasePathMapping'</a>, <a>basePathMapping_basePath</a>
--   - The base path name that callers of the API must provide as part of
--   the URL after the domain name.
--   
--   <a>$sel:restApiId:BasePathMapping'</a>,
--   <a>basePathMapping_restApiId</a> - The string identifier of the
--   associated RestApi.
newBasePathMapping :: BasePathMapping

-- | The name of the associated stage.
basePathMapping_stage :: Lens' BasePathMapping (Maybe Text)

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
basePathMapping_basePath :: Lens' BasePathMapping (Maybe Text)

-- | The string identifier of the associated RestApi.
basePathMapping_restApiId :: Lens' BasePathMapping (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.CreateBasePathMapping.CreateBasePathMapping
instance GHC.Show.Show Amazonka.APIGateway.CreateBasePathMapping.CreateBasePathMapping
instance GHC.Read.Read Amazonka.APIGateway.CreateBasePathMapping.CreateBasePathMapping
instance GHC.Classes.Eq Amazonka.APIGateway.CreateBasePathMapping.CreateBasePathMapping
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateBasePathMapping.CreateBasePathMapping
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateBasePathMapping.CreateBasePathMapping
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateBasePathMapping.CreateBasePathMapping
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateBasePathMapping.CreateBasePathMapping
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateBasePathMapping.CreateBasePathMapping
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateBasePathMapping.CreateBasePathMapping
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateBasePathMapping.CreateBasePathMapping


-- | Adds a new Authorizer resource to an existing RestApi resource.
--   
--   <a>AWS CLI</a>
module Amazonka.APIGateway.CreateAuthorizer

-- | Request to add a new Authorizer to an existing RestApi resource.
--   
--   <i>See:</i> <a>newCreateAuthorizer</a> smart constructor.
data CreateAuthorizer
CreateAuthorizer' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> AuthorizerType -> CreateAuthorizer

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
[$sel:authorizerUri:CreateAuthorizer'] :: CreateAuthorizer -> Maybe Text

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
[$sel:identityValidationExpression:CreateAuthorizer'] :: CreateAuthorizer -> Maybe Text

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
[$sel:providerARNs:CreateAuthorizer'] :: CreateAuthorizer -> Maybe [Text]

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
[$sel:authorizerResultTtlInSeconds:CreateAuthorizer'] :: CreateAuthorizer -> Maybe Int

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
[$sel:authType:CreateAuthorizer'] :: CreateAuthorizer -> Maybe Text

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
[$sel:identitySource:CreateAuthorizer'] :: CreateAuthorizer -> Maybe Text

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
[$sel:authorizerCredentials:CreateAuthorizer'] :: CreateAuthorizer -> Maybe Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:CreateAuthorizer'] :: CreateAuthorizer -> Text

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
[$sel:name:CreateAuthorizer'] :: CreateAuthorizer -> Text

-- | <ul>
--   <li><i>Required</i> The authorizer type. Valid values are
--   <tt>TOKEN</tt> for a Lambda function using a single authorization
--   token submitted in a custom header, <tt>REQUEST</tt> for a Lambda
--   function using incoming request parameters, and
--   <tt>COGNITO_USER_POOLS</tt> for using an Amazon Cognito user
--   pool.</li>
--   </ul>
[$sel:type':CreateAuthorizer'] :: CreateAuthorizer -> AuthorizerType

-- | Create a value of <a>CreateAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerUri:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerUri</a> - Specifies the authorizer's
--   Uniform Resource Identifier (URI). For <tt>TOKEN</tt> or
--   <tt>REQUEST</tt> authorizers, this must be a well-formed Lambda
--   function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
--   
--   <a>$sel:identityValidationExpression:CreateAuthorizer'</a>,
--   <a>createAuthorizer_identityValidationExpression</a> - A validation
--   expression for the incoming identity token. For <tt>TOKEN</tt>
--   authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
--   
--   <a>$sel:providerARNs:CreateAuthorizer'</a>,
--   <a>createAuthorizer_providerARNs</a> - A list of the Amazon Cognito
--   user pool ARNs for the <tt>COGNITO_USER_POOLS</tt> authorizer. Each
--   element is of this format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
--   
--   <a>$sel:authorizerResultTtlInSeconds:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerResultTtlInSeconds</a> - The TTL in
--   seconds of cached authorizer results. If it equals 0, authorization
--   caching is disabled. If it is greater than 0, API Gateway will cache
--   authorizer responses. If this field is not set, the default value is
--   300. The maximum value is 3600, or 1 hour.
--   
--   <a>$sel:authType:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authType</a> - Optional customer-defined field,
--   used in OpenAPI imports and exports without functional impact.
--   
--   <a>$sel:identitySource:CreateAuthorizer'</a>,
--   <a>createAuthorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
--   
--   <a>$sel:authorizerCredentials:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerCredentials</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, specify null.
--   
--   <a>$sel:restApiId:CreateAuthorizer'</a>,
--   <a>createAuthorizer_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:name:CreateAuthorizer'</a>, <a>createAuthorizer_name</a> -
--   [Required] The name of the authorizer.
--   
--   <a>$sel:type':CreateAuthorizer'</a>, <a>createAuthorizer_type</a> -
--   [Required] The authorizer type. Valid values are <tt>TOKEN</tt> for a
--   Lambda function using a single authorization token submitted in a
--   custom header, <tt>REQUEST</tt> for a Lambda function using incoming
--   request parameters, and <tt>COGNITO_USER_POOLS</tt> for using an
--   Amazon Cognito user pool.
newCreateAuthorizer :: Text -> Text -> AuthorizerType -> CreateAuthorizer

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
createAuthorizer_authorizerUri :: Lens' CreateAuthorizer (Maybe Text)

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
createAuthorizer_identityValidationExpression :: Lens' CreateAuthorizer (Maybe Text)

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
createAuthorizer_providerARNs :: Lens' CreateAuthorizer (Maybe [Text])

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
createAuthorizer_authorizerResultTtlInSeconds :: Lens' CreateAuthorizer (Maybe Int)

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
createAuthorizer_authType :: Lens' CreateAuthorizer (Maybe Text)

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
createAuthorizer_identitySource :: Lens' CreateAuthorizer (Maybe Text)

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
createAuthorizer_authorizerCredentials :: Lens' CreateAuthorizer (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createAuthorizer_restApiId :: Lens' CreateAuthorizer Text

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
createAuthorizer_name :: Lens' CreateAuthorizer Text

-- | <ul>
--   <li><i>Required</i> The authorizer type. Valid values are
--   <tt>TOKEN</tt> for a Lambda function using a single authorization
--   token submitted in a custom header, <tt>REQUEST</tt> for a Lambda
--   function using incoming request parameters, and
--   <tt>COGNITO_USER_POOLS</tt> for using an Amazon Cognito user
--   pool.</li>
--   </ul>
createAuthorizer_type :: Lens' CreateAuthorizer AuthorizerType

-- | Represents an authorization layer for methods. If enabled on a method,
--   API Gateway will activate the authorizer when a client calls the
--   method.
--   
--   <a>Use Lambda Function as Authorizer</a> <a>Use Cognito User Pool as
--   Authorizer</a>
--   
--   <i>See:</i> <a>newAuthorizer</a> smart constructor.
data Authorizer
Authorizer' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe AuthorizerType -> Maybe Text -> Maybe Text -> Authorizer

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
[$sel:authorizerUri:Authorizer'] :: Authorizer -> Maybe Text

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
[$sel:identityValidationExpression:Authorizer'] :: Authorizer -> Maybe Text

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
[$sel:providerARNs:Authorizer'] :: Authorizer -> Maybe [Text]

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
[$sel:name:Authorizer'] :: Authorizer -> Maybe Text

-- | The identifier for the authorizer resource.
[$sel:id:Authorizer'] :: Authorizer -> Maybe Text

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
[$sel:authorizerResultTtlInSeconds:Authorizer'] :: Authorizer -> Maybe Int

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
[$sel:authType:Authorizer'] :: Authorizer -> Maybe Text

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
[$sel:type':Authorizer'] :: Authorizer -> Maybe AuthorizerType

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
[$sel:identitySource:Authorizer'] :: Authorizer -> Maybe Text

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
[$sel:authorizerCredentials:Authorizer'] :: Authorizer -> Maybe Text

-- | Create a value of <a>Authorizer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerUri:Authorizer'</a>, <a>authorizer_authorizerUri</a>
--   - Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
--   
--   <a>$sel:identityValidationExpression:Authorizer'</a>,
--   <a>authorizer_identityValidationExpression</a> - A validation
--   expression for the incoming identity token. For <tt>TOKEN</tt>
--   authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
--   
--   <a>$sel:providerARNs:Authorizer'</a>, <a>authorizer_providerARNs</a> -
--   A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
--   
--   <a>$sel:name:Authorizer'</a>, <a>authorizer_name</a> - [Required] The
--   name of the authorizer.
--   
--   <a>$sel:id:Authorizer'</a>, <a>authorizer_id</a> - The identifier for
--   the authorizer resource.
--   
--   <a>$sel:authorizerResultTtlInSeconds:Authorizer'</a>,
--   <a>authorizer_authorizerResultTtlInSeconds</a> - The TTL in seconds of
--   cached authorizer results. If it equals 0, authorization caching is
--   disabled. If it is greater than 0, API Gateway will cache authorizer
--   responses. If this field is not set, the default value is 300. The
--   maximum value is 3600, or 1 hour.
--   
--   <a>$sel:authType:Authorizer'</a>, <a>authorizer_authType</a> -
--   Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
--   
--   <a>$sel:type':Authorizer'</a>, <a>authorizer_type</a> - The authorizer
--   type. Valid values are <tt>TOKEN</tt> for a Lambda function using a
--   single authorization token submitted in a custom header,
--   <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
--   
--   <a>$sel:identitySource:Authorizer'</a>,
--   <a>authorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
--   
--   <a>$sel:authorizerCredentials:Authorizer'</a>,
--   <a>authorizer_authorizerCredentials</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, specify null.
newAuthorizer :: Authorizer

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
authorizer_authorizerUri :: Lens' Authorizer (Maybe Text)

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
authorizer_identityValidationExpression :: Lens' Authorizer (Maybe Text)

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
authorizer_providerARNs :: Lens' Authorizer (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
authorizer_name :: Lens' Authorizer (Maybe Text)

-- | The identifier for the authorizer resource.
authorizer_id :: Lens' Authorizer (Maybe Text)

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
authorizer_authorizerResultTtlInSeconds :: Lens' Authorizer (Maybe Int)

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
authorizer_authType :: Lens' Authorizer (Maybe Text)

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
authorizer_type :: Lens' Authorizer (Maybe AuthorizerType)

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
authorizer_identitySource :: Lens' Authorizer (Maybe Text)

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
authorizer_authorizerCredentials :: Lens' Authorizer (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.CreateAuthorizer.CreateAuthorizer
instance GHC.Show.Show Amazonka.APIGateway.CreateAuthorizer.CreateAuthorizer
instance GHC.Read.Read Amazonka.APIGateway.CreateAuthorizer.CreateAuthorizer
instance GHC.Classes.Eq Amazonka.APIGateway.CreateAuthorizer.CreateAuthorizer
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateAuthorizer.CreateAuthorizer
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateAuthorizer.CreateAuthorizer
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateAuthorizer.CreateAuthorizer
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateAuthorizer.CreateAuthorizer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateAuthorizer.CreateAuthorizer
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateAuthorizer.CreateAuthorizer
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateAuthorizer.CreateAuthorizer


-- | Create an ApiKey resource.
--   
--   <a>AWS CLI</a>
module Amazonka.APIGateway.CreateApiKey

-- | Request to create an ApiKey resource.
--   
--   <i>See:</i> <a>newCreateApiKey</a> smart constructor.
data CreateApiKey
CreateApiKey' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [StageKey] -> Maybe Text -> Maybe (HashMap Text Text) -> CreateApiKey

-- | Specifies whether the ApiKey can be used by callers.
[$sel:enabled:CreateApiKey'] :: CreateApiKey -> Maybe Bool

-- | Specifies a value of the API key.
[$sel:value:CreateApiKey'] :: CreateApiKey -> Maybe Text

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
[$sel:customerId:CreateApiKey'] :: CreateApiKey -> Maybe Text

-- | Specifies whether (<tt>true</tt>) or not (<tt>false</tt>) the key
--   identifier is distinct from the created API key value. This parameter
--   is deprecated and should not be used.
[$sel:generateDistinctId:CreateApiKey'] :: CreateApiKey -> Maybe Bool

-- | The name of the ApiKey.
[$sel:name:CreateApiKey'] :: CreateApiKey -> Maybe Text

-- | DEPRECATED FOR USAGE PLANS - Specifies stages associated with the API
--   key.
[$sel:stageKeys:CreateApiKey'] :: CreateApiKey -> Maybe [StageKey]

-- | The description of the ApiKey.
[$sel:description:CreateApiKey'] :: CreateApiKey -> Maybe Text

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
[$sel:tags:CreateApiKey'] :: CreateApiKey -> Maybe (HashMap Text Text)

-- | Create a value of <a>CreateApiKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:CreateApiKey'</a>, <a>createApiKey_enabled</a> -
--   Specifies whether the ApiKey can be used by callers.
--   
--   <a>$sel:value:CreateApiKey'</a>, <a>createApiKey_value</a> - Specifies
--   a value of the API key.
--   
--   <a>$sel:customerId:CreateApiKey'</a>, <a>createApiKey_customerId</a> -
--   An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
--   
--   <a>$sel:generateDistinctId:CreateApiKey'</a>,
--   <a>createApiKey_generateDistinctId</a> - Specifies whether
--   (<tt>true</tt>) or not (<tt>false</tt>) the key identifier is distinct
--   from the created API key value. This parameter is deprecated and
--   should not be used.
--   
--   <a>$sel:name:CreateApiKey'</a>, <a>createApiKey_name</a> - The name of
--   the ApiKey.
--   
--   <a>$sel:stageKeys:CreateApiKey'</a>, <a>createApiKey_stageKeys</a> -
--   DEPRECATED FOR USAGE PLANS - Specifies stages associated with the API
--   key.
--   
--   <a>$sel:description:CreateApiKey'</a>, <a>createApiKey_description</a>
--   - The description of the ApiKey.
--   
--   <a>$sel:tags:CreateApiKey'</a>, <a>createApiKey_tags</a> - The
--   key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
newCreateApiKey :: CreateApiKey

-- | Specifies whether the ApiKey can be used by callers.
createApiKey_enabled :: Lens' CreateApiKey (Maybe Bool)

-- | Specifies a value of the API key.
createApiKey_value :: Lens' CreateApiKey (Maybe Text)

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
createApiKey_customerId :: Lens' CreateApiKey (Maybe Text)

-- | Specifies whether (<tt>true</tt>) or not (<tt>false</tt>) the key
--   identifier is distinct from the created API key value. This parameter
--   is deprecated and should not be used.
createApiKey_generateDistinctId :: Lens' CreateApiKey (Maybe Bool)

-- | The name of the ApiKey.
createApiKey_name :: Lens' CreateApiKey (Maybe Text)

-- | DEPRECATED FOR USAGE PLANS - Specifies stages associated with the API
--   key.
createApiKey_stageKeys :: Lens' CreateApiKey (Maybe [StageKey])

-- | The description of the ApiKey.
createApiKey_description :: Lens' CreateApiKey (Maybe Text)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
createApiKey_tags :: Lens' CreateApiKey (Maybe (HashMap Text Text))

-- | A resource that can be distributed to callers for executing Method
--   resources that require an API key. API keys can be mapped to any Stage
--   on any RestApi, which indicates that the callers with the API key can
--   make requests to that stage.
--   
--   <a>Use API Keys</a>
--   
--   <i>See:</i> <a>newApiKey</a> smart constructor.
data ApiKey
ApiKey' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ApiKey

-- | Specifies whether the API Key can be used by callers.
[$sel:enabled:ApiKey'] :: ApiKey -> Maybe Bool

-- | The value of the API Key.
[$sel:value:ApiKey'] :: ApiKey -> Maybe Text

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
[$sel:customerId:ApiKey'] :: ApiKey -> Maybe Text

-- | The timestamp when the API Key was created.
[$sel:createdDate:ApiKey'] :: ApiKey -> Maybe POSIX

-- | The name of the API Key.
[$sel:name:ApiKey'] :: ApiKey -> Maybe Text

-- | The identifier of the API Key.
[$sel:id:ApiKey'] :: ApiKey -> Maybe Text

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
[$sel:stageKeys:ApiKey'] :: ApiKey -> Maybe [Text]

-- | The timestamp when the API Key was last updated.
[$sel:lastUpdatedDate:ApiKey'] :: ApiKey -> Maybe POSIX

-- | The description of the API Key.
[$sel:description:ApiKey'] :: ApiKey -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:ApiKey'] :: ApiKey -> Maybe (HashMap Text Text)

-- | Create a value of <a>ApiKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:ApiKey'</a>, <a>apiKey_enabled</a> - Specifies whether
--   the API Key can be used by callers.
--   
--   <a>$sel:value:ApiKey'</a>, <a>apiKey_value</a> - The value of the API
--   Key.
--   
--   <a>$sel:customerId:ApiKey'</a>, <a>apiKey_customerId</a> - An AWS
--   Marketplace customer identifier , when integrating with the AWS SaaS
--   Marketplace.
--   
--   <a>$sel:createdDate:ApiKey'</a>, <a>apiKey_createdDate</a> - The
--   timestamp when the API Key was created.
--   
--   <a>$sel:name:ApiKey'</a>, <a>apiKey_name</a> - The name of the API
--   Key.
--   
--   <a>$sel:id:ApiKey'</a>, <a>apiKey_id</a> - The identifier of the API
--   Key.
--   
--   <a>$sel:stageKeys:ApiKey'</a>, <a>apiKey_stageKeys</a> - A list of
--   Stage resources that are associated with the ApiKey resource.
--   
--   <a>$sel:lastUpdatedDate:ApiKey'</a>, <a>apiKey_lastUpdatedDate</a> -
--   The timestamp when the API Key was last updated.
--   
--   <a>$sel:description:ApiKey'</a>, <a>apiKey_description</a> - The
--   description of the API Key.
--   
--   <a>$sel:tags:ApiKey'</a>, <a>apiKey_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newApiKey :: ApiKey

-- | Specifies whether the API Key can be used by callers.
apiKey_enabled :: Lens' ApiKey (Maybe Bool)

-- | The value of the API Key.
apiKey_value :: Lens' ApiKey (Maybe Text)

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
apiKey_customerId :: Lens' ApiKey (Maybe Text)

-- | The timestamp when the API Key was created.
apiKey_createdDate :: Lens' ApiKey (Maybe UTCTime)

-- | The name of the API Key.
apiKey_name :: Lens' ApiKey (Maybe Text)

-- | The identifier of the API Key.
apiKey_id :: Lens' ApiKey (Maybe Text)

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
apiKey_stageKeys :: Lens' ApiKey (Maybe [Text])

-- | The timestamp when the API Key was last updated.
apiKey_lastUpdatedDate :: Lens' ApiKey (Maybe UTCTime)

-- | The description of the API Key.
apiKey_description :: Lens' ApiKey (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
apiKey_tags :: Lens' ApiKey (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.CreateApiKey.CreateApiKey
instance GHC.Show.Show Amazonka.APIGateway.CreateApiKey.CreateApiKey
instance GHC.Read.Read Amazonka.APIGateway.CreateApiKey.CreateApiKey
instance GHC.Classes.Eq Amazonka.APIGateway.CreateApiKey.CreateApiKey
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.CreateApiKey.CreateApiKey
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.CreateApiKey.CreateApiKey
instance Control.DeepSeq.NFData Amazonka.APIGateway.CreateApiKey.CreateApiKey
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.CreateApiKey.CreateApiKey
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.CreateApiKey.CreateApiKey
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.CreateApiKey.CreateApiKey
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.CreateApiKey.CreateApiKey


-- | Removes a tag from a given resource.
module Amazonka.APIGateway.UntagResource

-- | Removes a tag from a given resource.
--   
--   <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | <ul>
--   <li><i>Required</i> The ARN of a resource that can be tagged.</li>
--   </ul>
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | <ul>
--   <li><i>Required</i> The Tag keys to delete.</li>
--   </ul>
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - [Required] The ARN of a resource
--   that can be tagged.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   [Required] The Tag keys to delete.
newUntagResource :: Text -> UntagResource

-- | <ul>
--   <li><i>Required</i> The ARN of a resource that can be tagged.</li>
--   </ul>
untagResource_resourceArn :: Lens' UntagResource Text

-- | <ul>
--   <li><i>Required</i> The Tag keys to delete.</li>
--   </ul>
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Amazonka.APIGateway.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.APIGateway.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.APIGateway.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.APIGateway.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.APIGateway.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.APIGateway.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.APIGateway.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.APIGateway.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.APIGateway.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.APIGateway.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UntagResource.UntagResource


-- | Changes information about the current Account resource.
module Amazonka.APIGateway.UpdateAccount

-- | Requests API Gateway to change information about the current Account
--   resource.
--   
--   <i>See:</i> <a>newUpdateAccount</a> smart constructor.
data UpdateAccount
UpdateAccount' :: Maybe [PatchOperation] -> UpdateAccount

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateAccount'] :: UpdateAccount -> Maybe [PatchOperation]

-- | Create a value of <a>UpdateAccount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateAccount'</a>,
--   <a>updateAccount_patchOperations</a> - A list of update operations to
--   be applied to the specified resource and in the order specified in
--   this list.
newUpdateAccount :: UpdateAccount

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateAccount_patchOperations :: Lens' UpdateAccount (Maybe [PatchOperation])

-- | Represents an AWS account that is associated with API Gateway.
--   
--   To view the account info, call <tt>GET</tt> on this resource.
--   
--   <h4>Error Codes</h4>
--   
--   The following exception may be thrown when the request fails.
--   
--   <ul>
--   <li>UnauthorizedException</li>
--   <li>NotFoundException</li>
--   <li>TooManyRequestsException</li>
--   </ul>
--   
--   For detailed error code information, including the corresponding HTTP
--   Status Codes, see <a>API Gateway Error Codes</a>
--   
--   <h4>Example: Get the information about an account.</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /account HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160531T184618Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/account-apigateway-{rel}.html", "name": "account", "templated": true }, "self": { "href": "/account" }, "account:update": { "href": "/account" } }, "cloudwatchRoleArn": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "throttleSettings": { "rateLimit": 500, "burstLimit": 1000 } }
--   </pre>
--   
--   In addition to making the REST API call directly, you can use the AWS
--   CLI and an AWS SDK to access this resource.
--   
--   <a>API Gateway Limits</a> <a>Developer Guide</a>, <a>AWS CLI</a>
--   
--   <i>See:</i> <a>newAccount</a> smart constructor.
data Account
Account' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe ThrottleSettings -> Account

-- | The version of the API keys used for the account.
[$sel:apiKeyVersion:Account'] :: Account -> Maybe Text

-- | The ARN of an Amazon CloudWatch role for the current Account.
[$sel:cloudwatchRoleArn:Account'] :: Account -> Maybe Text

-- | A list of features supported for the account. When usage plans are
--   enabled, the features list will include an entry of
--   <tt>"UsagePlans"</tt>.
[$sel:features:Account'] :: Account -> Maybe [Text]

-- | Specifies the API request limits configured for the current Account.
[$sel:throttleSettings:Account'] :: Account -> Maybe ThrottleSettings

-- | Create a value of <a>Account</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyVersion:Account'</a>, <a>account_apiKeyVersion</a> - The
--   version of the API keys used for the account.
--   
--   <a>$sel:cloudwatchRoleArn:Account'</a>,
--   <a>account_cloudwatchRoleArn</a> - The ARN of an Amazon CloudWatch
--   role for the current Account.
--   
--   <a>$sel:features:Account'</a>, <a>account_features</a> - A list of
--   features supported for the account. When usage plans are enabled, the
--   features list will include an entry of <tt>"UsagePlans"</tt>.
--   
--   <a>$sel:throttleSettings:Account'</a>, <a>account_throttleSettings</a>
--   - Specifies the API request limits configured for the current Account.
newAccount :: Account

-- | The version of the API keys used for the account.
account_apiKeyVersion :: Lens' Account (Maybe Text)

-- | The ARN of an Amazon CloudWatch role for the current Account.
account_cloudwatchRoleArn :: Lens' Account (Maybe Text)

-- | A list of features supported for the account. When usage plans are
--   enabled, the features list will include an entry of
--   <tt>"UsagePlans"</tt>.
account_features :: Lens' Account (Maybe [Text])

-- | Specifies the API request limits configured for the current Account.
account_throttleSettings :: Lens' Account (Maybe ThrottleSettings)
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateAccount.UpdateAccount
instance GHC.Show.Show Amazonka.APIGateway.UpdateAccount.UpdateAccount
instance GHC.Read.Read Amazonka.APIGateway.UpdateAccount.UpdateAccount
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateAccount.UpdateAccount
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateAccount.UpdateAccount
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateAccount.UpdateAccount
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateAccount.UpdateAccount
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateAccount.UpdateAccount
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateAccount.UpdateAccount
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateAccount.UpdateAccount
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateAccount.UpdateAccount


-- | Changes information about an ApiKey resource.
module Amazonka.APIGateway.UpdateApiKey

-- | A request to change information about an ApiKey resource.
--   
--   <i>See:</i> <a>newUpdateApiKey</a> smart constructor.
data UpdateApiKey
UpdateApiKey' :: Maybe [PatchOperation] -> Text -> UpdateApiKey

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateApiKey'] :: UpdateApiKey -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The identifier of the ApiKey resource to be
--   updated.</li>
--   </ul>
[$sel:apiKey:UpdateApiKey'] :: UpdateApiKey -> Text

-- | Create a value of <a>UpdateApiKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateApiKey'</a>,
--   <a>updateApiKey_patchOperations</a> - A list of update operations to
--   be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:apiKey:UpdateApiKey'</a>, <a>updateApiKey_apiKey</a> -
--   [Required] The identifier of the ApiKey resource to be updated.
newUpdateApiKey :: Text -> UpdateApiKey

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateApiKey_patchOperations :: Lens' UpdateApiKey (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The identifier of the ApiKey resource to be
--   updated.</li>
--   </ul>
updateApiKey_apiKey :: Lens' UpdateApiKey Text

-- | A resource that can be distributed to callers for executing Method
--   resources that require an API key. API keys can be mapped to any Stage
--   on any RestApi, which indicates that the callers with the API key can
--   make requests to that stage.
--   
--   <a>Use API Keys</a>
--   
--   <i>See:</i> <a>newApiKey</a> smart constructor.
data ApiKey
ApiKey' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ApiKey

-- | Specifies whether the API Key can be used by callers.
[$sel:enabled:ApiKey'] :: ApiKey -> Maybe Bool

-- | The value of the API Key.
[$sel:value:ApiKey'] :: ApiKey -> Maybe Text

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
[$sel:customerId:ApiKey'] :: ApiKey -> Maybe Text

-- | The timestamp when the API Key was created.
[$sel:createdDate:ApiKey'] :: ApiKey -> Maybe POSIX

-- | The name of the API Key.
[$sel:name:ApiKey'] :: ApiKey -> Maybe Text

-- | The identifier of the API Key.
[$sel:id:ApiKey'] :: ApiKey -> Maybe Text

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
[$sel:stageKeys:ApiKey'] :: ApiKey -> Maybe [Text]

-- | The timestamp when the API Key was last updated.
[$sel:lastUpdatedDate:ApiKey'] :: ApiKey -> Maybe POSIX

-- | The description of the API Key.
[$sel:description:ApiKey'] :: ApiKey -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:ApiKey'] :: ApiKey -> Maybe (HashMap Text Text)

-- | Create a value of <a>ApiKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:ApiKey'</a>, <a>apiKey_enabled</a> - Specifies whether
--   the API Key can be used by callers.
--   
--   <a>$sel:value:ApiKey'</a>, <a>apiKey_value</a> - The value of the API
--   Key.
--   
--   <a>$sel:customerId:ApiKey'</a>, <a>apiKey_customerId</a> - An AWS
--   Marketplace customer identifier , when integrating with the AWS SaaS
--   Marketplace.
--   
--   <a>$sel:createdDate:ApiKey'</a>, <a>apiKey_createdDate</a> - The
--   timestamp when the API Key was created.
--   
--   <a>$sel:name:ApiKey'</a>, <a>apiKey_name</a> - The name of the API
--   Key.
--   
--   <a>$sel:id:ApiKey'</a>, <a>apiKey_id</a> - The identifier of the API
--   Key.
--   
--   <a>$sel:stageKeys:ApiKey'</a>, <a>apiKey_stageKeys</a> - A list of
--   Stage resources that are associated with the ApiKey resource.
--   
--   <a>$sel:lastUpdatedDate:ApiKey'</a>, <a>apiKey_lastUpdatedDate</a> -
--   The timestamp when the API Key was last updated.
--   
--   <a>$sel:description:ApiKey'</a>, <a>apiKey_description</a> - The
--   description of the API Key.
--   
--   <a>$sel:tags:ApiKey'</a>, <a>apiKey_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newApiKey :: ApiKey

-- | Specifies whether the API Key can be used by callers.
apiKey_enabled :: Lens' ApiKey (Maybe Bool)

-- | The value of the API Key.
apiKey_value :: Lens' ApiKey (Maybe Text)

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
apiKey_customerId :: Lens' ApiKey (Maybe Text)

-- | The timestamp when the API Key was created.
apiKey_createdDate :: Lens' ApiKey (Maybe UTCTime)

-- | The name of the API Key.
apiKey_name :: Lens' ApiKey (Maybe Text)

-- | The identifier of the API Key.
apiKey_id :: Lens' ApiKey (Maybe Text)

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
apiKey_stageKeys :: Lens' ApiKey (Maybe [Text])

-- | The timestamp when the API Key was last updated.
apiKey_lastUpdatedDate :: Lens' ApiKey (Maybe UTCTime)

-- | The description of the API Key.
apiKey_description :: Lens' ApiKey (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
apiKey_tags :: Lens' ApiKey (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateApiKey.UpdateApiKey
instance GHC.Show.Show Amazonka.APIGateway.UpdateApiKey.UpdateApiKey
instance GHC.Read.Read Amazonka.APIGateway.UpdateApiKey.UpdateApiKey
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateApiKey.UpdateApiKey
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateApiKey.UpdateApiKey
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateApiKey.UpdateApiKey
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateApiKey.UpdateApiKey
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateApiKey.UpdateApiKey
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateApiKey.UpdateApiKey
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateApiKey.UpdateApiKey
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateApiKey.UpdateApiKey


-- | Updates an existing Authorizer resource.
--   
--   <a>AWS CLI</a>
module Amazonka.APIGateway.UpdateAuthorizer

-- | Request to update an existing Authorizer resource.
--   
--   <i>See:</i> <a>newUpdateAuthorizer</a> smart constructor.
data UpdateAuthorizer
UpdateAuthorizer' :: Maybe [PatchOperation] -> Text -> Text -> UpdateAuthorizer

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateAuthorizer'] :: UpdateAuthorizer -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateAuthorizer'] :: UpdateAuthorizer -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Authorizer resource.</li>
--   </ul>
[$sel:authorizerId:UpdateAuthorizer'] :: UpdateAuthorizer -> Text

-- | Create a value of <a>UpdateAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_patchOperations</a> - A list of update operations
--   to be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:restApiId:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:authorizerId:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerId</a> - [Required] The identifier of
--   the Authorizer resource.
newUpdateAuthorizer :: Text -> Text -> UpdateAuthorizer

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateAuthorizer_patchOperations :: Lens' UpdateAuthorizer (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateAuthorizer_restApiId :: Lens' UpdateAuthorizer Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Authorizer resource.</li>
--   </ul>
updateAuthorizer_authorizerId :: Lens' UpdateAuthorizer Text

-- | Represents an authorization layer for methods. If enabled on a method,
--   API Gateway will activate the authorizer when a client calls the
--   method.
--   
--   <a>Use Lambda Function as Authorizer</a> <a>Use Cognito User Pool as
--   Authorizer</a>
--   
--   <i>See:</i> <a>newAuthorizer</a> smart constructor.
data Authorizer
Authorizer' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe AuthorizerType -> Maybe Text -> Maybe Text -> Authorizer

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
[$sel:authorizerUri:Authorizer'] :: Authorizer -> Maybe Text

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
[$sel:identityValidationExpression:Authorizer'] :: Authorizer -> Maybe Text

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
[$sel:providerARNs:Authorizer'] :: Authorizer -> Maybe [Text]

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
[$sel:name:Authorizer'] :: Authorizer -> Maybe Text

-- | The identifier for the authorizer resource.
[$sel:id:Authorizer'] :: Authorizer -> Maybe Text

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
[$sel:authorizerResultTtlInSeconds:Authorizer'] :: Authorizer -> Maybe Int

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
[$sel:authType:Authorizer'] :: Authorizer -> Maybe Text

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
[$sel:type':Authorizer'] :: Authorizer -> Maybe AuthorizerType

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
[$sel:identitySource:Authorizer'] :: Authorizer -> Maybe Text

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
[$sel:authorizerCredentials:Authorizer'] :: Authorizer -> Maybe Text

-- | Create a value of <a>Authorizer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerUri:Authorizer'</a>, <a>authorizer_authorizerUri</a>
--   - Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
--   
--   <a>$sel:identityValidationExpression:Authorizer'</a>,
--   <a>authorizer_identityValidationExpression</a> - A validation
--   expression for the incoming identity token. For <tt>TOKEN</tt>
--   authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
--   
--   <a>$sel:providerARNs:Authorizer'</a>, <a>authorizer_providerARNs</a> -
--   A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
--   
--   <a>$sel:name:Authorizer'</a>, <a>authorizer_name</a> - [Required] The
--   name of the authorizer.
--   
--   <a>$sel:id:Authorizer'</a>, <a>authorizer_id</a> - The identifier for
--   the authorizer resource.
--   
--   <a>$sel:authorizerResultTtlInSeconds:Authorizer'</a>,
--   <a>authorizer_authorizerResultTtlInSeconds</a> - The TTL in seconds of
--   cached authorizer results. If it equals 0, authorization caching is
--   disabled. If it is greater than 0, API Gateway will cache authorizer
--   responses. If this field is not set, the default value is 300. The
--   maximum value is 3600, or 1 hour.
--   
--   <a>$sel:authType:Authorizer'</a>, <a>authorizer_authType</a> -
--   Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
--   
--   <a>$sel:type':Authorizer'</a>, <a>authorizer_type</a> - The authorizer
--   type. Valid values are <tt>TOKEN</tt> for a Lambda function using a
--   single authorization token submitted in a custom header,
--   <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
--   
--   <a>$sel:identitySource:Authorizer'</a>,
--   <a>authorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
--   
--   <a>$sel:authorizerCredentials:Authorizer'</a>,
--   <a>authorizer_authorizerCredentials</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, specify null.
newAuthorizer :: Authorizer

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
authorizer_authorizerUri :: Lens' Authorizer (Maybe Text)

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
authorizer_identityValidationExpression :: Lens' Authorizer (Maybe Text)

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
authorizer_providerARNs :: Lens' Authorizer (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
authorizer_name :: Lens' Authorizer (Maybe Text)

-- | The identifier for the authorizer resource.
authorizer_id :: Lens' Authorizer (Maybe Text)

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
authorizer_authorizerResultTtlInSeconds :: Lens' Authorizer (Maybe Int)

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
authorizer_authType :: Lens' Authorizer (Maybe Text)

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
authorizer_type :: Lens' Authorizer (Maybe AuthorizerType)

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
authorizer_identitySource :: Lens' Authorizer (Maybe Text)

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
authorizer_authorizerCredentials :: Lens' Authorizer (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateAuthorizer.UpdateAuthorizer
instance GHC.Show.Show Amazonka.APIGateway.UpdateAuthorizer.UpdateAuthorizer
instance GHC.Read.Read Amazonka.APIGateway.UpdateAuthorizer.UpdateAuthorizer
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateAuthorizer.UpdateAuthorizer
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateAuthorizer.UpdateAuthorizer
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateAuthorizer.UpdateAuthorizer
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateAuthorizer.UpdateAuthorizer
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateAuthorizer.UpdateAuthorizer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateAuthorizer.UpdateAuthorizer
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateAuthorizer.UpdateAuthorizer
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateAuthorizer.UpdateAuthorizer


-- | Changes information about the BasePathMapping resource.
module Amazonka.APIGateway.UpdateBasePathMapping

-- | A request to change information about the BasePathMapping resource.
--   
--   <i>See:</i> <a>newUpdateBasePathMapping</a> smart constructor.
data UpdateBasePathMapping
UpdateBasePathMapping' :: Maybe [PatchOperation] -> Text -> Text -> UpdateBasePathMapping

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateBasePathMapping'] :: UpdateBasePathMapping -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The domain name of the BasePathMapping resource to
--   change.</li>
--   </ul>
[$sel:domainName:UpdateBasePathMapping'] :: UpdateBasePathMapping -> Text

-- | <ul>
--   <li><i>Required</i> The base path of the BasePathMapping resource to
--   change.</li>
--   </ul>
--   
--   To specify an empty base path, set this parameter to
--   <tt>'(none)'</tt>.
[$sel:basePath:UpdateBasePathMapping'] :: UpdateBasePathMapping -> Text

-- | Create a value of <a>UpdateBasePathMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateBasePathMapping'</a>,
--   <a>updateBasePathMapping_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:domainName:UpdateBasePathMapping'</a>,
--   <a>updateBasePathMapping_domainName</a> - [Required] The domain name
--   of the BasePathMapping resource to change.
--   
--   <a>$sel:basePath:UpdateBasePathMapping'</a>,
--   <a>updateBasePathMapping_basePath</a> - [Required] The base path of
--   the BasePathMapping resource to change.
--   
--   To specify an empty base path, set this parameter to
--   <tt>'(none)'</tt>.
newUpdateBasePathMapping :: Text -> Text -> UpdateBasePathMapping

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateBasePathMapping_patchOperations :: Lens' UpdateBasePathMapping (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The domain name of the BasePathMapping resource to
--   change.</li>
--   </ul>
updateBasePathMapping_domainName :: Lens' UpdateBasePathMapping Text

-- | <ul>
--   <li><i>Required</i> The base path of the BasePathMapping resource to
--   change.</li>
--   </ul>
--   
--   To specify an empty base path, set this parameter to
--   <tt>'(none)'</tt>.
updateBasePathMapping_basePath :: Lens' UpdateBasePathMapping Text

-- | Represents the base path that callers of the API must provide as part
--   of the URL after the domain name.
--   
--   A custom domain name plus a <tt>BasePathMapping</tt> specification
--   identifies a deployed RestApi in a given stage of the owner Account.
--   
--   <a>Use Custom Domain Names</a>
--   
--   <i>See:</i> <a>newBasePathMapping</a> smart constructor.
data BasePathMapping
BasePathMapping' :: Maybe Text -> Maybe Text -> Maybe Text -> BasePathMapping

-- | The name of the associated stage.
[$sel:stage:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
[$sel:basePath:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | The string identifier of the associated RestApi.
[$sel:restApiId:BasePathMapping'] :: BasePathMapping -> Maybe Text

-- | Create a value of <a>BasePathMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:BasePathMapping'</a>, <a>basePathMapping_stage</a> - The
--   name of the associated stage.
--   
--   <a>$sel:basePath:BasePathMapping'</a>, <a>basePathMapping_basePath</a>
--   - The base path name that callers of the API must provide as part of
--   the URL after the domain name.
--   
--   <a>$sel:restApiId:BasePathMapping'</a>,
--   <a>basePathMapping_restApiId</a> - The string identifier of the
--   associated RestApi.
newBasePathMapping :: BasePathMapping

-- | The name of the associated stage.
basePathMapping_stage :: Lens' BasePathMapping (Maybe Text)

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
basePathMapping_basePath :: Lens' BasePathMapping (Maybe Text)

-- | The string identifier of the associated RestApi.
basePathMapping_restApiId :: Lens' BasePathMapping (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateBasePathMapping.UpdateBasePathMapping
instance GHC.Show.Show Amazonka.APIGateway.UpdateBasePathMapping.UpdateBasePathMapping
instance GHC.Read.Read Amazonka.APIGateway.UpdateBasePathMapping.UpdateBasePathMapping
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateBasePathMapping.UpdateBasePathMapping
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateBasePathMapping.UpdateBasePathMapping
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateBasePathMapping.UpdateBasePathMapping
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateBasePathMapping.UpdateBasePathMapping
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateBasePathMapping.UpdateBasePathMapping
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateBasePathMapping.UpdateBasePathMapping
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateBasePathMapping.UpdateBasePathMapping
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateBasePathMapping.UpdateBasePathMapping


-- | Changes information about an ClientCertificate resource.
module Amazonka.APIGateway.UpdateClientCertificate

-- | A request to change information about an ClientCertificate resource.
--   
--   <i>See:</i> <a>newUpdateClientCertificate</a> smart constructor.
data UpdateClientCertificate
UpdateClientCertificate' :: Maybe [PatchOperation] -> Text -> UpdateClientCertificate

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateClientCertificate'] :: UpdateClientCertificate -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The identifier of the ClientCertificate resource
--   to be updated.</li>
--   </ul>
[$sel:clientCertificateId:UpdateClientCertificate'] :: UpdateClientCertificate -> Text

-- | Create a value of <a>UpdateClientCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateClientCertificate'</a>,
--   <a>updateClientCertificate_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:clientCertificateId:UpdateClientCertificate'</a>,
--   <a>updateClientCertificate_clientCertificateId</a> - [Required] The
--   identifier of the ClientCertificate resource to be updated.
newUpdateClientCertificate :: Text -> UpdateClientCertificate

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateClientCertificate_patchOperations :: Lens' UpdateClientCertificate (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The identifier of the ClientCertificate resource
--   to be updated.</li>
--   </ul>
updateClientCertificate_clientCertificateId :: Lens' UpdateClientCertificate Text

-- | Represents a client certificate used to configure client-side SSL
--   authentication while sending requests to the integration endpoint.
--   
--   Client certificates are used to authenticate an API by the backend
--   server. To authenticate an API client (or user), use IAM roles and
--   policies, a custom Authorizer or an Amazon Cognito user pool.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newClientCertificate</a> smart constructor.
data ClientCertificate
ClientCertificate' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ClientCertificate

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
[$sel:pemEncodedCertificate:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The identifier of the client certificate.
[$sel:clientCertificateId:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The timestamp when the client certificate was created.
[$sel:createdDate:ClientCertificate'] :: ClientCertificate -> Maybe POSIX

-- | The timestamp when the client certificate will expire.
[$sel:expirationDate:ClientCertificate'] :: ClientCertificate -> Maybe POSIX

-- | The description of the client certificate.
[$sel:description:ClientCertificate'] :: ClientCertificate -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:ClientCertificate'] :: ClientCertificate -> Maybe (HashMap Text Text)

-- | Create a value of <a>ClientCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pemEncodedCertificate:ClientCertificate'</a>,
--   <a>clientCertificate_pemEncodedCertificate</a> - The PEM-encoded
--   public key of the client certificate, which can be used to configure
--   certificate authentication in the integration endpoint .
--   
--   <a>$sel:clientCertificateId:ClientCertificate'</a>,
--   <a>clientCertificate_clientCertificateId</a> - The identifier of the
--   client certificate.
--   
--   <a>$sel:createdDate:ClientCertificate'</a>,
--   <a>clientCertificate_createdDate</a> - The timestamp when the client
--   certificate was created.
--   
--   <a>$sel:expirationDate:ClientCertificate'</a>,
--   <a>clientCertificate_expirationDate</a> - The timestamp when the
--   client certificate will expire.
--   
--   <a>$sel:description:ClientCertificate'</a>,
--   <a>clientCertificate_description</a> - The description of the client
--   certificate.
--   
--   <a>$sel:tags:ClientCertificate'</a>, <a>clientCertificate_tags</a> -
--   The collection of tags. Each tag element is associated with a given
--   resource.
newClientCertificate :: ClientCertificate

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
clientCertificate_pemEncodedCertificate :: Lens' ClientCertificate (Maybe Text)

-- | The identifier of the client certificate.
clientCertificate_clientCertificateId :: Lens' ClientCertificate (Maybe Text)

-- | The timestamp when the client certificate was created.
clientCertificate_createdDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The timestamp when the client certificate will expire.
clientCertificate_expirationDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The description of the client certificate.
clientCertificate_description :: Lens' ClientCertificate (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
clientCertificate_tags :: Lens' ClientCertificate (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateClientCertificate.UpdateClientCertificate
instance GHC.Show.Show Amazonka.APIGateway.UpdateClientCertificate.UpdateClientCertificate
instance GHC.Read.Read Amazonka.APIGateway.UpdateClientCertificate.UpdateClientCertificate
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateClientCertificate.UpdateClientCertificate
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateClientCertificate.UpdateClientCertificate
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateClientCertificate.UpdateClientCertificate
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateClientCertificate.UpdateClientCertificate
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateClientCertificate.UpdateClientCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateClientCertificate.UpdateClientCertificate
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateClientCertificate.UpdateClientCertificate
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateClientCertificate.UpdateClientCertificate


-- | Changes information about a Deployment resource.
module Amazonka.APIGateway.UpdateDeployment

-- | Requests API Gateway to change information about a Deployment
--   resource.
--   
--   <i>See:</i> <a>newUpdateDeployment</a> smart constructor.
data UpdateDeployment
UpdateDeployment' :: Maybe [PatchOperation] -> Text -> Text -> UpdateDeployment

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateDeployment'] :: UpdateDeployment -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateDeployment'] :: UpdateDeployment -> Text

-- | The replacement identifier for the Deployment resource to change
--   information about.
[$sel:deploymentId:UpdateDeployment'] :: UpdateDeployment -> Text

-- | Create a value of <a>UpdateDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateDeployment'</a>,
--   <a>updateDeployment_patchOperations</a> - A list of update operations
--   to be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:restApiId:UpdateDeployment'</a>,
--   <a>updateDeployment_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:deploymentId:UpdateDeployment'</a>,
--   <a>updateDeployment_deploymentId</a> - The replacement identifier for
--   the Deployment resource to change information about.
newUpdateDeployment :: Text -> Text -> UpdateDeployment

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateDeployment_patchOperations :: Lens' UpdateDeployment (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateDeployment_restApiId :: Lens' UpdateDeployment Text

-- | The replacement identifier for the Deployment resource to change
--   information about.
updateDeployment_deploymentId :: Lens' UpdateDeployment Text

-- | An immutable representation of a RestApi resource that can be called
--   by users using Stages. A deployment must be associated with a Stage
--   for it to be callable over the Internet.
--   
--   To create a deployment, call <tt>POST</tt> on the Deployments resource
--   of a RestApi. To view, update, or delete a deployment, call
--   <tt>GET</tt>, <tt>PATCH</tt>, or <tt>DELETE</tt> on the specified
--   deployment resource
--   (<tt>/restapis/{restapi_id}/deployments/{deployment_id}</tt>).
--   
--   RestApi, Deployments, Stage, <a>AWS CLI</a>, <a>AWS SDKs</a>
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe (HashMap Text (HashMap Text MethodSnapshot)) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Deployment

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
[$sel:apiSummary:Deployment'] :: Deployment -> Maybe (HashMap Text (HashMap Text MethodSnapshot))

-- | The date and time that the deployment resource was created.
[$sel:createdDate:Deployment'] :: Deployment -> Maybe POSIX

-- | The identifier for the deployment resource.
[$sel:id:Deployment'] :: Deployment -> Maybe Text

-- | The description for the deployment resource.
[$sel:description:Deployment'] :: Deployment -> Maybe Text

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiSummary:Deployment'</a>, <a>deployment_apiSummary</a> - A
--   summary of the RestApi at the date and time that the deployment
--   resource was created.
--   
--   <a>$sel:createdDate:Deployment'</a>, <a>deployment_createdDate</a> -
--   The date and time that the deployment resource was created.
--   
--   <a>$sel:id:Deployment'</a>, <a>deployment_id</a> - The identifier for
--   the deployment resource.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description for the deployment resource.
newDeployment :: Deployment

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
deployment_apiSummary :: Lens' Deployment (Maybe (HashMap Text (HashMap Text MethodSnapshot)))

-- | The date and time that the deployment resource was created.
deployment_createdDate :: Lens' Deployment (Maybe UTCTime)

-- | The identifier for the deployment resource.
deployment_id :: Lens' Deployment (Maybe Text)

-- | The description for the deployment resource.
deployment_description :: Lens' Deployment (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateDeployment.UpdateDeployment
instance GHC.Show.Show Amazonka.APIGateway.UpdateDeployment.UpdateDeployment
instance GHC.Read.Read Amazonka.APIGateway.UpdateDeployment.UpdateDeployment
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateDeployment.UpdateDeployment
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateDeployment.UpdateDeployment
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateDeployment.UpdateDeployment
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateDeployment.UpdateDeployment
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateDeployment.UpdateDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateDeployment.UpdateDeployment
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateDeployment.UpdateDeployment
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateDeployment.UpdateDeployment


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
module Amazonka.APIGateway.UpdateDocumentationPart

-- | Updates an existing documentation part of a given API.
--   
--   <i>See:</i> <a>newUpdateDocumentationPart</a> smart constructor.
data UpdateDocumentationPart
UpdateDocumentationPart' :: Maybe [PatchOperation] -> Text -> Text -> UpdateDocumentationPart

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateDocumentationPart'] :: UpdateDocumentationPart -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateDocumentationPart'] :: UpdateDocumentationPart -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the to-be-updated documentation
--   part.</li>
--   </ul>
[$sel:documentationPartId:UpdateDocumentationPart'] :: UpdateDocumentationPart -> Text

-- | Create a value of <a>UpdateDocumentationPart</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateDocumentationPart'</a>,
--   <a>updateDocumentationPart_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:restApiId:UpdateDocumentationPart'</a>,
--   <a>updateDocumentationPart_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:documentationPartId:UpdateDocumentationPart'</a>,
--   <a>updateDocumentationPart_documentationPartId</a> - [Required] The
--   identifier of the to-be-updated documentation part.
newUpdateDocumentationPart :: Text -> Text -> UpdateDocumentationPart

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateDocumentationPart_patchOperations :: Lens' UpdateDocumentationPart (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateDocumentationPart_restApiId :: Lens' UpdateDocumentationPart Text

-- | <ul>
--   <li><i>Required</i> The identifier of the to-be-updated documentation
--   part.</li>
--   </ul>
updateDocumentationPart_documentationPartId :: Lens' UpdateDocumentationPart Text

-- | A documentation part for a targeted API entity.
--   
--   A documentation part consists of a content map (<tt>properties</tt>)
--   and a target (<tt>location</tt>). The target specifies an API entity
--   to which the documentation content applies. The supported API entity
--   types are <tt>API</tt>, <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. Valid <tt>location</tt> fields depend on
--   the API entity type. All valid fields are not required.
--   
--   The content map is a JSON string of API-specific key-value pairs.
--   Although an API can use any shape for the content map, only the
--   OpenAPI-compliant documentation fields will be injected into the
--   associated API entity definition in the exported OpenAPI definition
--   file.
--   
--   <a>Documenting an API</a>, DocumentationParts
--   
--   <i>See:</i> <a>newDocumentationPart</a> smart constructor.
data DocumentationPart
DocumentationPart' :: Maybe DocumentationPartLocation -> Maybe Text -> Maybe Text -> DocumentationPart

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
[$sel:location:DocumentationPart'] :: DocumentationPart -> Maybe DocumentationPartLocation

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
[$sel:id:DocumentationPart'] :: DocumentationPart -> Maybe Text

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
[$sel:properties:DocumentationPart'] :: DocumentationPart -> Maybe Text

-- | Create a value of <a>DocumentationPart</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:DocumentationPart'</a>,
--   <a>documentationPart_location</a> - The location of the API entity to
--   which the documentation applies. Valid fields depend on the targeted
--   API entity type. All the valid location fields are not required. If
--   not explicitly specified, a valid location field is treated as a
--   wildcard and associated documentation content may be inherited by
--   matching entities, unless overridden.
--   
--   <a>$sel:id:DocumentationPart'</a>, <a>documentationPart_id</a> - The
--   DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
--   
--   <a>$sel:properties:DocumentationPart'</a>,
--   <a>documentationPart_properties</a> - A content map of API-specific
--   key-value pairs describing the targeted API entity. The map must be
--   encoded as a JSON string, e.g., <tt>"{ \"description\": \"The API does
--   ...\" }"</tt>. Only OpenAPI-compliant documentation-related fields
--   from the properties map are exported and, hence, published as part of
--   the API entity definitions, while the original documentation parts are
--   exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
newDocumentationPart :: DocumentationPart

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
documentationPart_location :: Lens' DocumentationPart (Maybe DocumentationPartLocation)

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
documentationPart_id :: Lens' DocumentationPart (Maybe Text)

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
documentationPart_properties :: Lens' DocumentationPart (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateDocumentationPart.UpdateDocumentationPart
instance GHC.Show.Show Amazonka.APIGateway.UpdateDocumentationPart.UpdateDocumentationPart
instance GHC.Read.Read Amazonka.APIGateway.UpdateDocumentationPart.UpdateDocumentationPart
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateDocumentationPart.UpdateDocumentationPart
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateDocumentationPart.UpdateDocumentationPart
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateDocumentationPart.UpdateDocumentationPart
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateDocumentationPart.UpdateDocumentationPart
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateDocumentationPart.UpdateDocumentationPart
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateDocumentationPart.UpdateDocumentationPart
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateDocumentationPart.UpdateDocumentationPart
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateDocumentationPart.UpdateDocumentationPart


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
module Amazonka.APIGateway.UpdateDocumentationVersion

-- | Updates an existing documentation version of an API.
--   
--   <i>See:</i> <a>newUpdateDocumentationVersion</a> smart constructor.
data UpdateDocumentationVersion
UpdateDocumentationVersion' :: Maybe [PatchOperation] -> Text -> Text -> UpdateDocumentationVersion

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateDocumentationVersion'] :: UpdateDocumentationVersion -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi..</li>
--   </ul>
[$sel:restApiId:UpdateDocumentationVersion'] :: UpdateDocumentationVersion -> Text

-- | <ul>
--   <li><i>Required</i> The version identifier of the to-be-updated
--   documentation version.</li>
--   </ul>
[$sel:documentationVersion:UpdateDocumentationVersion'] :: UpdateDocumentationVersion -> Text

-- | Create a value of <a>UpdateDocumentationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateDocumentationVersion'</a>,
--   <a>updateDocumentationVersion_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:restApiId:UpdateDocumentationVersion'</a>,
--   <a>updateDocumentationVersion_restApiId</a> - [Required] The string
--   identifier of the associated RestApi..
--   
--   <a>$sel:documentationVersion:UpdateDocumentationVersion'</a>,
--   <a>updateDocumentationVersion_documentationVersion</a> - [Required]
--   The version identifier of the to-be-updated documentation version.
newUpdateDocumentationVersion :: Text -> Text -> UpdateDocumentationVersion

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateDocumentationVersion_patchOperations :: Lens' UpdateDocumentationVersion (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi..</li>
--   </ul>
updateDocumentationVersion_restApiId :: Lens' UpdateDocumentationVersion Text

-- | <ul>
--   <li><i>Required</i> The version identifier of the to-be-updated
--   documentation version.</li>
--   </ul>
updateDocumentationVersion_documentationVersion :: Lens' UpdateDocumentationVersion Text

-- | A snapshot of the documentation of an API.
--   
--   Publishing API documentation involves creating a documentation version
--   associated with an API stage and exporting the versioned documentation
--   to an external (e.g., OpenAPI) file.
--   
--   <a>Documenting an API</a>, DocumentationPart, DocumentationVersions
--   
--   <i>See:</i> <a>newDocumentationVersion</a> smart constructor.
data DocumentationVersion
DocumentationVersion' :: Maybe POSIX -> Maybe Text -> Maybe Text -> DocumentationVersion

-- | The date when the API documentation snapshot is created.
[$sel:createdDate:DocumentationVersion'] :: DocumentationVersion -> Maybe POSIX

-- | The version identifier of the API documentation snapshot.
[$sel:version:DocumentationVersion'] :: DocumentationVersion -> Maybe Text

-- | The description of the API documentation snapshot.
[$sel:description:DocumentationVersion'] :: DocumentationVersion -> Maybe Text

-- | Create a value of <a>DocumentationVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:DocumentationVersion'</a>,
--   <a>documentationVersion_createdDate</a> - The date when the API
--   documentation snapshot is created.
--   
--   <a>$sel:version:DocumentationVersion'</a>,
--   <a>documentationVersion_version</a> - The version identifier of the
--   API documentation snapshot.
--   
--   <a>$sel:description:DocumentationVersion'</a>,
--   <a>documentationVersion_description</a> - The description of the API
--   documentation snapshot.
newDocumentationVersion :: DocumentationVersion

-- | The date when the API documentation snapshot is created.
documentationVersion_createdDate :: Lens' DocumentationVersion (Maybe UTCTime)

-- | The version identifier of the API documentation snapshot.
documentationVersion_version :: Lens' DocumentationVersion (Maybe Text)

-- | The description of the API documentation snapshot.
documentationVersion_description :: Lens' DocumentationVersion (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateDocumentationVersion.UpdateDocumentationVersion
instance GHC.Show.Show Amazonka.APIGateway.UpdateDocumentationVersion.UpdateDocumentationVersion
instance GHC.Read.Read Amazonka.APIGateway.UpdateDocumentationVersion.UpdateDocumentationVersion
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateDocumentationVersion.UpdateDocumentationVersion
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateDocumentationVersion.UpdateDocumentationVersion
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateDocumentationVersion.UpdateDocumentationVersion
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateDocumentationVersion.UpdateDocumentationVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateDocumentationVersion.UpdateDocumentationVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateDocumentationVersion.UpdateDocumentationVersion
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateDocumentationVersion.UpdateDocumentationVersion
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateDocumentationVersion.UpdateDocumentationVersion


-- | Changes information about the DomainName resource.
module Amazonka.APIGateway.UpdateDomainName

-- | A request to change information about the DomainName resource.
--   
--   <i>See:</i> <a>newUpdateDomainName</a> smart constructor.
data UpdateDomainName
UpdateDomainName' :: Maybe [PatchOperation] -> Text -> UpdateDomainName

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateDomainName'] :: UpdateDomainName -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The name of the DomainName resource to be
--   changed.</li>
--   </ul>
[$sel:domainName:UpdateDomainName'] :: UpdateDomainName -> Text

-- | Create a value of <a>UpdateDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateDomainName'</a>,
--   <a>updateDomainName_patchOperations</a> - A list of update operations
--   to be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:domainName:UpdateDomainName'</a>,
--   <a>updateDomainName_domainName</a> - [Required] The name of the
--   DomainName resource to be changed.
newUpdateDomainName :: Text -> UpdateDomainName

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateDomainName_patchOperations :: Lens' UpdateDomainName (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The name of the DomainName resource to be
--   changed.</li>
--   </ul>
updateDomainName_domainName :: Lens' UpdateDomainName Text

-- | Represents a custom domain name as a user-friendly host name of an API
--   (RestApi).
--   
--   When you deploy an API, API Gateway creates a default host name for
--   the API. This default API host name is of the
--   <tt>{restapi-id}.execute-api.{region}.amazonaws.com</tt> format. With
--   the default host name, you can access the API's root resource with the
--   URL of
--   <tt>https://{restapi-id}.execute-api.{region}.amazonaws.com/{stage}/</tt>.
--   When you set up a custom domain name of <tt>apis.example.com</tt> for
--   this API, you can then access the same resource using the URL of the
--   <tt>https://apis.examples.com/myApi</tt>, where <tt>myApi</tt> is the
--   base path mapping (BasePathMapping) of your API under the custom
--   domain name.
--   
--   <a>Set a Custom Host Name for an API</a>
--   
--   <i>See:</i> <a>newDomainName</a> smart constructor.
data DomainName
DomainName' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SecurityPolicy -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe DomainNameStatus -> Maybe (HashMap Text Text) -> DomainName

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
[$sel:regionalHostedZoneId:DomainName'] :: DomainName -> Maybe Text

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
[$sel:certificateName:DomainName'] :: DomainName -> Maybe Text

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
[$sel:ownershipVerificationCertificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
[$sel:regionalCertificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
[$sel:certificateArn:DomainName'] :: DomainName -> Maybe Text

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
[$sel:distributionHostedZoneId:DomainName'] :: DomainName -> Maybe Text

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
[$sel:securityPolicy:DomainName'] :: DomainName -> Maybe SecurityPolicy

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
[$sel:domainName:DomainName'] :: DomainName -> Maybe Text

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
[$sel:mutualTlsAuthentication:DomainName'] :: DomainName -> Maybe MutualTlsAuthentication

-- | The name of the certificate that will be used for validating the
--   regional domain name.
[$sel:regionalCertificateName:DomainName'] :: DomainName -> Maybe Text

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
[$sel:regionalDomainName:DomainName'] :: DomainName -> Maybe Text

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
[$sel:certificateUploadDate:DomainName'] :: DomainName -> Maybe POSIX

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
[$sel:distributionDomainName:DomainName'] :: DomainName -> Maybe Text

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
[$sel:domainNameStatusMessage:DomainName'] :: DomainName -> Maybe Text

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
[$sel:endpointConfiguration:DomainName'] :: DomainName -> Maybe EndpointConfiguration

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
[$sel:domainNameStatus:DomainName'] :: DomainName -> Maybe DomainNameStatus

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:DomainName'] :: DomainName -> Maybe (HashMap Text Text)

-- | Create a value of <a>DomainName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regionalHostedZoneId:DomainName'</a>,
--   <a>domainName_regionalHostedZoneId</a> - The region-specific Amazon
--   Route 53 Hosted Zone ID of the regional endpoint. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:certificateName:DomainName'</a>,
--   <a>domainName_certificateName</a> - The name of the certificate that
--   will be used by edge-optimized endpoint for this domain name.
--   
--   <a>$sel:ownershipVerificationCertificateArn:DomainName'</a>,
--   <a>domainName_ownershipVerificationCertificateArn</a> - The ARN of the
--   public certificate issued by ACM to validate ownership of your custom
--   domain. Only required when configuring mutual TLS and using an ACM
--   imported or private CA certificate ARN as the regionalCertificateArn.
--   
--   <a>$sel:regionalCertificateArn:DomainName'</a>,
--   <a>domainName_regionalCertificateArn</a> - The reference to an
--   AWS-managed certificate that will be used for validating the regional
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:certificateArn:DomainName'</a>,
--   <a>domainName_certificateArn</a> - The reference to an AWS-managed
--   certificate that will be used by edge-optimized endpoint for this
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:distributionHostedZoneId:DomainName'</a>,
--   <a>domainName_distributionHostedZoneId</a> - The region-agnostic
--   Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The
--   valid value is <tt>Z2FDTNDATAQYW2</tt> for all the regions. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:securityPolicy:DomainName'</a>,
--   <a>domainName_securityPolicy</a> - The Transport Layer Security (TLS)
--   version + cipher suite for this DomainName. The valid values are
--   <tt>TLS_1_0</tt> and <tt>TLS_1_2</tt>.
--   
--   <a>$sel:domainName:DomainName'</a>, <a>domainName_domainName</a> - The
--   custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
--   
--   <a>$sel:mutualTlsAuthentication:DomainName'</a>,
--   <a>domainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name. If specified,
--   API Gateway performs two-way authentication between the client and the
--   server. Clients must present a trusted certificate to access your API.
--   
--   <a>$sel:regionalCertificateName:DomainName'</a>,
--   <a>domainName_regionalCertificateName</a> - The name of the
--   certificate that will be used for validating the regional domain name.
--   
--   <a>$sel:regionalDomainName:DomainName'</a>,
--   <a>domainName_regionalDomainName</a> - The domain name associated with
--   the regional endpoint for this custom domain name. You set up this
--   association by adding a DNS record that points the custom domain name
--   to this regional domain name. The regional domain name is returned by
--   API Gateway when you create a regional endpoint.
--   
--   <a>$sel:certificateUploadDate:DomainName'</a>,
--   <a>domainName_certificateUploadDate</a> - The timestamp when the
--   certificate that was used by edge-optimized endpoint for this domain
--   name was uploaded.
--   
--   <a>$sel:distributionDomainName:DomainName'</a>,
--   <a>domainName_distributionDomainName</a> - The domain name of the
--   Amazon CloudFront distribution associated with this custom domain name
--   for an edge-optimized endpoint. You set up this association when
--   adding a DNS record pointing the custom domain name to this
--   distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
--   
--   <a>$sel:domainNameStatusMessage:DomainName'</a>,
--   <a>domainName_domainNameStatusMessage</a> - An optional text message
--   containing detailed information about status of the DomainName
--   migration.
--   
--   <a>$sel:endpointConfiguration:DomainName'</a>,
--   <a>domainName_endpointConfiguration</a> - The endpoint configuration
--   of this DomainName showing the endpoint types of the domain name.
--   
--   <a>$sel:domainNameStatus:DomainName'</a>,
--   <a>domainName_domainNameStatus</a> - The status of the DomainName
--   migration. The valid values are <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
--   
--   <a>$sel:tags:DomainName'</a>, <a>domainName_tags</a> - The collection
--   of tags. Each tag element is associated with a given resource.
newDomainName :: DomainName

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
domainName_regionalHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
domainName_certificateName :: Lens' DomainName (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
domainName_ownershipVerificationCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
domainName_regionalCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
domainName_certificateArn :: Lens' DomainName (Maybe Text)

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
domainName_distributionHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
domainName_securityPolicy :: Lens' DomainName (Maybe SecurityPolicy)

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
domainName_domainName :: Lens' DomainName (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
domainName_mutualTlsAuthentication :: Lens' DomainName (Maybe MutualTlsAuthentication)

-- | The name of the certificate that will be used for validating the
--   regional domain name.
domainName_regionalCertificateName :: Lens' DomainName (Maybe Text)

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
domainName_regionalDomainName :: Lens' DomainName (Maybe Text)

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
domainName_certificateUploadDate :: Lens' DomainName (Maybe UTCTime)

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
domainName_distributionDomainName :: Lens' DomainName (Maybe Text)

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
domainName_domainNameStatusMessage :: Lens' DomainName (Maybe Text)

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
domainName_endpointConfiguration :: Lens' DomainName (Maybe EndpointConfiguration)

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
domainName_domainNameStatus :: Lens' DomainName (Maybe DomainNameStatus)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
domainName_tags :: Lens' DomainName (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateDomainName.UpdateDomainName
instance GHC.Show.Show Amazonka.APIGateway.UpdateDomainName.UpdateDomainName
instance GHC.Read.Read Amazonka.APIGateway.UpdateDomainName.UpdateDomainName
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateDomainName.UpdateDomainName
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateDomainName.UpdateDomainName
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateDomainName.UpdateDomainName
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateDomainName.UpdateDomainName
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateDomainName.UpdateDomainName
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateDomainName.UpdateDomainName
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateDomainName.UpdateDomainName
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateDomainName.UpdateDomainName


-- | Updates a GatewayResponse of a specified response type on the given
--   RestApi.
module Amazonka.APIGateway.UpdateGatewayResponse

-- | Updates a GatewayResponse of a specified response type on the given
--   RestApi.
--   
--   <i>See:</i> <a>newUpdateGatewayResponse</a> smart constructor.
data UpdateGatewayResponse
UpdateGatewayResponse' :: Maybe [PatchOperation] -> Text -> GatewayResponseType -> UpdateGatewayResponse

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateGatewayResponse'] :: UpdateGatewayResponse -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateGatewayResponse'] :: UpdateGatewayResponse -> Text

-- | <ul>
--   <li><i>Required</i></li>
--   </ul>
--   
--   The response type of the associated GatewayResponse.
[$sel:responseType:UpdateGatewayResponse'] :: UpdateGatewayResponse -> GatewayResponseType

-- | Create a value of <a>UpdateGatewayResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateGatewayResponse'</a>,
--   <a>updateGatewayResponse_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:restApiId:UpdateGatewayResponse'</a>,
--   <a>updateGatewayResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:responseType:UpdateGatewayResponse'</a>,
--   <a>updateGatewayResponse_responseType</a> - [Required]
--   
--   The response type of the associated GatewayResponse.
newUpdateGatewayResponse :: Text -> GatewayResponseType -> UpdateGatewayResponse

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateGatewayResponse_patchOperations :: Lens' UpdateGatewayResponse (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateGatewayResponse_restApiId :: Lens' UpdateGatewayResponse Text

-- | <ul>
--   <li><i>Required</i></li>
--   </ul>
--   
--   The response type of the associated GatewayResponse.
updateGatewayResponse_responseType :: Lens' UpdateGatewayResponse GatewayResponseType

-- | A gateway response of a given response type and status code, with
--   optional response parameters and mapping templates.
--   
--   For more information about valid gateway response types, see
--   <a>Gateway Response Types Supported by API Gateway</a>
--   
--   <h4>Example: Get a Gateway Response of a given response type</h4>
--   
--   <h5>Request</h5>
--   
--   This example shows how to get a gateway response of the
--   <tt>MISSING_AUTHENTICATION_TOKEN</tt> type.
--   
--   <pre>
--   GET /restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T202516Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=1b52460e3159c1a26cff29093855d50ea141c1c5b937528fecaf60f51129697a Cache-Control: no-cache Postman-Token: 3b2a1ce9-c848-2e26-2e2f-9c2caefbed45
--   </pre>
--   
--   The response type is specified as a URL path.
--   
--   <h5>Response</h5>
--   
--   The successful operation returns the <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:delete": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": false, "responseParameters": { "gatewayresponse.header.x-request-path": "method.request.path.petId", "gatewayresponse.header.Access-Control-Allow-Origin": "'a.b.c'", "gatewayresponse.header.x-request-query": "method.request.querystring.q", "gatewayresponse.header.x-request-header": "method.request.header.Accept" }, "responseTemplates": { "application/json": "{\n \"message\": $context.error.messageString,\n \"type\": \"$context.error.responseType\",\n \"stage\": \"$context.stage\",\n \"resourcePath\": \"$context.resourcePath\",\n \"stageVariables.a\": \"$stageVariables.a\",\n \"statusCode\": \"'404'\"\n}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "404" }
--   </pre>
--   
--   <a>Customize Gateway Responses</a>
--   
--   <i>See:</i> <a>newGatewayResponse</a> smart constructor.
data GatewayResponse
GatewayResponse' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe GatewayResponseType -> Maybe Text -> Maybe (HashMap Text Text) -> GatewayResponse

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
[$sel:defaultResponse:GatewayResponse'] :: GatewayResponse -> Maybe Bool

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
[$sel:responseTemplates:GatewayResponse'] :: GatewayResponse -> Maybe (HashMap Text Text)

-- | The response type of the associated GatewayResponse.
[$sel:responseType:GatewayResponse'] :: GatewayResponse -> Maybe GatewayResponseType

-- | The HTTP status code for this GatewayResponse.
[$sel:statusCode:GatewayResponse'] :: GatewayResponse -> Maybe Text

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
[$sel:responseParameters:GatewayResponse'] :: GatewayResponse -> Maybe (HashMap Text Text)

-- | Create a value of <a>GatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultResponse:GatewayResponse'</a>,
--   <a>gatewayResponse_defaultResponse</a> - A Boolean flag to indicate
--   whether this GatewayResponse is the default gateway response
--   (<tt>true</tt>) or not (<tt>false</tt>). A default gateway response is
--   one generated by API Gateway without any customization by an API
--   developer.
--   
--   <a>$sel:responseTemplates:GatewayResponse'</a>,
--   <a>gatewayResponse_responseTemplates</a> - Response templates of the
--   GatewayResponse as a string-to-string map of key-value pairs.
--   
--   <a>$sel:responseType:GatewayResponse'</a>,
--   <a>gatewayResponse_responseType</a> - The response type of the
--   associated GatewayResponse.
--   
--   <a>$sel:statusCode:GatewayResponse'</a>,
--   <a>gatewayResponse_statusCode</a> - The HTTP status code for this
--   GatewayResponse.
--   
--   <a>$sel:responseParameters:GatewayResponse'</a>,
--   <a>gatewayResponse_responseParameters</a> - Response parameters
--   (paths, query strings and headers) of the GatewayResponse as a
--   string-to-string map of key-value pairs.
newGatewayResponse :: GatewayResponse

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
gatewayResponse_defaultResponse :: Lens' GatewayResponse (Maybe Bool)

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
gatewayResponse_responseTemplates :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | The response type of the associated GatewayResponse.
gatewayResponse_responseType :: Lens' GatewayResponse (Maybe GatewayResponseType)

-- | The HTTP status code for this GatewayResponse.
gatewayResponse_statusCode :: Lens' GatewayResponse (Maybe Text)

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
gatewayResponse_responseParameters :: Lens' GatewayResponse (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateGatewayResponse.UpdateGatewayResponse
instance GHC.Show.Show Amazonka.APIGateway.UpdateGatewayResponse.UpdateGatewayResponse
instance GHC.Read.Read Amazonka.APIGateway.UpdateGatewayResponse.UpdateGatewayResponse
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateGatewayResponse.UpdateGatewayResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateGatewayResponse.UpdateGatewayResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateGatewayResponse.UpdateGatewayResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateGatewayResponse.UpdateGatewayResponse
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateGatewayResponse.UpdateGatewayResponse
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateGatewayResponse.UpdateGatewayResponse
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateGatewayResponse.UpdateGatewayResponse
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateGatewayResponse.UpdateGatewayResponse


-- | Represents an update integration.
module Amazonka.APIGateway.UpdateIntegration

-- | Represents an update integration request.
--   
--   <i>See:</i> <a>newUpdateIntegration</a> smart constructor.
data UpdateIntegration
UpdateIntegration' :: Maybe [PatchOperation] -> Text -> Text -> Text -> UpdateIntegration

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateIntegration'] :: UpdateIntegration -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateIntegration'] :: UpdateIntegration -> Text

-- | <ul>
--   <li><i>Required</i> Represents an update integration request's
--   resource identifier.</li>
--   </ul>
[$sel:resourceId:UpdateIntegration'] :: UpdateIntegration -> Text

-- | <ul>
--   <li><i>Required</i> Represents an update integration request's HTTP
--   method.</li>
--   </ul>
[$sel:httpMethod:UpdateIntegration'] :: UpdateIntegration -> Text

-- | Create a value of <a>UpdateIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateIntegration'</a>,
--   <a>updateIntegration_patchOperations</a> - A list of update operations
--   to be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:restApiId:UpdateIntegration'</a>,
--   <a>updateIntegration_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:resourceId:UpdateIntegration'</a>,
--   <a>updateIntegration_resourceId</a> - [Required] Represents an update
--   integration request's resource identifier.
--   
--   <a>$sel:httpMethod:UpdateIntegration'</a>,
--   <a>updateIntegration_httpMethod</a> - [Required] Represents an update
--   integration request's HTTP method.
newUpdateIntegration :: Text -> Text -> Text -> UpdateIntegration

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateIntegration_patchOperations :: Lens' UpdateIntegration (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateIntegration_restApiId :: Lens' UpdateIntegration Text

-- | <ul>
--   <li><i>Required</i> Represents an update integration request's
--   resource identifier.</li>
--   </ul>
updateIntegration_resourceId :: Lens' UpdateIntegration Text

-- | <ul>
--   <li><i>Required</i> Represents an update integration request's HTTP
--   method.</li>
--   </ul>
updateIntegration_httpMethod :: Lens' UpdateIntegration Text

-- | Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.
--   
--   In the API Gateway console, the built-in Lambda integration is an AWS
--   integration.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegration</a> smart constructor.
data Integration
Integration' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe Text -> Maybe (HashMap Text IntegrationResponse) -> Maybe TlsConfig -> Maybe Text -> Maybe Int -> Maybe IntegrationType -> Maybe ConnectionType -> Maybe [Text] -> Integration

-- | Specifies the integration's HTTP method type.
[$sel:httpMethod:Integration'] :: Integration -> Maybe Text

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
[$sel:requestTemplates:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
[$sel:credentials:Integration'] :: Integration -> Maybe Text

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
[$sel:connectionId:Integration'] :: Integration -> Maybe Text

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
[$sel:requestParameters:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
[$sel:contentHandling:Integration'] :: Integration -> Maybe ContentHandlingStrategy

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
[$sel:passthroughBehavior:Integration'] :: Integration -> Maybe Text

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
[$sel:uri:Integration'] :: Integration -> Maybe Text

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
[$sel:integrationResponses:Integration'] :: Integration -> Maybe (HashMap Text IntegrationResponse)

-- | Specifies the TLS configuration for an integration.
[$sel:tlsConfig:Integration'] :: Integration -> Maybe TlsConfig

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
[$sel:cacheNamespace:Integration'] :: Integration -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
[$sel:timeoutInMillis:Integration'] :: Integration -> Maybe Int

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
[$sel:type':Integration'] :: Integration -> Maybe IntegrationType

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
[$sel:connectionType:Integration'] :: Integration -> Maybe ConnectionType

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
[$sel:cacheKeyParameters:Integration'] :: Integration -> Maybe [Text]

-- | Create a value of <a>Integration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:Integration'</a>, <a>integration_httpMethod</a> -
--   Specifies the integration's HTTP method type.
--   
--   <a>$sel:requestTemplates:Integration'</a>,
--   <a>integration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   
--   <a>$sel:credentials:Integration'</a>, <a>integration_credentials</a> -
--   Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
--   
--   <a>$sel:connectionId:Integration'</a>, <a>integration_connectionId</a>
--   - The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
--   
--   <a>$sel:requestParameters:Integration'</a>,
--   <a>integration_requestParameters</a> - A key-value map specifying
--   request parameters that are passed from the method request to the back
--   end. The key is an integration request parameter name and the
--   associated value is a method request parameter value or static value
--   that must be enclosed within single quotes and pre-encoded as required
--   by the back end. The method request parameter value must match the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> must be a valid and unique method
--   request parameter name.
--   
--   <a>$sel:contentHandling:Integration'</a>,
--   <a>integration_contentHandling</a> - Specifies how to handle request
--   payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
--   
--   <a>$sel:passthroughBehavior:Integration'</a>,
--   <a>integration_passthroughBehavior</a> - Specifies how the method
--   request body of an unmapped content type will be passed through the
--   integration request to the back end without transformation. A content
--   type is unmapped if no mapping template is defined in the integration
--   or the content type does not match any of the mapped content types, as
--   specified in <tt>requestTemplates</tt>. The valid value is one of the
--   following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
--   
--   <a>$sel:uri:Integration'</a>, <a>integration_uri</a> - Specifies
--   Uniform Resource Identifier (URI) of the integration endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
--   
--   <a>$sel:integrationResponses:Integration'</a>,
--   <a>integration_integrationResponses</a> - Specifies the integration's
--   responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
--   
--   <a>$sel:tlsConfig:Integration'</a>, <a>integration_tlsConfig</a> -
--   Specifies the TLS configuration for an integration.
--   
--   <a>$sel:cacheNamespace:Integration'</a>,
--   <a>integration_cacheNamespace</a> - Specifies a group of related
--   cached parameters. By default, API Gateway uses the resource ID as the
--   <tt>cacheNamespace</tt>. You can specify the same
--   <tt>cacheNamespace</tt> across resources to return the same cached
--   data for requests to different resources.
--   
--   <a>$sel:timeoutInMillis:Integration'</a>,
--   <a>integration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds. The default value is 29,000 milliseconds or 29
--   seconds.
--   
--   <a>$sel:type':Integration'</a>, <a>integration_type</a> - Specifies an
--   API method integration type. The valid value is one of the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
--   
--   <a>$sel:connectionType:Integration'</a>,
--   <a>integration_connectionType</a> - The type of the network connection
--   to the integration endpoint. The valid value is <tt>INTERNET</tt> for
--   connections through the public routable internet or <tt>VPC_LINK</tt>
--   for private connections between API Gateway and a network load
--   balancer in a VPC. The default value is <tt>INTERNET</tt>.
--   
--   <a>$sel:cacheKeyParameters:Integration'</a>,
--   <a>integration_cacheKeyParameters</a> - A list of request parameters
--   whose values API Gateway caches. To be valid values for
--   <tt>cacheKeyParameters</tt>, these parameters must also be specified
--   for Method <tt>requestParameters</tt>.
newIntegration :: Integration

-- | Specifies the integration's HTTP method type.
integration_httpMethod :: Lens' Integration (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
integration_requestTemplates :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
integration_credentials :: Lens' Integration (Maybe Text)

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
integration_connectionId :: Lens' Integration (Maybe Text)

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
integration_requestParameters :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
integration_contentHandling :: Lens' Integration (Maybe ContentHandlingStrategy)

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
integration_passthroughBehavior :: Lens' Integration (Maybe Text)

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
integration_uri :: Lens' Integration (Maybe Text)

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
integration_integrationResponses :: Lens' Integration (Maybe (HashMap Text IntegrationResponse))

-- | Specifies the TLS configuration for an integration.
integration_tlsConfig :: Lens' Integration (Maybe TlsConfig)

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
integration_cacheNamespace :: Lens' Integration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
integration_timeoutInMillis :: Lens' Integration (Maybe Int)

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
integration_type :: Lens' Integration (Maybe IntegrationType)

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
integration_connectionType :: Lens' Integration (Maybe ConnectionType)

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
integration_cacheKeyParameters :: Lens' Integration (Maybe [Text])
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateIntegration.UpdateIntegration
instance GHC.Show.Show Amazonka.APIGateway.UpdateIntegration.UpdateIntegration
instance GHC.Read.Read Amazonka.APIGateway.UpdateIntegration.UpdateIntegration
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateIntegration.UpdateIntegration
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateIntegration.UpdateIntegration
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateIntegration.UpdateIntegration
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateIntegration.UpdateIntegration
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateIntegration.UpdateIntegration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateIntegration.UpdateIntegration
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateIntegration.UpdateIntegration
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateIntegration.UpdateIntegration


-- | Represents an update integration response.
module Amazonka.APIGateway.UpdateIntegrationResponse

-- | Represents an update integration response request.
--   
--   <i>See:</i> <a>newUpdateIntegrationResponse</a> smart constructor.
data UpdateIntegrationResponse
UpdateIntegrationResponse' :: Maybe [PatchOperation] -> Text -> Text -> Text -> Text -> UpdateIntegrationResponse

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Text

-- | <ul>
--   <li><i>Required</i> Specifies an update integration response request's
--   resource identifier.</li>
--   </ul>
[$sel:resourceId:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Text

-- | <ul>
--   <li><i>Required</i> Specifies an update integration response request's
--   HTTP method.</li>
--   </ul>
[$sel:httpMethod:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Text

-- | <ul>
--   <li><i>Required</i> Specifies an update integration response request's
--   status code.</li>
--   </ul>
[$sel:statusCode:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Text

-- | Create a value of <a>UpdateIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:restApiId:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_resourceId</a> - [Required] Specifies an
--   update integration response request's resource identifier.
--   
--   <a>$sel:httpMethod:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_httpMethod</a> - [Required] Specifies an
--   update integration response request's HTTP method.
--   
--   <a>$sel:statusCode:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_statusCode</a> - [Required] Specifies an
--   update integration response request's status code.
newUpdateIntegrationResponse :: Text -> Text -> Text -> Text -> UpdateIntegrationResponse

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateIntegrationResponse_patchOperations :: Lens' UpdateIntegrationResponse (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateIntegrationResponse_restApiId :: Lens' UpdateIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies an update integration response request's
--   resource identifier.</li>
--   </ul>
updateIntegrationResponse_resourceId :: Lens' UpdateIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies an update integration response request's
--   HTTP method.</li>
--   </ul>
updateIntegrationResponse_httpMethod :: Lens' UpdateIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies an update integration response request's
--   status code.</li>
--   </ul>
updateIntegrationResponse_statusCode :: Lens' UpdateIntegrationResponse Text

-- | Represents an integration response. The status code must map to an
--   existing MethodResponse, and parameters and templates can be used to
--   transform the back-end response.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegrationResponse</a> smart constructor.
data IntegrationResponse
IntegrationResponse' :: Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> IntegrationResponse

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
[$sel:contentHandling:IntegrationResponse'] :: IntegrationResponse -> Maybe ContentHandlingStrategy

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
[$sel:responseTemplates:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
[$sel:selectionPattern:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
[$sel:statusCode:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
[$sel:responseParameters:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | Create a value of <a>IntegrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentHandling:IntegrationResponse'</a>,
--   <a>integrationResponse_contentHandling</a> - Specifies how to handle
--   response payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
--   
--   <a>$sel:responseTemplates:IntegrationResponse'</a>,
--   <a>integrationResponse_responseTemplates</a> - Specifies the templates
--   used to transform the integration response body. Response templates
--   are represented as a key/value map, with a content-type as the key and
--   a template as the value.
--   
--   <a>$sel:selectionPattern:IntegrationResponse'</a>,
--   <a>integrationResponse_selectionPattern</a> - Specifies the regular
--   expression (regex) pattern used to choose an integration response
--   based on the response from the back end. For example, if the success
--   response returns nothing and the error response returns some string,
--   you could use the <tt>.+</tt> regex to match error response. However,
--   make sure that the error response does not contain any newline
--   (<tt>\n</tt>) character in such cases. If the back end is an AWS
--   Lambda function, the AWS Lambda function error header is matched. For
--   all other HTTP and AWS back ends, the HTTP status code is matched.
--   
--   <a>$sel:statusCode:IntegrationResponse'</a>,
--   <a>integrationResponse_statusCode</a> - Specifies the status code that
--   is used to map the integration response to an existing MethodResponse.
--   
--   <a>$sel:responseParameters:IntegrationResponse'</a>,
--   <a>integrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the back end. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of <tt>method.response.header.{name}</tt>, where <tt>name</tt>
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
newIntegrationResponse :: IntegrationResponse

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
integrationResponse_contentHandling :: Lens' IntegrationResponse (Maybe ContentHandlingStrategy)

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
integrationResponse_responseTemplates :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
integrationResponse_selectionPattern :: Lens' IntegrationResponse (Maybe Text)

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
integrationResponse_statusCode :: Lens' IntegrationResponse (Maybe Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
integrationResponse_responseParameters :: Lens' IntegrationResponse (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateIntegrationResponse.UpdateIntegrationResponse
instance GHC.Show.Show Amazonka.APIGateway.UpdateIntegrationResponse.UpdateIntegrationResponse
instance GHC.Read.Read Amazonka.APIGateway.UpdateIntegrationResponse.UpdateIntegrationResponse
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateIntegrationResponse.UpdateIntegrationResponse


-- | Updates an existing Method resource.
module Amazonka.APIGateway.UpdateMethod

-- | Request to update an existing Method resource.
--   
--   <i>See:</i> <a>newUpdateMethod</a> smart constructor.
data UpdateMethod
UpdateMethod' :: Maybe [PatchOperation] -> Text -> Text -> Text -> UpdateMethod

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateMethod'] :: UpdateMethod -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateMethod'] :: UpdateMethod -> Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the Method
--   resource.</li>
--   </ul>
[$sel:resourceId:UpdateMethod'] :: UpdateMethod -> Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
[$sel:httpMethod:UpdateMethod'] :: UpdateMethod -> Text

-- | Create a value of <a>UpdateMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateMethod'</a>,
--   <a>updateMethod_patchOperations</a> - A list of update operations to
--   be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:restApiId:UpdateMethod'</a>, <a>updateMethod_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:UpdateMethod'</a>, <a>updateMethod_resourceId</a> -
--   [Required] The Resource identifier for the Method resource.
--   
--   <a>$sel:httpMethod:UpdateMethod'</a>, <a>updateMethod_httpMethod</a> -
--   [Required] The HTTP verb of the Method resource.
newUpdateMethod :: Text -> Text -> Text -> UpdateMethod

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateMethod_patchOperations :: Lens' UpdateMethod (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateMethod_restApiId :: Lens' UpdateMethod Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the Method
--   resource.</li>
--   </ul>
updateMethod_resourceId :: Lens' UpdateMethod Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
updateMethod_httpMethod :: Lens' UpdateMethod Text

-- | Represents a client-facing interface by which the client calls the API
--   to access back-end resources. A <b>Method</b> resource is integrated
--   with an Integration resource. Both consist of a request and one or
--   more responses. The method request takes the client input that is
--   passed to the back end through the integration request. A method
--   response returns the output from the back end to the client through an
--   integration response. A method request is embodied in a <b>Method</b>
--   resource, whereas an integration request is embodied in an Integration
--   resource. On the other hand, a method response is represented by a
--   MethodResponse resource, whereas an integration response is
--   represented by an IntegrationResponse resource.
--   
--   <h4>Example: Retrive the GET method on a specified resource</h4>
--   
--   <h5>Request</h5>
--   
--   The following example request retrieves the information about the GET
--   method on an API resource (<tt>3kzxbg5sa2</tt>) of an API
--   (<tt>fugvjdxtri</tt>).
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T210259Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": true, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\")" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   In the example above, the response template for the <tt>200 OK</tt>
--   response maps the JSON output from the <tt>ListStreams</tt> action in
--   the back end to an XML output. The mapping template is URL-encoded as
--   <tt>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</tt>
--   and the output is decoded using the <a>$util.urlDecode()</a> helper
--   function.
--   
--   MethodResponse, Integration, IntegrationResponse, Resource, <a>Set up
--   an API's method</a>
--   
--   <i>See:</i> <a>newMethod</a> smart constructor.
data Method
Method' :: Maybe (HashMap Text MethodResponse) -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Integration -> Method

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
[$sel:methodResponses:Method'] :: Method -> Maybe (HashMap Text MethodResponse)

-- | The method's HTTP verb.
[$sel:httpMethod:Method'] :: Method -> Maybe Text

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
[$sel:authorizationScopes:Method'] :: Method -> Maybe [Text]

-- | The identifier of a RequestValidator for request validation.
[$sel:requestValidatorId:Method'] :: Method -> Maybe Text

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
[$sel:requestModels:Method'] :: Method -> Maybe (HashMap Text Text)

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
[$sel:requestParameters:Method'] :: Method -> Maybe (HashMap Text Bool)

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
[$sel:authorizerId:Method'] :: Method -> Maybe Text

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
[$sel:operationName:Method'] :: Method -> Maybe Text

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
[$sel:authorizationType:Method'] :: Method -> Maybe Text

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
[$sel:apiKeyRequired:Method'] :: Method -> Maybe Bool

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
[$sel:methodIntegration:Method'] :: Method -> Maybe Integration

-- | Create a value of <a>Method</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodResponses:Method'</a>, <a>method_methodResponses</a> -
--   Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
--   
--   <a>$sel:httpMethod:Method'</a>, <a>method_httpMethod</a> - The
--   method's HTTP verb.
--   
--   <a>$sel:authorizationScopes:Method'</a>,
--   <a>method_authorizationScopes</a> - A list of authorization scopes
--   configured on the method. The scopes are used with a
--   <tt>COGNITO_USER_POOLS</tt> authorizer to authorize the method
--   invocation. The authorization works by matching the method scopes
--   against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:requestValidatorId:Method'</a>,
--   <a>method_requestValidatorId</a> - The identifier of a
--   RequestValidator for request validation.
--   
--   <a>$sel:requestModels:Method'</a>, <a>method_requestModels</a> - A
--   key-value map specifying data schemas, represented by Model resources,
--   (as the mapped value) of the request payloads of given content types
--   (as the mapping key).
--   
--   <a>$sel:requestParameters:Method'</a>, <a>method_requestParameters</a>
--   - A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
--   
--   <a>$sel:authorizerId:Method'</a>, <a>method_authorizerId</a> - The
--   identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
--   
--   <a>$sel:operationName:Method'</a>, <a>method_operationName</a> - A
--   human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
--   
--   <a>$sel:authorizationType:Method'</a>, <a>method_authorizationType</a>
--   - The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
--   
--   <a>$sel:apiKeyRequired:Method'</a>, <a>method_apiKeyRequired</a> - A
--   boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
--   
--   <a>$sel:methodIntegration:Method'</a>, <a>method_methodIntegration</a>
--   - Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
newMethod :: Method

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodResponses :: Lens' Method (Maybe (HashMap Text MethodResponse))

-- | The method's HTTP verb.
method_httpMethod :: Lens' Method (Maybe Text)

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
method_authorizationScopes :: Lens' Method (Maybe [Text])

-- | The identifier of a RequestValidator for request validation.
method_requestValidatorId :: Lens' Method (Maybe Text)

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
method_requestModels :: Lens' Method (Maybe (HashMap Text Text))

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
method_requestParameters :: Lens' Method (Maybe (HashMap Text Bool))

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
method_authorizerId :: Lens' Method (Maybe Text)

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
method_operationName :: Lens' Method (Maybe Text)

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
method_authorizationType :: Lens' Method (Maybe Text)

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
method_apiKeyRequired :: Lens' Method (Maybe Bool)

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodIntegration :: Lens' Method (Maybe Integration)
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateMethod.UpdateMethod
instance GHC.Show.Show Amazonka.APIGateway.UpdateMethod.UpdateMethod
instance GHC.Read.Read Amazonka.APIGateway.UpdateMethod.UpdateMethod
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateMethod.UpdateMethod
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateMethod.UpdateMethod
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateMethod.UpdateMethod
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateMethod.UpdateMethod
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateMethod.UpdateMethod
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateMethod.UpdateMethod
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateMethod.UpdateMethod
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateMethod.UpdateMethod


-- | Updates an existing MethodResponse resource.
module Amazonka.APIGateway.UpdateMethodResponse

-- | A request to update an existing MethodResponse resource.
--   
--   <i>See:</i> <a>newUpdateMethodResponse</a> smart constructor.
data UpdateMethodResponse
UpdateMethodResponse' :: Maybe [PatchOperation] -> Text -> Text -> Text -> Text -> UpdateMethodResponse

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateMethodResponse'] :: UpdateMethodResponse -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateMethodResponse'] :: UpdateMethodResponse -> Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the MethodResponse
--   resource.</li>
--   </ul>
[$sel:resourceId:UpdateMethodResponse'] :: UpdateMethodResponse -> Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
[$sel:httpMethod:UpdateMethodResponse'] :: UpdateMethodResponse -> Text

-- | <ul>
--   <li><i>Required</i> The status code for the MethodResponse
--   resource.</li>
--   </ul>
[$sel:statusCode:UpdateMethodResponse'] :: UpdateMethodResponse -> Text

-- | Create a value of <a>UpdateMethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateMethodResponse'</a>,
--   <a>updateMethodResponse_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:restApiId:UpdateMethodResponse'</a>,
--   <a>updateMethodResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:UpdateMethodResponse'</a>,
--   <a>updateMethodResponse_resourceId</a> - [Required] The Resource
--   identifier for the MethodResponse resource.
--   
--   <a>$sel:httpMethod:UpdateMethodResponse'</a>,
--   <a>updateMethodResponse_httpMethod</a> - [Required] The HTTP verb of
--   the Method resource.
--   
--   <a>$sel:statusCode:UpdateMethodResponse'</a>,
--   <a>updateMethodResponse_statusCode</a> - [Required] The status code
--   for the MethodResponse resource.
newUpdateMethodResponse :: Text -> Text -> Text -> Text -> UpdateMethodResponse

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateMethodResponse_patchOperations :: Lens' UpdateMethodResponse (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateMethodResponse_restApiId :: Lens' UpdateMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the MethodResponse
--   resource.</li>
--   </ul>
updateMethodResponse_resourceId :: Lens' UpdateMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
updateMethodResponse_httpMethod :: Lens' UpdateMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The status code for the MethodResponse
--   resource.</li>
--   </ul>
updateMethodResponse_statusCode :: Lens' UpdateMethodResponse Text

-- | Represents a method response of a given HTTP status code returned to
--   the client. The method response is passed from the back end through
--   the associated integration response that can be transformed using a
--   mapping template.
--   
--   <h4>Example: A <b>MethodResponse</b> instance of an API</h4>
--   
--   <h5>Request</h5>
--   
--   The example request retrieves a <b>MethodResponse</b> of the 200
--   status code.
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T222952Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" }
--   </pre>
--   
--   Method, IntegrationResponse, Integration <a>Creating an API</a>
--   
--   <i>See:</i> <a>newMethodResponse</a> smart constructor.
data MethodResponse
MethodResponse' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Bool) -> MethodResponse

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
[$sel:responseModels:MethodResponse'] :: MethodResponse -> Maybe (HashMap Text Text)

-- | The method response's status code.
[$sel:statusCode:MethodResponse'] :: MethodResponse -> Maybe Text

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
[$sel:responseParameters:MethodResponse'] :: MethodResponse -> Maybe (HashMap Text Bool)

-- | Create a value of <a>MethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseModels:MethodResponse'</a>,
--   <a>methodResponse_responseModels</a> - Specifies the Model resources
--   used for the response's content-type. Response models are represented
--   as a key/value map, with a content-type as the key and a Model name as
--   the value.
--   
--   <a>$sel:statusCode:MethodResponse'</a>,
--   <a>methodResponse_statusCode</a> - The method response's status code.
--   
--   <a>$sel:responseParameters:MethodResponse'</a>,
--   <a>methodResponse_responseParameters</a> - A key-value map specifying
--   required or optional response parameters that API Gateway can send
--   back to the caller. A key defines a method response header and the
--   value specifies whether the associated method response header is
--   required or not. The expression of the key must match the pattern
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. API Gateway passes certain integration
--   response data to the method response headers specified here according
--   to the mapping you prescribe in the API's IntegrationResponse. The
--   integration response data that can be mapped include an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
newMethodResponse :: MethodResponse

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
methodResponse_responseModels :: Lens' MethodResponse (Maybe (HashMap Text Text))

-- | The method response's status code.
methodResponse_statusCode :: Lens' MethodResponse (Maybe Text)

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
methodResponse_responseParameters :: Lens' MethodResponse (Maybe (HashMap Text Bool))
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateMethodResponse.UpdateMethodResponse
instance GHC.Show.Show Amazonka.APIGateway.UpdateMethodResponse.UpdateMethodResponse
instance GHC.Read.Read Amazonka.APIGateway.UpdateMethodResponse.UpdateMethodResponse
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateMethodResponse.UpdateMethodResponse
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateMethodResponse.UpdateMethodResponse
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateMethodResponse.UpdateMethodResponse
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateMethodResponse.UpdateMethodResponse
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateMethodResponse.UpdateMethodResponse
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateMethodResponse.UpdateMethodResponse
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateMethodResponse.UpdateMethodResponse
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateMethodResponse.UpdateMethodResponse


-- | Changes information about a model.
module Amazonka.APIGateway.UpdateModel

-- | Request to update an existing model in an existing RestApi resource.
--   
--   <i>See:</i> <a>newUpdateModel</a> smart constructor.
data UpdateModel
UpdateModel' :: Maybe [PatchOperation] -> Text -> Text -> UpdateModel

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateModel'] :: UpdateModel -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateModel'] :: UpdateModel -> Text

-- | <ul>
--   <li><i>Required</i> The name of the model to update.</li>
--   </ul>
[$sel:modelName:UpdateModel'] :: UpdateModel -> Text

-- | Create a value of <a>UpdateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateModel'</a>,
--   <a>updateModel_patchOperations</a> - A list of update operations to be
--   applied to the specified resource and in the order specified in this
--   list.
--   
--   <a>$sel:restApiId:UpdateModel'</a>, <a>updateModel_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:modelName:UpdateModel'</a>, <a>updateModel_modelName</a> -
--   [Required] The name of the model to update.
newUpdateModel :: Text -> Text -> UpdateModel

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateModel_patchOperations :: Lens' UpdateModel (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateModel_restApiId :: Lens' UpdateModel Text

-- | <ul>
--   <li><i>Required</i> The name of the model to update.</li>
--   </ul>
updateModel_modelName :: Lens' UpdateModel Text

-- | Represents the data structure of a method's request or response
--   payload.
--   
--   A request model defines the data structure of the client-supplied
--   request payload. A response model defines the data structure of the
--   response payload returned by the back end. Although not required,
--   models are useful for mapping payloads between the front end and back
--   end.
--   
--   A model is used for generating an API's SDK, validating the input
--   request body, and creating a skeletal mapping template.
--   
--   Method, MethodResponse, <a>Models and Mappings</a>
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Model

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
[$sel:schema:Model'] :: Model -> Maybe Text

-- | The name of the model. Must be an alphanumeric string.
[$sel:name:Model'] :: Model -> Maybe Text

-- | The identifier for the model resource.
[$sel:id:Model'] :: Model -> Maybe Text

-- | The description of the model.
[$sel:description:Model'] :: Model -> Maybe Text

-- | The content-type for the model.
[$sel:contentType:Model'] :: Model -> Maybe Text

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:Model'</a>, <a>model_schema</a> - The schema for the
--   model. For <tt>application/json</tt> models, this should be <a>JSON
--   schema draft 4</a> model. Do not include "\*/" characters in the
--   description of any properties because such "\*/" characters may be
--   interpreted as the closing marker for comments in some languages, such
--   as Java or JavaScript, causing the installation of your API's SDK
--   generated by API Gateway to fail.
--   
--   <a>$sel:name:Model'</a>, <a>model_name</a> - The name of the model.
--   Must be an alphanumeric string.
--   
--   <a>$sel:id:Model'</a>, <a>model_id</a> - The identifier for the model
--   resource.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The
--   description of the model.
--   
--   <a>$sel:contentType:Model'</a>, <a>model_contentType</a> - The
--   content-type for the model.
newModel :: Model

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
model_schema :: Lens' Model (Maybe Text)

-- | The name of the model. Must be an alphanumeric string.
model_name :: Lens' Model (Maybe Text)

-- | The identifier for the model resource.
model_id :: Lens' Model (Maybe Text)

-- | The description of the model.
model_description :: Lens' Model (Maybe Text)

-- | The content-type for the model.
model_contentType :: Lens' Model (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateModel.UpdateModel
instance GHC.Show.Show Amazonka.APIGateway.UpdateModel.UpdateModel
instance GHC.Read.Read Amazonka.APIGateway.UpdateModel.UpdateModel
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateModel.UpdateModel
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateModel.UpdateModel
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateModel.UpdateModel
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateModel.UpdateModel
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateModel.UpdateModel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateModel.UpdateModel
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateModel.UpdateModel
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateModel.UpdateModel


-- | Updates a RequestValidator of a given RestApi.
module Amazonka.APIGateway.UpdateRequestValidator

-- | Updates a RequestValidator of a given RestApi.
--   
--   <i>See:</i> <a>newUpdateRequestValidator</a> smart constructor.
data UpdateRequestValidator
UpdateRequestValidator' :: Maybe [PatchOperation] -> Text -> Text -> UpdateRequestValidator

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateRequestValidator'] :: UpdateRequestValidator -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateRequestValidator'] :: UpdateRequestValidator -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of RequestValidator to be
--   updated.</li>
--   </ul>
[$sel:requestValidatorId:UpdateRequestValidator'] :: UpdateRequestValidator -> Text

-- | Create a value of <a>UpdateRequestValidator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateRequestValidator'</a>,
--   <a>updateRequestValidator_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:restApiId:UpdateRequestValidator'</a>,
--   <a>updateRequestValidator_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:requestValidatorId:UpdateRequestValidator'</a>,
--   <a>updateRequestValidator_requestValidatorId</a> - [Required] The
--   identifier of RequestValidator to be updated.
newUpdateRequestValidator :: Text -> Text -> UpdateRequestValidator

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateRequestValidator_patchOperations :: Lens' UpdateRequestValidator (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateRequestValidator_restApiId :: Lens' UpdateRequestValidator Text

-- | <ul>
--   <li><i>Required</i> The identifier of RequestValidator to be
--   updated.</li>
--   </ul>
updateRequestValidator_requestValidatorId :: Lens' UpdateRequestValidator Text

-- | A set of validation rules for incoming Method requests.
--   
--   In OpenAPI, a RequestValidator of an API is defined by the
--   <a>x-amazon-apigateway-request-validators.requestValidator</a> object.
--   It the referenced using the
--   <a>x-amazon-apigateway-request-validator</a> property.
--   
--   <a>Enable Basic Request Validation in API Gateway</a>
--   
--   <i>See:</i> <a>newRequestValidator</a> smart constructor.
data RequestValidator
RequestValidator' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> RequestValidator

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
[$sel:validateRequestParameters:RequestValidator'] :: RequestValidator -> Maybe Bool

-- | The name of this RequestValidator
[$sel:name:RequestValidator'] :: RequestValidator -> Maybe Text

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
[$sel:validateRequestBody:RequestValidator'] :: RequestValidator -> Maybe Bool

-- | The identifier of this RequestValidator.
[$sel:id:RequestValidator'] :: RequestValidator -> Maybe Text

-- | Create a value of <a>RequestValidator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validateRequestParameters:RequestValidator'</a>,
--   <a>requestValidator_validateRequestParameters</a> - A Boolean flag to
--   indicate whether to validate request parameters (<tt>true</tt>) or not
--   (<tt>false</tt>).
--   
--   <a>$sel:name:RequestValidator'</a>, <a>requestValidator_name</a> - The
--   name of this RequestValidator
--   
--   <a>$sel:validateRequestBody:RequestValidator'</a>,
--   <a>requestValidator_validateRequestBody</a> - A Boolean flag to
--   indicate whether to validate a request body according to the
--   configured Model schema.
--   
--   <a>$sel:id:RequestValidator'</a>, <a>requestValidator_id</a> - The
--   identifier of this RequestValidator.
newRequestValidator :: RequestValidator

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
requestValidator_validateRequestParameters :: Lens' RequestValidator (Maybe Bool)

-- | The name of this RequestValidator
requestValidator_name :: Lens' RequestValidator (Maybe Text)

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
requestValidator_validateRequestBody :: Lens' RequestValidator (Maybe Bool)

-- | The identifier of this RequestValidator.
requestValidator_id :: Lens' RequestValidator (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateRequestValidator.UpdateRequestValidator
instance GHC.Show.Show Amazonka.APIGateway.UpdateRequestValidator.UpdateRequestValidator
instance GHC.Read.Read Amazonka.APIGateway.UpdateRequestValidator.UpdateRequestValidator
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateRequestValidator.UpdateRequestValidator
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateRequestValidator.UpdateRequestValidator
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateRequestValidator.UpdateRequestValidator
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateRequestValidator.UpdateRequestValidator
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateRequestValidator.UpdateRequestValidator
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateRequestValidator.UpdateRequestValidator
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateRequestValidator.UpdateRequestValidator
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateRequestValidator.UpdateRequestValidator


-- | Changes information about a Resource resource.
module Amazonka.APIGateway.UpdateResource

-- | Request to change information about a Resource resource.
--   
--   <i>See:</i> <a>newUpdateResource</a> smart constructor.
data UpdateResource
UpdateResource' :: Maybe [PatchOperation] -> Text -> Text -> UpdateResource

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateResource'] :: UpdateResource -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateResource'] :: UpdateResource -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Resource resource.</li>
--   </ul>
[$sel:resourceId:UpdateResource'] :: UpdateResource -> Text

-- | Create a value of <a>UpdateResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateResource'</a>,
--   <a>updateResource_patchOperations</a> - A list of update operations to
--   be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:restApiId:UpdateResource'</a>, <a>updateResource_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:UpdateResource'</a>,
--   <a>updateResource_resourceId</a> - [Required] The identifier of the
--   Resource resource.
newUpdateResource :: Text -> Text -> UpdateResource

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateResource_patchOperations :: Lens' UpdateResource (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateResource_restApiId :: Lens' UpdateResource Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Resource resource.</li>
--   </ul>
updateResource_resourceId :: Lens' UpdateResource Text

-- | Represents an API resource.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Method) -> Maybe Text -> Resource

-- | The last path segment for this resource.
[$sel:pathPart:Resource'] :: Resource -> Maybe Text

-- | The full path for this resource.
[$sel:path:Resource'] :: Resource -> Maybe Text

-- | The resource's identifier.
[$sel:id:Resource'] :: Resource -> Maybe Text

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
[$sel:resourceMethods:Resource'] :: Resource -> Maybe (HashMap Text Method)

-- | The parent resource's identifier.
[$sel:parentId:Resource'] :: Resource -> Maybe Text

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathPart:Resource'</a>, <a>resource_pathPart</a> - The last
--   path segment for this resource.
--   
--   <a>$sel:path:Resource'</a>, <a>resource_path</a> - The full path for
--   this resource.
--   
--   <a>$sel:id:Resource'</a>, <a>resource_id</a> - The resource's
--   identifier.
--   
--   <a>$sel:resourceMethods:Resource'</a>, <a>resource_resourceMethods</a>
--   - Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
--   
--   <a>$sel:parentId:Resource'</a>, <a>resource_parentId</a> - The parent
--   resource's identifier.
newResource :: Resource

-- | The last path segment for this resource.
resource_pathPart :: Lens' Resource (Maybe Text)

-- | The full path for this resource.
resource_path :: Lens' Resource (Maybe Text)

-- | The resource's identifier.
resource_id :: Lens' Resource (Maybe Text)

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
resource_resourceMethods :: Lens' Resource (Maybe (HashMap Text Method))

-- | The parent resource's identifier.
resource_parentId :: Lens' Resource (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateResource.UpdateResource
instance GHC.Show.Show Amazonka.APIGateway.UpdateResource.UpdateResource
instance GHC.Read.Read Amazonka.APIGateway.UpdateResource.UpdateResource
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateResource.UpdateResource
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateResource.UpdateResource
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateResource.UpdateResource
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateResource.UpdateResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateResource.UpdateResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateResource.UpdateResource
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateResource.UpdateResource
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateResource.UpdateResource


-- | Changes information about the specified API.
module Amazonka.APIGateway.UpdateRestApi

-- | Request to update an existing RestApi resource in your collection.
--   
--   <i>See:</i> <a>newUpdateRestApi</a> smart constructor.
data UpdateRestApi
UpdateRestApi' :: Maybe [PatchOperation] -> Text -> UpdateRestApi

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateRestApi'] :: UpdateRestApi -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateRestApi'] :: UpdateRestApi -> Text

-- | Create a value of <a>UpdateRestApi</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateRestApi'</a>,
--   <a>updateRestApi_patchOperations</a> - A list of update operations to
--   be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:restApiId:UpdateRestApi'</a>, <a>updateRestApi_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
newUpdateRestApi :: Text -> UpdateRestApi

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateRestApi_patchOperations :: Lens' UpdateRestApi (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateRestApi_restApiId :: Lens' UpdateRestApi Text

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
[$sel:minimumCompressionSize:RestApi'] :: RestApi -> Maybe Int

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
[$sel:disableExecuteApiEndpoint:RestApi'] :: RestApi -> Maybe Bool

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
[$sel:binaryMediaTypes:RestApi'] :: RestApi -> Maybe [Text]

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
[$sel:warnings:RestApi'] :: RestApi -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:RestApi'] :: RestApi -> Maybe POSIX

-- | The API's name.
[$sel:name:RestApi'] :: RestApi -> Maybe Text

-- | A version identifier for the API.
[$sel:version:RestApi'] :: RestApi -> Maybe Text

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
[$sel:apiKeySource:RestApi'] :: RestApi -> Maybe ApiKeySourceType

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
[$sel:id:RestApi'] :: RestApi -> Maybe Text

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
[$sel:policy:RestApi'] :: RestApi -> Maybe Text

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
[$sel:endpointConfiguration:RestApi'] :: RestApi -> Maybe EndpointConfiguration

-- | The API's description.
[$sel:description:RestApi'] :: RestApi -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:RestApi'] :: RestApi -> Maybe (HashMap Text Text)

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateRestApi.UpdateRestApi
instance GHC.Show.Show Amazonka.APIGateway.UpdateRestApi.UpdateRestApi
instance GHC.Read.Read Amazonka.APIGateway.UpdateRestApi.UpdateRestApi
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateRestApi.UpdateRestApi
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateRestApi.UpdateRestApi
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateRestApi.UpdateRestApi
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateRestApi.UpdateRestApi
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateRestApi.UpdateRestApi
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateRestApi.UpdateRestApi
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateRestApi.UpdateRestApi
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateRestApi.UpdateRestApi


-- | Changes information about a Stage resource.
module Amazonka.APIGateway.UpdateStage

-- | Requests API Gateway to change information about a Stage resource.
--   
--   <i>See:</i> <a>newUpdateStage</a> smart constructor.
data UpdateStage
UpdateStage' :: Maybe [PatchOperation] -> Text -> Text -> UpdateStage

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateStage'] :: UpdateStage -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
[$sel:restApiId:UpdateStage'] :: UpdateStage -> Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage resource to change
--   information about.</li>
--   </ul>
[$sel:stageName:UpdateStage'] :: UpdateStage -> Text

-- | Create a value of <a>UpdateStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateStage'</a>,
--   <a>updateStage_patchOperations</a> - A list of update operations to be
--   applied to the specified resource and in the order specified in this
--   list.
--   
--   <a>$sel:restApiId:UpdateStage'</a>, <a>updateStage_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:UpdateStage'</a>, <a>updateStage_stageName</a> -
--   [Required] The name of the Stage resource to change information about.
newUpdateStage :: Text -> Text -> UpdateStage

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateStage_patchOperations :: Lens' UpdateStage (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateStage_restApiId :: Lens' UpdateStage Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage resource to change
--   information about.</li>
--   </ul>
updateStage_stageName :: Lens' UpdateStage Text

-- | Represents a unique identifier for a version of a deployed RestApi
--   that is callable by users.
--   
--   <a>Deploy an API</a>
--   
--   <i>See:</i> <a>newStage</a> smart constructor.
data Stage
Stage' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe AccessLogSettings -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe CacheClusterStatus -> Maybe (HashMap Text MethodSetting) -> Maybe POSIX -> Maybe CacheClusterSize -> Maybe Text -> Maybe CanarySettings -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Stage

-- | The identifier of the Deployment that the stage points to.
[$sel:deploymentId:Stage'] :: Stage -> Maybe Text

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
[$sel:variables:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | Settings for logging access in this stage.
[$sel:accessLogSettings:Stage'] :: Stage -> Maybe AccessLogSettings

-- | The version of the associated API documentation.
[$sel:documentationVersion:Stage'] :: Stage -> Maybe Text

-- | The identifier of a client certificate for an API stage.
[$sel:clientCertificateId:Stage'] :: Stage -> Maybe Text

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
[$sel:tracingEnabled:Stage'] :: Stage -> Maybe Bool

-- | The timestamp when the stage was created.
[$sel:createdDate:Stage'] :: Stage -> Maybe POSIX

-- | The status of the cache cluster for the stage, if enabled.
[$sel:cacheClusterStatus:Stage'] :: Stage -> Maybe CacheClusterStatus

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
[$sel:methodSettings:Stage'] :: Stage -> Maybe (HashMap Text MethodSetting)

-- | The timestamp when the stage last updated.
[$sel:lastUpdatedDate:Stage'] :: Stage -> Maybe POSIX

-- | The size of the cache cluster for the stage, if enabled.
[$sel:cacheClusterSize:Stage'] :: Stage -> Maybe CacheClusterSize

-- | The ARN of the WebAcl associated with the Stage.
[$sel:webAclArn:Stage'] :: Stage -> Maybe Text

-- | Settings for the canary deployment in this stage.
[$sel:canarySettings:Stage'] :: Stage -> Maybe CanarySettings

-- | Specifies whether a cache cluster is enabled for the stage.
[$sel:cacheClusterEnabled:Stage'] :: Stage -> Maybe Bool

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
[$sel:stageName:Stage'] :: Stage -> Maybe Text

-- | The stage's description.
[$sel:description:Stage'] :: Stage -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | Create a value of <a>Stage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Stage'</a>, <a>stage_deploymentId</a> - The
--   identifier of the Deployment that the stage points to.
--   
--   <a>$sel:variables:Stage'</a>, <a>stage_variables</a> - A map that
--   defines the stage variables for a Stage resource. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:accessLogSettings:Stage'</a>, <a>stage_accessLogSettings</a> -
--   Settings for logging access in this stage.
--   
--   <a>$sel:documentationVersion:Stage'</a>,
--   <a>stage_documentationVersion</a> - The version of the associated API
--   documentation.
--   
--   <a>$sel:clientCertificateId:Stage'</a>,
--   <a>stage_clientCertificateId</a> - The identifier of a client
--   certificate for an API stage.
--   
--   <a>$sel:tracingEnabled:Stage'</a>, <a>stage_tracingEnabled</a> -
--   Specifies whether active tracing with X-ray is enabled for the Stage.
--   
--   <a>$sel:createdDate:Stage'</a>, <a>stage_createdDate</a> - The
--   timestamp when the stage was created.
--   
--   <a>$sel:cacheClusterStatus:Stage'</a>, <a>stage_cacheClusterStatus</a>
--   - The status of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:methodSettings:Stage'</a>, <a>stage_methodSettings</a> - A map
--   that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
--   
--   <a>$sel:lastUpdatedDate:Stage'</a>, <a>stage_lastUpdatedDate</a> - The
--   timestamp when the stage last updated.
--   
--   <a>$sel:cacheClusterSize:Stage'</a>, <a>stage_cacheClusterSize</a> -
--   The size of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:webAclArn:Stage'</a>, <a>stage_webAclArn</a> - The ARN of the
--   WebAcl associated with the Stage.
--   
--   <a>$sel:canarySettings:Stage'</a>, <a>stage_canarySettings</a> -
--   Settings for the canary deployment in this stage.
--   
--   <a>$sel:cacheClusterEnabled:Stage'</a>,
--   <a>stage_cacheClusterEnabled</a> - Specifies whether a cache cluster
--   is enabled for the stage.
--   
--   <a>$sel:stageName:Stage'</a>, <a>stage_stageName</a> - The name of the
--   stage is the first path segment in the Uniform Resource Identifier
--   (URI) of a call to API Gateway. Stage names can only contain
--   alphanumeric characters, hyphens, and underscores. Maximum length is
--   128 characters.
--   
--   <a>$sel:description:Stage'</a>, <a>stage_description</a> - The stage's
--   description.
--   
--   <a>$sel:tags:Stage'</a>, <a>stage_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newStage :: Stage

-- | The identifier of the Deployment that the stage points to.
stage_deploymentId :: Lens' Stage (Maybe Text)

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
stage_variables :: Lens' Stage (Maybe (HashMap Text Text))

-- | Settings for logging access in this stage.
stage_accessLogSettings :: Lens' Stage (Maybe AccessLogSettings)

-- | The version of the associated API documentation.
stage_documentationVersion :: Lens' Stage (Maybe Text)

-- | The identifier of a client certificate for an API stage.
stage_clientCertificateId :: Lens' Stage (Maybe Text)

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
stage_tracingEnabled :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was created.
stage_createdDate :: Lens' Stage (Maybe UTCTime)

-- | The status of the cache cluster for the stage, if enabled.
stage_cacheClusterStatus :: Lens' Stage (Maybe CacheClusterStatus)

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
stage_methodSettings :: Lens' Stage (Maybe (HashMap Text MethodSetting))

-- | The timestamp when the stage last updated.
stage_lastUpdatedDate :: Lens' Stage (Maybe UTCTime)

-- | The size of the cache cluster for the stage, if enabled.
stage_cacheClusterSize :: Lens' Stage (Maybe CacheClusterSize)

-- | The ARN of the WebAcl associated with the Stage.
stage_webAclArn :: Lens' Stage (Maybe Text)

-- | Settings for the canary deployment in this stage.
stage_canarySettings :: Lens' Stage (Maybe CanarySettings)

-- | Specifies whether a cache cluster is enabled for the stage.
stage_cacheClusterEnabled :: Lens' Stage (Maybe Bool)

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
stage_stageName :: Lens' Stage (Maybe Text)

-- | The stage's description.
stage_description :: Lens' Stage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
stage_tags :: Lens' Stage (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateStage.UpdateStage
instance GHC.Show.Show Amazonka.APIGateway.UpdateStage.UpdateStage
instance GHC.Read.Read Amazonka.APIGateway.UpdateStage.UpdateStage
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateStage.UpdateStage
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateStage.UpdateStage
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateStage.UpdateStage
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateStage.UpdateStage
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateStage.UpdateStage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateStage.UpdateStage
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateStage.UpdateStage
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateStage.UpdateStage


-- | Grants a temporary extension to the remaining quota of a usage plan
--   associated with a specified API key.
module Amazonka.APIGateway.UpdateUsage

-- | The PATCH request to grant a temporary extension to the remaining
--   quota of a usage plan associated with a specified API key.
--   
--   <i>See:</i> <a>newUpdateUsage</a> smart constructor.
data UpdateUsage
UpdateUsage' :: Maybe [PatchOperation] -> Text -> Text -> UpdateUsage

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateUsage'] :: UpdateUsage -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The Id of the usage plan associated with the usage
--   data.</li>
--   </ul>
[$sel:usagePlanId:UpdateUsage'] :: UpdateUsage -> Text

-- | <ul>
--   <li><i>Required</i> The identifier of the API key associated with the
--   usage plan in which a temporary extension is granted to the remaining
--   quota.</li>
--   </ul>
[$sel:keyId:UpdateUsage'] :: UpdateUsage -> Text

-- | Create a value of <a>UpdateUsage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateUsage'</a>,
--   <a>updateUsage_patchOperations</a> - A list of update operations to be
--   applied to the specified resource and in the order specified in this
--   list.
--   
--   <a>$sel:usagePlanId:UpdateUsage'</a>, <a>updateUsage_usagePlanId</a> -
--   [Required] The Id of the usage plan associated with the usage data.
--   
--   <a>$sel:keyId:UpdateUsage'</a>, <a>updateUsage_keyId</a> - [Required]
--   The identifier of the API key associated with the usage plan in which
--   a temporary extension is granted to the remaining quota.
newUpdateUsage :: Text -> Text -> UpdateUsage

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateUsage_patchOperations :: Lens' UpdateUsage (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The Id of the usage plan associated with the usage
--   data.</li>
--   </ul>
updateUsage_usagePlanId :: Lens' UpdateUsage Text

-- | <ul>
--   <li><i>Required</i> The identifier of the API key associated with the
--   usage plan in which a temporary extension is granted to the remaining
--   quota.</li>
--   </ul>
updateUsage_keyId :: Lens' UpdateUsage Text

-- | Represents the usage data of a usage plan.
--   
--   <a>Create and Use Usage Plans</a>, <a>Manage Usage in a Usage Plan</a>
--   
--   <i>See:</i> <a>newUsage</a> smart constructor.
data Usage
Usage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text [[Integer]]) -> Maybe Text -> Maybe Text -> Usage

-- | The plan Id associated with this usage data.
[$sel:usagePlanId:Usage'] :: Usage -> Maybe Text

-- | The ending date of the usage data.
[$sel:endDate:Usage'] :: Usage -> Maybe Text

-- | The usage data, as daily logs of used and remaining quotas, over the
--   specified time interval indexed over the API keys in a usage plan. For
--   example, <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
--   [100, 10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value
--   and the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
[$sel:items:Usage'] :: Usage -> Maybe (HashMap Text [[Integer]])

-- | The starting date of the usage data.
[$sel:startDate:Usage'] :: Usage -> Maybe Text
[$sel:position:Usage'] :: Usage -> Maybe Text

-- | Create a value of <a>Usage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:Usage'</a>, <a>usage_usagePlanId</a> - The plan Id
--   associated with this usage data.
--   
--   <a>$sel:endDate:Usage'</a>, <a>usage_endDate</a> - The ending date of
--   the usage data.
--   
--   <a>$sel:items:Usage'</a>, <a>usage_items</a> - The usage data, as
--   daily logs of used and remaining quotas, over the specified time
--   interval indexed over the API keys in a usage plan. For example,
--   <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90], [100,
--   10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value and
--   the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
--   
--   <a>$sel:startDate:Usage'</a>, <a>usage_startDate</a> - The starting
--   date of the usage data.
--   
--   <a>$sel:position:Usage'</a>, <a>usage_position</a> - Undocumented
--   member.
newUsage :: Usage

-- | The plan Id associated with this usage data.
usage_usagePlanId :: Lens' Usage (Maybe Text)

-- | The ending date of the usage data.
usage_endDate :: Lens' Usage (Maybe Text)

-- | The usage data, as daily logs of used and remaining quotas, over the
--   specified time interval indexed over the API keys in a usage plan. For
--   example, <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
--   [100, 10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value
--   and the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
usage_items :: Lens' Usage (Maybe (HashMap Text [[Integer]]))

-- | The starting date of the usage data.
usage_startDate :: Lens' Usage (Maybe Text)

-- | Undocumented member.
usage_position :: Lens' Usage (Maybe Text)
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateUsage.UpdateUsage
instance GHC.Show.Show Amazonka.APIGateway.UpdateUsage.UpdateUsage
instance GHC.Read.Read Amazonka.APIGateway.UpdateUsage.UpdateUsage
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateUsage.UpdateUsage
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateUsage.UpdateUsage
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateUsage.UpdateUsage
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateUsage.UpdateUsage
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateUsage.UpdateUsage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateUsage.UpdateUsage
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateUsage.UpdateUsage
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateUsage.UpdateUsage


-- | Updates a usage plan of a given plan Id.
module Amazonka.APIGateway.UpdateUsagePlan

-- | The PATCH request to update a usage plan of a given plan Id.
--   
--   <i>See:</i> <a>newUpdateUsagePlan</a> smart constructor.
data UpdateUsagePlan
UpdateUsagePlan' :: Maybe [PatchOperation] -> Text -> UpdateUsagePlan

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateUsagePlan'] :: UpdateUsagePlan -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The Id of the to-be-updated usage plan.</li>
--   </ul>
[$sel:usagePlanId:UpdateUsagePlan'] :: UpdateUsagePlan -> Text

-- | Create a value of <a>UpdateUsagePlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateUsagePlan'</a>,
--   <a>updateUsagePlan_patchOperations</a> - A list of update operations
--   to be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:usagePlanId:UpdateUsagePlan'</a>,
--   <a>updateUsagePlan_usagePlanId</a> - [Required] The Id of the
--   to-be-updated usage plan.
newUpdateUsagePlan :: Text -> UpdateUsagePlan

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateUsagePlan_patchOperations :: Lens' UpdateUsagePlan (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The Id of the to-be-updated usage plan.</li>
--   </ul>
updateUsagePlan_usagePlanId :: Lens' UpdateUsagePlan Text

-- | Represents a usage plan than can specify who can assess associated API
--   stages with specified request limits and quotas.
--   
--   In a usage plan, you associate an API by specifying the API's Id and a
--   stage name of the specified API. You add plan customers by adding API
--   keys to the plan.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlan</a> smart constructor.
data UsagePlan
UsagePlan' :: Maybe [ApiStage] -> Maybe Text -> Maybe Text -> Maybe ThrottleSettings -> Maybe QuotaSettings -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> UsagePlan

-- | The associated API stages of a usage plan.
[$sel:apiStages:UsagePlan'] :: UsagePlan -> Maybe [ApiStage]

-- | The name of a usage plan.
[$sel:name:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The identifier of a UsagePlan resource.
[$sel:id:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The request throttle limits of a usage plan.
[$sel:throttle:UsagePlan'] :: UsagePlan -> Maybe ThrottleSettings

-- | The maximum number of permitted requests per a given unit time
--   interval.
[$sel:quota:UsagePlan'] :: UsagePlan -> Maybe QuotaSettings

-- | The description of a usage plan.
[$sel:description:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
[$sel:productCode:UsagePlan'] :: UsagePlan -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:UsagePlan'] :: UsagePlan -> Maybe (HashMap Text Text)

-- | Create a value of <a>UsagePlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiStages:UsagePlan'</a>, <a>usagePlan_apiStages</a> - The
--   associated API stages of a usage plan.
--   
--   <a>$sel:name:UsagePlan'</a>, <a>usagePlan_name</a> - The name of a
--   usage plan.
--   
--   <a>$sel:id:UsagePlan'</a>, <a>usagePlan_id</a> - The identifier of a
--   UsagePlan resource.
--   
--   <a>$sel:throttle:UsagePlan'</a>, <a>usagePlan_throttle</a> - The
--   request throttle limits of a usage plan.
--   
--   <a>$sel:quota:UsagePlan'</a>, <a>usagePlan_quota</a> - The maximum
--   number of permitted requests per a given unit time interval.
--   
--   <a>$sel:description:UsagePlan'</a>, <a>usagePlan_description</a> - The
--   description of a usage plan.
--   
--   <a>$sel:productCode:UsagePlan'</a>, <a>usagePlan_productCode</a> - The
--   AWS Markeplace product identifier to associate with the usage plan as
--   a SaaS product on AWS Marketplace.
--   
--   <a>$sel:tags:UsagePlan'</a>, <a>usagePlan_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newUsagePlan :: UsagePlan

-- | The associated API stages of a usage plan.
usagePlan_apiStages :: Lens' UsagePlan (Maybe [ApiStage])

-- | The name of a usage plan.
usagePlan_name :: Lens' UsagePlan (Maybe Text)

-- | The identifier of a UsagePlan resource.
usagePlan_id :: Lens' UsagePlan (Maybe Text)

-- | The request throttle limits of a usage plan.
usagePlan_throttle :: Lens' UsagePlan (Maybe ThrottleSettings)

-- | The maximum number of permitted requests per a given unit time
--   interval.
usagePlan_quota :: Lens' UsagePlan (Maybe QuotaSettings)

-- | The description of a usage plan.
usagePlan_description :: Lens' UsagePlan (Maybe Text)

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
usagePlan_productCode :: Lens' UsagePlan (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
usagePlan_tags :: Lens' UsagePlan (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateUsagePlan.UpdateUsagePlan
instance GHC.Show.Show Amazonka.APIGateway.UpdateUsagePlan.UpdateUsagePlan
instance GHC.Read.Read Amazonka.APIGateway.UpdateUsagePlan.UpdateUsagePlan
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateUsagePlan.UpdateUsagePlan
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateUsagePlan.UpdateUsagePlan
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateUsagePlan.UpdateUsagePlan
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateUsagePlan.UpdateUsagePlan
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateUsagePlan.UpdateUsagePlan
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateUsagePlan.UpdateUsagePlan
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateUsagePlan.UpdateUsagePlan
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateUsagePlan.UpdateUsagePlan


-- | Updates an existing VpcLink of a specified identifier.
module Amazonka.APIGateway.UpdateVpcLink

-- | Updates an existing VpcLink of a specified identifier.
--   
--   <i>See:</i> <a>newUpdateVpcLink</a> smart constructor.
data UpdateVpcLink
UpdateVpcLink' :: Maybe [PatchOperation] -> Text -> UpdateVpcLink

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
[$sel:patchOperations:UpdateVpcLink'] :: UpdateVpcLink -> Maybe [PatchOperation]

-- | <ul>
--   <li><i>Required</i> The identifier of the VpcLink. It is used in an
--   Integration to reference this VpcLink.</li>
--   </ul>
[$sel:vpcLinkId:UpdateVpcLink'] :: UpdateVpcLink -> Text

-- | Create a value of <a>UpdateVpcLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateVpcLink'</a>,
--   <a>updateVpcLink_patchOperations</a> - A list of update operations to
--   be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:vpcLinkId:UpdateVpcLink'</a>, <a>updateVpcLink_vpcLinkId</a> -
--   [Required] The identifier of the VpcLink. It is used in an Integration
--   to reference this VpcLink.
newUpdateVpcLink :: Text -> UpdateVpcLink

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateVpcLink_patchOperations :: Lens' UpdateVpcLink (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The identifier of the VpcLink. It is used in an
--   Integration to reference this VpcLink.</li>
--   </ul>
updateVpcLink_vpcLinkId :: Lens' UpdateVpcLink Text

-- | An API Gateway VPC link for a RestApi to access resources in an Amazon
--   Virtual Private Cloud (VPC).
--   
--   To enable access to a resource in an Amazon Virtual Private Cloud
--   through Amazon API Gateway, you, as an API developer, create a VpcLink
--   resource targeted for one or more network load balancers of the VPC
--   and then integrate an API method with a private integration that uses
--   the VpcLink. The private integration has an integration type of
--   <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> and has a connection type of
--   <tt>VPC_LINK</tt>. The integration uses the <tt>connectionId</tt>
--   property to identify the VpcLink used.
--   
--   <i>See:</i> <a>newVpcLink</a> smart constructor.
data VpcLink
VpcLink' :: Maybe VpcLinkStatus -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> VpcLink

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
[$sel:status:VpcLink'] :: VpcLink -> Maybe VpcLinkStatus

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
[$sel:targetArns:VpcLink'] :: VpcLink -> Maybe [Text]

-- | The name used to label and identify the VPC link.
[$sel:name:VpcLink'] :: VpcLink -> Maybe Text

-- | A description about the VPC link status.
[$sel:statusMessage:VpcLink'] :: VpcLink -> Maybe Text

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
[$sel:id:VpcLink'] :: VpcLink -> Maybe Text

-- | The description of the VPC link.
[$sel:description:VpcLink'] :: VpcLink -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:VpcLink'] :: VpcLink -> Maybe (HashMap Text Text)

-- | Create a value of <a>VpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VpcLink'</a>, <a>vpcLink_status</a> - The status of the
--   VPC link. The valid values are <tt>AVAILABLE</tt>, <tt>PENDING</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an API will wait if
--   the status is <tt>PENDING</tt> and will fail if the status is
--   <tt>DELETING</tt>.
--   
--   <a>$sel:targetArns:VpcLink'</a>, <a>vpcLink_targetArns</a> - The ARN
--   of the network load balancer of the VPC targeted by the VPC link. The
--   network load balancer must be owned by the same AWS account of the API
--   owner.
--   
--   <a>$sel:name:VpcLink'</a>, <a>vpcLink_name</a> - The name used to
--   label and identify the VPC link.
--   
--   <a>$sel:statusMessage:VpcLink'</a>, <a>vpcLink_statusMessage</a> - A
--   description about the VPC link status.
--   
--   <a>$sel:id:VpcLink'</a>, <a>vpcLink_id</a> - The identifier of the
--   VpcLink. It is used in an Integration to reference this VpcLink.
--   
--   <a>$sel:description:VpcLink'</a>, <a>vpcLink_description</a> - The
--   description of the VPC link.
--   
--   <a>$sel:tags:VpcLink'</a>, <a>vpcLink_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newVpcLink :: VpcLink

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
vpcLink_status :: Lens' VpcLink (Maybe VpcLinkStatus)

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
vpcLink_targetArns :: Lens' VpcLink (Maybe [Text])

-- | The name used to label and identify the VPC link.
vpcLink_name :: Lens' VpcLink (Maybe Text)

-- | A description about the VPC link status.
vpcLink_statusMessage :: Lens' VpcLink (Maybe Text)

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
vpcLink_id :: Lens' VpcLink (Maybe Text)

-- | The description of the VPC link.
vpcLink_description :: Lens' VpcLink (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
vpcLink_tags :: Lens' VpcLink (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.APIGateway.UpdateVpcLink.UpdateVpcLink
instance GHC.Show.Show Amazonka.APIGateway.UpdateVpcLink.UpdateVpcLink
instance GHC.Read.Read Amazonka.APIGateway.UpdateVpcLink.UpdateVpcLink
instance GHC.Classes.Eq Amazonka.APIGateway.UpdateVpcLink.UpdateVpcLink
instance Amazonka.Types.AWSRequest Amazonka.APIGateway.UpdateVpcLink.UpdateVpcLink
instance Data.Hashable.Class.Hashable Amazonka.APIGateway.UpdateVpcLink.UpdateVpcLink
instance Control.DeepSeq.NFData Amazonka.APIGateway.UpdateVpcLink.UpdateVpcLink
instance Amazonka.Data.Headers.ToHeaders Amazonka.APIGateway.UpdateVpcLink.UpdateVpcLink
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.APIGateway.UpdateVpcLink.UpdateVpcLink
instance Amazonka.Data.Path.ToPath Amazonka.APIGateway.UpdateVpcLink.UpdateVpcLink
instance Amazonka.Data.Query.ToQuery Amazonka.APIGateway.UpdateVpcLink.UpdateVpcLink


module Amazonka.APIGateway.Lens

-- | A query parameter to retrieve the specified resources embedded in the
--   returned Resource representation in the response. This <tt>embed</tt>
--   parameter value is a list of comma-separated strings. Currently, the
--   request supports only retrieval of the embedded Method resources this
--   way. The query parameter value must be a single-valued list and
--   contain the <tt>"methods"</tt> string. For example, <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>.
getResource_embed :: Lens' GetResource (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getResource_restApiId :: Lens' GetResource Text

-- | <ul>
--   <li><i>Required</i> The identifier for the Resource resource.</li>
--   </ul>
getResource_resourceId :: Lens' GetResource Text

-- | The last path segment for this resource.
resource_pathPart :: Lens' Resource (Maybe Text)

-- | The full path for this resource.
resource_path :: Lens' Resource (Maybe Text)

-- | The resource's identifier.
resource_id :: Lens' Resource (Maybe Text)

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
resource_resourceMethods :: Lens' Resource (Maybe (HashMap Text Method))

-- | The parent resource's identifier.
resource_parentId :: Lens' Resource (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getDeployments_limit :: Lens' GetDeployments (Maybe Int)

-- | The current pagination position in the paged result set.
getDeployments_position :: Lens' GetDeployments (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDeployments_restApiId :: Lens' GetDeployments Text

-- | The current page of elements from this collection.
getDeploymentsResponse_items :: Lens' GetDeploymentsResponse (Maybe [Deployment])

-- | Undocumented member.
getDeploymentsResponse_position :: Lens' GetDeploymentsResponse (Maybe Text)

-- | The response's http status code.
getDeploymentsResponse_httpStatus :: Lens' GetDeploymentsResponse Int

-- | A query parameter to retrieve the specified embedded resources of the
--   returned Deployment resource in the response. In a REST API call, this
--   <tt>embed</tt> parameter value is a list of comma-separated strings,
--   as in <tt>GET
--   /restapis/{restapi_id}/deployments/{deployment_id}?embed=var1,var2</tt>.
--   The SDK and other platform-dependent libraries might use a different
--   format for the list. Currently, this request supports only retrieval
--   of the embedded API summary this way. Hence, the parameter value must
--   be a single-valued list containing only the <tt>"apisummary"</tt>
--   string. For example, <tt>GET
--   /restapis/{restapi_id}/deployments/{deployment_id}?embed=apisummary</tt>.
getDeployment_embed :: Lens' GetDeployment (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDeployment_restApiId :: Lens' GetDeployment Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Deployment resource to get
--   information about.</li>
--   </ul>
getDeployment_deploymentId :: Lens' GetDeployment Text

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
deployment_apiSummary :: Lens' Deployment (Maybe (HashMap Text (HashMap Text MethodSnapshot)))

-- | The date and time that the deployment resource was created.
deployment_createdDate :: Lens' Deployment (Maybe UTCTime)

-- | The identifier for the deployment resource.
deployment_id :: Lens' Deployment (Maybe Text)

-- | The description for the deployment resource.
deployment_description :: Lens' Deployment (Maybe Text)

-- | (Not currently supported) The maximum number of returned results per
--   page. The default value is 25 and the maximum value is 500.
getTags_limit :: Lens' GetTags (Maybe Int)

-- | (Not currently supported) The current pagination position in the paged
--   result set.
getTags_position :: Lens' GetTags (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The ARN of a resource that can be tagged.</li>
--   </ul>
getTags_resourceArn :: Lens' GetTags Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
getTagsResponse_tags :: Lens' GetTagsResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getTagsResponse_httpStatus :: Lens' GetTagsResponse Int

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteGatewayResponse_restApiId :: Lens' DeleteGatewayResponse Text

-- | <ul>
--   <li><i>Required</i></li>
--   </ul>
--   
--   The response type of the associated GatewayResponse.
deleteGatewayResponse_responseType :: Lens' DeleteGatewayResponse GatewayResponseType

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateGatewayResponse_patchOperations :: Lens' UpdateGatewayResponse (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateGatewayResponse_restApiId :: Lens' UpdateGatewayResponse Text

-- | <ul>
--   <li><i>Required</i></li>
--   </ul>
--   
--   The response type of the associated GatewayResponse.
updateGatewayResponse_responseType :: Lens' UpdateGatewayResponse GatewayResponseType

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
gatewayResponse_defaultResponse :: Lens' GatewayResponse (Maybe Bool)

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
gatewayResponse_responseTemplates :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | The response type of the associated GatewayResponse.
gatewayResponse_responseType :: Lens' GatewayResponse (Maybe GatewayResponseType)

-- | The HTTP status code for this GatewayResponse.
gatewayResponse_statusCode :: Lens' GatewayResponse (Maybe Text)

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
gatewayResponse_responseParameters :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | The associated API stages of the usage plan.
createUsagePlan_apiStages :: Lens' CreateUsagePlan (Maybe [ApiStage])

-- | The throttling limits of the usage plan.
createUsagePlan_throttle :: Lens' CreateUsagePlan (Maybe ThrottleSettings)

-- | The quota of the usage plan.
createUsagePlan_quota :: Lens' CreateUsagePlan (Maybe QuotaSettings)

-- | The description of the usage plan.
createUsagePlan_description :: Lens' CreateUsagePlan (Maybe Text)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
createUsagePlan_tags :: Lens' CreateUsagePlan (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The name of the usage plan.</li>
--   </ul>
createUsagePlan_name :: Lens' CreateUsagePlan Text

-- | The associated API stages of a usage plan.
usagePlan_apiStages :: Lens' UsagePlan (Maybe [ApiStage])

-- | The name of a usage plan.
usagePlan_name :: Lens' UsagePlan (Maybe Text)

-- | The identifier of a UsagePlan resource.
usagePlan_id :: Lens' UsagePlan (Maybe Text)

-- | The request throttle limits of a usage plan.
usagePlan_throttle :: Lens' UsagePlan (Maybe ThrottleSettings)

-- | The maximum number of permitted requests per a given unit time
--   interval.
usagePlan_quota :: Lens' UsagePlan (Maybe QuotaSettings)

-- | The description of a usage plan.
usagePlan_description :: Lens' UsagePlan (Maybe Text)

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
usagePlan_productCode :: Lens' UsagePlan (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
usagePlan_tags :: Lens' UsagePlan (Maybe (HashMap Text Text))

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getDomainNames_limit :: Lens' GetDomainNames (Maybe Int)

-- | The current pagination position in the paged result set.
getDomainNames_position :: Lens' GetDomainNames (Maybe Text)

-- | The current page of elements from this collection.
getDomainNamesResponse_items :: Lens' GetDomainNamesResponse (Maybe [DomainName])

-- | Undocumented member.
getDomainNamesResponse_position :: Lens' GetDomainNamesResponse (Maybe Text)

-- | The response's http status code.
getDomainNamesResponse_httpStatus :: Lens' GetDomainNamesResponse Int

-- | <ul>
--   <li><i>Required</i> The identifier of the ClientCertificate resource
--   to be described.</li>
--   </ul>
getClientCertificate_clientCertificateId :: Lens' GetClientCertificate Text

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
clientCertificate_pemEncodedCertificate :: Lens' ClientCertificate (Maybe Text)

-- | The identifier of the client certificate.
clientCertificate_clientCertificateId :: Lens' ClientCertificate (Maybe Text)

-- | The timestamp when the client certificate was created.
clientCertificate_createdDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The timestamp when the client certificate will expire.
clientCertificate_expirationDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The description of the client certificate.
clientCertificate_description :: Lens' ClientCertificate (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
clientCertificate_tags :: Lens' ClientCertificate (Maybe (HashMap Text Text))

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
putGatewayResponse_responseTemplates :: Lens' PutGatewayResponse (Maybe (HashMap Text Text))

-- | The HTTP status code of the GatewayResponse.
putGatewayResponse_statusCode :: Lens' PutGatewayResponse (Maybe Text)

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
putGatewayResponse_responseParameters :: Lens' PutGatewayResponse (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
putGatewayResponse_restApiId :: Lens' PutGatewayResponse Text

-- | <ul>
--   <li><i>Required</i></li>
--   </ul>
--   
--   The response type of the associated GatewayResponse.
putGatewayResponse_responseType :: Lens' PutGatewayResponse GatewayResponseType

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
gatewayResponse_defaultResponse :: Lens' GatewayResponse (Maybe Bool)

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
gatewayResponse_responseTemplates :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | The response type of the associated GatewayResponse.
gatewayResponse_responseType :: Lens' GatewayResponse (Maybe GatewayResponseType)

-- | The HTTP status code for this GatewayResponse.
gatewayResponse_statusCode :: Lens' GatewayResponse (Maybe Text)

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
gatewayResponse_responseParameters :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The identifier of the queried SdkType
--   instance.</li>
--   </ul>
getSdkType_id :: Lens' GetSdkType Text

-- | The user-friendly name of an SdkType instance.
sdkType_friendlyName :: Lens' SdkType (Maybe Text)

-- | A list of configuration properties of an SdkType.
sdkType_configurationProperties :: Lens' SdkType (Maybe [SdkConfigurationProperty])

-- | The identifier of an SdkType instance.
sdkType_id :: Lens' SdkType (Maybe Text)

-- | The description of an SdkType.
sdkType_description :: Lens' SdkType (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getMethodResponse_restApiId :: Lens' GetMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the MethodResponse
--   resource.</li>
--   </ul>
getMethodResponse_resourceId :: Lens' GetMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
getMethodResponse_httpMethod :: Lens' GetMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The status code for the MethodResponse
--   resource.</li>
--   </ul>
getMethodResponse_statusCode :: Lens' GetMethodResponse Text

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
methodResponse_responseModels :: Lens' MethodResponse (Maybe (HashMap Text Text))

-- | The method response's status code.
methodResponse_statusCode :: Lens' MethodResponse (Maybe Text)

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
methodResponse_responseParameters :: Lens' MethodResponse (Maybe (HashMap Text Bool))

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getModels_limit :: Lens' GetModels (Maybe Int)

-- | The current pagination position in the paged result set.
getModels_position :: Lens' GetModels (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getModels_restApiId :: Lens' GetModels Text

-- | The current page of elements from this collection.
getModelsResponse_items :: Lens' GetModelsResponse (Maybe [Model])

-- | Undocumented member.
getModelsResponse_position :: Lens' GetModelsResponse (Maybe Text)

-- | The response's http status code.
getModelsResponse_httpStatus :: Lens' GetModelsResponse Int

-- | <ul>
--   <li><i>Required</i> The domain name of the BasePathMapping resource to
--   be described.</li>
--   </ul>
getBasePathMapping_domainName :: Lens' GetBasePathMapping Text

-- | <ul>
--   <li><i>Required</i> The base path name that callers of the API must
--   provide as part of the URL after the domain name. This value must be
--   unique for all of the mappings across a single API. Specify '(none)'
--   if you do not want callers to specify any base path name after the
--   domain name.</li>
--   </ul>
getBasePathMapping_basePath :: Lens' GetBasePathMapping Text

-- | The name of the associated stage.
basePathMapping_stage :: Lens' BasePathMapping (Maybe Text)

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
basePathMapping_basePath :: Lens' BasePathMapping (Maybe Text)

-- | The string identifier of the associated RestApi.
basePathMapping_restApiId :: Lens' BasePathMapping (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getRequestValidators_limit :: Lens' GetRequestValidators (Maybe Int)

-- | The current pagination position in the paged result set.
getRequestValidators_position :: Lens' GetRequestValidators (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getRequestValidators_restApiId :: Lens' GetRequestValidators Text

-- | The current page of elements from this collection.
getRequestValidatorsResponse_items :: Lens' GetRequestValidatorsResponse (Maybe [RequestValidator])

-- | Undocumented member.
getRequestValidatorsResponse_position :: Lens' GetRequestValidatorsResponse (Maybe Text)

-- | The response's http status code.
getRequestValidatorsResponse_httpStatus :: Lens' GetRequestValidatorsResponse Int

-- | Specifies the Model resources used for the response's content type.
--   Response models are represented as a key/value map, with a content
--   type as the key and a Model name as the value.
putMethodResponse_responseModels :: Lens' PutMethodResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header name and the associated value is a Boolean flag
--   indicating whether the method response parameter is required or not.
--   The method response header names must match the pattern of
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. The response parameter names defined here are
--   available in the integration response to be mapped from an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
putMethodResponse_responseParameters :: Lens' PutMethodResponse (Maybe (HashMap Text Bool))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
putMethodResponse_restApiId :: Lens' PutMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the Method
--   resource.</li>
--   </ul>
putMethodResponse_resourceId :: Lens' PutMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
putMethodResponse_httpMethod :: Lens' PutMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The method response's status code.</li>
--   </ul>
putMethodResponse_statusCode :: Lens' PutMethodResponse Text

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
methodResponse_responseModels :: Lens' MethodResponse (Maybe (HashMap Text Text))

-- | The method response's status code.
methodResponse_statusCode :: Lens' MethodResponse (Maybe Text)

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
methodResponse_responseParameters :: Lens' MethodResponse (Maybe (HashMap Text Bool))

-- | A query parameter to indicate whether to rollback the API creation
--   (<tt>true</tt>) or not (<tt>false</tt>) when a warning is encountered.
--   The default value is <tt>false</tt>.
importRestApi_failOnWarnings :: Lens' ImportRestApi (Maybe Bool)

-- | A key-value map of context-specific query string parameters specifying
--   the behavior of different API importing operations. The following
--   shows operation-specific parameters and their supported values.
--   
--   To exclude DocumentationParts from the import, set <tt>parameters</tt>
--   as <tt>ignore=documentation</tt>.
--   
--   To configure the endpoint type, set <tt>parameters</tt> as
--   <tt>endpointConfigurationTypes=EDGE</tt>,
--   <tt>endpointConfigurationTypes=REGIONAL</tt>, or
--   <tt>endpointConfigurationTypes=PRIVATE</tt>. The default endpoint type
--   is <tt>EDGE</tt>.
--   
--   To handle imported <tt>basepath</tt>, set <tt>parameters</tt> as
--   <tt>basepath=ignore</tt>, <tt>basepath=prepend</tt> or
--   <tt>basepath=split</tt>.
--   
--   For example, the AWS CLI command to exclude documentation from the
--   imported API is:
--   
--   <pre>
--   aws apigateway import-rest-api --parameters ignore=documentation --body 'file:///path/to/imported-api-body.json'
--   </pre>
--   
--   The AWS CLI command to set the regional endpoint on the imported API
--   is:
--   
--   <pre>
--   aws apigateway import-rest-api --parameters endpointConfigurationTypes=REGIONAL --body 'file:///path/to/imported-api-body.json'
--   </pre>
importRestApi_parameters :: Lens' ImportRestApi (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The POST request body containing external API
--   definitions. Currently, only OpenAPI definition JSON/YAML files are
--   supported. The maximum size of the API definition file is 6MB.</li>
--   </ul>
importRestApi_body :: Lens' ImportRestApi ByteString

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteMethodResponse_restApiId :: Lens' DeleteMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the MethodResponse
--   resource.</li>
--   </ul>
deleteMethodResponse_resourceId :: Lens' DeleteMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
deleteMethodResponse_httpMethod :: Lens' DeleteMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The status code identifier for the MethodResponse
--   resource.</li>
--   </ul>
deleteMethodResponse_statusCode :: Lens' DeleteMethodResponse Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateMethodResponse_patchOperations :: Lens' UpdateMethodResponse (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateMethodResponse_restApiId :: Lens' UpdateMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the MethodResponse
--   resource.</li>
--   </ul>
updateMethodResponse_resourceId :: Lens' UpdateMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
updateMethodResponse_httpMethod :: Lens' UpdateMethodResponse Text

-- | <ul>
--   <li><i>Required</i> The status code for the MethodResponse
--   resource.</li>
--   </ul>
updateMethodResponse_statusCode :: Lens' UpdateMethodResponse Text

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
methodResponse_responseModels :: Lens' MethodResponse (Maybe (HashMap Text Text))

-- | The method response's status code.
methodResponse_statusCode :: Lens' MethodResponse (Maybe Text)

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
methodResponse_responseParameters :: Lens' MethodResponse (Maybe (HashMap Text Bool))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteStage_restApiId :: Lens' DeleteStage Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage resource to delete.</li>
--   </ul>
deleteStage_stageName :: Lens' DeleteStage Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateStage_patchOperations :: Lens' UpdateStage (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateStage_restApiId :: Lens' UpdateStage Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage resource to change
--   information about.</li>
--   </ul>
updateStage_stageName :: Lens' UpdateStage Text

-- | The identifier of the Deployment that the stage points to.
stage_deploymentId :: Lens' Stage (Maybe Text)

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
stage_variables :: Lens' Stage (Maybe (HashMap Text Text))

-- | Settings for logging access in this stage.
stage_accessLogSettings :: Lens' Stage (Maybe AccessLogSettings)

-- | The version of the associated API documentation.
stage_documentationVersion :: Lens' Stage (Maybe Text)

-- | The identifier of a client certificate for an API stage.
stage_clientCertificateId :: Lens' Stage (Maybe Text)

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
stage_tracingEnabled :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was created.
stage_createdDate :: Lens' Stage (Maybe UTCTime)

-- | The status of the cache cluster for the stage, if enabled.
stage_cacheClusterStatus :: Lens' Stage (Maybe CacheClusterStatus)

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
stage_methodSettings :: Lens' Stage (Maybe (HashMap Text MethodSetting))

-- | The timestamp when the stage last updated.
stage_lastUpdatedDate :: Lens' Stage (Maybe UTCTime)

-- | The size of the cache cluster for the stage, if enabled.
stage_cacheClusterSize :: Lens' Stage (Maybe CacheClusterSize)

-- | The ARN of the WebAcl associated with the Stage.
stage_webAclArn :: Lens' Stage (Maybe Text)

-- | Settings for the canary deployment in this stage.
stage_canarySettings :: Lens' Stage (Maybe CanarySettings)

-- | Specifies whether a cache cluster is enabled for the stage.
stage_cacheClusterEnabled :: Lens' Stage (Maybe Bool)

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
stage_stageName :: Lens' Stage (Maybe Text)

-- | The stage's description.
stage_description :: Lens' Stage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
stage_tags :: Lens' Stage (Maybe (HashMap Text Text))

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getRestApis_limit :: Lens' GetRestApis (Maybe Int)

-- | The current pagination position in the paged result set.
getRestApis_position :: Lens' GetRestApis (Maybe Text)

-- | The current page of elements from this collection.
getRestApisResponse_items :: Lens' GetRestApisResponse (Maybe [RestApi])

-- | Undocumented member.
getRestApisResponse_position :: Lens' GetRestApisResponse (Maybe Text)

-- | The response's http status code.
getRestApisResponse_httpStatus :: Lens' GetRestApisResponse Int

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getDocumentationVersions_limit :: Lens' GetDocumentationVersions (Maybe Int)

-- | The current pagination position in the paged result set.
getDocumentationVersions_position :: Lens' GetDocumentationVersions (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDocumentationVersions_restApiId :: Lens' GetDocumentationVersions Text

-- | The current page of elements from this collection.
getDocumentationVersionsResponse_items :: Lens' GetDocumentationVersionsResponse (Maybe [DocumentationVersion])

-- | Undocumented member.
getDocumentationVersionsResponse_position :: Lens' GetDocumentationVersionsResponse (Maybe Text)

-- | The response's http status code.
getDocumentationVersionsResponse_httpStatus :: Lens' GetDocumentationVersionsResponse Int

-- | The description of the Stage resource for the Deployment resource to
--   create.
createDeployment_stageDescription :: Lens' CreateDeployment (Maybe Text)

-- | A map that defines the stage variables for the Stage resource that is
--   associated with the new deployment. Variable names can have
--   alphanumeric and underscore characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
createDeployment_variables :: Lens' CreateDeployment (Maybe (HashMap Text Text))

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
createDeployment_tracingEnabled :: Lens' CreateDeployment (Maybe Bool)

-- | Specifies the cache cluster size for the Stage resource specified in
--   the input, if a cache cluster is enabled.
createDeployment_cacheClusterSize :: Lens' CreateDeployment (Maybe CacheClusterSize)

-- | The input configuration for the canary deployment when the deployment
--   is a canary release deployment.
createDeployment_canarySettings :: Lens' CreateDeployment (Maybe DeploymentCanarySettings)

-- | Enables a cache cluster for the Stage resource specified in the input.
createDeployment_cacheClusterEnabled :: Lens' CreateDeployment (Maybe Bool)

-- | The name of the Stage resource for the Deployment resource to create.
createDeployment_stageName :: Lens' CreateDeployment (Maybe Text)

-- | The description for the Deployment resource to create.
createDeployment_description :: Lens' CreateDeployment (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createDeployment_restApiId :: Lens' CreateDeployment Text

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
deployment_apiSummary :: Lens' Deployment (Maybe (HashMap Text (HashMap Text MethodSnapshot)))

-- | The date and time that the deployment resource was created.
deployment_createdDate :: Lens' Deployment (Maybe UTCTime)

-- | The identifier for the deployment resource.
deployment_id :: Lens' Deployment (Maybe Text)

-- | The description for the deployment resource.
deployment_description :: Lens' Deployment (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getVpcLinks_limit :: Lens' GetVpcLinks (Maybe Int)

-- | The current pagination position in the paged result set.
getVpcLinks_position :: Lens' GetVpcLinks (Maybe Text)

-- | The current page of elements from this collection.
getVpcLinksResponse_items :: Lens' GetVpcLinksResponse (Maybe [VpcLink])

-- | Undocumented member.
getVpcLinksResponse_position :: Lens' GetVpcLinksResponse (Maybe Text)

-- | The response's http status code.
getVpcLinksResponse_httpStatus :: Lens' GetVpcLinksResponse Int

-- | The name of the API's stage that you want to use for this mapping.
--   Specify '(none)' if you want callers to explicitly specify the stage
--   name after any base path name.
createBasePathMapping_stage :: Lens' CreateBasePathMapping (Maybe Text)

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name. This value must be unique for all of the
--   mappings across a single API. Specify '(none)' if you do not want
--   callers to specify a base path name after the domain name.
createBasePathMapping_basePath :: Lens' CreateBasePathMapping (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The domain name of the BasePathMapping resource to
--   create.</li>
--   </ul>
createBasePathMapping_domainName :: Lens' CreateBasePathMapping Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createBasePathMapping_restApiId :: Lens' CreateBasePathMapping Text

-- | The name of the associated stage.
basePathMapping_stage :: Lens' BasePathMapping (Maybe Text)

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
basePathMapping_basePath :: Lens' BasePathMapping (Maybe Text)

-- | The string identifier of the associated RestApi.
basePathMapping_restApiId :: Lens' BasePathMapping (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getIntegration_restApiId :: Lens' GetIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration request's resource
--   identifier</li>
--   </ul>
getIntegration_resourceId :: Lens' GetIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration request's HTTP
--   method.</li>
--   </ul>
getIntegration_httpMethod :: Lens' GetIntegration Text

-- | Specifies the integration's HTTP method type.
integration_httpMethod :: Lens' Integration (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
integration_requestTemplates :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
integration_credentials :: Lens' Integration (Maybe Text)

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
integration_connectionId :: Lens' Integration (Maybe Text)

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
integration_requestParameters :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
integration_contentHandling :: Lens' Integration (Maybe ContentHandlingStrategy)

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
integration_passthroughBehavior :: Lens' Integration (Maybe Text)

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
integration_uri :: Lens' Integration (Maybe Text)

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
integration_integrationResponses :: Lens' Integration (Maybe (HashMap Text IntegrationResponse))

-- | Specifies the TLS configuration for an integration.
integration_tlsConfig :: Lens' Integration (Maybe TlsConfig)

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
integration_cacheNamespace :: Lens' Integration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
integration_timeoutInMillis :: Lens' Integration (Maybe Int)

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
integration_type :: Lens' Integration (Maybe IntegrationType)

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
integration_connectionType :: Lens' Integration (Maybe ConnectionType)

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
integration_cacheKeyParameters :: Lens' Integration (Maybe [Text])

-- | The path of API entities of the to-be-retrieved documentation parts.
getDocumentationParts_path :: Lens' GetDocumentationParts (Maybe Text)

-- | The status of the API documentation parts to retrieve. Valid values
--   are <tt>DOCUMENTED</tt> for retrieving DocumentationPart resources
--   with content and <tt>UNDOCUMENTED</tt> for DocumentationPart resources
--   without content.
getDocumentationParts_locationStatus :: Lens' GetDocumentationParts (Maybe LocationStatusType)

-- | The name of API entities of the to-be-retrieved documentation parts.
getDocumentationParts_nameQuery :: Lens' GetDocumentationParts (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getDocumentationParts_limit :: Lens' GetDocumentationParts (Maybe Int)

-- | The type of API entities of the to-be-retrieved documentation parts.
getDocumentationParts_type :: Lens' GetDocumentationParts (Maybe DocumentationPartType)

-- | The current pagination position in the paged result set.
getDocumentationParts_position :: Lens' GetDocumentationParts (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDocumentationParts_restApiId :: Lens' GetDocumentationParts Text

-- | The current page of elements from this collection.
getDocumentationPartsResponse_items :: Lens' GetDocumentationPartsResponse (Maybe [DocumentationPart])

-- | Undocumented member.
getDocumentationPartsResponse_position :: Lens' GetDocumentationPartsResponse (Maybe Text)

-- | The response's http status code.
getDocumentationPartsResponse_httpStatus :: Lens' GetDocumentationPartsResponse Int

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateAccount_patchOperations :: Lens' UpdateAccount (Maybe [PatchOperation])

-- | The version of the API keys used for the account.
account_apiKeyVersion :: Lens' Account (Maybe Text)

-- | The ARN of an Amazon CloudWatch role for the current Account.
account_cloudwatchRoleArn :: Lens' Account (Maybe Text)

-- | A list of features supported for the account. When usage plans are
--   enabled, the features list will include an entry of
--   <tt>"UsagePlans"</tt>.
account_features :: Lens' Account (Maybe [Text])

-- | Specifies the API request limits configured for the current Account.
account_throttleSettings :: Lens' Account (Maybe ThrottleSettings)

-- | <ul>
--   <li><i>Required</i> The identifier of the UsagePlan resource to be
--   retrieved.</li>
--   </ul>
getUsagePlan_usagePlanId :: Lens' GetUsagePlan Text

-- | The associated API stages of a usage plan.
usagePlan_apiStages :: Lens' UsagePlan (Maybe [ApiStage])

-- | The name of a usage plan.
usagePlan_name :: Lens' UsagePlan (Maybe Text)

-- | The identifier of a UsagePlan resource.
usagePlan_id :: Lens' UsagePlan (Maybe Text)

-- | The request throttle limits of a usage plan.
usagePlan_throttle :: Lens' UsagePlan (Maybe ThrottleSettings)

-- | The maximum number of permitted requests per a given unit time
--   interval.
usagePlan_quota :: Lens' UsagePlan (Maybe QuotaSettings)

-- | The description of a usage plan.
usagePlan_description :: Lens' UsagePlan (Maybe Text)

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
usagePlan_productCode :: Lens' UsagePlan (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
usagePlan_tags :: Lens' UsagePlan (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteDeployment_restApiId :: Lens' DeleteDeployment Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Deployment resource to
--   delete.</li>
--   </ul>
deleteDeployment_deploymentId :: Lens' DeleteDeployment Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateDeployment_patchOperations :: Lens' UpdateDeployment (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateDeployment_restApiId :: Lens' UpdateDeployment Text

-- | The replacement identifier for the Deployment resource to change
--   information about.
updateDeployment_deploymentId :: Lens' UpdateDeployment Text

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
deployment_apiSummary :: Lens' Deployment (Maybe (HashMap Text (HashMap Text MethodSnapshot)))

-- | The date and time that the deployment resource was created.
deployment_createdDate :: Lens' Deployment (Maybe UTCTime)

-- | The identifier for the deployment resource.
deployment_id :: Lens' Deployment (Maybe Text)

-- | The description for the deployment resource.
deployment_description :: Lens' Deployment (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDocumentationPart_restApiId :: Lens' GetDocumentationPart Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDocumentationPart_documentationPartId :: Lens' GetDocumentationPart Text

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
documentationPart_location :: Lens' DocumentationPart (Maybe DocumentationPartLocation)

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
documentationPart_id :: Lens' DocumentationPart (Maybe Text)

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
documentationPart_properties :: Lens' DocumentationPart (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteResource_restApiId :: Lens' DeleteResource Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Resource resource.</li>
--   </ul>
deleteResource_resourceId :: Lens' DeleteResource Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateResource_patchOperations :: Lens' UpdateResource (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateResource_restApiId :: Lens' UpdateResource Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Resource resource.</li>
--   </ul>
updateResource_resourceId :: Lens' UpdateResource Text

-- | The last path segment for this resource.
resource_pathPart :: Lens' Resource (Maybe Text)

-- | The full path for this resource.
resource_path :: Lens' Resource (Maybe Text)

-- | The resource's identifier.
resource_id :: Lens' Resource (Maybe Text)

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
resource_resourceMethods :: Lens' Resource (Maybe (HashMap Text Method))

-- | The parent resource's identifier.
resource_parentId :: Lens' Resource (Maybe Text)

-- | A Boolean flag to indicate whether to validate request parameters,
--   <tt>true</tt>, or not <tt>false</tt>.
createRequestValidator_validateRequestParameters :: Lens' CreateRequestValidator (Maybe Bool)

-- | The name of the to-be-created RequestValidator.
createRequestValidator_name :: Lens' CreateRequestValidator (Maybe Text)

-- | A Boolean flag to indicate whether to validate request body according
--   to the configured model schema for the method (<tt>true</tt>) or not
--   (<tt>false</tt>).
createRequestValidator_validateRequestBody :: Lens' CreateRequestValidator (Maybe Bool)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createRequestValidator_restApiId :: Lens' CreateRequestValidator Text

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
requestValidator_validateRequestParameters :: Lens' RequestValidator (Maybe Bool)

-- | The name of this RequestValidator
requestValidator_name :: Lens' RequestValidator (Maybe Text)

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
requestValidator_validateRequestBody :: Lens' RequestValidator (Maybe Bool)

-- | The identifier of this RequestValidator.
requestValidator_id :: Lens' RequestValidator (Maybe Text)

-- | A query parameter to indicate whether to overwrite
--   (<tt>OVERWRITE</tt>) any existing DocumentationParts definition or to
--   merge (<tt>MERGE</tt>) the new definition into the existing one. The
--   default value is <tt>MERGE</tt>.
importDocumentationParts_mode :: Lens' ImportDocumentationParts (Maybe PutMode)

-- | A query parameter to specify whether to rollback the documentation
--   importation (<tt>true</tt>) or not (<tt>false</tt>) when a warning is
--   encountered. The default value is <tt>false</tt>.
importDocumentationParts_failOnWarnings :: Lens' ImportDocumentationParts (Maybe Bool)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
importDocumentationParts_restApiId :: Lens' ImportDocumentationParts Text

-- | <ul>
--   <li><i>Required</i> Raw byte array representing the to-be-imported
--   documentation parts. To import from an OpenAPI file, this is a JSON
--   object.</li>
--   </ul>
importDocumentationParts_body :: Lens' ImportDocumentationParts ByteString

-- | A list of the returned documentation part identifiers.
importDocumentationPartsResponse_ids :: Lens' ImportDocumentationPartsResponse (Maybe [Text])

-- | A list of warning messages reported during import of documentation
--   parts.
importDocumentationPartsResponse_warnings :: Lens' ImportDocumentationPartsResponse (Maybe [Text])

-- | The response's http status code.
importDocumentationPartsResponse_httpStatus :: Lens' ImportDocumentationPartsResponse Int

-- | The Id of the API key associated with the resultant usage data.
getUsage_keyId :: Lens' GetUsage (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getUsage_limit :: Lens' GetUsage (Maybe Int)

-- | The current pagination position in the paged result set.
getUsage_position :: Lens' GetUsage (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The Id of the usage plan associated with the usage
--   data.</li>
--   </ul>
getUsage_usagePlanId :: Lens' GetUsage Text

-- | <ul>
--   <li><i>Required</i> The starting date (e.g., 2016-01-01) of the usage
--   data.</li>
--   </ul>
getUsage_startDate :: Lens' GetUsage Text

-- | <ul>
--   <li><i>Required</i> The ending date (e.g., 2016-12-31) of the usage
--   data.</li>
--   </ul>
getUsage_endDate :: Lens' GetUsage Text

-- | The plan Id associated with this usage data.
usage_usagePlanId :: Lens' Usage (Maybe Text)

-- | The ending date of the usage data.
usage_endDate :: Lens' Usage (Maybe Text)

-- | The usage data, as daily logs of used and remaining quotas, over the
--   specified time interval indexed over the API keys in a usage plan. For
--   example, <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
--   [100, 10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value
--   and the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
usage_items :: Lens' Usage (Maybe (HashMap Text [[Integer]]))

-- | The starting date of the usage data.
usage_startDate :: Lens' Usage (Maybe Text)

-- | Undocumented member.
usage_position :: Lens' Usage (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The identifier of the VpcLink. It is used in an
--   Integration to reference this VpcLink.</li>
--   </ul>
getVpcLink_vpcLinkId :: Lens' GetVpcLink Text

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
vpcLink_status :: Lens' VpcLink (Maybe VpcLinkStatus)

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
vpcLink_targetArns :: Lens' VpcLink (Maybe [Text])

-- | The name used to label and identify the VPC link.
vpcLink_name :: Lens' VpcLink (Maybe Text)

-- | A description about the VPC link status.
vpcLink_statusMessage :: Lens' VpcLink (Maybe Text)

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
vpcLink_id :: Lens' VpcLink (Maybe Text)

-- | The description of the VPC link.
vpcLink_description :: Lens' VpcLink (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
vpcLink_tags :: Lens' VpcLink (Maybe (HashMap Text Text))

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model.
createModel_schema :: Lens' CreateModel (Maybe Text)

-- | The description of the model.
createModel_description :: Lens' CreateModel (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The RestApi identifier under which the Model will
--   be created.</li>
--   </ul>
createModel_restApiId :: Lens' CreateModel Text

-- | <ul>
--   <li><i>Required</i> The name of the model. Must be alphanumeric.</li>
--   </ul>
createModel_name :: Lens' CreateModel Text

-- | <ul>
--   <li><i>Required</i> The content-type for the model.</li>
--   </ul>
createModel_contentType :: Lens' CreateModel Text

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
model_schema :: Lens' Model (Maybe Text)

-- | The name of the model. Must be an alphanumeric string.
model_name :: Lens' Model (Maybe Text)

-- | The identifier for the model resource.
model_id :: Lens' Model (Maybe Text)

-- | The description of the model.
model_description :: Lens' Model (Maybe Text)

-- | The content-type for the model.
model_contentType :: Lens' Model (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getIntegrationResponse_restApiId :: Lens' GetIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration response request's
--   resource identifier.</li>
--   </ul>
getIntegrationResponse_resourceId :: Lens' GetIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration response request's
--   HTTP method.</li>
--   </ul>
getIntegrationResponse_httpMethod :: Lens' GetIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a get integration response request's
--   status code.</li>
--   </ul>
getIntegrationResponse_statusCode :: Lens' GetIntegrationResponse Text

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
integrationResponse_contentHandling :: Lens' IntegrationResponse (Maybe ContentHandlingStrategy)

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
integrationResponse_responseTemplates :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
integrationResponse_selectionPattern :: Lens' IntegrationResponse (Maybe Text)

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
integrationResponse_statusCode :: Lens' IntegrationResponse (Maybe Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
integrationResponse_responseParameters :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | The user-friendly name of the certificate that will be used by
--   edge-optimized endpoint for this domain name.
createDomainName_certificateName :: Lens' CreateDomainName (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
createDomainName_ownershipVerificationCertificateArn :: Lens' CreateDomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   regional endpoint for this domain name. AWS Certificate Manager is the
--   only supported source.
createDomainName_regionalCertificateArn :: Lens' CreateDomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
createDomainName_certificateArn :: Lens' CreateDomainName (Maybe Text)

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
createDomainName_securityPolicy :: Lens' CreateDomainName (Maybe SecurityPolicy)

-- | Undocumented member.
createDomainName_mutualTlsAuthentication :: Lens' CreateDomainName (Maybe MutualTlsAuthenticationInput)

-- | <ul>
--   <li><i>Deprecated</i> Your edge-optimized endpoint's domain name
--   certificate's private key.</li>
--   </ul>
createDomainName_certificatePrivateKey :: Lens' CreateDomainName (Maybe Text)

-- | The user-friendly name of the certificate that will be used by
--   regional endpoint for this domain name.
createDomainName_regionalCertificateName :: Lens' CreateDomainName (Maybe Text)

-- | <ul>
--   <li><i>Deprecated</i> The body of the server certificate that will be
--   used by edge-optimized endpoint for this domain name provided by your
--   certificate authority.</li>
--   </ul>
createDomainName_certificateBody :: Lens' CreateDomainName (Maybe Text)

-- | <ul>
--   <li><i>Deprecated</i> The intermediate certificates and optionally the
--   root certificate, one after the other without any blank lines, used by
--   an edge-optimized endpoint for this domain name. If you include the
--   root certificate, your certificate chain must start with intermediate
--   certificates and end with the root certificate. Use the intermediate
--   certificates that were provided by your certificate authority. Do not
--   include any intermediaries that are not in the chain of trust
--   path.</li>
--   </ul>
createDomainName_certificateChain :: Lens' CreateDomainName (Maybe Text)

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
createDomainName_endpointConfiguration :: Lens' CreateDomainName (Maybe EndpointConfiguration)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
createDomainName_tags :: Lens' CreateDomainName (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The name of the DomainName resource.</li>
--   </ul>
createDomainName_domainName :: Lens' CreateDomainName Text

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
domainName_regionalHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
domainName_certificateName :: Lens' DomainName (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
domainName_ownershipVerificationCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
domainName_regionalCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
domainName_certificateArn :: Lens' DomainName (Maybe Text)

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
domainName_distributionHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
domainName_securityPolicy :: Lens' DomainName (Maybe SecurityPolicy)

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
domainName_domainName :: Lens' DomainName (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
domainName_mutualTlsAuthentication :: Lens' DomainName (Maybe MutualTlsAuthentication)

-- | The name of the certificate that will be used for validating the
--   regional domain name.
domainName_regionalCertificateName :: Lens' DomainName (Maybe Text)

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
domainName_regionalDomainName :: Lens' DomainName (Maybe Text)

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
domainName_certificateUploadDate :: Lens' DomainName (Maybe UTCTime)

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
domainName_distributionDomainName :: Lens' DomainName (Maybe Text)

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
domainName_domainNameStatusMessage :: Lens' DomainName (Maybe Text)

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
domainName_endpointConfiguration :: Lens' DomainName (Maybe EndpointConfiguration)

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
domainName_domainNameStatus :: Lens' DomainName (Maybe DomainNameStatus)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
domainName_tags :: Lens' DomainName (Maybe (HashMap Text Text))

-- | The string identifier of the associated RestApi.
flushStageAuthorizersCache_restApiId :: Lens' FlushStageAuthorizersCache Text

-- | The name of the stage to flush.
flushStageAuthorizersCache_stageName :: Lens' FlushStageAuthorizersCache Text

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500. The GatewayResponses collection does
--   not support pagination and the limit does not apply here.
getGatewayResponses_limit :: Lens' GetGatewayResponses (Maybe Int)

-- | The current pagination position in the paged result set. The
--   GatewayResponse collection does not support pagination and the
--   position does not apply here.
getGatewayResponses_position :: Lens' GetGatewayResponses (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getGatewayResponses_restApiId :: Lens' GetGatewayResponses Text

-- | Returns the entire collection, because of no pagination support.
getGatewayResponsesResponse_items :: Lens' GetGatewayResponsesResponse (Maybe [GatewayResponse])

-- | Undocumented member.
getGatewayResponsesResponse_position :: Lens' GetGatewayResponsesResponse (Maybe Text)

-- | The response's http status code.
getGatewayResponsesResponse_httpStatus :: Lens' GetGatewayResponsesResponse Int

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteModel_restApiId :: Lens' DeleteModel Text

-- | <ul>
--   <li><i>Required</i> The name of the model to delete.</li>
--   </ul>
deleteModel_modelName :: Lens' DeleteModel Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateModel_patchOperations :: Lens' UpdateModel (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateModel_restApiId :: Lens' UpdateModel Text

-- | <ul>
--   <li><i>Required</i> The name of the model to update.</li>
--   </ul>
updateModel_modelName :: Lens' UpdateModel Text

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
model_schema :: Lens' Model (Maybe Text)

-- | The name of the model. Must be an alphanumeric string.
model_name :: Lens' Model (Maybe Text)

-- | The identifier for the model resource.
model_id :: Lens' Model (Maybe Text)

-- | The description of the model.
model_description :: Lens' Model (Maybe Text)

-- | The content-type for the model.
model_contentType :: Lens' Model (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getDocumentationVersion_restApiId :: Lens' GetDocumentationVersion Text

-- | <ul>
--   <li><i>Required</i> The version identifier of the to-be-retrieved
--   documentation snapshot.</li>
--   </ul>
getDocumentationVersion_documentationVersion :: Lens' GetDocumentationVersion Text

-- | The date when the API documentation snapshot is created.
documentationVersion_createdDate :: Lens' DocumentationVersion (Maybe UTCTime)

-- | The version identifier of the API documentation snapshot.
documentationVersion_version :: Lens' DocumentationVersion (Maybe Text)

-- | The description of the API documentation snapshot.
documentationVersion_description :: Lens' DocumentationVersion (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The identifier of the ApiKey resource to be
--   deleted.</li>
--   </ul>
deleteApiKey_apiKey :: Lens' DeleteApiKey Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateApiKey_patchOperations :: Lens' UpdateApiKey (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The identifier of the ApiKey resource to be
--   updated.</li>
--   </ul>
updateApiKey_apiKey :: Lens' UpdateApiKey Text

-- | Specifies whether the API Key can be used by callers.
apiKey_enabled :: Lens' ApiKey (Maybe Bool)

-- | The value of the API Key.
apiKey_value :: Lens' ApiKey (Maybe Text)

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
apiKey_customerId :: Lens' ApiKey (Maybe Text)

-- | The timestamp when the API Key was created.
apiKey_createdDate :: Lens' ApiKey (Maybe UTCTime)

-- | The name of the API Key.
apiKey_name :: Lens' ApiKey (Maybe Text)

-- | The identifier of the API Key.
apiKey_id :: Lens' ApiKey (Maybe Text)

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
apiKey_stageKeys :: Lens' ApiKey (Maybe [Text])

-- | The timestamp when the API Key was last updated.
apiKey_lastUpdatedDate :: Lens' ApiKey (Maybe UTCTime)

-- | The description of the API Key.
apiKey_description :: Lens' ApiKey (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
apiKey_tags :: Lens' ApiKey (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getRestApi_restApiId :: Lens' GetRestApi Text

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))

-- | The stages' deployment identifiers.
getStages_deploymentId :: Lens' GetStages (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getStages_restApiId :: Lens' GetStages Text

-- | The current page of elements from this collection.
getStagesResponse_item :: Lens' GetStagesResponse (Maybe [Stage])

-- | The response's http status code.
getStagesResponse_httpStatus :: Lens' GetStagesResponse Int

-- | The <tt>mode</tt> query parameter to specify the update mode. Valid
--   values are "merge" and "overwrite". By default, the update mode is
--   "merge".
putRestApi_mode :: Lens' PutRestApi (Maybe PutMode)

-- | A query parameter to indicate whether to rollback the API update
--   (<tt>true</tt>) or not (<tt>false</tt>) when a warning is encountered.
--   The default value is <tt>false</tt>.
putRestApi_failOnWarnings :: Lens' PutRestApi (Maybe Bool)

-- | Custom header parameters as part of the request. For example, to
--   exclude DocumentationParts from an imported API, set
--   <tt>ignore=documentation</tt> as a <tt>parameters</tt> value, as in
--   the AWS CLI command of <tt>aws apigateway import-rest-api --parameters
--   ignore=documentation --body
--   'file:///path/to/imported-api-body.json'</tt>.
putRestApi_parameters :: Lens' PutRestApi (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
putRestApi_restApiId :: Lens' PutRestApi Text

-- | <ul>
--   <li><i>Required</i> The PUT request body containing external API
--   definitions. Currently, only OpenAPI definition JSON/YAML files are
--   supported. The maximum size of the API definition file is 6MB.</li>
--   </ul>
putRestApi_body :: Lens' PutRestApi ByteString

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getMethod_restApiId :: Lens' GetMethod Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the Method
--   resource.</li>
--   </ul>
getMethod_resourceId :: Lens' GetMethod Text

-- | <ul>
--   <li><i>Required</i> Specifies the method request's HTTP method
--   type.</li>
--   </ul>
getMethod_httpMethod :: Lens' GetMethod Text

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodResponses :: Lens' Method (Maybe (HashMap Text MethodResponse))

-- | The method's HTTP verb.
method_httpMethod :: Lens' Method (Maybe Text)

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
method_authorizationScopes :: Lens' Method (Maybe [Text])

-- | The identifier of a RequestValidator for request validation.
method_requestValidatorId :: Lens' Method (Maybe Text)

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
method_requestModels :: Lens' Method (Maybe (HashMap Text Text))

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
method_requestParameters :: Lens' Method (Maybe (HashMap Text Bool))

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
method_authorizerId :: Lens' Method (Maybe Text)

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
method_operationName :: Lens' Method (Maybe Text)

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
method_authorizationType :: Lens' Method (Maybe Text)

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
method_apiKeyRequired :: Lens' Method (Maybe Bool)

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodIntegration :: Lens' Method (Maybe Integration)

-- | A query parameter of a Boolean value to resolve (<tt>true</tt>) all
--   external model references and returns a flattened model schema or not
--   (<tt>false</tt>) The default is <tt>false</tt>.
getModel_flatten :: Lens' GetModel (Maybe Bool)

-- | <ul>
--   <li><i>Required</i> The RestApi identifier under which the Model
--   exists.</li>
--   </ul>
getModel_restApiId :: Lens' GetModel Text

-- | <ul>
--   <li><i>Required</i> The name of the model as an identifier.</li>
--   </ul>
getModel_modelName :: Lens' GetModel Text

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
model_schema :: Lens' Model (Maybe Text)

-- | The name of the model. Must be an alphanumeric string.
model_name :: Lens' Model (Maybe Text)

-- | The identifier for the model resource.
model_id :: Lens' Model (Maybe Text)

-- | The description of the model.
model_description :: Lens' Model (Maybe Text)

-- | The content-type for the model.
model_contentType :: Lens' Model (Maybe Text)

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateRestApi_patchOperations :: Lens' UpdateRestApi (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateRestApi_restApiId :: Lens' UpdateRestApi Text

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteRestApi_restApiId :: Lens' DeleteRestApi Text

-- | A query parameter to indicate whether to rollback ApiKey importation
--   (<tt>true</tt>) or not (<tt>false</tt>) when error is encountered.
importApiKeys_failOnWarnings :: Lens' ImportApiKeys (Maybe Bool)

-- | The payload of the POST request to import API keys. For the payload
--   format, see <a>API Key File Format</a>.
importApiKeys_body :: Lens' ImportApiKeys ByteString

-- | A query parameter to specify the input format to imported API keys.
--   Currently, only the <tt>csv</tt> format is supported.
importApiKeys_format :: Lens' ImportApiKeys ApiKeysFormat

-- | A list of all the ApiKey identifiers.
importApiKeysResponse_ids :: Lens' ImportApiKeysResponse (Maybe [Text])

-- | A list of warning messages.
importApiKeysResponse_warnings :: Lens' ImportApiKeysResponse (Maybe [Text])

-- | The response's http status code.
importApiKeysResponse_httpStatus :: Lens' ImportApiKeysResponse Int

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createDocumentationPart_restApiId :: Lens' CreateDocumentationPart Text

-- | <ul>
--   <li><i>Required</i> The location of the targeted API entity of the
--   to-be-created documentation part.</li>
--   </ul>
createDocumentationPart_location :: Lens' CreateDocumentationPart DocumentationPartLocation

-- | <ul>
--   <li><i>Required</i> The new documentation content map of the targeted
--   API entity. Enclosed key-value pairs are API-specific, but only
--   OpenAPI-compliant key-value pairs can be exported and, hence,
--   published.</li>
--   </ul>
createDocumentationPart_properties :: Lens' CreateDocumentationPart Text

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
documentationPart_location :: Lens' DocumentationPart (Maybe DocumentationPartLocation)

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
documentationPart_id :: Lens' DocumentationPart (Maybe Text)

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
documentationPart_properties :: Lens' DocumentationPart (Maybe Text)

-- | The URI path, including query string, of the simulated invocation
--   request. Use this to specify path parameters and query string
--   parameters.
testInvokeMethod_pathWithQueryString :: Lens' TestInvokeMethod (Maybe Text)

-- | The simulated request body of an incoming invocation request.
testInvokeMethod_body :: Lens' TestInvokeMethod (Maybe Text)

-- | A ClientCertificate identifier to use in the test invocation. API
--   Gateway will use the certificate when making the HTTPS request to the
--   defined back-end endpoint.
testInvokeMethod_clientCertificateId :: Lens' TestInvokeMethod (Maybe Text)

-- | A key-value map of stage variables to simulate an invocation on a
--   deployed Stage.
testInvokeMethod_stageVariables :: Lens' TestInvokeMethod (Maybe (HashMap Text Text))

-- | A key-value map of headers to simulate an incoming invocation request.
testInvokeMethod_headers :: Lens' TestInvokeMethod (Maybe (HashMap Text Text))

-- | The headers as a map from string to list of values to simulate an
--   incoming invocation request.
testInvokeMethod_multiValueHeaders :: Lens' TestInvokeMethod (Maybe (HashMap Text [Text]))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
testInvokeMethod_restApiId :: Lens' TestInvokeMethod Text

-- | <ul>
--   <li><i>Required</i> Specifies a test invoke method request's resource
--   ID.</li>
--   </ul>
testInvokeMethod_resourceId :: Lens' TestInvokeMethod Text

-- | <ul>
--   <li><i>Required</i> Specifies a test invoke method request's HTTP
--   method.</li>
--   </ul>
testInvokeMethod_httpMethod :: Lens' TestInvokeMethod Text

-- | The API Gateway execution log for the test invoke request.
testInvokeMethodResponse_log :: Lens' TestInvokeMethodResponse (Maybe Text)

-- | The HTTP status code.
testInvokeMethodResponse_status :: Lens' TestInvokeMethodResponse (Maybe Int)

-- | The body of the HTTP response.
testInvokeMethodResponse_body :: Lens' TestInvokeMethodResponse (Maybe Text)

-- | The execution latency of the test invoke request.
testInvokeMethodResponse_latency :: Lens' TestInvokeMethodResponse (Maybe Integer)

-- | The headers of the HTTP response.
testInvokeMethodResponse_headers :: Lens' TestInvokeMethodResponse (Maybe (HashMap Text Text))

-- | The headers of the HTTP response as a map from string to list of
--   values.
testInvokeMethodResponse_multiValueHeaders :: Lens' TestInvokeMethodResponse (Maybe (HashMap Text [Text]))

-- | The response's http status code.
testInvokeMethodResponse_httpStatus :: Lens' TestInvokeMethodResponse Int

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getRequestValidator_restApiId :: Lens' GetRequestValidator Text

-- | <ul>
--   <li><i>Required</i> The identifier of the RequestValidator to be
--   retrieved.</li>
--   </ul>
getRequestValidator_requestValidatorId :: Lens' GetRequestValidator Text

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
requestValidator_validateRequestParameters :: Lens' RequestValidator (Maybe Bool)

-- | The name of this RequestValidator
requestValidator_name :: Lens' RequestValidator (Maybe Text)

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
requestValidator_validateRequestBody :: Lens' RequestValidator (Maybe Bool)

-- | The identifier of this RequestValidator.
requestValidator_id :: Lens' RequestValidator (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The name of the DomainName resource.</li>
--   </ul>
getDomainName_domainName :: Lens' GetDomainName Text

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
domainName_regionalHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
domainName_certificateName :: Lens' DomainName (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
domainName_ownershipVerificationCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
domainName_regionalCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
domainName_certificateArn :: Lens' DomainName (Maybe Text)

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
domainName_distributionHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
domainName_securityPolicy :: Lens' DomainName (Maybe SecurityPolicy)

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
domainName_domainName :: Lens' DomainName (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
domainName_mutualTlsAuthentication :: Lens' DomainName (Maybe MutualTlsAuthentication)

-- | The name of the certificate that will be used for validating the
--   regional domain name.
domainName_regionalCertificateName :: Lens' DomainName (Maybe Text)

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
domainName_regionalDomainName :: Lens' DomainName (Maybe Text)

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
domainName_certificateUploadDate :: Lens' DomainName (Maybe UTCTime)

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
domainName_distributionDomainName :: Lens' DomainName (Maybe Text)

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
domainName_domainNameStatusMessage :: Lens' DomainName (Maybe Text)

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
domainName_endpointConfiguration :: Lens' DomainName (Maybe EndpointConfiguration)

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
domainName_domainNameStatus :: Lens' DomainName (Maybe DomainNameStatus)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
domainName_tags :: Lens' DomainName (Maybe (HashMap Text Text))

-- | The description of the VPC link.
createVpcLink_description :: Lens' CreateVpcLink (Maybe Text)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
createVpcLink_tags :: Lens' CreateVpcLink (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The name used to label and identify the VPC
--   link.</li>
--   </ul>
createVpcLink_name :: Lens' CreateVpcLink Text

-- | <ul>
--   <li><i>Required</i> The ARN of the network load balancer of the VPC
--   targeted by the VPC link. The network load balancer must be owned by
--   the same AWS account of the API owner.</li>
--   </ul>
createVpcLink_targetArns :: Lens' CreateVpcLink [Text]

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
vpcLink_status :: Lens' VpcLink (Maybe VpcLinkStatus)

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
vpcLink_targetArns :: Lens' VpcLink (Maybe [Text])

-- | The name used to label and identify the VPC link.
vpcLink_name :: Lens' VpcLink (Maybe Text)

-- | A description about the VPC link status.
vpcLink_statusMessage :: Lens' VpcLink (Maybe Text)

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
vpcLink_id :: Lens' VpcLink (Maybe Text)

-- | The description of the VPC link.
vpcLink_description :: Lens' VpcLink (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
vpcLink_tags :: Lens' VpcLink (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteDocumentationPart_restApiId :: Lens' DeleteDocumentationPart Text

-- | <ul>
--   <li><i>Required</i> The identifier of the to-be-deleted documentation
--   part.</li>
--   </ul>
deleteDocumentationPart_documentationPartId :: Lens' DeleteDocumentationPart Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateDocumentationPart_patchOperations :: Lens' UpdateDocumentationPart (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateDocumentationPart_restApiId :: Lens' UpdateDocumentationPart Text

-- | <ul>
--   <li><i>Required</i> The identifier of the to-be-updated documentation
--   part.</li>
--   </ul>
updateDocumentationPart_documentationPartId :: Lens' UpdateDocumentationPart Text

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
documentationPart_location :: Lens' DocumentationPart (Maybe DocumentationPartLocation)

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
documentationPart_id :: Lens' DocumentationPart (Maybe Text)

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
documentationPart_properties :: Lens' DocumentationPart (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getAuthorizers_limit :: Lens' GetAuthorizers (Maybe Int)

-- | The current pagination position in the paged result set.
getAuthorizers_position :: Lens' GetAuthorizers (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getAuthorizers_restApiId :: Lens' GetAuthorizers Text

-- | The current page of elements from this collection.
getAuthorizersResponse_items :: Lens' GetAuthorizersResponse (Maybe [Authorizer])

-- | Undocumented member.
getAuthorizersResponse_position :: Lens' GetAuthorizersResponse (Maybe Text)

-- | The response's http status code.
getAuthorizersResponse_httpStatus :: Lens' GetAuthorizersResponse Int

-- | The stage name to be associated with the new documentation snapshot.
createDocumentationVersion_stageName :: Lens' CreateDocumentationVersion (Maybe Text)

-- | A description about the new documentation snapshot.
createDocumentationVersion_description :: Lens' CreateDocumentationVersion (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createDocumentationVersion_restApiId :: Lens' CreateDocumentationVersion Text

-- | <ul>
--   <li><i>Required</i> The version identifier of the new snapshot.</li>
--   </ul>
createDocumentationVersion_documentationVersion :: Lens' CreateDocumentationVersion Text

-- | The date when the API documentation snapshot is created.
documentationVersion_createdDate :: Lens' DocumentationVersion (Maybe UTCTime)

-- | The version identifier of the API documentation snapshot.
documentationVersion_version :: Lens' DocumentationVersion (Maybe Text)

-- | The description of the API documentation snapshot.
documentationVersion_description :: Lens' DocumentationVersion (Maybe Text)

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
putIntegrationResponse_contentHandling :: Lens' PutIntegrationResponse (Maybe ContentHandlingStrategy)

-- | Specifies a put integration response's templates.
putIntegrationResponse_responseTemplates :: Lens' PutIntegrationResponse (Maybe (HashMap Text Text))

-- | Specifies the selection pattern of a put integration response.
putIntegrationResponse_selectionPattern :: Lens' PutIntegrationResponse (Maybe Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> must be a valid and unique response header name and
--   <tt>JSON-expression</tt> a valid JSON expression without the
--   <tt>$</tt> prefix.
putIntegrationResponse_responseParameters :: Lens' PutIntegrationResponse (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
putIntegrationResponse_restApiId :: Lens' PutIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration response request's
--   resource identifier.</li>
--   </ul>
putIntegrationResponse_resourceId :: Lens' PutIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration response request's
--   HTTP method.</li>
--   </ul>
putIntegrationResponse_httpMethod :: Lens' PutIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies the status code that is used to map the
--   integration response to an existing MethodResponse.</li>
--   </ul>
putIntegrationResponse_statusCode :: Lens' PutIntegrationResponse Text

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
integrationResponse_contentHandling :: Lens' IntegrationResponse (Maybe ContentHandlingStrategy)

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
integrationResponse_responseTemplates :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
integrationResponse_selectionPattern :: Lens' IntegrationResponse (Maybe Text)

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
integrationResponse_statusCode :: Lens' IntegrationResponse (Maybe Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
integrationResponse_responseParameters :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | A query parameter specifying the name of the to-be-returned usage plan
--   keys.
getUsagePlanKeys_nameQuery :: Lens' GetUsagePlanKeys (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getUsagePlanKeys_limit :: Lens' GetUsagePlanKeys (Maybe Int)

-- | The current pagination position in the paged result set.
getUsagePlanKeys_position :: Lens' GetUsagePlanKeys (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlan resource representing the
--   usage plan containing the to-be-retrieved UsagePlanKey resource
--   representing a plan customer.</li>
--   </ul>
getUsagePlanKeys_usagePlanId :: Lens' GetUsagePlanKeys Text

-- | The current page of elements from this collection.
getUsagePlanKeysResponse_items :: Lens' GetUsagePlanKeysResponse (Maybe [UsagePlanKey])

-- | Undocumented member.
getUsagePlanKeysResponse_position :: Lens' GetUsagePlanKeysResponse (Maybe Text)

-- | The response's http status code.
getUsagePlanKeysResponse_httpStatus :: Lens' GetUsagePlanKeysResponse Int

-- | <ul>
--   <li><i>Required</i> The identifier of the VpcLink. It is used in an
--   Integration to reference this VpcLink.</li>
--   </ul>
deleteVpcLink_vpcLinkId :: Lens' DeleteVpcLink Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateVpcLink_patchOperations :: Lens' UpdateVpcLink (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The identifier of the VpcLink. It is used in an
--   Integration to reference this VpcLink.</li>
--   </ul>
updateVpcLink_vpcLinkId :: Lens' UpdateVpcLink Text

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
vpcLink_status :: Lens' VpcLink (Maybe VpcLinkStatus)

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
vpcLink_targetArns :: Lens' VpcLink (Maybe [Text])

-- | The name used to label and identify the VPC link.
vpcLink_name :: Lens' VpcLink (Maybe Text)

-- | A description about the VPC link status.
vpcLink_statusMessage :: Lens' VpcLink (Maybe Text)

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
vpcLink_id :: Lens' VpcLink (Maybe Text)

-- | The description of the VPC link.
vpcLink_description :: Lens' VpcLink (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
vpcLink_tags :: Lens' VpcLink (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
flushStageCache_restApiId :: Lens' FlushStageCache Text

-- | <ul>
--   <li><i>Required</i> The name of the stage to flush its cache.</li>
--   </ul>
flushStageCache_stageName :: Lens' FlushStageCache Text

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
createRestApi_minimumCompressionSize :: Lens' CreateRestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
createRestApi_disableExecuteApiEndpoint :: Lens' CreateRestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
createRestApi_binaryMediaTypes :: Lens' CreateRestApi (Maybe [Text])

-- | A version identifier for the API.
createRestApi_version :: Lens' CreateRestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
createRestApi_apiKeySource :: Lens' CreateRestApi (Maybe ApiKeySourceType)

-- | The ID of the RestApi that you want to clone from.
createRestApi_cloneFrom :: Lens' CreateRestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
createRestApi_policy :: Lens' CreateRestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
createRestApi_endpointConfiguration :: Lens' CreateRestApi (Maybe EndpointConfiguration)

-- | The description of the RestApi.
createRestApi_description :: Lens' CreateRestApi (Maybe Text)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
createRestApi_tags :: Lens' CreateRestApi (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The name of the RestApi.</li>
--   </ul>
createRestApi_name :: Lens' CreateRestApi Text

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteIntegrationResponse_restApiId :: Lens' DeleteIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration response request's
--   resource identifier.</li>
--   </ul>
deleteIntegrationResponse_resourceId :: Lens' DeleteIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration response request's
--   HTTP method.</li>
--   </ul>
deleteIntegrationResponse_httpMethod :: Lens' DeleteIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration response request's
--   status code.</li>
--   </ul>
deleteIntegrationResponse_statusCode :: Lens' DeleteIntegrationResponse Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateIntegrationResponse_patchOperations :: Lens' UpdateIntegrationResponse (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateIntegrationResponse_restApiId :: Lens' UpdateIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies an update integration response request's
--   resource identifier.</li>
--   </ul>
updateIntegrationResponse_resourceId :: Lens' UpdateIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies an update integration response request's
--   HTTP method.</li>
--   </ul>
updateIntegrationResponse_httpMethod :: Lens' UpdateIntegrationResponse Text

-- | <ul>
--   <li><i>Required</i> Specifies an update integration response request's
--   status code.</li>
--   </ul>
updateIntegrationResponse_statusCode :: Lens' UpdateIntegrationResponse Text

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
integrationResponse_contentHandling :: Lens' IntegrationResponse (Maybe ContentHandlingStrategy)

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
integrationResponse_responseTemplates :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
integrationResponse_selectionPattern :: Lens' IntegrationResponse (Maybe Text)

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
integrationResponse_statusCode :: Lens' IntegrationResponse (Maybe Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
integrationResponse_responseParameters :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateUsage_patchOperations :: Lens' UpdateUsage (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The Id of the usage plan associated with the usage
--   data.</li>
--   </ul>
updateUsage_usagePlanId :: Lens' UpdateUsage Text

-- | <ul>
--   <li><i>Required</i> The identifier of the API key associated with the
--   usage plan in which a temporary extension is granted to the remaining
--   quota.</li>
--   </ul>
updateUsage_keyId :: Lens' UpdateUsage Text

-- | The plan Id associated with this usage data.
usage_usagePlanId :: Lens' Usage (Maybe Text)

-- | The ending date of the usage data.
usage_endDate :: Lens' Usage (Maybe Text)

-- | The usage data, as daily logs of used and remaining quotas, over the
--   specified time interval indexed over the API keys in a usage plan. For
--   example, <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
--   [100, 10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value
--   and the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
usage_items :: Lens' Usage (Maybe (HashMap Text [[Integer]]))

-- | The starting date of the usage data.
usage_startDate :: Lens' Usage (Maybe Text)

-- | Undocumented member.
usage_position :: Lens' Usage (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteIntegration_restApiId :: Lens' DeleteIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration request's resource
--   identifier.</li>
--   </ul>
deleteIntegration_resourceId :: Lens' DeleteIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a delete integration request's HTTP
--   method.</li>
--   </ul>
deleteIntegration_httpMethod :: Lens' DeleteIntegration Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateIntegration_patchOperations :: Lens' UpdateIntegration (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateIntegration_restApiId :: Lens' UpdateIntegration Text

-- | <ul>
--   <li><i>Required</i> Represents an update integration request's
--   resource identifier.</li>
--   </ul>
updateIntegration_resourceId :: Lens' UpdateIntegration Text

-- | <ul>
--   <li><i>Required</i> Represents an update integration request's HTTP
--   method.</li>
--   </ul>
updateIntegration_httpMethod :: Lens' UpdateIntegration Text

-- | Specifies the integration's HTTP method type.
integration_httpMethod :: Lens' Integration (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
integration_requestTemplates :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
integration_credentials :: Lens' Integration (Maybe Text)

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
integration_connectionId :: Lens' Integration (Maybe Text)

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
integration_requestParameters :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
integration_contentHandling :: Lens' Integration (Maybe ContentHandlingStrategy)

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
integration_passthroughBehavior :: Lens' Integration (Maybe Text)

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
integration_uri :: Lens' Integration (Maybe Text)

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
integration_integrationResponses :: Lens' Integration (Maybe (HashMap Text IntegrationResponse))

-- | Specifies the TLS configuration for an integration.
integration_tlsConfig :: Lens' Integration (Maybe TlsConfig)

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
integration_cacheNamespace :: Lens' Integration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
integration_timeoutInMillis :: Lens' Integration (Maybe Int)

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
integration_type :: Lens' Integration (Maybe IntegrationType)

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
integration_connectionType :: Lens' Integration (Maybe ConnectionType)

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
integration_cacheKeyParameters :: Lens' Integration (Maybe [Text])

-- | <ul>
--   <li><i>Optional</i> The URI path, including query string, of the
--   simulated invocation request. Use this to specify path parameters and
--   query string parameters.</li>
--   </ul>
testInvokeAuthorizer_pathWithQueryString :: Lens' TestInvokeAuthorizer (Maybe Text)

-- | <ul>
--   <li><i>Optional</i> The simulated request body of an incoming
--   invocation request.</li>
--   </ul>
testInvokeAuthorizer_body :: Lens' TestInvokeAuthorizer (Maybe Text)

-- | <ul>
--   <li><i>Optional</i> A key-value map of additional context
--   variables.</li>
--   </ul>
testInvokeAuthorizer_additionalContext :: Lens' TestInvokeAuthorizer (Maybe (HashMap Text Text))

-- | A key-value map of stage variables to simulate an invocation on a
--   deployed Stage.
testInvokeAuthorizer_stageVariables :: Lens' TestInvokeAuthorizer (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> A key-value map of headers to simulate an incoming
--   invocation request. This is where the incoming authorization token, or
--   identity source, should be specified.</li>
--   </ul>
testInvokeAuthorizer_headers :: Lens' TestInvokeAuthorizer (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Optional</i> The headers as a map from string to list of values
--   to simulate an incoming invocation request. This is where the incoming
--   authorization token, or identity source, may be specified.</li>
--   </ul>
testInvokeAuthorizer_multiValueHeaders :: Lens' TestInvokeAuthorizer (Maybe (HashMap Text [Text]))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
testInvokeAuthorizer_restApiId :: Lens' TestInvokeAuthorizer Text

-- | <ul>
--   <li><i>Required</i> Specifies a test invoke authorizer request's
--   Authorizer ID.</li>
--   </ul>
testInvokeAuthorizer_authorizerId :: Lens' TestInvokeAuthorizer Text

-- | The API Gateway execution log for the test authorizer request.
testInvokeAuthorizerResponse_log :: Lens' TestInvokeAuthorizerResponse (Maybe Text)

-- | The principal identity returned by the Authorizer
testInvokeAuthorizerResponse_principalId :: Lens' TestInvokeAuthorizerResponse (Maybe Text)

-- | The execution latency of the test authorizer request.
testInvokeAuthorizerResponse_latency :: Lens' TestInvokeAuthorizerResponse (Maybe Integer)

-- | Undocumented member.
testInvokeAuthorizerResponse_authorization :: Lens' TestInvokeAuthorizerResponse (Maybe (HashMap Text [Text]))

-- | The <a>open identity claims</a>, with any supported custom attributes,
--   returned from the Cognito Your User Pool configured for the API.
testInvokeAuthorizerResponse_claims :: Lens' TestInvokeAuthorizerResponse (Maybe (HashMap Text Text))

-- | The HTTP status code that the client would have received. Value is 0
--   if the authorizer succeeded.
testInvokeAuthorizerResponse_clientStatus :: Lens' TestInvokeAuthorizerResponse (Maybe Int)

-- | The JSON policy document returned by the Authorizer
testInvokeAuthorizerResponse_policy :: Lens' TestInvokeAuthorizerResponse (Maybe Text)

-- | The response's http status code.
testInvokeAuthorizerResponse_httpStatus :: Lens' TestInvokeAuthorizerResponse Int

-- | The description of the ClientCertificate.
generateClientCertificate_description :: Lens' GenerateClientCertificate (Maybe Text)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
generateClientCertificate_tags :: Lens' GenerateClientCertificate (Maybe (HashMap Text Text))

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
clientCertificate_pemEncodedCertificate :: Lens' ClientCertificate (Maybe Text)

-- | The identifier of the client certificate.
clientCertificate_clientCertificateId :: Lens' ClientCertificate (Maybe Text)

-- | The timestamp when the client certificate was created.
clientCertificate_createdDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The timestamp when the client certificate will expire.
clientCertificate_expirationDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The description of the client certificate.
clientCertificate_description :: Lens' ClientCertificate (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
clientCertificate_tags :: Lens' ClientCertificate (Maybe (HashMap Text Text))

-- | A query parameter used to retrieve the specified resources embedded in
--   the returned Resources resource in the response. This <tt>embed</tt>
--   parameter value is a list of comma-separated strings. Currently, the
--   request supports only retrieval of the embedded Method resources this
--   way. The query parameter value must be a single-valued list and
--   contain the <tt>"methods"</tt> string. For example, <tt>GET
--   /restapis/{restapi_id}/resources?embed=methods</tt>.
getResources_embed :: Lens' GetResources (Maybe [Text])

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getResources_limit :: Lens' GetResources (Maybe Int)

-- | The current pagination position in the paged result set.
getResources_position :: Lens' GetResources (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getResources_restApiId :: Lens' GetResources Text

-- | The current page of elements from this collection.
getResourcesResponse_items :: Lens' GetResourcesResponse (Maybe [Resource])

-- | Undocumented member.
getResourcesResponse_position :: Lens' GetResourcesResponse (Maybe Text)

-- | The response's http status code.
getResourcesResponse_httpStatus :: Lens' GetResourcesResponse Int

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlan resource representing the
--   usage plan containing the to-be-retrieved UsagePlanKey resource
--   representing a plan customer.</li>
--   </ul>
getUsagePlanKey_usagePlanId :: Lens' GetUsagePlanKey Text

-- | <ul>
--   <li><i>Required</i> The key Id of the to-be-retrieved UsagePlanKey
--   resource representing a plan customer.</li>
--   </ul>
getUsagePlanKey_keyId :: Lens' GetUsagePlanKey Text

-- | The value of a usage plan key.
usagePlanKey_value :: Lens' UsagePlanKey (Maybe Text)

-- | The name of a usage plan key.
usagePlanKey_name :: Lens' UsagePlanKey (Maybe Text)

-- | The Id of a usage plan key.
usagePlanKey_id :: Lens' UsagePlanKey (Maybe Text)

-- | The type of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
usagePlanKey_type :: Lens' UsagePlanKey (Maybe Text)

-- | The version of the API keys used for the account.
account_apiKeyVersion :: Lens' Account (Maybe Text)

-- | The ARN of an Amazon CloudWatch role for the current Account.
account_cloudwatchRoleArn :: Lens' Account (Maybe Text)

-- | A list of features supported for the account. When usage plans are
--   enabled, the features list will include an entry of
--   <tt>"UsagePlans"</tt>.
account_features :: Lens' Account (Maybe [Text])

-- | Specifies the API request limits configured for the current Account.
account_throttleSettings :: Lens' Account (Maybe ThrottleSettings)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
putIntegration_requestTemplates :: Lens' PutIntegration (Maybe (HashMap Text Text))

-- | Specifies whether credentials are required for a put integration.
putIntegration_credentials :: Lens' PutIntegration (Maybe Text)

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
putIntegration_connectionId :: Lens' PutIntegration (Maybe Text)

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
putIntegration_requestParameters :: Lens' PutIntegration (Maybe (HashMap Text Text))

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
putIntegration_contentHandling :: Lens' PutIntegration (Maybe ContentHandlingStrategy)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the <tt>requestTemplates</tt> property on the
--   Integration resource. There are three valid values:
--   <tt>WHEN_NO_MATCH</tt>, <tt>WHEN_NO_TEMPLATES</tt>, and
--   <tt>NEVER</tt>.
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt> passes the request body for unmapped
--   content types through to the integration back end without
--   transformation.</li>
--   <li><tt>NEVER</tt> rejects unmapped content types with an HTTP 415
--   'Unsupported Media Type' response.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt> allows pass-through when the
--   integration has NO content types mapped to templates. However if there
--   is at least one content type defined, unmapped content types will be
--   rejected with the same 415 response.</li>
--   </ul>
putIntegration_passthroughBehavior :: Lens' PutIntegration (Maybe Text)

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
putIntegration_uri :: Lens' PutIntegration (Maybe Text)

-- | Undocumented member.
putIntegration_tlsConfig :: Lens' PutIntegration (Maybe TlsConfig)

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
putIntegration_cacheNamespace :: Lens' PutIntegration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
putIntegration_timeoutInMillis :: Lens' PutIntegration (Maybe Int)

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
putIntegration_connectionType :: Lens' PutIntegration (Maybe ConnectionType)

-- | Specifies a put integration HTTP method. When the integration type is
--   HTTP or AWS, this field is required.
putIntegration_integrationHttpMethod :: Lens' PutIntegration (Maybe Text)

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
putIntegration_cacheKeyParameters :: Lens' PutIntegration (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
putIntegration_restApiId :: Lens' PutIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration request's resource
--   ID.</li>
--   </ul>
putIntegration_resourceId :: Lens' PutIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration request's HTTP
--   method.</li>
--   </ul>
putIntegration_httpMethod :: Lens' PutIntegration Text

-- | <ul>
--   <li><i>Required</i> Specifies a put integration input's type.</li>
--   </ul>
putIntegration_type :: Lens' PutIntegration IntegrationType

-- | Specifies the integration's HTTP method type.
integration_httpMethod :: Lens' Integration (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
integration_requestTemplates :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
integration_credentials :: Lens' Integration (Maybe Text)

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
integration_connectionId :: Lens' Integration (Maybe Text)

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
integration_requestParameters :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
integration_contentHandling :: Lens' Integration (Maybe ContentHandlingStrategy)

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
integration_passthroughBehavior :: Lens' Integration (Maybe Text)

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
integration_uri :: Lens' Integration (Maybe Text)

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
integration_integrationResponses :: Lens' Integration (Maybe (HashMap Text IntegrationResponse))

-- | Specifies the TLS configuration for an integration.
integration_tlsConfig :: Lens' Integration (Maybe TlsConfig)

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
integration_cacheNamespace :: Lens' Integration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
integration_timeoutInMillis :: Lens' Integration (Maybe Int)

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
integration_type :: Lens' Integration (Maybe IntegrationType)

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
integration_connectionType :: Lens' Integration (Maybe ConnectionType)

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
integration_cacheKeyParameters :: Lens' Integration (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getAuthorizer_restApiId :: Lens' GetAuthorizer Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Authorizer resource.</li>
--   </ul>
getAuthorizer_authorizerId :: Lens' GetAuthorizer Text

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
authorizer_authorizerUri :: Lens' Authorizer (Maybe Text)

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
authorizer_identityValidationExpression :: Lens' Authorizer (Maybe Text)

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
authorizer_providerARNs :: Lens' Authorizer (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
authorizer_name :: Lens' Authorizer (Maybe Text)

-- | The identifier for the authorizer resource.
authorizer_id :: Lens' Authorizer (Maybe Text)

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
authorizer_authorizerResultTtlInSeconds :: Lens' Authorizer (Maybe Int)

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
authorizer_authType :: Lens' Authorizer (Maybe Text)

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
authorizer_type :: Lens' Authorizer (Maybe AuthorizerType)

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
authorizer_identitySource :: Lens' Authorizer (Maybe Text)

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
authorizer_authorizerCredentials :: Lens' Authorizer (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The Id of the to-be-deleted usage plan.</li>
--   </ul>
deleteUsagePlan_usagePlanId :: Lens' DeleteUsagePlan Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateUsagePlan_patchOperations :: Lens' UpdateUsagePlan (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The Id of the to-be-updated usage plan.</li>
--   </ul>
updateUsagePlan_usagePlanId :: Lens' UpdateUsagePlan Text

-- | The associated API stages of a usage plan.
usagePlan_apiStages :: Lens' UsagePlan (Maybe [ApiStage])

-- | The name of a usage plan.
usagePlan_name :: Lens' UsagePlan (Maybe Text)

-- | The identifier of a UsagePlan resource.
usagePlan_id :: Lens' UsagePlan (Maybe Text)

-- | The request throttle limits of a usage plan.
usagePlan_throttle :: Lens' UsagePlan (Maybe ThrottleSettings)

-- | The maximum number of permitted requests per a given unit time
--   interval.
usagePlan_quota :: Lens' UsagePlan (Maybe QuotaSettings)

-- | The description of a usage plan.
usagePlan_description :: Lens' UsagePlan (Maybe Text)

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
usagePlan_productCode :: Lens' UsagePlan (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
usagePlan_tags :: Lens' UsagePlan (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getStage_restApiId :: Lens' GetStage Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage resource to get information
--   about.</li>
--   </ul>
getStage_stageName :: Lens' GetStage Text

-- | The identifier of the Deployment that the stage points to.
stage_deploymentId :: Lens' Stage (Maybe Text)

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
stage_variables :: Lens' Stage (Maybe (HashMap Text Text))

-- | Settings for logging access in this stage.
stage_accessLogSettings :: Lens' Stage (Maybe AccessLogSettings)

-- | The version of the associated API documentation.
stage_documentationVersion :: Lens' Stage (Maybe Text)

-- | The identifier of a client certificate for an API stage.
stage_clientCertificateId :: Lens' Stage (Maybe Text)

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
stage_tracingEnabled :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was created.
stage_createdDate :: Lens' Stage (Maybe UTCTime)

-- | The status of the cache cluster for the stage, if enabled.
stage_cacheClusterStatus :: Lens' Stage (Maybe CacheClusterStatus)

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
stage_methodSettings :: Lens' Stage (Maybe (HashMap Text MethodSetting))

-- | The timestamp when the stage last updated.
stage_lastUpdatedDate :: Lens' Stage (Maybe UTCTime)

-- | The size of the cache cluster for the stage, if enabled.
stage_cacheClusterSize :: Lens' Stage (Maybe CacheClusterSize)

-- | The ARN of the WebAcl associated with the Stage.
stage_webAclArn :: Lens' Stage (Maybe Text)

-- | Settings for the canary deployment in this stage.
stage_canarySettings :: Lens' Stage (Maybe CanarySettings)

-- | Specifies whether a cache cluster is enabled for the stage.
stage_cacheClusterEnabled :: Lens' Stage (Maybe Bool)

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
stage_stageName :: Lens' Stage (Maybe Text)

-- | The stage's description.
stage_description :: Lens' Stage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
stage_tags :: Lens' Stage (Maybe (HashMap Text Text))

-- | A key-value map of query string parameters that specify properties of
--   the export, depending on the requested <tt>exportType</tt>. For
--   <tt>exportType</tt> <tt>oas30</tt> and <tt>swagger</tt>, any
--   combination of the following parameters are supported:
--   <tt>extensions='integrations'</tt> or <tt>extensions='apigateway'</tt>
--   will export the API with x-amazon-apigateway-integration extensions.
--   <tt>extensions='authorizers'</tt> will export the API with
--   x-amazon-apigateway-authorizer extensions. <tt>postman</tt> will
--   export the API with Postman extensions, allowing for import to the
--   Postman tool
getExport_parameters :: Lens' GetExport (Maybe (HashMap Text Text))

-- | The content-type of the export, for example <tt>application/json</tt>.
--   Currently <tt>application/json</tt> and <tt>application/yaml</tt> are
--   supported for <tt>exportType</tt> of<tt>oas30</tt> and
--   <tt>swagger</tt>. This should be specified in the <tt>Accept</tt>
--   header for direct API requests.
getExport_accepts :: Lens' GetExport (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getExport_restApiId :: Lens' GetExport Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage that will be exported.</li>
--   </ul>
getExport_stageName :: Lens' GetExport Text

-- | <ul>
--   <li><i>Required</i> The type of export. Acceptable values are 'oas30'
--   for OpenAPI 3.0.x and 'swagger' for Swagger/OpenAPI 2.0.</li>
--   </ul>
getExport_exportType :: Lens' GetExport Text

-- | The binary blob response to GetExport, which contains the export.
getExportResponse_body :: Lens' GetExportResponse (Maybe ByteString)

-- | The content-disposition header value in the HTTP response.
getExportResponse_contentDisposition :: Lens' GetExportResponse (Maybe Text)

-- | The content-type header value in the HTTP response. This will
--   correspond to a valid 'accept' type in the request.
getExportResponse_contentType :: Lens' GetExportResponse (Maybe Text)

-- | The response's http status code.
getExportResponse_httpStatus :: Lens' GetExportResponse Int

-- | A string-to-string key-value map of query parameters
--   <tt>sdkType</tt>-dependent properties of the SDK. For <tt>sdkType</tt>
--   of <tt>objectivec</tt> or <tt>swift</tt>, a parameter named
--   <tt>classPrefix</tt> is required. For <tt>sdkType</tt> of
--   <tt>android</tt>, parameters named <tt>groupId</tt>,
--   <tt>artifactId</tt>, <tt>artifactVersion</tt>, and
--   <tt>invokerPackage</tt> are required. For <tt>sdkType</tt> of
--   <tt>java</tt>, parameters named <tt>serviceName</tt> and
--   <tt>javaPackageName</tt> are required.
getSdk_parameters :: Lens' GetSdk (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getSdk_restApiId :: Lens' GetSdk Text

-- | <ul>
--   <li><i>Required</i> The name of the Stage that the SDK will use.</li>
--   </ul>
getSdk_stageName :: Lens' GetSdk Text

-- | <ul>
--   <li><i>Required</i> The language for the generated SDK. Currently
--   <tt>java</tt>, <tt>javascript</tt>, <tt>android</tt>,
--   <tt>objectivec</tt> (for iOS), <tt>swift</tt> (for iOS), and
--   <tt>ruby</tt> are supported.</li>
--   </ul>
getSdk_sdkType :: Lens' GetSdk Text

-- | The binary blob response to GetSdk, which contains the generated SDK.
getSdkResponse_body :: Lens' GetSdkResponse (Maybe ByteString)

-- | The content-disposition header value in the HTTP response.
getSdkResponse_contentDisposition :: Lens' GetSdkResponse (Maybe Text)

-- | The content-type header value in the HTTP response.
getSdkResponse_contentType :: Lens' GetSdkResponse (Maybe Text)

-- | The response's http status code.
getSdkResponse_httpStatus :: Lens' GetSdkResponse Int

-- | A boolean flag to specify whether (<tt>true</tt>) or not
--   (<tt>false</tt>) the result contains key values.
getApiKeys_includeValues :: Lens' GetApiKeys (Maybe Bool)

-- | The identifier of a customer in AWS Marketplace or an external system,
--   such as a developer portal.
getApiKeys_customerId :: Lens' GetApiKeys (Maybe Text)

-- | The name of queried API keys.
getApiKeys_nameQuery :: Lens' GetApiKeys (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getApiKeys_limit :: Lens' GetApiKeys (Maybe Int)

-- | The current pagination position in the paged result set.
getApiKeys_position :: Lens' GetApiKeys (Maybe Text)

-- | The current page of elements from this collection.
getApiKeysResponse_items :: Lens' GetApiKeysResponse (Maybe [ApiKey])

-- | A list of warning messages logged during the import of API keys when
--   the <tt>failOnWarnings</tt> option is set to true.
getApiKeysResponse_warnings :: Lens' GetApiKeysResponse (Maybe [Text])

-- | Undocumented member.
getApiKeysResponse_position :: Lens' GetApiKeysResponse (Maybe Text)

-- | The response's http status code.
getApiKeysResponse_httpStatus :: Lens' GetApiKeysResponse Int

-- | <ul>
--   <li><i>Required</i> The domain name of the BasePathMapping resource to
--   delete.</li>
--   </ul>
deleteBasePathMapping_domainName :: Lens' DeleteBasePathMapping Text

-- | <ul>
--   <li><i>Required</i> The base path name of the BasePathMapping resource
--   to delete.</li>
--   </ul>
--   
--   To specify an empty base path, set this parameter to
--   <tt>'(none)'</tt>.
deleteBasePathMapping_basePath :: Lens' DeleteBasePathMapping Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateBasePathMapping_patchOperations :: Lens' UpdateBasePathMapping (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The domain name of the BasePathMapping resource to
--   change.</li>
--   </ul>
updateBasePathMapping_domainName :: Lens' UpdateBasePathMapping Text

-- | <ul>
--   <li><i>Required</i> The base path of the BasePathMapping resource to
--   change.</li>
--   </ul>
--   
--   To specify an empty base path, set this parameter to
--   <tt>'(none)'</tt>.
updateBasePathMapping_basePath :: Lens' UpdateBasePathMapping Text

-- | The name of the associated stage.
basePathMapping_stage :: Lens' BasePathMapping (Maybe Text)

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
basePathMapping_basePath :: Lens' BasePathMapping (Maybe Text)

-- | The string identifier of the associated RestApi.
basePathMapping_restApiId :: Lens' BasePathMapping (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The identifier of the ClientCertificate resource
--   to be deleted.</li>
--   </ul>
deleteClientCertificate_clientCertificateId :: Lens' DeleteClientCertificate Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateClientCertificate_patchOperations :: Lens' UpdateClientCertificate (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The identifier of the ClientCertificate resource
--   to be updated.</li>
--   </ul>
updateClientCertificate_clientCertificateId :: Lens' UpdateClientCertificate Text

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
clientCertificate_pemEncodedCertificate :: Lens' ClientCertificate (Maybe Text)

-- | The identifier of the client certificate.
clientCertificate_clientCertificateId :: Lens' ClientCertificate (Maybe Text)

-- | The timestamp when the client certificate was created.
clientCertificate_createdDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The timestamp when the client certificate will expire.
clientCertificate_expirationDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The description of the client certificate.
clientCertificate_description :: Lens' ClientCertificate (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
clientCertificate_tags :: Lens' ClientCertificate (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getGatewayResponse_restApiId :: Lens' GetGatewayResponse Text

-- | <ul>
--   <li><i>Required</i></li>
--   </ul>
--   
--   The response type of the associated GatewayResponse.
getGatewayResponse_responseType :: Lens' GetGatewayResponse GatewayResponseType

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
gatewayResponse_defaultResponse :: Lens' GatewayResponse (Maybe Bool)

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
gatewayResponse_responseTemplates :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | The response type of the associated GatewayResponse.
gatewayResponse_responseType :: Lens' GatewayResponse (Maybe GatewayResponseType)

-- | The HTTP status code for this GatewayResponse.
gatewayResponse_statusCode :: Lens' GatewayResponse (Maybe Text)

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
gatewayResponse_responseParameters :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlan resource representing the
--   usage plan containing the to-be-created UsagePlanKey resource
--   representing a plan customer.</li>
--   </ul>
createUsagePlanKey_usagePlanId :: Lens' CreateUsagePlanKey Text

-- | <ul>
--   <li><i>Required</i> The identifier of a UsagePlanKey resource for a
--   plan customer.</li>
--   </ul>
createUsagePlanKey_keyId :: Lens' CreateUsagePlanKey Text

-- | <ul>
--   <li><i>Required</i> The type of a UsagePlanKey resource for a plan
--   customer.</li>
--   </ul>
createUsagePlanKey_keyType :: Lens' CreateUsagePlanKey Text

-- | The value of a usage plan key.
usagePlanKey_value :: Lens' UsagePlanKey (Maybe Text)

-- | The name of a usage plan key.
usagePlanKey_name :: Lens' UsagePlanKey (Maybe Text)

-- | The Id of a usage plan key.
usagePlanKey_id :: Lens' UsagePlanKey (Maybe Text)

-- | The type of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
usagePlanKey_type :: Lens' UsagePlanKey (Maybe Text)

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
createAuthorizer_authorizerUri :: Lens' CreateAuthorizer (Maybe Text)

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
createAuthorizer_identityValidationExpression :: Lens' CreateAuthorizer (Maybe Text)

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
createAuthorizer_providerARNs :: Lens' CreateAuthorizer (Maybe [Text])

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
createAuthorizer_authorizerResultTtlInSeconds :: Lens' CreateAuthorizer (Maybe Int)

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
createAuthorizer_authType :: Lens' CreateAuthorizer (Maybe Text)

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
createAuthorizer_identitySource :: Lens' CreateAuthorizer (Maybe Text)

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
createAuthorizer_authorizerCredentials :: Lens' CreateAuthorizer (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createAuthorizer_restApiId :: Lens' CreateAuthorizer Text

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
createAuthorizer_name :: Lens' CreateAuthorizer Text

-- | <ul>
--   <li><i>Required</i> The authorizer type. Valid values are
--   <tt>TOKEN</tt> for a Lambda function using a single authorization
--   token submitted in a custom header, <tt>REQUEST</tt> for a Lambda
--   function using incoming request parameters, and
--   <tt>COGNITO_USER_POOLS</tt> for using an Amazon Cognito user
--   pool.</li>
--   </ul>
createAuthorizer_type :: Lens' CreateAuthorizer AuthorizerType

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
authorizer_authorizerUri :: Lens' Authorizer (Maybe Text)

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
authorizer_identityValidationExpression :: Lens' Authorizer (Maybe Text)

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
authorizer_providerARNs :: Lens' Authorizer (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
authorizer_name :: Lens' Authorizer (Maybe Text)

-- | The identifier for the authorizer resource.
authorizer_id :: Lens' Authorizer (Maybe Text)

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
authorizer_authorizerResultTtlInSeconds :: Lens' Authorizer (Maybe Int)

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
authorizer_authType :: Lens' Authorizer (Maybe Text)

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
authorizer_type :: Lens' Authorizer (Maybe AuthorizerType)

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
authorizer_identitySource :: Lens' Authorizer (Maybe Text)

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
authorizer_authorizerCredentials :: Lens' Authorizer (Maybe Text)

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateAuthorizer_patchOperations :: Lens' UpdateAuthorizer (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateAuthorizer_restApiId :: Lens' UpdateAuthorizer Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Authorizer resource.</li>
--   </ul>
updateAuthorizer_authorizerId :: Lens' UpdateAuthorizer Text

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
authorizer_authorizerUri :: Lens' Authorizer (Maybe Text)

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
authorizer_identityValidationExpression :: Lens' Authorizer (Maybe Text)

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
authorizer_providerARNs :: Lens' Authorizer (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
authorizer_name :: Lens' Authorizer (Maybe Text)

-- | The identifier for the authorizer resource.
authorizer_id :: Lens' Authorizer (Maybe Text)

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
authorizer_authorizerResultTtlInSeconds :: Lens' Authorizer (Maybe Int)

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
authorizer_authType :: Lens' Authorizer (Maybe Text)

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
authorizer_type :: Lens' Authorizer (Maybe AuthorizerType)

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
authorizer_identitySource :: Lens' Authorizer (Maybe Text)

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
authorizer_authorizerCredentials :: Lens' Authorizer (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteAuthorizer_restApiId :: Lens' DeleteAuthorizer Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Authorizer resource.</li>
--   </ul>
deleteAuthorizer_authorizerId :: Lens' DeleteAuthorizer Text

-- | <ul>
--   <li><i>Required</i> The ARN of a resource that can be tagged.</li>
--   </ul>
tagResource_resourceArn :: Lens' TagResource Text

-- | <ul>
--   <li><i>Required</i> The key-value map of strings. The valid character
--   set is</li>
--   <li><i>a-zA-Z+-=._:/</i> . The tag key can be up to 128 characters and
--   must not start with <tt>aws:</tt>. The tag value can be up to 256
--   characters.</li>
--   </ul>
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | A map that defines the stage variables for the new Stage resource.
--   Variable names can have alphanumeric and underscore characters, and
--   the values must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
createStage_variables :: Lens' CreateStage (Maybe (HashMap Text Text))

-- | The version of the associated API documentation.
createStage_documentationVersion :: Lens' CreateStage (Maybe Text)

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
createStage_tracingEnabled :: Lens' CreateStage (Maybe Bool)

-- | The stage's cache cluster size.
createStage_cacheClusterSize :: Lens' CreateStage (Maybe CacheClusterSize)

-- | The canary deployment settings of this stage.
createStage_canarySettings :: Lens' CreateStage (Maybe CanarySettings)

-- | Whether cache clustering is enabled for the stage.
createStage_cacheClusterEnabled :: Lens' CreateStage (Maybe Bool)

-- | The description of the Stage resource.
createStage_description :: Lens' CreateStage (Maybe Text)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
createStage_tags :: Lens' CreateStage (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createStage_restApiId :: Lens' CreateStage Text

-- | <ul>
--   <li><i>Required</i> The name for the Stage resource. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.</li>
--   </ul>
createStage_stageName :: Lens' CreateStage Text

-- | <ul>
--   <li><i>Required</i> The identifier of the Deployment resource for the
--   Stage resource.</li>
--   </ul>
createStage_deploymentId :: Lens' CreateStage Text

-- | The identifier of the Deployment that the stage points to.
stage_deploymentId :: Lens' Stage (Maybe Text)

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
stage_variables :: Lens' Stage (Maybe (HashMap Text Text))

-- | Settings for logging access in this stage.
stage_accessLogSettings :: Lens' Stage (Maybe AccessLogSettings)

-- | The version of the associated API documentation.
stage_documentationVersion :: Lens' Stage (Maybe Text)

-- | The identifier of a client certificate for an API stage.
stage_clientCertificateId :: Lens' Stage (Maybe Text)

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
stage_tracingEnabled :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was created.
stage_createdDate :: Lens' Stage (Maybe UTCTime)

-- | The status of the cache cluster for the stage, if enabled.
stage_cacheClusterStatus :: Lens' Stage (Maybe CacheClusterStatus)

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
stage_methodSettings :: Lens' Stage (Maybe (HashMap Text MethodSetting))

-- | The timestamp when the stage last updated.
stage_lastUpdatedDate :: Lens' Stage (Maybe UTCTime)

-- | The size of the cache cluster for the stage, if enabled.
stage_cacheClusterSize :: Lens' Stage (Maybe CacheClusterSize)

-- | The ARN of the WebAcl associated with the Stage.
stage_webAclArn :: Lens' Stage (Maybe Text)

-- | Settings for the canary deployment in this stage.
stage_canarySettings :: Lens' Stage (Maybe CanarySettings)

-- | Specifies whether a cache cluster is enabled for the stage.
stage_cacheClusterEnabled :: Lens' Stage (Maybe Bool)

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
stage_stageName :: Lens' Stage (Maybe Text)

-- | The stage's description.
stage_description :: Lens' Stage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
stage_tags :: Lens' Stage (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlan resource representing the
--   usage plan containing the to-be-deleted UsagePlanKey resource
--   representing a plan customer.</li>
--   </ul>
deleteUsagePlanKey_usagePlanId :: Lens' DeleteUsagePlanKey Text

-- | <ul>
--   <li><i>Required</i> The Id of the UsagePlanKey resource to be
--   deleted.</li>
--   </ul>
deleteUsagePlanKey_keyId :: Lens' DeleteUsagePlanKey Text

-- | <ul>
--   <li><i>Required</i> The ARN of a resource that can be tagged.</li>
--   </ul>
untagResource_resourceArn :: Lens' UntagResource Text

-- | <ul>
--   <li><i>Required</i> The Tag keys to delete.</li>
--   </ul>
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | Specifies whether the ApiKey can be used by callers.
createApiKey_enabled :: Lens' CreateApiKey (Maybe Bool)

-- | Specifies a value of the API key.
createApiKey_value :: Lens' CreateApiKey (Maybe Text)

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
createApiKey_customerId :: Lens' CreateApiKey (Maybe Text)

-- | Specifies whether (<tt>true</tt>) or not (<tt>false</tt>) the key
--   identifier is distinct from the created API key value. This parameter
--   is deprecated and should not be used.
createApiKey_generateDistinctId :: Lens' CreateApiKey (Maybe Bool)

-- | The name of the ApiKey.
createApiKey_name :: Lens' CreateApiKey (Maybe Text)

-- | DEPRECATED FOR USAGE PLANS - Specifies stages associated with the API
--   key.
createApiKey_stageKeys :: Lens' CreateApiKey (Maybe [StageKey])

-- | The description of the ApiKey.
createApiKey_description :: Lens' CreateApiKey (Maybe Text)

-- | The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
createApiKey_tags :: Lens' CreateApiKey (Maybe (HashMap Text Text))

-- | Specifies whether the API Key can be used by callers.
apiKey_enabled :: Lens' ApiKey (Maybe Bool)

-- | The value of the API Key.
apiKey_value :: Lens' ApiKey (Maybe Text)

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
apiKey_customerId :: Lens' ApiKey (Maybe Text)

-- | The timestamp when the API Key was created.
apiKey_createdDate :: Lens' ApiKey (Maybe UTCTime)

-- | The name of the API Key.
apiKey_name :: Lens' ApiKey (Maybe Text)

-- | The identifier of the API Key.
apiKey_id :: Lens' ApiKey (Maybe Text)

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
apiKey_stageKeys :: Lens' ApiKey (Maybe [Text])

-- | The timestamp when the API Key was last updated.
apiKey_lastUpdatedDate :: Lens' ApiKey (Maybe UTCTime)

-- | The description of the API Key.
apiKey_description :: Lens' ApiKey (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
apiKey_tags :: Lens' ApiKey (Maybe (HashMap Text Text))

-- | The identifier of the API key associated with the usage plans.
getUsagePlans_keyId :: Lens' GetUsagePlans (Maybe Text)

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getUsagePlans_limit :: Lens' GetUsagePlans (Maybe Int)

-- | The current pagination position in the paged result set.
getUsagePlans_position :: Lens' GetUsagePlans (Maybe Text)

-- | The current page of elements from this collection.
getUsagePlansResponse_items :: Lens' GetUsagePlansResponse (Maybe [UsagePlan])

-- | Undocumented member.
getUsagePlansResponse_position :: Lens' GetUsagePlansResponse (Maybe Text)

-- | The response's http status code.
getUsagePlansResponse_httpStatus :: Lens' GetUsagePlansResponse Int

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
putMethod_authorizationScopes :: Lens' PutMethod (Maybe [Text])

-- | The identifier of a RequestValidator for validating the method
--   request.
putMethod_requestValidatorId :: Lens' PutMethod (Maybe Text)

-- | Specifies the Model resources used for the request's content type.
--   Request models are represented as a key/value map, with a content type
--   as the key and a Model name as the value.
putMethod_requestModels :: Lens' PutMethod (Maybe (HashMap Text Text))

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key defines a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   body-mapping templates.
putMethod_requestParameters :: Lens' PutMethod (Maybe (HashMap Text Bool))

-- | Specifies the identifier of an Authorizer to use on this Method, if
--   the type is CUSTOM or COGNITO_USER_POOLS. The authorizer identifier is
--   generated by API Gateway when you created the authorizer.
putMethod_authorizerId :: Lens' PutMethod (Maybe Text)

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
putMethod_operationName :: Lens' PutMethod (Maybe Text)

-- | Specifies whether the method required a valid ApiKey.
putMethod_apiKeyRequired :: Lens' PutMethod (Maybe Bool)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
putMethod_restApiId :: Lens' PutMethod Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the new Method
--   resource.</li>
--   </ul>
putMethod_resourceId :: Lens' PutMethod Text

-- | <ul>
--   <li><i>Required</i> Specifies the method request's HTTP method
--   type.</li>
--   </ul>
putMethod_httpMethod :: Lens' PutMethod Text

-- | <ul>
--   <li><i>Required</i> The method's authorization type. Valid values are
--   <tt>NONE</tt> for open access, <tt>AWS_IAM</tt> for using AWS IAM
--   permissions, <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.</li>
--   </ul>
putMethod_authorizationType :: Lens' PutMethod Text

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodResponses :: Lens' Method (Maybe (HashMap Text MethodResponse))

-- | The method's HTTP verb.
method_httpMethod :: Lens' Method (Maybe Text)

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
method_authorizationScopes :: Lens' Method (Maybe [Text])

-- | The identifier of a RequestValidator for request validation.
method_requestValidatorId :: Lens' Method (Maybe Text)

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
method_requestModels :: Lens' Method (Maybe (HashMap Text Text))

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
method_requestParameters :: Lens' Method (Maybe (HashMap Text Bool))

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
method_authorizerId :: Lens' Method (Maybe Text)

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
method_operationName :: Lens' Method (Maybe Text)

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
method_authorizationType :: Lens' Method (Maybe Text)

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
method_apiKeyRequired :: Lens' Method (Maybe Bool)

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodIntegration :: Lens' Method (Maybe Integration)

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateDomainName_patchOperations :: Lens' UpdateDomainName (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The name of the DomainName resource to be
--   changed.</li>
--   </ul>
updateDomainName_domainName :: Lens' UpdateDomainName Text

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
domainName_regionalHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
domainName_certificateName :: Lens' DomainName (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
domainName_ownershipVerificationCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
domainName_regionalCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
domainName_certificateArn :: Lens' DomainName (Maybe Text)

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
domainName_distributionHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
domainName_securityPolicy :: Lens' DomainName (Maybe SecurityPolicy)

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
domainName_domainName :: Lens' DomainName (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
domainName_mutualTlsAuthentication :: Lens' DomainName (Maybe MutualTlsAuthentication)

-- | The name of the certificate that will be used for validating the
--   regional domain name.
domainName_regionalCertificateName :: Lens' DomainName (Maybe Text)

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
domainName_regionalDomainName :: Lens' DomainName (Maybe Text)

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
domainName_certificateUploadDate :: Lens' DomainName (Maybe UTCTime)

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
domainName_distributionDomainName :: Lens' DomainName (Maybe Text)

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
domainName_domainNameStatusMessage :: Lens' DomainName (Maybe Text)

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
domainName_endpointConfiguration :: Lens' DomainName (Maybe EndpointConfiguration)

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
domainName_domainNameStatus :: Lens' DomainName (Maybe DomainNameStatus)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
domainName_tags :: Lens' DomainName (Maybe (HashMap Text Text))

-- | <ul>
--   <li><i>Required</i> The name of the DomainName resource to be
--   deleted.</li>
--   </ul>
deleteDomainName_domainName :: Lens' DeleteDomainName Text

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
createResource_restApiId :: Lens' CreateResource Text

-- | <ul>
--   <li><i>Required</i> The parent resource's identifier.</li>
--   </ul>
createResource_parentId :: Lens' CreateResource Text

-- | The last path segment for this resource.
createResource_pathPart :: Lens' CreateResource Text

-- | The last path segment for this resource.
resource_pathPart :: Lens' Resource (Maybe Text)

-- | The full path for this resource.
resource_path :: Lens' Resource (Maybe Text)

-- | The resource's identifier.
resource_id :: Lens' Resource (Maybe Text)

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
resource_resourceMethods :: Lens' Resource (Maybe (HashMap Text Method))

-- | The parent resource's identifier.
resource_parentId :: Lens' Resource (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteMethod_restApiId :: Lens' DeleteMethod Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the Method
--   resource.</li>
--   </ul>
deleteMethod_resourceId :: Lens' DeleteMethod Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
deleteMethod_httpMethod :: Lens' DeleteMethod Text

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateMethod_patchOperations :: Lens' UpdateMethod (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateMethod_restApiId :: Lens' UpdateMethod Text

-- | <ul>
--   <li><i>Required</i> The Resource identifier for the Method
--   resource.</li>
--   </ul>
updateMethod_resourceId :: Lens' UpdateMethod Text

-- | <ul>
--   <li><i>Required</i> The HTTP verb of the Method resource.</li>
--   </ul>
updateMethod_httpMethod :: Lens' UpdateMethod Text

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodResponses :: Lens' Method (Maybe (HashMap Text MethodResponse))

-- | The method's HTTP verb.
method_httpMethod :: Lens' Method (Maybe Text)

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
method_authorizationScopes :: Lens' Method (Maybe [Text])

-- | The identifier of a RequestValidator for request validation.
method_requestValidatorId :: Lens' Method (Maybe Text)

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
method_requestModels :: Lens' Method (Maybe (HashMap Text Text))

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
method_requestParameters :: Lens' Method (Maybe (HashMap Text Bool))

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
method_authorizerId :: Lens' Method (Maybe Text)

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
method_operationName :: Lens' Method (Maybe Text)

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
method_authorizationType :: Lens' Method (Maybe Text)

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
method_apiKeyRequired :: Lens' Method (Maybe Bool)

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodIntegration :: Lens' Method (Maybe Integration)

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateRequestValidator_patchOperations :: Lens' UpdateRequestValidator (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
updateRequestValidator_restApiId :: Lens' UpdateRequestValidator Text

-- | <ul>
--   <li><i>Required</i> The identifier of RequestValidator to be
--   updated.</li>
--   </ul>
updateRequestValidator_requestValidatorId :: Lens' UpdateRequestValidator Text

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
requestValidator_validateRequestParameters :: Lens' RequestValidator (Maybe Bool)

-- | The name of this RequestValidator
requestValidator_name :: Lens' RequestValidator (Maybe Text)

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
requestValidator_validateRequestBody :: Lens' RequestValidator (Maybe Bool)

-- | The identifier of this RequestValidator.
requestValidator_id :: Lens' RequestValidator (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteRequestValidator_restApiId :: Lens' DeleteRequestValidator Text

-- | <ul>
--   <li><i>Required</i> The identifier of the RequestValidator to be
--   deleted.</li>
--   </ul>
deleteRequestValidator_requestValidatorId :: Lens' DeleteRequestValidator Text

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getSdkTypes_limit :: Lens' GetSdkTypes (Maybe Int)

-- | The current pagination position in the paged result set.
getSdkTypes_position :: Lens' GetSdkTypes (Maybe Text)

-- | The current page of elements from this collection.
getSdkTypesResponse_items :: Lens' GetSdkTypesResponse (Maybe [SdkType])

-- | Undocumented member.
getSdkTypesResponse_position :: Lens' GetSdkTypesResponse (Maybe Text)

-- | The response's http status code.
getSdkTypesResponse_httpStatus :: Lens' GetSdkTypesResponse Int

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getClientCertificates_limit :: Lens' GetClientCertificates (Maybe Int)

-- | The current pagination position in the paged result set.
getClientCertificates_position :: Lens' GetClientCertificates (Maybe Text)

-- | The current page of elements from this collection.
getClientCertificatesResponse_items :: Lens' GetClientCertificatesResponse (Maybe [ClientCertificate])

-- | Undocumented member.
getClientCertificatesResponse_position :: Lens' GetClientCertificatesResponse (Maybe Text)

-- | The response's http status code.
getClientCertificatesResponse_httpStatus :: Lens' GetClientCertificatesResponse Int

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
getModelTemplate_restApiId :: Lens' GetModelTemplate Text

-- | <ul>
--   <li><i>Required</i> The name of the model for which to generate a
--   template.</li>
--   </ul>
getModelTemplate_modelName :: Lens' GetModelTemplate Text

-- | The Apache <a>Velocity Template Language (VTL)</a> template content
--   used for the template resource.
getModelTemplateResponse_value :: Lens' GetModelTemplateResponse (Maybe Text)

-- | The response's http status code.
getModelTemplateResponse_httpStatus :: Lens' GetModelTemplateResponse Int

-- | A list of update operations to be applied to the specified resource
--   and in the order specified in this list.
updateDocumentationVersion_patchOperations :: Lens' UpdateDocumentationVersion (Maybe [PatchOperation])

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi..</li>
--   </ul>
updateDocumentationVersion_restApiId :: Lens' UpdateDocumentationVersion Text

-- | <ul>
--   <li><i>Required</i> The version identifier of the to-be-updated
--   documentation version.</li>
--   </ul>
updateDocumentationVersion_documentationVersion :: Lens' UpdateDocumentationVersion Text

-- | The date when the API documentation snapshot is created.
documentationVersion_createdDate :: Lens' DocumentationVersion (Maybe UTCTime)

-- | The version identifier of the API documentation snapshot.
documentationVersion_version :: Lens' DocumentationVersion (Maybe Text)

-- | The description of the API documentation snapshot.
documentationVersion_description :: Lens' DocumentationVersion (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The string identifier of the associated
--   RestApi.</li>
--   </ul>
deleteDocumentationVersion_restApiId :: Lens' DeleteDocumentationVersion Text

-- | <ul>
--   <li><i>Required</i> The version identifier of a to-be-deleted
--   documentation snapshot.</li>
--   </ul>
deleteDocumentationVersion_documentationVersion :: Lens' DeleteDocumentationVersion Text

-- | The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
getBasePathMappings_limit :: Lens' GetBasePathMappings (Maybe Int)

-- | The current pagination position in the paged result set.
getBasePathMappings_position :: Lens' GetBasePathMappings (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The domain name of a BasePathMapping
--   resource.</li>
--   </ul>
getBasePathMappings_domainName :: Lens' GetBasePathMappings Text

-- | The current page of elements from this collection.
getBasePathMappingsResponse_items :: Lens' GetBasePathMappingsResponse (Maybe [BasePathMapping])

-- | Undocumented member.
getBasePathMappingsResponse_position :: Lens' GetBasePathMappingsResponse (Maybe Text)

-- | The response's http status code.
getBasePathMappingsResponse_httpStatus :: Lens' GetBasePathMappingsResponse Int

-- | A boolean flag to specify whether (<tt>true</tt>) or not
--   (<tt>false</tt>) the result contains the key value.
getApiKey_includeValue :: Lens' GetApiKey (Maybe Bool)

-- | <ul>
--   <li><i>Required</i> The identifier of the ApiKey resource.</li>
--   </ul>
getApiKey_apiKey :: Lens' GetApiKey Text

-- | Specifies whether the API Key can be used by callers.
apiKey_enabled :: Lens' ApiKey (Maybe Bool)

-- | The value of the API Key.
apiKey_value :: Lens' ApiKey (Maybe Text)

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
apiKey_customerId :: Lens' ApiKey (Maybe Text)

-- | The timestamp when the API Key was created.
apiKey_createdDate :: Lens' ApiKey (Maybe UTCTime)

-- | The name of the API Key.
apiKey_name :: Lens' ApiKey (Maybe Text)

-- | The identifier of the API Key.
apiKey_id :: Lens' ApiKey (Maybe Text)

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
apiKey_stageKeys :: Lens' ApiKey (Maybe [Text])

-- | The timestamp when the API Key was last updated.
apiKey_lastUpdatedDate :: Lens' ApiKey (Maybe UTCTime)

-- | The description of the API Key.
apiKey_description :: Lens' ApiKey (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
apiKey_tags :: Lens' ApiKey (Maybe (HashMap Text Text))

-- | A single line format of the access logs of data, as specified by
--   selected <a>$context variables</a>. The format must include at least
--   <tt>$context.requestId</tt>.
accessLogSettings_format :: Lens' AccessLogSettings (Maybe Text)

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or
--   Kinesis Data Firehose delivery stream to receive access logs. If you
--   specify a Kinesis Data Firehose delivery stream, the stream name must
--   begin with <tt>amazon-apigateway-</tt>.
accessLogSettings_destinationArn :: Lens' AccessLogSettings (Maybe Text)

-- | The version of the API keys used for the account.
account_apiKeyVersion :: Lens' Account (Maybe Text)

-- | The ARN of an Amazon CloudWatch role for the current Account.
account_cloudwatchRoleArn :: Lens' Account (Maybe Text)

-- | A list of features supported for the account. When usage plans are
--   enabled, the features list will include an entry of
--   <tt>"UsagePlans"</tt>.
account_features :: Lens' Account (Maybe [Text])

-- | Specifies the API request limits configured for the current Account.
account_throttleSettings :: Lens' Account (Maybe ThrottleSettings)

-- | Specifies whether the API Key can be used by callers.
apiKey_enabled :: Lens' ApiKey (Maybe Bool)

-- | The value of the API Key.
apiKey_value :: Lens' ApiKey (Maybe Text)

-- | An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
apiKey_customerId :: Lens' ApiKey (Maybe Text)

-- | The timestamp when the API Key was created.
apiKey_createdDate :: Lens' ApiKey (Maybe UTCTime)

-- | The name of the API Key.
apiKey_name :: Lens' ApiKey (Maybe Text)

-- | The identifier of the API Key.
apiKey_id :: Lens' ApiKey (Maybe Text)

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
apiKey_stageKeys :: Lens' ApiKey (Maybe [Text])

-- | The timestamp when the API Key was last updated.
apiKey_lastUpdatedDate :: Lens' ApiKey (Maybe UTCTime)

-- | The description of the API Key.
apiKey_description :: Lens' ApiKey (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
apiKey_tags :: Lens' ApiKey (Maybe (HashMap Text Text))

-- | API stage name of the associated API stage in a usage plan.
apiStage_stage :: Lens' ApiStage (Maybe Text)

-- | API Id of the associated API stage in a usage plan.
apiStage_apiId :: Lens' ApiStage (Maybe Text)

-- | Map containing method level throttling information for API stage in a
--   usage plan.
apiStage_throttle :: Lens' ApiStage (Maybe (HashMap Text ThrottleSettings))

-- | Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
authorizer_authorizerUri :: Lens' Authorizer (Maybe Text)

-- | A validation expression for the incoming identity token. For
--   <tt>TOKEN</tt> authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
authorizer_identityValidationExpression :: Lens' Authorizer (Maybe Text)

-- | A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
authorizer_providerARNs :: Lens' Authorizer (Maybe [Text])

-- | <ul>
--   <li><i>Required</i> The name of the authorizer.</li>
--   </ul>
authorizer_name :: Lens' Authorizer (Maybe Text)

-- | The identifier for the authorizer resource.
authorizer_id :: Lens' Authorizer (Maybe Text)

-- | The TTL in seconds of cached authorizer results. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway will cache authorizer responses. If this field is not set, the
--   default value is 300. The maximum value is 3600, or 1 hour.
authorizer_authorizerResultTtlInSeconds :: Lens' Authorizer (Maybe Int)

-- | Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
authorizer_authType :: Lens' Authorizer (Maybe Text)

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
authorizer_type :: Lens' Authorizer (Maybe AuthorizerType)

-- | The identity source for which authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
authorizer_identitySource :: Lens' Authorizer (Maybe Text)

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, specify null.
authorizer_authorizerCredentials :: Lens' Authorizer (Maybe Text)

-- | The name of the associated stage.
basePathMapping_stage :: Lens' BasePathMapping (Maybe Text)

-- | The base path name that callers of the API must provide as part of the
--   URL after the domain name.
basePathMapping_basePath :: Lens' BasePathMapping (Maybe Text)

-- | The string identifier of the associated RestApi.
basePathMapping_restApiId :: Lens' BasePathMapping (Maybe Text)

-- | The ID of the canary deployment.
canarySettings_deploymentId :: Lens' CanarySettings (Maybe Text)

-- | Stage variables overridden for a canary release deployment, including
--   new stage variables introduced in the canary. These stage variables
--   are represented as a string-to-string map between stage variable names
--   and their values.
canarySettings_stageVariableOverrides :: Lens' CanarySettings (Maybe (HashMap Text Text))

-- | A Boolean flag to indicate whether the canary deployment uses the
--   stage cache or not.
canarySettings_useStageCache :: Lens' CanarySettings (Maybe Bool)

-- | The percent (0-100) of traffic diverted to a canary deployment.
canarySettings_percentTraffic :: Lens' CanarySettings (Maybe Double)

-- | The PEM-encoded public key of the client certificate, which can be
--   used to configure certificate authentication in the integration
--   endpoint .
clientCertificate_pemEncodedCertificate :: Lens' ClientCertificate (Maybe Text)

-- | The identifier of the client certificate.
clientCertificate_clientCertificateId :: Lens' ClientCertificate (Maybe Text)

-- | The timestamp when the client certificate was created.
clientCertificate_createdDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The timestamp when the client certificate will expire.
clientCertificate_expirationDate :: Lens' ClientCertificate (Maybe UTCTime)

-- | The description of the client certificate.
clientCertificate_description :: Lens' ClientCertificate (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
clientCertificate_tags :: Lens' ClientCertificate (Maybe (HashMap Text Text))

-- | A summary of the RestApi at the date and time that the deployment
--   resource was created.
deployment_apiSummary :: Lens' Deployment (Maybe (HashMap Text (HashMap Text MethodSnapshot)))

-- | The date and time that the deployment resource was created.
deployment_createdDate :: Lens' Deployment (Maybe UTCTime)

-- | The identifier for the deployment resource.
deployment_id :: Lens' Deployment (Maybe Text)

-- | The description for the deployment resource.
deployment_description :: Lens' Deployment (Maybe Text)

-- | A stage variable overrides used for the canary release deployment.
--   They can override existing stage variables or add new stage variables
--   for the canary release deployment. These stage variables are
--   represented as a string-to-string map between stage variable names and
--   their values.
deploymentCanarySettings_stageVariableOverrides :: Lens' DeploymentCanarySettings (Maybe (HashMap Text Text))

-- | A Boolean flag to indicate whether the canary release deployment uses
--   the stage cache or not.
deploymentCanarySettings_useStageCache :: Lens' DeploymentCanarySettings (Maybe Bool)

-- | The percentage (0.0-100.0) of traffic routed to the canary deployment.
deploymentCanarySettings_percentTraffic :: Lens' DeploymentCanarySettings (Maybe Double)

-- | The location of the API entity to which the documentation applies.
--   Valid fields depend on the targeted API entity type. All the valid
--   location fields are not required. If not explicitly specified, a valid
--   location field is treated as a wildcard and associated documentation
--   content may be inherited by matching entities, unless overridden.
documentationPart_location :: Lens' DocumentationPart (Maybe DocumentationPartLocation)

-- | The DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
documentationPart_id :: Lens' DocumentationPart (Maybe Text)

-- | A content map of API-specific key-value pairs describing the targeted
--   API entity. The map must be encoded as a JSON string, e.g., <tt>"{
--   \"description\": \"The API does ...\" }"</tt>. Only OpenAPI-compliant
--   documentation-related fields from the properties map are exported and,
--   hence, published as part of the API entity definitions, while the
--   original documentation parts are exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
documentationPart_properties :: Lens' DocumentationPart (Maybe Text)

-- | The URL path of the target. It is a valid field for the API entity
--   types of <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. The default value is <tt>/</tt> for the
--   root resource. When an applicable child entity inherits the content of
--   another entity of the same type with more general specifications of
--   the other <tt>location</tt> attributes, the child entity's
--   <tt>path</tt> attribute must match that of the parent entity as a
--   prefix.
documentationPartLocation_path :: Lens' DocumentationPartLocation (Maybe Text)

-- | The name of the targeted API entity. It is a valid and required field
--   for the API entity types of <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt> and
--   <tt>RESPONSE_HEADER</tt>. It is an invalid field for any other entity
--   type.
documentationPartLocation_name :: Lens' DocumentationPartLocation (Maybe Text)

-- | The HTTP verb of a method. It is a valid field for the API entity
--   types of <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any
--   method. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>method</tt>
--   attribute must match that of the parent entity exactly.
documentationPartLocation_method :: Lens' DocumentationPartLocation (Maybe Text)

-- | The HTTP status code of a response. It is a valid field for the API
--   entity types of <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>, and
--   <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any status
--   code. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>statusCode</tt>
--   attribute must match that of the parent entity exactly.
documentationPartLocation_statusCode :: Lens' DocumentationPartLocation (Maybe Text)

-- | <ul>
--   <li><i>Required</i> The type of API entity to which the documentation
--   content applies. Valid values are <tt>API</tt>, <tt>AUTHORIZER</tt>,
--   <tt>MODEL</tt>, <tt>RESOURCE</tt>, <tt>METHOD</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. Content
--   inheritance does not apply to any entity of the <tt>API</tt>,
--   <tt>AUTHORIZER</tt>, <tt>METHOD</tt>, <tt>MODEL</tt>,
--   <tt>REQUEST_BODY</tt>, or <tt>RESOURCE</tt> type.</li>
--   </ul>
documentationPartLocation_type :: Lens' DocumentationPartLocation DocumentationPartType

-- | The date when the API documentation snapshot is created.
documentationVersion_createdDate :: Lens' DocumentationVersion (Maybe UTCTime)

-- | The version identifier of the API documentation snapshot.
documentationVersion_version :: Lens' DocumentationVersion (Maybe Text)

-- | The description of the API documentation snapshot.
documentationVersion_description :: Lens' DocumentationVersion (Maybe Text)

-- | The region-specific Amazon Route 53 Hosted Zone ID of the regional
--   endpoint. For more information, see <a>Set up a Regional Custom Domain
--   Name</a> and <a>AWS Regions and Endpoints for API Gateway</a>.
domainName_regionalHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The name of the certificate that will be used by edge-optimized
--   endpoint for this domain name.
domainName_certificateName :: Lens' DomainName (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
domainName_ownershipVerificationCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used for
--   validating the regional domain name. AWS Certificate Manager is the
--   only supported source.
domainName_regionalCertificateArn :: Lens' DomainName (Maybe Text)

-- | The reference to an AWS-managed certificate that will be used by
--   edge-optimized endpoint for this domain name. AWS Certificate Manager
--   is the only supported source.
domainName_certificateArn :: Lens' DomainName (Maybe Text)

-- | The region-agnostic Amazon Route 53 Hosted Zone ID of the
--   edge-optimized endpoint. The valid value is <tt>Z2FDTNDATAQYW2</tt>
--   for all the regions. For more information, see <a>Set up a Regional
--   Custom Domain Name</a> and <a>AWS Regions and Endpoints for API
--   Gateway</a>.
domainName_distributionHostedZoneId :: Lens' DomainName (Maybe Text)

-- | The Transport Layer Security (TLS) version + cipher suite for this
--   DomainName. The valid values are <tt>TLS_1_0</tt> and
--   <tt>TLS_1_2</tt>.
domainName_securityPolicy :: Lens' DomainName (Maybe SecurityPolicy)

-- | The custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
domainName_domainName :: Lens' DomainName (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
--   If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your API.
domainName_mutualTlsAuthentication :: Lens' DomainName (Maybe MutualTlsAuthentication)

-- | The name of the certificate that will be used for validating the
--   regional domain name.
domainName_regionalCertificateName :: Lens' DomainName (Maybe Text)

-- | The domain name associated with the regional endpoint for this custom
--   domain name. You set up this association by adding a DNS record that
--   points the custom domain name to this regional domain name. The
--   regional domain name is returned by API Gateway when you create a
--   regional endpoint.
domainName_regionalDomainName :: Lens' DomainName (Maybe Text)

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
domainName_certificateUploadDate :: Lens' DomainName (Maybe UTCTime)

-- | The domain name of the Amazon CloudFront distribution associated with
--   this custom domain name for an edge-optimized endpoint. You set up
--   this association when adding a DNS record pointing the custom domain
--   name to this distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
domainName_distributionDomainName :: Lens' DomainName (Maybe Text)

-- | An optional text message containing detailed information about status
--   of the DomainName migration.
domainName_domainNameStatusMessage :: Lens' DomainName (Maybe Text)

-- | The endpoint configuration of this DomainName showing the endpoint
--   types of the domain name.
domainName_endpointConfiguration :: Lens' DomainName (Maybe EndpointConfiguration)

-- | The status of the DomainName migration. The valid values are
--   <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
domainName_domainNameStatus :: Lens' DomainName (Maybe DomainNameStatus)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
domainName_tags :: Lens' DomainName (Maybe (HashMap Text Text))

-- | A list of endpoint types of an API (RestApi) or its custom domain name
--   (DomainName). For an edge-optimized API and its custom domain name,
--   the endpoint type is <tt>"EDGE"</tt>. For a regional API and its
--   custom domain name, the endpoint type is <tt>REGIONAL</tt>. For a
--   private API, the endpoint type is <tt>PRIVATE</tt>.
endpointConfiguration_types :: Lens' EndpointConfiguration (Maybe [EndpointType])

-- | A list of VpcEndpointIds of an API (RestApi) against which to create
--   Route53 ALIASes. It is only supported for <tt>PRIVATE</tt> endpoint
--   type.
endpointConfiguration_vpcEndpointIds :: Lens' EndpointConfiguration (Maybe [Text])

-- | A Boolean flag to indicate whether this GatewayResponse is the default
--   gateway response (<tt>true</tt>) or not (<tt>false</tt>). A default
--   gateway response is one generated by API Gateway without any
--   customization by an API developer.
gatewayResponse_defaultResponse :: Lens' GatewayResponse (Maybe Bool)

-- | Response templates of the GatewayResponse as a string-to-string map of
--   key-value pairs.
gatewayResponse_responseTemplates :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | The response type of the associated GatewayResponse.
gatewayResponse_responseType :: Lens' GatewayResponse (Maybe GatewayResponseType)

-- | The HTTP status code for this GatewayResponse.
gatewayResponse_statusCode :: Lens' GatewayResponse (Maybe Text)

-- | Response parameters (paths, query strings and headers) of the
--   GatewayResponse as a string-to-string map of key-value pairs.
gatewayResponse_responseParameters :: Lens' GatewayResponse (Maybe (HashMap Text Text))

-- | Specifies the integration's HTTP method type.
integration_httpMethod :: Lens' Integration (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value.
integration_requestTemplates :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
integration_credentials :: Lens' Integration (Maybe Text)

-- | The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
integration_connectionId :: Lens' Integration (Maybe Text)

-- | A key-value map specifying request parameters that are passed from the
--   method request to the back end. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the back end. The method request parameter
--   value must match the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> must be a valid and unique method request parameter
--   name.
integration_requestParameters :: Lens' Integration (Maybe (HashMap Text Text))

-- | Specifies how to handle request payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
integration_contentHandling :: Lens' Integration (Maybe ContentHandlingStrategy)

-- | Specifies how the method request body of an unmapped content type will
--   be passed through the integration request to the back end without
--   transformation. A content type is unmapped if no mapping template is
--   defined in the integration or the content type does not match any of
--   the mapped content types, as specified in <tt>requestTemplates</tt>.
--   The valid value is one of the following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
integration_passthroughBehavior :: Lens' Integration (Maybe Text)

-- | Specifies Uniform Resource Identifier (URI) of the integration
--   endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
integration_uri :: Lens' Integration (Maybe Text)

-- | Specifies the integration's responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
integration_integrationResponses :: Lens' Integration (Maybe (HashMap Text IntegrationResponse))

-- | Specifies the TLS configuration for an integration.
integration_tlsConfig :: Lens' Integration (Maybe TlsConfig)

-- | Specifies a group of related cached parameters. By default, API
--   Gateway uses the resource ID as the <tt>cacheNamespace</tt>. You can
--   specify the same <tt>cacheNamespace</tt> across resources to return
--   the same cached data for requests to different resources.
integration_cacheNamespace :: Lens' Integration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds. The default value
--   is 29,000 milliseconds or 29 seconds.
integration_timeoutInMillis :: Lens' Integration (Maybe Int)

-- | Specifies an API method integration type. The valid value is one of
--   the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
integration_type :: Lens' Integration (Maybe IntegrationType)

-- | The type of the network connection to the integration endpoint. The
--   valid value is <tt>INTERNET</tt> for connections through the public
--   routable internet or <tt>VPC_LINK</tt> for private connections between
--   API Gateway and a network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
integration_connectionType :: Lens' Integration (Maybe ConnectionType)

-- | A list of request parameters whose values API Gateway caches. To be
--   valid values for <tt>cacheKeyParameters</tt>, these parameters must
--   also be specified for Method <tt>requestParameters</tt>.
integration_cacheKeyParameters :: Lens' Integration (Maybe [Text])

-- | Specifies how to handle response payload content type conversions.
--   Supported values are <tt>CONVERT_TO_BINARY</tt> and
--   <tt>CONVERT_TO_TEXT</tt>, with the following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
integrationResponse_contentHandling :: Lens' IntegrationResponse (Maybe ContentHandlingStrategy)

-- | Specifies the templates used to transform the integration response
--   body. Response templates are represented as a key/value map, with a
--   content-type as the key and a template as the value.
integrationResponse_responseTemplates :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | Specifies the regular expression (regex) pattern used to choose an
--   integration response based on the response from the back end. For
--   example, if the success response returns nothing and the error
--   response returns some string, you could use the <tt>.+</tt> regex to
--   match error response. However, make sure that the error response does
--   not contain any newline (<tt>\n</tt>) character in such cases. If the
--   back end is an AWS Lambda function, the AWS Lambda function error
--   header is matched. For all other HTTP and AWS back ends, the HTTP
--   status code is matched.
integrationResponse_selectionPattern :: Lens' IntegrationResponse (Maybe Text)

-- | Specifies the status code that is used to map the integration response
--   to an existing MethodResponse.
integrationResponse_statusCode :: Lens' IntegrationResponse (Maybe Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the back end. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of <tt>method.response.header.{name}</tt>,
--   where <tt>name</tt> is a valid and unique header name. The mapped
--   non-static value must match the pattern of
--   <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
integrationResponse_responseParameters :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodResponses :: Lens' Method (Maybe (HashMap Text MethodResponse))

-- | The method's HTTP verb.
method_httpMethod :: Lens' Method (Maybe Text)

-- | A list of authorization scopes configured on the method. The scopes
--   are used with a <tt>COGNITO_USER_POOLS</tt> authorizer to authorize
--   the method invocation. The authorization works by matching the method
--   scopes against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
method_authorizationScopes :: Lens' Method (Maybe [Text])

-- | The identifier of a RequestValidator for request validation.
method_requestValidatorId :: Lens' Method (Maybe Text)

-- | A key-value map specifying data schemas, represented by Model
--   resources, (as the mapped value) of the request payloads of given
--   content types (as the mapping key).
method_requestModels :: Lens' Method (Maybe (HashMap Text Text))

-- | A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
method_requestParameters :: Lens' Method (Maybe (HashMap Text Bool))

-- | The identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
method_authorizerId :: Lens' Method (Maybe Text)

-- | A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
method_operationName :: Lens' Method (Maybe Text)

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
method_authorizationType :: Lens' Method (Maybe Text)

-- | A boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
method_apiKeyRequired :: Lens' Method (Maybe Bool)

-- | Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
method_methodIntegration :: Lens' Method (Maybe Integration)

-- | Specifies the Model resources used for the response's content-type.
--   Response models are represented as a key/value map, with a
--   content-type as the key and a Model name as the value.
methodResponse_responseModels :: Lens' MethodResponse (Maybe (HashMap Text Text))

-- | The method response's status code.
methodResponse_statusCode :: Lens' MethodResponse (Maybe Text)

-- | A key-value map specifying required or optional response parameters
--   that API Gateway can send back to the caller. A key defines a method
--   response header and the value specifies whether the associated method
--   response header is required or not. The expression of the key must
--   match the pattern <tt>method.response.header.{name}</tt>, where
--   <tt>name</tt> is a valid and unique header name. API Gateway passes
--   certain integration response data to the method response headers
--   specified here according to the mapping you prescribe in the API's
--   IntegrationResponse. The integration response data that can be mapped
--   include an integration response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
methodResponse_responseParameters :: Lens' MethodResponse (Maybe (HashMap Text Bool))

-- | Specifies the time to live (TTL), in seconds, for cached responses.
--   The higher the TTL, the longer the response will be cached. The PATCH
--   path for this setting is
--   <tt>/{method_setting_key}/caching/ttlInSeconds</tt>, and the value is
--   an integer.
methodSetting_cacheTtlInSeconds :: Lens' MethodSetting (Maybe Int)

-- | Specifies whether data trace logging is enabled for this method, which
--   affects the log entries pushed to Amazon CloudWatch Logs. The PATCH
--   path for this setting is
--   <tt>/{method_setting_key}/logging/dataTrace</tt>, and the value is a
--   Boolean.
methodSetting_dataTraceEnabled :: Lens' MethodSetting (Maybe Bool)

-- | Specifies the throttling burst limit. The PATCH path for this setting
--   is <tt>/{method_setting_key}/throttling/burstLimit</tt>, and the value
--   is an integer.
methodSetting_throttlingBurstLimit :: Lens' MethodSetting (Maybe Int)

-- | Specifies whether the cached responses are encrypted. The PATCH path
--   for this setting is
--   <tt>/{method_setting_key}/caching/dataEncrypted</tt>, and the value is
--   a Boolean.
methodSetting_cacheDataEncrypted :: Lens' MethodSetting (Maybe Bool)

-- | Specifies the logging level for this method, which affects the log
--   entries pushed to Amazon CloudWatch Logs. The PATCH path for this
--   setting is <tt>/{method_setting_key}/logging/loglevel</tt>, and the
--   available levels are <tt>OFF</tt>, <tt>ERROR</tt>, and <tt>INFO</tt>.
--   Choose <tt>ERROR</tt> to write only error-level entries to CloudWatch
--   Logs, or choose <tt>INFO</tt> to include all <tt>ERROR</tt> events as
--   well as extra informational events.
methodSetting_loggingLevel :: Lens' MethodSetting (Maybe Text)

-- | Specifies whether authorization is required for a cache invalidation
--   request. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/requireAuthorizationForCacheControl</tt>,
--   and the value is a Boolean.
methodSetting_requireAuthorizationForCacheControl :: Lens' MethodSetting (Maybe Bool)

-- | Specifies whether responses should be cached and returned for
--   requests. A cache cluster must be enabled on the stage for responses
--   to be cached. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/enabled</tt>, and the value is a
--   Boolean.
methodSetting_cachingEnabled :: Lens' MethodSetting (Maybe Bool)

-- | Specifies whether Amazon CloudWatch metrics are enabled for this
--   method. The PATCH path for this setting is
--   <tt>/{method_setting_key}/metrics/enabled</tt>, and the value is a
--   Boolean.
methodSetting_metricsEnabled :: Lens' MethodSetting (Maybe Bool)

-- | Specifies the throttling rate limit. The PATCH path for this setting
--   is <tt>/{method_setting_key}/throttling/rateLimit</tt>, and the value
--   is a double.
methodSetting_throttlingRateLimit :: Lens' MethodSetting (Maybe Double)

-- | Specifies how to handle unauthorized requests for cache invalidation.
--   The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/unauthorizedCacheControlHeaderStrategy</tt>,
--   and the available values are <tt>FAIL_WITH_403</tt>,
--   <tt>SUCCEED_WITH_RESPONSE_HEADER</tt>,
--   <tt>SUCCEED_WITHOUT_RESPONSE_HEADER</tt>.
methodSetting_unauthorizedCacheControlHeaderStrategy :: Lens' MethodSetting (Maybe UnauthorizedCacheControlHeaderStrategy)

-- | The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
methodSnapshot_authorizationType :: Lens' MethodSnapshot (Maybe Text)

-- | Specifies whether the method requires a valid ApiKey.
methodSnapshot_apiKeyRequired :: Lens' MethodSnapshot (Maybe Bool)

-- | The schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model. Do not include "\*/"
--   characters in the description of any properties because such "\*/"
--   characters may be interpreted as the closing marker for comments in
--   some languages, such as Java or JavaScript, causing the installation
--   of your API's SDK generated by API Gateway to fail.
model_schema :: Lens' Model (Maybe Text)

-- | The name of the model. Must be an alphanumeric string.
model_name :: Lens' Model (Maybe Text)

-- | The identifier for the model resource.
model_id :: Lens' Model (Maybe Text)

-- | The description of the model.
model_description :: Lens' Model (Maybe Text)

-- | The content-type for the model.
model_contentType :: Lens' Model (Maybe Text)

-- | A list of warnings that API Gateway returns while processing your
--   truststore. Invalid certificates produce warnings. Mutual TLS is still
--   enabled, but some clients might not be able to access your API. To
--   resolve warnings, upload a new truststore to S3, and then update you
--   domain name to use the new version.
mutualTlsAuthentication_truststoreWarnings :: Lens' MutualTlsAuthentication (Maybe [Text])

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
mutualTlsAuthentication_truststoreUri :: Lens' MutualTlsAuthentication (Maybe Text)

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
mutualTlsAuthentication_truststoreVersion :: Lens' MutualTlsAuthentication (Maybe Text)

-- | An Amazon S3 resource ARN that specifies the truststore for mutual TLS
--   authentication, for example, <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
mutualTlsAuthenticationInput_truststoreUri :: Lens' MutualTlsAuthenticationInput (Maybe Text)

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
mutualTlsAuthenticationInput_truststoreVersion :: Lens' MutualTlsAuthenticationInput (Maybe Text)

-- | An update operation to be performed with this PATCH request. The valid
--   value can be <tt>add</tt>, <tt>remove</tt>, <tt>replace</tt> or
--   <tt>copy</tt>. Not all valid operations are supported for a given
--   resource. Support of the operations depends on specific operational
--   contexts. Attempts to apply an unsupported operation on a resource
--   will return an error message.
patchOperation_op :: Lens' PatchOperation (Maybe Op)

-- | The <tt>op</tt> operation's target, as identified by a <a>JSON
--   Pointer</a> value that references a location within the targeted
--   resource. For example, if the target resource has an updateable
--   property of <tt>{"name":"value"}</tt>, the path for this property is
--   <tt>/name</tt>. If the <tt>name</tt> property value is a JSON object
--   (e.g., <tt>{"name": {"child/name": "child-value"}}</tt>), the path for
--   the <tt>child/name</tt> property will be <tt>/name/child~1name</tt>.
--   Any slash ("/") character appearing in path names must be escaped with
--   "~1", as shown in the example above. Each <tt>op</tt> operation can
--   have only one <tt>path</tt> associated with it.
patchOperation_path :: Lens' PatchOperation (Maybe Text)

-- | The new target value of the update operation. It is applicable for the
--   <tt>add</tt> or <tt>replace</tt> operation. When using AWS CLI to
--   update a property of a JSON value, enclose the JSON object with a pair
--   of single quotes in a Linux shell, e.g., '{"a": ...}'. In a Windows
--   shell, see <a>Using JSON for Parameters</a>.
patchOperation_value :: Lens' PatchOperation (Maybe Text)

-- | The <tt>copy</tt> update operation's source as identified by a
--   <tt>JSON-Pointer</tt> value referencing the location within the
--   targeted resource to copy the value from. For example, to promote a
--   canary deployment, you copy the canary deployment ID to the affiliated
--   deployment ID by calling a PATCH request on a Stage resource with
--   <tt>"op":"copy"</tt>, <tt>"from":"/canarySettings/deploymentId"</tt>
--   and <tt>"path":"/deploymentId"</tt>.
patchOperation_from :: Lens' PatchOperation (Maybe Text)

-- | The day that a time period starts. For example, with a time period of
--   <tt>WEEK</tt>, an offset of <tt>0</tt> starts on Sunday, and an offset
--   of <tt>1</tt> starts on Monday.
quotaSettings_offset :: Lens' QuotaSettings (Maybe Int)

-- | The time period in which the limit applies. Valid values are "DAY",
--   "WEEK" or "MONTH".
quotaSettings_period :: Lens' QuotaSettings (Maybe QuotaPeriodType)

-- | The maximum number of requests that can be made in a given time
--   period.
quotaSettings_limit :: Lens' QuotaSettings (Maybe Int)

-- | A Boolean flag to indicate whether to validate request parameters
--   (<tt>true</tt>) or not (<tt>false</tt>).
requestValidator_validateRequestParameters :: Lens' RequestValidator (Maybe Bool)

-- | The name of this RequestValidator
requestValidator_name :: Lens' RequestValidator (Maybe Text)

-- | A Boolean flag to indicate whether to validate a request body
--   according to the configured Model schema.
requestValidator_validateRequestBody :: Lens' RequestValidator (Maybe Bool)

-- | The identifier of this RequestValidator.
requestValidator_id :: Lens' RequestValidator (Maybe Text)

-- | The last path segment for this resource.
resource_pathPart :: Lens' Resource (Maybe Text)

-- | The full path for this resource.
resource_path :: Lens' Resource (Maybe Text)

-- | The resource's identifier.
resource_id :: Lens' Resource (Maybe Text)

-- | Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
resource_resourceMethods :: Lens' Resource (Maybe (HashMap Text Method))

-- | The parent resource's identifier.
resource_parentId :: Lens' Resource (Maybe Text)

-- | A nullable integer that is used to enable compression (with
--   non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable
--   compression (with a null value) on an API. When compression is
--   enabled, compression or decompression is not applied on the payload if
--   the payload size is smaller than this value. Setting it to zero allows
--   compression for any payload size.
restApi_minimumCompressionSize :: Lens' RestApi (Maybe Int)

-- | Specifies whether clients can invoke your API by using the default
--   <tt>execute-api</tt> endpoint. By default, clients can invoke your API
--   with the default https://{api_id}.execute-api.{region}.amazonaws.com
--   endpoint. To require that clients use a custom domain name to invoke
--   your API, disable the default endpoint.
restApi_disableExecuteApiEndpoint :: Lens' RestApi (Maybe Bool)

-- | The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
restApi_binaryMediaTypes :: Lens' RestApi (Maybe [Text])

-- | The warning messages reported when <tt>failonwarnings</tt> is turned
--   on during API import.
restApi_warnings :: Lens' RestApi (Maybe [Text])

-- | The timestamp when the API was created.
restApi_createdDate :: Lens' RestApi (Maybe UTCTime)

-- | The API's name.
restApi_name :: Lens' RestApi (Maybe Text)

-- | A version identifier for the API.
restApi_version :: Lens' RestApi (Maybe Text)

-- | The source of the API key for metering requests according to a usage
--   plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
restApi_apiKeySource :: Lens' RestApi (Maybe ApiKeySourceType)

-- | The API's identifier. This identifier is unique across all of your
--   APIs in API Gateway.
restApi_id :: Lens' RestApi (Maybe Text)

-- | A stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
restApi_policy :: Lens' RestApi (Maybe Text)

-- | The endpoint configuration of this RestApi showing the endpoint types
--   of the API.
restApi_endpointConfiguration :: Lens' RestApi (Maybe EndpointConfiguration)

-- | The API's description.
restApi_description :: Lens' RestApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
restApi_tags :: Lens' RestApi (Maybe (HashMap Text Text))

-- | The user-friendly name of an SdkType configuration property.
sdkConfigurationProperty_friendlyName :: Lens' SdkConfigurationProperty (Maybe Text)

-- | A boolean flag of an SdkType configuration property to indicate if the
--   associated SDK configuration property is required (<tt>true</tt>) or
--   not (<tt>false</tt>).
sdkConfigurationProperty_required :: Lens' SdkConfigurationProperty (Maybe Bool)

-- | The name of a an SdkType configuration property.
sdkConfigurationProperty_name :: Lens' SdkConfigurationProperty (Maybe Text)

-- | The default value of an SdkType configuration property.
sdkConfigurationProperty_defaultValue :: Lens' SdkConfigurationProperty (Maybe Text)

-- | The description of an SdkType configuration property.
sdkConfigurationProperty_description :: Lens' SdkConfigurationProperty (Maybe Text)

-- | The user-friendly name of an SdkType instance.
sdkType_friendlyName :: Lens' SdkType (Maybe Text)

-- | A list of configuration properties of an SdkType.
sdkType_configurationProperties :: Lens' SdkType (Maybe [SdkConfigurationProperty])

-- | The identifier of an SdkType instance.
sdkType_id :: Lens' SdkType (Maybe Text)

-- | The description of an SdkType.
sdkType_description :: Lens' SdkType (Maybe Text)

-- | The identifier of the Deployment that the stage points to.
stage_deploymentId :: Lens' Stage (Maybe Text)

-- | A map that defines the stage variables for a Stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
stage_variables :: Lens' Stage (Maybe (HashMap Text Text))

-- | Settings for logging access in this stage.
stage_accessLogSettings :: Lens' Stage (Maybe AccessLogSettings)

-- | The version of the associated API documentation.
stage_documentationVersion :: Lens' Stage (Maybe Text)

-- | The identifier of a client certificate for an API stage.
stage_clientCertificateId :: Lens' Stage (Maybe Text)

-- | Specifies whether active tracing with X-ray is enabled for the Stage.
stage_tracingEnabled :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was created.
stage_createdDate :: Lens' Stage (Maybe UTCTime)

-- | The status of the cache cluster for the stage, if enabled.
stage_cacheClusterStatus :: Lens' Stage (Maybe CacheClusterStatus)

-- | A map that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
stage_methodSettings :: Lens' Stage (Maybe (HashMap Text MethodSetting))

-- | The timestamp when the stage last updated.
stage_lastUpdatedDate :: Lens' Stage (Maybe UTCTime)

-- | The size of the cache cluster for the stage, if enabled.
stage_cacheClusterSize :: Lens' Stage (Maybe CacheClusterSize)

-- | The ARN of the WebAcl associated with the Stage.
stage_webAclArn :: Lens' Stage (Maybe Text)

-- | Settings for the canary deployment in this stage.
stage_canarySettings :: Lens' Stage (Maybe CanarySettings)

-- | Specifies whether a cache cluster is enabled for the stage.
stage_cacheClusterEnabled :: Lens' Stage (Maybe Bool)

-- | The name of the stage is the first path segment in the Uniform
--   Resource Identifier (URI) of a call to API Gateway. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
stage_stageName :: Lens' Stage (Maybe Text)

-- | The stage's description.
stage_description :: Lens' Stage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
stage_tags :: Lens' Stage (Maybe (HashMap Text Text))

-- | The string identifier of the associated RestApi.
stageKey_restApiId :: Lens' StageKey (Maybe Text)

-- | The stage name associated with the stage key.
stageKey_stageName :: Lens' StageKey (Maybe Text)

-- | The API request burst limit, the maximum rate limit over a time
--   ranging from one to a few seconds, depending upon whether the
--   underlying token bucket is at its full capacity.
throttleSettings_burstLimit :: Lens' ThrottleSettings (Maybe Int)

-- | The API request steady-state rate limit.
throttleSettings_rateLimit :: Lens' ThrottleSettings (Maybe Double)

-- | Specifies whether or not API Gateway skips verification that the
--   certificate for an integration endpoint is issued by a <a>supported
--   certificate authority</a>. This isn’t recommended, but it enables you
--   to use certificates that are signed by private certificate
--   authorities, or certificates that are self-signed. If enabled, API
--   Gateway still performs basic certificate validation, which includes
--   checking the certificate's expiration date, hostname, and presence of
--   a root certificate authority. Supported only for <tt>HTTP</tt> and
--   <tt>HTTP_PROXY</tt> integrations.
tlsConfig_insecureSkipVerification :: Lens' TlsConfig (Maybe Bool)

-- | The plan Id associated with this usage data.
usage_usagePlanId :: Lens' Usage (Maybe Text)

-- | The ending date of the usage data.
usage_endDate :: Lens' Usage (Maybe Text)

-- | The usage data, as daily logs of used and remaining quotas, over the
--   specified time interval indexed over the API keys in a usage plan. For
--   example, <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
--   [100, 10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value
--   and the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
usage_items :: Lens' Usage (Maybe (HashMap Text [[Integer]]))

-- | The starting date of the usage data.
usage_startDate :: Lens' Usage (Maybe Text)

-- | Undocumented member.
usage_position :: Lens' Usage (Maybe Text)

-- | The associated API stages of a usage plan.
usagePlan_apiStages :: Lens' UsagePlan (Maybe [ApiStage])

-- | The name of a usage plan.
usagePlan_name :: Lens' UsagePlan (Maybe Text)

-- | The identifier of a UsagePlan resource.
usagePlan_id :: Lens' UsagePlan (Maybe Text)

-- | The request throttle limits of a usage plan.
usagePlan_throttle :: Lens' UsagePlan (Maybe ThrottleSettings)

-- | The maximum number of permitted requests per a given unit time
--   interval.
usagePlan_quota :: Lens' UsagePlan (Maybe QuotaSettings)

-- | The description of a usage plan.
usagePlan_description :: Lens' UsagePlan (Maybe Text)

-- | The AWS Markeplace product identifier to associate with the usage plan
--   as a SaaS product on AWS Marketplace.
usagePlan_productCode :: Lens' UsagePlan (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
usagePlan_tags :: Lens' UsagePlan (Maybe (HashMap Text Text))

-- | The value of a usage plan key.
usagePlanKey_value :: Lens' UsagePlanKey (Maybe Text)

-- | The name of a usage plan key.
usagePlanKey_name :: Lens' UsagePlanKey (Maybe Text)

-- | The Id of a usage plan key.
usagePlanKey_id :: Lens' UsagePlanKey (Maybe Text)

-- | The type of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
usagePlanKey_type :: Lens' UsagePlanKey (Maybe Text)

-- | The status of the VPC link. The valid values are <tt>AVAILABLE</tt>,
--   <tt>PENDING</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an
--   API will wait if the status is <tt>PENDING</tt> and will fail if the
--   status is <tt>DELETING</tt>.
vpcLink_status :: Lens' VpcLink (Maybe VpcLinkStatus)

-- | The ARN of the network load balancer of the VPC targeted by the VPC
--   link. The network load balancer must be owned by the same AWS account
--   of the API owner.
vpcLink_targetArns :: Lens' VpcLink (Maybe [Text])

-- | The name used to label and identify the VPC link.
vpcLink_name :: Lens' VpcLink (Maybe Text)

-- | A description about the VPC link status.
vpcLink_statusMessage :: Lens' VpcLink (Maybe Text)

-- | The identifier of the VpcLink. It is used in an Integration to
--   reference this VpcLink.
vpcLink_id :: Lens' VpcLink (Maybe Text)

-- | The description of the VPC link.
vpcLink_description :: Lens' VpcLink (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
vpcLink_tags :: Lens' VpcLink (Maybe (HashMap Text Text))


module Amazonka.APIGateway.Waiters


-- | Derived from API version <tt>2015-07-09</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon API Gateway
--   
--   Amazon API Gateway helps developers deliver robust, secure, and
--   scalable mobile and web application back ends. API Gateway allows
--   developers to securely connect mobile and web applications to APIs
--   that run on AWS Lambda, Amazon EC2, or other publicly addressable web
--   services that are hosted outside of AWS.
module Amazonka.APIGateway

-- | API version <tt>2015-07-09</tt> of the Amazon API Gateway SDK
--   configuration.
defaultService :: Service

-- | The request configuration has conflicts. For details, see the
--   accompanying error message.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource is not found. Make sure that the request URI is
--   correct.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has reached its throttling limit. Retry after the
--   specified time period.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested service is not available. For details see the
--   accompanying error message. Retry after the specified time period.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request is denied because the caller has insufficient permissions.
_UnauthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The submitted request is not valid, for example, the input is
--   incomplete or incorrect. See the accompanying error message for
--   details.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request exceeded the rate limit. Retry after the specified time
--   period.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Request to list information about a resource.
--   
--   <i>See:</i> <a>newGetResource</a> smart constructor.
data GetResource
GetResource' :: Maybe [Text] -> Text -> Text -> GetResource

-- | Create a value of <a>GetResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:embed:GetResource'</a>, <a>getResource_embed</a> - A query
--   parameter to retrieve the specified resources embedded in the returned
--   Resource representation in the response. This <tt>embed</tt> parameter
--   value is a list of comma-separated strings. Currently, the request
--   supports only retrieval of the embedded Method resources this way. The
--   query parameter value must be a single-valued list and contain the
--   <tt>"methods"</tt> string. For example, <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>.
--   
--   <a>$sel:restApiId:GetResource'</a>, <a>getResource_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:GetResource'</a>, <a>getResource_resourceId</a> -
--   [Required] The identifier for the Resource resource.
newGetResource :: Text -> Text -> GetResource

-- | Represents an API resource.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Method) -> Maybe Text -> Resource

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathPart:Resource'</a>, <a>resource_pathPart</a> - The last
--   path segment for this resource.
--   
--   <a>$sel:path:Resource'</a>, <a>resource_path</a> - The full path for
--   this resource.
--   
--   <a>$sel:id:Resource'</a>, <a>resource_id</a> - The resource's
--   identifier.
--   
--   <a>$sel:resourceMethods:Resource'</a>, <a>resource_resourceMethods</a>
--   - Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
--   
--   <a>$sel:parentId:Resource'</a>, <a>resource_parentId</a> - The parent
--   resource's identifier.
newResource :: Resource

-- | Requests API Gateway to get information about a Deployments
--   collection.
--   
--   <i>See:</i> <a>newGetDeployments</a> smart constructor.
data GetDeployments
GetDeployments' :: Maybe Int -> Maybe Text -> Text -> GetDeployments

-- | Create a value of <a>GetDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetDeployments'</a>, <a>getDeployments_limit</a> - The
--   maximum number of returned results per page. The default value is 25
--   and the maximum value is 500.
--   
--   <a>$sel:position:GetDeployments'</a>, <a>getDeployments_position</a> -
--   The current pagination position in the paged result set.
--   
--   <a>$sel:restApiId:GetDeployments'</a>, <a>getDeployments_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
newGetDeployments :: Text -> GetDeployments

-- | Represents a collection resource that contains zero or more references
--   to your existing deployments, and links that guide you on how to
--   interact with your collection. The collection offers a paginated view
--   of the contained deployments.
--   
--   To create a new deployment of a RestApi, make a <tt>POST</tt> request
--   against this resource. To view, update, or delete an existing
--   deployment, make a <tt>GET</tt>, <tt>PATCH</tt>, or <tt>DELETE</tt>
--   request, respectively, on a specified Deployment resource.
--   
--   <a>Deploying an API</a>, <a>AWS CLI</a>, <a>AWS SDKs</a>
--   
--   <i>See:</i> <a>newGetDeploymentsResponse</a> smart constructor.
data GetDeploymentsResponse
GetDeploymentsResponse' :: Maybe [Deployment] -> Maybe Text -> Int -> GetDeploymentsResponse

-- | Create a value of <a>GetDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetDeploymentsResponse'</a>,
--   <a>getDeploymentsResponse_items</a> - The current page of elements
--   from this collection.
--   
--   <a>$sel:position:GetDeployments'</a>,
--   <a>getDeploymentsResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetDeploymentsResponse'</a>,
--   <a>getDeploymentsResponse_httpStatus</a> - The response's http status
--   code.
newGetDeploymentsResponse :: Int -> GetDeploymentsResponse

-- | Requests API Gateway to get information about a Deployment resource.
--   
--   <i>See:</i> <a>newGetDeployment</a> smart constructor.
data GetDeployment
GetDeployment' :: Maybe [Text] -> Text -> Text -> GetDeployment

-- | Create a value of <a>GetDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:embed:GetDeployment'</a>, <a>getDeployment_embed</a> - A query
--   parameter to retrieve the specified embedded resources of the returned
--   Deployment resource in the response. In a REST API call, this
--   <tt>embed</tt> parameter value is a list of comma-separated strings,
--   as in <tt>GET
--   /restapis/{restapi_id}/deployments/{deployment_id}?embed=var1,var2</tt>.
--   The SDK and other platform-dependent libraries might use a different
--   format for the list. Currently, this request supports only retrieval
--   of the embedded API summary this way. Hence, the parameter value must
--   be a single-valued list containing only the <tt>"apisummary"</tt>
--   string. For example, <tt>GET
--   /restapis/{restapi_id}/deployments/{deployment_id}?embed=apisummary</tt>.
--   
--   <a>$sel:restApiId:GetDeployment'</a>, <a>getDeployment_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:deploymentId:GetDeployment'</a>,
--   <a>getDeployment_deploymentId</a> - [Required] The identifier of the
--   Deployment resource to get information about.
newGetDeployment :: Text -> Text -> GetDeployment

-- | An immutable representation of a RestApi resource that can be called
--   by users using Stages. A deployment must be associated with a Stage
--   for it to be callable over the Internet.
--   
--   To create a deployment, call <tt>POST</tt> on the Deployments resource
--   of a RestApi. To view, update, or delete a deployment, call
--   <tt>GET</tt>, <tt>PATCH</tt>, or <tt>DELETE</tt> on the specified
--   deployment resource
--   (<tt>/restapis/{restapi_id}/deployments/{deployment_id}</tt>).
--   
--   RestApi, Deployments, Stage, <a>AWS CLI</a>, <a>AWS SDKs</a>
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe (HashMap Text (HashMap Text MethodSnapshot)) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Deployment

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiSummary:Deployment'</a>, <a>deployment_apiSummary</a> - A
--   summary of the RestApi at the date and time that the deployment
--   resource was created.
--   
--   <a>$sel:createdDate:Deployment'</a>, <a>deployment_createdDate</a> -
--   The date and time that the deployment resource was created.
--   
--   <a>$sel:id:Deployment'</a>, <a>deployment_id</a> - The identifier for
--   the deployment resource.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description for the deployment resource.
newDeployment :: Deployment

-- | Gets the Tags collection for a given resource.
--   
--   <i>See:</i> <a>newGetTags</a> smart constructor.
data GetTags
GetTags' :: Maybe Int -> Maybe Text -> Text -> GetTags

-- | Create a value of <a>GetTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetTags'</a>, <a>getTags_limit</a> - (Not currently
--   supported) The maximum number of returned results per page. The
--   default value is 25 and the maximum value is 500.
--   
--   <a>$sel:position:GetTags'</a>, <a>getTags_position</a> - (Not
--   currently supported) The current pagination position in the paged
--   result set.
--   
--   <a>$sel:resourceArn:GetTags'</a>, <a>getTags_resourceArn</a> -
--   [Required] The ARN of a resource that can be tagged.
newGetTags :: Text -> GetTags

-- | The collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <i>See:</i> <a>newGetTagsResponse</a> smart constructor.
data GetTagsResponse
GetTagsResponse' :: Maybe (HashMap Text Text) -> Int -> GetTagsResponse

-- | Create a value of <a>GetTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:GetTagsResponse'</a>, <a>getTagsResponse_tags</a> - The
--   collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <a>$sel:httpStatus:GetTagsResponse'</a>,
--   <a>getTagsResponse_httpStatus</a> - The response's http status code.
newGetTagsResponse :: Int -> GetTagsResponse

-- | Clears any customization of a GatewayResponse of a specified response
--   type on the given RestApi and resets it with the default settings.
--   
--   <i>See:</i> <a>newDeleteGatewayResponse</a> smart constructor.
data DeleteGatewayResponse
DeleteGatewayResponse' :: Text -> GatewayResponseType -> DeleteGatewayResponse

-- | Create a value of <a>DeleteGatewayResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteGatewayResponse'</a>,
--   <a>deleteGatewayResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:responseType:DeleteGatewayResponse'</a>,
--   <a>deleteGatewayResponse_responseType</a> - [Required]
--   
--   The response type of the associated GatewayResponse.
newDeleteGatewayResponse :: Text -> GatewayResponseType -> DeleteGatewayResponse

-- | <i>See:</i> <a>newDeleteGatewayResponseResponse</a> smart constructor.
data DeleteGatewayResponseResponse
DeleteGatewayResponseResponse' :: DeleteGatewayResponseResponse

-- | Create a value of <a>DeleteGatewayResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteGatewayResponseResponse :: DeleteGatewayResponseResponse

-- | Updates a GatewayResponse of a specified response type on the given
--   RestApi.
--   
--   <i>See:</i> <a>newUpdateGatewayResponse</a> smart constructor.
data UpdateGatewayResponse
UpdateGatewayResponse' :: Maybe [PatchOperation] -> Text -> GatewayResponseType -> UpdateGatewayResponse

-- | Create a value of <a>UpdateGatewayResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateGatewayResponse'</a>,
--   <a>updateGatewayResponse_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:restApiId:UpdateGatewayResponse'</a>,
--   <a>updateGatewayResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:responseType:UpdateGatewayResponse'</a>,
--   <a>updateGatewayResponse_responseType</a> - [Required]
--   
--   The response type of the associated GatewayResponse.
newUpdateGatewayResponse :: Text -> GatewayResponseType -> UpdateGatewayResponse

-- | A gateway response of a given response type and status code, with
--   optional response parameters and mapping templates.
--   
--   For more information about valid gateway response types, see
--   <a>Gateway Response Types Supported by API Gateway</a>
--   
--   <h4>Example: Get a Gateway Response of a given response type</h4>
--   
--   <h5>Request</h5>
--   
--   This example shows how to get a gateway response of the
--   <tt>MISSING_AUTHENTICATION_TOKEN</tt> type.
--   
--   <pre>
--   GET /restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T202516Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=1b52460e3159c1a26cff29093855d50ea141c1c5b937528fecaf60f51129697a Cache-Control: no-cache Postman-Token: 3b2a1ce9-c848-2e26-2e2f-9c2caefbed45
--   </pre>
--   
--   The response type is specified as a URL path.
--   
--   <h5>Response</h5>
--   
--   The successful operation returns the <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:delete": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": false, "responseParameters": { "gatewayresponse.header.x-request-path": "method.request.path.petId", "gatewayresponse.header.Access-Control-Allow-Origin": "'a.b.c'", "gatewayresponse.header.x-request-query": "method.request.querystring.q", "gatewayresponse.header.x-request-header": "method.request.header.Accept" }, "responseTemplates": { "application/json": "{\n \"message\": $context.error.messageString,\n \"type\": \"$context.error.responseType\",\n \"stage\": \"$context.stage\",\n \"resourcePath\": \"$context.resourcePath\",\n \"stageVariables.a\": \"$stageVariables.a\",\n \"statusCode\": \"'404'\"\n}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "404" }
--   </pre>
--   
--   <a>Customize Gateway Responses</a>
--   
--   <i>See:</i> <a>newGatewayResponse</a> smart constructor.
data GatewayResponse
GatewayResponse' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe GatewayResponseType -> Maybe Text -> Maybe (HashMap Text Text) -> GatewayResponse

-- | Create a value of <a>GatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultResponse:GatewayResponse'</a>,
--   <a>gatewayResponse_defaultResponse</a> - A Boolean flag to indicate
--   whether this GatewayResponse is the default gateway response
--   (<tt>true</tt>) or not (<tt>false</tt>). A default gateway response is
--   one generated by API Gateway without any customization by an API
--   developer.
--   
--   <a>$sel:responseTemplates:GatewayResponse'</a>,
--   <a>gatewayResponse_responseTemplates</a> - Response templates of the
--   GatewayResponse as a string-to-string map of key-value pairs.
--   
--   <a>$sel:responseType:GatewayResponse'</a>,
--   <a>gatewayResponse_responseType</a> - The response type of the
--   associated GatewayResponse.
--   
--   <a>$sel:statusCode:GatewayResponse'</a>,
--   <a>gatewayResponse_statusCode</a> - The HTTP status code for this
--   GatewayResponse.
--   
--   <a>$sel:responseParameters:GatewayResponse'</a>,
--   <a>gatewayResponse_responseParameters</a> - Response parameters
--   (paths, query strings and headers) of the GatewayResponse as a
--   string-to-string map of key-value pairs.
newGatewayResponse :: GatewayResponse

-- | The POST request to create a usage plan with the name, description,
--   throttle limits and quota limits, as well as the associated API
--   stages, specified in the payload.
--   
--   <i>See:</i> <a>newCreateUsagePlan</a> smart constructor.
data CreateUsagePlan
CreateUsagePlan' :: Maybe [ApiStage] -> Maybe ThrottleSettings -> Maybe QuotaSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateUsagePlan

-- | Create a value of <a>CreateUsagePlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiStages:CreateUsagePlan'</a>,
--   <a>createUsagePlan_apiStages</a> - The associated API stages of the
--   usage plan.
--   
--   <a>$sel:throttle:CreateUsagePlan'</a>, <a>createUsagePlan_throttle</a>
--   - The throttling limits of the usage plan.
--   
--   <a>$sel:quota:CreateUsagePlan'</a>, <a>createUsagePlan_quota</a> - The
--   quota of the usage plan.
--   
--   <a>$sel:description:CreateUsagePlan'</a>,
--   <a>createUsagePlan_description</a> - The description of the usage
--   plan.
--   
--   <a>$sel:tags:CreateUsagePlan'</a>, <a>createUsagePlan_tags</a> - The
--   key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
--   
--   <a>$sel:name:CreateUsagePlan'</a>, <a>createUsagePlan_name</a> -
--   [Required] The name of the usage plan.
newCreateUsagePlan :: Text -> CreateUsagePlan

-- | Represents a usage plan than can specify who can assess associated API
--   stages with specified request limits and quotas.
--   
--   In a usage plan, you associate an API by specifying the API's Id and a
--   stage name of the specified API. You add plan customers by adding API
--   keys to the plan.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlan</a> smart constructor.
data UsagePlan
UsagePlan' :: Maybe [ApiStage] -> Maybe Text -> Maybe Text -> Maybe ThrottleSettings -> Maybe QuotaSettings -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> UsagePlan

-- | Create a value of <a>UsagePlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiStages:UsagePlan'</a>, <a>usagePlan_apiStages</a> - The
--   associated API stages of a usage plan.
--   
--   <a>$sel:name:UsagePlan'</a>, <a>usagePlan_name</a> - The name of a
--   usage plan.
--   
--   <a>$sel:id:UsagePlan'</a>, <a>usagePlan_id</a> - The identifier of a
--   UsagePlan resource.
--   
--   <a>$sel:throttle:UsagePlan'</a>, <a>usagePlan_throttle</a> - The
--   request throttle limits of a usage plan.
--   
--   <a>$sel:quota:UsagePlan'</a>, <a>usagePlan_quota</a> - The maximum
--   number of permitted requests per a given unit time interval.
--   
--   <a>$sel:description:UsagePlan'</a>, <a>usagePlan_description</a> - The
--   description of a usage plan.
--   
--   <a>$sel:productCode:UsagePlan'</a>, <a>usagePlan_productCode</a> - The
--   AWS Markeplace product identifier to associate with the usage plan as
--   a SaaS product on AWS Marketplace.
--   
--   <a>$sel:tags:UsagePlan'</a>, <a>usagePlan_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newUsagePlan :: UsagePlan

-- | Request to describe a collection of DomainName resources.
--   
--   <i>See:</i> <a>newGetDomainNames</a> smart constructor.
data GetDomainNames
GetDomainNames' :: Maybe Int -> Maybe Text -> GetDomainNames

-- | Create a value of <a>GetDomainNames</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetDomainNames'</a>, <a>getDomainNames_limit</a> - The
--   maximum number of returned results per page. The default value is 25
--   and the maximum value is 500.
--   
--   <a>$sel:position:GetDomainNames'</a>, <a>getDomainNames_position</a> -
--   The current pagination position in the paged result set.
newGetDomainNames :: GetDomainNames

-- | Represents a collection of DomainName resources.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newGetDomainNamesResponse</a> smart constructor.
data GetDomainNamesResponse
GetDomainNamesResponse' :: Maybe [DomainName] -> Maybe Text -> Int -> GetDomainNamesResponse

-- | Create a value of <a>GetDomainNamesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetDomainNamesResponse'</a>,
--   <a>getDomainNamesResponse_items</a> - The current page of elements
--   from this collection.
--   
--   <a>$sel:position:GetDomainNames'</a>,
--   <a>getDomainNamesResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetDomainNamesResponse'</a>,
--   <a>getDomainNamesResponse_httpStatus</a> - The response's http status
--   code.
newGetDomainNamesResponse :: Int -> GetDomainNamesResponse

-- | A request to get information about the current ClientCertificate
--   resource.
--   
--   <i>See:</i> <a>newGetClientCertificate</a> smart constructor.
data GetClientCertificate
GetClientCertificate' :: Text -> GetClientCertificate

-- | Create a value of <a>GetClientCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientCertificateId:GetClientCertificate'</a>,
--   <a>getClientCertificate_clientCertificateId</a> - [Required] The
--   identifier of the ClientCertificate resource to be described.
newGetClientCertificate :: Text -> GetClientCertificate

-- | Represents a client certificate used to configure client-side SSL
--   authentication while sending requests to the integration endpoint.
--   
--   Client certificates are used to authenticate an API by the backend
--   server. To authenticate an API client (or user), use IAM roles and
--   policies, a custom Authorizer or an Amazon Cognito user pool.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newClientCertificate</a> smart constructor.
data ClientCertificate
ClientCertificate' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ClientCertificate

-- | Create a value of <a>ClientCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pemEncodedCertificate:ClientCertificate'</a>,
--   <a>clientCertificate_pemEncodedCertificate</a> - The PEM-encoded
--   public key of the client certificate, which can be used to configure
--   certificate authentication in the integration endpoint .
--   
--   <a>$sel:clientCertificateId:ClientCertificate'</a>,
--   <a>clientCertificate_clientCertificateId</a> - The identifier of the
--   client certificate.
--   
--   <a>$sel:createdDate:ClientCertificate'</a>,
--   <a>clientCertificate_createdDate</a> - The timestamp when the client
--   certificate was created.
--   
--   <a>$sel:expirationDate:ClientCertificate'</a>,
--   <a>clientCertificate_expirationDate</a> - The timestamp when the
--   client certificate will expire.
--   
--   <a>$sel:description:ClientCertificate'</a>,
--   <a>clientCertificate_description</a> - The description of the client
--   certificate.
--   
--   <a>$sel:tags:ClientCertificate'</a>, <a>clientCertificate_tags</a> -
--   The collection of tags. Each tag element is associated with a given
--   resource.
newClientCertificate :: ClientCertificate

-- | Creates a customization of a GatewayResponse of a specified response
--   type and status code on the given RestApi.
--   
--   <i>See:</i> <a>newPutGatewayResponse</a> smart constructor.
data PutGatewayResponse
PutGatewayResponse' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> GatewayResponseType -> PutGatewayResponse

-- | Create a value of <a>PutGatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseTemplates:PutGatewayResponse'</a>,
--   <a>putGatewayResponse_responseTemplates</a> - Response templates of
--   the GatewayResponse as a string-to-string map of key-value pairs.
--   
--   <a>$sel:statusCode:PutGatewayResponse'</a>,
--   <a>putGatewayResponse_statusCode</a> - The HTTP status code of the
--   GatewayResponse.
--   
--   <a>$sel:responseParameters:PutGatewayResponse'</a>,
--   <a>putGatewayResponse_responseParameters</a> - Response parameters
--   (paths, query strings and headers) of the GatewayResponse as a
--   string-to-string map of key-value pairs.
--   
--   <a>$sel:restApiId:PutGatewayResponse'</a>,
--   <a>putGatewayResponse_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:responseType:PutGatewayResponse'</a>,
--   <a>putGatewayResponse_responseType</a> - [Required]
--   
--   The response type of the associated GatewayResponse.
newPutGatewayResponse :: Text -> GatewayResponseType -> PutGatewayResponse

-- | A gateway response of a given response type and status code, with
--   optional response parameters and mapping templates.
--   
--   For more information about valid gateway response types, see
--   <a>Gateway Response Types Supported by API Gateway</a>
--   
--   <h4>Example: Get a Gateway Response of a given response type</h4>
--   
--   <h5>Request</h5>
--   
--   This example shows how to get a gateway response of the
--   <tt>MISSING_AUTHENTICATION_TOKEN</tt> type.
--   
--   <pre>
--   GET /restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T202516Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=1b52460e3159c1a26cff29093855d50ea141c1c5b937528fecaf60f51129697a Cache-Control: no-cache Postman-Token: 3b2a1ce9-c848-2e26-2e2f-9c2caefbed45
--   </pre>
--   
--   The response type is specified as a URL path.
--   
--   <h5>Response</h5>
--   
--   The successful operation returns the <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:delete": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": false, "responseParameters": { "gatewayresponse.header.x-request-path": "method.request.path.petId", "gatewayresponse.header.Access-Control-Allow-Origin": "'a.b.c'", "gatewayresponse.header.x-request-query": "method.request.querystring.q", "gatewayresponse.header.x-request-header": "method.request.header.Accept" }, "responseTemplates": { "application/json": "{\n \"message\": $context.error.messageString,\n \"type\": \"$context.error.responseType\",\n \"stage\": \"$context.stage\",\n \"resourcePath\": \"$context.resourcePath\",\n \"stageVariables.a\": \"$stageVariables.a\",\n \"statusCode\": \"'404'\"\n}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "404" }
--   </pre>
--   
--   <a>Customize Gateway Responses</a>
--   
--   <i>See:</i> <a>newGatewayResponse</a> smart constructor.
data GatewayResponse
GatewayResponse' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe GatewayResponseType -> Maybe Text -> Maybe (HashMap Text Text) -> GatewayResponse

-- | Create a value of <a>GatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultResponse:GatewayResponse'</a>,
--   <a>gatewayResponse_defaultResponse</a> - A Boolean flag to indicate
--   whether this GatewayResponse is the default gateway response
--   (<tt>true</tt>) or not (<tt>false</tt>). A default gateway response is
--   one generated by API Gateway without any customization by an API
--   developer.
--   
--   <a>$sel:responseTemplates:GatewayResponse'</a>,
--   <a>gatewayResponse_responseTemplates</a> - Response templates of the
--   GatewayResponse as a string-to-string map of key-value pairs.
--   
--   <a>$sel:responseType:GatewayResponse'</a>,
--   <a>gatewayResponse_responseType</a> - The response type of the
--   associated GatewayResponse.
--   
--   <a>$sel:statusCode:GatewayResponse'</a>,
--   <a>gatewayResponse_statusCode</a> - The HTTP status code for this
--   GatewayResponse.
--   
--   <a>$sel:responseParameters:GatewayResponse'</a>,
--   <a>gatewayResponse_responseParameters</a> - Response parameters
--   (paths, query strings and headers) of the GatewayResponse as a
--   string-to-string map of key-value pairs.
newGatewayResponse :: GatewayResponse

-- | Get an SdkType instance.
--   
--   <i>See:</i> <a>newGetSdkType</a> smart constructor.
data GetSdkType
GetSdkType' :: Text -> GetSdkType

-- | Create a value of <a>GetSdkType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetSdkType'</a>, <a>getSdkType_id</a> - [Required] The
--   identifier of the queried SdkType instance.
newGetSdkType :: Text -> GetSdkType

-- | A type of SDK that API Gateway can generate.
--   
--   <i>See:</i> <a>newSdkType</a> smart constructor.
data SdkType
SdkType' :: Maybe Text -> Maybe [SdkConfigurationProperty] -> Maybe Text -> Maybe Text -> SdkType

-- | Create a value of <a>SdkType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:friendlyName:SdkType'</a>, <a>sdkType_friendlyName</a> - The
--   user-friendly name of an SdkType instance.
--   
--   <a>$sel:configurationProperties:SdkType'</a>,
--   <a>sdkType_configurationProperties</a> - A list of configuration
--   properties of an SdkType.
--   
--   <a>$sel:id:SdkType'</a>, <a>sdkType_id</a> - The identifier of an
--   SdkType instance.
--   
--   <a>$sel:description:SdkType'</a>, <a>sdkType_description</a> - The
--   description of an SdkType.
newSdkType :: SdkType

-- | Request to describe a MethodResponse resource.
--   
--   <i>See:</i> <a>newGetMethodResponse</a> smart constructor.
data GetMethodResponse
GetMethodResponse' :: Text -> Text -> Text -> Text -> GetMethodResponse

-- | Create a value of <a>GetMethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetMethodResponse'</a>,
--   <a>getMethodResponse_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:resourceId:GetMethodResponse'</a>,
--   <a>getMethodResponse_resourceId</a> - [Required] The Resource
--   identifier for the MethodResponse resource.
--   
--   <a>$sel:httpMethod:GetMethodResponse'</a>,
--   <a>getMethodResponse_httpMethod</a> - [Required] The HTTP verb of the
--   Method resource.
--   
--   <a>$sel:statusCode:GetMethodResponse'</a>,
--   <a>getMethodResponse_statusCode</a> - [Required] The status code for
--   the MethodResponse resource.
newGetMethodResponse :: Text -> Text -> Text -> Text -> GetMethodResponse

-- | Represents a method response of a given HTTP status code returned to
--   the client. The method response is passed from the back end through
--   the associated integration response that can be transformed using a
--   mapping template.
--   
--   <h4>Example: A <b>MethodResponse</b> instance of an API</h4>
--   
--   <h5>Request</h5>
--   
--   The example request retrieves a <b>MethodResponse</b> of the 200
--   status code.
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T222952Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" }
--   </pre>
--   
--   Method, IntegrationResponse, Integration <a>Creating an API</a>
--   
--   <i>See:</i> <a>newMethodResponse</a> smart constructor.
data MethodResponse
MethodResponse' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Bool) -> MethodResponse

-- | Create a value of <a>MethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseModels:MethodResponse'</a>,
--   <a>methodResponse_responseModels</a> - Specifies the Model resources
--   used for the response's content-type. Response models are represented
--   as a key/value map, with a content-type as the key and a Model name as
--   the value.
--   
--   <a>$sel:statusCode:MethodResponse'</a>,
--   <a>methodResponse_statusCode</a> - The method response's status code.
--   
--   <a>$sel:responseParameters:MethodResponse'</a>,
--   <a>methodResponse_responseParameters</a> - A key-value map specifying
--   required or optional response parameters that API Gateway can send
--   back to the caller. A key defines a method response header and the
--   value specifies whether the associated method response header is
--   required or not. The expression of the key must match the pattern
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. API Gateway passes certain integration
--   response data to the method response headers specified here according
--   to the mapping you prescribe in the API's IntegrationResponse. The
--   integration response data that can be mapped include an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
newMethodResponse :: MethodResponse

-- | Request to list existing Models defined for a RestApi resource.
--   
--   <i>See:</i> <a>newGetModels</a> smart constructor.
data GetModels
GetModels' :: Maybe Int -> Maybe Text -> Text -> GetModels

-- | Create a value of <a>GetModels</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetModels'</a>, <a>getModels_limit</a> - The maximum
--   number of returned results per page. The default value is 25 and the
--   maximum value is 500.
--   
--   <a>$sel:position:GetModels'</a>, <a>getModels_position</a> - The
--   current pagination position in the paged result set.
--   
--   <a>$sel:restApiId:GetModels'</a>, <a>getModels_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
newGetModels :: Text -> GetModels

-- | Represents a collection of Model resources.
--   
--   Method, MethodResponse, <a>Models and Mappings</a>
--   
--   <i>See:</i> <a>newGetModelsResponse</a> smart constructor.
data GetModelsResponse
GetModelsResponse' :: Maybe [Model] -> Maybe Text -> Int -> GetModelsResponse

-- | Create a value of <a>GetModelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetModelsResponse'</a>, <a>getModelsResponse_items</a> -
--   The current page of elements from this collection.
--   
--   <a>$sel:position:GetModels'</a>, <a>getModelsResponse_position</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:GetModelsResponse'</a>,
--   <a>getModelsResponse_httpStatus</a> - The response's http status code.
newGetModelsResponse :: Int -> GetModelsResponse

-- | Request to describe a BasePathMapping resource.
--   
--   <i>See:</i> <a>newGetBasePathMapping</a> smart constructor.
data GetBasePathMapping
GetBasePathMapping' :: Text -> Text -> GetBasePathMapping

-- | Create a value of <a>GetBasePathMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:GetBasePathMapping'</a>,
--   <a>getBasePathMapping_domainName</a> - [Required] The domain name of
--   the BasePathMapping resource to be described.
--   
--   <a>$sel:basePath:GetBasePathMapping'</a>,
--   <a>getBasePathMapping_basePath</a> - [Required] The base path name
--   that callers of the API must provide as part of the URL after the
--   domain name. This value must be unique for all of the mappings across
--   a single API. Specify '(none)' if you do not want callers to specify
--   any base path name after the domain name.
newGetBasePathMapping :: Text -> Text -> GetBasePathMapping

-- | Represents the base path that callers of the API must provide as part
--   of the URL after the domain name.
--   
--   A custom domain name plus a <tt>BasePathMapping</tt> specification
--   identifies a deployed RestApi in a given stage of the owner Account.
--   
--   <a>Use Custom Domain Names</a>
--   
--   <i>See:</i> <a>newBasePathMapping</a> smart constructor.
data BasePathMapping
BasePathMapping' :: Maybe Text -> Maybe Text -> Maybe Text -> BasePathMapping

-- | Create a value of <a>BasePathMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:BasePathMapping'</a>, <a>basePathMapping_stage</a> - The
--   name of the associated stage.
--   
--   <a>$sel:basePath:BasePathMapping'</a>, <a>basePathMapping_basePath</a>
--   - The base path name that callers of the API must provide as part of
--   the URL after the domain name.
--   
--   <a>$sel:restApiId:BasePathMapping'</a>,
--   <a>basePathMapping_restApiId</a> - The string identifier of the
--   associated RestApi.
newBasePathMapping :: BasePathMapping

-- | Gets the RequestValidators collection of a given RestApi.
--   
--   <i>See:</i> <a>newGetRequestValidators</a> smart constructor.
data GetRequestValidators
GetRequestValidators' :: Maybe Int -> Maybe Text -> Text -> GetRequestValidators

-- | Create a value of <a>GetRequestValidators</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetRequestValidators'</a>,
--   <a>getRequestValidators_limit</a> - The maximum number of returned
--   results per page. The default value is 25 and the maximum value is
--   500.
--   
--   <a>$sel:position:GetRequestValidators'</a>,
--   <a>getRequestValidators_position</a> - The current pagination position
--   in the paged result set.
--   
--   <a>$sel:restApiId:GetRequestValidators'</a>,
--   <a>getRequestValidators_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
newGetRequestValidators :: Text -> GetRequestValidators

-- | A collection of RequestValidator resources of a given RestApi.
--   
--   In OpenAPI, the RequestValidators of an API is defined by the
--   <a>x-amazon-apigateway-request-validators</a> extension.
--   
--   <a>Enable Basic Request Validation in API Gateway</a>
--   
--   <i>See:</i> <a>newGetRequestValidatorsResponse</a> smart constructor.
data GetRequestValidatorsResponse
GetRequestValidatorsResponse' :: Maybe [RequestValidator] -> Maybe Text -> Int -> GetRequestValidatorsResponse

-- | Create a value of <a>GetRequestValidatorsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetRequestValidatorsResponse'</a>,
--   <a>getRequestValidatorsResponse_items</a> - The current page of
--   elements from this collection.
--   
--   <a>$sel:position:GetRequestValidators'</a>,
--   <a>getRequestValidatorsResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetRequestValidatorsResponse'</a>,
--   <a>getRequestValidatorsResponse_httpStatus</a> - The response's http
--   status code.
newGetRequestValidatorsResponse :: Int -> GetRequestValidatorsResponse

-- | Request to add a MethodResponse to an existing Method resource.
--   
--   <i>See:</i> <a>newPutMethodResponse</a> smart constructor.
data PutMethodResponse
PutMethodResponse' :: Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Text -> Text -> Text -> Text -> PutMethodResponse

-- | Create a value of <a>PutMethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseModels:PutMethodResponse'</a>,
--   <a>putMethodResponse_responseModels</a> - Specifies the Model
--   resources used for the response's content type. Response models are
--   represented as a key/value map, with a content type as the key and a
--   Model name as the value.
--   
--   <a>$sel:responseParameters:PutMethodResponse'</a>,
--   <a>putMethodResponse_responseParameters</a> - A key-value map
--   specifying required or optional response parameters that API Gateway
--   can send back to the caller. A key defines a method response header
--   name and the associated value is a Boolean flag indicating whether the
--   method response parameter is required or not. The method response
--   header names must match the pattern of
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. The response parameter names defined here are
--   available in the integration response to be mapped from an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
--   
--   <a>$sel:restApiId:PutMethodResponse'</a>,
--   <a>putMethodResponse_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:resourceId:PutMethodResponse'</a>,
--   <a>putMethodResponse_resourceId</a> - [Required] The Resource
--   identifier for the Method resource.
--   
--   <a>$sel:httpMethod:PutMethodResponse'</a>,
--   <a>putMethodResponse_httpMethod</a> - [Required] The HTTP verb of the
--   Method resource.
--   
--   <a>$sel:statusCode:PutMethodResponse'</a>,
--   <a>putMethodResponse_statusCode</a> - [Required] The method response's
--   status code.
newPutMethodResponse :: Text -> Text -> Text -> Text -> PutMethodResponse

-- | Represents a method response of a given HTTP status code returned to
--   the client. The method response is passed from the back end through
--   the associated integration response that can be transformed using a
--   mapping template.
--   
--   <h4>Example: A <b>MethodResponse</b> instance of an API</h4>
--   
--   <h5>Request</h5>
--   
--   The example request retrieves a <b>MethodResponse</b> of the 200
--   status code.
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T222952Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" }
--   </pre>
--   
--   Method, IntegrationResponse, Integration <a>Creating an API</a>
--   
--   <i>See:</i> <a>newMethodResponse</a> smart constructor.
data MethodResponse
MethodResponse' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Bool) -> MethodResponse

-- | Create a value of <a>MethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseModels:MethodResponse'</a>,
--   <a>methodResponse_responseModels</a> - Specifies the Model resources
--   used for the response's content-type. Response models are represented
--   as a key/value map, with a content-type as the key and a Model name as
--   the value.
--   
--   <a>$sel:statusCode:MethodResponse'</a>,
--   <a>methodResponse_statusCode</a> - The method response's status code.
--   
--   <a>$sel:responseParameters:MethodResponse'</a>,
--   <a>methodResponse_responseParameters</a> - A key-value map specifying
--   required or optional response parameters that API Gateway can send
--   back to the caller. A key defines a method response header and the
--   value specifies whether the associated method response header is
--   required or not. The expression of the key must match the pattern
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. API Gateway passes certain integration
--   response data to the method response headers specified here according
--   to the mapping you prescribe in the API's IntegrationResponse. The
--   integration response data that can be mapped include an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
newMethodResponse :: MethodResponse

-- | A POST request to import an API to API Gateway using an input of an
--   API definition file.
--   
--   <i>See:</i> <a>newImportRestApi</a> smart constructor.
data ImportRestApi
ImportRestApi' :: Maybe Bool -> Maybe (HashMap Text Text) -> ByteString -> ImportRestApi

-- | Create a value of <a>ImportRestApi</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failOnWarnings:ImportRestApi'</a>,
--   <a>importRestApi_failOnWarnings</a> - A query parameter to indicate
--   whether to rollback the API creation (<tt>true</tt>) or not
--   (<tt>false</tt>) when a warning is encountered. The default value is
--   <tt>false</tt>.
--   
--   <a>$sel:parameters:ImportRestApi'</a>, <a>importRestApi_parameters</a>
--   - A key-value map of context-specific query string parameters
--   specifying the behavior of different API importing operations. The
--   following shows operation-specific parameters and their supported
--   values.
--   
--   To exclude DocumentationParts from the import, set <tt>parameters</tt>
--   as <tt>ignore=documentation</tt>.
--   
--   To configure the endpoint type, set <tt>parameters</tt> as
--   <tt>endpointConfigurationTypes=EDGE</tt>,
--   <tt>endpointConfigurationTypes=REGIONAL</tt>, or
--   <tt>endpointConfigurationTypes=PRIVATE</tt>. The default endpoint type
--   is <tt>EDGE</tt>.
--   
--   To handle imported <tt>basepath</tt>, set <tt>parameters</tt> as
--   <tt>basepath=ignore</tt>, <tt>basepath=prepend</tt> or
--   <tt>basepath=split</tt>.
--   
--   For example, the AWS CLI command to exclude documentation from the
--   imported API is:
--   
--   <pre>
--   aws apigateway import-rest-api --parameters ignore=documentation --body 'file:///path/to/imported-api-body.json'
--   </pre>
--   
--   The AWS CLI command to set the regional endpoint on the imported API
--   is:
--   
--   <pre>
--   aws apigateway import-rest-api --parameters endpointConfigurationTypes=REGIONAL --body 'file:///path/to/imported-api-body.json'
--   </pre>
--   
--   <a>$sel:body:ImportRestApi'</a>, <a>importRestApi_body</a> -
--   [Required] The POST request body containing external API definitions.
--   Currently, only OpenAPI definition JSON/YAML files are supported. The
--   maximum size of the API definition file is 6MB.
newImportRestApi :: ByteString -> ImportRestApi

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | A request to delete an existing MethodResponse resource.
--   
--   <i>See:</i> <a>newDeleteMethodResponse</a> smart constructor.
data DeleteMethodResponse
DeleteMethodResponse' :: Text -> Text -> Text -> Text -> DeleteMethodResponse

-- | Create a value of <a>DeleteMethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteMethodResponse'</a>,
--   <a>deleteMethodResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:DeleteMethodResponse'</a>,
--   <a>deleteMethodResponse_resourceId</a> - [Required] The Resource
--   identifier for the MethodResponse resource.
--   
--   <a>$sel:httpMethod:DeleteMethodResponse'</a>,
--   <a>deleteMethodResponse_httpMethod</a> - [Required] The HTTP verb of
--   the Method resource.
--   
--   <a>$sel:statusCode:DeleteMethodResponse'</a>,
--   <a>deleteMethodResponse_statusCode</a> - [Required] The status code
--   identifier for the MethodResponse resource.
newDeleteMethodResponse :: Text -> Text -> Text -> Text -> DeleteMethodResponse

-- | <i>See:</i> <a>newDeleteMethodResponseResponse</a> smart constructor.
data DeleteMethodResponseResponse
DeleteMethodResponseResponse' :: DeleteMethodResponseResponse

-- | Create a value of <a>DeleteMethodResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteMethodResponseResponse :: DeleteMethodResponseResponse

-- | A request to update an existing MethodResponse resource.
--   
--   <i>See:</i> <a>newUpdateMethodResponse</a> smart constructor.
data UpdateMethodResponse
UpdateMethodResponse' :: Maybe [PatchOperation] -> Text -> Text -> Text -> Text -> UpdateMethodResponse

-- | Create a value of <a>UpdateMethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateMethodResponse'</a>,
--   <a>updateMethodResponse_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:restApiId:UpdateMethodResponse'</a>,
--   <a>updateMethodResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:UpdateMethodResponse'</a>,
--   <a>updateMethodResponse_resourceId</a> - [Required] The Resource
--   identifier for the MethodResponse resource.
--   
--   <a>$sel:httpMethod:UpdateMethodResponse'</a>,
--   <a>updateMethodResponse_httpMethod</a> - [Required] The HTTP verb of
--   the Method resource.
--   
--   <a>$sel:statusCode:UpdateMethodResponse'</a>,
--   <a>updateMethodResponse_statusCode</a> - [Required] The status code
--   for the MethodResponse resource.
newUpdateMethodResponse :: Text -> Text -> Text -> Text -> UpdateMethodResponse

-- | Represents a method response of a given HTTP status code returned to
--   the client. The method response is passed from the back end through
--   the associated integration response that can be transformed using a
--   mapping template.
--   
--   <h4>Example: A <b>MethodResponse</b> instance of an API</h4>
--   
--   <h5>Request</h5>
--   
--   The example request retrieves a <b>MethodResponse</b> of the 200
--   status code.
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T222952Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" }
--   </pre>
--   
--   Method, IntegrationResponse, Integration <a>Creating an API</a>
--   
--   <i>See:</i> <a>newMethodResponse</a> smart constructor.
data MethodResponse
MethodResponse' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Bool) -> MethodResponse

-- | Create a value of <a>MethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseModels:MethodResponse'</a>,
--   <a>methodResponse_responseModels</a> - Specifies the Model resources
--   used for the response's content-type. Response models are represented
--   as a key/value map, with a content-type as the key and a Model name as
--   the value.
--   
--   <a>$sel:statusCode:MethodResponse'</a>,
--   <a>methodResponse_statusCode</a> - The method response's status code.
--   
--   <a>$sel:responseParameters:MethodResponse'</a>,
--   <a>methodResponse_responseParameters</a> - A key-value map specifying
--   required or optional response parameters that API Gateway can send
--   back to the caller. A key defines a method response header and the
--   value specifies whether the associated method response header is
--   required or not. The expression of the key must match the pattern
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. API Gateway passes certain integration
--   response data to the method response headers specified here according
--   to the mapping you prescribe in the API's IntegrationResponse. The
--   integration response data that can be mapped include an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
newMethodResponse :: MethodResponse

-- | Requests API Gateway to delete a Stage resource.
--   
--   <i>See:</i> <a>newDeleteStage</a> smart constructor.
data DeleteStage
DeleteStage' :: Text -> Text -> DeleteStage

-- | Create a value of <a>DeleteStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteStage'</a>, <a>deleteStage_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:DeleteStage'</a>, <a>deleteStage_stageName</a> -
--   [Required] The name of the Stage resource to delete.
newDeleteStage :: Text -> Text -> DeleteStage

-- | <i>See:</i> <a>newDeleteStageResponse</a> smart constructor.
data DeleteStageResponse
DeleteStageResponse' :: DeleteStageResponse

-- | Create a value of <a>DeleteStageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteStageResponse :: DeleteStageResponse

-- | Requests API Gateway to change information about a Stage resource.
--   
--   <i>See:</i> <a>newUpdateStage</a> smart constructor.
data UpdateStage
UpdateStage' :: Maybe [PatchOperation] -> Text -> Text -> UpdateStage

-- | Create a value of <a>UpdateStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateStage'</a>,
--   <a>updateStage_patchOperations</a> - A list of update operations to be
--   applied to the specified resource and in the order specified in this
--   list.
--   
--   <a>$sel:restApiId:UpdateStage'</a>, <a>updateStage_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:UpdateStage'</a>, <a>updateStage_stageName</a> -
--   [Required] The name of the Stage resource to change information about.
newUpdateStage :: Text -> Text -> UpdateStage

-- | Represents a unique identifier for a version of a deployed RestApi
--   that is callable by users.
--   
--   <a>Deploy an API</a>
--   
--   <i>See:</i> <a>newStage</a> smart constructor.
data Stage
Stage' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe AccessLogSettings -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe CacheClusterStatus -> Maybe (HashMap Text MethodSetting) -> Maybe POSIX -> Maybe CacheClusterSize -> Maybe Text -> Maybe CanarySettings -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Stage

-- | Create a value of <a>Stage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Stage'</a>, <a>stage_deploymentId</a> - The
--   identifier of the Deployment that the stage points to.
--   
--   <a>$sel:variables:Stage'</a>, <a>stage_variables</a> - A map that
--   defines the stage variables for a Stage resource. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:accessLogSettings:Stage'</a>, <a>stage_accessLogSettings</a> -
--   Settings for logging access in this stage.
--   
--   <a>$sel:documentationVersion:Stage'</a>,
--   <a>stage_documentationVersion</a> - The version of the associated API
--   documentation.
--   
--   <a>$sel:clientCertificateId:Stage'</a>,
--   <a>stage_clientCertificateId</a> - The identifier of a client
--   certificate for an API stage.
--   
--   <a>$sel:tracingEnabled:Stage'</a>, <a>stage_tracingEnabled</a> -
--   Specifies whether active tracing with X-ray is enabled for the Stage.
--   
--   <a>$sel:createdDate:Stage'</a>, <a>stage_createdDate</a> - The
--   timestamp when the stage was created.
--   
--   <a>$sel:cacheClusterStatus:Stage'</a>, <a>stage_cacheClusterStatus</a>
--   - The status of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:methodSettings:Stage'</a>, <a>stage_methodSettings</a> - A map
--   that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
--   
--   <a>$sel:lastUpdatedDate:Stage'</a>, <a>stage_lastUpdatedDate</a> - The
--   timestamp when the stage last updated.
--   
--   <a>$sel:cacheClusterSize:Stage'</a>, <a>stage_cacheClusterSize</a> -
--   The size of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:webAclArn:Stage'</a>, <a>stage_webAclArn</a> - The ARN of the
--   WebAcl associated with the Stage.
--   
--   <a>$sel:canarySettings:Stage'</a>, <a>stage_canarySettings</a> -
--   Settings for the canary deployment in this stage.
--   
--   <a>$sel:cacheClusterEnabled:Stage'</a>,
--   <a>stage_cacheClusterEnabled</a> - Specifies whether a cache cluster
--   is enabled for the stage.
--   
--   <a>$sel:stageName:Stage'</a>, <a>stage_stageName</a> - The name of the
--   stage is the first path segment in the Uniform Resource Identifier
--   (URI) of a call to API Gateway. Stage names can only contain
--   alphanumeric characters, hyphens, and underscores. Maximum length is
--   128 characters.
--   
--   <a>$sel:description:Stage'</a>, <a>stage_description</a> - The stage's
--   description.
--   
--   <a>$sel:tags:Stage'</a>, <a>stage_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newStage :: Stage

-- | The GET request to list existing RestApis defined for your collection.
--   
--   <i>See:</i> <a>newGetRestApis</a> smart constructor.
data GetRestApis
GetRestApis' :: Maybe Int -> Maybe Text -> GetRestApis

-- | Create a value of <a>GetRestApis</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetRestApis'</a>, <a>getRestApis_limit</a> - The maximum
--   number of returned results per page. The default value is 25 and the
--   maximum value is 500.
--   
--   <a>$sel:position:GetRestApis'</a>, <a>getRestApis_position</a> - The
--   current pagination position in the paged result set.
newGetRestApis :: GetRestApis

-- | Contains references to your APIs and links that guide you in how to
--   interact with your collection. A collection offers a paginated view of
--   your APIs.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newGetRestApisResponse</a> smart constructor.
data GetRestApisResponse
GetRestApisResponse' :: Maybe [RestApi] -> Maybe Text -> Int -> GetRestApisResponse

-- | Create a value of <a>GetRestApisResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetRestApisResponse'</a>,
--   <a>getRestApisResponse_items</a> - The current page of elements from
--   this collection.
--   
--   <a>$sel:position:GetRestApis'</a>, <a>getRestApisResponse_position</a>
--   - Undocumented member.
--   
--   <a>$sel:httpStatus:GetRestApisResponse'</a>,
--   <a>getRestApisResponse_httpStatus</a> - The response's http status
--   code.
newGetRestApisResponse :: Int -> GetRestApisResponse

-- | Gets the documentation versions of an API.
--   
--   <i>See:</i> <a>newGetDocumentationVersions</a> smart constructor.
data GetDocumentationVersions
GetDocumentationVersions' :: Maybe Int -> Maybe Text -> Text -> GetDocumentationVersions

-- | Create a value of <a>GetDocumentationVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetDocumentationVersions'</a>,
--   <a>getDocumentationVersions_limit</a> - The maximum number of returned
--   results per page. The default value is 25 and the maximum value is
--   500.
--   
--   <a>$sel:position:GetDocumentationVersions'</a>,
--   <a>getDocumentationVersions_position</a> - The current pagination
--   position in the paged result set.
--   
--   <a>$sel:restApiId:GetDocumentationVersions'</a>,
--   <a>getDocumentationVersions_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
newGetDocumentationVersions :: Text -> GetDocumentationVersions

-- | The collection of documentation snapshots of an API.
--   
--   Use the DocumentationVersions to manage documentation snapshots
--   associated with various API stages.
--   
--   <a>Documenting an API</a>, DocumentationPart, DocumentationVersion
--   
--   <i>See:</i> <a>newGetDocumentationVersionsResponse</a> smart
--   constructor.
data GetDocumentationVersionsResponse
GetDocumentationVersionsResponse' :: Maybe [DocumentationVersion] -> Maybe Text -> Int -> GetDocumentationVersionsResponse

-- | Create a value of <a>GetDocumentationVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetDocumentationVersionsResponse'</a>,
--   <a>getDocumentationVersionsResponse_items</a> - The current page of
--   elements from this collection.
--   
--   <a>$sel:position:GetDocumentationVersions'</a>,
--   <a>getDocumentationVersionsResponse_position</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:GetDocumentationVersionsResponse'</a>,
--   <a>getDocumentationVersionsResponse_httpStatus</a> - The response's
--   http status code.
newGetDocumentationVersionsResponse :: Int -> GetDocumentationVersionsResponse

-- | Requests API Gateway to create a Deployment resource.
--   
--   <i>See:</i> <a>newCreateDeployment</a> smart constructor.
data CreateDeployment
CreateDeployment' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe CacheClusterSize -> Maybe DeploymentCanarySettings -> Maybe Bool -> Maybe Text -> Maybe Text -> Text -> CreateDeployment

-- | Create a value of <a>CreateDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageDescription:CreateDeployment'</a>,
--   <a>createDeployment_stageDescription</a> - The description of the
--   Stage resource for the Deployment resource to create.
--   
--   <a>$sel:variables:CreateDeployment'</a>,
--   <a>createDeployment_variables</a> - A map that defines the stage
--   variables for the Stage resource that is associated with the new
--   deployment. Variable names can have alphanumeric and underscore
--   characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:tracingEnabled:CreateDeployment'</a>,
--   <a>createDeployment_tracingEnabled</a> - Specifies whether active
--   tracing with X-ray is enabled for the Stage.
--   
--   <a>$sel:cacheClusterSize:CreateDeployment'</a>,
--   <a>createDeployment_cacheClusterSize</a> - Specifies the cache cluster
--   size for the Stage resource specified in the input, if a cache cluster
--   is enabled.
--   
--   <a>$sel:canarySettings:CreateDeployment'</a>,
--   <a>createDeployment_canarySettings</a> - The input configuration for
--   the canary deployment when the deployment is a canary release
--   deployment.
--   
--   <a>$sel:cacheClusterEnabled:CreateDeployment'</a>,
--   <a>createDeployment_cacheClusterEnabled</a> - Enables a cache cluster
--   for the Stage resource specified in the input.
--   
--   <a>$sel:stageName:CreateDeployment'</a>,
--   <a>createDeployment_stageName</a> - The name of the Stage resource for
--   the Deployment resource to create.
--   
--   <a>$sel:description:CreateDeployment'</a>,
--   <a>createDeployment_description</a> - The description for the
--   Deployment resource to create.
--   
--   <a>$sel:restApiId:CreateDeployment'</a>,
--   <a>createDeployment_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
newCreateDeployment :: Text -> CreateDeployment

-- | An immutable representation of a RestApi resource that can be called
--   by users using Stages. A deployment must be associated with a Stage
--   for it to be callable over the Internet.
--   
--   To create a deployment, call <tt>POST</tt> on the Deployments resource
--   of a RestApi. To view, update, or delete a deployment, call
--   <tt>GET</tt>, <tt>PATCH</tt>, or <tt>DELETE</tt> on the specified
--   deployment resource
--   (<tt>/restapis/{restapi_id}/deployments/{deployment_id}</tt>).
--   
--   RestApi, Deployments, Stage, <a>AWS CLI</a>, <a>AWS SDKs</a>
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe (HashMap Text (HashMap Text MethodSnapshot)) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Deployment

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiSummary:Deployment'</a>, <a>deployment_apiSummary</a> - A
--   summary of the RestApi at the date and time that the deployment
--   resource was created.
--   
--   <a>$sel:createdDate:Deployment'</a>, <a>deployment_createdDate</a> -
--   The date and time that the deployment resource was created.
--   
--   <a>$sel:id:Deployment'</a>, <a>deployment_id</a> - The identifier for
--   the deployment resource.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description for the deployment resource.
newDeployment :: Deployment

-- | Gets the VpcLinks collection under the caller's account in a selected
--   region.
--   
--   <i>See:</i> <a>newGetVpcLinks</a> smart constructor.
data GetVpcLinks
GetVpcLinks' :: Maybe Int -> Maybe Text -> GetVpcLinks

-- | Create a value of <a>GetVpcLinks</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetVpcLinks'</a>, <a>getVpcLinks_limit</a> - The maximum
--   number of returned results per page. The default value is 25 and the
--   maximum value is 500.
--   
--   <a>$sel:position:GetVpcLinks'</a>, <a>getVpcLinks_position</a> - The
--   current pagination position in the paged result set.
newGetVpcLinks :: GetVpcLinks

-- | The collection of VPC links under the caller's account in a region.
--   
--   <a>Getting Started with Private Integrations</a>, <a>Set up Private
--   Integrations</a>
--   
--   <i>See:</i> <a>newGetVpcLinksResponse</a> smart constructor.
data GetVpcLinksResponse
GetVpcLinksResponse' :: Maybe [VpcLink] -> Maybe Text -> Int -> GetVpcLinksResponse

-- | Create a value of <a>GetVpcLinksResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetVpcLinksResponse'</a>,
--   <a>getVpcLinksResponse_items</a> - The current page of elements from
--   this collection.
--   
--   <a>$sel:position:GetVpcLinks'</a>, <a>getVpcLinksResponse_position</a>
--   - Undocumented member.
--   
--   <a>$sel:httpStatus:GetVpcLinksResponse'</a>,
--   <a>getVpcLinksResponse_httpStatus</a> - The response's http status
--   code.
newGetVpcLinksResponse :: Int -> GetVpcLinksResponse

-- | Requests API Gateway to create a new BasePathMapping resource.
--   
--   <i>See:</i> <a>newCreateBasePathMapping</a> smart constructor.
data CreateBasePathMapping
CreateBasePathMapping' :: Maybe Text -> Maybe Text -> Text -> Text -> CreateBasePathMapping

-- | Create a value of <a>CreateBasePathMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:CreateBasePathMapping'</a>,
--   <a>createBasePathMapping_stage</a> - The name of the API's stage that
--   you want to use for this mapping. Specify '(none)' if you want callers
--   to explicitly specify the stage name after any base path name.
--   
--   <a>$sel:basePath:CreateBasePathMapping'</a>,
--   <a>createBasePathMapping_basePath</a> - The base path name that
--   callers of the API must provide as part of the URL after the domain
--   name. This value must be unique for all of the mappings across a
--   single API. Specify '(none)' if you do not want callers to specify a
--   base path name after the domain name.
--   
--   <a>$sel:domainName:CreateBasePathMapping'</a>,
--   <a>createBasePathMapping_domainName</a> - [Required] The domain name
--   of the BasePathMapping resource to create.
--   
--   <a>$sel:restApiId:CreateBasePathMapping'</a>,
--   <a>createBasePathMapping_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
newCreateBasePathMapping :: Text -> Text -> CreateBasePathMapping

-- | Represents the base path that callers of the API must provide as part
--   of the URL after the domain name.
--   
--   A custom domain name plus a <tt>BasePathMapping</tt> specification
--   identifies a deployed RestApi in a given stage of the owner Account.
--   
--   <a>Use Custom Domain Names</a>
--   
--   <i>See:</i> <a>newBasePathMapping</a> smart constructor.
data BasePathMapping
BasePathMapping' :: Maybe Text -> Maybe Text -> Maybe Text -> BasePathMapping

-- | Create a value of <a>BasePathMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:BasePathMapping'</a>, <a>basePathMapping_stage</a> - The
--   name of the associated stage.
--   
--   <a>$sel:basePath:BasePathMapping'</a>, <a>basePathMapping_basePath</a>
--   - The base path name that callers of the API must provide as part of
--   the URL after the domain name.
--   
--   <a>$sel:restApiId:BasePathMapping'</a>,
--   <a>basePathMapping_restApiId</a> - The string identifier of the
--   associated RestApi.
newBasePathMapping :: BasePathMapping

-- | Represents a request to get the integration configuration.
--   
--   <i>See:</i> <a>newGetIntegration</a> smart constructor.
data GetIntegration
GetIntegration' :: Text -> Text -> Text -> GetIntegration

-- | Create a value of <a>GetIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetIntegration'</a>, <a>getIntegration_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:GetIntegration'</a>,
--   <a>getIntegration_resourceId</a> - [Required] Specifies a get
--   integration request's resource identifier
--   
--   <a>$sel:httpMethod:GetIntegration'</a>,
--   <a>getIntegration_httpMethod</a> - [Required] Specifies a get
--   integration request's HTTP method.
newGetIntegration :: Text -> Text -> Text -> GetIntegration

-- | Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.
--   
--   In the API Gateway console, the built-in Lambda integration is an AWS
--   integration.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegration</a> smart constructor.
data Integration
Integration' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe Text -> Maybe (HashMap Text IntegrationResponse) -> Maybe TlsConfig -> Maybe Text -> Maybe Int -> Maybe IntegrationType -> Maybe ConnectionType -> Maybe [Text] -> Integration

-- | Create a value of <a>Integration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:Integration'</a>, <a>integration_httpMethod</a> -
--   Specifies the integration's HTTP method type.
--   
--   <a>$sel:requestTemplates:Integration'</a>,
--   <a>integration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   
--   <a>$sel:credentials:Integration'</a>, <a>integration_credentials</a> -
--   Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
--   
--   <a>$sel:connectionId:Integration'</a>, <a>integration_connectionId</a>
--   - The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
--   
--   <a>$sel:requestParameters:Integration'</a>,
--   <a>integration_requestParameters</a> - A key-value map specifying
--   request parameters that are passed from the method request to the back
--   end. The key is an integration request parameter name and the
--   associated value is a method request parameter value or static value
--   that must be enclosed within single quotes and pre-encoded as required
--   by the back end. The method request parameter value must match the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> must be a valid and unique method
--   request parameter name.
--   
--   <a>$sel:contentHandling:Integration'</a>,
--   <a>integration_contentHandling</a> - Specifies how to handle request
--   payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
--   
--   <a>$sel:passthroughBehavior:Integration'</a>,
--   <a>integration_passthroughBehavior</a> - Specifies how the method
--   request body of an unmapped content type will be passed through the
--   integration request to the back end without transformation. A content
--   type is unmapped if no mapping template is defined in the integration
--   or the content type does not match any of the mapped content types, as
--   specified in <tt>requestTemplates</tt>. The valid value is one of the
--   following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
--   
--   <a>$sel:uri:Integration'</a>, <a>integration_uri</a> - Specifies
--   Uniform Resource Identifier (URI) of the integration endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
--   
--   <a>$sel:integrationResponses:Integration'</a>,
--   <a>integration_integrationResponses</a> - Specifies the integration's
--   responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
--   
--   <a>$sel:tlsConfig:Integration'</a>, <a>integration_tlsConfig</a> -
--   Specifies the TLS configuration for an integration.
--   
--   <a>$sel:cacheNamespace:Integration'</a>,
--   <a>integration_cacheNamespace</a> - Specifies a group of related
--   cached parameters. By default, API Gateway uses the resource ID as the
--   <tt>cacheNamespace</tt>. You can specify the same
--   <tt>cacheNamespace</tt> across resources to return the same cached
--   data for requests to different resources.
--   
--   <a>$sel:timeoutInMillis:Integration'</a>,
--   <a>integration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds. The default value is 29,000 milliseconds or 29
--   seconds.
--   
--   <a>$sel:type':Integration'</a>, <a>integration_type</a> - Specifies an
--   API method integration type. The valid value is one of the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
--   
--   <a>$sel:connectionType:Integration'</a>,
--   <a>integration_connectionType</a> - The type of the network connection
--   to the integration endpoint. The valid value is <tt>INTERNET</tt> for
--   connections through the public routable internet or <tt>VPC_LINK</tt>
--   for private connections between API Gateway and a network load
--   balancer in a VPC. The default value is <tt>INTERNET</tt>.
--   
--   <a>$sel:cacheKeyParameters:Integration'</a>,
--   <a>integration_cacheKeyParameters</a> - A list of request parameters
--   whose values API Gateway caches. To be valid values for
--   <tt>cacheKeyParameters</tt>, these parameters must also be specified
--   for Method <tt>requestParameters</tt>.
newIntegration :: Integration

-- | Gets the documentation parts of an API. The result may be filtered by
--   the type, name, or path of API entities (targets).
--   
--   <i>See:</i> <a>newGetDocumentationParts</a> smart constructor.
data GetDocumentationParts
GetDocumentationParts' :: Maybe Text -> Maybe LocationStatusType -> Maybe Text -> Maybe Int -> Maybe DocumentationPartType -> Maybe Text -> Text -> GetDocumentationParts

-- | Create a value of <a>GetDocumentationParts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:GetDocumentationParts'</a>,
--   <a>getDocumentationParts_path</a> - The path of API entities of the
--   to-be-retrieved documentation parts.
--   
--   <a>$sel:locationStatus:GetDocumentationParts'</a>,
--   <a>getDocumentationParts_locationStatus</a> - The status of the API
--   documentation parts to retrieve. Valid values are <tt>DOCUMENTED</tt>
--   for retrieving DocumentationPart resources with content and
--   <tt>UNDOCUMENTED</tt> for DocumentationPart resources without content.
--   
--   <a>$sel:nameQuery:GetDocumentationParts'</a>,
--   <a>getDocumentationParts_nameQuery</a> - The name of API entities of
--   the to-be-retrieved documentation parts.
--   
--   <a>$sel:limit:GetDocumentationParts'</a>,
--   <a>getDocumentationParts_limit</a> - The maximum number of returned
--   results per page. The default value is 25 and the maximum value is
--   500.
--   
--   <a>$sel:type':GetDocumentationParts'</a>,
--   <a>getDocumentationParts_type</a> - The type of API entities of the
--   to-be-retrieved documentation parts.
--   
--   <a>$sel:position:GetDocumentationParts'</a>,
--   <a>getDocumentationParts_position</a> - The current pagination
--   position in the paged result set.
--   
--   <a>$sel:restApiId:GetDocumentationParts'</a>,
--   <a>getDocumentationParts_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
newGetDocumentationParts :: Text -> GetDocumentationParts

-- | The collection of documentation parts of an API.
--   
--   <a>Documenting an API</a>, DocumentationPart
--   
--   <i>See:</i> <a>newGetDocumentationPartsResponse</a> smart constructor.
data GetDocumentationPartsResponse
GetDocumentationPartsResponse' :: Maybe [DocumentationPart] -> Maybe Text -> Int -> GetDocumentationPartsResponse

-- | Create a value of <a>GetDocumentationPartsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetDocumentationPartsResponse'</a>,
--   <a>getDocumentationPartsResponse_items</a> - The current page of
--   elements from this collection.
--   
--   <a>$sel:position:GetDocumentationParts'</a>,
--   <a>getDocumentationPartsResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetDocumentationPartsResponse'</a>,
--   <a>getDocumentationPartsResponse_httpStatus</a> - The response's http
--   status code.
newGetDocumentationPartsResponse :: Int -> GetDocumentationPartsResponse

-- | Requests API Gateway to change information about the current Account
--   resource.
--   
--   <i>See:</i> <a>newUpdateAccount</a> smart constructor.
data UpdateAccount
UpdateAccount' :: Maybe [PatchOperation] -> UpdateAccount

-- | Create a value of <a>UpdateAccount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateAccount'</a>,
--   <a>updateAccount_patchOperations</a> - A list of update operations to
--   be applied to the specified resource and in the order specified in
--   this list.
newUpdateAccount :: UpdateAccount

-- | Represents an AWS account that is associated with API Gateway.
--   
--   To view the account info, call <tt>GET</tt> on this resource.
--   
--   <h4>Error Codes</h4>
--   
--   The following exception may be thrown when the request fails.
--   
--   <ul>
--   <li>UnauthorizedException</li>
--   <li>NotFoundException</li>
--   <li>TooManyRequestsException</li>
--   </ul>
--   
--   For detailed error code information, including the corresponding HTTP
--   Status Codes, see <a>API Gateway Error Codes</a>
--   
--   <h4>Example: Get the information about an account.</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /account HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160531T184618Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/account-apigateway-{rel}.html", "name": "account", "templated": true }, "self": { "href": "/account" }, "account:update": { "href": "/account" } }, "cloudwatchRoleArn": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "throttleSettings": { "rateLimit": 500, "burstLimit": 1000 } }
--   </pre>
--   
--   In addition to making the REST API call directly, you can use the AWS
--   CLI and an AWS SDK to access this resource.
--   
--   <a>API Gateway Limits</a> <a>Developer Guide</a>, <a>AWS CLI</a>
--   
--   <i>See:</i> <a>newAccount</a> smart constructor.
data Account
Account' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe ThrottleSettings -> Account

-- | Create a value of <a>Account</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyVersion:Account'</a>, <a>account_apiKeyVersion</a> - The
--   version of the API keys used for the account.
--   
--   <a>$sel:cloudwatchRoleArn:Account'</a>,
--   <a>account_cloudwatchRoleArn</a> - The ARN of an Amazon CloudWatch
--   role for the current Account.
--   
--   <a>$sel:features:Account'</a>, <a>account_features</a> - A list of
--   features supported for the account. When usage plans are enabled, the
--   features list will include an entry of <tt>"UsagePlans"</tt>.
--   
--   <a>$sel:throttleSettings:Account'</a>, <a>account_throttleSettings</a>
--   - Specifies the API request limits configured for the current Account.
newAccount :: Account

-- | The GET request to get a usage plan of a given plan identifier.
--   
--   <i>See:</i> <a>newGetUsagePlan</a> smart constructor.
data GetUsagePlan
GetUsagePlan' :: Text -> GetUsagePlan

-- | Create a value of <a>GetUsagePlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:GetUsagePlan'</a>, <a>getUsagePlan_usagePlanId</a>
--   - [Required] The identifier of the UsagePlan resource to be retrieved.
newGetUsagePlan :: Text -> GetUsagePlan

-- | Represents a usage plan than can specify who can assess associated API
--   stages with specified request limits and quotas.
--   
--   In a usage plan, you associate an API by specifying the API's Id and a
--   stage name of the specified API. You add plan customers by adding API
--   keys to the plan.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlan</a> smart constructor.
data UsagePlan
UsagePlan' :: Maybe [ApiStage] -> Maybe Text -> Maybe Text -> Maybe ThrottleSettings -> Maybe QuotaSettings -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> UsagePlan

-- | Create a value of <a>UsagePlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiStages:UsagePlan'</a>, <a>usagePlan_apiStages</a> - The
--   associated API stages of a usage plan.
--   
--   <a>$sel:name:UsagePlan'</a>, <a>usagePlan_name</a> - The name of a
--   usage plan.
--   
--   <a>$sel:id:UsagePlan'</a>, <a>usagePlan_id</a> - The identifier of a
--   UsagePlan resource.
--   
--   <a>$sel:throttle:UsagePlan'</a>, <a>usagePlan_throttle</a> - The
--   request throttle limits of a usage plan.
--   
--   <a>$sel:quota:UsagePlan'</a>, <a>usagePlan_quota</a> - The maximum
--   number of permitted requests per a given unit time interval.
--   
--   <a>$sel:description:UsagePlan'</a>, <a>usagePlan_description</a> - The
--   description of a usage plan.
--   
--   <a>$sel:productCode:UsagePlan'</a>, <a>usagePlan_productCode</a> - The
--   AWS Markeplace product identifier to associate with the usage plan as
--   a SaaS product on AWS Marketplace.
--   
--   <a>$sel:tags:UsagePlan'</a>, <a>usagePlan_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newUsagePlan :: UsagePlan

-- | Requests API Gateway to delete a Deployment resource.
--   
--   <i>See:</i> <a>newDeleteDeployment</a> smart constructor.
data DeleteDeployment
DeleteDeployment' :: Text -> Text -> DeleteDeployment

-- | Create a value of <a>DeleteDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteDeployment'</a>,
--   <a>deleteDeployment_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:deploymentId:DeleteDeployment'</a>,
--   <a>deleteDeployment_deploymentId</a> - [Required] The identifier of
--   the Deployment resource to delete.
newDeleteDeployment :: Text -> Text -> DeleteDeployment

-- | <i>See:</i> <a>newDeleteDeploymentResponse</a> smart constructor.
data DeleteDeploymentResponse
DeleteDeploymentResponse' :: DeleteDeploymentResponse

-- | Create a value of <a>DeleteDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDeploymentResponse :: DeleteDeploymentResponse

-- | Requests API Gateway to change information about a Deployment
--   resource.
--   
--   <i>See:</i> <a>newUpdateDeployment</a> smart constructor.
data UpdateDeployment
UpdateDeployment' :: Maybe [PatchOperation] -> Text -> Text -> UpdateDeployment

-- | Create a value of <a>UpdateDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateDeployment'</a>,
--   <a>updateDeployment_patchOperations</a> - A list of update operations
--   to be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:restApiId:UpdateDeployment'</a>,
--   <a>updateDeployment_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:deploymentId:UpdateDeployment'</a>,
--   <a>updateDeployment_deploymentId</a> - The replacement identifier for
--   the Deployment resource to change information about.
newUpdateDeployment :: Text -> Text -> UpdateDeployment

-- | An immutable representation of a RestApi resource that can be called
--   by users using Stages. A deployment must be associated with a Stage
--   for it to be callable over the Internet.
--   
--   To create a deployment, call <tt>POST</tt> on the Deployments resource
--   of a RestApi. To view, update, or delete a deployment, call
--   <tt>GET</tt>, <tt>PATCH</tt>, or <tt>DELETE</tt> on the specified
--   deployment resource
--   (<tt>/restapis/{restapi_id}/deployments/{deployment_id}</tt>).
--   
--   RestApi, Deployments, Stage, <a>AWS CLI</a>, <a>AWS SDKs</a>
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe (HashMap Text (HashMap Text MethodSnapshot)) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Deployment

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiSummary:Deployment'</a>, <a>deployment_apiSummary</a> - A
--   summary of the RestApi at the date and time that the deployment
--   resource was created.
--   
--   <a>$sel:createdDate:Deployment'</a>, <a>deployment_createdDate</a> -
--   The date and time that the deployment resource was created.
--   
--   <a>$sel:id:Deployment'</a>, <a>deployment_id</a> - The identifier for
--   the deployment resource.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description for the deployment resource.
newDeployment :: Deployment

-- | Gets a specified documentation part of a given API.
--   
--   <i>See:</i> <a>newGetDocumentationPart</a> smart constructor.
data GetDocumentationPart
GetDocumentationPart' :: Text -> Text -> GetDocumentationPart

-- | Create a value of <a>GetDocumentationPart</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetDocumentationPart'</a>,
--   <a>getDocumentationPart_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:documentationPartId:GetDocumentationPart'</a>,
--   <a>getDocumentationPart_documentationPartId</a> - [Required] The
--   string identifier of the associated RestApi.
newGetDocumentationPart :: Text -> Text -> GetDocumentationPart

-- | A documentation part for a targeted API entity.
--   
--   A documentation part consists of a content map (<tt>properties</tt>)
--   and a target (<tt>location</tt>). The target specifies an API entity
--   to which the documentation content applies. The supported API entity
--   types are <tt>API</tt>, <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. Valid <tt>location</tt> fields depend on
--   the API entity type. All valid fields are not required.
--   
--   The content map is a JSON string of API-specific key-value pairs.
--   Although an API can use any shape for the content map, only the
--   OpenAPI-compliant documentation fields will be injected into the
--   associated API entity definition in the exported OpenAPI definition
--   file.
--   
--   <a>Documenting an API</a>, DocumentationParts
--   
--   <i>See:</i> <a>newDocumentationPart</a> smart constructor.
data DocumentationPart
DocumentationPart' :: Maybe DocumentationPartLocation -> Maybe Text -> Maybe Text -> DocumentationPart

-- | Create a value of <a>DocumentationPart</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:DocumentationPart'</a>,
--   <a>documentationPart_location</a> - The location of the API entity to
--   which the documentation applies. Valid fields depend on the targeted
--   API entity type. All the valid location fields are not required. If
--   not explicitly specified, a valid location field is treated as a
--   wildcard and associated documentation content may be inherited by
--   matching entities, unless overridden.
--   
--   <a>$sel:id:DocumentationPart'</a>, <a>documentationPart_id</a> - The
--   DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
--   
--   <a>$sel:properties:DocumentationPart'</a>,
--   <a>documentationPart_properties</a> - A content map of API-specific
--   key-value pairs describing the targeted API entity. The map must be
--   encoded as a JSON string, e.g., <tt>"{ \"description\": \"The API does
--   ...\" }"</tt>. Only OpenAPI-compliant documentation-related fields
--   from the properties map are exported and, hence, published as part of
--   the API entity definitions, while the original documentation parts are
--   exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
newDocumentationPart :: DocumentationPart

-- | Request to delete a Resource.
--   
--   <i>See:</i> <a>newDeleteResource</a> smart constructor.
data DeleteResource
DeleteResource' :: Text -> Text -> DeleteResource

-- | Create a value of <a>DeleteResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteResource'</a>, <a>deleteResource_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:DeleteResource'</a>,
--   <a>deleteResource_resourceId</a> - [Required] The identifier of the
--   Resource resource.
newDeleteResource :: Text -> Text -> DeleteResource

-- | <i>See:</i> <a>newDeleteResourceResponse</a> smart constructor.
data DeleteResourceResponse
DeleteResourceResponse' :: DeleteResourceResponse

-- | Create a value of <a>DeleteResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteResourceResponse :: DeleteResourceResponse

-- | Request to change information about a Resource resource.
--   
--   <i>See:</i> <a>newUpdateResource</a> smart constructor.
data UpdateResource
UpdateResource' :: Maybe [PatchOperation] -> Text -> Text -> UpdateResource

-- | Create a value of <a>UpdateResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateResource'</a>,
--   <a>updateResource_patchOperations</a> - A list of update operations to
--   be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:restApiId:UpdateResource'</a>, <a>updateResource_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:UpdateResource'</a>,
--   <a>updateResource_resourceId</a> - [Required] The identifier of the
--   Resource resource.
newUpdateResource :: Text -> Text -> UpdateResource

-- | Represents an API resource.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Method) -> Maybe Text -> Resource

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathPart:Resource'</a>, <a>resource_pathPart</a> - The last
--   path segment for this resource.
--   
--   <a>$sel:path:Resource'</a>, <a>resource_path</a> - The full path for
--   this resource.
--   
--   <a>$sel:id:Resource'</a>, <a>resource_id</a> - The resource's
--   identifier.
--   
--   <a>$sel:resourceMethods:Resource'</a>, <a>resource_resourceMethods</a>
--   - Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
--   
--   <a>$sel:parentId:Resource'</a>, <a>resource_parentId</a> - The parent
--   resource's identifier.
newResource :: Resource

-- | Creates a RequestValidator of a given RestApi.
--   
--   <i>See:</i> <a>newCreateRequestValidator</a> smart constructor.
data CreateRequestValidator
CreateRequestValidator' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Text -> CreateRequestValidator

-- | Create a value of <a>CreateRequestValidator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validateRequestParameters:CreateRequestValidator'</a>,
--   <a>createRequestValidator_validateRequestParameters</a> - A Boolean
--   flag to indicate whether to validate request parameters,
--   <tt>true</tt>, or not <tt>false</tt>.
--   
--   <a>$sel:name:CreateRequestValidator'</a>,
--   <a>createRequestValidator_name</a> - The name of the to-be-created
--   RequestValidator.
--   
--   <a>$sel:validateRequestBody:CreateRequestValidator'</a>,
--   <a>createRequestValidator_validateRequestBody</a> - A Boolean flag to
--   indicate whether to validate request body according to the configured
--   model schema for the method (<tt>true</tt>) or not (<tt>false</tt>).
--   
--   <a>$sel:restApiId:CreateRequestValidator'</a>,
--   <a>createRequestValidator_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
newCreateRequestValidator :: Text -> CreateRequestValidator

-- | A set of validation rules for incoming Method requests.
--   
--   In OpenAPI, a RequestValidator of an API is defined by the
--   <a>x-amazon-apigateway-request-validators.requestValidator</a> object.
--   It the referenced using the
--   <a>x-amazon-apigateway-request-validator</a> property.
--   
--   <a>Enable Basic Request Validation in API Gateway</a>
--   
--   <i>See:</i> <a>newRequestValidator</a> smart constructor.
data RequestValidator
RequestValidator' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> RequestValidator

-- | Create a value of <a>RequestValidator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validateRequestParameters:RequestValidator'</a>,
--   <a>requestValidator_validateRequestParameters</a> - A Boolean flag to
--   indicate whether to validate request parameters (<tt>true</tt>) or not
--   (<tt>false</tt>).
--   
--   <a>$sel:name:RequestValidator'</a>, <a>requestValidator_name</a> - The
--   name of this RequestValidator
--   
--   <a>$sel:validateRequestBody:RequestValidator'</a>,
--   <a>requestValidator_validateRequestBody</a> - A Boolean flag to
--   indicate whether to validate a request body according to the
--   configured Model schema.
--   
--   <a>$sel:id:RequestValidator'</a>, <a>requestValidator_id</a> - The
--   identifier of this RequestValidator.
newRequestValidator :: RequestValidator

-- | Import documentation parts from an external (e.g., OpenAPI) definition
--   file.
--   
--   <i>See:</i> <a>newImportDocumentationParts</a> smart constructor.
data ImportDocumentationParts
ImportDocumentationParts' :: Maybe PutMode -> Maybe Bool -> Text -> ByteString -> ImportDocumentationParts

-- | Create a value of <a>ImportDocumentationParts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:ImportDocumentationParts'</a>,
--   <a>importDocumentationParts_mode</a> - A query parameter to indicate
--   whether to overwrite (<tt>OVERWRITE</tt>) any existing
--   DocumentationParts definition or to merge (<tt>MERGE</tt>) the new
--   definition into the existing one. The default value is <tt>MERGE</tt>.
--   
--   <a>$sel:failOnWarnings:ImportDocumentationParts'</a>,
--   <a>importDocumentationParts_failOnWarnings</a> - A query parameter to
--   specify whether to rollback the documentation importation
--   (<tt>true</tt>) or not (<tt>false</tt>) when a warning is encountered.
--   The default value is <tt>false</tt>.
--   
--   <a>$sel:restApiId:ImportDocumentationParts'</a>,
--   <a>importDocumentationParts_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:body:ImportDocumentationParts'</a>,
--   <a>importDocumentationParts_body</a> - [Required] Raw byte array
--   representing the to-be-imported documentation parts. To import from an
--   OpenAPI file, this is a JSON object.
newImportDocumentationParts :: Text -> ByteString -> ImportDocumentationParts

-- | A collection of the imported DocumentationPart identifiers.
--   
--   This is used to return the result when documentation parts in an
--   external (e.g., OpenAPI) file are imported into API Gateway
--   
--   <a>Documenting an API</a>, <a>documentationpart:import</a>,
--   DocumentationPart
--   
--   <i>See:</i> <a>newImportDocumentationPartsResponse</a> smart
--   constructor.
data ImportDocumentationPartsResponse
ImportDocumentationPartsResponse' :: Maybe [Text] -> Maybe [Text] -> Int -> ImportDocumentationPartsResponse

-- | Create a value of <a>ImportDocumentationPartsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:ImportDocumentationPartsResponse'</a>,
--   <a>importDocumentationPartsResponse_ids</a> - A list of the returned
--   documentation part identifiers.
--   
--   <a>$sel:warnings:ImportDocumentationPartsResponse'</a>,
--   <a>importDocumentationPartsResponse_warnings</a> - A list of warning
--   messages reported during import of documentation parts.
--   
--   <a>$sel:httpStatus:ImportDocumentationPartsResponse'</a>,
--   <a>importDocumentationPartsResponse_httpStatus</a> - The response's
--   http status code.
newImportDocumentationPartsResponse :: Int -> ImportDocumentationPartsResponse

-- | The GET request to get the usage data of a usage plan in a specified
--   time interval.
--   
--   <i>See:</i> <a>newGetUsage</a> smart constructor.
data GetUsage
GetUsage' :: Maybe Text -> Maybe Int -> Maybe Text -> Text -> Text -> Text -> GetUsage

-- | Create a value of <a>GetUsage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyId:GetUsage'</a>, <a>getUsage_keyId</a> - The Id of the API
--   key associated with the resultant usage data.
--   
--   <a>$sel:limit:GetUsage'</a>, <a>getUsage_limit</a> - The maximum
--   number of returned results per page. The default value is 25 and the
--   maximum value is 500.
--   
--   <a>$sel:position:GetUsage'</a>, <a>getUsage_position</a> - The current
--   pagination position in the paged result set.
--   
--   <a>$sel:usagePlanId:GetUsage'</a>, <a>getUsage_usagePlanId</a> -
--   [Required] The Id of the usage plan associated with the usage data.
--   
--   <a>$sel:startDate:GetUsage'</a>, <a>getUsage_startDate</a> -
--   [Required] The starting date (e.g., 2016-01-01) of the usage data.
--   
--   <a>$sel:endDate:GetUsage'</a>, <a>getUsage_endDate</a> - [Required]
--   The ending date (e.g., 2016-12-31) of the usage data.
newGetUsage :: Text -> Text -> Text -> GetUsage

-- | Represents the usage data of a usage plan.
--   
--   <a>Create and Use Usage Plans</a>, <a>Manage Usage in a Usage Plan</a>
--   
--   <i>See:</i> <a>newUsage</a> smart constructor.
data Usage
Usage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text [[Integer]]) -> Maybe Text -> Maybe Text -> Usage

-- | Create a value of <a>Usage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:Usage'</a>, <a>usage_usagePlanId</a> - The plan Id
--   associated with this usage data.
--   
--   <a>$sel:endDate:Usage'</a>, <a>usage_endDate</a> - The ending date of
--   the usage data.
--   
--   <a>$sel:items:Usage'</a>, <a>usage_items</a> - The usage data, as
--   daily logs of used and remaining quotas, over the specified time
--   interval indexed over the API keys in a usage plan. For example,
--   <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90], [100,
--   10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value and
--   the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
--   
--   <a>$sel:startDate:Usage'</a>, <a>usage_startDate</a> - The starting
--   date of the usage data.
--   
--   <a>$sel:position:Usage'</a>, <a>usage_position</a> - Undocumented
--   member.
newUsage :: Usage

-- | Gets a specified VPC link under the caller's account in a region.
--   
--   <i>See:</i> <a>newGetVpcLink</a> smart constructor.
data GetVpcLink
GetVpcLink' :: Text -> GetVpcLink

-- | Create a value of <a>GetVpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcLinkId:GetVpcLink'</a>, <a>getVpcLink_vpcLinkId</a> -
--   [Required] The identifier of the VpcLink. It is used in an Integration
--   to reference this VpcLink.
newGetVpcLink :: Text -> GetVpcLink

-- | An API Gateway VPC link for a RestApi to access resources in an Amazon
--   Virtual Private Cloud (VPC).
--   
--   To enable access to a resource in an Amazon Virtual Private Cloud
--   through Amazon API Gateway, you, as an API developer, create a VpcLink
--   resource targeted for one or more network load balancers of the VPC
--   and then integrate an API method with a private integration that uses
--   the VpcLink. The private integration has an integration type of
--   <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> and has a connection type of
--   <tt>VPC_LINK</tt>. The integration uses the <tt>connectionId</tt>
--   property to identify the VpcLink used.
--   
--   <i>See:</i> <a>newVpcLink</a> smart constructor.
data VpcLink
VpcLink' :: Maybe VpcLinkStatus -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> VpcLink

-- | Create a value of <a>VpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VpcLink'</a>, <a>vpcLink_status</a> - The status of the
--   VPC link. The valid values are <tt>AVAILABLE</tt>, <tt>PENDING</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an API will wait if
--   the status is <tt>PENDING</tt> and will fail if the status is
--   <tt>DELETING</tt>.
--   
--   <a>$sel:targetArns:VpcLink'</a>, <a>vpcLink_targetArns</a> - The ARN
--   of the network load balancer of the VPC targeted by the VPC link. The
--   network load balancer must be owned by the same AWS account of the API
--   owner.
--   
--   <a>$sel:name:VpcLink'</a>, <a>vpcLink_name</a> - The name used to
--   label and identify the VPC link.
--   
--   <a>$sel:statusMessage:VpcLink'</a>, <a>vpcLink_statusMessage</a> - A
--   description about the VPC link status.
--   
--   <a>$sel:id:VpcLink'</a>, <a>vpcLink_id</a> - The identifier of the
--   VpcLink. It is used in an Integration to reference this VpcLink.
--   
--   <a>$sel:description:VpcLink'</a>, <a>vpcLink_description</a> - The
--   description of the VPC link.
--   
--   <a>$sel:tags:VpcLink'</a>, <a>vpcLink_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newVpcLink :: VpcLink

-- | Request to add a new Model to an existing RestApi resource.
--   
--   <i>See:</i> <a>newCreateModel</a> smart constructor.
data CreateModel
CreateModel' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> CreateModel

-- | Create a value of <a>CreateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:CreateModel'</a>, <a>createModel_schema</a> - The
--   schema for the model. For <tt>application/json</tt> models, this
--   should be <a>JSON schema draft 4</a> model.
--   
--   <a>$sel:description:CreateModel'</a>, <a>createModel_description</a> -
--   The description of the model.
--   
--   <a>$sel:restApiId:CreateModel'</a>, <a>createModel_restApiId</a> -
--   [Required] The RestApi identifier under which the Model will be
--   created.
--   
--   <a>$sel:name:CreateModel'</a>, <a>createModel_name</a> - [Required]
--   The name of the model. Must be alphanumeric.
--   
--   <a>$sel:contentType:CreateModel'</a>, <a>createModel_contentType</a> -
--   [Required] The content-type for the model.
newCreateModel :: Text -> Text -> Text -> CreateModel

-- | Represents the data structure of a method's request or response
--   payload.
--   
--   A request model defines the data structure of the client-supplied
--   request payload. A response model defines the data structure of the
--   response payload returned by the back end. Although not required,
--   models are useful for mapping payloads between the front end and back
--   end.
--   
--   A model is used for generating an API's SDK, validating the input
--   request body, and creating a skeletal mapping template.
--   
--   Method, MethodResponse, <a>Models and Mappings</a>
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Model

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:Model'</a>, <a>model_schema</a> - The schema for the
--   model. For <tt>application/json</tt> models, this should be <a>JSON
--   schema draft 4</a> model. Do not include "\*/" characters in the
--   description of any properties because such "\*/" characters may be
--   interpreted as the closing marker for comments in some languages, such
--   as Java or JavaScript, causing the installation of your API's SDK
--   generated by API Gateway to fail.
--   
--   <a>$sel:name:Model'</a>, <a>model_name</a> - The name of the model.
--   Must be an alphanumeric string.
--   
--   <a>$sel:id:Model'</a>, <a>model_id</a> - The identifier for the model
--   resource.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The
--   description of the model.
--   
--   <a>$sel:contentType:Model'</a>, <a>model_contentType</a> - The
--   content-type for the model.
newModel :: Model

-- | Represents a get integration response request.
--   
--   <i>See:</i> <a>newGetIntegrationResponse</a> smart constructor.
data GetIntegrationResponse
GetIntegrationResponse' :: Text -> Text -> Text -> Text -> GetIntegrationResponse

-- | Create a value of <a>GetIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_resourceId</a> - [Required] Specifies a get
--   integration response request's resource identifier.
--   
--   <a>$sel:httpMethod:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_httpMethod</a> - [Required] Specifies a get
--   integration response request's HTTP method.
--   
--   <a>$sel:statusCode:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_statusCode</a> - [Required] Specifies a get
--   integration response request's status code.
newGetIntegrationResponse :: Text -> Text -> Text -> Text -> GetIntegrationResponse

-- | Represents an integration response. The status code must map to an
--   existing MethodResponse, and parameters and templates can be used to
--   transform the back-end response.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegrationResponse</a> smart constructor.
data IntegrationResponse
IntegrationResponse' :: Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> IntegrationResponse

-- | Create a value of <a>IntegrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentHandling:IntegrationResponse'</a>,
--   <a>integrationResponse_contentHandling</a> - Specifies how to handle
--   response payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
--   
--   <a>$sel:responseTemplates:IntegrationResponse'</a>,
--   <a>integrationResponse_responseTemplates</a> - Specifies the templates
--   used to transform the integration response body. Response templates
--   are represented as a key/value map, with a content-type as the key and
--   a template as the value.
--   
--   <a>$sel:selectionPattern:IntegrationResponse'</a>,
--   <a>integrationResponse_selectionPattern</a> - Specifies the regular
--   expression (regex) pattern used to choose an integration response
--   based on the response from the back end. For example, if the success
--   response returns nothing and the error response returns some string,
--   you could use the <tt>.+</tt> regex to match error response. However,
--   make sure that the error response does not contain any newline
--   (<tt>\n</tt>) character in such cases. If the back end is an AWS
--   Lambda function, the AWS Lambda function error header is matched. For
--   all other HTTP and AWS back ends, the HTTP status code is matched.
--   
--   <a>$sel:statusCode:IntegrationResponse'</a>,
--   <a>integrationResponse_statusCode</a> - Specifies the status code that
--   is used to map the integration response to an existing MethodResponse.
--   
--   <a>$sel:responseParameters:IntegrationResponse'</a>,
--   <a>integrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the back end. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of <tt>method.response.header.{name}</tt>, where <tt>name</tt>
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
newIntegrationResponse :: IntegrationResponse

-- | A request to create a new domain name.
--   
--   <i>See:</i> <a>newCreateDomainName</a> smart constructor.
data CreateDomainName
CreateDomainName' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SecurityPolicy -> Maybe MutualTlsAuthenticationInput -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe (HashMap Text Text) -> Text -> CreateDomainName

-- | Create a value of <a>CreateDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateName:CreateDomainName'</a>,
--   <a>createDomainName_certificateName</a> - The user-friendly name of
--   the certificate that will be used by edge-optimized endpoint for this
--   domain name.
--   
--   <a>$sel:ownershipVerificationCertificateArn:CreateDomainName'</a>,
--   <a>createDomainName_ownershipVerificationCertificateArn</a> - The ARN
--   of the public certificate issued by ACM to validate ownership of your
--   custom domain. Only required when configuring mutual TLS and using an
--   ACM imported or private CA certificate ARN as the
--   regionalCertificateArn.
--   
--   <a>$sel:regionalCertificateArn:CreateDomainName'</a>,
--   <a>createDomainName_regionalCertificateArn</a> - The reference to an
--   AWS-managed certificate that will be used by regional endpoint for
--   this domain name. AWS Certificate Manager is the only supported
--   source.
--   
--   <a>$sel:certificateArn:CreateDomainName'</a>,
--   <a>createDomainName_certificateArn</a> - The reference to an
--   AWS-managed certificate that will be used by edge-optimized endpoint
--   for this domain name. AWS Certificate Manager is the only supported
--   source.
--   
--   <a>$sel:securityPolicy:CreateDomainName'</a>,
--   <a>createDomainName_securityPolicy</a> - The Transport Layer Security
--   (TLS) version + cipher suite for this DomainName. The valid values are
--   <tt>TLS_1_0</tt> and <tt>TLS_1_2</tt>.
--   
--   <a>$sel:mutualTlsAuthentication:CreateDomainName'</a>,
--   <a>createDomainName_mutualTlsAuthentication</a> - Undocumented member.
--   
--   <a>$sel:certificatePrivateKey:CreateDomainName'</a>,
--   <a>createDomainName_certificatePrivateKey</a> - [Deprecated] Your
--   edge-optimized endpoint's domain name certificate's private key.
--   
--   <a>$sel:regionalCertificateName:CreateDomainName'</a>,
--   <a>createDomainName_regionalCertificateName</a> - The user-friendly
--   name of the certificate that will be used by regional endpoint for
--   this domain name.
--   
--   <a>$sel:certificateBody:CreateDomainName'</a>,
--   <a>createDomainName_certificateBody</a> - [Deprecated] The body of the
--   server certificate that will be used by edge-optimized endpoint for
--   this domain name provided by your certificate authority.
--   
--   <a>$sel:certificateChain:CreateDomainName'</a>,
--   <a>createDomainName_certificateChain</a> - [Deprecated] The
--   intermediate certificates and optionally the root certificate, one
--   after the other without any blank lines, used by an edge-optimized
--   endpoint for this domain name. If you include the root certificate,
--   your certificate chain must start with intermediate certificates and
--   end with the root certificate. Use the intermediate certificates that
--   were provided by your certificate authority. Do not include any
--   intermediaries that are not in the chain of trust path.
--   
--   <a>$sel:endpointConfiguration:CreateDomainName'</a>,
--   <a>createDomainName_endpointConfiguration</a> - The endpoint
--   configuration of this DomainName showing the endpoint types of the
--   domain name.
--   
--   <a>$sel:tags:CreateDomainName'</a>, <a>createDomainName_tags</a> - The
--   key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
--   
--   <a>$sel:domainName:CreateDomainName'</a>,
--   <a>createDomainName_domainName</a> - [Required] The name of the
--   DomainName resource.
newCreateDomainName :: Text -> CreateDomainName

-- | Represents a custom domain name as a user-friendly host name of an API
--   (RestApi).
--   
--   When you deploy an API, API Gateway creates a default host name for
--   the API. This default API host name is of the
--   <tt>{restapi-id}.execute-api.{region}.amazonaws.com</tt> format. With
--   the default host name, you can access the API's root resource with the
--   URL of
--   <tt>https://{restapi-id}.execute-api.{region}.amazonaws.com/{stage}/</tt>.
--   When you set up a custom domain name of <tt>apis.example.com</tt> for
--   this API, you can then access the same resource using the URL of the
--   <tt>https://apis.examples.com/myApi</tt>, where <tt>myApi</tt> is the
--   base path mapping (BasePathMapping) of your API under the custom
--   domain name.
--   
--   <a>Set a Custom Host Name for an API</a>
--   
--   <i>See:</i> <a>newDomainName</a> smart constructor.
data DomainName
DomainName' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SecurityPolicy -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe DomainNameStatus -> Maybe (HashMap Text Text) -> DomainName

-- | Create a value of <a>DomainName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regionalHostedZoneId:DomainName'</a>,
--   <a>domainName_regionalHostedZoneId</a> - The region-specific Amazon
--   Route 53 Hosted Zone ID of the regional endpoint. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:certificateName:DomainName'</a>,
--   <a>domainName_certificateName</a> - The name of the certificate that
--   will be used by edge-optimized endpoint for this domain name.
--   
--   <a>$sel:ownershipVerificationCertificateArn:DomainName'</a>,
--   <a>domainName_ownershipVerificationCertificateArn</a> - The ARN of the
--   public certificate issued by ACM to validate ownership of your custom
--   domain. Only required when configuring mutual TLS and using an ACM
--   imported or private CA certificate ARN as the regionalCertificateArn.
--   
--   <a>$sel:regionalCertificateArn:DomainName'</a>,
--   <a>domainName_regionalCertificateArn</a> - The reference to an
--   AWS-managed certificate that will be used for validating the regional
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:certificateArn:DomainName'</a>,
--   <a>domainName_certificateArn</a> - The reference to an AWS-managed
--   certificate that will be used by edge-optimized endpoint for this
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:distributionHostedZoneId:DomainName'</a>,
--   <a>domainName_distributionHostedZoneId</a> - The region-agnostic
--   Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The
--   valid value is <tt>Z2FDTNDATAQYW2</tt> for all the regions. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:securityPolicy:DomainName'</a>,
--   <a>domainName_securityPolicy</a> - The Transport Layer Security (TLS)
--   version + cipher suite for this DomainName. The valid values are
--   <tt>TLS_1_0</tt> and <tt>TLS_1_2</tt>.
--   
--   <a>$sel:domainName:DomainName'</a>, <a>domainName_domainName</a> - The
--   custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
--   
--   <a>$sel:mutualTlsAuthentication:DomainName'</a>,
--   <a>domainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name. If specified,
--   API Gateway performs two-way authentication between the client and the
--   server. Clients must present a trusted certificate to access your API.
--   
--   <a>$sel:regionalCertificateName:DomainName'</a>,
--   <a>domainName_regionalCertificateName</a> - The name of the
--   certificate that will be used for validating the regional domain name.
--   
--   <a>$sel:regionalDomainName:DomainName'</a>,
--   <a>domainName_regionalDomainName</a> - The domain name associated with
--   the regional endpoint for this custom domain name. You set up this
--   association by adding a DNS record that points the custom domain name
--   to this regional domain name. The regional domain name is returned by
--   API Gateway when you create a regional endpoint.
--   
--   <a>$sel:certificateUploadDate:DomainName'</a>,
--   <a>domainName_certificateUploadDate</a> - The timestamp when the
--   certificate that was used by edge-optimized endpoint for this domain
--   name was uploaded.
--   
--   <a>$sel:distributionDomainName:DomainName'</a>,
--   <a>domainName_distributionDomainName</a> - The domain name of the
--   Amazon CloudFront distribution associated with this custom domain name
--   for an edge-optimized endpoint. You set up this association when
--   adding a DNS record pointing the custom domain name to this
--   distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
--   
--   <a>$sel:domainNameStatusMessage:DomainName'</a>,
--   <a>domainName_domainNameStatusMessage</a> - An optional text message
--   containing detailed information about status of the DomainName
--   migration.
--   
--   <a>$sel:endpointConfiguration:DomainName'</a>,
--   <a>domainName_endpointConfiguration</a> - The endpoint configuration
--   of this DomainName showing the endpoint types of the domain name.
--   
--   <a>$sel:domainNameStatus:DomainName'</a>,
--   <a>domainName_domainNameStatus</a> - The status of the DomainName
--   migration. The valid values are <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
--   
--   <a>$sel:tags:DomainName'</a>, <a>domainName_tags</a> - The collection
--   of tags. Each tag element is associated with a given resource.
newDomainName :: DomainName

-- | Request to flush authorizer cache entries on a specified stage.
--   
--   <i>See:</i> <a>newFlushStageAuthorizersCache</a> smart constructor.
data FlushStageAuthorizersCache
FlushStageAuthorizersCache' :: Text -> Text -> FlushStageAuthorizersCache

-- | Create a value of <a>FlushStageAuthorizersCache</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:FlushStageAuthorizersCache'</a>,
--   <a>flushStageAuthorizersCache_restApiId</a> - The string identifier of
--   the associated RestApi.
--   
--   <a>$sel:stageName:FlushStageAuthorizersCache'</a>,
--   <a>flushStageAuthorizersCache_stageName</a> - The name of the stage to
--   flush.
newFlushStageAuthorizersCache :: Text -> Text -> FlushStageAuthorizersCache

-- | <i>See:</i> <a>newFlushStageAuthorizersCacheResponse</a> smart
--   constructor.
data FlushStageAuthorizersCacheResponse
FlushStageAuthorizersCacheResponse' :: FlushStageAuthorizersCacheResponse

-- | Create a value of <a>FlushStageAuthorizersCacheResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newFlushStageAuthorizersCacheResponse :: FlushStageAuthorizersCacheResponse

-- | Gets the GatewayResponses collection on the given RestApi. If an API
--   developer has not added any definitions for gateway responses, the
--   result will be the API Gateway-generated default GatewayResponses
--   collection for the supported response types.
--   
--   <i>See:</i> <a>newGetGatewayResponses</a> smart constructor.
data GetGatewayResponses
GetGatewayResponses' :: Maybe Int -> Maybe Text -> Text -> GetGatewayResponses

-- | Create a value of <a>GetGatewayResponses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetGatewayResponses'</a>,
--   <a>getGatewayResponses_limit</a> - The maximum number of returned
--   results per page. The default value is 25 and the maximum value is
--   500. The GatewayResponses collection does not support pagination and
--   the limit does not apply here.
--   
--   <a>$sel:position:GetGatewayResponses'</a>,
--   <a>getGatewayResponses_position</a> - The current pagination position
--   in the paged result set. The GatewayResponse collection does not
--   support pagination and the position does not apply here.
--   
--   <a>$sel:restApiId:GetGatewayResponses'</a>,
--   <a>getGatewayResponses_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
newGetGatewayResponses :: Text -> GetGatewayResponses

-- | The collection of the GatewayResponse instances of a RestApi as a
--   <tt>responseType</tt>-to-GatewayResponse object map of key-value
--   pairs. As such, pagination is not supported for querying this
--   collection.
--   
--   For more information about valid gateway response types, see
--   <a>Gateway Response Types Supported by API Gateway</a>
--   
--   <h4>Example: Get the collection of gateway responses of an API</h4>
--   
--   <h5>Request</h5>
--   
--   This example request shows how to retrieve the GatewayResponses
--   collection from an API.
--   
--   <pre>
--   GET /restapis/o81lxisefl/gatewayresponses HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T220604Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=59b42fe54a76a5de8adf2c67baa6d39206f8e9ad49a1d77ccc6a5da3103a398a Cache-Control: no-cache Postman-Token: 5637af27-dc29-fc5c-9dfe-0645d52cb515
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful operation returns the <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses" }, "first": { "href": "/restapis/o81lxisefl/gatewayresponses" }, "gatewayresponse:by-type": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "item": [ { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_FAILURE" }, { "href": "/restapis/o81lxisefl/gatewayresponses/RESOURCE_NOT_FOUND" }, { "href": "/restapis/o81lxisefl/gatewayresponses/REQUEST_TOO_LARGE" }, { "href": "/restapis/o81lxisefl/gatewayresponses/THROTTLED" }, { "href": "/restapis/o81lxisefl/gatewayresponses/UNSUPPORTED_MEDIA_TYPE" }, { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_CONFIGURATION_ERROR" }, { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_5XX" }, { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_4XX" }, { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_PARAMETERS" }, { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_BODY" }, { "href": "/restapis/o81lxisefl/gatewayresponses/EXPIRED_TOKEN" }, { "href": "/restapis/o81lxisefl/gatewayresponses/ACCESS_DENIED" }, { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_API_KEY" }, { "href": "/restapis/o81lxisefl/gatewayresponses/UNAUTHORIZED" }, { "href": "/restapis/o81lxisefl/gatewayresponses/API_CONFIGURATION_ERROR" }, { "href": "/restapis/o81lxisefl/gatewayresponses/QUOTA_EXCEEDED" }, { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_TIMEOUT" }, { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_SIGNATURE" }, { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_FAILURE" } ] }, "_embedded": { "item": [ { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_FAILURE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_FAILURE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "INTEGRATION_FAILURE", "statusCode": "504" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/RESOURCE_NOT_FOUND" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/RESOURCE_NOT_FOUND" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "RESOURCE_NOT_FOUND", "statusCode": "404" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/REQUEST_TOO_LARGE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/REQUEST_TOO_LARGE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "REQUEST_TOO_LARGE", "statusCode": "413" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/THROTTLED" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/THROTTLED" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "THROTTLED", "statusCode": "429" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/UNSUPPORTED_MEDIA_TYPE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/UNSUPPORTED_MEDIA_TYPE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "UNSUPPORTED_MEDIA_TYPE", "statusCode": "415" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_CONFIGURATION_ERROR" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_CONFIGURATION_ERROR" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "AUTHORIZER_CONFIGURATION_ERROR", "statusCode": "500" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_5XX" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_5XX" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "DEFAULT_5XX" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_4XX" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_4XX" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "DEFAULT_4XX" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_PARAMETERS" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_PARAMETERS" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "BAD_REQUEST_PARAMETERS", "statusCode": "400" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_BODY" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_BODY" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "BAD_REQUEST_BODY", "statusCode": "400" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/EXPIRED_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/EXPIRED_TOKEN" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "EXPIRED_TOKEN", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/ACCESS_DENIED" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/ACCESS_DENIED" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "ACCESS_DENIED", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_API_KEY" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_API_KEY" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "INVALID_API_KEY", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/UNAUTHORIZED" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/UNAUTHORIZED" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "UNAUTHORIZED", "statusCode": "401" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/API_CONFIGURATION_ERROR" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/API_CONFIGURATION_ERROR" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "API_CONFIGURATION_ERROR", "statusCode": "500" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/QUOTA_EXCEEDED" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/QUOTA_EXCEEDED" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "QUOTA_EXCEEDED", "statusCode": "429" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_TIMEOUT" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_TIMEOUT" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "INTEGRATION_TIMEOUT", "statusCode": "504" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_SIGNATURE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_SIGNATURE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "INVALID_SIGNATURE", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_FAILURE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_FAILURE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "AUTHORIZER_FAILURE", "statusCode": "500" } ] } }
--   </pre>
--   
--   <a>Customize Gateway Responses</a>
--   
--   <i>See:</i> <a>newGetGatewayResponsesResponse</a> smart constructor.
data GetGatewayResponsesResponse
GetGatewayResponsesResponse' :: Maybe [GatewayResponse] -> Maybe Text -> Int -> GetGatewayResponsesResponse

-- | Create a value of <a>GetGatewayResponsesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetGatewayResponsesResponse'</a>,
--   <a>getGatewayResponsesResponse_items</a> - Returns the entire
--   collection, because of no pagination support.
--   
--   <a>$sel:position:GetGatewayResponses'</a>,
--   <a>getGatewayResponsesResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetGatewayResponsesResponse'</a>,
--   <a>getGatewayResponsesResponse_httpStatus</a> - The response's http
--   status code.
newGetGatewayResponsesResponse :: Int -> GetGatewayResponsesResponse

-- | Request to delete an existing model in an existing RestApi resource.
--   
--   <i>See:</i> <a>newDeleteModel</a> smart constructor.
data DeleteModel
DeleteModel' :: Text -> Text -> DeleteModel

-- | Create a value of <a>DeleteModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteModel'</a>, <a>deleteModel_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:modelName:DeleteModel'</a>, <a>deleteModel_modelName</a> -
--   [Required] The name of the model to delete.
newDeleteModel :: Text -> Text -> DeleteModel

-- | <i>See:</i> <a>newDeleteModelResponse</a> smart constructor.
data DeleteModelResponse
DeleteModelResponse' :: DeleteModelResponse

-- | Create a value of <a>DeleteModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteModelResponse :: DeleteModelResponse

-- | Request to update an existing model in an existing RestApi resource.
--   
--   <i>See:</i> <a>newUpdateModel</a> smart constructor.
data UpdateModel
UpdateModel' :: Maybe [PatchOperation] -> Text -> Text -> UpdateModel

-- | Create a value of <a>UpdateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateModel'</a>,
--   <a>updateModel_patchOperations</a> - A list of update operations to be
--   applied to the specified resource and in the order specified in this
--   list.
--   
--   <a>$sel:restApiId:UpdateModel'</a>, <a>updateModel_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:modelName:UpdateModel'</a>, <a>updateModel_modelName</a> -
--   [Required] The name of the model to update.
newUpdateModel :: Text -> Text -> UpdateModel

-- | Represents the data structure of a method's request or response
--   payload.
--   
--   A request model defines the data structure of the client-supplied
--   request payload. A response model defines the data structure of the
--   response payload returned by the back end. Although not required,
--   models are useful for mapping payloads between the front end and back
--   end.
--   
--   A model is used for generating an API's SDK, validating the input
--   request body, and creating a skeletal mapping template.
--   
--   Method, MethodResponse, <a>Models and Mappings</a>
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Model

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:Model'</a>, <a>model_schema</a> - The schema for the
--   model. For <tt>application/json</tt> models, this should be <a>JSON
--   schema draft 4</a> model. Do not include "\*/" characters in the
--   description of any properties because such "\*/" characters may be
--   interpreted as the closing marker for comments in some languages, such
--   as Java or JavaScript, causing the installation of your API's SDK
--   generated by API Gateway to fail.
--   
--   <a>$sel:name:Model'</a>, <a>model_name</a> - The name of the model.
--   Must be an alphanumeric string.
--   
--   <a>$sel:id:Model'</a>, <a>model_id</a> - The identifier for the model
--   resource.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The
--   description of the model.
--   
--   <a>$sel:contentType:Model'</a>, <a>model_contentType</a> - The
--   content-type for the model.
newModel :: Model

-- | Gets a documentation snapshot of an API.
--   
--   <i>See:</i> <a>newGetDocumentationVersion</a> smart constructor.
data GetDocumentationVersion
GetDocumentationVersion' :: Text -> Text -> GetDocumentationVersion

-- | Create a value of <a>GetDocumentationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetDocumentationVersion'</a>,
--   <a>getDocumentationVersion_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:documentationVersion:GetDocumentationVersion'</a>,
--   <a>getDocumentationVersion_documentationVersion</a> - [Required] The
--   version identifier of the to-be-retrieved documentation snapshot.
newGetDocumentationVersion :: Text -> Text -> GetDocumentationVersion

-- | A snapshot of the documentation of an API.
--   
--   Publishing API documentation involves creating a documentation version
--   associated with an API stage and exporting the versioned documentation
--   to an external (e.g., OpenAPI) file.
--   
--   <a>Documenting an API</a>, DocumentationPart, DocumentationVersions
--   
--   <i>See:</i> <a>newDocumentationVersion</a> smart constructor.
data DocumentationVersion
DocumentationVersion' :: Maybe POSIX -> Maybe Text -> Maybe Text -> DocumentationVersion

-- | Create a value of <a>DocumentationVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:DocumentationVersion'</a>,
--   <a>documentationVersion_createdDate</a> - The date when the API
--   documentation snapshot is created.
--   
--   <a>$sel:version:DocumentationVersion'</a>,
--   <a>documentationVersion_version</a> - The version identifier of the
--   API documentation snapshot.
--   
--   <a>$sel:description:DocumentationVersion'</a>,
--   <a>documentationVersion_description</a> - The description of the API
--   documentation snapshot.
newDocumentationVersion :: DocumentationVersion

-- | A request to delete the ApiKey resource.
--   
--   <i>See:</i> <a>newDeleteApiKey</a> smart constructor.
data DeleteApiKey
DeleteApiKey' :: Text -> DeleteApiKey

-- | Create a value of <a>DeleteApiKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKey:DeleteApiKey'</a>, <a>deleteApiKey_apiKey</a> -
--   [Required] The identifier of the ApiKey resource to be deleted.
newDeleteApiKey :: Text -> DeleteApiKey

-- | <i>See:</i> <a>newDeleteApiKeyResponse</a> smart constructor.
data DeleteApiKeyResponse
DeleteApiKeyResponse' :: DeleteApiKeyResponse

-- | Create a value of <a>DeleteApiKeyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteApiKeyResponse :: DeleteApiKeyResponse

-- | A request to change information about an ApiKey resource.
--   
--   <i>See:</i> <a>newUpdateApiKey</a> smart constructor.
data UpdateApiKey
UpdateApiKey' :: Maybe [PatchOperation] -> Text -> UpdateApiKey

-- | Create a value of <a>UpdateApiKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateApiKey'</a>,
--   <a>updateApiKey_patchOperations</a> - A list of update operations to
--   be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:apiKey:UpdateApiKey'</a>, <a>updateApiKey_apiKey</a> -
--   [Required] The identifier of the ApiKey resource to be updated.
newUpdateApiKey :: Text -> UpdateApiKey

-- | A resource that can be distributed to callers for executing Method
--   resources that require an API key. API keys can be mapped to any Stage
--   on any RestApi, which indicates that the callers with the API key can
--   make requests to that stage.
--   
--   <a>Use API Keys</a>
--   
--   <i>See:</i> <a>newApiKey</a> smart constructor.
data ApiKey
ApiKey' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ApiKey

-- | Create a value of <a>ApiKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:ApiKey'</a>, <a>apiKey_enabled</a> - Specifies whether
--   the API Key can be used by callers.
--   
--   <a>$sel:value:ApiKey'</a>, <a>apiKey_value</a> - The value of the API
--   Key.
--   
--   <a>$sel:customerId:ApiKey'</a>, <a>apiKey_customerId</a> - An AWS
--   Marketplace customer identifier , when integrating with the AWS SaaS
--   Marketplace.
--   
--   <a>$sel:createdDate:ApiKey'</a>, <a>apiKey_createdDate</a> - The
--   timestamp when the API Key was created.
--   
--   <a>$sel:name:ApiKey'</a>, <a>apiKey_name</a> - The name of the API
--   Key.
--   
--   <a>$sel:id:ApiKey'</a>, <a>apiKey_id</a> - The identifier of the API
--   Key.
--   
--   <a>$sel:stageKeys:ApiKey'</a>, <a>apiKey_stageKeys</a> - A list of
--   Stage resources that are associated with the ApiKey resource.
--   
--   <a>$sel:lastUpdatedDate:ApiKey'</a>, <a>apiKey_lastUpdatedDate</a> -
--   The timestamp when the API Key was last updated.
--   
--   <a>$sel:description:ApiKey'</a>, <a>apiKey_description</a> - The
--   description of the API Key.
--   
--   <a>$sel:tags:ApiKey'</a>, <a>apiKey_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newApiKey :: ApiKey

-- | The GET request to list an existing RestApi defined for your
--   collection.
--   
--   <i>See:</i> <a>newGetRestApi</a> smart constructor.
data GetRestApi
GetRestApi' :: Text -> GetRestApi

-- | Create a value of <a>GetRestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetRestApi'</a>, <a>getRestApi_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
newGetRestApi :: Text -> GetRestApi

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | Requests API Gateway to get information about one or more Stage
--   resources.
--   
--   <i>See:</i> <a>newGetStages</a> smart constructor.
data GetStages
GetStages' :: Maybe Text -> Text -> GetStages

-- | Create a value of <a>GetStages</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:GetStages'</a>, <a>getStages_deploymentId</a> -
--   The stages' deployment identifiers.
--   
--   <a>$sel:restApiId:GetStages'</a>, <a>getStages_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
newGetStages :: Text -> GetStages

-- | A list of Stage resources that are associated with the ApiKey
--   resource.
--   
--   <a>Deploying API in Stages</a>
--   
--   <i>See:</i> <a>newGetStagesResponse</a> smart constructor.
data GetStagesResponse
GetStagesResponse' :: Maybe [Stage] -> Int -> GetStagesResponse

-- | Create a value of <a>GetStagesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:item:GetStagesResponse'</a>, <a>getStagesResponse_item</a> -
--   The current page of elements from this collection.
--   
--   <a>$sel:httpStatus:GetStagesResponse'</a>,
--   <a>getStagesResponse_httpStatus</a> - The response's http status code.
newGetStagesResponse :: Int -> GetStagesResponse

-- | A PUT request to update an existing API, with external API definitions
--   specified as the request body.
--   
--   <i>See:</i> <a>newPutRestApi</a> smart constructor.
data PutRestApi
PutRestApi' :: Maybe PutMode -> Maybe Bool -> Maybe (HashMap Text Text) -> Text -> ByteString -> PutRestApi

-- | Create a value of <a>PutRestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:PutRestApi'</a>, <a>putRestApi_mode</a> - The
--   <tt>mode</tt> query parameter to specify the update mode. Valid values
--   are "merge" and "overwrite". By default, the update mode is "merge".
--   
--   <a>$sel:failOnWarnings:PutRestApi'</a>,
--   <a>putRestApi_failOnWarnings</a> - A query parameter to indicate
--   whether to rollback the API update (<tt>true</tt>) or not
--   (<tt>false</tt>) when a warning is encountered. The default value is
--   <tt>false</tt>.
--   
--   <a>$sel:parameters:PutRestApi'</a>, <a>putRestApi_parameters</a> -
--   Custom header parameters as part of the request. For example, to
--   exclude DocumentationParts from an imported API, set
--   <tt>ignore=documentation</tt> as a <tt>parameters</tt> value, as in
--   the AWS CLI command of <tt>aws apigateway import-rest-api --parameters
--   ignore=documentation --body
--   'file:///path/to/imported-api-body.json'</tt>.
--   
--   <a>$sel:restApiId:PutRestApi'</a>, <a>putRestApi_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:body:PutRestApi'</a>, <a>putRestApi_body</a> - [Required] The
--   PUT request body containing external API definitions. Currently, only
--   OpenAPI definition JSON/YAML files are supported. The maximum size of
--   the API definition file is 6MB.
newPutRestApi :: Text -> ByteString -> PutRestApi

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | Request to describe an existing Method resource.
--   
--   <i>See:</i> <a>newGetMethod</a> smart constructor.
data GetMethod
GetMethod' :: Text -> Text -> Text -> GetMethod

-- | Create a value of <a>GetMethod</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetMethod'</a>, <a>getMethod_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:GetMethod'</a>, <a>getMethod_resourceId</a> -
--   [Required] The Resource identifier for the Method resource.
--   
--   <a>$sel:httpMethod:GetMethod'</a>, <a>getMethod_httpMethod</a> -
--   [Required] Specifies the method request's HTTP method type.
newGetMethod :: Text -> Text -> Text -> GetMethod

-- | Represents a client-facing interface by which the client calls the API
--   to access back-end resources. A <b>Method</b> resource is integrated
--   with an Integration resource. Both consist of a request and one or
--   more responses. The method request takes the client input that is
--   passed to the back end through the integration request. A method
--   response returns the output from the back end to the client through an
--   integration response. A method request is embodied in a <b>Method</b>
--   resource, whereas an integration request is embodied in an Integration
--   resource. On the other hand, a method response is represented by a
--   MethodResponse resource, whereas an integration response is
--   represented by an IntegrationResponse resource.
--   
--   <h4>Example: Retrive the GET method on a specified resource</h4>
--   
--   <h5>Request</h5>
--   
--   The following example request retrieves the information about the GET
--   method on an API resource (<tt>3kzxbg5sa2</tt>) of an API
--   (<tt>fugvjdxtri</tt>).
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T210259Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": true, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\")" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   In the example above, the response template for the <tt>200 OK</tt>
--   response maps the JSON output from the <tt>ListStreams</tt> action in
--   the back end to an XML output. The mapping template is URL-encoded as
--   <tt>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</tt>
--   and the output is decoded using the <a>$util.urlDecode()</a> helper
--   function.
--   
--   MethodResponse, Integration, IntegrationResponse, Resource, <a>Set up
--   an API's method</a>
--   
--   <i>See:</i> <a>newMethod</a> smart constructor.
data Method
Method' :: Maybe (HashMap Text MethodResponse) -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Integration -> Method

-- | Create a value of <a>Method</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodResponses:Method'</a>, <a>method_methodResponses</a> -
--   Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
--   
--   <a>$sel:httpMethod:Method'</a>, <a>method_httpMethod</a> - The
--   method's HTTP verb.
--   
--   <a>$sel:authorizationScopes:Method'</a>,
--   <a>method_authorizationScopes</a> - A list of authorization scopes
--   configured on the method. The scopes are used with a
--   <tt>COGNITO_USER_POOLS</tt> authorizer to authorize the method
--   invocation. The authorization works by matching the method scopes
--   against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:requestValidatorId:Method'</a>,
--   <a>method_requestValidatorId</a> - The identifier of a
--   RequestValidator for request validation.
--   
--   <a>$sel:requestModels:Method'</a>, <a>method_requestModels</a> - A
--   key-value map specifying data schemas, represented by Model resources,
--   (as the mapped value) of the request payloads of given content types
--   (as the mapping key).
--   
--   <a>$sel:requestParameters:Method'</a>, <a>method_requestParameters</a>
--   - A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
--   
--   <a>$sel:authorizerId:Method'</a>, <a>method_authorizerId</a> - The
--   identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
--   
--   <a>$sel:operationName:Method'</a>, <a>method_operationName</a> - A
--   human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
--   
--   <a>$sel:authorizationType:Method'</a>, <a>method_authorizationType</a>
--   - The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
--   
--   <a>$sel:apiKeyRequired:Method'</a>, <a>method_apiKeyRequired</a> - A
--   boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
--   
--   <a>$sel:methodIntegration:Method'</a>, <a>method_methodIntegration</a>
--   - Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
newMethod :: Method

-- | Request to list information about a model in an existing RestApi
--   resource.
--   
--   <i>See:</i> <a>newGetModel</a> smart constructor.
data GetModel
GetModel' :: Maybe Bool -> Text -> Text -> GetModel

-- | Create a value of <a>GetModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flatten:GetModel'</a>, <a>getModel_flatten</a> - A query
--   parameter of a Boolean value to resolve (<tt>true</tt>) all external
--   model references and returns a flattened model schema or not
--   (<tt>false</tt>) The default is <tt>false</tt>.
--   
--   <a>$sel:restApiId:GetModel'</a>, <a>getModel_restApiId</a> -
--   [Required] The RestApi identifier under which the Model exists.
--   
--   <a>$sel:modelName:GetModel'</a>, <a>getModel_modelName</a> -
--   [Required] The name of the model as an identifier.
newGetModel :: Text -> Text -> GetModel

-- | Represents the data structure of a method's request or response
--   payload.
--   
--   A request model defines the data structure of the client-supplied
--   request payload. A response model defines the data structure of the
--   response payload returned by the back end. Although not required,
--   models are useful for mapping payloads between the front end and back
--   end.
--   
--   A model is used for generating an API's SDK, validating the input
--   request body, and creating a skeletal mapping template.
--   
--   Method, MethodResponse, <a>Models and Mappings</a>
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Model

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:Model'</a>, <a>model_schema</a> - The schema for the
--   model. For <tt>application/json</tt> models, this should be <a>JSON
--   schema draft 4</a> model. Do not include "\*/" characters in the
--   description of any properties because such "\*/" characters may be
--   interpreted as the closing marker for comments in some languages, such
--   as Java or JavaScript, causing the installation of your API's SDK
--   generated by API Gateway to fail.
--   
--   <a>$sel:name:Model'</a>, <a>model_name</a> - The name of the model.
--   Must be an alphanumeric string.
--   
--   <a>$sel:id:Model'</a>, <a>model_id</a> - The identifier for the model
--   resource.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The
--   description of the model.
--   
--   <a>$sel:contentType:Model'</a>, <a>model_contentType</a> - The
--   content-type for the model.
newModel :: Model

-- | Request to update an existing RestApi resource in your collection.
--   
--   <i>See:</i> <a>newUpdateRestApi</a> smart constructor.
data UpdateRestApi
UpdateRestApi' :: Maybe [PatchOperation] -> Text -> UpdateRestApi

-- | Create a value of <a>UpdateRestApi</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateRestApi'</a>,
--   <a>updateRestApi_patchOperations</a> - A list of update operations to
--   be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:restApiId:UpdateRestApi'</a>, <a>updateRestApi_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
newUpdateRestApi :: Text -> UpdateRestApi

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | Request to delete the specified API from your collection.
--   
--   <i>See:</i> <a>newDeleteRestApi</a> smart constructor.
data DeleteRestApi
DeleteRestApi' :: Text -> DeleteRestApi

-- | Create a value of <a>DeleteRestApi</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteRestApi'</a>, <a>deleteRestApi_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
newDeleteRestApi :: Text -> DeleteRestApi

-- | <i>See:</i> <a>newDeleteRestApiResponse</a> smart constructor.
data DeleteRestApiResponse
DeleteRestApiResponse' :: DeleteRestApiResponse

-- | Create a value of <a>DeleteRestApiResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRestApiResponse :: DeleteRestApiResponse

-- | The POST request to import API keys from an external source, such as a
--   CSV-formatted file.
--   
--   <i>See:</i> <a>newImportApiKeys</a> smart constructor.
data ImportApiKeys
ImportApiKeys' :: Maybe Bool -> ByteString -> ApiKeysFormat -> ImportApiKeys

-- | Create a value of <a>ImportApiKeys</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failOnWarnings:ImportApiKeys'</a>,
--   <a>importApiKeys_failOnWarnings</a> - A query parameter to indicate
--   whether to rollback ApiKey importation (<tt>true</tt>) or not
--   (<tt>false</tt>) when error is encountered.
--   
--   <a>$sel:body:ImportApiKeys'</a>, <a>importApiKeys_body</a> - The
--   payload of the POST request to import API keys. For the payload
--   format, see <a>API Key File Format</a>.
--   
--   <a>$sel:format:ImportApiKeys'</a>, <a>importApiKeys_format</a> - A
--   query parameter to specify the input format to imported API keys.
--   Currently, only the <tt>csv</tt> format is supported.
newImportApiKeys :: ByteString -> ApiKeysFormat -> ImportApiKeys

-- | The identifier of an ApiKey used in a UsagePlan.
--   
--   <i>See:</i> <a>newImportApiKeysResponse</a> smart constructor.
data ImportApiKeysResponse
ImportApiKeysResponse' :: Maybe [Text] -> Maybe [Text] -> Int -> ImportApiKeysResponse

-- | Create a value of <a>ImportApiKeysResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:ImportApiKeysResponse'</a>,
--   <a>importApiKeysResponse_ids</a> - A list of all the ApiKey
--   identifiers.
--   
--   <a>$sel:warnings:ImportApiKeysResponse'</a>,
--   <a>importApiKeysResponse_warnings</a> - A list of warning messages.
--   
--   <a>$sel:httpStatus:ImportApiKeysResponse'</a>,
--   <a>importApiKeysResponse_httpStatus</a> - The response's http status
--   code.
newImportApiKeysResponse :: Int -> ImportApiKeysResponse

-- | Creates a new documentation part of a given API.
--   
--   <i>See:</i> <a>newCreateDocumentationPart</a> smart constructor.
data CreateDocumentationPart
CreateDocumentationPart' :: Text -> DocumentationPartLocation -> Text -> CreateDocumentationPart

-- | Create a value of <a>CreateDocumentationPart</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:CreateDocumentationPart'</a>,
--   <a>createDocumentationPart_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:location:CreateDocumentationPart'</a>,
--   <a>createDocumentationPart_location</a> - [Required] The location of
--   the targeted API entity of the to-be-created documentation part.
--   
--   <a>$sel:properties:CreateDocumentationPart'</a>,
--   <a>createDocumentationPart_properties</a> - [Required] The new
--   documentation content map of the targeted API entity. Enclosed
--   key-value pairs are API-specific, but only OpenAPI-compliant key-value
--   pairs can be exported and, hence, published.
newCreateDocumentationPart :: Text -> DocumentationPartLocation -> Text -> CreateDocumentationPart

-- | A documentation part for a targeted API entity.
--   
--   A documentation part consists of a content map (<tt>properties</tt>)
--   and a target (<tt>location</tt>). The target specifies an API entity
--   to which the documentation content applies. The supported API entity
--   types are <tt>API</tt>, <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. Valid <tt>location</tt> fields depend on
--   the API entity type. All valid fields are not required.
--   
--   The content map is a JSON string of API-specific key-value pairs.
--   Although an API can use any shape for the content map, only the
--   OpenAPI-compliant documentation fields will be injected into the
--   associated API entity definition in the exported OpenAPI definition
--   file.
--   
--   <a>Documenting an API</a>, DocumentationParts
--   
--   <i>See:</i> <a>newDocumentationPart</a> smart constructor.
data DocumentationPart
DocumentationPart' :: Maybe DocumentationPartLocation -> Maybe Text -> Maybe Text -> DocumentationPart

-- | Create a value of <a>DocumentationPart</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:DocumentationPart'</a>,
--   <a>documentationPart_location</a> - The location of the API entity to
--   which the documentation applies. Valid fields depend on the targeted
--   API entity type. All the valid location fields are not required. If
--   not explicitly specified, a valid location field is treated as a
--   wildcard and associated documentation content may be inherited by
--   matching entities, unless overridden.
--   
--   <a>$sel:id:DocumentationPart'</a>, <a>documentationPart_id</a> - The
--   DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
--   
--   <a>$sel:properties:DocumentationPart'</a>,
--   <a>documentationPart_properties</a> - A content map of API-specific
--   key-value pairs describing the targeted API entity. The map must be
--   encoded as a JSON string, e.g., <tt>"{ \"description\": \"The API does
--   ...\" }"</tt>. Only OpenAPI-compliant documentation-related fields
--   from the properties map are exported and, hence, published as part of
--   the API entity definitions, while the original documentation parts are
--   exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
newDocumentationPart :: DocumentationPart

-- | Make a request to simulate the execution of a Method.
--   
--   <i>See:</i> <a>newTestInvokeMethod</a> smart constructor.
data TestInvokeMethod
TestInvokeMethod' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Maybe (HashMap Text [Text]) -> Text -> Text -> Text -> TestInvokeMethod

-- | Create a value of <a>TestInvokeMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathWithQueryString:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_pathWithQueryString</a> - The URI path, including
--   query string, of the simulated invocation request. Use this to specify
--   path parameters and query string parameters.
--   
--   <a>$sel:body:TestInvokeMethod'</a>, <a>testInvokeMethod_body</a> - The
--   simulated request body of an incoming invocation request.
--   
--   <a>$sel:clientCertificateId:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_clientCertificateId</a> - A ClientCertificate
--   identifier to use in the test invocation. API Gateway will use the
--   certificate when making the HTTPS request to the defined back-end
--   endpoint.
--   
--   <a>$sel:stageVariables:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_stageVariables</a> - A key-value map of stage
--   variables to simulate an invocation on a deployed Stage.
--   
--   <a>$sel:headers:TestInvokeMethod'</a>, <a>testInvokeMethod_headers</a>
--   - A key-value map of headers to simulate an incoming invocation
--   request.
--   
--   <a>$sel:multiValueHeaders:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_multiValueHeaders</a> - The headers as a map from
--   string to list of values to simulate an incoming invocation request.
--   
--   <a>$sel:restApiId:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:resourceId:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_resourceId</a> - [Required] Specifies a test
--   invoke method request's resource ID.
--   
--   <a>$sel:httpMethod:TestInvokeMethod'</a>,
--   <a>testInvokeMethod_httpMethod</a> - [Required] Specifies a test
--   invoke method request's HTTP method.
newTestInvokeMethod :: Text -> Text -> Text -> TestInvokeMethod

-- | Represents the response of the test invoke request in the HTTP method.
--   
--   <a>Test API using the API Gateway console</a>
--   
--   <i>See:</i> <a>newTestInvokeMethodResponse</a> smart constructor.
data TestInvokeMethodResponse
TestInvokeMethodResponse' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Integer -> Maybe (HashMap Text Text) -> Maybe (HashMap Text [Text]) -> Int -> TestInvokeMethodResponse

-- | Create a value of <a>TestInvokeMethodResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:log:TestInvokeMethodResponse'</a>,
--   <a>testInvokeMethodResponse_log</a> - The API Gateway execution log
--   for the test invoke request.
--   
--   <a>$sel:status:TestInvokeMethodResponse'</a>,
--   <a>testInvokeMethodResponse_status</a> - The HTTP status code.
--   
--   <a>$sel:body:TestInvokeMethod'</a>,
--   <a>testInvokeMethodResponse_body</a> - The body of the HTTP response.
--   
--   <a>$sel:latency:TestInvokeMethodResponse'</a>,
--   <a>testInvokeMethodResponse_latency</a> - The execution latency of the
--   test invoke request.
--   
--   <a>$sel:headers:TestInvokeMethod'</a>,
--   <a>testInvokeMethodResponse_headers</a> - The headers of the HTTP
--   response.
--   
--   <a>$sel:multiValueHeaders:TestInvokeMethod'</a>,
--   <a>testInvokeMethodResponse_multiValueHeaders</a> - The headers of the
--   HTTP response as a map from string to list of values.
--   
--   <a>$sel:httpStatus:TestInvokeMethodResponse'</a>,
--   <a>testInvokeMethodResponse_httpStatus</a> - The response's http
--   status code.
newTestInvokeMethodResponse :: Int -> TestInvokeMethodResponse

-- | Gets a RequestValidator of a given RestApi.
--   
--   <i>See:</i> <a>newGetRequestValidator</a> smart constructor.
data GetRequestValidator
GetRequestValidator' :: Text -> Text -> GetRequestValidator

-- | Create a value of <a>GetRequestValidator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetRequestValidator'</a>,
--   <a>getRequestValidator_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:requestValidatorId:GetRequestValidator'</a>,
--   <a>getRequestValidator_requestValidatorId</a> - [Required] The
--   identifier of the RequestValidator to be retrieved.
newGetRequestValidator :: Text -> Text -> GetRequestValidator

-- | A set of validation rules for incoming Method requests.
--   
--   In OpenAPI, a RequestValidator of an API is defined by the
--   <a>x-amazon-apigateway-request-validators.requestValidator</a> object.
--   It the referenced using the
--   <a>x-amazon-apigateway-request-validator</a> property.
--   
--   <a>Enable Basic Request Validation in API Gateway</a>
--   
--   <i>See:</i> <a>newRequestValidator</a> smart constructor.
data RequestValidator
RequestValidator' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> RequestValidator

-- | Create a value of <a>RequestValidator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validateRequestParameters:RequestValidator'</a>,
--   <a>requestValidator_validateRequestParameters</a> - A Boolean flag to
--   indicate whether to validate request parameters (<tt>true</tt>) or not
--   (<tt>false</tt>).
--   
--   <a>$sel:name:RequestValidator'</a>, <a>requestValidator_name</a> - The
--   name of this RequestValidator
--   
--   <a>$sel:validateRequestBody:RequestValidator'</a>,
--   <a>requestValidator_validateRequestBody</a> - A Boolean flag to
--   indicate whether to validate a request body according to the
--   configured Model schema.
--   
--   <a>$sel:id:RequestValidator'</a>, <a>requestValidator_id</a> - The
--   identifier of this RequestValidator.
newRequestValidator :: RequestValidator

-- | Request to get the name of a DomainName resource.
--   
--   <i>See:</i> <a>newGetDomainName</a> smart constructor.
data GetDomainName
GetDomainName' :: Text -> GetDomainName

-- | Create a value of <a>GetDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:GetDomainName'</a>, <a>getDomainName_domainName</a>
--   - [Required] The name of the DomainName resource.
newGetDomainName :: Text -> GetDomainName

-- | Represents a custom domain name as a user-friendly host name of an API
--   (RestApi).
--   
--   When you deploy an API, API Gateway creates a default host name for
--   the API. This default API host name is of the
--   <tt>{restapi-id}.execute-api.{region}.amazonaws.com</tt> format. With
--   the default host name, you can access the API's root resource with the
--   URL of
--   <tt>https://{restapi-id}.execute-api.{region}.amazonaws.com/{stage}/</tt>.
--   When you set up a custom domain name of <tt>apis.example.com</tt> for
--   this API, you can then access the same resource using the URL of the
--   <tt>https://apis.examples.com/myApi</tt>, where <tt>myApi</tt> is the
--   base path mapping (BasePathMapping) of your API under the custom
--   domain name.
--   
--   <a>Set a Custom Host Name for an API</a>
--   
--   <i>See:</i> <a>newDomainName</a> smart constructor.
data DomainName
DomainName' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SecurityPolicy -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe DomainNameStatus -> Maybe (HashMap Text Text) -> DomainName

-- | Create a value of <a>DomainName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regionalHostedZoneId:DomainName'</a>,
--   <a>domainName_regionalHostedZoneId</a> - The region-specific Amazon
--   Route 53 Hosted Zone ID of the regional endpoint. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:certificateName:DomainName'</a>,
--   <a>domainName_certificateName</a> - The name of the certificate that
--   will be used by edge-optimized endpoint for this domain name.
--   
--   <a>$sel:ownershipVerificationCertificateArn:DomainName'</a>,
--   <a>domainName_ownershipVerificationCertificateArn</a> - The ARN of the
--   public certificate issued by ACM to validate ownership of your custom
--   domain. Only required when configuring mutual TLS and using an ACM
--   imported or private CA certificate ARN as the regionalCertificateArn.
--   
--   <a>$sel:regionalCertificateArn:DomainName'</a>,
--   <a>domainName_regionalCertificateArn</a> - The reference to an
--   AWS-managed certificate that will be used for validating the regional
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:certificateArn:DomainName'</a>,
--   <a>domainName_certificateArn</a> - The reference to an AWS-managed
--   certificate that will be used by edge-optimized endpoint for this
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:distributionHostedZoneId:DomainName'</a>,
--   <a>domainName_distributionHostedZoneId</a> - The region-agnostic
--   Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The
--   valid value is <tt>Z2FDTNDATAQYW2</tt> for all the regions. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:securityPolicy:DomainName'</a>,
--   <a>domainName_securityPolicy</a> - The Transport Layer Security (TLS)
--   version + cipher suite for this DomainName. The valid values are
--   <tt>TLS_1_0</tt> and <tt>TLS_1_2</tt>.
--   
--   <a>$sel:domainName:DomainName'</a>, <a>domainName_domainName</a> - The
--   custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
--   
--   <a>$sel:mutualTlsAuthentication:DomainName'</a>,
--   <a>domainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name. If specified,
--   API Gateway performs two-way authentication between the client and the
--   server. Clients must present a trusted certificate to access your API.
--   
--   <a>$sel:regionalCertificateName:DomainName'</a>,
--   <a>domainName_regionalCertificateName</a> - The name of the
--   certificate that will be used for validating the regional domain name.
--   
--   <a>$sel:regionalDomainName:DomainName'</a>,
--   <a>domainName_regionalDomainName</a> - The domain name associated with
--   the regional endpoint for this custom domain name. You set up this
--   association by adding a DNS record that points the custom domain name
--   to this regional domain name. The regional domain name is returned by
--   API Gateway when you create a regional endpoint.
--   
--   <a>$sel:certificateUploadDate:DomainName'</a>,
--   <a>domainName_certificateUploadDate</a> - The timestamp when the
--   certificate that was used by edge-optimized endpoint for this domain
--   name was uploaded.
--   
--   <a>$sel:distributionDomainName:DomainName'</a>,
--   <a>domainName_distributionDomainName</a> - The domain name of the
--   Amazon CloudFront distribution associated with this custom domain name
--   for an edge-optimized endpoint. You set up this association when
--   adding a DNS record pointing the custom domain name to this
--   distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
--   
--   <a>$sel:domainNameStatusMessage:DomainName'</a>,
--   <a>domainName_domainNameStatusMessage</a> - An optional text message
--   containing detailed information about status of the DomainName
--   migration.
--   
--   <a>$sel:endpointConfiguration:DomainName'</a>,
--   <a>domainName_endpointConfiguration</a> - The endpoint configuration
--   of this DomainName showing the endpoint types of the domain name.
--   
--   <a>$sel:domainNameStatus:DomainName'</a>,
--   <a>domainName_domainNameStatus</a> - The status of the DomainName
--   migration. The valid values are <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
--   
--   <a>$sel:tags:DomainName'</a>, <a>domainName_tags</a> - The collection
--   of tags. Each tag element is associated with a given resource.
newDomainName :: DomainName

-- | Creates a VPC link, under the caller's account in a selected region,
--   in an asynchronous operation that typically takes 2-4 minutes to
--   complete and become operational. The caller must have permissions to
--   create and update VPC Endpoint services.
--   
--   <i>See:</i> <a>newCreateVpcLink</a> smart constructor.
data CreateVpcLink
CreateVpcLink' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> [Text] -> CreateVpcLink

-- | Create a value of <a>CreateVpcLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateVpcLink'</a>,
--   <a>createVpcLink_description</a> - The description of the VPC link.
--   
--   <a>$sel:tags:CreateVpcLink'</a>, <a>createVpcLink_tags</a> - The
--   key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
--   
--   <a>$sel:name:CreateVpcLink'</a>, <a>createVpcLink_name</a> -
--   [Required] The name used to label and identify the VPC link.
--   
--   <a>$sel:targetArns:CreateVpcLink'</a>, <a>createVpcLink_targetArns</a>
--   - [Required] The ARN of the network load balancer of the VPC targeted
--   by the VPC link. The network load balancer must be owned by the same
--   AWS account of the API owner.
newCreateVpcLink :: Text -> CreateVpcLink

-- | An API Gateway VPC link for a RestApi to access resources in an Amazon
--   Virtual Private Cloud (VPC).
--   
--   To enable access to a resource in an Amazon Virtual Private Cloud
--   through Amazon API Gateway, you, as an API developer, create a VpcLink
--   resource targeted for one or more network load balancers of the VPC
--   and then integrate an API method with a private integration that uses
--   the VpcLink. The private integration has an integration type of
--   <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> and has a connection type of
--   <tt>VPC_LINK</tt>. The integration uses the <tt>connectionId</tt>
--   property to identify the VpcLink used.
--   
--   <i>See:</i> <a>newVpcLink</a> smart constructor.
data VpcLink
VpcLink' :: Maybe VpcLinkStatus -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> VpcLink

-- | Create a value of <a>VpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VpcLink'</a>, <a>vpcLink_status</a> - The status of the
--   VPC link. The valid values are <tt>AVAILABLE</tt>, <tt>PENDING</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an API will wait if
--   the status is <tt>PENDING</tt> and will fail if the status is
--   <tt>DELETING</tt>.
--   
--   <a>$sel:targetArns:VpcLink'</a>, <a>vpcLink_targetArns</a> - The ARN
--   of the network load balancer of the VPC targeted by the VPC link. The
--   network load balancer must be owned by the same AWS account of the API
--   owner.
--   
--   <a>$sel:name:VpcLink'</a>, <a>vpcLink_name</a> - The name used to
--   label and identify the VPC link.
--   
--   <a>$sel:statusMessage:VpcLink'</a>, <a>vpcLink_statusMessage</a> - A
--   description about the VPC link status.
--   
--   <a>$sel:id:VpcLink'</a>, <a>vpcLink_id</a> - The identifier of the
--   VpcLink. It is used in an Integration to reference this VpcLink.
--   
--   <a>$sel:description:VpcLink'</a>, <a>vpcLink_description</a> - The
--   description of the VPC link.
--   
--   <a>$sel:tags:VpcLink'</a>, <a>vpcLink_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newVpcLink :: VpcLink

-- | Deletes an existing documentation part of an API.
--   
--   <i>See:</i> <a>newDeleteDocumentationPart</a> smart constructor.
data DeleteDocumentationPart
DeleteDocumentationPart' :: Text -> Text -> DeleteDocumentationPart

-- | Create a value of <a>DeleteDocumentationPart</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteDocumentationPart'</a>,
--   <a>deleteDocumentationPart_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:documentationPartId:DeleteDocumentationPart'</a>,
--   <a>deleteDocumentationPart_documentationPartId</a> - [Required] The
--   identifier of the to-be-deleted documentation part.
newDeleteDocumentationPart :: Text -> Text -> DeleteDocumentationPart

-- | <i>See:</i> <a>newDeleteDocumentationPartResponse</a> smart
--   constructor.
data DeleteDocumentationPartResponse
DeleteDocumentationPartResponse' :: DeleteDocumentationPartResponse

-- | Create a value of <a>DeleteDocumentationPartResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDocumentationPartResponse :: DeleteDocumentationPartResponse

-- | Updates an existing documentation part of a given API.
--   
--   <i>See:</i> <a>newUpdateDocumentationPart</a> smart constructor.
data UpdateDocumentationPart
UpdateDocumentationPart' :: Maybe [PatchOperation] -> Text -> Text -> UpdateDocumentationPart

-- | Create a value of <a>UpdateDocumentationPart</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateDocumentationPart'</a>,
--   <a>updateDocumentationPart_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:restApiId:UpdateDocumentationPart'</a>,
--   <a>updateDocumentationPart_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:documentationPartId:UpdateDocumentationPart'</a>,
--   <a>updateDocumentationPart_documentationPartId</a> - [Required] The
--   identifier of the to-be-updated documentation part.
newUpdateDocumentationPart :: Text -> Text -> UpdateDocumentationPart

-- | A documentation part for a targeted API entity.
--   
--   A documentation part consists of a content map (<tt>properties</tt>)
--   and a target (<tt>location</tt>). The target specifies an API entity
--   to which the documentation content applies. The supported API entity
--   types are <tt>API</tt>, <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. Valid <tt>location</tt> fields depend on
--   the API entity type. All valid fields are not required.
--   
--   The content map is a JSON string of API-specific key-value pairs.
--   Although an API can use any shape for the content map, only the
--   OpenAPI-compliant documentation fields will be injected into the
--   associated API entity definition in the exported OpenAPI definition
--   file.
--   
--   <a>Documenting an API</a>, DocumentationParts
--   
--   <i>See:</i> <a>newDocumentationPart</a> smart constructor.
data DocumentationPart
DocumentationPart' :: Maybe DocumentationPartLocation -> Maybe Text -> Maybe Text -> DocumentationPart

-- | Create a value of <a>DocumentationPart</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:DocumentationPart'</a>,
--   <a>documentationPart_location</a> - The location of the API entity to
--   which the documentation applies. Valid fields depend on the targeted
--   API entity type. All the valid location fields are not required. If
--   not explicitly specified, a valid location field is treated as a
--   wildcard and associated documentation content may be inherited by
--   matching entities, unless overridden.
--   
--   <a>$sel:id:DocumentationPart'</a>, <a>documentationPart_id</a> - The
--   DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
--   
--   <a>$sel:properties:DocumentationPart'</a>,
--   <a>documentationPart_properties</a> - A content map of API-specific
--   key-value pairs describing the targeted API entity. The map must be
--   encoded as a JSON string, e.g., <tt>"{ \"description\": \"The API does
--   ...\" }"</tt>. Only OpenAPI-compliant documentation-related fields
--   from the properties map are exported and, hence, published as part of
--   the API entity definitions, while the original documentation parts are
--   exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
newDocumentationPart :: DocumentationPart

-- | Request to describe an existing Authorizers resource.
--   
--   <i>See:</i> <a>newGetAuthorizers</a> smart constructor.
data GetAuthorizers
GetAuthorizers' :: Maybe Int -> Maybe Text -> Text -> GetAuthorizers

-- | Create a value of <a>GetAuthorizers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetAuthorizers'</a>, <a>getAuthorizers_limit</a> - The
--   maximum number of returned results per page. The default value is 25
--   and the maximum value is 500.
--   
--   <a>$sel:position:GetAuthorizers'</a>, <a>getAuthorizers_position</a> -
--   The current pagination position in the paged result set.
--   
--   <a>$sel:restApiId:GetAuthorizers'</a>, <a>getAuthorizers_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
newGetAuthorizers :: Text -> GetAuthorizers

-- | Represents a collection of Authorizer resources.
--   
--   <a>Use Lambda Function as Authorizer</a> <a>Use Cognito User Pool as
--   Authorizer</a>
--   
--   <i>See:</i> <a>newGetAuthorizersResponse</a> smart constructor.
data GetAuthorizersResponse
GetAuthorizersResponse' :: Maybe [Authorizer] -> Maybe Text -> Int -> GetAuthorizersResponse

-- | Create a value of <a>GetAuthorizersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetAuthorizersResponse'</a>,
--   <a>getAuthorizersResponse_items</a> - The current page of elements
--   from this collection.
--   
--   <a>$sel:position:GetAuthorizers'</a>,
--   <a>getAuthorizersResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetAuthorizersResponse'</a>,
--   <a>getAuthorizersResponse_httpStatus</a> - The response's http status
--   code.
newGetAuthorizersResponse :: Int -> GetAuthorizersResponse

-- | Creates a new documentation version of a given API.
--   
--   <i>See:</i> <a>newCreateDocumentationVersion</a> smart constructor.
data CreateDocumentationVersion
CreateDocumentationVersion' :: Maybe Text -> Maybe Text -> Text -> Text -> CreateDocumentationVersion

-- | Create a value of <a>CreateDocumentationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:CreateDocumentationVersion'</a>,
--   <a>createDocumentationVersion_stageName</a> - The stage name to be
--   associated with the new documentation snapshot.
--   
--   <a>$sel:description:CreateDocumentationVersion'</a>,
--   <a>createDocumentationVersion_description</a> - A description about
--   the new documentation snapshot.
--   
--   <a>$sel:restApiId:CreateDocumentationVersion'</a>,
--   <a>createDocumentationVersion_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:documentationVersion:CreateDocumentationVersion'</a>,
--   <a>createDocumentationVersion_documentationVersion</a> - [Required]
--   The version identifier of the new snapshot.
newCreateDocumentationVersion :: Text -> Text -> CreateDocumentationVersion

-- | A snapshot of the documentation of an API.
--   
--   Publishing API documentation involves creating a documentation version
--   associated with an API stage and exporting the versioned documentation
--   to an external (e.g., OpenAPI) file.
--   
--   <a>Documenting an API</a>, DocumentationPart, DocumentationVersions
--   
--   <i>See:</i> <a>newDocumentationVersion</a> smart constructor.
data DocumentationVersion
DocumentationVersion' :: Maybe POSIX -> Maybe Text -> Maybe Text -> DocumentationVersion

-- | Create a value of <a>DocumentationVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:DocumentationVersion'</a>,
--   <a>documentationVersion_createdDate</a> - The date when the API
--   documentation snapshot is created.
--   
--   <a>$sel:version:DocumentationVersion'</a>,
--   <a>documentationVersion_version</a> - The version identifier of the
--   API documentation snapshot.
--   
--   <a>$sel:description:DocumentationVersion'</a>,
--   <a>documentationVersion_description</a> - The description of the API
--   documentation snapshot.
newDocumentationVersion :: DocumentationVersion

-- | Represents a put integration response request.
--   
--   <i>See:</i> <a>newPutIntegrationResponse</a> smart constructor.
data PutIntegrationResponse
PutIntegrationResponse' :: Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> PutIntegrationResponse

-- | Create a value of <a>PutIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentHandling:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_contentHandling</a> - Specifies how to
--   handle response payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
--   
--   <a>$sel:responseTemplates:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_responseTemplates</a> - Specifies a put
--   integration response's templates.
--   
--   <a>$sel:selectionPattern:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_selectionPattern</a> - Specifies the
--   selection pattern of a put integration response.
--   
--   <a>$sel:responseParameters:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the back end. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of <tt>method.response.header.{name}</tt>, where <tt>name</tt>
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> must be a valid and unique response header name and
--   <tt>JSON-expression</tt> a valid JSON expression without the
--   <tt>$</tt> prefix.
--   
--   <a>$sel:restApiId:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_resourceId</a> - [Required] Specifies a put
--   integration response request's resource identifier.
--   
--   <a>$sel:httpMethod:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_httpMethod</a> - [Required] Specifies a put
--   integration response request's HTTP method.
--   
--   <a>$sel:statusCode:PutIntegrationResponse'</a>,
--   <a>putIntegrationResponse_statusCode</a> - [Required] Specifies the
--   status code that is used to map the integration response to an
--   existing MethodResponse.
newPutIntegrationResponse :: Text -> Text -> Text -> Text -> PutIntegrationResponse

-- | Represents an integration response. The status code must map to an
--   existing MethodResponse, and parameters and templates can be used to
--   transform the back-end response.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegrationResponse</a> smart constructor.
data IntegrationResponse
IntegrationResponse' :: Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> IntegrationResponse

-- | Create a value of <a>IntegrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentHandling:IntegrationResponse'</a>,
--   <a>integrationResponse_contentHandling</a> - Specifies how to handle
--   response payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
--   
--   <a>$sel:responseTemplates:IntegrationResponse'</a>,
--   <a>integrationResponse_responseTemplates</a> - Specifies the templates
--   used to transform the integration response body. Response templates
--   are represented as a key/value map, with a content-type as the key and
--   a template as the value.
--   
--   <a>$sel:selectionPattern:IntegrationResponse'</a>,
--   <a>integrationResponse_selectionPattern</a> - Specifies the regular
--   expression (regex) pattern used to choose an integration response
--   based on the response from the back end. For example, if the success
--   response returns nothing and the error response returns some string,
--   you could use the <tt>.+</tt> regex to match error response. However,
--   make sure that the error response does not contain any newline
--   (<tt>\n</tt>) character in such cases. If the back end is an AWS
--   Lambda function, the AWS Lambda function error header is matched. For
--   all other HTTP and AWS back ends, the HTTP status code is matched.
--   
--   <a>$sel:statusCode:IntegrationResponse'</a>,
--   <a>integrationResponse_statusCode</a> - Specifies the status code that
--   is used to map the integration response to an existing MethodResponse.
--   
--   <a>$sel:responseParameters:IntegrationResponse'</a>,
--   <a>integrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the back end. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of <tt>method.response.header.{name}</tt>, where <tt>name</tt>
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
newIntegrationResponse :: IntegrationResponse

-- | The GET request to get all the usage plan keys representing the API
--   keys added to a specified usage plan.
--   
--   <i>See:</i> <a>newGetUsagePlanKeys</a> smart constructor.
data GetUsagePlanKeys
GetUsagePlanKeys' :: Maybe Text -> Maybe Int -> Maybe Text -> Text -> GetUsagePlanKeys

-- | Create a value of <a>GetUsagePlanKeys</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameQuery:GetUsagePlanKeys'</a>,
--   <a>getUsagePlanKeys_nameQuery</a> - A query parameter specifying the
--   name of the to-be-returned usage plan keys.
--   
--   <a>$sel:limit:GetUsagePlanKeys'</a>, <a>getUsagePlanKeys_limit</a> -
--   The maximum number of returned results per page. The default value is
--   25 and the maximum value is 500.
--   
--   <a>$sel:position:GetUsagePlanKeys'</a>,
--   <a>getUsagePlanKeys_position</a> - The current pagination position in
--   the paged result set.
--   
--   <a>$sel:usagePlanId:GetUsagePlanKeys'</a>,
--   <a>getUsagePlanKeys_usagePlanId</a> - [Required] The Id of the
--   UsagePlan resource representing the usage plan containing the
--   to-be-retrieved UsagePlanKey resource representing a plan customer.
newGetUsagePlanKeys :: Text -> GetUsagePlanKeys

-- | Represents the collection of usage plan keys added to usage plans for
--   the associated API keys and, possibly, other types of keys.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newGetUsagePlanKeysResponse</a> smart constructor.
data GetUsagePlanKeysResponse
GetUsagePlanKeysResponse' :: Maybe [UsagePlanKey] -> Maybe Text -> Int -> GetUsagePlanKeysResponse

-- | Create a value of <a>GetUsagePlanKeysResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetUsagePlanKeysResponse'</a>,
--   <a>getUsagePlanKeysResponse_items</a> - The current page of elements
--   from this collection.
--   
--   <a>$sel:position:GetUsagePlanKeys'</a>,
--   <a>getUsagePlanKeysResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetUsagePlanKeysResponse'</a>,
--   <a>getUsagePlanKeysResponse_httpStatus</a> - The response's http
--   status code.
newGetUsagePlanKeysResponse :: Int -> GetUsagePlanKeysResponse

-- | Deletes an existing VpcLink of a specified identifier.
--   
--   <i>See:</i> <a>newDeleteVpcLink</a> smart constructor.
data DeleteVpcLink
DeleteVpcLink' :: Text -> DeleteVpcLink

-- | Create a value of <a>DeleteVpcLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcLinkId:DeleteVpcLink'</a>, <a>deleteVpcLink_vpcLinkId</a> -
--   [Required] The identifier of the VpcLink. It is used in an Integration
--   to reference this VpcLink.
newDeleteVpcLink :: Text -> DeleteVpcLink

-- | <i>See:</i> <a>newDeleteVpcLinkResponse</a> smart constructor.
data DeleteVpcLinkResponse
DeleteVpcLinkResponse' :: DeleteVpcLinkResponse

-- | Create a value of <a>DeleteVpcLinkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteVpcLinkResponse :: DeleteVpcLinkResponse

-- | Updates an existing VpcLink of a specified identifier.
--   
--   <i>See:</i> <a>newUpdateVpcLink</a> smart constructor.
data UpdateVpcLink
UpdateVpcLink' :: Maybe [PatchOperation] -> Text -> UpdateVpcLink

-- | Create a value of <a>UpdateVpcLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateVpcLink'</a>,
--   <a>updateVpcLink_patchOperations</a> - A list of update operations to
--   be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:vpcLinkId:UpdateVpcLink'</a>, <a>updateVpcLink_vpcLinkId</a> -
--   [Required] The identifier of the VpcLink. It is used in an Integration
--   to reference this VpcLink.
newUpdateVpcLink :: Text -> UpdateVpcLink

-- | An API Gateway VPC link for a RestApi to access resources in an Amazon
--   Virtual Private Cloud (VPC).
--   
--   To enable access to a resource in an Amazon Virtual Private Cloud
--   through Amazon API Gateway, you, as an API developer, create a VpcLink
--   resource targeted for one or more network load balancers of the VPC
--   and then integrate an API method with a private integration that uses
--   the VpcLink. The private integration has an integration type of
--   <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> and has a connection type of
--   <tt>VPC_LINK</tt>. The integration uses the <tt>connectionId</tt>
--   property to identify the VpcLink used.
--   
--   <i>See:</i> <a>newVpcLink</a> smart constructor.
data VpcLink
VpcLink' :: Maybe VpcLinkStatus -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> VpcLink

-- | Create a value of <a>VpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VpcLink'</a>, <a>vpcLink_status</a> - The status of the
--   VPC link. The valid values are <tt>AVAILABLE</tt>, <tt>PENDING</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an API will wait if
--   the status is <tt>PENDING</tt> and will fail if the status is
--   <tt>DELETING</tt>.
--   
--   <a>$sel:targetArns:VpcLink'</a>, <a>vpcLink_targetArns</a> - The ARN
--   of the network load balancer of the VPC targeted by the VPC link. The
--   network load balancer must be owned by the same AWS account of the API
--   owner.
--   
--   <a>$sel:name:VpcLink'</a>, <a>vpcLink_name</a> - The name used to
--   label and identify the VPC link.
--   
--   <a>$sel:statusMessage:VpcLink'</a>, <a>vpcLink_statusMessage</a> - A
--   description about the VPC link status.
--   
--   <a>$sel:id:VpcLink'</a>, <a>vpcLink_id</a> - The identifier of the
--   VpcLink. It is used in an Integration to reference this VpcLink.
--   
--   <a>$sel:description:VpcLink'</a>, <a>vpcLink_description</a> - The
--   description of the VPC link.
--   
--   <a>$sel:tags:VpcLink'</a>, <a>vpcLink_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newVpcLink :: VpcLink

-- | Requests API Gateway to flush a stage's cache.
--   
--   <i>See:</i> <a>newFlushStageCache</a> smart constructor.
data FlushStageCache
FlushStageCache' :: Text -> Text -> FlushStageCache

-- | Create a value of <a>FlushStageCache</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:FlushStageCache'</a>,
--   <a>flushStageCache_restApiId</a> - [Required] The string identifier of
--   the associated RestApi.
--   
--   <a>$sel:stageName:FlushStageCache'</a>,
--   <a>flushStageCache_stageName</a> - [Required] The name of the stage to
--   flush its cache.
newFlushStageCache :: Text -> Text -> FlushStageCache

-- | <i>See:</i> <a>newFlushStageCacheResponse</a> smart constructor.
data FlushStageCacheResponse
FlushStageCacheResponse' :: FlushStageCacheResponse

-- | Create a value of <a>FlushStageCacheResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newFlushStageCacheResponse :: FlushStageCacheResponse

-- | The POST Request to add a new RestApi resource to your collection.
--   
--   <i>See:</i> <a>newCreateRestApi</a> smart constructor.
data CreateRestApi
CreateRestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateRestApi

-- | Create a value of <a>CreateRestApi</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:CreateRestApi'</a>,
--   <a>createRestApi_minimumCompressionSize</a> - A nullable integer that
--   is used to enable compression (with non-negative between 0 and
--   10485760 (10M) bytes, inclusive) or disable compression (with a null
--   value) on an API. When compression is enabled, compression or
--   decompression is not applied on the payload if the payload size is
--   smaller than this value. Setting it to zero allows compression for any
--   payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:CreateRestApi'</a>,
--   <a>createRestApi_disableExecuteApiEndpoint</a> - Specifies whether
--   clients can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:CreateRestApi'</a>,
--   <a>createRestApi_binaryMediaTypes</a> - The list of binary media types
--   supported by the RestApi. By default, the RestApi supports only
--   UTF-8-encoded text payloads.
--   
--   <a>$sel:version:CreateRestApi'</a>, <a>createRestApi_version</a> - A
--   version identifier for the API.
--   
--   <a>$sel:apiKeySource:CreateRestApi'</a>,
--   <a>createRestApi_apiKeySource</a> - The source of the API key for
--   metering requests according to a usage plan. Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:cloneFrom:CreateRestApi'</a>, <a>createRestApi_cloneFrom</a> -
--   The ID of the RestApi that you want to clone from.
--   
--   <a>$sel:policy:CreateRestApi'</a>, <a>createRestApi_policy</a> - A
--   stringified JSON policy document that applies to this RestApi
--   regardless of the caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:CreateRestApi'</a>,
--   <a>createRestApi_endpointConfiguration</a> - The endpoint
--   configuration of this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:CreateRestApi'</a>,
--   <a>createRestApi_description</a> - The description of the RestApi.
--   
--   <a>$sel:tags:CreateRestApi'</a>, <a>createRestApi_tags</a> - The
--   key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
--   
--   <a>$sel:name:CreateRestApi'</a>, <a>createRestApi_name</a> -
--   [Required] The name of the RestApi.
newCreateRestApi :: Text -> CreateRestApi

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | Represents a delete integration response request.
--   
--   <i>See:</i> <a>newDeleteIntegrationResponse</a> smart constructor.
data DeleteIntegrationResponse
DeleteIntegrationResponse' :: Text -> Text -> Text -> Text -> DeleteIntegrationResponse

-- | Create a value of <a>DeleteIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_resourceId</a> - [Required] Specifies a
--   delete integration response request's resource identifier.
--   
--   <a>$sel:httpMethod:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_httpMethod</a> - [Required] Specifies a
--   delete integration response request's HTTP method.
--   
--   <a>$sel:statusCode:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_statusCode</a> - [Required] Specifies a
--   delete integration response request's status code.
newDeleteIntegrationResponse :: Text -> Text -> Text -> Text -> DeleteIntegrationResponse

-- | <i>See:</i> <a>newDeleteIntegrationResponseResponse</a> smart
--   constructor.
data DeleteIntegrationResponseResponse
DeleteIntegrationResponseResponse' :: DeleteIntegrationResponseResponse

-- | Create a value of <a>DeleteIntegrationResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIntegrationResponseResponse :: DeleteIntegrationResponseResponse

-- | Represents an update integration response request.
--   
--   <i>See:</i> <a>newUpdateIntegrationResponse</a> smart constructor.
data UpdateIntegrationResponse
UpdateIntegrationResponse' :: Maybe [PatchOperation] -> Text -> Text -> Text -> Text -> UpdateIntegrationResponse

-- | Create a value of <a>UpdateIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:restApiId:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_resourceId</a> - [Required] Specifies an
--   update integration response request's resource identifier.
--   
--   <a>$sel:httpMethod:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_httpMethod</a> - [Required] Specifies an
--   update integration response request's HTTP method.
--   
--   <a>$sel:statusCode:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_statusCode</a> - [Required] Specifies an
--   update integration response request's status code.
newUpdateIntegrationResponse :: Text -> Text -> Text -> Text -> UpdateIntegrationResponse

-- | Represents an integration response. The status code must map to an
--   existing MethodResponse, and parameters and templates can be used to
--   transform the back-end response.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegrationResponse</a> smart constructor.
data IntegrationResponse
IntegrationResponse' :: Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> IntegrationResponse

-- | Create a value of <a>IntegrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentHandling:IntegrationResponse'</a>,
--   <a>integrationResponse_contentHandling</a> - Specifies how to handle
--   response payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
--   
--   <a>$sel:responseTemplates:IntegrationResponse'</a>,
--   <a>integrationResponse_responseTemplates</a> - Specifies the templates
--   used to transform the integration response body. Response templates
--   are represented as a key/value map, with a content-type as the key and
--   a template as the value.
--   
--   <a>$sel:selectionPattern:IntegrationResponse'</a>,
--   <a>integrationResponse_selectionPattern</a> - Specifies the regular
--   expression (regex) pattern used to choose an integration response
--   based on the response from the back end. For example, if the success
--   response returns nothing and the error response returns some string,
--   you could use the <tt>.+</tt> regex to match error response. However,
--   make sure that the error response does not contain any newline
--   (<tt>\n</tt>) character in such cases. If the back end is an AWS
--   Lambda function, the AWS Lambda function error header is matched. For
--   all other HTTP and AWS back ends, the HTTP status code is matched.
--   
--   <a>$sel:statusCode:IntegrationResponse'</a>,
--   <a>integrationResponse_statusCode</a> - Specifies the status code that
--   is used to map the integration response to an existing MethodResponse.
--   
--   <a>$sel:responseParameters:IntegrationResponse'</a>,
--   <a>integrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the back end. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of <tt>method.response.header.{name}</tt>, where <tt>name</tt>
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
newIntegrationResponse :: IntegrationResponse

-- | The PATCH request to grant a temporary extension to the remaining
--   quota of a usage plan associated with a specified API key.
--   
--   <i>See:</i> <a>newUpdateUsage</a> smart constructor.
data UpdateUsage
UpdateUsage' :: Maybe [PatchOperation] -> Text -> Text -> UpdateUsage

-- | Create a value of <a>UpdateUsage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateUsage'</a>,
--   <a>updateUsage_patchOperations</a> - A list of update operations to be
--   applied to the specified resource and in the order specified in this
--   list.
--   
--   <a>$sel:usagePlanId:UpdateUsage'</a>, <a>updateUsage_usagePlanId</a> -
--   [Required] The Id of the usage plan associated with the usage data.
--   
--   <a>$sel:keyId:UpdateUsage'</a>, <a>updateUsage_keyId</a> - [Required]
--   The identifier of the API key associated with the usage plan in which
--   a temporary extension is granted to the remaining quota.
newUpdateUsage :: Text -> Text -> UpdateUsage

-- | Represents the usage data of a usage plan.
--   
--   <a>Create and Use Usage Plans</a>, <a>Manage Usage in a Usage Plan</a>
--   
--   <i>See:</i> <a>newUsage</a> smart constructor.
data Usage
Usage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text [[Integer]]) -> Maybe Text -> Maybe Text -> Usage

-- | Create a value of <a>Usage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:Usage'</a>, <a>usage_usagePlanId</a> - The plan Id
--   associated with this usage data.
--   
--   <a>$sel:endDate:Usage'</a>, <a>usage_endDate</a> - The ending date of
--   the usage data.
--   
--   <a>$sel:items:Usage'</a>, <a>usage_items</a> - The usage data, as
--   daily logs of used and remaining quotas, over the specified time
--   interval indexed over the API keys in a usage plan. For example,
--   <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90], [100,
--   10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value and
--   the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
--   
--   <a>$sel:startDate:Usage'</a>, <a>usage_startDate</a> - The starting
--   date of the usage data.
--   
--   <a>$sel:position:Usage'</a>, <a>usage_position</a> - Undocumented
--   member.
newUsage :: Usage

-- | Represents a delete integration request.
--   
--   <i>See:</i> <a>newDeleteIntegration</a> smart constructor.
data DeleteIntegration
DeleteIntegration' :: Text -> Text -> Text -> DeleteIntegration

-- | Create a value of <a>DeleteIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteIntegration'</a>,
--   <a>deleteIntegration_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:resourceId:DeleteIntegration'</a>,
--   <a>deleteIntegration_resourceId</a> - [Required] Specifies a delete
--   integration request's resource identifier.
--   
--   <a>$sel:httpMethod:DeleteIntegration'</a>,
--   <a>deleteIntegration_httpMethod</a> - [Required] Specifies a delete
--   integration request's HTTP method.
newDeleteIntegration :: Text -> Text -> Text -> DeleteIntegration

-- | <i>See:</i> <a>newDeleteIntegrationResponse'</a> smart constructor.
data DeleteIntegrationResponse'
DeleteIntegrationResponse'' :: DeleteIntegrationResponse'

-- | Create a value of <a>DeleteIntegrationResponse'</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIntegrationResponse' :: DeleteIntegrationResponse'

-- | Represents an update integration request.
--   
--   <i>See:</i> <a>newUpdateIntegration</a> smart constructor.
data UpdateIntegration
UpdateIntegration' :: Maybe [PatchOperation] -> Text -> Text -> Text -> UpdateIntegration

-- | Create a value of <a>UpdateIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateIntegration'</a>,
--   <a>updateIntegration_patchOperations</a> - A list of update operations
--   to be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:restApiId:UpdateIntegration'</a>,
--   <a>updateIntegration_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:resourceId:UpdateIntegration'</a>,
--   <a>updateIntegration_resourceId</a> - [Required] Represents an update
--   integration request's resource identifier.
--   
--   <a>$sel:httpMethod:UpdateIntegration'</a>,
--   <a>updateIntegration_httpMethod</a> - [Required] Represents an update
--   integration request's HTTP method.
newUpdateIntegration :: Text -> Text -> Text -> UpdateIntegration

-- | Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.
--   
--   In the API Gateway console, the built-in Lambda integration is an AWS
--   integration.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegration</a> smart constructor.
data Integration
Integration' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe Text -> Maybe (HashMap Text IntegrationResponse) -> Maybe TlsConfig -> Maybe Text -> Maybe Int -> Maybe IntegrationType -> Maybe ConnectionType -> Maybe [Text] -> Integration

-- | Create a value of <a>Integration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:Integration'</a>, <a>integration_httpMethod</a> -
--   Specifies the integration's HTTP method type.
--   
--   <a>$sel:requestTemplates:Integration'</a>,
--   <a>integration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   
--   <a>$sel:credentials:Integration'</a>, <a>integration_credentials</a> -
--   Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
--   
--   <a>$sel:connectionId:Integration'</a>, <a>integration_connectionId</a>
--   - The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
--   
--   <a>$sel:requestParameters:Integration'</a>,
--   <a>integration_requestParameters</a> - A key-value map specifying
--   request parameters that are passed from the method request to the back
--   end. The key is an integration request parameter name and the
--   associated value is a method request parameter value or static value
--   that must be enclosed within single quotes and pre-encoded as required
--   by the back end. The method request parameter value must match the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> must be a valid and unique method
--   request parameter name.
--   
--   <a>$sel:contentHandling:Integration'</a>,
--   <a>integration_contentHandling</a> - Specifies how to handle request
--   payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
--   
--   <a>$sel:passthroughBehavior:Integration'</a>,
--   <a>integration_passthroughBehavior</a> - Specifies how the method
--   request body of an unmapped content type will be passed through the
--   integration request to the back end without transformation. A content
--   type is unmapped if no mapping template is defined in the integration
--   or the content type does not match any of the mapped content types, as
--   specified in <tt>requestTemplates</tt>. The valid value is one of the
--   following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
--   
--   <a>$sel:uri:Integration'</a>, <a>integration_uri</a> - Specifies
--   Uniform Resource Identifier (URI) of the integration endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
--   
--   <a>$sel:integrationResponses:Integration'</a>,
--   <a>integration_integrationResponses</a> - Specifies the integration's
--   responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
--   
--   <a>$sel:tlsConfig:Integration'</a>, <a>integration_tlsConfig</a> -
--   Specifies the TLS configuration for an integration.
--   
--   <a>$sel:cacheNamespace:Integration'</a>,
--   <a>integration_cacheNamespace</a> - Specifies a group of related
--   cached parameters. By default, API Gateway uses the resource ID as the
--   <tt>cacheNamespace</tt>. You can specify the same
--   <tt>cacheNamespace</tt> across resources to return the same cached
--   data for requests to different resources.
--   
--   <a>$sel:timeoutInMillis:Integration'</a>,
--   <a>integration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds. The default value is 29,000 milliseconds or 29
--   seconds.
--   
--   <a>$sel:type':Integration'</a>, <a>integration_type</a> - Specifies an
--   API method integration type. The valid value is one of the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
--   
--   <a>$sel:connectionType:Integration'</a>,
--   <a>integration_connectionType</a> - The type of the network connection
--   to the integration endpoint. The valid value is <tt>INTERNET</tt> for
--   connections through the public routable internet or <tt>VPC_LINK</tt>
--   for private connections between API Gateway and a network load
--   balancer in a VPC. The default value is <tt>INTERNET</tt>.
--   
--   <a>$sel:cacheKeyParameters:Integration'</a>,
--   <a>integration_cacheKeyParameters</a> - A list of request parameters
--   whose values API Gateway caches. To be valid values for
--   <tt>cacheKeyParameters</tt>, these parameters must also be specified
--   for Method <tt>requestParameters</tt>.
newIntegration :: Integration

-- | Make a request to simulate the execution of an Authorizer.
--   
--   <i>See:</i> <a>newTestInvokeAuthorizer</a> smart constructor.
data TestInvokeAuthorizer
TestInvokeAuthorizer' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Maybe (HashMap Text [Text]) -> Text -> Text -> TestInvokeAuthorizer

-- | Create a value of <a>TestInvokeAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathWithQueryString:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_pathWithQueryString</a> - [Optional] The URI
--   path, including query string, of the simulated invocation request. Use
--   this to specify path parameters and query string parameters.
--   
--   <a>$sel:body:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_body</a> - [Optional] The simulated request
--   body of an incoming invocation request.
--   
--   <a>$sel:additionalContext:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_additionalContext</a> - [Optional] A key-value
--   map of additional context variables.
--   
--   <a>$sel:stageVariables:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_stageVariables</a> - A key-value map of stage
--   variables to simulate an invocation on a deployed Stage.
--   
--   <a>$sel:headers:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_headers</a> - [Required] A key-value map of
--   headers to simulate an incoming invocation request. This is where the
--   incoming authorization token, or identity source, should be specified.
--   
--   <a>$sel:multiValueHeaders:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_multiValueHeaders</a> - [Optional] The headers
--   as a map from string to list of values to simulate an incoming
--   invocation request. This is where the incoming authorization token, or
--   identity source, may be specified.
--   
--   <a>$sel:restApiId:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:authorizerId:TestInvokeAuthorizer'</a>,
--   <a>testInvokeAuthorizer_authorizerId</a> - [Required] Specifies a test
--   invoke authorizer request's Authorizer ID.
newTestInvokeAuthorizer :: Text -> Text -> TestInvokeAuthorizer

-- | Represents the response of the test invoke request for a custom
--   Authorizer
--   
--   <i>See:</i> <a>newTestInvokeAuthorizerResponse</a> smart constructor.
data TestInvokeAuthorizerResponse
TestInvokeAuthorizerResponse' :: Maybe Text -> Maybe Text -> Maybe Integer -> Maybe (HashMap Text [Text]) -> Maybe (HashMap Text Text) -> Maybe Int -> Maybe Text -> Int -> TestInvokeAuthorizerResponse

-- | Create a value of <a>TestInvokeAuthorizerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:log:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_log</a> - The API Gateway execution
--   log for the test authorizer request.
--   
--   <a>$sel:principalId:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_principalId</a> - The principal
--   identity returned by the Authorizer
--   
--   <a>$sel:latency:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_latency</a> - The execution latency of
--   the test authorizer request.
--   
--   <a>$sel:authorization:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_authorization</a> - Undocumented
--   member.
--   
--   <a>$sel:claims:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_claims</a> - The <a>open identity
--   claims</a>, with any supported custom attributes, returned from the
--   Cognito Your User Pool configured for the API.
--   
--   <a>$sel:clientStatus:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_clientStatus</a> - The HTTP status
--   code that the client would have received. Value is 0 if the authorizer
--   succeeded.
--   
--   <a>$sel:policy:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_policy</a> - The JSON policy document
--   returned by the Authorizer
--   
--   <a>$sel:httpStatus:TestInvokeAuthorizerResponse'</a>,
--   <a>testInvokeAuthorizerResponse_httpStatus</a> - The response's http
--   status code.
newTestInvokeAuthorizerResponse :: Int -> TestInvokeAuthorizerResponse

-- | A request to generate a ClientCertificate resource.
--   
--   <i>See:</i> <a>newGenerateClientCertificate</a> smart constructor.
data GenerateClientCertificate
GenerateClientCertificate' :: Maybe Text -> Maybe (HashMap Text Text) -> GenerateClientCertificate

-- | Create a value of <a>GenerateClientCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:GenerateClientCertificate'</a>,
--   <a>generateClientCertificate_description</a> - The description of the
--   ClientCertificate.
--   
--   <a>$sel:tags:GenerateClientCertificate'</a>,
--   <a>generateClientCertificate_tags</a> - The key-value map of strings.
--   The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to
--   128 characters and must not start with <tt>aws:</tt>. The tag value
--   can be up to 256 characters.
newGenerateClientCertificate :: GenerateClientCertificate

-- | Represents a client certificate used to configure client-side SSL
--   authentication while sending requests to the integration endpoint.
--   
--   Client certificates are used to authenticate an API by the backend
--   server. To authenticate an API client (or user), use IAM roles and
--   policies, a custom Authorizer or an Amazon Cognito user pool.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newClientCertificate</a> smart constructor.
data ClientCertificate
ClientCertificate' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ClientCertificate

-- | Create a value of <a>ClientCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pemEncodedCertificate:ClientCertificate'</a>,
--   <a>clientCertificate_pemEncodedCertificate</a> - The PEM-encoded
--   public key of the client certificate, which can be used to configure
--   certificate authentication in the integration endpoint .
--   
--   <a>$sel:clientCertificateId:ClientCertificate'</a>,
--   <a>clientCertificate_clientCertificateId</a> - The identifier of the
--   client certificate.
--   
--   <a>$sel:createdDate:ClientCertificate'</a>,
--   <a>clientCertificate_createdDate</a> - The timestamp when the client
--   certificate was created.
--   
--   <a>$sel:expirationDate:ClientCertificate'</a>,
--   <a>clientCertificate_expirationDate</a> - The timestamp when the
--   client certificate will expire.
--   
--   <a>$sel:description:ClientCertificate'</a>,
--   <a>clientCertificate_description</a> - The description of the client
--   certificate.
--   
--   <a>$sel:tags:ClientCertificate'</a>, <a>clientCertificate_tags</a> -
--   The collection of tags. Each tag element is associated with a given
--   resource.
newClientCertificate :: ClientCertificate

-- | Request to list information about a collection of resources.
--   
--   <i>See:</i> <a>newGetResources</a> smart constructor.
data GetResources
GetResources' :: Maybe [Text] -> Maybe Int -> Maybe Text -> Text -> GetResources

-- | Create a value of <a>GetResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:embed:GetResources'</a>, <a>getResources_embed</a> - A query
--   parameter used to retrieve the specified resources embedded in the
--   returned Resources resource in the response. This <tt>embed</tt>
--   parameter value is a list of comma-separated strings. Currently, the
--   request supports only retrieval of the embedded Method resources this
--   way. The query parameter value must be a single-valued list and
--   contain the <tt>"methods"</tt> string. For example, <tt>GET
--   /restapis/{restapi_id}/resources?embed=methods</tt>.
--   
--   <a>$sel:limit:GetResources'</a>, <a>getResources_limit</a> - The
--   maximum number of returned results per page. The default value is 25
--   and the maximum value is 500.
--   
--   <a>$sel:position:GetResources'</a>, <a>getResources_position</a> - The
--   current pagination position in the paged result set.
--   
--   <a>$sel:restApiId:GetResources'</a>, <a>getResources_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
newGetResources :: Text -> GetResources

-- | Represents a collection of Resource resources.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newGetResourcesResponse</a> smart constructor.
data GetResourcesResponse
GetResourcesResponse' :: Maybe [Resource] -> Maybe Text -> Int -> GetResourcesResponse

-- | Create a value of <a>GetResourcesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetResourcesResponse'</a>,
--   <a>getResourcesResponse_items</a> - The current page of elements from
--   this collection.
--   
--   <a>$sel:position:GetResources'</a>,
--   <a>getResourcesResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetResourcesResponse'</a>,
--   <a>getResourcesResponse_httpStatus</a> - The response's http status
--   code.
newGetResourcesResponse :: Int -> GetResourcesResponse

-- | The GET request to get a usage plan key of a given key identifier.
--   
--   <i>See:</i> <a>newGetUsagePlanKey</a> smart constructor.
data GetUsagePlanKey
GetUsagePlanKey' :: Text -> Text -> GetUsagePlanKey

-- | Create a value of <a>GetUsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:GetUsagePlanKey'</a>,
--   <a>getUsagePlanKey_usagePlanId</a> - [Required] The Id of the
--   UsagePlan resource representing the usage plan containing the
--   to-be-retrieved UsagePlanKey resource representing a plan customer.
--   
--   <a>$sel:keyId:GetUsagePlanKey'</a>, <a>getUsagePlanKey_keyId</a> -
--   [Required] The key Id of the to-be-retrieved UsagePlanKey resource
--   representing a plan customer.
newGetUsagePlanKey :: Text -> Text -> GetUsagePlanKey

-- | Represents a usage plan key to identify a plan customer.
--   
--   To associate an API stage with a selected API key in a usage plan, you
--   must create a UsagePlanKey resource to represent the selected ApiKey.
--   
--   "
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlanKey</a> smart constructor.
data UsagePlanKey
UsagePlanKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UsagePlanKey

-- | Create a value of <a>UsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:UsagePlanKey'</a>, <a>usagePlanKey_value</a> - The value
--   of a usage plan key.
--   
--   <a>$sel:name:UsagePlanKey'</a>, <a>usagePlanKey_name</a> - The name of
--   a usage plan key.
--   
--   <a>$sel:id:UsagePlanKey'</a>, <a>usagePlanKey_id</a> - The Id of a
--   usage plan key.
--   
--   <a>$sel:type':UsagePlanKey'</a>, <a>usagePlanKey_type</a> - The type
--   of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
newUsagePlanKey :: UsagePlanKey

-- | Requests API Gateway to get information about the current Account
--   resource.
--   
--   <i>See:</i> <a>newGetAccount</a> smart constructor.
data GetAccount
GetAccount' :: GetAccount

-- | Create a value of <a>GetAccount</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetAccount :: GetAccount

-- | Represents an AWS account that is associated with API Gateway.
--   
--   To view the account info, call <tt>GET</tt> on this resource.
--   
--   <h4>Error Codes</h4>
--   
--   The following exception may be thrown when the request fails.
--   
--   <ul>
--   <li>UnauthorizedException</li>
--   <li>NotFoundException</li>
--   <li>TooManyRequestsException</li>
--   </ul>
--   
--   For detailed error code information, including the corresponding HTTP
--   Status Codes, see <a>API Gateway Error Codes</a>
--   
--   <h4>Example: Get the information about an account.</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /account HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160531T184618Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/account-apigateway-{rel}.html", "name": "account", "templated": true }, "self": { "href": "/account" }, "account:update": { "href": "/account" } }, "cloudwatchRoleArn": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "throttleSettings": { "rateLimit": 500, "burstLimit": 1000 } }
--   </pre>
--   
--   In addition to making the REST API call directly, you can use the AWS
--   CLI and an AWS SDK to access this resource.
--   
--   <a>API Gateway Limits</a> <a>Developer Guide</a>, <a>AWS CLI</a>
--   
--   <i>See:</i> <a>newAccount</a> smart constructor.
data Account
Account' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe ThrottleSettings -> Account

-- | Create a value of <a>Account</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyVersion:Account'</a>, <a>account_apiKeyVersion</a> - The
--   version of the API keys used for the account.
--   
--   <a>$sel:cloudwatchRoleArn:Account'</a>,
--   <a>account_cloudwatchRoleArn</a> - The ARN of an Amazon CloudWatch
--   role for the current Account.
--   
--   <a>$sel:features:Account'</a>, <a>account_features</a> - A list of
--   features supported for the account. When usage plans are enabled, the
--   features list will include an entry of <tt>"UsagePlans"</tt>.
--   
--   <a>$sel:throttleSettings:Account'</a>, <a>account_throttleSettings</a>
--   - Specifies the API request limits configured for the current Account.
newAccount :: Account

-- | Sets up a method's integration.
--   
--   <i>See:</i> <a>newPutIntegration</a> smart constructor.
data PutIntegration
PutIntegration' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe Text -> Maybe TlsConfig -> Maybe Text -> Maybe Int -> Maybe ConnectionType -> Maybe Text -> Maybe [Text] -> Text -> Text -> Text -> IntegrationType -> PutIntegration

-- | Create a value of <a>PutIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestTemplates:PutIntegration'</a>,
--   <a>putIntegration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   
--   <a>$sel:credentials:PutIntegration'</a>,
--   <a>putIntegration_credentials</a> - Specifies whether credentials are
--   required for a put integration.
--   
--   <a>$sel:connectionId:PutIntegration'</a>,
--   <a>putIntegration_connectionId</a> - The (<a>id</a>) of the VpcLink
--   used for the integration when <tt>connectionType=VPC_LINK</tt> and
--   undefined, otherwise.
--   
--   <a>$sel:requestParameters:PutIntegration'</a>,
--   <a>putIntegration_requestParameters</a> - A key-value map specifying
--   request parameters that are passed from the method request to the back
--   end. The key is an integration request parameter name and the
--   associated value is a method request parameter value or static value
--   that must be enclosed within single quotes and pre-encoded as required
--   by the back end. The method request parameter value must match the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> must be a valid and unique method
--   request parameter name.
--   
--   <a>$sel:contentHandling:PutIntegration'</a>,
--   <a>putIntegration_contentHandling</a> - Specifies how to handle
--   request payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
--   
--   <a>$sel:passthroughBehavior:PutIntegration'</a>,
--   <a>putIntegration_passthroughBehavior</a> - Specifies the pass-through
--   behavior for incoming requests based on the Content-Type header in the
--   request, and the available mapping templates specified as the
--   <tt>requestTemplates</tt> property on the Integration resource. There
--   are three valid values: <tt>WHEN_NO_MATCH</tt>,
--   <tt>WHEN_NO_TEMPLATES</tt>, and <tt>NEVER</tt>.
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt> passes the request body for unmapped
--   content types through to the integration back end without
--   transformation.</li>
--   <li><tt>NEVER</tt> rejects unmapped content types with an HTTP 415
--   'Unsupported Media Type' response.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt> allows pass-through when the
--   integration has NO content types mapped to templates. However if there
--   is at least one content type defined, unmapped content types will be
--   rejected with the same 415 response.</li>
--   </ul>
--   
--   <a>$sel:uri:PutIntegration'</a>, <a>putIntegration_uri</a> - Specifies
--   Uniform Resource Identifier (URI) of the integration endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
--   
--   <a>$sel:tlsConfig:PutIntegration'</a>, <a>putIntegration_tlsConfig</a>
--   - Undocumented member.
--   
--   <a>$sel:cacheNamespace:PutIntegration'</a>,
--   <a>putIntegration_cacheNamespace</a> - Specifies a group of related
--   cached parameters. By default, API Gateway uses the resource ID as the
--   <tt>cacheNamespace</tt>. You can specify the same
--   <tt>cacheNamespace</tt> across resources to return the same cached
--   data for requests to different resources.
--   
--   <a>$sel:timeoutInMillis:PutIntegration'</a>,
--   <a>putIntegration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds. The default value is 29,000 milliseconds or 29
--   seconds.
--   
--   <a>$sel:connectionType:PutIntegration'</a>,
--   <a>putIntegration_connectionType</a> - The type of the network
--   connection to the integration endpoint. The valid value is
--   <tt>INTERNET</tt> for connections through the public routable internet
--   or <tt>VPC_LINK</tt> for private connections between API Gateway and a
--   network load balancer in a VPC. The default value is
--   <tt>INTERNET</tt>.
--   
--   <a>$sel:integrationHttpMethod:PutIntegration'</a>,
--   <a>putIntegration_integrationHttpMethod</a> - Specifies a put
--   integration HTTP method. When the integration type is HTTP or AWS,
--   this field is required.
--   
--   <a>$sel:cacheKeyParameters:PutIntegration'</a>,
--   <a>putIntegration_cacheKeyParameters</a> - A list of request
--   parameters whose values API Gateway caches. To be valid values for
--   <tt>cacheKeyParameters</tt>, these parameters must also be specified
--   for Method <tt>requestParameters</tt>.
--   
--   <a>$sel:restApiId:PutIntegration'</a>, <a>putIntegration_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:PutIntegration'</a>,
--   <a>putIntegration_resourceId</a> - [Required] Specifies a put
--   integration request's resource ID.
--   
--   <a>$sel:httpMethod:PutIntegration'</a>,
--   <a>putIntegration_httpMethod</a> - [Required] Specifies a put
--   integration request's HTTP method.
--   
--   <a>$sel:type':PutIntegration'</a>, <a>putIntegration_type</a> -
--   [Required] Specifies a put integration input's type.
newPutIntegration :: Text -> Text -> Text -> IntegrationType -> PutIntegration

-- | Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.
--   
--   In the API Gateway console, the built-in Lambda integration is an AWS
--   integration.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegration</a> smart constructor.
data Integration
Integration' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe Text -> Maybe (HashMap Text IntegrationResponse) -> Maybe TlsConfig -> Maybe Text -> Maybe Int -> Maybe IntegrationType -> Maybe ConnectionType -> Maybe [Text] -> Integration

-- | Create a value of <a>Integration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:Integration'</a>, <a>integration_httpMethod</a> -
--   Specifies the integration's HTTP method type.
--   
--   <a>$sel:requestTemplates:Integration'</a>,
--   <a>integration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   
--   <a>$sel:credentials:Integration'</a>, <a>integration_credentials</a> -
--   Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
--   
--   <a>$sel:connectionId:Integration'</a>, <a>integration_connectionId</a>
--   - The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
--   
--   <a>$sel:requestParameters:Integration'</a>,
--   <a>integration_requestParameters</a> - A key-value map specifying
--   request parameters that are passed from the method request to the back
--   end. The key is an integration request parameter name and the
--   associated value is a method request parameter value or static value
--   that must be enclosed within single quotes and pre-encoded as required
--   by the back end. The method request parameter value must match the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> must be a valid and unique method
--   request parameter name.
--   
--   <a>$sel:contentHandling:Integration'</a>,
--   <a>integration_contentHandling</a> - Specifies how to handle request
--   payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
--   
--   <a>$sel:passthroughBehavior:Integration'</a>,
--   <a>integration_passthroughBehavior</a> - Specifies how the method
--   request body of an unmapped content type will be passed through the
--   integration request to the back end without transformation. A content
--   type is unmapped if no mapping template is defined in the integration
--   or the content type does not match any of the mapped content types, as
--   specified in <tt>requestTemplates</tt>. The valid value is one of the
--   following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
--   
--   <a>$sel:uri:Integration'</a>, <a>integration_uri</a> - Specifies
--   Uniform Resource Identifier (URI) of the integration endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
--   
--   <a>$sel:integrationResponses:Integration'</a>,
--   <a>integration_integrationResponses</a> - Specifies the integration's
--   responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
--   
--   <a>$sel:tlsConfig:Integration'</a>, <a>integration_tlsConfig</a> -
--   Specifies the TLS configuration for an integration.
--   
--   <a>$sel:cacheNamespace:Integration'</a>,
--   <a>integration_cacheNamespace</a> - Specifies a group of related
--   cached parameters. By default, API Gateway uses the resource ID as the
--   <tt>cacheNamespace</tt>. You can specify the same
--   <tt>cacheNamespace</tt> across resources to return the same cached
--   data for requests to different resources.
--   
--   <a>$sel:timeoutInMillis:Integration'</a>,
--   <a>integration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds. The default value is 29,000 milliseconds or 29
--   seconds.
--   
--   <a>$sel:type':Integration'</a>, <a>integration_type</a> - Specifies an
--   API method integration type. The valid value is one of the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
--   
--   <a>$sel:connectionType:Integration'</a>,
--   <a>integration_connectionType</a> - The type of the network connection
--   to the integration endpoint. The valid value is <tt>INTERNET</tt> for
--   connections through the public routable internet or <tt>VPC_LINK</tt>
--   for private connections between API Gateway and a network load
--   balancer in a VPC. The default value is <tt>INTERNET</tt>.
--   
--   <a>$sel:cacheKeyParameters:Integration'</a>,
--   <a>integration_cacheKeyParameters</a> - A list of request parameters
--   whose values API Gateway caches. To be valid values for
--   <tt>cacheKeyParameters</tt>, these parameters must also be specified
--   for Method <tt>requestParameters</tt>.
newIntegration :: Integration

-- | Request to describe an existing Authorizer resource.
--   
--   <i>See:</i> <a>newGetAuthorizer</a> smart constructor.
data GetAuthorizer
GetAuthorizer' :: Text -> Text -> GetAuthorizer

-- | Create a value of <a>GetAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetAuthorizer'</a>, <a>getAuthorizer_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:authorizerId:GetAuthorizer'</a>,
--   <a>getAuthorizer_authorizerId</a> - [Required] The identifier of the
--   Authorizer resource.
newGetAuthorizer :: Text -> Text -> GetAuthorizer

-- | Represents an authorization layer for methods. If enabled on a method,
--   API Gateway will activate the authorizer when a client calls the
--   method.
--   
--   <a>Use Lambda Function as Authorizer</a> <a>Use Cognito User Pool as
--   Authorizer</a>
--   
--   <i>See:</i> <a>newAuthorizer</a> smart constructor.
data Authorizer
Authorizer' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe AuthorizerType -> Maybe Text -> Maybe Text -> Authorizer

-- | Create a value of <a>Authorizer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerUri:Authorizer'</a>, <a>authorizer_authorizerUri</a>
--   - Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
--   
--   <a>$sel:identityValidationExpression:Authorizer'</a>,
--   <a>authorizer_identityValidationExpression</a> - A validation
--   expression for the incoming identity token. For <tt>TOKEN</tt>
--   authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
--   
--   <a>$sel:providerARNs:Authorizer'</a>, <a>authorizer_providerARNs</a> -
--   A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
--   
--   <a>$sel:name:Authorizer'</a>, <a>authorizer_name</a> - [Required] The
--   name of the authorizer.
--   
--   <a>$sel:id:Authorizer'</a>, <a>authorizer_id</a> - The identifier for
--   the authorizer resource.
--   
--   <a>$sel:authorizerResultTtlInSeconds:Authorizer'</a>,
--   <a>authorizer_authorizerResultTtlInSeconds</a> - The TTL in seconds of
--   cached authorizer results. If it equals 0, authorization caching is
--   disabled. If it is greater than 0, API Gateway will cache authorizer
--   responses. If this field is not set, the default value is 300. The
--   maximum value is 3600, or 1 hour.
--   
--   <a>$sel:authType:Authorizer'</a>, <a>authorizer_authType</a> -
--   Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
--   
--   <a>$sel:type':Authorizer'</a>, <a>authorizer_type</a> - The authorizer
--   type. Valid values are <tt>TOKEN</tt> for a Lambda function using a
--   single authorization token submitted in a custom header,
--   <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
--   
--   <a>$sel:identitySource:Authorizer'</a>,
--   <a>authorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
--   
--   <a>$sel:authorizerCredentials:Authorizer'</a>,
--   <a>authorizer_authorizerCredentials</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, specify null.
newAuthorizer :: Authorizer

-- | The DELETE request to delete a usage plan of a given plan Id.
--   
--   <i>See:</i> <a>newDeleteUsagePlan</a> smart constructor.
data DeleteUsagePlan
DeleteUsagePlan' :: Text -> DeleteUsagePlan

-- | Create a value of <a>DeleteUsagePlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:DeleteUsagePlan'</a>,
--   <a>deleteUsagePlan_usagePlanId</a> - [Required] The Id of the
--   to-be-deleted usage plan.
newDeleteUsagePlan :: Text -> DeleteUsagePlan

-- | <i>See:</i> <a>newDeleteUsagePlanResponse</a> smart constructor.
data DeleteUsagePlanResponse
DeleteUsagePlanResponse' :: DeleteUsagePlanResponse

-- | Create a value of <a>DeleteUsagePlanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUsagePlanResponse :: DeleteUsagePlanResponse

-- | The PATCH request to update a usage plan of a given plan Id.
--   
--   <i>See:</i> <a>newUpdateUsagePlan</a> smart constructor.
data UpdateUsagePlan
UpdateUsagePlan' :: Maybe [PatchOperation] -> Text -> UpdateUsagePlan

-- | Create a value of <a>UpdateUsagePlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateUsagePlan'</a>,
--   <a>updateUsagePlan_patchOperations</a> - A list of update operations
--   to be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:usagePlanId:UpdateUsagePlan'</a>,
--   <a>updateUsagePlan_usagePlanId</a> - [Required] The Id of the
--   to-be-updated usage plan.
newUpdateUsagePlan :: Text -> UpdateUsagePlan

-- | Represents a usage plan than can specify who can assess associated API
--   stages with specified request limits and quotas.
--   
--   In a usage plan, you associate an API by specifying the API's Id and a
--   stage name of the specified API. You add plan customers by adding API
--   keys to the plan.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlan</a> smart constructor.
data UsagePlan
UsagePlan' :: Maybe [ApiStage] -> Maybe Text -> Maybe Text -> Maybe ThrottleSettings -> Maybe QuotaSettings -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> UsagePlan

-- | Create a value of <a>UsagePlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiStages:UsagePlan'</a>, <a>usagePlan_apiStages</a> - The
--   associated API stages of a usage plan.
--   
--   <a>$sel:name:UsagePlan'</a>, <a>usagePlan_name</a> - The name of a
--   usage plan.
--   
--   <a>$sel:id:UsagePlan'</a>, <a>usagePlan_id</a> - The identifier of a
--   UsagePlan resource.
--   
--   <a>$sel:throttle:UsagePlan'</a>, <a>usagePlan_throttle</a> - The
--   request throttle limits of a usage plan.
--   
--   <a>$sel:quota:UsagePlan'</a>, <a>usagePlan_quota</a> - The maximum
--   number of permitted requests per a given unit time interval.
--   
--   <a>$sel:description:UsagePlan'</a>, <a>usagePlan_description</a> - The
--   description of a usage plan.
--   
--   <a>$sel:productCode:UsagePlan'</a>, <a>usagePlan_productCode</a> - The
--   AWS Markeplace product identifier to associate with the usage plan as
--   a SaaS product on AWS Marketplace.
--   
--   <a>$sel:tags:UsagePlan'</a>, <a>usagePlan_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newUsagePlan :: UsagePlan

-- | Requests API Gateway to get information about a Stage resource.
--   
--   <i>See:</i> <a>newGetStage</a> smart constructor.
data GetStage
GetStage' :: Text -> Text -> GetStage

-- | Create a value of <a>GetStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetStage'</a>, <a>getStage_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:GetStage'</a>, <a>getStage_stageName</a> -
--   [Required] The name of the Stage resource to get information about.
newGetStage :: Text -> Text -> GetStage

-- | Represents a unique identifier for a version of a deployed RestApi
--   that is callable by users.
--   
--   <a>Deploy an API</a>
--   
--   <i>See:</i> <a>newStage</a> smart constructor.
data Stage
Stage' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe AccessLogSettings -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe CacheClusterStatus -> Maybe (HashMap Text MethodSetting) -> Maybe POSIX -> Maybe CacheClusterSize -> Maybe Text -> Maybe CanarySettings -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Stage

-- | Create a value of <a>Stage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Stage'</a>, <a>stage_deploymentId</a> - The
--   identifier of the Deployment that the stage points to.
--   
--   <a>$sel:variables:Stage'</a>, <a>stage_variables</a> - A map that
--   defines the stage variables for a Stage resource. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:accessLogSettings:Stage'</a>, <a>stage_accessLogSettings</a> -
--   Settings for logging access in this stage.
--   
--   <a>$sel:documentationVersion:Stage'</a>,
--   <a>stage_documentationVersion</a> - The version of the associated API
--   documentation.
--   
--   <a>$sel:clientCertificateId:Stage'</a>,
--   <a>stage_clientCertificateId</a> - The identifier of a client
--   certificate for an API stage.
--   
--   <a>$sel:tracingEnabled:Stage'</a>, <a>stage_tracingEnabled</a> -
--   Specifies whether active tracing with X-ray is enabled for the Stage.
--   
--   <a>$sel:createdDate:Stage'</a>, <a>stage_createdDate</a> - The
--   timestamp when the stage was created.
--   
--   <a>$sel:cacheClusterStatus:Stage'</a>, <a>stage_cacheClusterStatus</a>
--   - The status of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:methodSettings:Stage'</a>, <a>stage_methodSettings</a> - A map
--   that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
--   
--   <a>$sel:lastUpdatedDate:Stage'</a>, <a>stage_lastUpdatedDate</a> - The
--   timestamp when the stage last updated.
--   
--   <a>$sel:cacheClusterSize:Stage'</a>, <a>stage_cacheClusterSize</a> -
--   The size of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:webAclArn:Stage'</a>, <a>stage_webAclArn</a> - The ARN of the
--   WebAcl associated with the Stage.
--   
--   <a>$sel:canarySettings:Stage'</a>, <a>stage_canarySettings</a> -
--   Settings for the canary deployment in this stage.
--   
--   <a>$sel:cacheClusterEnabled:Stage'</a>,
--   <a>stage_cacheClusterEnabled</a> - Specifies whether a cache cluster
--   is enabled for the stage.
--   
--   <a>$sel:stageName:Stage'</a>, <a>stage_stageName</a> - The name of the
--   stage is the first path segment in the Uniform Resource Identifier
--   (URI) of a call to API Gateway. Stage names can only contain
--   alphanumeric characters, hyphens, and underscores. Maximum length is
--   128 characters.
--   
--   <a>$sel:description:Stage'</a>, <a>stage_description</a> - The stage's
--   description.
--   
--   <a>$sel:tags:Stage'</a>, <a>stage_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newStage :: Stage

-- | Request a new export of a RestApi for a particular Stage.
--   
--   <i>See:</i> <a>newGetExport</a> smart constructor.
data GetExport
GetExport' :: Maybe (HashMap Text Text) -> Maybe Text -> Text -> Text -> Text -> GetExport

-- | Create a value of <a>GetExport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:GetExport'</a>, <a>getExport_parameters</a> - A
--   key-value map of query string parameters that specify properties of
--   the export, depending on the requested <tt>exportType</tt>. For
--   <tt>exportType</tt> <tt>oas30</tt> and <tt>swagger</tt>, any
--   combination of the following parameters are supported:
--   <tt>extensions='integrations'</tt> or <tt>extensions='apigateway'</tt>
--   will export the API with x-amazon-apigateway-integration extensions.
--   <tt>extensions='authorizers'</tt> will export the API with
--   x-amazon-apigateway-authorizer extensions. <tt>postman</tt> will
--   export the API with Postman extensions, allowing for import to the
--   Postman tool
--   
--   <a>$sel:accepts:GetExport'</a>, <a>getExport_accepts</a> - The
--   content-type of the export, for example <tt>application/json</tt>.
--   Currently <tt>application/json</tt> and <tt>application/yaml</tt> are
--   supported for <tt>exportType</tt> of<tt>oas30</tt> and
--   <tt>swagger</tt>. This should be specified in the <tt>Accept</tt>
--   header for direct API requests.
--   
--   <a>$sel:restApiId:GetExport'</a>, <a>getExport_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:GetExport'</a>, <a>getExport_stageName</a> -
--   [Required] The name of the Stage that will be exported.
--   
--   <a>$sel:exportType:GetExport'</a>, <a>getExport_exportType</a> -
--   [Required] The type of export. Acceptable values are 'oas30' for
--   OpenAPI 3.0.x and 'swagger' for Swagger/OpenAPI 2.0.
newGetExport :: Text -> Text -> Text -> GetExport

-- | The binary blob response to GetExport, which contains the generated
--   SDK.
--   
--   <i>See:</i> <a>newGetExportResponse</a> smart constructor.
data GetExportResponse
GetExportResponse' :: Maybe ByteString -> Maybe Text -> Maybe Text -> Int -> GetExportResponse

-- | Create a value of <a>GetExportResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:body:GetExportResponse'</a>, <a>getExportResponse_body</a> -
--   The binary blob response to GetExport, which contains the export.
--   
--   <a>$sel:contentDisposition:GetExportResponse'</a>,
--   <a>getExportResponse_contentDisposition</a> - The content-disposition
--   header value in the HTTP response.
--   
--   <a>$sel:contentType:GetExportResponse'</a>,
--   <a>getExportResponse_contentType</a> - The content-type header value
--   in the HTTP response. This will correspond to a valid 'accept' type in
--   the request.
--   
--   <a>$sel:httpStatus:GetExportResponse'</a>,
--   <a>getExportResponse_httpStatus</a> - The response's http status code.
newGetExportResponse :: Int -> GetExportResponse

-- | Request a new generated client SDK for a RestApi and Stage.
--   
--   <i>See:</i> <a>newGetSdk</a> smart constructor.
data GetSdk
GetSdk' :: Maybe (HashMap Text Text) -> Text -> Text -> Text -> GetSdk

-- | Create a value of <a>GetSdk</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:GetSdk'</a>, <a>getSdk_parameters</a> - A
--   string-to-string key-value map of query parameters
--   <tt>sdkType</tt>-dependent properties of the SDK. For <tt>sdkType</tt>
--   of <tt>objectivec</tt> or <tt>swift</tt>, a parameter named
--   <tt>classPrefix</tt> is required. For <tt>sdkType</tt> of
--   <tt>android</tt>, parameters named <tt>groupId</tt>,
--   <tt>artifactId</tt>, <tt>artifactVersion</tt>, and
--   <tt>invokerPackage</tt> are required. For <tt>sdkType</tt> of
--   <tt>java</tt>, parameters named <tt>serviceName</tt> and
--   <tt>javaPackageName</tt> are required.
--   
--   <a>$sel:restApiId:GetSdk'</a>, <a>getSdk_restApiId</a> - [Required]
--   The string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:GetSdk'</a>, <a>getSdk_stageName</a> - [Required]
--   The name of the Stage that the SDK will use.
--   
--   <a>$sel:sdkType:GetSdk'</a>, <a>getSdk_sdkType</a> - [Required] The
--   language for the generated SDK. Currently <tt>java</tt>,
--   <tt>javascript</tt>, <tt>android</tt>, <tt>objectivec</tt> (for iOS),
--   <tt>swift</tt> (for iOS), and <tt>ruby</tt> are supported.
newGetSdk :: Text -> Text -> Text -> GetSdk

-- | The binary blob response to GetSdk, which contains the generated SDK.
--   
--   <i>See:</i> <a>newGetSdkResponse</a> smart constructor.
data GetSdkResponse
GetSdkResponse' :: Maybe ByteString -> Maybe Text -> Maybe Text -> Int -> GetSdkResponse

-- | Create a value of <a>GetSdkResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:body:GetSdkResponse'</a>, <a>getSdkResponse_body</a> - The
--   binary blob response to GetSdk, which contains the generated SDK.
--   
--   <a>$sel:contentDisposition:GetSdkResponse'</a>,
--   <a>getSdkResponse_contentDisposition</a> - The content-disposition
--   header value in the HTTP response.
--   
--   <a>$sel:contentType:GetSdkResponse'</a>,
--   <a>getSdkResponse_contentType</a> - The content-type header value in
--   the HTTP response.
--   
--   <a>$sel:httpStatus:GetSdkResponse'</a>,
--   <a>getSdkResponse_httpStatus</a> - The response's http status code.
newGetSdkResponse :: Int -> GetSdkResponse

-- | A request to get information about the current ApiKeys resource.
--   
--   <i>See:</i> <a>newGetApiKeys</a> smart constructor.
data GetApiKeys
GetApiKeys' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> GetApiKeys

-- | Create a value of <a>GetApiKeys</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeValues:GetApiKeys'</a>, <a>getApiKeys_includeValues</a>
--   - A boolean flag to specify whether (<tt>true</tt>) or not
--   (<tt>false</tt>) the result contains key values.
--   
--   <a>$sel:customerId:GetApiKeys'</a>, <a>getApiKeys_customerId</a> - The
--   identifier of a customer in AWS Marketplace or an external system,
--   such as a developer portal.
--   
--   <a>$sel:nameQuery:GetApiKeys'</a>, <a>getApiKeys_nameQuery</a> - The
--   name of queried API keys.
--   
--   <a>$sel:limit:GetApiKeys'</a>, <a>getApiKeys_limit</a> - The maximum
--   number of returned results per page. The default value is 25 and the
--   maximum value is 500.
--   
--   <a>$sel:position:GetApiKeys'</a>, <a>getApiKeys_position</a> - The
--   current pagination position in the paged result set.
newGetApiKeys :: GetApiKeys

-- | Represents a collection of API keys as represented by an ApiKeys
--   resource.
--   
--   <a>Use API Keys</a>
--   
--   <i>See:</i> <a>newGetApiKeysResponse</a> smart constructor.
data GetApiKeysResponse
GetApiKeysResponse' :: Maybe [ApiKey] -> Maybe [Text] -> Maybe Text -> Int -> GetApiKeysResponse

-- | Create a value of <a>GetApiKeysResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetApiKeysResponse'</a>, <a>getApiKeysResponse_items</a>
--   - The current page of elements from this collection.
--   
--   <a>$sel:warnings:GetApiKeysResponse'</a>,
--   <a>getApiKeysResponse_warnings</a> - A list of warning messages logged
--   during the import of API keys when the <tt>failOnWarnings</tt> option
--   is set to true.
--   
--   <a>$sel:position:GetApiKeys'</a>, <a>getApiKeysResponse_position</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:GetApiKeysResponse'</a>,
--   <a>getApiKeysResponse_httpStatus</a> - The response's http status
--   code.
newGetApiKeysResponse :: Int -> GetApiKeysResponse

-- | A request to delete the BasePathMapping resource.
--   
--   <i>See:</i> <a>newDeleteBasePathMapping</a> smart constructor.
data DeleteBasePathMapping
DeleteBasePathMapping' :: Text -> Text -> DeleteBasePathMapping

-- | Create a value of <a>DeleteBasePathMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:DeleteBasePathMapping'</a>,
--   <a>deleteBasePathMapping_domainName</a> - [Required] The domain name
--   of the BasePathMapping resource to delete.
--   
--   <a>$sel:basePath:DeleteBasePathMapping'</a>,
--   <a>deleteBasePathMapping_basePath</a> - [Required] The base path name
--   of the BasePathMapping resource to delete.
--   
--   To specify an empty base path, set this parameter to
--   <tt>'(none)'</tt>.
newDeleteBasePathMapping :: Text -> Text -> DeleteBasePathMapping

-- | <i>See:</i> <a>newDeleteBasePathMappingResponse</a> smart constructor.
data DeleteBasePathMappingResponse
DeleteBasePathMappingResponse' :: DeleteBasePathMappingResponse

-- | Create a value of <a>DeleteBasePathMappingResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteBasePathMappingResponse :: DeleteBasePathMappingResponse

-- | A request to change information about the BasePathMapping resource.
--   
--   <i>See:</i> <a>newUpdateBasePathMapping</a> smart constructor.
data UpdateBasePathMapping
UpdateBasePathMapping' :: Maybe [PatchOperation] -> Text -> Text -> UpdateBasePathMapping

-- | Create a value of <a>UpdateBasePathMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateBasePathMapping'</a>,
--   <a>updateBasePathMapping_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:domainName:UpdateBasePathMapping'</a>,
--   <a>updateBasePathMapping_domainName</a> - [Required] The domain name
--   of the BasePathMapping resource to change.
--   
--   <a>$sel:basePath:UpdateBasePathMapping'</a>,
--   <a>updateBasePathMapping_basePath</a> - [Required] The base path of
--   the BasePathMapping resource to change.
--   
--   To specify an empty base path, set this parameter to
--   <tt>'(none)'</tt>.
newUpdateBasePathMapping :: Text -> Text -> UpdateBasePathMapping

-- | Represents the base path that callers of the API must provide as part
--   of the URL after the domain name.
--   
--   A custom domain name plus a <tt>BasePathMapping</tt> specification
--   identifies a deployed RestApi in a given stage of the owner Account.
--   
--   <a>Use Custom Domain Names</a>
--   
--   <i>See:</i> <a>newBasePathMapping</a> smart constructor.
data BasePathMapping
BasePathMapping' :: Maybe Text -> Maybe Text -> Maybe Text -> BasePathMapping

-- | Create a value of <a>BasePathMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:BasePathMapping'</a>, <a>basePathMapping_stage</a> - The
--   name of the associated stage.
--   
--   <a>$sel:basePath:BasePathMapping'</a>, <a>basePathMapping_basePath</a>
--   - The base path name that callers of the API must provide as part of
--   the URL after the domain name.
--   
--   <a>$sel:restApiId:BasePathMapping'</a>,
--   <a>basePathMapping_restApiId</a> - The string identifier of the
--   associated RestApi.
newBasePathMapping :: BasePathMapping

-- | A request to delete the ClientCertificate resource.
--   
--   <i>See:</i> <a>newDeleteClientCertificate</a> smart constructor.
data DeleteClientCertificate
DeleteClientCertificate' :: Text -> DeleteClientCertificate

-- | Create a value of <a>DeleteClientCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientCertificateId:DeleteClientCertificate'</a>,
--   <a>deleteClientCertificate_clientCertificateId</a> - [Required] The
--   identifier of the ClientCertificate resource to be deleted.
newDeleteClientCertificate :: Text -> DeleteClientCertificate

-- | <i>See:</i> <a>newDeleteClientCertificateResponse</a> smart
--   constructor.
data DeleteClientCertificateResponse
DeleteClientCertificateResponse' :: DeleteClientCertificateResponse

-- | Create a value of <a>DeleteClientCertificateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteClientCertificateResponse :: DeleteClientCertificateResponse

-- | A request to change information about an ClientCertificate resource.
--   
--   <i>See:</i> <a>newUpdateClientCertificate</a> smart constructor.
data UpdateClientCertificate
UpdateClientCertificate' :: Maybe [PatchOperation] -> Text -> UpdateClientCertificate

-- | Create a value of <a>UpdateClientCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateClientCertificate'</a>,
--   <a>updateClientCertificate_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:clientCertificateId:UpdateClientCertificate'</a>,
--   <a>updateClientCertificate_clientCertificateId</a> - [Required] The
--   identifier of the ClientCertificate resource to be updated.
newUpdateClientCertificate :: Text -> UpdateClientCertificate

-- | Represents a client certificate used to configure client-side SSL
--   authentication while sending requests to the integration endpoint.
--   
--   Client certificates are used to authenticate an API by the backend
--   server. To authenticate an API client (or user), use IAM roles and
--   policies, a custom Authorizer or an Amazon Cognito user pool.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newClientCertificate</a> smart constructor.
data ClientCertificate
ClientCertificate' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ClientCertificate

-- | Create a value of <a>ClientCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pemEncodedCertificate:ClientCertificate'</a>,
--   <a>clientCertificate_pemEncodedCertificate</a> - The PEM-encoded
--   public key of the client certificate, which can be used to configure
--   certificate authentication in the integration endpoint .
--   
--   <a>$sel:clientCertificateId:ClientCertificate'</a>,
--   <a>clientCertificate_clientCertificateId</a> - The identifier of the
--   client certificate.
--   
--   <a>$sel:createdDate:ClientCertificate'</a>,
--   <a>clientCertificate_createdDate</a> - The timestamp when the client
--   certificate was created.
--   
--   <a>$sel:expirationDate:ClientCertificate'</a>,
--   <a>clientCertificate_expirationDate</a> - The timestamp when the
--   client certificate will expire.
--   
--   <a>$sel:description:ClientCertificate'</a>,
--   <a>clientCertificate_description</a> - The description of the client
--   certificate.
--   
--   <a>$sel:tags:ClientCertificate'</a>, <a>clientCertificate_tags</a> -
--   The collection of tags. Each tag element is associated with a given
--   resource.
newClientCertificate :: ClientCertificate

-- | Gets a GatewayResponse of a specified response type on the given
--   RestApi.
--   
--   <i>See:</i> <a>newGetGatewayResponse</a> smart constructor.
data GetGatewayResponse
GetGatewayResponse' :: Text -> GatewayResponseType -> GetGatewayResponse

-- | Create a value of <a>GetGatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetGatewayResponse'</a>,
--   <a>getGatewayResponse_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:responseType:GetGatewayResponse'</a>,
--   <a>getGatewayResponse_responseType</a> - [Required]
--   
--   The response type of the associated GatewayResponse.
newGetGatewayResponse :: Text -> GatewayResponseType -> GetGatewayResponse

-- | A gateway response of a given response type and status code, with
--   optional response parameters and mapping templates.
--   
--   For more information about valid gateway response types, see
--   <a>Gateway Response Types Supported by API Gateway</a>
--   
--   <h4>Example: Get a Gateway Response of a given response type</h4>
--   
--   <h5>Request</h5>
--   
--   This example shows how to get a gateway response of the
--   <tt>MISSING_AUTHENTICATION_TOKEN</tt> type.
--   
--   <pre>
--   GET /restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T202516Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=1b52460e3159c1a26cff29093855d50ea141c1c5b937528fecaf60f51129697a Cache-Control: no-cache Postman-Token: 3b2a1ce9-c848-2e26-2e2f-9c2caefbed45
--   </pre>
--   
--   The response type is specified as a URL path.
--   
--   <h5>Response</h5>
--   
--   The successful operation returns the <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:delete": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": false, "responseParameters": { "gatewayresponse.header.x-request-path": "method.request.path.petId", "gatewayresponse.header.Access-Control-Allow-Origin": "'a.b.c'", "gatewayresponse.header.x-request-query": "method.request.querystring.q", "gatewayresponse.header.x-request-header": "method.request.header.Accept" }, "responseTemplates": { "application/json": "{\n \"message\": $context.error.messageString,\n \"type\": \"$context.error.responseType\",\n \"stage\": \"$context.stage\",\n \"resourcePath\": \"$context.resourcePath\",\n \"stageVariables.a\": \"$stageVariables.a\",\n \"statusCode\": \"'404'\"\n}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "404" }
--   </pre>
--   
--   <a>Customize Gateway Responses</a>
--   
--   <i>See:</i> <a>newGatewayResponse</a> smart constructor.
data GatewayResponse
GatewayResponse' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe GatewayResponseType -> Maybe Text -> Maybe (HashMap Text Text) -> GatewayResponse

-- | Create a value of <a>GatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultResponse:GatewayResponse'</a>,
--   <a>gatewayResponse_defaultResponse</a> - A Boolean flag to indicate
--   whether this GatewayResponse is the default gateway response
--   (<tt>true</tt>) or not (<tt>false</tt>). A default gateway response is
--   one generated by API Gateway without any customization by an API
--   developer.
--   
--   <a>$sel:responseTemplates:GatewayResponse'</a>,
--   <a>gatewayResponse_responseTemplates</a> - Response templates of the
--   GatewayResponse as a string-to-string map of key-value pairs.
--   
--   <a>$sel:responseType:GatewayResponse'</a>,
--   <a>gatewayResponse_responseType</a> - The response type of the
--   associated GatewayResponse.
--   
--   <a>$sel:statusCode:GatewayResponse'</a>,
--   <a>gatewayResponse_statusCode</a> - The HTTP status code for this
--   GatewayResponse.
--   
--   <a>$sel:responseParameters:GatewayResponse'</a>,
--   <a>gatewayResponse_responseParameters</a> - Response parameters
--   (paths, query strings and headers) of the GatewayResponse as a
--   string-to-string map of key-value pairs.
newGatewayResponse :: GatewayResponse

-- | The POST request to create a usage plan key for adding an existing API
--   key to a usage plan.
--   
--   <i>See:</i> <a>newCreateUsagePlanKey</a> smart constructor.
data CreateUsagePlanKey
CreateUsagePlanKey' :: Text -> Text -> Text -> CreateUsagePlanKey

-- | Create a value of <a>CreateUsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:CreateUsagePlanKey'</a>,
--   <a>createUsagePlanKey_usagePlanId</a> - [Required] The Id of the
--   UsagePlan resource representing the usage plan containing the
--   to-be-created UsagePlanKey resource representing a plan customer.
--   
--   <a>$sel:keyId:CreateUsagePlanKey'</a>, <a>createUsagePlanKey_keyId</a>
--   - [Required] The identifier of a UsagePlanKey resource for a plan
--   customer.
--   
--   <a>$sel:keyType:CreateUsagePlanKey'</a>,
--   <a>createUsagePlanKey_keyType</a> - [Required] The type of a
--   UsagePlanKey resource for a plan customer.
newCreateUsagePlanKey :: Text -> Text -> Text -> CreateUsagePlanKey

-- | Represents a usage plan key to identify a plan customer.
--   
--   To associate an API stage with a selected API key in a usage plan, you
--   must create a UsagePlanKey resource to represent the selected ApiKey.
--   
--   "
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlanKey</a> smart constructor.
data UsagePlanKey
UsagePlanKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UsagePlanKey

-- | Create a value of <a>UsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:UsagePlanKey'</a>, <a>usagePlanKey_value</a> - The value
--   of a usage plan key.
--   
--   <a>$sel:name:UsagePlanKey'</a>, <a>usagePlanKey_name</a> - The name of
--   a usage plan key.
--   
--   <a>$sel:id:UsagePlanKey'</a>, <a>usagePlanKey_id</a> - The Id of a
--   usage plan key.
--   
--   <a>$sel:type':UsagePlanKey'</a>, <a>usagePlanKey_type</a> - The type
--   of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
newUsagePlanKey :: UsagePlanKey

-- | Request to add a new Authorizer to an existing RestApi resource.
--   
--   <i>See:</i> <a>newCreateAuthorizer</a> smart constructor.
data CreateAuthorizer
CreateAuthorizer' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> AuthorizerType -> CreateAuthorizer

-- | Create a value of <a>CreateAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerUri:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerUri</a> - Specifies the authorizer's
--   Uniform Resource Identifier (URI). For <tt>TOKEN</tt> or
--   <tt>REQUEST</tt> authorizers, this must be a well-formed Lambda
--   function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
--   
--   <a>$sel:identityValidationExpression:CreateAuthorizer'</a>,
--   <a>createAuthorizer_identityValidationExpression</a> - A validation
--   expression for the incoming identity token. For <tt>TOKEN</tt>
--   authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
--   
--   <a>$sel:providerARNs:CreateAuthorizer'</a>,
--   <a>createAuthorizer_providerARNs</a> - A list of the Amazon Cognito
--   user pool ARNs for the <tt>COGNITO_USER_POOLS</tt> authorizer. Each
--   element is of this format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
--   
--   <a>$sel:authorizerResultTtlInSeconds:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerResultTtlInSeconds</a> - The TTL in
--   seconds of cached authorizer results. If it equals 0, authorization
--   caching is disabled. If it is greater than 0, API Gateway will cache
--   authorizer responses. If this field is not set, the default value is
--   300. The maximum value is 3600, or 1 hour.
--   
--   <a>$sel:authType:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authType</a> - Optional customer-defined field,
--   used in OpenAPI imports and exports without functional impact.
--   
--   <a>$sel:identitySource:CreateAuthorizer'</a>,
--   <a>createAuthorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
--   
--   <a>$sel:authorizerCredentials:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerCredentials</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, specify null.
--   
--   <a>$sel:restApiId:CreateAuthorizer'</a>,
--   <a>createAuthorizer_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:name:CreateAuthorizer'</a>, <a>createAuthorizer_name</a> -
--   [Required] The name of the authorizer.
--   
--   <a>$sel:type':CreateAuthorizer'</a>, <a>createAuthorizer_type</a> -
--   [Required] The authorizer type. Valid values are <tt>TOKEN</tt> for a
--   Lambda function using a single authorization token submitted in a
--   custom header, <tt>REQUEST</tt> for a Lambda function using incoming
--   request parameters, and <tt>COGNITO_USER_POOLS</tt> for using an
--   Amazon Cognito user pool.
newCreateAuthorizer :: Text -> Text -> AuthorizerType -> CreateAuthorizer

-- | Represents an authorization layer for methods. If enabled on a method,
--   API Gateway will activate the authorizer when a client calls the
--   method.
--   
--   <a>Use Lambda Function as Authorizer</a> <a>Use Cognito User Pool as
--   Authorizer</a>
--   
--   <i>See:</i> <a>newAuthorizer</a> smart constructor.
data Authorizer
Authorizer' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe AuthorizerType -> Maybe Text -> Maybe Text -> Authorizer

-- | Create a value of <a>Authorizer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerUri:Authorizer'</a>, <a>authorizer_authorizerUri</a>
--   - Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
--   
--   <a>$sel:identityValidationExpression:Authorizer'</a>,
--   <a>authorizer_identityValidationExpression</a> - A validation
--   expression for the incoming identity token. For <tt>TOKEN</tt>
--   authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
--   
--   <a>$sel:providerARNs:Authorizer'</a>, <a>authorizer_providerARNs</a> -
--   A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
--   
--   <a>$sel:name:Authorizer'</a>, <a>authorizer_name</a> - [Required] The
--   name of the authorizer.
--   
--   <a>$sel:id:Authorizer'</a>, <a>authorizer_id</a> - The identifier for
--   the authorizer resource.
--   
--   <a>$sel:authorizerResultTtlInSeconds:Authorizer'</a>,
--   <a>authorizer_authorizerResultTtlInSeconds</a> - The TTL in seconds of
--   cached authorizer results. If it equals 0, authorization caching is
--   disabled. If it is greater than 0, API Gateway will cache authorizer
--   responses. If this field is not set, the default value is 300. The
--   maximum value is 3600, or 1 hour.
--   
--   <a>$sel:authType:Authorizer'</a>, <a>authorizer_authType</a> -
--   Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
--   
--   <a>$sel:type':Authorizer'</a>, <a>authorizer_type</a> - The authorizer
--   type. Valid values are <tt>TOKEN</tt> for a Lambda function using a
--   single authorization token submitted in a custom header,
--   <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
--   
--   <a>$sel:identitySource:Authorizer'</a>,
--   <a>authorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
--   
--   <a>$sel:authorizerCredentials:Authorizer'</a>,
--   <a>authorizer_authorizerCredentials</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, specify null.
newAuthorizer :: Authorizer

-- | Request to update an existing Authorizer resource.
--   
--   <i>See:</i> <a>newUpdateAuthorizer</a> smart constructor.
data UpdateAuthorizer
UpdateAuthorizer' :: Maybe [PatchOperation] -> Text -> Text -> UpdateAuthorizer

-- | Create a value of <a>UpdateAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_patchOperations</a> - A list of update operations
--   to be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:restApiId:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:authorizerId:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerId</a> - [Required] The identifier of
--   the Authorizer resource.
newUpdateAuthorizer :: Text -> Text -> UpdateAuthorizer

-- | Represents an authorization layer for methods. If enabled on a method,
--   API Gateway will activate the authorizer when a client calls the
--   method.
--   
--   <a>Use Lambda Function as Authorizer</a> <a>Use Cognito User Pool as
--   Authorizer</a>
--   
--   <i>See:</i> <a>newAuthorizer</a> smart constructor.
data Authorizer
Authorizer' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe AuthorizerType -> Maybe Text -> Maybe Text -> Authorizer

-- | Create a value of <a>Authorizer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerUri:Authorizer'</a>, <a>authorizer_authorizerUri</a>
--   - Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
--   
--   <a>$sel:identityValidationExpression:Authorizer'</a>,
--   <a>authorizer_identityValidationExpression</a> - A validation
--   expression for the incoming identity token. For <tt>TOKEN</tt>
--   authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
--   
--   <a>$sel:providerARNs:Authorizer'</a>, <a>authorizer_providerARNs</a> -
--   A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
--   
--   <a>$sel:name:Authorizer'</a>, <a>authorizer_name</a> - [Required] The
--   name of the authorizer.
--   
--   <a>$sel:id:Authorizer'</a>, <a>authorizer_id</a> - The identifier for
--   the authorizer resource.
--   
--   <a>$sel:authorizerResultTtlInSeconds:Authorizer'</a>,
--   <a>authorizer_authorizerResultTtlInSeconds</a> - The TTL in seconds of
--   cached authorizer results. If it equals 0, authorization caching is
--   disabled. If it is greater than 0, API Gateway will cache authorizer
--   responses. If this field is not set, the default value is 300. The
--   maximum value is 3600, or 1 hour.
--   
--   <a>$sel:authType:Authorizer'</a>, <a>authorizer_authType</a> -
--   Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
--   
--   <a>$sel:type':Authorizer'</a>, <a>authorizer_type</a> - The authorizer
--   type. Valid values are <tt>TOKEN</tt> for a Lambda function using a
--   single authorization token submitted in a custom header,
--   <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
--   
--   <a>$sel:identitySource:Authorizer'</a>,
--   <a>authorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
--   
--   <a>$sel:authorizerCredentials:Authorizer'</a>,
--   <a>authorizer_authorizerCredentials</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, specify null.
newAuthorizer :: Authorizer

-- | Request to delete an existing Authorizer resource.
--   
--   <i>See:</i> <a>newDeleteAuthorizer</a> smart constructor.
data DeleteAuthorizer
DeleteAuthorizer' :: Text -> Text -> DeleteAuthorizer

-- | Create a value of <a>DeleteAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteAuthorizer'</a>,
--   <a>deleteAuthorizer_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:authorizerId:DeleteAuthorizer'</a>,
--   <a>deleteAuthorizer_authorizerId</a> - [Required] The identifier of
--   the Authorizer resource.
newDeleteAuthorizer :: Text -> Text -> DeleteAuthorizer

-- | <i>See:</i> <a>newDeleteAuthorizerResponse</a> smart constructor.
data DeleteAuthorizerResponse
DeleteAuthorizerResponse' :: DeleteAuthorizerResponse

-- | Create a value of <a>DeleteAuthorizerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAuthorizerResponse :: DeleteAuthorizerResponse

-- | Adds or updates a tag on a given resource.
--   
--   <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   [Required] The ARN of a resource that can be tagged.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - [Required]
--   The key-value map of strings. The valid character set is
--   [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not
--   start with <tt>aws:</tt>. The tag value can be up to 256 characters.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | Requests API Gateway to create a Stage resource.
--   
--   <i>See:</i> <a>newCreateStage</a> smart constructor.
data CreateStage
CreateStage' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Bool -> Maybe CacheClusterSize -> Maybe CanarySettings -> Maybe Bool -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> CreateStage

-- | Create a value of <a>CreateStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:CreateStage'</a>, <a>createStage_variables</a> - A
--   map that defines the stage variables for the new Stage resource.
--   Variable names can have alphanumeric and underscore characters, and
--   the values must match <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:documentationVersion:CreateStage'</a>,
--   <a>createStage_documentationVersion</a> - The version of the
--   associated API documentation.
--   
--   <a>$sel:tracingEnabled:CreateStage'</a>,
--   <a>createStage_tracingEnabled</a> - Specifies whether active tracing
--   with X-ray is enabled for the Stage.
--   
--   <a>$sel:cacheClusterSize:CreateStage'</a>,
--   <a>createStage_cacheClusterSize</a> - The stage's cache cluster size.
--   
--   <a>$sel:canarySettings:CreateStage'</a>,
--   <a>createStage_canarySettings</a> - The canary deployment settings of
--   this stage.
--   
--   <a>$sel:cacheClusterEnabled:CreateStage'</a>,
--   <a>createStage_cacheClusterEnabled</a> - Whether cache clustering is
--   enabled for the stage.
--   
--   <a>$sel:description:CreateStage'</a>, <a>createStage_description</a> -
--   The description of the Stage resource.
--   
--   <a>$sel:tags:CreateStage'</a>, <a>createStage_tags</a> - The key-value
--   map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag
--   key can be up to 128 characters and must not start with <tt>aws:</tt>.
--   The tag value can be up to 256 characters.
--   
--   <a>$sel:restApiId:CreateStage'</a>, <a>createStage_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:CreateStage'</a>, <a>createStage_stageName</a> -
--   [Required] The name for the Stage resource. Stage names can only
--   contain alphanumeric characters, hyphens, and underscores. Maximum
--   length is 128 characters.
--   
--   <a>$sel:deploymentId:CreateStage'</a>, <a>createStage_deploymentId</a>
--   - [Required] The identifier of the Deployment resource for the Stage
--   resource.
newCreateStage :: Text -> Text -> Text -> CreateStage

-- | Represents a unique identifier for a version of a deployed RestApi
--   that is callable by users.
--   
--   <a>Deploy an API</a>
--   
--   <i>See:</i> <a>newStage</a> smart constructor.
data Stage
Stage' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe AccessLogSettings -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe CacheClusterStatus -> Maybe (HashMap Text MethodSetting) -> Maybe POSIX -> Maybe CacheClusterSize -> Maybe Text -> Maybe CanarySettings -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Stage

-- | Create a value of <a>Stage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Stage'</a>, <a>stage_deploymentId</a> - The
--   identifier of the Deployment that the stage points to.
--   
--   <a>$sel:variables:Stage'</a>, <a>stage_variables</a> - A map that
--   defines the stage variables for a Stage resource. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:accessLogSettings:Stage'</a>, <a>stage_accessLogSettings</a> -
--   Settings for logging access in this stage.
--   
--   <a>$sel:documentationVersion:Stage'</a>,
--   <a>stage_documentationVersion</a> - The version of the associated API
--   documentation.
--   
--   <a>$sel:clientCertificateId:Stage'</a>,
--   <a>stage_clientCertificateId</a> - The identifier of a client
--   certificate for an API stage.
--   
--   <a>$sel:tracingEnabled:Stage'</a>, <a>stage_tracingEnabled</a> -
--   Specifies whether active tracing with X-ray is enabled for the Stage.
--   
--   <a>$sel:createdDate:Stage'</a>, <a>stage_createdDate</a> - The
--   timestamp when the stage was created.
--   
--   <a>$sel:cacheClusterStatus:Stage'</a>, <a>stage_cacheClusterStatus</a>
--   - The status of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:methodSettings:Stage'</a>, <a>stage_methodSettings</a> - A map
--   that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
--   
--   <a>$sel:lastUpdatedDate:Stage'</a>, <a>stage_lastUpdatedDate</a> - The
--   timestamp when the stage last updated.
--   
--   <a>$sel:cacheClusterSize:Stage'</a>, <a>stage_cacheClusterSize</a> -
--   The size of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:webAclArn:Stage'</a>, <a>stage_webAclArn</a> - The ARN of the
--   WebAcl associated with the Stage.
--   
--   <a>$sel:canarySettings:Stage'</a>, <a>stage_canarySettings</a> -
--   Settings for the canary deployment in this stage.
--   
--   <a>$sel:cacheClusterEnabled:Stage'</a>,
--   <a>stage_cacheClusterEnabled</a> - Specifies whether a cache cluster
--   is enabled for the stage.
--   
--   <a>$sel:stageName:Stage'</a>, <a>stage_stageName</a> - The name of the
--   stage is the first path segment in the Uniform Resource Identifier
--   (URI) of a call to API Gateway. Stage names can only contain
--   alphanumeric characters, hyphens, and underscores. Maximum length is
--   128 characters.
--   
--   <a>$sel:description:Stage'</a>, <a>stage_description</a> - The stage's
--   description.
--   
--   <a>$sel:tags:Stage'</a>, <a>stage_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newStage :: Stage

-- | The DELETE request to delete a usage plan key and remove the
--   underlying API key from the associated usage plan.
--   
--   <i>See:</i> <a>newDeleteUsagePlanKey</a> smart constructor.
data DeleteUsagePlanKey
DeleteUsagePlanKey' :: Text -> Text -> DeleteUsagePlanKey

-- | Create a value of <a>DeleteUsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:DeleteUsagePlanKey'</a>,
--   <a>deleteUsagePlanKey_usagePlanId</a> - [Required] The Id of the
--   UsagePlan resource representing the usage plan containing the
--   to-be-deleted UsagePlanKey resource representing a plan customer.
--   
--   <a>$sel:keyId:DeleteUsagePlanKey'</a>, <a>deleteUsagePlanKey_keyId</a>
--   - [Required] The Id of the UsagePlanKey resource to be deleted.
newDeleteUsagePlanKey :: Text -> Text -> DeleteUsagePlanKey

-- | <i>See:</i> <a>newDeleteUsagePlanKeyResponse</a> smart constructor.
data DeleteUsagePlanKeyResponse
DeleteUsagePlanKeyResponse' :: DeleteUsagePlanKeyResponse

-- | Create a value of <a>DeleteUsagePlanKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUsagePlanKeyResponse :: DeleteUsagePlanKeyResponse

-- | Removes a tag from a given resource.
--   
--   <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - [Required] The ARN of a resource
--   that can be tagged.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   [Required] The Tag keys to delete.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | Request to create an ApiKey resource.
--   
--   <i>See:</i> <a>newCreateApiKey</a> smart constructor.
data CreateApiKey
CreateApiKey' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [StageKey] -> Maybe Text -> Maybe (HashMap Text Text) -> CreateApiKey

-- | Create a value of <a>CreateApiKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:CreateApiKey'</a>, <a>createApiKey_enabled</a> -
--   Specifies whether the ApiKey can be used by callers.
--   
--   <a>$sel:value:CreateApiKey'</a>, <a>createApiKey_value</a> - Specifies
--   a value of the API key.
--   
--   <a>$sel:customerId:CreateApiKey'</a>, <a>createApiKey_customerId</a> -
--   An AWS Marketplace customer identifier , when integrating with the AWS
--   SaaS Marketplace.
--   
--   <a>$sel:generateDistinctId:CreateApiKey'</a>,
--   <a>createApiKey_generateDistinctId</a> - Specifies whether
--   (<tt>true</tt>) or not (<tt>false</tt>) the key identifier is distinct
--   from the created API key value. This parameter is deprecated and
--   should not be used.
--   
--   <a>$sel:name:CreateApiKey'</a>, <a>createApiKey_name</a> - The name of
--   the ApiKey.
--   
--   <a>$sel:stageKeys:CreateApiKey'</a>, <a>createApiKey_stageKeys</a> -
--   DEPRECATED FOR USAGE PLANS - Specifies stages associated with the API
--   key.
--   
--   <a>$sel:description:CreateApiKey'</a>, <a>createApiKey_description</a>
--   - The description of the ApiKey.
--   
--   <a>$sel:tags:CreateApiKey'</a>, <a>createApiKey_tags</a> - The
--   key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
--   The tag key can be up to 128 characters and must not start with
--   <tt>aws:</tt>. The tag value can be up to 256 characters.
newCreateApiKey :: CreateApiKey

-- | A resource that can be distributed to callers for executing Method
--   resources that require an API key. API keys can be mapped to any Stage
--   on any RestApi, which indicates that the callers with the API key can
--   make requests to that stage.
--   
--   <a>Use API Keys</a>
--   
--   <i>See:</i> <a>newApiKey</a> smart constructor.
data ApiKey
ApiKey' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ApiKey

-- | Create a value of <a>ApiKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:ApiKey'</a>, <a>apiKey_enabled</a> - Specifies whether
--   the API Key can be used by callers.
--   
--   <a>$sel:value:ApiKey'</a>, <a>apiKey_value</a> - The value of the API
--   Key.
--   
--   <a>$sel:customerId:ApiKey'</a>, <a>apiKey_customerId</a> - An AWS
--   Marketplace customer identifier , when integrating with the AWS SaaS
--   Marketplace.
--   
--   <a>$sel:createdDate:ApiKey'</a>, <a>apiKey_createdDate</a> - The
--   timestamp when the API Key was created.
--   
--   <a>$sel:name:ApiKey'</a>, <a>apiKey_name</a> - The name of the API
--   Key.
--   
--   <a>$sel:id:ApiKey'</a>, <a>apiKey_id</a> - The identifier of the API
--   Key.
--   
--   <a>$sel:stageKeys:ApiKey'</a>, <a>apiKey_stageKeys</a> - A list of
--   Stage resources that are associated with the ApiKey resource.
--   
--   <a>$sel:lastUpdatedDate:ApiKey'</a>, <a>apiKey_lastUpdatedDate</a> -
--   The timestamp when the API Key was last updated.
--   
--   <a>$sel:description:ApiKey'</a>, <a>apiKey_description</a> - The
--   description of the API Key.
--   
--   <a>$sel:tags:ApiKey'</a>, <a>apiKey_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newApiKey :: ApiKey

-- | The GET request to get all the usage plans of the caller's account.
--   
--   <i>See:</i> <a>newGetUsagePlans</a> smart constructor.
data GetUsagePlans
GetUsagePlans' :: Maybe Text -> Maybe Int -> Maybe Text -> GetUsagePlans

-- | Create a value of <a>GetUsagePlans</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyId:GetUsagePlans'</a>, <a>getUsagePlans_keyId</a> - The
--   identifier of the API key associated with the usage plans.
--   
--   <a>$sel:limit:GetUsagePlans'</a>, <a>getUsagePlans_limit</a> - The
--   maximum number of returned results per page. The default value is 25
--   and the maximum value is 500.
--   
--   <a>$sel:position:GetUsagePlans'</a>, <a>getUsagePlans_position</a> -
--   The current pagination position in the paged result set.
newGetUsagePlans :: GetUsagePlans

-- | Represents a collection of usage plans for an AWS account.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newGetUsagePlansResponse</a> smart constructor.
data GetUsagePlansResponse
GetUsagePlansResponse' :: Maybe [UsagePlan] -> Maybe Text -> Int -> GetUsagePlansResponse

-- | Create a value of <a>GetUsagePlansResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetUsagePlansResponse'</a>,
--   <a>getUsagePlansResponse_items</a> - The current page of elements from
--   this collection.
--   
--   <a>$sel:position:GetUsagePlans'</a>,
--   <a>getUsagePlansResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetUsagePlansResponse'</a>,
--   <a>getUsagePlansResponse_httpStatus</a> - The response's http status
--   code.
newGetUsagePlansResponse :: Int -> GetUsagePlansResponse

-- | Request to add a method to an existing Resource resource.
--   
--   <i>See:</i> <a>newPutMethod</a> smart constructor.
data PutMethod
PutMethod' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Maybe Text -> Maybe Text -> Maybe Bool -> Text -> Text -> Text -> Text -> PutMethod

-- | Create a value of <a>PutMethod</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:PutMethod'</a>,
--   <a>putMethod_authorizationScopes</a> - A list of authorization scopes
--   configured on the method. The scopes are used with a
--   <tt>COGNITO_USER_POOLS</tt> authorizer to authorize the method
--   invocation. The authorization works by matching the method scopes
--   against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:requestValidatorId:PutMethod'</a>,
--   <a>putMethod_requestValidatorId</a> - The identifier of a
--   RequestValidator for validating the method request.
--   
--   <a>$sel:requestModels:PutMethod'</a>, <a>putMethod_requestModels</a> -
--   Specifies the Model resources used for the request's content type.
--   Request models are represented as a key/value map, with a content type
--   as the key and a Model name as the value.
--   
--   <a>$sel:requestParameters:PutMethod'</a>,
--   <a>putMethod_requestParameters</a> - A key-value map defining required
--   or optional method request parameters that can be accepted by API
--   Gateway. A key defines a method request parameter name matching the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> is a valid and unique parameter
--   name. The value associated with the key is a Boolean flag indicating
--   whether the parameter is required (<tt>true</tt>) or optional
--   (<tt>false</tt>). The method request parameter names defined here are
--   available in Integration to be mapped to integration request
--   parameters or body-mapping templates.
--   
--   <a>$sel:authorizerId:PutMethod'</a>, <a>putMethod_authorizerId</a> -
--   Specifies the identifier of an Authorizer to use on this Method, if
--   the type is CUSTOM or COGNITO_USER_POOLS. The authorizer identifier is
--   generated by API Gateway when you created the authorizer.
--   
--   <a>$sel:operationName:PutMethod'</a>, <a>putMethod_operationName</a> -
--   A human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
--   
--   <a>$sel:apiKeyRequired:PutMethod'</a>, <a>putMethod_apiKeyRequired</a>
--   - Specifies whether the method required a valid ApiKey.
--   
--   <a>$sel:restApiId:PutMethod'</a>, <a>putMethod_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:PutMethod'</a>, <a>putMethod_resourceId</a> -
--   [Required] The Resource identifier for the new Method resource.
--   
--   <a>$sel:httpMethod:PutMethod'</a>, <a>putMethod_httpMethod</a> -
--   [Required] Specifies the method request's HTTP method type.
--   
--   <a>$sel:authorizationType:PutMethod'</a>,
--   <a>putMethod_authorizationType</a> - [Required] The method's
--   authorization type. Valid values are <tt>NONE</tt> for open access,
--   <tt>AWS_IAM</tt> for using AWS IAM permissions, <tt>CUSTOM</tt> for
--   using a custom authorizer, or <tt>COGNITO_USER_POOLS</tt> for using a
--   Cognito user pool.
newPutMethod :: Text -> Text -> Text -> Text -> PutMethod

-- | Represents a client-facing interface by which the client calls the API
--   to access back-end resources. A <b>Method</b> resource is integrated
--   with an Integration resource. Both consist of a request and one or
--   more responses. The method request takes the client input that is
--   passed to the back end through the integration request. A method
--   response returns the output from the back end to the client through an
--   integration response. A method request is embodied in a <b>Method</b>
--   resource, whereas an integration request is embodied in an Integration
--   resource. On the other hand, a method response is represented by a
--   MethodResponse resource, whereas an integration response is
--   represented by an IntegrationResponse resource.
--   
--   <h4>Example: Retrive the GET method on a specified resource</h4>
--   
--   <h5>Request</h5>
--   
--   The following example request retrieves the information about the GET
--   method on an API resource (<tt>3kzxbg5sa2</tt>) of an API
--   (<tt>fugvjdxtri</tt>).
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T210259Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": true, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\")" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   In the example above, the response template for the <tt>200 OK</tt>
--   response maps the JSON output from the <tt>ListStreams</tt> action in
--   the back end to an XML output. The mapping template is URL-encoded as
--   <tt>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</tt>
--   and the output is decoded using the <a>$util.urlDecode()</a> helper
--   function.
--   
--   MethodResponse, Integration, IntegrationResponse, Resource, <a>Set up
--   an API's method</a>
--   
--   <i>See:</i> <a>newMethod</a> smart constructor.
data Method
Method' :: Maybe (HashMap Text MethodResponse) -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Integration -> Method

-- | Create a value of <a>Method</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodResponses:Method'</a>, <a>method_methodResponses</a> -
--   Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
--   
--   <a>$sel:httpMethod:Method'</a>, <a>method_httpMethod</a> - The
--   method's HTTP verb.
--   
--   <a>$sel:authorizationScopes:Method'</a>,
--   <a>method_authorizationScopes</a> - A list of authorization scopes
--   configured on the method. The scopes are used with a
--   <tt>COGNITO_USER_POOLS</tt> authorizer to authorize the method
--   invocation. The authorization works by matching the method scopes
--   against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:requestValidatorId:Method'</a>,
--   <a>method_requestValidatorId</a> - The identifier of a
--   RequestValidator for request validation.
--   
--   <a>$sel:requestModels:Method'</a>, <a>method_requestModels</a> - A
--   key-value map specifying data schemas, represented by Model resources,
--   (as the mapped value) of the request payloads of given content types
--   (as the mapping key).
--   
--   <a>$sel:requestParameters:Method'</a>, <a>method_requestParameters</a>
--   - A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
--   
--   <a>$sel:authorizerId:Method'</a>, <a>method_authorizerId</a> - The
--   identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
--   
--   <a>$sel:operationName:Method'</a>, <a>method_operationName</a> - A
--   human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
--   
--   <a>$sel:authorizationType:Method'</a>, <a>method_authorizationType</a>
--   - The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
--   
--   <a>$sel:apiKeyRequired:Method'</a>, <a>method_apiKeyRequired</a> - A
--   boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
--   
--   <a>$sel:methodIntegration:Method'</a>, <a>method_methodIntegration</a>
--   - Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
newMethod :: Method

-- | A request to change information about the DomainName resource.
--   
--   <i>See:</i> <a>newUpdateDomainName</a> smart constructor.
data UpdateDomainName
UpdateDomainName' :: Maybe [PatchOperation] -> Text -> UpdateDomainName

-- | Create a value of <a>UpdateDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateDomainName'</a>,
--   <a>updateDomainName_patchOperations</a> - A list of update operations
--   to be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:domainName:UpdateDomainName'</a>,
--   <a>updateDomainName_domainName</a> - [Required] The name of the
--   DomainName resource to be changed.
newUpdateDomainName :: Text -> UpdateDomainName

-- | Represents a custom domain name as a user-friendly host name of an API
--   (RestApi).
--   
--   When you deploy an API, API Gateway creates a default host name for
--   the API. This default API host name is of the
--   <tt>{restapi-id}.execute-api.{region}.amazonaws.com</tt> format. With
--   the default host name, you can access the API's root resource with the
--   URL of
--   <tt>https://{restapi-id}.execute-api.{region}.amazonaws.com/{stage}/</tt>.
--   When you set up a custom domain name of <tt>apis.example.com</tt> for
--   this API, you can then access the same resource using the URL of the
--   <tt>https://apis.examples.com/myApi</tt>, where <tt>myApi</tt> is the
--   base path mapping (BasePathMapping) of your API under the custom
--   domain name.
--   
--   <a>Set a Custom Host Name for an API</a>
--   
--   <i>See:</i> <a>newDomainName</a> smart constructor.
data DomainName
DomainName' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SecurityPolicy -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe DomainNameStatus -> Maybe (HashMap Text Text) -> DomainName

-- | Create a value of <a>DomainName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regionalHostedZoneId:DomainName'</a>,
--   <a>domainName_regionalHostedZoneId</a> - The region-specific Amazon
--   Route 53 Hosted Zone ID of the regional endpoint. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:certificateName:DomainName'</a>,
--   <a>domainName_certificateName</a> - The name of the certificate that
--   will be used by edge-optimized endpoint for this domain name.
--   
--   <a>$sel:ownershipVerificationCertificateArn:DomainName'</a>,
--   <a>domainName_ownershipVerificationCertificateArn</a> - The ARN of the
--   public certificate issued by ACM to validate ownership of your custom
--   domain. Only required when configuring mutual TLS and using an ACM
--   imported or private CA certificate ARN as the regionalCertificateArn.
--   
--   <a>$sel:regionalCertificateArn:DomainName'</a>,
--   <a>domainName_regionalCertificateArn</a> - The reference to an
--   AWS-managed certificate that will be used for validating the regional
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:certificateArn:DomainName'</a>,
--   <a>domainName_certificateArn</a> - The reference to an AWS-managed
--   certificate that will be used by edge-optimized endpoint for this
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:distributionHostedZoneId:DomainName'</a>,
--   <a>domainName_distributionHostedZoneId</a> - The region-agnostic
--   Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The
--   valid value is <tt>Z2FDTNDATAQYW2</tt> for all the regions. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:securityPolicy:DomainName'</a>,
--   <a>domainName_securityPolicy</a> - The Transport Layer Security (TLS)
--   version + cipher suite for this DomainName. The valid values are
--   <tt>TLS_1_0</tt> and <tt>TLS_1_2</tt>.
--   
--   <a>$sel:domainName:DomainName'</a>, <a>domainName_domainName</a> - The
--   custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
--   
--   <a>$sel:mutualTlsAuthentication:DomainName'</a>,
--   <a>domainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name. If specified,
--   API Gateway performs two-way authentication between the client and the
--   server. Clients must present a trusted certificate to access your API.
--   
--   <a>$sel:regionalCertificateName:DomainName'</a>,
--   <a>domainName_regionalCertificateName</a> - The name of the
--   certificate that will be used for validating the regional domain name.
--   
--   <a>$sel:regionalDomainName:DomainName'</a>,
--   <a>domainName_regionalDomainName</a> - The domain name associated with
--   the regional endpoint for this custom domain name. You set up this
--   association by adding a DNS record that points the custom domain name
--   to this regional domain name. The regional domain name is returned by
--   API Gateway when you create a regional endpoint.
--   
--   <a>$sel:certificateUploadDate:DomainName'</a>,
--   <a>domainName_certificateUploadDate</a> - The timestamp when the
--   certificate that was used by edge-optimized endpoint for this domain
--   name was uploaded.
--   
--   <a>$sel:distributionDomainName:DomainName'</a>,
--   <a>domainName_distributionDomainName</a> - The domain name of the
--   Amazon CloudFront distribution associated with this custom domain name
--   for an edge-optimized endpoint. You set up this association when
--   adding a DNS record pointing the custom domain name to this
--   distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
--   
--   <a>$sel:domainNameStatusMessage:DomainName'</a>,
--   <a>domainName_domainNameStatusMessage</a> - An optional text message
--   containing detailed information about status of the DomainName
--   migration.
--   
--   <a>$sel:endpointConfiguration:DomainName'</a>,
--   <a>domainName_endpointConfiguration</a> - The endpoint configuration
--   of this DomainName showing the endpoint types of the domain name.
--   
--   <a>$sel:domainNameStatus:DomainName'</a>,
--   <a>domainName_domainNameStatus</a> - The status of the DomainName
--   migration. The valid values are <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
--   
--   <a>$sel:tags:DomainName'</a>, <a>domainName_tags</a> - The collection
--   of tags. Each tag element is associated with a given resource.
newDomainName :: DomainName

-- | A request to delete the DomainName resource.
--   
--   <i>See:</i> <a>newDeleteDomainName</a> smart constructor.
data DeleteDomainName
DeleteDomainName' :: Text -> DeleteDomainName

-- | Create a value of <a>DeleteDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:DeleteDomainName'</a>,
--   <a>deleteDomainName_domainName</a> - [Required] The name of the
--   DomainName resource to be deleted.
newDeleteDomainName :: Text -> DeleteDomainName

-- | <i>See:</i> <a>newDeleteDomainNameResponse</a> smart constructor.
data DeleteDomainNameResponse
DeleteDomainNameResponse' :: DeleteDomainNameResponse

-- | Create a value of <a>DeleteDomainNameResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDomainNameResponse :: DeleteDomainNameResponse

-- | Requests API Gateway to create a Resource resource.
--   
--   <i>See:</i> <a>newCreateResource</a> smart constructor.
data CreateResource
CreateResource' :: Text -> Text -> Text -> CreateResource

-- | Create a value of <a>CreateResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:CreateResource'</a>, <a>createResource_restApiId</a>
--   - [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:parentId:CreateResource'</a>, <a>createResource_parentId</a> -
--   [Required] The parent resource's identifier.
--   
--   <a>$sel:pathPart:CreateResource'</a>, <a>createResource_pathPart</a> -
--   The last path segment for this resource.
newCreateResource :: Text -> Text -> Text -> CreateResource

-- | Represents an API resource.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Method) -> Maybe Text -> Resource

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathPart:Resource'</a>, <a>resource_pathPart</a> - The last
--   path segment for this resource.
--   
--   <a>$sel:path:Resource'</a>, <a>resource_path</a> - The full path for
--   this resource.
--   
--   <a>$sel:id:Resource'</a>, <a>resource_id</a> - The resource's
--   identifier.
--   
--   <a>$sel:resourceMethods:Resource'</a>, <a>resource_resourceMethods</a>
--   - Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
--   
--   <a>$sel:parentId:Resource'</a>, <a>resource_parentId</a> - The parent
--   resource's identifier.
newResource :: Resource

-- | Request to delete an existing Method resource.
--   
--   <i>See:</i> <a>newDeleteMethod</a> smart constructor.
data DeleteMethod
DeleteMethod' :: Text -> Text -> Text -> DeleteMethod

-- | Create a value of <a>DeleteMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteMethod'</a>, <a>deleteMethod_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:DeleteMethod'</a>, <a>deleteMethod_resourceId</a> -
--   [Required] The Resource identifier for the Method resource.
--   
--   <a>$sel:httpMethod:DeleteMethod'</a>, <a>deleteMethod_httpMethod</a> -
--   [Required] The HTTP verb of the Method resource.
newDeleteMethod :: Text -> Text -> Text -> DeleteMethod

-- | <i>See:</i> <a>newDeleteMethodResponse'</a> smart constructor.
data DeleteMethodResponse'
DeleteMethodResponse'' :: DeleteMethodResponse'

-- | Create a value of <a>DeleteMethodResponse'</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteMethodResponse' :: DeleteMethodResponse'

-- | Request to update an existing Method resource.
--   
--   <i>See:</i> <a>newUpdateMethod</a> smart constructor.
data UpdateMethod
UpdateMethod' :: Maybe [PatchOperation] -> Text -> Text -> Text -> UpdateMethod

-- | Create a value of <a>UpdateMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateMethod'</a>,
--   <a>updateMethod_patchOperations</a> - A list of update operations to
--   be applied to the specified resource and in the order specified in
--   this list.
--   
--   <a>$sel:restApiId:UpdateMethod'</a>, <a>updateMethod_restApiId</a> -
--   [Required] The string identifier of the associated RestApi.
--   
--   <a>$sel:resourceId:UpdateMethod'</a>, <a>updateMethod_resourceId</a> -
--   [Required] The Resource identifier for the Method resource.
--   
--   <a>$sel:httpMethod:UpdateMethod'</a>, <a>updateMethod_httpMethod</a> -
--   [Required] The HTTP verb of the Method resource.
newUpdateMethod :: Text -> Text -> Text -> UpdateMethod

-- | Represents a client-facing interface by which the client calls the API
--   to access back-end resources. A <b>Method</b> resource is integrated
--   with an Integration resource. Both consist of a request and one or
--   more responses. The method request takes the client input that is
--   passed to the back end through the integration request. A method
--   response returns the output from the back end to the client through an
--   integration response. A method request is embodied in a <b>Method</b>
--   resource, whereas an integration request is embodied in an Integration
--   resource. On the other hand, a method response is represented by a
--   MethodResponse resource, whereas an integration response is
--   represented by an IntegrationResponse resource.
--   
--   <h4>Example: Retrive the GET method on a specified resource</h4>
--   
--   <h5>Request</h5>
--   
--   The following example request retrieves the information about the GET
--   method on an API resource (<tt>3kzxbg5sa2</tt>) of an API
--   (<tt>fugvjdxtri</tt>).
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T210259Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": true, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\")" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   In the example above, the response template for the <tt>200 OK</tt>
--   response maps the JSON output from the <tt>ListStreams</tt> action in
--   the back end to an XML output. The mapping template is URL-encoded as
--   <tt>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</tt>
--   and the output is decoded using the <a>$util.urlDecode()</a> helper
--   function.
--   
--   MethodResponse, Integration, IntegrationResponse, Resource, <a>Set up
--   an API's method</a>
--   
--   <i>See:</i> <a>newMethod</a> smart constructor.
data Method
Method' :: Maybe (HashMap Text MethodResponse) -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Integration -> Method

-- | Create a value of <a>Method</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodResponses:Method'</a>, <a>method_methodResponses</a> -
--   Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
--   
--   <a>$sel:httpMethod:Method'</a>, <a>method_httpMethod</a> - The
--   method's HTTP verb.
--   
--   <a>$sel:authorizationScopes:Method'</a>,
--   <a>method_authorizationScopes</a> - A list of authorization scopes
--   configured on the method. The scopes are used with a
--   <tt>COGNITO_USER_POOLS</tt> authorizer to authorize the method
--   invocation. The authorization works by matching the method scopes
--   against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:requestValidatorId:Method'</a>,
--   <a>method_requestValidatorId</a> - The identifier of a
--   RequestValidator for request validation.
--   
--   <a>$sel:requestModels:Method'</a>, <a>method_requestModels</a> - A
--   key-value map specifying data schemas, represented by Model resources,
--   (as the mapped value) of the request payloads of given content types
--   (as the mapping key).
--   
--   <a>$sel:requestParameters:Method'</a>, <a>method_requestParameters</a>
--   - A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
--   
--   <a>$sel:authorizerId:Method'</a>, <a>method_authorizerId</a> - The
--   identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
--   
--   <a>$sel:operationName:Method'</a>, <a>method_operationName</a> - A
--   human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
--   
--   <a>$sel:authorizationType:Method'</a>, <a>method_authorizationType</a>
--   - The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
--   
--   <a>$sel:apiKeyRequired:Method'</a>, <a>method_apiKeyRequired</a> - A
--   boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
--   
--   <a>$sel:methodIntegration:Method'</a>, <a>method_methodIntegration</a>
--   - Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
newMethod :: Method

-- | Updates a RequestValidator of a given RestApi.
--   
--   <i>See:</i> <a>newUpdateRequestValidator</a> smart constructor.
data UpdateRequestValidator
UpdateRequestValidator' :: Maybe [PatchOperation] -> Text -> Text -> UpdateRequestValidator

-- | Create a value of <a>UpdateRequestValidator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateRequestValidator'</a>,
--   <a>updateRequestValidator_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:restApiId:UpdateRequestValidator'</a>,
--   <a>updateRequestValidator_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:requestValidatorId:UpdateRequestValidator'</a>,
--   <a>updateRequestValidator_requestValidatorId</a> - [Required] The
--   identifier of RequestValidator to be updated.
newUpdateRequestValidator :: Text -> Text -> UpdateRequestValidator

-- | A set of validation rules for incoming Method requests.
--   
--   In OpenAPI, a RequestValidator of an API is defined by the
--   <a>x-amazon-apigateway-request-validators.requestValidator</a> object.
--   It the referenced using the
--   <a>x-amazon-apigateway-request-validator</a> property.
--   
--   <a>Enable Basic Request Validation in API Gateway</a>
--   
--   <i>See:</i> <a>newRequestValidator</a> smart constructor.
data RequestValidator
RequestValidator' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> RequestValidator

-- | Create a value of <a>RequestValidator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validateRequestParameters:RequestValidator'</a>,
--   <a>requestValidator_validateRequestParameters</a> - A Boolean flag to
--   indicate whether to validate request parameters (<tt>true</tt>) or not
--   (<tt>false</tt>).
--   
--   <a>$sel:name:RequestValidator'</a>, <a>requestValidator_name</a> - The
--   name of this RequestValidator
--   
--   <a>$sel:validateRequestBody:RequestValidator'</a>,
--   <a>requestValidator_validateRequestBody</a> - A Boolean flag to
--   indicate whether to validate a request body according to the
--   configured Model schema.
--   
--   <a>$sel:id:RequestValidator'</a>, <a>requestValidator_id</a> - The
--   identifier of this RequestValidator.
newRequestValidator :: RequestValidator

-- | Deletes a specified RequestValidator of a given RestApi.
--   
--   <i>See:</i> <a>newDeleteRequestValidator</a> smart constructor.
data DeleteRequestValidator
DeleteRequestValidator' :: Text -> Text -> DeleteRequestValidator

-- | Create a value of <a>DeleteRequestValidator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteRequestValidator'</a>,
--   <a>deleteRequestValidator_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:requestValidatorId:DeleteRequestValidator'</a>,
--   <a>deleteRequestValidator_requestValidatorId</a> - [Required] The
--   identifier of the RequestValidator to be deleted.
newDeleteRequestValidator :: Text -> Text -> DeleteRequestValidator

-- | <i>See:</i> <a>newDeleteRequestValidatorResponse</a> smart
--   constructor.
data DeleteRequestValidatorResponse
DeleteRequestValidatorResponse' :: DeleteRequestValidatorResponse

-- | Create a value of <a>DeleteRequestValidatorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRequestValidatorResponse :: DeleteRequestValidatorResponse

-- | Get the SdkTypes collection.
--   
--   <i>See:</i> <a>newGetSdkTypes</a> smart constructor.
data GetSdkTypes
GetSdkTypes' :: Maybe Int -> Maybe Text -> GetSdkTypes

-- | Create a value of <a>GetSdkTypes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetSdkTypes'</a>, <a>getSdkTypes_limit</a> - The maximum
--   number of returned results per page. The default value is 25 and the
--   maximum value is 500.
--   
--   <a>$sel:position:GetSdkTypes'</a>, <a>getSdkTypes_position</a> - The
--   current pagination position in the paged result set.
newGetSdkTypes :: GetSdkTypes

-- | The collection of SdkType instances.
--   
--   <i>See:</i> <a>newGetSdkTypesResponse</a> smart constructor.
data GetSdkTypesResponse
GetSdkTypesResponse' :: Maybe [SdkType] -> Maybe Text -> Int -> GetSdkTypesResponse

-- | Create a value of <a>GetSdkTypesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetSdkTypesResponse'</a>,
--   <a>getSdkTypesResponse_items</a> - The current page of elements from
--   this collection.
--   
--   <a>$sel:position:GetSdkTypes'</a>, <a>getSdkTypesResponse_position</a>
--   - Undocumented member.
--   
--   <a>$sel:httpStatus:GetSdkTypesResponse'</a>,
--   <a>getSdkTypesResponse_httpStatus</a> - The response's http status
--   code.
newGetSdkTypesResponse :: Int -> GetSdkTypesResponse

-- | A request to get information about a collection of ClientCertificate
--   resources.
--   
--   <i>See:</i> <a>newGetClientCertificates</a> smart constructor.
data GetClientCertificates
GetClientCertificates' :: Maybe Int -> Maybe Text -> GetClientCertificates

-- | Create a value of <a>GetClientCertificates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetClientCertificates'</a>,
--   <a>getClientCertificates_limit</a> - The maximum number of returned
--   results per page. The default value is 25 and the maximum value is
--   500.
--   
--   <a>$sel:position:GetClientCertificates'</a>,
--   <a>getClientCertificates_position</a> - The current pagination
--   position in the paged result set.
newGetClientCertificates :: GetClientCertificates

-- | Represents a collection of ClientCertificate resources.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newGetClientCertificatesResponse</a> smart constructor.
data GetClientCertificatesResponse
GetClientCertificatesResponse' :: Maybe [ClientCertificate] -> Maybe Text -> Int -> GetClientCertificatesResponse

-- | Create a value of <a>GetClientCertificatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetClientCertificatesResponse'</a>,
--   <a>getClientCertificatesResponse_items</a> - The current page of
--   elements from this collection.
--   
--   <a>$sel:position:GetClientCertificates'</a>,
--   <a>getClientCertificatesResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetClientCertificatesResponse'</a>,
--   <a>getClientCertificatesResponse_httpStatus</a> - The response's http
--   status code.
newGetClientCertificatesResponse :: Int -> GetClientCertificatesResponse

-- | Request to generate a sample mapping template used to transform the
--   payload.
--   
--   <i>See:</i> <a>newGetModelTemplate</a> smart constructor.
data GetModelTemplate
GetModelTemplate' :: Text -> Text -> GetModelTemplate

-- | Create a value of <a>GetModelTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:GetModelTemplate'</a>,
--   <a>getModelTemplate_restApiId</a> - [Required] The string identifier
--   of the associated RestApi.
--   
--   <a>$sel:modelName:GetModelTemplate'</a>,
--   <a>getModelTemplate_modelName</a> - [Required] The name of the model
--   for which to generate a template.
newGetModelTemplate :: Text -> Text -> GetModelTemplate

-- | Represents a mapping template used to transform a payload.
--   
--   <a>Mapping Templates</a>
--   
--   <i>See:</i> <a>newGetModelTemplateResponse</a> smart constructor.
data GetModelTemplateResponse
GetModelTemplateResponse' :: Maybe Text -> Int -> GetModelTemplateResponse

-- | Create a value of <a>GetModelTemplateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:GetModelTemplateResponse'</a>,
--   <a>getModelTemplateResponse_value</a> - The Apache <a>Velocity
--   Template Language (VTL)</a> template content used for the template
--   resource.
--   
--   <a>$sel:httpStatus:GetModelTemplateResponse'</a>,
--   <a>getModelTemplateResponse_httpStatus</a> - The response's http
--   status code.
newGetModelTemplateResponse :: Int -> GetModelTemplateResponse

-- | Updates an existing documentation version of an API.
--   
--   <i>See:</i> <a>newUpdateDocumentationVersion</a> smart constructor.
data UpdateDocumentationVersion
UpdateDocumentationVersion' :: Maybe [PatchOperation] -> Text -> Text -> UpdateDocumentationVersion

-- | Create a value of <a>UpdateDocumentationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:patchOperations:UpdateDocumentationVersion'</a>,
--   <a>updateDocumentationVersion_patchOperations</a> - A list of update
--   operations to be applied to the specified resource and in the order
--   specified in this list.
--   
--   <a>$sel:restApiId:UpdateDocumentationVersion'</a>,
--   <a>updateDocumentationVersion_restApiId</a> - [Required] The string
--   identifier of the associated RestApi..
--   
--   <a>$sel:documentationVersion:UpdateDocumentationVersion'</a>,
--   <a>updateDocumentationVersion_documentationVersion</a> - [Required]
--   The version identifier of the to-be-updated documentation version.
newUpdateDocumentationVersion :: Text -> Text -> UpdateDocumentationVersion

-- | A snapshot of the documentation of an API.
--   
--   Publishing API documentation involves creating a documentation version
--   associated with an API stage and exporting the versioned documentation
--   to an external (e.g., OpenAPI) file.
--   
--   <a>Documenting an API</a>, DocumentationPart, DocumentationVersions
--   
--   <i>See:</i> <a>newDocumentationVersion</a> smart constructor.
data DocumentationVersion
DocumentationVersion' :: Maybe POSIX -> Maybe Text -> Maybe Text -> DocumentationVersion

-- | Create a value of <a>DocumentationVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:DocumentationVersion'</a>,
--   <a>documentationVersion_createdDate</a> - The date when the API
--   documentation snapshot is created.
--   
--   <a>$sel:version:DocumentationVersion'</a>,
--   <a>documentationVersion_version</a> - The version identifier of the
--   API documentation snapshot.
--   
--   <a>$sel:description:DocumentationVersion'</a>,
--   <a>documentationVersion_description</a> - The description of the API
--   documentation snapshot.
newDocumentationVersion :: DocumentationVersion

-- | Deletes an existing documentation version of an API.
--   
--   <i>See:</i> <a>newDeleteDocumentationVersion</a> smart constructor.
data DeleteDocumentationVersion
DeleteDocumentationVersion' :: Text -> Text -> DeleteDocumentationVersion

-- | Create a value of <a>DeleteDocumentationVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:DeleteDocumentationVersion'</a>,
--   <a>deleteDocumentationVersion_restApiId</a> - [Required] The string
--   identifier of the associated RestApi.
--   
--   <a>$sel:documentationVersion:DeleteDocumentationVersion'</a>,
--   <a>deleteDocumentationVersion_documentationVersion</a> - [Required]
--   The version identifier of a to-be-deleted documentation snapshot.
newDeleteDocumentationVersion :: Text -> Text -> DeleteDocumentationVersion

-- | <i>See:</i> <a>newDeleteDocumentationVersionResponse</a> smart
--   constructor.
data DeleteDocumentationVersionResponse
DeleteDocumentationVersionResponse' :: DeleteDocumentationVersionResponse

-- | Create a value of <a>DeleteDocumentationVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDocumentationVersionResponse :: DeleteDocumentationVersionResponse

-- | A request to get information about a collection of BasePathMapping
--   resources.
--   
--   <i>See:</i> <a>newGetBasePathMappings</a> smart constructor.
data GetBasePathMappings
GetBasePathMappings' :: Maybe Int -> Maybe Text -> Text -> GetBasePathMappings

-- | Create a value of <a>GetBasePathMappings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:GetBasePathMappings'</a>,
--   <a>getBasePathMappings_limit</a> - The maximum number of returned
--   results per page. The default value is 25 and the maximum value is
--   500.
--   
--   <a>$sel:position:GetBasePathMappings'</a>,
--   <a>getBasePathMappings_position</a> - The current pagination position
--   in the paged result set.
--   
--   <a>$sel:domainName:GetBasePathMappings'</a>,
--   <a>getBasePathMappings_domainName</a> - [Required] The domain name of
--   a BasePathMapping resource.
newGetBasePathMappings :: Text -> GetBasePathMappings

-- | Represents a collection of BasePathMapping resources.
--   
--   <a>Use Custom Domain Names</a>
--   
--   <i>See:</i> <a>newGetBasePathMappingsResponse</a> smart constructor.
data GetBasePathMappingsResponse
GetBasePathMappingsResponse' :: Maybe [BasePathMapping] -> Maybe Text -> Int -> GetBasePathMappingsResponse

-- | Create a value of <a>GetBasePathMappingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetBasePathMappingsResponse'</a>,
--   <a>getBasePathMappingsResponse_items</a> - The current page of
--   elements from this collection.
--   
--   <a>$sel:position:GetBasePathMappings'</a>,
--   <a>getBasePathMappingsResponse_position</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetBasePathMappingsResponse'</a>,
--   <a>getBasePathMappingsResponse_httpStatus</a> - The response's http
--   status code.
newGetBasePathMappingsResponse :: Int -> GetBasePathMappingsResponse

-- | A request to get information about the current ApiKey resource.
--   
--   <i>See:</i> <a>newGetApiKey</a> smart constructor.
data GetApiKey
GetApiKey' :: Maybe Bool -> Text -> GetApiKey

-- | Create a value of <a>GetApiKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeValue:GetApiKey'</a>, <a>getApiKey_includeValue</a> - A
--   boolean flag to specify whether (<tt>true</tt>) or not
--   (<tt>false</tt>) the result contains the key value.
--   
--   <a>$sel:apiKey:GetApiKey'</a>, <a>getApiKey_apiKey</a> - [Required]
--   The identifier of the ApiKey resource.
newGetApiKey :: Text -> GetApiKey

-- | A resource that can be distributed to callers for executing Method
--   resources that require an API key. API keys can be mapped to any Stage
--   on any RestApi, which indicates that the callers with the API key can
--   make requests to that stage.
--   
--   <a>Use API Keys</a>
--   
--   <i>See:</i> <a>newApiKey</a> smart constructor.
data ApiKey
ApiKey' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ApiKey

-- | Create a value of <a>ApiKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:ApiKey'</a>, <a>apiKey_enabled</a> - Specifies whether
--   the API Key can be used by callers.
--   
--   <a>$sel:value:ApiKey'</a>, <a>apiKey_value</a> - The value of the API
--   Key.
--   
--   <a>$sel:customerId:ApiKey'</a>, <a>apiKey_customerId</a> - An AWS
--   Marketplace customer identifier , when integrating with the AWS SaaS
--   Marketplace.
--   
--   <a>$sel:createdDate:ApiKey'</a>, <a>apiKey_createdDate</a> - The
--   timestamp when the API Key was created.
--   
--   <a>$sel:name:ApiKey'</a>, <a>apiKey_name</a> - The name of the API
--   Key.
--   
--   <a>$sel:id:ApiKey'</a>, <a>apiKey_id</a> - The identifier of the API
--   Key.
--   
--   <a>$sel:stageKeys:ApiKey'</a>, <a>apiKey_stageKeys</a> - A list of
--   Stage resources that are associated with the ApiKey resource.
--   
--   <a>$sel:lastUpdatedDate:ApiKey'</a>, <a>apiKey_lastUpdatedDate</a> -
--   The timestamp when the API Key was last updated.
--   
--   <a>$sel:description:ApiKey'</a>, <a>apiKey_description</a> - The
--   description of the API Key.
--   
--   <a>$sel:tags:ApiKey'</a>, <a>apiKey_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newApiKey :: ApiKey
newtype ApiKeySourceType
ApiKeySourceType' :: Text -> ApiKeySourceType
[fromApiKeySourceType] :: ApiKeySourceType -> Text
pattern ApiKeySourceType_AUTHORIZER :: ApiKeySourceType
pattern ApiKeySourceType_HEADER :: ApiKeySourceType
newtype ApiKeysFormat
ApiKeysFormat' :: Text -> ApiKeysFormat
[fromApiKeysFormat] :: ApiKeysFormat -> Text
pattern ApiKeysFormat_Csv :: ApiKeysFormat

-- | The authorizer type. Valid values are <tt>TOKEN</tt> for a Lambda
--   function using a single authorization token submitted in a custom
--   header, <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
newtype AuthorizerType
AuthorizerType' :: Text -> AuthorizerType
[fromAuthorizerType] :: AuthorizerType -> Text
pattern AuthorizerType_COGNITO_USER_POOLS :: AuthorizerType
pattern AuthorizerType_REQUEST :: AuthorizerType
pattern AuthorizerType_TOKEN :: AuthorizerType

-- | Returns the size of the <b>CacheCluster</b>.
newtype CacheClusterSize
CacheClusterSize' :: Text -> CacheClusterSize
[fromCacheClusterSize] :: CacheClusterSize -> Text
pattern CacheClusterSize_ :: CacheClusterSize

-- | Returns the status of the <b>CacheCluster</b>.
newtype CacheClusterStatus
CacheClusterStatus' :: Text -> CacheClusterStatus
[fromCacheClusterStatus] :: CacheClusterStatus -> Text
pattern CacheClusterStatus_AVAILABLE :: CacheClusterStatus
pattern CacheClusterStatus_CREATE_IN_PROGRESS :: CacheClusterStatus
pattern CacheClusterStatus_DELETE_IN_PROGRESS :: CacheClusterStatus
pattern CacheClusterStatus_FLUSH_IN_PROGRESS :: CacheClusterStatus
pattern CacheClusterStatus_NOT_AVAILABLE :: CacheClusterStatus
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_INTERNET :: ConnectionType
pattern ConnectionType_VPC_LINK :: ConnectionType
newtype ContentHandlingStrategy
ContentHandlingStrategy' :: Text -> ContentHandlingStrategy
[fromContentHandlingStrategy] :: ContentHandlingStrategy -> Text
pattern ContentHandlingStrategy_CONVERT_TO_BINARY :: ContentHandlingStrategy
pattern ContentHandlingStrategy_CONVERT_TO_TEXT :: ContentHandlingStrategy
newtype DocumentationPartType
DocumentationPartType' :: Text -> DocumentationPartType
[fromDocumentationPartType] :: DocumentationPartType -> Text
pattern DocumentationPartType_API :: DocumentationPartType
pattern DocumentationPartType_AUTHORIZER :: DocumentationPartType
pattern DocumentationPartType_METHOD :: DocumentationPartType
pattern DocumentationPartType_MODEL :: DocumentationPartType
pattern DocumentationPartType_PATH_PARAMETER :: DocumentationPartType
pattern DocumentationPartType_QUERY_PARAMETER :: DocumentationPartType
pattern DocumentationPartType_REQUEST_BODY :: DocumentationPartType
pattern DocumentationPartType_REQUEST_HEADER :: DocumentationPartType
pattern DocumentationPartType_RESOURCE :: DocumentationPartType
pattern DocumentationPartType_RESPONSE :: DocumentationPartType
pattern DocumentationPartType_RESPONSE_BODY :: DocumentationPartType
pattern DocumentationPartType_RESPONSE_HEADER :: DocumentationPartType
newtype DomainNameStatus
DomainNameStatus' :: Text -> DomainNameStatus
[fromDomainNameStatus] :: DomainNameStatus -> Text
pattern DomainNameStatus_AVAILABLE :: DomainNameStatus
pattern DomainNameStatus_PENDING :: DomainNameStatus
pattern DomainNameStatus_PENDING_CERTIFICATE_REIMPORT :: DomainNameStatus
pattern DomainNameStatus_PENDING_OWNERSHIP_VERIFICATION :: DomainNameStatus
pattern DomainNameStatus_UPDATING :: DomainNameStatus

-- | The endpoint type. The valid values are <tt>EDGE</tt> for
--   edge-optimized API setup, most suitable for mobile applications;
--   <tt>REGIONAL</tt> for regional API endpoint setup, most suitable for
--   calling from AWS Region; and <tt>PRIVATE</tt> for private APIs.
newtype EndpointType
EndpointType' :: Text -> EndpointType
[fromEndpointType] :: EndpointType -> Text
pattern EndpointType_EDGE :: EndpointType
pattern EndpointType_PRIVATE :: EndpointType
pattern EndpointType_REGIONAL :: EndpointType
newtype GatewayResponseType
GatewayResponseType' :: Text -> GatewayResponseType
[fromGatewayResponseType] :: GatewayResponseType -> Text
pattern GatewayResponseType_ACCESS_DENIED :: GatewayResponseType
pattern GatewayResponseType_API_CONFIGURATION_ERROR :: GatewayResponseType
pattern GatewayResponseType_AUTHORIZER_CONFIGURATION_ERROR :: GatewayResponseType
pattern GatewayResponseType_AUTHORIZER_FAILURE :: GatewayResponseType
pattern GatewayResponseType_BAD_REQUEST_BODY :: GatewayResponseType
pattern GatewayResponseType_BAD_REQUEST_PARAMETERS :: GatewayResponseType
pattern GatewayResponseType_DEFAULT_4XX :: GatewayResponseType
pattern GatewayResponseType_DEFAULT_5XX :: GatewayResponseType
pattern GatewayResponseType_EXPIRED_TOKEN :: GatewayResponseType
pattern GatewayResponseType_INTEGRATION_FAILURE :: GatewayResponseType
pattern GatewayResponseType_INTEGRATION_TIMEOUT :: GatewayResponseType
pattern GatewayResponseType_INVALID_API_KEY :: GatewayResponseType
pattern GatewayResponseType_INVALID_SIGNATURE :: GatewayResponseType
pattern GatewayResponseType_MISSING_AUTHENTICATION_TOKEN :: GatewayResponseType
pattern GatewayResponseType_QUOTA_EXCEEDED :: GatewayResponseType
pattern GatewayResponseType_REQUEST_TOO_LARGE :: GatewayResponseType
pattern GatewayResponseType_RESOURCE_NOT_FOUND :: GatewayResponseType
pattern GatewayResponseType_THROTTLED :: GatewayResponseType
pattern GatewayResponseType_UNAUTHORIZED :: GatewayResponseType
pattern GatewayResponseType_UNSUPPORTED_MEDIA_TYPE :: GatewayResponseType
pattern GatewayResponseType_WAF_FILTERED :: GatewayResponseType

-- | The integration type. The valid value is <tt>HTTP</tt> for integrating
--   an API method with an HTTP backend; <tt>AWS</tt> with any AWS service
--   endpoints; <tt>MOCK</tt> for testing without actually invoking the
--   backend; <tt>HTTP_PROXY</tt> for integrating with the HTTP proxy
--   integration; <tt>AWS_PROXY</tt> for integrating with the Lambda proxy
--   integration.
newtype IntegrationType
IntegrationType' :: Text -> IntegrationType
[fromIntegrationType] :: IntegrationType -> Text
pattern IntegrationType_AWS :: IntegrationType
pattern IntegrationType_AWS_PROXY :: IntegrationType
pattern IntegrationType_HTTP :: IntegrationType
pattern IntegrationType_HTTP_PROXY :: IntegrationType
pattern IntegrationType_MOCK :: IntegrationType
newtype LocationStatusType
LocationStatusType' :: Text -> LocationStatusType
[fromLocationStatusType] :: LocationStatusType -> Text
pattern LocationStatusType_DOCUMENTED :: LocationStatusType
pattern LocationStatusType_UNDOCUMENTED :: LocationStatusType
newtype Op
Op' :: Text -> Op
[fromOp] :: Op -> Text
pattern Op_Add :: Op
pattern Op_Copy :: Op
pattern Op_Move :: Op
pattern Op_Remove :: Op
pattern Op_Replace :: Op
pattern Op_Test :: Op
newtype PutMode
PutMode' :: Text -> PutMode
[fromPutMode] :: PutMode -> Text
pattern PutMode_Merge :: PutMode
pattern PutMode_Overwrite :: PutMode
newtype QuotaPeriodType
QuotaPeriodType' :: Text -> QuotaPeriodType
[fromQuotaPeriodType] :: QuotaPeriodType -> Text
pattern QuotaPeriodType_DAY :: QuotaPeriodType
pattern QuotaPeriodType_MONTH :: QuotaPeriodType
pattern QuotaPeriodType_WEEK :: QuotaPeriodType
newtype SecurityPolicy
SecurityPolicy' :: Text -> SecurityPolicy
[fromSecurityPolicy] :: SecurityPolicy -> Text
pattern SecurityPolicy_TLS_1_0 :: SecurityPolicy
pattern SecurityPolicy_TLS_1_2 :: SecurityPolicy
newtype UnauthorizedCacheControlHeaderStrategy
UnauthorizedCacheControlHeaderStrategy' :: Text -> UnauthorizedCacheControlHeaderStrategy
[fromUnauthorizedCacheControlHeaderStrategy] :: UnauthorizedCacheControlHeaderStrategy -> Text
pattern UnauthorizedCacheControlHeaderStrategy_FAIL_WITH_403 :: UnauthorizedCacheControlHeaderStrategy
pattern UnauthorizedCacheControlHeaderStrategy_SUCCEED_WITHOUT_RESPONSE_HEADER :: UnauthorizedCacheControlHeaderStrategy
pattern UnauthorizedCacheControlHeaderStrategy_SUCCEED_WITH_RESPONSE_HEADER :: UnauthorizedCacheControlHeaderStrategy
newtype VpcLinkStatus
VpcLinkStatus' :: Text -> VpcLinkStatus
[fromVpcLinkStatus] :: VpcLinkStatus -> Text
pattern VpcLinkStatus_AVAILABLE :: VpcLinkStatus
pattern VpcLinkStatus_DELETING :: VpcLinkStatus
pattern VpcLinkStatus_FAILED :: VpcLinkStatus
pattern VpcLinkStatus_PENDING :: VpcLinkStatus

-- | Access log settings, including the access log format and access log
--   destination ARN.
--   
--   <i>See:</i> <a>newAccessLogSettings</a> smart constructor.
data AccessLogSettings
AccessLogSettings' :: Maybe Text -> Maybe Text -> AccessLogSettings

-- | Create a value of <a>AccessLogSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:AccessLogSettings'</a>, <a>accessLogSettings_format</a>
--   - A single line format of the access logs of data, as specified by
--   selected <a>$context variables</a>. The format must include at least
--   <tt>$context.requestId</tt>.
--   
--   <a>$sel:destinationArn:AccessLogSettings'</a>,
--   <a>accessLogSettings_destinationArn</a> - The Amazon Resource Name
--   (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose
--   delivery stream to receive access logs. If you specify a Kinesis Data
--   Firehose delivery stream, the stream name must begin with
--   <tt>amazon-apigateway-</tt>.
newAccessLogSettings :: AccessLogSettings

-- | Represents an AWS account that is associated with API Gateway.
--   
--   To view the account info, call <tt>GET</tt> on this resource.
--   
--   <h4>Error Codes</h4>
--   
--   The following exception may be thrown when the request fails.
--   
--   <ul>
--   <li>UnauthorizedException</li>
--   <li>NotFoundException</li>
--   <li>TooManyRequestsException</li>
--   </ul>
--   
--   For detailed error code information, including the corresponding HTTP
--   Status Codes, see <a>API Gateway Error Codes</a>
--   
--   <h4>Example: Get the information about an account.</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /account HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160531T184618Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/account-apigateway-{rel}.html", "name": "account", "templated": true }, "self": { "href": "/account" }, "account:update": { "href": "/account" } }, "cloudwatchRoleArn": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "throttleSettings": { "rateLimit": 500, "burstLimit": 1000 } }
--   </pre>
--   
--   In addition to making the REST API call directly, you can use the AWS
--   CLI and an AWS SDK to access this resource.
--   
--   <a>API Gateway Limits</a> <a>Developer Guide</a>, <a>AWS CLI</a>
--   
--   <i>See:</i> <a>newAccount</a> smart constructor.
data Account
Account' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe ThrottleSettings -> Account

-- | Create a value of <a>Account</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyVersion:Account'</a>, <a>account_apiKeyVersion</a> - The
--   version of the API keys used for the account.
--   
--   <a>$sel:cloudwatchRoleArn:Account'</a>,
--   <a>account_cloudwatchRoleArn</a> - The ARN of an Amazon CloudWatch
--   role for the current Account.
--   
--   <a>$sel:features:Account'</a>, <a>account_features</a> - A list of
--   features supported for the account. When usage plans are enabled, the
--   features list will include an entry of <tt>"UsagePlans"</tt>.
--   
--   <a>$sel:throttleSettings:Account'</a>, <a>account_throttleSettings</a>
--   - Specifies the API request limits configured for the current Account.
newAccount :: Account

-- | A resource that can be distributed to callers for executing Method
--   resources that require an API key. API keys can be mapped to any Stage
--   on any RestApi, which indicates that the callers with the API key can
--   make requests to that stage.
--   
--   <a>Use API Keys</a>
--   
--   <i>See:</i> <a>newApiKey</a> smart constructor.
data ApiKey
ApiKey' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ApiKey

-- | Create a value of <a>ApiKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:ApiKey'</a>, <a>apiKey_enabled</a> - Specifies whether
--   the API Key can be used by callers.
--   
--   <a>$sel:value:ApiKey'</a>, <a>apiKey_value</a> - The value of the API
--   Key.
--   
--   <a>$sel:customerId:ApiKey'</a>, <a>apiKey_customerId</a> - An AWS
--   Marketplace customer identifier , when integrating with the AWS SaaS
--   Marketplace.
--   
--   <a>$sel:createdDate:ApiKey'</a>, <a>apiKey_createdDate</a> - The
--   timestamp when the API Key was created.
--   
--   <a>$sel:name:ApiKey'</a>, <a>apiKey_name</a> - The name of the API
--   Key.
--   
--   <a>$sel:id:ApiKey'</a>, <a>apiKey_id</a> - The identifier of the API
--   Key.
--   
--   <a>$sel:stageKeys:ApiKey'</a>, <a>apiKey_stageKeys</a> - A list of
--   Stage resources that are associated with the ApiKey resource.
--   
--   <a>$sel:lastUpdatedDate:ApiKey'</a>, <a>apiKey_lastUpdatedDate</a> -
--   The timestamp when the API Key was last updated.
--   
--   <a>$sel:description:ApiKey'</a>, <a>apiKey_description</a> - The
--   description of the API Key.
--   
--   <a>$sel:tags:ApiKey'</a>, <a>apiKey_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newApiKey :: ApiKey

-- | API stage name of the associated API stage in a usage plan.
--   
--   <i>See:</i> <a>newApiStage</a> smart constructor.
data ApiStage
ApiStage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text ThrottleSettings) -> ApiStage

-- | Create a value of <a>ApiStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:ApiStage'</a>, <a>apiStage_stage</a> - API stage name of
--   the associated API stage in a usage plan.
--   
--   <a>$sel:apiId:ApiStage'</a>, <a>apiStage_apiId</a> - API Id of the
--   associated API stage in a usage plan.
--   
--   <a>$sel:throttle:ApiStage'</a>, <a>apiStage_throttle</a> - Map
--   containing method level throttling information for API stage in a
--   usage plan.
newApiStage :: ApiStage

-- | Represents an authorization layer for methods. If enabled on a method,
--   API Gateway will activate the authorizer when a client calls the
--   method.
--   
--   <a>Use Lambda Function as Authorizer</a> <a>Use Cognito User Pool as
--   Authorizer</a>
--   
--   <i>See:</i> <a>newAuthorizer</a> smart constructor.
data Authorizer
Authorizer' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe AuthorizerType -> Maybe Text -> Maybe Text -> Authorizer

-- | Create a value of <a>Authorizer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerUri:Authorizer'</a>, <a>authorizer_authorizerUri</a>
--   - Specifies the authorizer's Uniform Resource Identifier (URI). For
--   <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   <tt>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</tt>.
--   In general, the URI has this form
--   <tt>arn:aws:apigateway:{region}:lambda:path/{service_api}</tt>, where
--   <tt>{region}</tt> is the same as the region hosting the Lambda
--   function, <tt>path</tt> indicates that the remaining substring in the
--   URI should be treated as the path to the resource, including the
--   initial <tt>/</tt>. For Lambda functions, this is usually of the form
--   <tt>/2015-03-31/functions/[FunctionARN]/invocations</tt>.
--   
--   <a>$sel:identityValidationExpression:Authorizer'</a>,
--   <a>authorizer_identityValidationExpression</a> - A validation
--   expression for the incoming identity token. For <tt>TOKEN</tt>
--   authorizers, this value is a regular expression. For
--   <tt>COGNITO_USER_POOLS</tt> authorizers, API Gateway will match the
--   <tt>aud</tt> field of the incoming token from the client against the
--   specified regular expression. It will invoke the authorizer's Lambda
--   function when there is a match. Otherwise, it will return a 401
--   Unauthorized response without calling the Lambda function. The
--   validation expression does not apply to the <tt>REQUEST</tt>
--   authorizer.
--   
--   <a>$sel:providerARNs:Authorizer'</a>, <a>authorizer_providerARNs</a> -
--   A list of the Amazon Cognito user pool ARNs for the
--   <tt>COGNITO_USER_POOLS</tt> authorizer. Each element is of this
--   format:
--   <tt>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</tt>.
--   For a <tt>TOKEN</tt> or <tt>REQUEST</tt> authorizer, this is not
--   defined.
--   
--   <a>$sel:name:Authorizer'</a>, <a>authorizer_name</a> - [Required] The
--   name of the authorizer.
--   
--   <a>$sel:id:Authorizer'</a>, <a>authorizer_id</a> - The identifier for
--   the authorizer resource.
--   
--   <a>$sel:authorizerResultTtlInSeconds:Authorizer'</a>,
--   <a>authorizer_authorizerResultTtlInSeconds</a> - The TTL in seconds of
--   cached authorizer results. If it equals 0, authorization caching is
--   disabled. If it is greater than 0, API Gateway will cache authorizer
--   responses. If this field is not set, the default value is 300. The
--   maximum value is 3600, or 1 hour.
--   
--   <a>$sel:authType:Authorizer'</a>, <a>authorizer_authType</a> -
--   Optional customer-defined field, used in OpenAPI imports and exports
--   without functional impact.
--   
--   <a>$sel:type':Authorizer'</a>, <a>authorizer_type</a> - The authorizer
--   type. Valid values are <tt>TOKEN</tt> for a Lambda function using a
--   single authorization token submitted in a custom header,
--   <tt>REQUEST</tt> for a Lambda function using incoming request
--   parameters, and <tt>COGNITO_USER_POOLS</tt> for using an Amazon
--   Cognito user pool.
--   
--   <a>$sel:identitySource:Authorizer'</a>,
--   <a>authorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   <ul>
--   <li>For a <tt>TOKEN</tt> or <tt>COGNITO_USER_POOLS</tt> authorizer,
--   this is required and specifies the request header mapping expression
--   for the custom header holding the authorization token submitted by the
--   client. For example, if the token header name is <tt>Auth</tt>, the
--   header mapping expression is <tt>method.request.header.Auth</tt>.</li>
--   <li>For the <tt>REQUEST</tt> authorizer, this is required when
--   authorization caching is enabled. The value is a comma-separated
--   string of one or more mapping expressions of the specified request
--   parameters. For example, if an <tt>Auth</tt> header, a <tt>Name</tt>
--   query string parameter are defined as identity sources, this value is
--   <tt>method.request.header.Auth, method.request.querystring.Name</tt>.
--   These parameters will be used to derive the authorization caching key
--   and to perform runtime validation of the <tt>REQUEST</tt> authorizer
--   by verifying all of the identity-related request parameters are
--   present, not null and non-empty. Only when this is true does the
--   authorizer invoke the authorizer Lambda function, otherwise, it
--   returns a 401 Unauthorized response without calling the Lambda
--   function. The valid value is a string of comma-separated mapping
--   expressions of the specified request parameters. When the
--   authorization caching is not enabled, this property is optional.</li>
--   </ul>
--   
--   <a>$sel:authorizerCredentials:Authorizer'</a>,
--   <a>authorizer_authorizerCredentials</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, specify null.
newAuthorizer :: Authorizer

-- | Represents the base path that callers of the API must provide as part
--   of the URL after the domain name.
--   
--   A custom domain name plus a <tt>BasePathMapping</tt> specification
--   identifies a deployed RestApi in a given stage of the owner Account.
--   
--   <a>Use Custom Domain Names</a>
--   
--   <i>See:</i> <a>newBasePathMapping</a> smart constructor.
data BasePathMapping
BasePathMapping' :: Maybe Text -> Maybe Text -> Maybe Text -> BasePathMapping

-- | Create a value of <a>BasePathMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:BasePathMapping'</a>, <a>basePathMapping_stage</a> - The
--   name of the associated stage.
--   
--   <a>$sel:basePath:BasePathMapping'</a>, <a>basePathMapping_basePath</a>
--   - The base path name that callers of the API must provide as part of
--   the URL after the domain name.
--   
--   <a>$sel:restApiId:BasePathMapping'</a>,
--   <a>basePathMapping_restApiId</a> - The string identifier of the
--   associated RestApi.
newBasePathMapping :: BasePathMapping

-- | Configuration settings of a canary deployment.
--   
--   <i>See:</i> <a>newCanarySettings</a> smart constructor.
data CanarySettings
CanarySettings' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Double -> CanarySettings

-- | Create a value of <a>CanarySettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CanarySettings'</a>,
--   <a>canarySettings_deploymentId</a> - The ID of the canary deployment.
--   
--   <a>$sel:stageVariableOverrides:CanarySettings'</a>,
--   <a>canarySettings_stageVariableOverrides</a> - Stage variables
--   overridden for a canary release deployment, including new stage
--   variables introduced in the canary. These stage variables are
--   represented as a string-to-string map between stage variable names and
--   their values.
--   
--   <a>$sel:useStageCache:CanarySettings'</a>,
--   <a>canarySettings_useStageCache</a> - A Boolean flag to indicate
--   whether the canary deployment uses the stage cache or not.
--   
--   <a>$sel:percentTraffic:CanarySettings'</a>,
--   <a>canarySettings_percentTraffic</a> - The percent (0-100) of traffic
--   diverted to a canary deployment.
newCanarySettings :: CanarySettings

-- | Represents a client certificate used to configure client-side SSL
--   authentication while sending requests to the integration endpoint.
--   
--   Client certificates are used to authenticate an API by the backend
--   server. To authenticate an API client (or user), use IAM roles and
--   policies, a custom Authorizer or an Amazon Cognito user pool.
--   
--   <a>Use Client-Side Certificate</a>
--   
--   <i>See:</i> <a>newClientCertificate</a> smart constructor.
data ClientCertificate
ClientCertificate' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> ClientCertificate

-- | Create a value of <a>ClientCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pemEncodedCertificate:ClientCertificate'</a>,
--   <a>clientCertificate_pemEncodedCertificate</a> - The PEM-encoded
--   public key of the client certificate, which can be used to configure
--   certificate authentication in the integration endpoint .
--   
--   <a>$sel:clientCertificateId:ClientCertificate'</a>,
--   <a>clientCertificate_clientCertificateId</a> - The identifier of the
--   client certificate.
--   
--   <a>$sel:createdDate:ClientCertificate'</a>,
--   <a>clientCertificate_createdDate</a> - The timestamp when the client
--   certificate was created.
--   
--   <a>$sel:expirationDate:ClientCertificate'</a>,
--   <a>clientCertificate_expirationDate</a> - The timestamp when the
--   client certificate will expire.
--   
--   <a>$sel:description:ClientCertificate'</a>,
--   <a>clientCertificate_description</a> - The description of the client
--   certificate.
--   
--   <a>$sel:tags:ClientCertificate'</a>, <a>clientCertificate_tags</a> -
--   The collection of tags. Each tag element is associated with a given
--   resource.
newClientCertificate :: ClientCertificate

-- | An immutable representation of a RestApi resource that can be called
--   by users using Stages. A deployment must be associated with a Stage
--   for it to be callable over the Internet.
--   
--   To create a deployment, call <tt>POST</tt> on the Deployments resource
--   of a RestApi. To view, update, or delete a deployment, call
--   <tt>GET</tt>, <tt>PATCH</tt>, or <tt>DELETE</tt> on the specified
--   deployment resource
--   (<tt>/restapis/{restapi_id}/deployments/{deployment_id}</tt>).
--   
--   RestApi, Deployments, Stage, <a>AWS CLI</a>, <a>AWS SDKs</a>
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe (HashMap Text (HashMap Text MethodSnapshot)) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Deployment

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiSummary:Deployment'</a>, <a>deployment_apiSummary</a> - A
--   summary of the RestApi at the date and time that the deployment
--   resource was created.
--   
--   <a>$sel:createdDate:Deployment'</a>, <a>deployment_createdDate</a> -
--   The date and time that the deployment resource was created.
--   
--   <a>$sel:id:Deployment'</a>, <a>deployment_id</a> - The identifier for
--   the deployment resource.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description for the deployment resource.
newDeployment :: Deployment

-- | The input configuration for a canary deployment.
--   
--   <i>See:</i> <a>newDeploymentCanarySettings</a> smart constructor.
data DeploymentCanarySettings
DeploymentCanarySettings' :: Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Double -> DeploymentCanarySettings

-- | Create a value of <a>DeploymentCanarySettings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageVariableOverrides:DeploymentCanarySettings'</a>,
--   <a>deploymentCanarySettings_stageVariableOverrides</a> - A stage
--   variable overrides used for the canary release deployment. They can
--   override existing stage variables or add new stage variables for the
--   canary release deployment. These stage variables are represented as a
--   string-to-string map between stage variable names and their values.
--   
--   <a>$sel:useStageCache:DeploymentCanarySettings'</a>,
--   <a>deploymentCanarySettings_useStageCache</a> - A Boolean flag to
--   indicate whether the canary release deployment uses the stage cache or
--   not.
--   
--   <a>$sel:percentTraffic:DeploymentCanarySettings'</a>,
--   <a>deploymentCanarySettings_percentTraffic</a> - The percentage
--   (0.0-100.0) of traffic routed to the canary deployment.
newDeploymentCanarySettings :: DeploymentCanarySettings

-- | A documentation part for a targeted API entity.
--   
--   A documentation part consists of a content map (<tt>properties</tt>)
--   and a target (<tt>location</tt>). The target specifies an API entity
--   to which the documentation content applies. The supported API entity
--   types are <tt>API</tt>, <tt>AUTHORIZER</tt>, <tt>MODEL</tt>,
--   <tt>RESOURCE</tt>, <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>,
--   and <tt>RESPONSE_BODY</tt>. Valid <tt>location</tt> fields depend on
--   the API entity type. All valid fields are not required.
--   
--   The content map is a JSON string of API-specific key-value pairs.
--   Although an API can use any shape for the content map, only the
--   OpenAPI-compliant documentation fields will be injected into the
--   associated API entity definition in the exported OpenAPI definition
--   file.
--   
--   <a>Documenting an API</a>, DocumentationParts
--   
--   <i>See:</i> <a>newDocumentationPart</a> smart constructor.
data DocumentationPart
DocumentationPart' :: Maybe DocumentationPartLocation -> Maybe Text -> Maybe Text -> DocumentationPart

-- | Create a value of <a>DocumentationPart</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:DocumentationPart'</a>,
--   <a>documentationPart_location</a> - The location of the API entity to
--   which the documentation applies. Valid fields depend on the targeted
--   API entity type. All the valid location fields are not required. If
--   not explicitly specified, a valid location field is treated as a
--   wildcard and associated documentation content may be inherited by
--   matching entities, unless overridden.
--   
--   <a>$sel:id:DocumentationPart'</a>, <a>documentationPart_id</a> - The
--   DocumentationPart identifier, generated by API Gateway when the
--   <tt>DocumentationPart</tt> is created.
--   
--   <a>$sel:properties:DocumentationPart'</a>,
--   <a>documentationPart_properties</a> - A content map of API-specific
--   key-value pairs describing the targeted API entity. The map must be
--   encoded as a JSON string, e.g., <tt>"{ \"description\": \"The API does
--   ...\" }"</tt>. Only OpenAPI-compliant documentation-related fields
--   from the properties map are exported and, hence, published as part of
--   the API entity definitions, while the original documentation parts are
--   exported in a OpenAPI extension of
--   <tt>x-amazon-apigateway-documentation</tt>.
newDocumentationPart :: DocumentationPart

-- | Specifies the target API entity to which the documentation applies.
--   
--   <i>See:</i> <a>newDocumentationPartLocation</a> smart constructor.
data DocumentationPartLocation
DocumentationPartLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> DocumentationPartType -> DocumentationPartLocation

-- | Create a value of <a>DocumentationPartLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_path</a> - The URL path of the target. It
--   is a valid field for the API entity types of <tt>RESOURCE</tt>,
--   <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. The default
--   value is <tt>/</tt> for the root resource. When an applicable child
--   entity inherits the content of another entity of the same type with
--   more general specifications of the other <tt>location</tt> attributes,
--   the child entity's <tt>path</tt> attribute must match that of the
--   parent entity as a prefix.
--   
--   <a>$sel:name:DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_name</a> - The name of the targeted API
--   entity. It is a valid and required field for the API entity types of
--   <tt>AUTHORIZER</tt>, <tt>MODEL</tt>, <tt>PATH_PARAMETER</tt>,
--   <tt>QUERY_PARAMETER</tt>, <tt>REQUEST_HEADER</tt>,
--   <tt>REQUEST_BODY</tt> and <tt>RESPONSE_HEADER</tt>. It is an invalid
--   field for any other entity type.
--   
--   <a>$sel:method:DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_method</a> - The HTTP verb of a method.
--   It is a valid field for the API entity types of <tt>METHOD</tt>,
--   <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. The default
--   value is <tt>*</tt> for any method. When an applicable child entity
--   inherits the content of an entity of the same type with more general
--   specifications of the other <tt>location</tt> attributes, the child
--   entity's <tt>method</tt> attribute must match that of the parent
--   entity exactly.
--   
--   <a>$sel:statusCode:DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_statusCode</a> - The HTTP status code of
--   a response. It is a valid field for the API entity types of
--   <tt>RESPONSE</tt>, <tt>RESPONSE_HEADER</tt>, and
--   <tt>RESPONSE_BODY</tt>. The default value is <tt>*</tt> for any status
--   code. When an applicable child entity inherits the content of an
--   entity of the same type with more general specifications of the other
--   <tt>location</tt> attributes, the child entity's <tt>statusCode</tt>
--   attribute must match that of the parent entity exactly.
--   
--   <a>$sel:type':DocumentationPartLocation'</a>,
--   <a>documentationPartLocation_type</a> - [Required] The type of API
--   entity to which the documentation content applies. Valid values are
--   <tt>API</tt>, <tt>AUTHORIZER</tt>, <tt>MODEL</tt>, <tt>RESOURCE</tt>,
--   <tt>METHOD</tt>, <tt>PATH_PARAMETER</tt>, <tt>QUERY_PARAMETER</tt>,
--   <tt>REQUEST_HEADER</tt>, <tt>REQUEST_BODY</tt>, <tt>RESPONSE</tt>,
--   <tt>RESPONSE_HEADER</tt>, and <tt>RESPONSE_BODY</tt>. Content
--   inheritance does not apply to any entity of the <tt>API</tt>,
--   <tt>AUTHORIZER</tt>, <tt>METHOD</tt>, <tt>MODEL</tt>,
--   <tt>REQUEST_BODY</tt>, or <tt>RESOURCE</tt> type.
newDocumentationPartLocation :: DocumentationPartType -> DocumentationPartLocation

-- | A snapshot of the documentation of an API.
--   
--   Publishing API documentation involves creating a documentation version
--   associated with an API stage and exporting the versioned documentation
--   to an external (e.g., OpenAPI) file.
--   
--   <a>Documenting an API</a>, DocumentationPart, DocumentationVersions
--   
--   <i>See:</i> <a>newDocumentationVersion</a> smart constructor.
data DocumentationVersion
DocumentationVersion' :: Maybe POSIX -> Maybe Text -> Maybe Text -> DocumentationVersion

-- | Create a value of <a>DocumentationVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:DocumentationVersion'</a>,
--   <a>documentationVersion_createdDate</a> - The date when the API
--   documentation snapshot is created.
--   
--   <a>$sel:version:DocumentationVersion'</a>,
--   <a>documentationVersion_version</a> - The version identifier of the
--   API documentation snapshot.
--   
--   <a>$sel:description:DocumentationVersion'</a>,
--   <a>documentationVersion_description</a> - The description of the API
--   documentation snapshot.
newDocumentationVersion :: DocumentationVersion

-- | Represents a custom domain name as a user-friendly host name of an API
--   (RestApi).
--   
--   When you deploy an API, API Gateway creates a default host name for
--   the API. This default API host name is of the
--   <tt>{restapi-id}.execute-api.{region}.amazonaws.com</tt> format. With
--   the default host name, you can access the API's root resource with the
--   URL of
--   <tt>https://{restapi-id}.execute-api.{region}.amazonaws.com/{stage}/</tt>.
--   When you set up a custom domain name of <tt>apis.example.com</tt> for
--   this API, you can then access the same resource using the URL of the
--   <tt>https://apis.examples.com/myApi</tt>, where <tt>myApi</tt> is the
--   base path mapping (BasePathMapping) of your API under the custom
--   domain name.
--   
--   <a>Set a Custom Host Name for an API</a>
--   
--   <i>See:</i> <a>newDomainName</a> smart constructor.
data DomainName
DomainName' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SecurityPolicy -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe DomainNameStatus -> Maybe (HashMap Text Text) -> DomainName

-- | Create a value of <a>DomainName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regionalHostedZoneId:DomainName'</a>,
--   <a>domainName_regionalHostedZoneId</a> - The region-specific Amazon
--   Route 53 Hosted Zone ID of the regional endpoint. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:certificateName:DomainName'</a>,
--   <a>domainName_certificateName</a> - The name of the certificate that
--   will be used by edge-optimized endpoint for this domain name.
--   
--   <a>$sel:ownershipVerificationCertificateArn:DomainName'</a>,
--   <a>domainName_ownershipVerificationCertificateArn</a> - The ARN of the
--   public certificate issued by ACM to validate ownership of your custom
--   domain. Only required when configuring mutual TLS and using an ACM
--   imported or private CA certificate ARN as the regionalCertificateArn.
--   
--   <a>$sel:regionalCertificateArn:DomainName'</a>,
--   <a>domainName_regionalCertificateArn</a> - The reference to an
--   AWS-managed certificate that will be used for validating the regional
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:certificateArn:DomainName'</a>,
--   <a>domainName_certificateArn</a> - The reference to an AWS-managed
--   certificate that will be used by edge-optimized endpoint for this
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:distributionHostedZoneId:DomainName'</a>,
--   <a>domainName_distributionHostedZoneId</a> - The region-agnostic
--   Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The
--   valid value is <tt>Z2FDTNDATAQYW2</tt> for all the regions. For more
--   information, see <a>Set up a Regional Custom Domain Name</a> and
--   <a>AWS Regions and Endpoints for API Gateway</a>.
--   
--   <a>$sel:securityPolicy:DomainName'</a>,
--   <a>domainName_securityPolicy</a> - The Transport Layer Security (TLS)
--   version + cipher suite for this DomainName. The valid values are
--   <tt>TLS_1_0</tt> and <tt>TLS_1_2</tt>.
--   
--   <a>$sel:domainName:DomainName'</a>, <a>domainName_domainName</a> - The
--   custom domain name as an API host name, for example,
--   <tt>my-api.example.com</tt>.
--   
--   <a>$sel:mutualTlsAuthentication:DomainName'</a>,
--   <a>domainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name. If specified,
--   API Gateway performs two-way authentication between the client and the
--   server. Clients must present a trusted certificate to access your API.
--   
--   <a>$sel:regionalCertificateName:DomainName'</a>,
--   <a>domainName_regionalCertificateName</a> - The name of the
--   certificate that will be used for validating the regional domain name.
--   
--   <a>$sel:regionalDomainName:DomainName'</a>,
--   <a>domainName_regionalDomainName</a> - The domain name associated with
--   the regional endpoint for this custom domain name. You set up this
--   association by adding a DNS record that points the custom domain name
--   to this regional domain name. The regional domain name is returned by
--   API Gateway when you create a regional endpoint.
--   
--   <a>$sel:certificateUploadDate:DomainName'</a>,
--   <a>domainName_certificateUploadDate</a> - The timestamp when the
--   certificate that was used by edge-optimized endpoint for this domain
--   name was uploaded.
--   
--   <a>$sel:distributionDomainName:DomainName'</a>,
--   <a>domainName_distributionDomainName</a> - The domain name of the
--   Amazon CloudFront distribution associated with this custom domain name
--   for an edge-optimized endpoint. You set up this association when
--   adding a DNS record pointing the custom domain name to this
--   distribution name. For more information about CloudFront
--   distributions, see the <a>Amazon CloudFront documentation</a>.
--   
--   <a>$sel:domainNameStatusMessage:DomainName'</a>,
--   <a>domainName_domainNameStatusMessage</a> - An optional text message
--   containing detailed information about status of the DomainName
--   migration.
--   
--   <a>$sel:endpointConfiguration:DomainName'</a>,
--   <a>domainName_endpointConfiguration</a> - The endpoint configuration
--   of this DomainName showing the endpoint types of the domain name.
--   
--   <a>$sel:domainNameStatus:DomainName'</a>,
--   <a>domainName_domainNameStatus</a> - The status of the DomainName
--   migration. The valid values are <tt>AVAILABLE</tt>, <tt>UPDATING</tt>,
--   <tt>PENDING_CERTIFICATE_REIMPORT</tt>, and
--   <tt>PENDING_OWNERSHIP_VERIFICATION</tt>. If the status is
--   <tt>UPDATING</tt>, the domain cannot be modified further until the
--   existing operation is complete. If it is <tt>AVAILABLE</tt>, the
--   domain can be updated.
--   
--   <a>$sel:tags:DomainName'</a>, <a>domainName_tags</a> - The collection
--   of tags. Each tag element is associated with a given resource.
newDomainName :: DomainName

-- | The endpoint configuration to indicate the types of endpoints an API
--   (RestApi) or its custom domain name (DomainName) has.
--   
--   <i>See:</i> <a>newEndpointConfiguration</a> smart constructor.
data EndpointConfiguration
EndpointConfiguration' :: Maybe [EndpointType] -> Maybe [Text] -> EndpointConfiguration

-- | Create a value of <a>EndpointConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:types:EndpointConfiguration'</a>,
--   <a>endpointConfiguration_types</a> - A list of endpoint types of an
--   API (RestApi) or its custom domain name (DomainName). For an
--   edge-optimized API and its custom domain name, the endpoint type is
--   <tt>"EDGE"</tt>. For a regional API and its custom domain name, the
--   endpoint type is <tt>REGIONAL</tt>. For a private API, the endpoint
--   type is <tt>PRIVATE</tt>.
--   
--   <a>$sel:vpcEndpointIds:EndpointConfiguration'</a>,
--   <a>endpointConfiguration_vpcEndpointIds</a> - A list of VpcEndpointIds
--   of an API (RestApi) against which to create Route53 ALIASes. It is
--   only supported for <tt>PRIVATE</tt> endpoint type.
newEndpointConfiguration :: EndpointConfiguration

-- | A gateway response of a given response type and status code, with
--   optional response parameters and mapping templates.
--   
--   For more information about valid gateway response types, see
--   <a>Gateway Response Types Supported by API Gateway</a>
--   
--   <h4>Example: Get a Gateway Response of a given response type</h4>
--   
--   <h5>Request</h5>
--   
--   This example shows how to get a gateway response of the
--   <tt>MISSING_AUTHENTICATION_TOKEN</tt> type.
--   
--   <pre>
--   GET /restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T202516Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=1b52460e3159c1a26cff29093855d50ea141c1c5b937528fecaf60f51129697a Cache-Control: no-cache Postman-Token: 3b2a1ce9-c848-2e26-2e2f-9c2caefbed45
--   </pre>
--   
--   The response type is specified as a URL path.
--   
--   <h5>Response</h5>
--   
--   The successful operation returns the <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:delete": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": false, "responseParameters": { "gatewayresponse.header.x-request-path": "method.request.path.petId", "gatewayresponse.header.Access-Control-Allow-Origin": "'a.b.c'", "gatewayresponse.header.x-request-query": "method.request.querystring.q", "gatewayresponse.header.x-request-header": "method.request.header.Accept" }, "responseTemplates": { "application/json": "{\n \"message\": $context.error.messageString,\n \"type\": \"$context.error.responseType\",\n \"stage\": \"$context.stage\",\n \"resourcePath\": \"$context.resourcePath\",\n \"stageVariables.a\": \"$stageVariables.a\",\n \"statusCode\": \"'404'\"\n}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "404" }
--   </pre>
--   
--   <a>Customize Gateway Responses</a>
--   
--   <i>See:</i> <a>newGatewayResponse</a> smart constructor.
data GatewayResponse
GatewayResponse' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe GatewayResponseType -> Maybe Text -> Maybe (HashMap Text Text) -> GatewayResponse

-- | Create a value of <a>GatewayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultResponse:GatewayResponse'</a>,
--   <a>gatewayResponse_defaultResponse</a> - A Boolean flag to indicate
--   whether this GatewayResponse is the default gateway response
--   (<tt>true</tt>) or not (<tt>false</tt>). A default gateway response is
--   one generated by API Gateway without any customization by an API
--   developer.
--   
--   <a>$sel:responseTemplates:GatewayResponse'</a>,
--   <a>gatewayResponse_responseTemplates</a> - Response templates of the
--   GatewayResponse as a string-to-string map of key-value pairs.
--   
--   <a>$sel:responseType:GatewayResponse'</a>,
--   <a>gatewayResponse_responseType</a> - The response type of the
--   associated GatewayResponse.
--   
--   <a>$sel:statusCode:GatewayResponse'</a>,
--   <a>gatewayResponse_statusCode</a> - The HTTP status code for this
--   GatewayResponse.
--   
--   <a>$sel:responseParameters:GatewayResponse'</a>,
--   <a>gatewayResponse_responseParameters</a> - Response parameters
--   (paths, query strings and headers) of the GatewayResponse as a
--   string-to-string map of key-value pairs.
newGatewayResponse :: GatewayResponse

-- | Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.
--   
--   In the API Gateway console, the built-in Lambda integration is an AWS
--   integration.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegration</a> smart constructor.
data Integration
Integration' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe Text -> Maybe (HashMap Text IntegrationResponse) -> Maybe TlsConfig -> Maybe Text -> Maybe Int -> Maybe IntegrationType -> Maybe ConnectionType -> Maybe [Text] -> Integration

-- | Create a value of <a>Integration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:Integration'</a>, <a>integration_httpMethod</a> -
--   Specifies the integration's HTTP method type.
--   
--   <a>$sel:requestTemplates:Integration'</a>,
--   <a>integration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   
--   <a>$sel:credentials:Integration'</a>, <a>integration_credentials</a> -
--   Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string <tt>arn:aws:iam::\*:user/\*</tt>. To use
--   resource-based permissions on supported AWS services, specify null.
--   
--   <a>$sel:connectionId:Integration'</a>, <a>integration_connectionId</a>
--   - The (<a>id</a>) of the VpcLink used for the integration when
--   <tt>connectionType=VPC_LINK</tt> and undefined, otherwise.
--   
--   <a>$sel:requestParameters:Integration'</a>,
--   <a>integration_requestParameters</a> - A key-value map specifying
--   request parameters that are passed from the method request to the back
--   end. The key is an integration request parameter name and the
--   associated value is a method request parameter value or static value
--   that must be enclosed within single quotes and pre-encoded as required
--   by the back end. The method request parameter value must match the
--   pattern of <tt>method.request.{location}.{name}</tt>, where
--   <tt>location</tt> is <tt>querystring</tt>, <tt>path</tt>, or
--   <tt>header</tt> and <tt>name</tt> must be a valid and unique method
--   request parameter name.
--   
--   <a>$sel:contentHandling:Integration'</a>,
--   <a>integration_contentHandling</a> - Specifies how to handle request
--   payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a request payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a request payload from a binary
--   blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the request payload will be passed
--   through from the method request to integration request without
--   modification, provided that the <tt>passthroughBehavior</tt> is
--   configured to support payload pass-through.
--   
--   <a>$sel:passthroughBehavior:Integration'</a>,
--   <a>integration_passthroughBehavior</a> - Specifies how the method
--   request body of an unmapped content type will be passed through the
--   integration request to the back end without transformation. A content
--   type is unmapped if no mapping template is defined in the integration
--   or the content type does not match any of the mapped content types, as
--   specified in <tt>requestTemplates</tt>. The valid value is one of the
--   following:
--   
--   <ul>
--   <li><tt>WHEN_NO_MATCH</tt>: passes the method request body through the
--   integration request to the back end without transformation when the
--   method request content type does not match any content type associated
--   with the mapping templates defined in the integration request.</li>
--   <li><tt>WHEN_NO_TEMPLATES</tt>: passes the method request body through
--   the integration request to the back end without transformation when no
--   mapping template is defined in the integration request. If a template
--   is defined when this option is selected, the method request of an
--   unmapped content-type will be rejected with an HTTP <tt>415
--   Unsupported Media Type</tt> response.</li>
--   <li><tt>NEVER</tt>: rejects the method request with an HTTP <tt>415
--   Unsupported Media Type</tt> response when either the method request
--   content type does not match any content type associated with the
--   mapping templates defined in the integration request or no mapping
--   template is defined in the integration request.</li>
--   </ul>
--   
--   <a>$sel:uri:Integration'</a>, <a>integration_uri</a> - Specifies
--   Uniform Resource Identifier (URI) of the integration endpoint.
--   
--   <ul>
--   <li>For <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> integrations, the URI
--   must be a fully formed, encoded HTTP(S) URL according to the
--   <a>RFC-3986 specification</a>, for either standard integration, where
--   <tt>connectionType</tt> is not <tt>VPC_LINK</tt>, or private
--   integration, where <tt>connectionType</tt> is <tt>VPC_LINK</tt>. For a
--   private HTTP integration, the URI is not used for routing.</li>
--   <li>For <tt>AWS</tt> or <tt>AWS_PROXY</tt> integrations, the URI is of
--   the form
--   <tt>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</tt>.
--   Here, <tt>{Region}</tt> is the API Gateway region (e.g.,
--   <tt>us-east-1</tt>); <tt>{service}</tt> is the name of the integrated
--   AWS service (e.g., <tt>s3</tt>); and <tt>{subdomain}</tt> is a
--   designated subdomain supported by certain AWS service for fast
--   host-name lookup. <tt>action</tt> can be used for an AWS service
--   action-based API, using an
--   <tt>Action={name}&amp;{p1}={v1}&amp;p2={v2}...</tt> query string. The
--   ensuing <tt>{service_api}</tt> refers to a supported action
--   <tt>{name}</tt> plus any required input parameters. Alternatively,
--   <tt>path</tt> can be used for an AWS service path-based API. The
--   ensuing <tt>service_api</tt> refers to the path to an AWS service
--   resource, including the region of the integrated AWS service, if
--   applicable. For example, for integration with the S3 API of
--   <tt>GetObject</tt>, the <tt>uri</tt> can be either
--   <tt>arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key}</tt>
--   or <tt>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</tt></li>
--   </ul>
--   
--   <a>$sel:integrationResponses:Integration'</a>,
--   <a>integration_integrationResponses</a> - Specifies the integration's
--   responses.
--   
--   <h4>Example: Get integration responses of a method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }
--   </pre>
--   
--   <a>Creating an API</a>
--   
--   <a>$sel:tlsConfig:Integration'</a>, <a>integration_tlsConfig</a> -
--   Specifies the TLS configuration for an integration.
--   
--   <a>$sel:cacheNamespace:Integration'</a>,
--   <a>integration_cacheNamespace</a> - Specifies a group of related
--   cached parameters. By default, API Gateway uses the resource ID as the
--   <tt>cacheNamespace</tt>. You can specify the same
--   <tt>cacheNamespace</tt> across resources to return the same cached
--   data for requests to different resources.
--   
--   <a>$sel:timeoutInMillis:Integration'</a>,
--   <a>integration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds. The default value is 29,000 milliseconds or 29
--   seconds.
--   
--   <a>$sel:type':Integration'</a>, <a>integration_type</a> - Specifies an
--   API method integration type. The valid value is one of the following:
--   
--   <ul>
--   <li><tt>AWS</tt>: for integrating the API method request with an AWS
--   service action, including the Lambda function-invoking action. With
--   the Lambda function-invoking action, this is referred to as the Lambda
--   custom integration. With any other AWS service action, this is known
--   as AWS integration.</li>
--   <li><tt>AWS_PROXY</tt>: for integrating the API method request with
--   the Lambda function-invoking action with the client request passed
--   through as-is. This integration is also referred to as the Lambda
--   proxy integration.</li>
--   <li><tt>HTTP</tt>: for integrating the API method request with an HTTP
--   endpoint, including a private HTTP endpoint within a VPC. This
--   integration is also referred to as the HTTP custom integration.</li>
--   <li><tt>HTTP_PROXY</tt>: for integrating the API method request with
--   an HTTP endpoint, including a private HTTP endpoint within a VPC, with
--   the client request passed through as-is. This is also referred to as
--   the HTTP proxy integration.</li>
--   <li><tt>MOCK</tt>: for integrating the API method request with API
--   Gateway as a "loop-back" endpoint without invoking any backend.</li>
--   </ul>
--   
--   For the HTTP and HTTP proxy integrations, each integration can specify
--   a protocol (<tt>http/https</tt>), port and path. Standard 80 and 443
--   ports are supported as well as custom ports above 1024. An HTTP or
--   HTTP proxy integration with a <tt>connectionType</tt> of
--   <tt>VPC_LINK</tt> is referred to as a private integration and uses a
--   VpcLink to connect API Gateway to a network load balancer of a VPC.
--   
--   <a>$sel:connectionType:Integration'</a>,
--   <a>integration_connectionType</a> - The type of the network connection
--   to the integration endpoint. The valid value is <tt>INTERNET</tt> for
--   connections through the public routable internet or <tt>VPC_LINK</tt>
--   for private connections between API Gateway and a network load
--   balancer in a VPC. The default value is <tt>INTERNET</tt>.
--   
--   <a>$sel:cacheKeyParameters:Integration'</a>,
--   <a>integration_cacheKeyParameters</a> - A list of request parameters
--   whose values API Gateway caches. To be valid values for
--   <tt>cacheKeyParameters</tt>, these parameters must also be specified
--   for Method <tt>requestParameters</tt>.
newIntegration :: Integration

-- | Represents an integration response. The status code must map to an
--   existing MethodResponse, and parameters and templates can be used to
--   transform the back-end response.
--   
--   <a>Creating an API</a>
--   
--   <i>See:</i> <a>newIntegrationResponse</a> smart constructor.
data IntegrationResponse
IntegrationResponse' :: Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> IntegrationResponse

-- | Create a value of <a>IntegrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentHandling:IntegrationResponse'</a>,
--   <a>integrationResponse_contentHandling</a> - Specifies how to handle
--   response payload content type conversions. Supported values are
--   <tt>CONVERT_TO_BINARY</tt> and <tt>CONVERT_TO_TEXT</tt>, with the
--   following behaviors:
--   
--   <ul>
--   <li><tt>CONVERT_TO_BINARY</tt>: Converts a response payload from a
--   Base64-encoded string to the corresponding binary blob.</li>
--   <li><tt>CONVERT_TO_TEXT</tt>: Converts a response payload from a
--   binary blob to a Base64-encoded string.</li>
--   </ul>
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the method response without
--   modification.
--   
--   <a>$sel:responseTemplates:IntegrationResponse'</a>,
--   <a>integrationResponse_responseTemplates</a> - Specifies the templates
--   used to transform the integration response body. Response templates
--   are represented as a key/value map, with a content-type as the key and
--   a template as the value.
--   
--   <a>$sel:selectionPattern:IntegrationResponse'</a>,
--   <a>integrationResponse_selectionPattern</a> - Specifies the regular
--   expression (regex) pattern used to choose an integration response
--   based on the response from the back end. For example, if the success
--   response returns nothing and the error response returns some string,
--   you could use the <tt>.+</tt> regex to match error response. However,
--   make sure that the error response does not contain any newline
--   (<tt>\n</tt>) character in such cases. If the back end is an AWS
--   Lambda function, the AWS Lambda function error header is matched. For
--   all other HTTP and AWS back ends, the HTTP status code is matched.
--   
--   <a>$sel:statusCode:IntegrationResponse'</a>,
--   <a>integrationResponse_statusCode</a> - Specifies the status code that
--   is used to map the integration response to an existing MethodResponse.
--   
--   <a>$sel:responseParameters:IntegrationResponse'</a>,
--   <a>integrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the back end. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of <tt>method.response.header.{name}</tt>, where <tt>name</tt>
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of <tt>integration.response.header.{name}</tt> or
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>name</tt> is a valid and unique response header name and
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.
newIntegrationResponse :: IntegrationResponse

-- | Represents a client-facing interface by which the client calls the API
--   to access back-end resources. A <b>Method</b> resource is integrated
--   with an Integration resource. Both consist of a request and one or
--   more responses. The method request takes the client input that is
--   passed to the back end through the integration request. A method
--   response returns the output from the back end to the client through an
--   integration response. A method request is embodied in a <b>Method</b>
--   resource, whereas an integration request is embodied in an Integration
--   resource. On the other hand, a method response is represented by a
--   MethodResponse resource, whereas an integration response is
--   represented by an IntegrationResponse resource.
--   
--   <h4>Example: Retrive the GET method on a specified resource</h4>
--   
--   <h5>Request</h5>
--   
--   The following example request retrieves the information about the GET
--   method on an API resource (<tt>3kzxbg5sa2</tt>) of an API
--   (<tt>fugvjdxtri</tt>).
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T210259Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": true, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\")" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   In the example above, the response template for the <tt>200 OK</tt>
--   response maps the JSON output from the <tt>ListStreams</tt> action in
--   the back end to an XML output. The mapping template is URL-encoded as
--   <tt>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</tt>
--   and the output is decoded using the <a>$util.urlDecode()</a> helper
--   function.
--   
--   MethodResponse, Integration, IntegrationResponse, Resource, <a>Set up
--   an API's method</a>
--   
--   <i>See:</i> <a>newMethod</a> smart constructor.
data Method
Method' :: Maybe (HashMap Text MethodResponse) -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Bool) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Integration -> Method

-- | Create a value of <a>Method</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodResponses:Method'</a>, <a>method_methodResponses</a> -
--   Gets a method response associated with a given HTTP status code.
--   
--   The collection of method responses are encapsulated in a key-value
--   map, where the key is a response's HTTP status code and the value is a
--   MethodResponse resource that specifies the response returned to the
--   caller from the back end through the integration response.
--   
--   <h4>Example: Get a 200 OK response of a GET method</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }
--   </pre>
--   
--   <a>AWS CLI</a>
--   
--   <a>$sel:httpMethod:Method'</a>, <a>method_httpMethod</a> - The
--   method's HTTP verb.
--   
--   <a>$sel:authorizationScopes:Method'</a>,
--   <a>method_authorizationScopes</a> - A list of authorization scopes
--   configured on the method. The scopes are used with a
--   <tt>COGNITO_USER_POOLS</tt> authorizer to authorize the method
--   invocation. The authorization works by matching the method scopes
--   against the scopes parsed from the access token in the incoming
--   request. The method invocation is authorized if any method scopes
--   matches a claimed scope in the access token. Otherwise, the invocation
--   is not authorized. When the method scope is configured, the client
--   must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:requestValidatorId:Method'</a>,
--   <a>method_requestValidatorId</a> - The identifier of a
--   RequestValidator for request validation.
--   
--   <a>$sel:requestModels:Method'</a>, <a>method_requestModels</a> - A
--   key-value map specifying data schemas, represented by Model resources,
--   (as the mapped value) of the request payloads of given content types
--   (as the mapping key).
--   
--   <a>$sel:requestParameters:Method'</a>, <a>method_requestParameters</a>
--   - A key-value map defining required or optional method request
--   parameters that can be accepted by API Gateway. A key is a method
--   request parameter name matching the pattern of
--   <tt>method.request.{location}.{name}</tt>, where <tt>location</tt> is
--   <tt>querystring</tt>, <tt>path</tt>, or <tt>header</tt> and
--   <tt>name</tt> is a valid and unique parameter name. The value
--   associated with the key is a Boolean flag indicating whether the
--   parameter is required (<tt>true</tt>) or optional (<tt>false</tt>).
--   The method request parameter names defined here are available in
--   Integration to be mapped to integration request parameters or
--   templates.
--   
--   <a>$sel:authorizerId:Method'</a>, <a>method_authorizerId</a> - The
--   identifier of an Authorizer to use on this method. The
--   <tt>authorizationType</tt> must be <tt>CUSTOM</tt>.
--   
--   <a>$sel:operationName:Method'</a>, <a>method_operationName</a> - A
--   human-friendly operation identifier for the method. For example, you
--   can assign the <tt>operationName</tt> of <tt>ListPets</tt> for the
--   <tt>GET /pets</tt> method in the <tt>PetStore</tt> example.
--   
--   <a>$sel:authorizationType:Method'</a>, <a>method_authorizationType</a>
--   - The method's authorization type. Valid values are <tt>NONE</tt> for
--   open access, <tt>AWS_IAM</tt> for using AWS IAM permissions,
--   <tt>CUSTOM</tt> for using a custom authorizer, or
--   <tt>COGNITO_USER_POOLS</tt> for using a Cognito user pool.
--   
--   <a>$sel:apiKeyRequired:Method'</a>, <a>method_apiKeyRequired</a> - A
--   boolean flag specifying whether a valid ApiKey is required to invoke
--   this method.
--   
--   <a>$sel:methodIntegration:Method'</a>, <a>method_methodIntegration</a>
--   - Gets the method's integration responsible for passing the
--   client-submitted request to the back end and performing necessary
--   transformations to make the request compliant with the back end.
--   
--   <h4>Example:</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns a <tt>200 OK</tt> status code and a
--   payload similar to the following:
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op =&gt; $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }
--   </pre>
--   
--   <a>AWS CLI</a>
newMethod :: Method

-- | Represents a method response of a given HTTP status code returned to
--   the client. The method response is passed from the back end through
--   the associated integration response that can be transformed using a
--   mapping template.
--   
--   <h4>Example: A <b>MethodResponse</b> instance of an API</h4>
--   
--   <h5>Request</h5>
--   
--   The example request retrieves a <b>MethodResponse</b> of the 200
--   status code.
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T222952Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   The successful response returns <tt>200 OK</tt> status and a payload
--   as follows:
--   
--   <pre>
--   { "_links": { "curies": { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" }
--   </pre>
--   
--   Method, IntegrationResponse, Integration <a>Creating an API</a>
--   
--   <i>See:</i> <a>newMethodResponse</a> smart constructor.
data MethodResponse
MethodResponse' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Bool) -> MethodResponse

-- | Create a value of <a>MethodResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseModels:MethodResponse'</a>,
--   <a>methodResponse_responseModels</a> - Specifies the Model resources
--   used for the response's content-type. Response models are represented
--   as a key/value map, with a content-type as the key and a Model name as
--   the value.
--   
--   <a>$sel:statusCode:MethodResponse'</a>,
--   <a>methodResponse_statusCode</a> - The method response's status code.
--   
--   <a>$sel:responseParameters:MethodResponse'</a>,
--   <a>methodResponse_responseParameters</a> - A key-value map specifying
--   required or optional response parameters that API Gateway can send
--   back to the caller. A key defines a method response header and the
--   value specifies whether the associated method response header is
--   required or not. The expression of the key must match the pattern
--   <tt>method.response.header.{name}</tt>, where <tt>name</tt> is a valid
--   and unique header name. API Gateway passes certain integration
--   response data to the method response headers specified here according
--   to the mapping you prescribe in the API's IntegrationResponse. The
--   integration response data that can be mapped include an integration
--   response header expressed in
--   <tt>integration.response.header.{name}</tt>, a static value enclosed
--   within a pair of single quotes (e.g., <tt>'application/json'</tt>), or
--   a JSON expression from the back-end response payload in the form of
--   <tt>integration.response.body.{JSON-expression}</tt>, where
--   <tt>JSON-expression</tt> is a valid JSON expression without the
--   <tt>$</tt> prefix.)
newMethodResponse :: MethodResponse

-- | Specifies the method setting properties.
--   
--   <i>See:</i> <a>newMethodSetting</a> smart constructor.
data MethodSetting
MethodSetting' :: Maybe Int -> Maybe Bool -> Maybe Int -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Double -> Maybe UnauthorizedCacheControlHeaderStrategy -> MethodSetting

-- | Create a value of <a>MethodSetting</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheTtlInSeconds:MethodSetting'</a>,
--   <a>methodSetting_cacheTtlInSeconds</a> - Specifies the time to live
--   (TTL), in seconds, for cached responses. The higher the TTL, the
--   longer the response will be cached. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/ttlInSeconds</tt>, and the value is
--   an integer.
--   
--   <a>$sel:dataTraceEnabled:MethodSetting'</a>,
--   <a>methodSetting_dataTraceEnabled</a> - Specifies whether data trace
--   logging is enabled for this method, which affects the log entries
--   pushed to Amazon CloudWatch Logs. The PATCH path for this setting is
--   <tt>/{method_setting_key}/logging/dataTrace</tt>, and the value is a
--   Boolean.
--   
--   <a>$sel:throttlingBurstLimit:MethodSetting'</a>,
--   <a>methodSetting_throttlingBurstLimit</a> - Specifies the throttling
--   burst limit. The PATCH path for this setting is
--   <tt>/{method_setting_key}/throttling/burstLimit</tt>, and the value is
--   an integer.
--   
--   <a>$sel:cacheDataEncrypted:MethodSetting'</a>,
--   <a>methodSetting_cacheDataEncrypted</a> - Specifies whether the cached
--   responses are encrypted. The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/dataEncrypted</tt>, and the value is
--   a Boolean.
--   
--   <a>$sel:loggingLevel:MethodSetting'</a>,
--   <a>methodSetting_loggingLevel</a> - Specifies the logging level for
--   this method, which affects the log entries pushed to Amazon CloudWatch
--   Logs. The PATCH path for this setting is
--   <tt>/{method_setting_key}/logging/loglevel</tt>, and the available
--   levels are <tt>OFF</tt>, <tt>ERROR</tt>, and <tt>INFO</tt>. Choose
--   <tt>ERROR</tt> to write only error-level entries to CloudWatch Logs,
--   or choose <tt>INFO</tt> to include all <tt>ERROR</tt> events as well
--   as extra informational events.
--   
--   <a>$sel:requireAuthorizationForCacheControl:MethodSetting'</a>,
--   <a>methodSetting_requireAuthorizationForCacheControl</a> - Specifies
--   whether authorization is required for a cache invalidation request.
--   The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/requireAuthorizationForCacheControl</tt>,
--   and the value is a Boolean.
--   
--   <a>$sel:cachingEnabled:MethodSetting'</a>,
--   <a>methodSetting_cachingEnabled</a> - Specifies whether responses
--   should be cached and returned for requests. A cache cluster must be
--   enabled on the stage for responses to be cached. The PATCH path for
--   this setting is <tt>/{method_setting_key}/caching/enabled</tt>, and
--   the value is a Boolean.
--   
--   <a>$sel:metricsEnabled:MethodSetting'</a>,
--   <a>methodSetting_metricsEnabled</a> - Specifies whether Amazon
--   CloudWatch metrics are enabled for this method. The PATCH path for
--   this setting is <tt>/{method_setting_key}/metrics/enabled</tt>, and
--   the value is a Boolean.
--   
--   <a>$sel:throttlingRateLimit:MethodSetting'</a>,
--   <a>methodSetting_throttlingRateLimit</a> - Specifies the throttling
--   rate limit. The PATCH path for this setting is
--   <tt>/{method_setting_key}/throttling/rateLimit</tt>, and the value is
--   a double.
--   
--   <a>$sel:unauthorizedCacheControlHeaderStrategy:MethodSetting'</a>,
--   <a>methodSetting_unauthorizedCacheControlHeaderStrategy</a> -
--   Specifies how to handle unauthorized requests for cache invalidation.
--   The PATCH path for this setting is
--   <tt>/{method_setting_key}/caching/unauthorizedCacheControlHeaderStrategy</tt>,
--   and the available values are <tt>FAIL_WITH_403</tt>,
--   <tt>SUCCEED_WITH_RESPONSE_HEADER</tt>,
--   <tt>SUCCEED_WITHOUT_RESPONSE_HEADER</tt>.
newMethodSetting :: MethodSetting

-- | Represents a summary of a Method resource, given a particular date and
--   time.
--   
--   <i>See:</i> <a>newMethodSnapshot</a> smart constructor.
data MethodSnapshot
MethodSnapshot' :: Maybe Text -> Maybe Bool -> MethodSnapshot

-- | Create a value of <a>MethodSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationType:MethodSnapshot'</a>,
--   <a>methodSnapshot_authorizationType</a> - The method's authorization
--   type. Valid values are <tt>NONE</tt> for open access, <tt>AWS_IAM</tt>
--   for using AWS IAM permissions, <tt>CUSTOM</tt> for using a custom
--   authorizer, or <tt>COGNITO_USER_POOLS</tt> for using a Cognito user
--   pool.
--   
--   <a>$sel:apiKeyRequired:MethodSnapshot'</a>,
--   <a>methodSnapshot_apiKeyRequired</a> - Specifies whether the method
--   requires a valid ApiKey.
newMethodSnapshot :: MethodSnapshot

-- | Represents the data structure of a method's request or response
--   payload.
--   
--   A request model defines the data structure of the client-supplied
--   request payload. A response model defines the data structure of the
--   response payload returned by the back end. Although not required,
--   models are useful for mapping payloads between the front end and back
--   end.
--   
--   A model is used for generating an API's SDK, validating the input
--   request body, and creating a skeletal mapping template.
--   
--   Method, MethodResponse, <a>Models and Mappings</a>
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Model

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:Model'</a>, <a>model_schema</a> - The schema for the
--   model. For <tt>application/json</tt> models, this should be <a>JSON
--   schema draft 4</a> model. Do not include "\*/" characters in the
--   description of any properties because such "\*/" characters may be
--   interpreted as the closing marker for comments in some languages, such
--   as Java or JavaScript, causing the installation of your API's SDK
--   generated by API Gateway to fail.
--   
--   <a>$sel:name:Model'</a>, <a>model_name</a> - The name of the model.
--   Must be an alphanumeric string.
--   
--   <a>$sel:id:Model'</a>, <a>model_id</a> - The identifier for the model
--   resource.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The
--   description of the model.
--   
--   <a>$sel:contentType:Model'</a>, <a>model_contentType</a> - The
--   content-type for the model.
newModel :: Model

-- | If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your custom domain name.
--   
--   <i>See:</i> <a>newMutualTlsAuthentication</a> smart constructor.
data MutualTlsAuthentication
MutualTlsAuthentication' :: Maybe [Text] -> Maybe Text -> Maybe Text -> MutualTlsAuthentication

-- | Create a value of <a>MutualTlsAuthentication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:truststoreWarnings:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreWarnings</a> - A list of warnings
--   that API Gateway returns while processing your truststore. Invalid
--   certificates produce warnings. Mutual TLS is still enabled, but some
--   clients might not be able to access your API. To resolve warnings,
--   upload a new truststore to S3, and then update you domain name to use
--   the new version.
--   
--   <a>$sel:truststoreUri:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreUri</a> - An Amazon S3 URL that
--   specifies the truststore for mutual TLS authentication, for example
--   <tt>s3://bucket-name/key-name</tt>. The truststore can contain
--   certificates from public or private certificate authorities. To update
--   the truststore, upload a new version to S3, and then update your
--   custom domain name to use the new version. To update the truststore,
--   you must have permissions to access the S3 object.
--   
--   <a>$sel:truststoreVersion:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreVersion</a> - The version of the
--   S3 object that contains your truststore. To specify a version, you
--   must have versioning enabled for the S3 bucket.
newMutualTlsAuthentication :: MutualTlsAuthentication

-- | If specified, API Gateway performs two-way authentication between the
--   client and the server. Clients must present a trusted certificate to
--   access your custom domain name.
--   
--   <i>See:</i> <a>newMutualTlsAuthenticationInput</a> smart constructor.
data MutualTlsAuthenticationInput
MutualTlsAuthenticationInput' :: Maybe Text -> Maybe Text -> MutualTlsAuthenticationInput

-- | Create a value of <a>MutualTlsAuthenticationInput</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:truststoreUri:MutualTlsAuthenticationInput'</a>,
--   <a>mutualTlsAuthenticationInput_truststoreUri</a> - An Amazon S3
--   resource ARN that specifies the truststore for mutual TLS
--   authentication, for example, <tt>s3://bucket-name/key-name</tt>. The
--   truststore can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
--   
--   <a>$sel:truststoreVersion:MutualTlsAuthenticationInput'</a>,
--   <a>mutualTlsAuthenticationInput_truststoreVersion</a> - The version of
--   the S3 object that contains your truststore. To specify a version, you
--   must have versioning enabled for the S3 bucket.
newMutualTlsAuthenticationInput :: MutualTlsAuthenticationInput

-- | A single patch operation to apply to the specified resource. Please
--   refer to http://tools.ietf.org/html/rfc6902#section-4 for an
--   explanation of how each operation is used.
--   
--   <i>See:</i> <a>newPatchOperation</a> smart constructor.
data PatchOperation
PatchOperation' :: Maybe Op -> Maybe Text -> Maybe Text -> Maybe Text -> PatchOperation

-- | Create a value of <a>PatchOperation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:op:PatchOperation'</a>, <a>patchOperation_op</a> - An update
--   operation to be performed with this PATCH request. The valid value can
--   be <tt>add</tt>, <tt>remove</tt>, <tt>replace</tt> or <tt>copy</tt>.
--   Not all valid operations are supported for a given resource. Support
--   of the operations depends on specific operational contexts. Attempts
--   to apply an unsupported operation on a resource will return an error
--   message.
--   
--   <a>$sel:path:PatchOperation'</a>, <a>patchOperation_path</a> - The
--   <tt>op</tt> operation's target, as identified by a <a>JSON Pointer</a>
--   value that references a location within the targeted resource. For
--   example, if the target resource has an updateable property of
--   <tt>{"name":"value"}</tt>, the path for this property is
--   <tt>/name</tt>. If the <tt>name</tt> property value is a JSON object
--   (e.g., <tt>{"name": {"child/name": "child-value"}}</tt>), the path for
--   the <tt>child/name</tt> property will be <tt>/name/child~1name</tt>.
--   Any slash ("/") character appearing in path names must be escaped with
--   "~1", as shown in the example above. Each <tt>op</tt> operation can
--   have only one <tt>path</tt> associated with it.
--   
--   <a>$sel:value:PatchOperation'</a>, <a>patchOperation_value</a> - The
--   new target value of the update operation. It is applicable for the
--   <tt>add</tt> or <tt>replace</tt> operation. When using AWS CLI to
--   update a property of a JSON value, enclose the JSON object with a pair
--   of single quotes in a Linux shell, e.g., '{"a": ...}'. In a Windows
--   shell, see <a>Using JSON for Parameters</a>.
--   
--   <a>$sel:from:PatchOperation'</a>, <a>patchOperation_from</a> - The
--   <tt>copy</tt> update operation's source as identified by a
--   <tt>JSON-Pointer</tt> value referencing the location within the
--   targeted resource to copy the value from. For example, to promote a
--   canary deployment, you copy the canary deployment ID to the affiliated
--   deployment ID by calling a PATCH request on a Stage resource with
--   <tt>"op":"copy"</tt>, <tt>"from":"/canarySettings/deploymentId"</tt>
--   and <tt>"path":"/deploymentId"</tt>.
newPatchOperation :: PatchOperation

-- | Quotas configured for a usage plan.
--   
--   <i>See:</i> <a>newQuotaSettings</a> smart constructor.
data QuotaSettings
QuotaSettings' :: Maybe Int -> Maybe QuotaPeriodType -> Maybe Int -> QuotaSettings

-- | Create a value of <a>QuotaSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offset:QuotaSettings'</a>, <a>quotaSettings_offset</a> - The
--   day that a time period starts. For example, with a time period of
--   <tt>WEEK</tt>, an offset of <tt>0</tt> starts on Sunday, and an offset
--   of <tt>1</tt> starts on Monday.
--   
--   <a>$sel:period:QuotaSettings'</a>, <a>quotaSettings_period</a> - The
--   time period in which the limit applies. Valid values are "DAY", "WEEK"
--   or "MONTH".
--   
--   <a>$sel:limit:QuotaSettings'</a>, <a>quotaSettings_limit</a> - The
--   maximum number of requests that can be made in a given time period.
newQuotaSettings :: QuotaSettings

-- | A set of validation rules for incoming Method requests.
--   
--   In OpenAPI, a RequestValidator of an API is defined by the
--   <a>x-amazon-apigateway-request-validators.requestValidator</a> object.
--   It the referenced using the
--   <a>x-amazon-apigateway-request-validator</a> property.
--   
--   <a>Enable Basic Request Validation in API Gateway</a>
--   
--   <i>See:</i> <a>newRequestValidator</a> smart constructor.
data RequestValidator
RequestValidator' :: Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> RequestValidator

-- | Create a value of <a>RequestValidator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validateRequestParameters:RequestValidator'</a>,
--   <a>requestValidator_validateRequestParameters</a> - A Boolean flag to
--   indicate whether to validate request parameters (<tt>true</tt>) or not
--   (<tt>false</tt>).
--   
--   <a>$sel:name:RequestValidator'</a>, <a>requestValidator_name</a> - The
--   name of this RequestValidator
--   
--   <a>$sel:validateRequestBody:RequestValidator'</a>,
--   <a>requestValidator_validateRequestBody</a> - A Boolean flag to
--   indicate whether to validate a request body according to the
--   configured Model schema.
--   
--   <a>$sel:id:RequestValidator'</a>, <a>requestValidator_id</a> - The
--   identifier of this RequestValidator.
newRequestValidator :: RequestValidator

-- | Represents an API resource.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Method) -> Maybe Text -> Resource

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathPart:Resource'</a>, <a>resource_pathPart</a> - The last
--   path segment for this resource.
--   
--   <a>$sel:path:Resource'</a>, <a>resource_path</a> - The full path for
--   this resource.
--   
--   <a>$sel:id:Resource'</a>, <a>resource_id</a> - The resource's
--   identifier.
--   
--   <a>$sel:resourceMethods:Resource'</a>, <a>resource_resourceMethods</a>
--   - Gets an API resource's method of a given HTTP verb.
--   
--   The resource methods are a map of methods indexed by methods' HTTP
--   verbs enabled on the resource. This method map is included in the
--   <tt>200 OK</tt> response of the <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}</tt> or <tt>GET
--   /restapis/{restapi_id}/resources/{resource_id}?embed=methods</tt>
--   request.
--   
--   <h4>Example: Get the GET method of an API resource</h4>
--   
--   <h5>Request</h5>
--   
--   <pre>
--   GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}
--   </pre>
--   
--   <h5>Response</h5>
--   
--   <pre>
--   { "_links": { "curies": [ { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }
--   </pre>
--   
--   If the <tt>OPTIONS</tt> is enabled on the resource, you can follow the
--   example here to get that method. Just replace the <tt>GET</tt> of the
--   last path segment in the request URL with <tt>OPTIONS</tt>.
--   
--   <a>$sel:parentId:Resource'</a>, <a>resource_parentId</a> - The parent
--   resource's identifier.
newResource :: Resource

-- | Represents a REST API.
--   
--   <a>Create an API</a>
--   
--   <i>See:</i> <a>newRestApi</a> smart constructor.
data RestApi
RestApi' :: Maybe Int -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ApiKeySourceType -> Maybe Text -> Maybe Text -> Maybe EndpointConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> RestApi

-- | Create a value of <a>RestApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimumCompressionSize:RestApi'</a>,
--   <a>restApi_minimumCompressionSize</a> - A nullable integer that is
--   used to enable compression (with non-negative between 0 and 10485760
--   (10M) bytes, inclusive) or disable compression (with a null value) on
--   an API. When compression is enabled, compression or decompression is
--   not applied on the payload if the payload size is smaller than this
--   value. Setting it to zero allows compression for any payload size.
--   
--   <a>$sel:disableExecuteApiEndpoint:RestApi'</a>,
--   <a>restApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default <tt>execute-api</tt>
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:binaryMediaTypes:RestApi'</a>, <a>restApi_binaryMediaTypes</a>
--   - The list of binary media types supported by the RestApi. By default,
--   the RestApi supports only UTF-8-encoded text payloads.
--   
--   <a>$sel:warnings:RestApi'</a>, <a>restApi_warnings</a> - The warning
--   messages reported when <tt>failonwarnings</tt> is turned on during API
--   import.
--   
--   <a>$sel:createdDate:RestApi'</a>, <a>restApi_createdDate</a> - The
--   timestamp when the API was created.
--   
--   <a>$sel:name:RestApi'</a>, <a>restApi_name</a> - The API's name.
--   
--   <a>$sel:version:RestApi'</a>, <a>restApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySource:RestApi'</a>, <a>restApi_apiKeySource</a> - The
--   source of the API key for metering requests according to a usage plan.
--   Valid values are:
--   
--   <ul>
--   <li><tt>HEADER</tt> to read the API key from the <tt>X-API-Key</tt>
--   header of a request.</li>
--   <li><tt>AUTHORIZER</tt> to read the API key from the
--   <tt>UsageIdentifierKey</tt> from a custom authorizer.</li>
--   </ul>
--   
--   <a>$sel:id:RestApi'</a>, <a>restApi_id</a> - The API's identifier.
--   This identifier is unique across all of your APIs in API Gateway.
--   
--   <a>$sel:policy:RestApi'</a>, <a>restApi_policy</a> - A stringified
--   JSON policy document that applies to this RestApi regardless of the
--   caller and Method configuration.
--   
--   <a>$sel:endpointConfiguration:RestApi'</a>,
--   <a>restApi_endpointConfiguration</a> - The endpoint configuration of
--   this RestApi showing the endpoint types of the API.
--   
--   <a>$sel:description:RestApi'</a>, <a>restApi_description</a> - The
--   API's description.
--   
--   <a>$sel:tags:RestApi'</a>, <a>restApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newRestApi :: RestApi

-- | A configuration property of an SDK type.
--   
--   <i>See:</i> <a>newSdkConfigurationProperty</a> smart constructor.
data SdkConfigurationProperty
SdkConfigurationProperty' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> SdkConfigurationProperty

-- | Create a value of <a>SdkConfigurationProperty</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:friendlyName:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_friendlyName</a> - The user-friendly name
--   of an SdkType configuration property.
--   
--   <a>$sel:required:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_required</a> - A boolean flag of an
--   SdkType configuration property to indicate if the associated SDK
--   configuration property is required (<tt>true</tt>) or not
--   (<tt>false</tt>).
--   
--   <a>$sel:name:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_name</a> - The name of a an SdkType
--   configuration property.
--   
--   <a>$sel:defaultValue:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_defaultValue</a> - The default value of an
--   SdkType configuration property.
--   
--   <a>$sel:description:SdkConfigurationProperty'</a>,
--   <a>sdkConfigurationProperty_description</a> - The description of an
--   SdkType configuration property.
newSdkConfigurationProperty :: SdkConfigurationProperty

-- | A type of SDK that API Gateway can generate.
--   
--   <i>See:</i> <a>newSdkType</a> smart constructor.
data SdkType
SdkType' :: Maybe Text -> Maybe [SdkConfigurationProperty] -> Maybe Text -> Maybe Text -> SdkType

-- | Create a value of <a>SdkType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:friendlyName:SdkType'</a>, <a>sdkType_friendlyName</a> - The
--   user-friendly name of an SdkType instance.
--   
--   <a>$sel:configurationProperties:SdkType'</a>,
--   <a>sdkType_configurationProperties</a> - A list of configuration
--   properties of an SdkType.
--   
--   <a>$sel:id:SdkType'</a>, <a>sdkType_id</a> - The identifier of an
--   SdkType instance.
--   
--   <a>$sel:description:SdkType'</a>, <a>sdkType_description</a> - The
--   description of an SdkType.
newSdkType :: SdkType

-- | Represents a unique identifier for a version of a deployed RestApi
--   that is callable by users.
--   
--   <a>Deploy an API</a>
--   
--   <i>See:</i> <a>newStage</a> smart constructor.
data Stage
Stage' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe AccessLogSettings -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe CacheClusterStatus -> Maybe (HashMap Text MethodSetting) -> Maybe POSIX -> Maybe CacheClusterSize -> Maybe Text -> Maybe CanarySettings -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Stage

-- | Create a value of <a>Stage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Stage'</a>, <a>stage_deploymentId</a> - The
--   identifier of the Deployment that the stage points to.
--   
--   <a>$sel:variables:Stage'</a>, <a>stage_variables</a> - A map that
--   defines the stage variables for a Stage resource. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   <tt>[A-Za-z0-9-._~:/?#&amp;=,]+</tt>.
--   
--   <a>$sel:accessLogSettings:Stage'</a>, <a>stage_accessLogSettings</a> -
--   Settings for logging access in this stage.
--   
--   <a>$sel:documentationVersion:Stage'</a>,
--   <a>stage_documentationVersion</a> - The version of the associated API
--   documentation.
--   
--   <a>$sel:clientCertificateId:Stage'</a>,
--   <a>stage_clientCertificateId</a> - The identifier of a client
--   certificate for an API stage.
--   
--   <a>$sel:tracingEnabled:Stage'</a>, <a>stage_tracingEnabled</a> -
--   Specifies whether active tracing with X-ray is enabled for the Stage.
--   
--   <a>$sel:createdDate:Stage'</a>, <a>stage_createdDate</a> - The
--   timestamp when the stage was created.
--   
--   <a>$sel:cacheClusterStatus:Stage'</a>, <a>stage_cacheClusterStatus</a>
--   - The status of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:methodSettings:Stage'</a>, <a>stage_methodSettings</a> - A map
--   that defines the method settings for a Stage resource. Keys
--   (designated as <tt>/{method_setting_key</tt> below) are method paths
--   defined as <tt>{resource_path}/{http_method}</tt> for an individual
--   method override, or <tt>/\*/\*</tt> for overriding all methods in the
--   stage.
--   
--   <a>$sel:lastUpdatedDate:Stage'</a>, <a>stage_lastUpdatedDate</a> - The
--   timestamp when the stage last updated.
--   
--   <a>$sel:cacheClusterSize:Stage'</a>, <a>stage_cacheClusterSize</a> -
--   The size of the cache cluster for the stage, if enabled.
--   
--   <a>$sel:webAclArn:Stage'</a>, <a>stage_webAclArn</a> - The ARN of the
--   WebAcl associated with the Stage.
--   
--   <a>$sel:canarySettings:Stage'</a>, <a>stage_canarySettings</a> -
--   Settings for the canary deployment in this stage.
--   
--   <a>$sel:cacheClusterEnabled:Stage'</a>,
--   <a>stage_cacheClusterEnabled</a> - Specifies whether a cache cluster
--   is enabled for the stage.
--   
--   <a>$sel:stageName:Stage'</a>, <a>stage_stageName</a> - The name of the
--   stage is the first path segment in the Uniform Resource Identifier
--   (URI) of a call to API Gateway. Stage names can only contain
--   alphanumeric characters, hyphens, and underscores. Maximum length is
--   128 characters.
--   
--   <a>$sel:description:Stage'</a>, <a>stage_description</a> - The stage's
--   description.
--   
--   <a>$sel:tags:Stage'</a>, <a>stage_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
newStage :: Stage

-- | A reference to a unique stage identified in the format
--   <tt>{restApiId}/{stage}</tt>.
--   
--   <i>See:</i> <a>newStageKey</a> smart constructor.
data StageKey
StageKey' :: Maybe Text -> Maybe Text -> StageKey

-- | Create a value of <a>StageKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:restApiId:StageKey'</a>, <a>stageKey_restApiId</a> - The
--   string identifier of the associated RestApi.
--   
--   <a>$sel:stageName:StageKey'</a>, <a>stageKey_stageName</a> - The stage
--   name associated with the stage key.
newStageKey :: StageKey

-- | The API request rate limits.
--   
--   <i>See:</i> <a>newThrottleSettings</a> smart constructor.
data ThrottleSettings
ThrottleSettings' :: Maybe Int -> Maybe Double -> ThrottleSettings

-- | Create a value of <a>ThrottleSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:burstLimit:ThrottleSettings'</a>,
--   <a>throttleSettings_burstLimit</a> - The API request burst limit, the
--   maximum rate limit over a time ranging from one to a few seconds,
--   depending upon whether the underlying token bucket is at its full
--   capacity.
--   
--   <a>$sel:rateLimit:ThrottleSettings'</a>,
--   <a>throttleSettings_rateLimit</a> - The API request steady-state rate
--   limit.
newThrottleSettings :: ThrottleSettings

-- | <i>See:</i> <a>newTlsConfig</a> smart constructor.
data TlsConfig
TlsConfig' :: Maybe Bool -> TlsConfig

-- | Create a value of <a>TlsConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:insecureSkipVerification:TlsConfig'</a>,
--   <a>tlsConfig_insecureSkipVerification</a> - Specifies whether or not
--   API Gateway skips verification that the certificate for an integration
--   endpoint is issued by a <a>supported certificate authority</a>. This
--   isn’t recommended, but it enables you to use certificates that are
--   signed by private certificate authorities, or certificates that are
--   self-signed. If enabled, API Gateway still performs basic certificate
--   validation, which includes checking the certificate's expiration date,
--   hostname, and presence of a root certificate authority. Supported only
--   for <tt>HTTP</tt> and <tt>HTTP_PROXY</tt> integrations.
newTlsConfig :: TlsConfig

-- | Represents the usage data of a usage plan.
--   
--   <a>Create and Use Usage Plans</a>, <a>Manage Usage in a Usage Plan</a>
--   
--   <i>See:</i> <a>newUsage</a> smart constructor.
data Usage
Usage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text [[Integer]]) -> Maybe Text -> Maybe Text -> Usage

-- | Create a value of <a>Usage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:usagePlanId:Usage'</a>, <a>usage_usagePlanId</a> - The plan Id
--   associated with this usage data.
--   
--   <a>$sel:endDate:Usage'</a>, <a>usage_endDate</a> - The ending date of
--   the usage data.
--   
--   <a>$sel:items:Usage'</a>, <a>usage_items</a> - The usage data, as
--   daily logs of used and remaining quotas, over the specified time
--   interval indexed over the API keys in a usage plan. For example,
--   <tt>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90], [100,
--   10]]}</tt>, where <tt>{api_key}</tt> stands for an API key value and
--   the daily log entry is of the format <tt>[used quota, remaining
--   quota]</tt>.
--   
--   <a>$sel:startDate:Usage'</a>, <a>usage_startDate</a> - The starting
--   date of the usage data.
--   
--   <a>$sel:position:Usage'</a>, <a>usage_position</a> - Undocumented
--   member.
newUsage :: Usage

-- | Represents a usage plan than can specify who can assess associated API
--   stages with specified request limits and quotas.
--   
--   In a usage plan, you associate an API by specifying the API's Id and a
--   stage name of the specified API. You add plan customers by adding API
--   keys to the plan.
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlan</a> smart constructor.
data UsagePlan
UsagePlan' :: Maybe [ApiStage] -> Maybe Text -> Maybe Text -> Maybe ThrottleSettings -> Maybe QuotaSettings -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> UsagePlan

-- | Create a value of <a>UsagePlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiStages:UsagePlan'</a>, <a>usagePlan_apiStages</a> - The
--   associated API stages of a usage plan.
--   
--   <a>$sel:name:UsagePlan'</a>, <a>usagePlan_name</a> - The name of a
--   usage plan.
--   
--   <a>$sel:id:UsagePlan'</a>, <a>usagePlan_id</a> - The identifier of a
--   UsagePlan resource.
--   
--   <a>$sel:throttle:UsagePlan'</a>, <a>usagePlan_throttle</a> - The
--   request throttle limits of a usage plan.
--   
--   <a>$sel:quota:UsagePlan'</a>, <a>usagePlan_quota</a> - The maximum
--   number of permitted requests per a given unit time interval.
--   
--   <a>$sel:description:UsagePlan'</a>, <a>usagePlan_description</a> - The
--   description of a usage plan.
--   
--   <a>$sel:productCode:UsagePlan'</a>, <a>usagePlan_productCode</a> - The
--   AWS Markeplace product identifier to associate with the usage plan as
--   a SaaS product on AWS Marketplace.
--   
--   <a>$sel:tags:UsagePlan'</a>, <a>usagePlan_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newUsagePlan :: UsagePlan

-- | Represents a usage plan key to identify a plan customer.
--   
--   To associate an API stage with a selected API key in a usage plan, you
--   must create a UsagePlanKey resource to represent the selected ApiKey.
--   
--   "
--   
--   <a>Create and Use Usage Plans</a>
--   
--   <i>See:</i> <a>newUsagePlanKey</a> smart constructor.
data UsagePlanKey
UsagePlanKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UsagePlanKey

-- | Create a value of <a>UsagePlanKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:UsagePlanKey'</a>, <a>usagePlanKey_value</a> - The value
--   of a usage plan key.
--   
--   <a>$sel:name:UsagePlanKey'</a>, <a>usagePlanKey_name</a> - The name of
--   a usage plan key.
--   
--   <a>$sel:id:UsagePlanKey'</a>, <a>usagePlanKey_id</a> - The Id of a
--   usage plan key.
--   
--   <a>$sel:type':UsagePlanKey'</a>, <a>usagePlanKey_type</a> - The type
--   of a usage plan key. Currently, the valid key type is
--   <tt>API_KEY</tt>.
newUsagePlanKey :: UsagePlanKey

-- | An API Gateway VPC link for a RestApi to access resources in an Amazon
--   Virtual Private Cloud (VPC).
--   
--   To enable access to a resource in an Amazon Virtual Private Cloud
--   through Amazon API Gateway, you, as an API developer, create a VpcLink
--   resource targeted for one or more network load balancers of the VPC
--   and then integrate an API method with a private integration that uses
--   the VpcLink. The private integration has an integration type of
--   <tt>HTTP</tt> or <tt>HTTP_PROXY</tt> and has a connection type of
--   <tt>VPC_LINK</tt>. The integration uses the <tt>connectionId</tt>
--   property to identify the VpcLink used.
--   
--   <i>See:</i> <a>newVpcLink</a> smart constructor.
data VpcLink
VpcLink' :: Maybe VpcLinkStatus -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> VpcLink

-- | Create a value of <a>VpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VpcLink'</a>, <a>vpcLink_status</a> - The status of the
--   VPC link. The valid values are <tt>AVAILABLE</tt>, <tt>PENDING</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. Deploying an API will wait if
--   the status is <tt>PENDING</tt> and will fail if the status is
--   <tt>DELETING</tt>.
--   
--   <a>$sel:targetArns:VpcLink'</a>, <a>vpcLink_targetArns</a> - The ARN
--   of the network load balancer of the VPC targeted by the VPC link. The
--   network load balancer must be owned by the same AWS account of the API
--   owner.
--   
--   <a>$sel:name:VpcLink'</a>, <a>vpcLink_name</a> - The name used to
--   label and identify the VPC link.
--   
--   <a>$sel:statusMessage:VpcLink'</a>, <a>vpcLink_statusMessage</a> - A
--   description about the VPC link status.
--   
--   <a>$sel:id:VpcLink'</a>, <a>vpcLink_id</a> - The identifier of the
--   VpcLink. It is used in an Integration to reference this VpcLink.
--   
--   <a>$sel:description:VpcLink'</a>, <a>vpcLink_description</a> - The
--   description of the VPC link.
--   
--   <a>$sel:tags:VpcLink'</a>, <a>vpcLink_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
newVpcLink :: VpcLink
