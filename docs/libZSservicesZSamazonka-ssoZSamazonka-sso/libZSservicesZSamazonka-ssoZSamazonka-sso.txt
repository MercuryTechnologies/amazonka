-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-ssoZSamazonka-sso
@version 2.0


module Amazonka.SSO.Types.AccountInfo

-- | Provides information about your AWS account.
--   
--   <i>See:</i> <a>newAccountInfo</a> smart constructor.
data AccountInfo
AccountInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> AccountInfo

-- | The display name of the AWS account that is assigned to the user.
[$sel:accountName:AccountInfo'] :: AccountInfo -> Maybe Text

-- | The identifier of the AWS account that is assigned to the user.
[$sel:accountId:AccountInfo'] :: AccountInfo -> Maybe Text

-- | The email address of the AWS account that is assigned to the user.
[$sel:emailAddress:AccountInfo'] :: AccountInfo -> Maybe Text

-- | Create a value of <a>AccountInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountName:AccountInfo'</a>, <a>accountInfo_accountName</a> -
--   The display name of the AWS account that is assigned to the user.
--   
--   <a>$sel:accountId:AccountInfo'</a>, <a>accountInfo_accountId</a> - The
--   identifier of the AWS account that is assigned to the user.
--   
--   <a>$sel:emailAddress:AccountInfo'</a>, <a>accountInfo_emailAddress</a>
--   - The email address of the AWS account that is assigned to the user.
newAccountInfo :: AccountInfo

-- | The display name of the AWS account that is assigned to the user.
accountInfo_accountName :: Lens' AccountInfo (Maybe Text)

-- | The identifier of the AWS account that is assigned to the user.
accountInfo_accountId :: Lens' AccountInfo (Maybe Text)

-- | The email address of the AWS account that is assigned to the user.
accountInfo_emailAddress :: Lens' AccountInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.SSO.Types.AccountInfo.AccountInfo
instance GHC.Show.Show Amazonka.SSO.Types.AccountInfo.AccountInfo
instance GHC.Read.Read Amazonka.SSO.Types.AccountInfo.AccountInfo
instance GHC.Classes.Eq Amazonka.SSO.Types.AccountInfo.AccountInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SSO.Types.AccountInfo.AccountInfo
instance Data.Hashable.Class.Hashable Amazonka.SSO.Types.AccountInfo.AccountInfo
instance Control.DeepSeq.NFData Amazonka.SSO.Types.AccountInfo.AccountInfo


module Amazonka.SSO.Types.RoleCredentials

-- | Provides information about the role credentials that are assigned to
--   the user.
--   
--   <i>See:</i> <a>newRoleCredentials</a> smart constructor.
data RoleCredentials
RoleCredentials' :: Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Maybe Integer -> Maybe Text -> RoleCredentials

-- | The key that is used to sign the request. For more information, see
--   <a>Using Temporary Security Credentials to Request Access to AWS
--   Resources</a> in the <i>AWS IAM User Guide</i>.
[$sel:secretAccessKey:RoleCredentials'] :: RoleCredentials -> Maybe (Sensitive Text)

-- | The token used for temporary credentials. For more information, see
--   <a>Using Temporary Security Credentials to Request Access to AWS
--   Resources</a> in the <i>AWS IAM User Guide</i>.
[$sel:sessionToken:RoleCredentials'] :: RoleCredentials -> Maybe (Sensitive Text)

-- | The date on which temporary security credentials expire.
[$sel:expiration:RoleCredentials'] :: RoleCredentials -> Maybe Integer

-- | The identifier used for the temporary security credentials. For more
--   information, see <a>Using Temporary Security Credentials to Request
--   Access to AWS Resources</a> in the <i>AWS IAM User Guide</i>.
[$sel:accessKeyId:RoleCredentials'] :: RoleCredentials -> Maybe Text

-- | Create a value of <a>RoleCredentials</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretAccessKey:RoleCredentials'</a>,
--   <a>roleCredentials_secretAccessKey</a> - The key that is used to sign
--   the request. For more information, see <a>Using Temporary Security
--   Credentials to Request Access to AWS Resources</a> in the <i>AWS IAM
--   User Guide</i>.
--   
--   <a>$sel:sessionToken:RoleCredentials'</a>,
--   <a>roleCredentials_sessionToken</a> - The token used for temporary
--   credentials. For more information, see <a>Using Temporary Security
--   Credentials to Request Access to AWS Resources</a> in the <i>AWS IAM
--   User Guide</i>.
--   
--   <a>$sel:expiration:RoleCredentials'</a>,
--   <a>roleCredentials_expiration</a> - The date on which temporary
--   security credentials expire.
--   
--   <a>$sel:accessKeyId:RoleCredentials'</a>,
--   <a>roleCredentials_accessKeyId</a> - The identifier used for the
--   temporary security credentials. For more information, see <a>Using
--   Temporary Security Credentials to Request Access to AWS Resources</a>
--   in the <i>AWS IAM User Guide</i>.
newRoleCredentials :: RoleCredentials

-- | The key that is used to sign the request. For more information, see
--   <a>Using Temporary Security Credentials to Request Access to AWS
--   Resources</a> in the <i>AWS IAM User Guide</i>.
roleCredentials_secretAccessKey :: Lens' RoleCredentials (Maybe Text)

-- | The token used for temporary credentials. For more information, see
--   <a>Using Temporary Security Credentials to Request Access to AWS
--   Resources</a> in the <i>AWS IAM User Guide</i>.
roleCredentials_sessionToken :: Lens' RoleCredentials (Maybe Text)

-- | The date on which temporary security credentials expire.
roleCredentials_expiration :: Lens' RoleCredentials (Maybe Integer)

-- | The identifier used for the temporary security credentials. For more
--   information, see <a>Using Temporary Security Credentials to Request
--   Access to AWS Resources</a> in the <i>AWS IAM User Guide</i>.
roleCredentials_accessKeyId :: Lens' RoleCredentials (Maybe Text)
instance GHC.Generics.Generic Amazonka.SSO.Types.RoleCredentials.RoleCredentials
instance GHC.Show.Show Amazonka.SSO.Types.RoleCredentials.RoleCredentials
instance GHC.Classes.Eq Amazonka.SSO.Types.RoleCredentials.RoleCredentials
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SSO.Types.RoleCredentials.RoleCredentials
instance Data.Hashable.Class.Hashable Amazonka.SSO.Types.RoleCredentials.RoleCredentials
instance Control.DeepSeq.NFData Amazonka.SSO.Types.RoleCredentials.RoleCredentials


module Amazonka.SSO.Types.RoleInfo

-- | Provides information about the role that is assigned to the user.
--   
--   <i>See:</i> <a>newRoleInfo</a> smart constructor.
data RoleInfo
RoleInfo' :: Maybe Text -> Maybe Text -> RoleInfo

-- | The friendly name of the role that is assigned to the user.
[$sel:roleName:RoleInfo'] :: RoleInfo -> Maybe Text

-- | The identifier of the AWS account assigned to the user.
[$sel:accountId:RoleInfo'] :: RoleInfo -> Maybe Text

-- | Create a value of <a>RoleInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleName:RoleInfo'</a>, <a>roleInfo_roleName</a> - The
--   friendly name of the role that is assigned to the user.
--   
--   <a>$sel:accountId:RoleInfo'</a>, <a>roleInfo_accountId</a> - The
--   identifier of the AWS account assigned to the user.
newRoleInfo :: RoleInfo

-- | The friendly name of the role that is assigned to the user.
roleInfo_roleName :: Lens' RoleInfo (Maybe Text)

-- | The identifier of the AWS account assigned to the user.
roleInfo_accountId :: Lens' RoleInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.SSO.Types.RoleInfo.RoleInfo
instance GHC.Show.Show Amazonka.SSO.Types.RoleInfo.RoleInfo
instance GHC.Read.Read Amazonka.SSO.Types.RoleInfo.RoleInfo
instance GHC.Classes.Eq Amazonka.SSO.Types.RoleInfo.RoleInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.SSO.Types.RoleInfo.RoleInfo
instance Data.Hashable.Class.Hashable Amazonka.SSO.Types.RoleInfo.RoleInfo
instance Control.DeepSeq.NFData Amazonka.SSO.Types.RoleInfo.RoleInfo


module Amazonka.SSO.Types

-- | API version <tt>2019-06-10</tt> of the Amazon Single Sign-On SDK
--   configuration.
defaultService :: Service

-- | Indicates that a problem occurred with the input to the request. For
--   example, a required parameter might be missing or out of range.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the request is being made too frequently and is more
--   than what the server can handle.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the request is not authorized. This can happen due to
--   an invalid access token in the request.
_UnauthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource doesn't exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Provides information about your AWS account.
--   
--   <i>See:</i> <a>newAccountInfo</a> smart constructor.
data AccountInfo
AccountInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> AccountInfo

-- | The display name of the AWS account that is assigned to the user.
[$sel:accountName:AccountInfo'] :: AccountInfo -> Maybe Text

-- | The identifier of the AWS account that is assigned to the user.
[$sel:accountId:AccountInfo'] :: AccountInfo -> Maybe Text

-- | The email address of the AWS account that is assigned to the user.
[$sel:emailAddress:AccountInfo'] :: AccountInfo -> Maybe Text

-- | Create a value of <a>AccountInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountName:AccountInfo'</a>, <a>accountInfo_accountName</a> -
--   The display name of the AWS account that is assigned to the user.
--   
--   <a>$sel:accountId:AccountInfo'</a>, <a>accountInfo_accountId</a> - The
--   identifier of the AWS account that is assigned to the user.
--   
--   <a>$sel:emailAddress:AccountInfo'</a>, <a>accountInfo_emailAddress</a>
--   - The email address of the AWS account that is assigned to the user.
newAccountInfo :: AccountInfo

-- | The display name of the AWS account that is assigned to the user.
accountInfo_accountName :: Lens' AccountInfo (Maybe Text)

-- | The identifier of the AWS account that is assigned to the user.
accountInfo_accountId :: Lens' AccountInfo (Maybe Text)

-- | The email address of the AWS account that is assigned to the user.
accountInfo_emailAddress :: Lens' AccountInfo (Maybe Text)

-- | Provides information about the role credentials that are assigned to
--   the user.
--   
--   <i>See:</i> <a>newRoleCredentials</a> smart constructor.
data RoleCredentials
RoleCredentials' :: Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Maybe Integer -> Maybe Text -> RoleCredentials

-- | The key that is used to sign the request. For more information, see
--   <a>Using Temporary Security Credentials to Request Access to AWS
--   Resources</a> in the <i>AWS IAM User Guide</i>.
[$sel:secretAccessKey:RoleCredentials'] :: RoleCredentials -> Maybe (Sensitive Text)

-- | The token used for temporary credentials. For more information, see
--   <a>Using Temporary Security Credentials to Request Access to AWS
--   Resources</a> in the <i>AWS IAM User Guide</i>.
[$sel:sessionToken:RoleCredentials'] :: RoleCredentials -> Maybe (Sensitive Text)

-- | The date on which temporary security credentials expire.
[$sel:expiration:RoleCredentials'] :: RoleCredentials -> Maybe Integer

-- | The identifier used for the temporary security credentials. For more
--   information, see <a>Using Temporary Security Credentials to Request
--   Access to AWS Resources</a> in the <i>AWS IAM User Guide</i>.
[$sel:accessKeyId:RoleCredentials'] :: RoleCredentials -> Maybe Text

-- | Create a value of <a>RoleCredentials</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretAccessKey:RoleCredentials'</a>,
--   <a>roleCredentials_secretAccessKey</a> - The key that is used to sign
--   the request. For more information, see <a>Using Temporary Security
--   Credentials to Request Access to AWS Resources</a> in the <i>AWS IAM
--   User Guide</i>.
--   
--   <a>$sel:sessionToken:RoleCredentials'</a>,
--   <a>roleCredentials_sessionToken</a> - The token used for temporary
--   credentials. For more information, see <a>Using Temporary Security
--   Credentials to Request Access to AWS Resources</a> in the <i>AWS IAM
--   User Guide</i>.
--   
--   <a>$sel:expiration:RoleCredentials'</a>,
--   <a>roleCredentials_expiration</a> - The date on which temporary
--   security credentials expire.
--   
--   <a>$sel:accessKeyId:RoleCredentials'</a>,
--   <a>roleCredentials_accessKeyId</a> - The identifier used for the
--   temporary security credentials. For more information, see <a>Using
--   Temporary Security Credentials to Request Access to AWS Resources</a>
--   in the <i>AWS IAM User Guide</i>.
newRoleCredentials :: RoleCredentials

-- | The key that is used to sign the request. For more information, see
--   <a>Using Temporary Security Credentials to Request Access to AWS
--   Resources</a> in the <i>AWS IAM User Guide</i>.
roleCredentials_secretAccessKey :: Lens' RoleCredentials (Maybe Text)

-- | The token used for temporary credentials. For more information, see
--   <a>Using Temporary Security Credentials to Request Access to AWS
--   Resources</a> in the <i>AWS IAM User Guide</i>.
roleCredentials_sessionToken :: Lens' RoleCredentials (Maybe Text)

-- | The date on which temporary security credentials expire.
roleCredentials_expiration :: Lens' RoleCredentials (Maybe Integer)

-- | The identifier used for the temporary security credentials. For more
--   information, see <a>Using Temporary Security Credentials to Request
--   Access to AWS Resources</a> in the <i>AWS IAM User Guide</i>.
roleCredentials_accessKeyId :: Lens' RoleCredentials (Maybe Text)

-- | Provides information about the role that is assigned to the user.
--   
--   <i>See:</i> <a>newRoleInfo</a> smart constructor.
data RoleInfo
RoleInfo' :: Maybe Text -> Maybe Text -> RoleInfo

-- | The friendly name of the role that is assigned to the user.
[$sel:roleName:RoleInfo'] :: RoleInfo -> Maybe Text

-- | The identifier of the AWS account assigned to the user.
[$sel:accountId:RoleInfo'] :: RoleInfo -> Maybe Text

-- | Create a value of <a>RoleInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleName:RoleInfo'</a>, <a>roleInfo_roleName</a> - The
--   friendly name of the role that is assigned to the user.
--   
--   <a>$sel:accountId:RoleInfo'</a>, <a>roleInfo_accountId</a> - The
--   identifier of the AWS account assigned to the user.
newRoleInfo :: RoleInfo

-- | The friendly name of the role that is assigned to the user.
roleInfo_roleName :: Lens' RoleInfo (Maybe Text)

-- | The identifier of the AWS account assigned to the user.
roleInfo_accountId :: Lens' RoleInfo (Maybe Text)


-- | Removes the client- and server-side session that is associated with
--   the user.
module Amazonka.SSO.Logout

-- | <i>See:</i> <a>newLogout</a> smart constructor.
data Logout
Logout' :: Sensitive Text -> Logout

-- | The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
[$sel:accessToken:Logout'] :: Logout -> Sensitive Text

-- | Create a value of <a>Logout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:Logout'</a>, <a>logout_accessToken</a> - The token
--   issued by the <tt>CreateToken</tt> API call. For more information, see
--   <a>CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.
newLogout :: Text -> Logout

-- | The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
logout_accessToken :: Lens' Logout Text

-- | <i>See:</i> <a>newLogoutResponse</a> smart constructor.
data LogoutResponse
LogoutResponse' :: LogoutResponse

-- | Create a value of <a>LogoutResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newLogoutResponse :: LogoutResponse
instance GHC.Generics.Generic Amazonka.SSO.Logout.Logout
instance GHC.Show.Show Amazonka.SSO.Logout.Logout
instance GHC.Classes.Eq Amazonka.SSO.Logout.Logout
instance GHC.Generics.Generic Amazonka.SSO.Logout.LogoutResponse
instance GHC.Show.Show Amazonka.SSO.Logout.LogoutResponse
instance GHC.Read.Read Amazonka.SSO.Logout.LogoutResponse
instance GHC.Classes.Eq Amazonka.SSO.Logout.LogoutResponse
instance Amazonka.Types.AWSRequest Amazonka.SSO.Logout.Logout
instance Control.DeepSeq.NFData Amazonka.SSO.Logout.LogoutResponse
instance Data.Hashable.Class.Hashable Amazonka.SSO.Logout.Logout
instance Control.DeepSeq.NFData Amazonka.SSO.Logout.Logout
instance Amazonka.Data.Headers.ToHeaders Amazonka.SSO.Logout.Logout
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.SSO.Logout.Logout
instance Amazonka.Data.Path.ToPath Amazonka.SSO.Logout.Logout
instance Amazonka.Data.Query.ToQuery Amazonka.SSO.Logout.Logout


-- | Lists all AWS accounts assigned to the user. These AWS accounts are
--   assigned by the administrator of the account. For more information,
--   see <a>Assign User Access</a> in the <i>AWS SSO User Guide</i>. This
--   operation returns a paginated response.
--   
--   This operation returns paginated results.
module Amazonka.SSO.ListAccounts

-- | <i>See:</i> <a>newListAccounts</a> smart constructor.
data ListAccounts
ListAccounts' :: Maybe Text -> Maybe Natural -> Sensitive Text -> ListAccounts

-- | (Optional) When requesting subsequent pages, this is the page token
--   from the previous response output.
[$sel:nextToken:ListAccounts'] :: ListAccounts -> Maybe Text

-- | This is the number of items clients can request per page.
[$sel:maxResults:ListAccounts'] :: ListAccounts -> Maybe Natural

-- | The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
[$sel:accessToken:ListAccounts'] :: ListAccounts -> Sensitive Text

-- | Create a value of <a>ListAccounts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAccounts'</a>, <a>listAccounts_nextToken</a> -
--   (Optional) When requesting subsequent pages, this is the page token
--   from the previous response output.
--   
--   <a>$sel:maxResults:ListAccounts'</a>, <a>listAccounts_maxResults</a> -
--   This is the number of items clients can request per page.
--   
--   <a>$sel:accessToken:ListAccounts'</a>, <a>listAccounts_accessToken</a>
--   - The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
newListAccounts :: Text -> ListAccounts

-- | (Optional) When requesting subsequent pages, this is the page token
--   from the previous response output.
listAccounts_nextToken :: Lens' ListAccounts (Maybe Text)

-- | This is the number of items clients can request per page.
listAccounts_maxResults :: Lens' ListAccounts (Maybe Natural)

-- | The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
listAccounts_accessToken :: Lens' ListAccounts Text

-- | <i>See:</i> <a>newListAccountsResponse</a> smart constructor.
data ListAccountsResponse
ListAccountsResponse' :: Maybe [AccountInfo] -> Maybe Text -> Int -> ListAccountsResponse

-- | A paginated response with the list of account information and the next
--   token if more results are available.
[$sel:accountList:ListAccountsResponse'] :: ListAccountsResponse -> Maybe [AccountInfo]

-- | The page token client that is used to retrieve the list of accounts.
[$sel:nextToken:ListAccountsResponse'] :: ListAccountsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListAccountsResponse'] :: ListAccountsResponse -> Int

-- | Create a value of <a>ListAccountsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountList:ListAccountsResponse'</a>,
--   <a>listAccountsResponse_accountList</a> - A paginated response with
--   the list of account information and the next token if more results are
--   available.
--   
--   <a>$sel:nextToken:ListAccounts'</a>,
--   <a>listAccountsResponse_nextToken</a> - The page token client that is
--   used to retrieve the list of accounts.
--   
--   <a>$sel:httpStatus:ListAccountsResponse'</a>,
--   <a>listAccountsResponse_httpStatus</a> - The response's http status
--   code.
newListAccountsResponse :: Int -> ListAccountsResponse

-- | A paginated response with the list of account information and the next
--   token if more results are available.
listAccountsResponse_accountList :: Lens' ListAccountsResponse (Maybe [AccountInfo])

-- | The page token client that is used to retrieve the list of accounts.
listAccountsResponse_nextToken :: Lens' ListAccountsResponse (Maybe Text)

-- | The response's http status code.
listAccountsResponse_httpStatus :: Lens' ListAccountsResponse Int
instance GHC.Generics.Generic Amazonka.SSO.ListAccounts.ListAccounts
instance GHC.Show.Show Amazonka.SSO.ListAccounts.ListAccounts
instance GHC.Classes.Eq Amazonka.SSO.ListAccounts.ListAccounts
instance GHC.Generics.Generic Amazonka.SSO.ListAccounts.ListAccountsResponse
instance GHC.Show.Show Amazonka.SSO.ListAccounts.ListAccountsResponse
instance GHC.Read.Read Amazonka.SSO.ListAccounts.ListAccountsResponse
instance GHC.Classes.Eq Amazonka.SSO.ListAccounts.ListAccountsResponse
instance Amazonka.Types.AWSRequest Amazonka.SSO.ListAccounts.ListAccounts
instance Control.DeepSeq.NFData Amazonka.SSO.ListAccounts.ListAccountsResponse
instance Amazonka.Pager.AWSPager Amazonka.SSO.ListAccounts.ListAccounts
instance Data.Hashable.Class.Hashable Amazonka.SSO.ListAccounts.ListAccounts
instance Control.DeepSeq.NFData Amazonka.SSO.ListAccounts.ListAccounts
instance Amazonka.Data.Headers.ToHeaders Amazonka.SSO.ListAccounts.ListAccounts
instance Amazonka.Data.Path.ToPath Amazonka.SSO.ListAccounts.ListAccounts
instance Amazonka.Data.Query.ToQuery Amazonka.SSO.ListAccounts.ListAccounts


-- | Lists all roles that are assigned to the user for a given AWS account.
--   
--   This operation returns paginated results.
module Amazonka.SSO.ListAccountRoles

-- | <i>See:</i> <a>newListAccountRoles</a> smart constructor.
data ListAccountRoles
ListAccountRoles' :: Maybe Text -> Maybe Natural -> Sensitive Text -> Text -> ListAccountRoles

-- | The page token from the previous response output when you request
--   subsequent pages.
[$sel:nextToken:ListAccountRoles'] :: ListAccountRoles -> Maybe Text

-- | The number of items that clients can request per page.
[$sel:maxResults:ListAccountRoles'] :: ListAccountRoles -> Maybe Natural

-- | The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
[$sel:accessToken:ListAccountRoles'] :: ListAccountRoles -> Sensitive Text

-- | The identifier for the AWS account that is assigned to the user.
[$sel:accountId:ListAccountRoles'] :: ListAccountRoles -> Text

-- | Create a value of <a>ListAccountRoles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAccountRoles'</a>,
--   <a>listAccountRoles_nextToken</a> - The page token from the previous
--   response output when you request subsequent pages.
--   
--   <a>$sel:maxResults:ListAccountRoles'</a>,
--   <a>listAccountRoles_maxResults</a> - The number of items that clients
--   can request per page.
--   
--   <a>$sel:accessToken:ListAccountRoles'</a>,
--   <a>listAccountRoles_accessToken</a> - The token issued by the
--   <tt>CreateToken</tt> API call. For more information, see
--   <a>CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.
--   
--   <a>$sel:accountId:ListAccountRoles'</a>,
--   <a>listAccountRoles_accountId</a> - The identifier for the AWS account
--   that is assigned to the user.
newListAccountRoles :: Text -> Text -> ListAccountRoles

-- | The page token from the previous response output when you request
--   subsequent pages.
listAccountRoles_nextToken :: Lens' ListAccountRoles (Maybe Text)

-- | The number of items that clients can request per page.
listAccountRoles_maxResults :: Lens' ListAccountRoles (Maybe Natural)

-- | The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
listAccountRoles_accessToken :: Lens' ListAccountRoles Text

-- | The identifier for the AWS account that is assigned to the user.
listAccountRoles_accountId :: Lens' ListAccountRoles Text

-- | <i>See:</i> <a>newListAccountRolesResponse</a> smart constructor.
data ListAccountRolesResponse
ListAccountRolesResponse' :: Maybe [RoleInfo] -> Maybe Text -> Int -> ListAccountRolesResponse

-- | A paginated response with the list of roles and the next token if more
--   results are available.
[$sel:roleList:ListAccountRolesResponse'] :: ListAccountRolesResponse -> Maybe [RoleInfo]

-- | The page token client that is used to retrieve the list of accounts.
[$sel:nextToken:ListAccountRolesResponse'] :: ListAccountRolesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListAccountRolesResponse'] :: ListAccountRolesResponse -> Int

-- | Create a value of <a>ListAccountRolesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleList:ListAccountRolesResponse'</a>,
--   <a>listAccountRolesResponse_roleList</a> - A paginated response with
--   the list of roles and the next token if more results are available.
--   
--   <a>$sel:nextToken:ListAccountRoles'</a>,
--   <a>listAccountRolesResponse_nextToken</a> - The page token client that
--   is used to retrieve the list of accounts.
--   
--   <a>$sel:httpStatus:ListAccountRolesResponse'</a>,
--   <a>listAccountRolesResponse_httpStatus</a> - The response's http
--   status code.
newListAccountRolesResponse :: Int -> ListAccountRolesResponse

-- | A paginated response with the list of roles and the next token if more
--   results are available.
listAccountRolesResponse_roleList :: Lens' ListAccountRolesResponse (Maybe [RoleInfo])

-- | The page token client that is used to retrieve the list of accounts.
listAccountRolesResponse_nextToken :: Lens' ListAccountRolesResponse (Maybe Text)

-- | The response's http status code.
listAccountRolesResponse_httpStatus :: Lens' ListAccountRolesResponse Int
instance GHC.Generics.Generic Amazonka.SSO.ListAccountRoles.ListAccountRoles
instance GHC.Show.Show Amazonka.SSO.ListAccountRoles.ListAccountRoles
instance GHC.Classes.Eq Amazonka.SSO.ListAccountRoles.ListAccountRoles
instance GHC.Generics.Generic Amazonka.SSO.ListAccountRoles.ListAccountRolesResponse
instance GHC.Show.Show Amazonka.SSO.ListAccountRoles.ListAccountRolesResponse
instance GHC.Read.Read Amazonka.SSO.ListAccountRoles.ListAccountRolesResponse
instance GHC.Classes.Eq Amazonka.SSO.ListAccountRoles.ListAccountRolesResponse
instance Amazonka.Types.AWSRequest Amazonka.SSO.ListAccountRoles.ListAccountRoles
instance Control.DeepSeq.NFData Amazonka.SSO.ListAccountRoles.ListAccountRolesResponse
instance Amazonka.Pager.AWSPager Amazonka.SSO.ListAccountRoles.ListAccountRoles
instance Data.Hashable.Class.Hashable Amazonka.SSO.ListAccountRoles.ListAccountRoles
instance Control.DeepSeq.NFData Amazonka.SSO.ListAccountRoles.ListAccountRoles
instance Amazonka.Data.Headers.ToHeaders Amazonka.SSO.ListAccountRoles.ListAccountRoles
instance Amazonka.Data.Path.ToPath Amazonka.SSO.ListAccountRoles.ListAccountRoles
instance Amazonka.Data.Query.ToQuery Amazonka.SSO.ListAccountRoles.ListAccountRoles


-- | Returns the STS short-term credentials for a given role name that is
--   assigned to the user.
module Amazonka.SSO.GetRoleCredentials

-- | <i>See:</i> <a>newGetRoleCredentials</a> smart constructor.
data GetRoleCredentials
GetRoleCredentials' :: Text -> Text -> Sensitive Text -> GetRoleCredentials

-- | The friendly name of the role that is assigned to the user.
[$sel:roleName:GetRoleCredentials'] :: GetRoleCredentials -> Text

-- | The identifier for the AWS account that is assigned to the user.
[$sel:accountId:GetRoleCredentials'] :: GetRoleCredentials -> Text

-- | The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
[$sel:accessToken:GetRoleCredentials'] :: GetRoleCredentials -> Sensitive Text

-- | Create a value of <a>GetRoleCredentials</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleName:GetRoleCredentials'</a>,
--   <a>getRoleCredentials_roleName</a> - The friendly name of the role
--   that is assigned to the user.
--   
--   <a>$sel:accountId:GetRoleCredentials'</a>,
--   <a>getRoleCredentials_accountId</a> - The identifier for the AWS
--   account that is assigned to the user.
--   
--   <a>$sel:accessToken:GetRoleCredentials'</a>,
--   <a>getRoleCredentials_accessToken</a> - The token issued by the
--   <tt>CreateToken</tt> API call. For more information, see
--   <a>CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.
newGetRoleCredentials :: Text -> Text -> Text -> GetRoleCredentials

-- | The friendly name of the role that is assigned to the user.
getRoleCredentials_roleName :: Lens' GetRoleCredentials Text

-- | The identifier for the AWS account that is assigned to the user.
getRoleCredentials_accountId :: Lens' GetRoleCredentials Text

-- | The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
getRoleCredentials_accessToken :: Lens' GetRoleCredentials Text

-- | <i>See:</i> <a>newGetRoleCredentialsResponse</a> smart constructor.
data GetRoleCredentialsResponse
GetRoleCredentialsResponse' :: Maybe RoleCredentials -> Int -> GetRoleCredentialsResponse

-- | The credentials for the role that is assigned to the user.
[$sel:roleCredentials:GetRoleCredentialsResponse'] :: GetRoleCredentialsResponse -> Maybe RoleCredentials

-- | The response's http status code.
[$sel:httpStatus:GetRoleCredentialsResponse'] :: GetRoleCredentialsResponse -> Int

-- | Create a value of <a>GetRoleCredentialsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleCredentials:GetRoleCredentialsResponse'</a>,
--   <a>getRoleCredentialsResponse_roleCredentials</a> - The credentials
--   for the role that is assigned to the user.
--   
--   <a>$sel:httpStatus:GetRoleCredentialsResponse'</a>,
--   <a>getRoleCredentialsResponse_httpStatus</a> - The response's http
--   status code.
newGetRoleCredentialsResponse :: Int -> GetRoleCredentialsResponse

-- | The credentials for the role that is assigned to the user.
getRoleCredentialsResponse_roleCredentials :: Lens' GetRoleCredentialsResponse (Maybe RoleCredentials)

-- | The response's http status code.
getRoleCredentialsResponse_httpStatus :: Lens' GetRoleCredentialsResponse Int
instance GHC.Generics.Generic Amazonka.SSO.GetRoleCredentials.GetRoleCredentials
instance GHC.Show.Show Amazonka.SSO.GetRoleCredentials.GetRoleCredentials
instance GHC.Classes.Eq Amazonka.SSO.GetRoleCredentials.GetRoleCredentials
instance GHC.Generics.Generic Amazonka.SSO.GetRoleCredentials.GetRoleCredentialsResponse
instance GHC.Show.Show Amazonka.SSO.GetRoleCredentials.GetRoleCredentialsResponse
instance GHC.Classes.Eq Amazonka.SSO.GetRoleCredentials.GetRoleCredentialsResponse
instance Amazonka.Types.AWSRequest Amazonka.SSO.GetRoleCredentials.GetRoleCredentials
instance Control.DeepSeq.NFData Amazonka.SSO.GetRoleCredentials.GetRoleCredentialsResponse
instance Data.Hashable.Class.Hashable Amazonka.SSO.GetRoleCredentials.GetRoleCredentials
instance Control.DeepSeq.NFData Amazonka.SSO.GetRoleCredentials.GetRoleCredentials
instance Amazonka.Data.Headers.ToHeaders Amazonka.SSO.GetRoleCredentials.GetRoleCredentials
instance Amazonka.Data.Path.ToPath Amazonka.SSO.GetRoleCredentials.GetRoleCredentials
instance Amazonka.Data.Query.ToQuery Amazonka.SSO.GetRoleCredentials.GetRoleCredentials


module Amazonka.SSO.Lens

-- | The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
logout_accessToken :: Lens' Logout Text

-- | The friendly name of the role that is assigned to the user.
getRoleCredentials_roleName :: Lens' GetRoleCredentials Text

-- | The identifier for the AWS account that is assigned to the user.
getRoleCredentials_accountId :: Lens' GetRoleCredentials Text

-- | The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
getRoleCredentials_accessToken :: Lens' GetRoleCredentials Text

-- | The credentials for the role that is assigned to the user.
getRoleCredentialsResponse_roleCredentials :: Lens' GetRoleCredentialsResponse (Maybe RoleCredentials)

-- | The response's http status code.
getRoleCredentialsResponse_httpStatus :: Lens' GetRoleCredentialsResponse Int

-- | (Optional) When requesting subsequent pages, this is the page token
--   from the previous response output.
listAccounts_nextToken :: Lens' ListAccounts (Maybe Text)

-- | This is the number of items clients can request per page.
listAccounts_maxResults :: Lens' ListAccounts (Maybe Natural)

-- | The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
listAccounts_accessToken :: Lens' ListAccounts Text

-- | A paginated response with the list of account information and the next
--   token if more results are available.
listAccountsResponse_accountList :: Lens' ListAccountsResponse (Maybe [AccountInfo])

-- | The page token client that is used to retrieve the list of accounts.
listAccountsResponse_nextToken :: Lens' ListAccountsResponse (Maybe Text)

-- | The response's http status code.
listAccountsResponse_httpStatus :: Lens' ListAccountsResponse Int

-- | The page token from the previous response output when you request
--   subsequent pages.
listAccountRoles_nextToken :: Lens' ListAccountRoles (Maybe Text)

-- | The number of items that clients can request per page.
listAccountRoles_maxResults :: Lens' ListAccountRoles (Maybe Natural)

-- | The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
listAccountRoles_accessToken :: Lens' ListAccountRoles Text

-- | The identifier for the AWS account that is assigned to the user.
listAccountRoles_accountId :: Lens' ListAccountRoles Text

-- | A paginated response with the list of roles and the next token if more
--   results are available.
listAccountRolesResponse_roleList :: Lens' ListAccountRolesResponse (Maybe [RoleInfo])

-- | The page token client that is used to retrieve the list of accounts.
listAccountRolesResponse_nextToken :: Lens' ListAccountRolesResponse (Maybe Text)

-- | The response's http status code.
listAccountRolesResponse_httpStatus :: Lens' ListAccountRolesResponse Int

-- | The display name of the AWS account that is assigned to the user.
accountInfo_accountName :: Lens' AccountInfo (Maybe Text)

-- | The identifier of the AWS account that is assigned to the user.
accountInfo_accountId :: Lens' AccountInfo (Maybe Text)

-- | The email address of the AWS account that is assigned to the user.
accountInfo_emailAddress :: Lens' AccountInfo (Maybe Text)

-- | The key that is used to sign the request. For more information, see
--   <a>Using Temporary Security Credentials to Request Access to AWS
--   Resources</a> in the <i>AWS IAM User Guide</i>.
roleCredentials_secretAccessKey :: Lens' RoleCredentials (Maybe Text)

-- | The token used for temporary credentials. For more information, see
--   <a>Using Temporary Security Credentials to Request Access to AWS
--   Resources</a> in the <i>AWS IAM User Guide</i>.
roleCredentials_sessionToken :: Lens' RoleCredentials (Maybe Text)

-- | The date on which temporary security credentials expire.
roleCredentials_expiration :: Lens' RoleCredentials (Maybe Integer)

-- | The identifier used for the temporary security credentials. For more
--   information, see <a>Using Temporary Security Credentials to Request
--   Access to AWS Resources</a> in the <i>AWS IAM User Guide</i>.
roleCredentials_accessKeyId :: Lens' RoleCredentials (Maybe Text)

-- | The friendly name of the role that is assigned to the user.
roleInfo_roleName :: Lens' RoleInfo (Maybe Text)

-- | The identifier of the AWS account assigned to the user.
roleInfo_accountId :: Lens' RoleInfo (Maybe Text)


module Amazonka.SSO.Waiters


-- | Derived from API version <tt>2019-06-10</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS Single Sign-On Portal is a web service that makes it easy for you
--   to assign user access to AWS SSO resources such as the user portal.
--   Users can get AWS account applications and roles assigned to them and
--   get federated into the application.
--   
--   For general information about AWS SSO, see <a>What is AWS Single
--   Sign-On?</a> in the <i>AWS SSO User Guide</i>.
--   
--   This API reference guide describes the AWS SSO Portal operations that
--   you can call programatically and includes detailed information on data
--   types and errors.
--   
--   AWS provides SDKs that consist of libraries and sample code for
--   various programming languages and platforms, such as Java, Ruby, .Net,
--   iOS, or Android. The SDKs provide a convenient way to create
--   programmatic access to AWS SSO and other AWS services. For more
--   information about the AWS SDKs, including how to download and install
--   them, see <a>Tools for Amazon Web Services</a>.
module Amazonka.SSO

-- | API version <tt>2019-06-10</tt> of the Amazon Single Sign-On SDK
--   configuration.
defaultService :: Service

-- | Indicates that a problem occurred with the input to the request. For
--   example, a required parameter might be missing or out of range.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the request is being made too frequently and is more
--   than what the server can handle.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the request is not authorized. This can happen due to
--   an invalid access token in the request.
_UnauthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource doesn't exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newLogout</a> smart constructor.
data Logout
Logout' :: Sensitive Text -> Logout

-- | Create a value of <a>Logout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:Logout'</a>, <a>logout_accessToken</a> - The token
--   issued by the <tt>CreateToken</tt> API call. For more information, see
--   <a>CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.
newLogout :: Text -> Logout

-- | <i>See:</i> <a>newLogoutResponse</a> smart constructor.
data LogoutResponse
LogoutResponse' :: LogoutResponse

-- | Create a value of <a>LogoutResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newLogoutResponse :: LogoutResponse

-- | <i>See:</i> <a>newGetRoleCredentials</a> smart constructor.
data GetRoleCredentials
GetRoleCredentials' :: Text -> Text -> Sensitive Text -> GetRoleCredentials

-- | Create a value of <a>GetRoleCredentials</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleName:GetRoleCredentials'</a>,
--   <a>getRoleCredentials_roleName</a> - The friendly name of the role
--   that is assigned to the user.
--   
--   <a>$sel:accountId:GetRoleCredentials'</a>,
--   <a>getRoleCredentials_accountId</a> - The identifier for the AWS
--   account that is assigned to the user.
--   
--   <a>$sel:accessToken:GetRoleCredentials'</a>,
--   <a>getRoleCredentials_accessToken</a> - The token issued by the
--   <tt>CreateToken</tt> API call. For more information, see
--   <a>CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.
newGetRoleCredentials :: Text -> Text -> Text -> GetRoleCredentials

-- | <i>See:</i> <a>newGetRoleCredentialsResponse</a> smart constructor.
data GetRoleCredentialsResponse
GetRoleCredentialsResponse' :: Maybe RoleCredentials -> Int -> GetRoleCredentialsResponse

-- | Create a value of <a>GetRoleCredentialsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleCredentials:GetRoleCredentialsResponse'</a>,
--   <a>getRoleCredentialsResponse_roleCredentials</a> - The credentials
--   for the role that is assigned to the user.
--   
--   <a>$sel:httpStatus:GetRoleCredentialsResponse'</a>,
--   <a>getRoleCredentialsResponse_httpStatus</a> - The response's http
--   status code.
newGetRoleCredentialsResponse :: Int -> GetRoleCredentialsResponse

-- | <i>See:</i> <a>newListAccounts</a> smart constructor.
data ListAccounts
ListAccounts' :: Maybe Text -> Maybe Natural -> Sensitive Text -> ListAccounts

-- | Create a value of <a>ListAccounts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAccounts'</a>, <a>listAccounts_nextToken</a> -
--   (Optional) When requesting subsequent pages, this is the page token
--   from the previous response output.
--   
--   <a>$sel:maxResults:ListAccounts'</a>, <a>listAccounts_maxResults</a> -
--   This is the number of items clients can request per page.
--   
--   <a>$sel:accessToken:ListAccounts'</a>, <a>listAccounts_accessToken</a>
--   - The token issued by the <tt>CreateToken</tt> API call. For more
--   information, see <a>CreateToken</a> in the <i>AWS SSO OIDC API
--   Reference Guide</i>.
newListAccounts :: Text -> ListAccounts

-- | <i>See:</i> <a>newListAccountsResponse</a> smart constructor.
data ListAccountsResponse
ListAccountsResponse' :: Maybe [AccountInfo] -> Maybe Text -> Int -> ListAccountsResponse

-- | Create a value of <a>ListAccountsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountList:ListAccountsResponse'</a>,
--   <a>listAccountsResponse_accountList</a> - A paginated response with
--   the list of account information and the next token if more results are
--   available.
--   
--   <a>$sel:nextToken:ListAccounts'</a>,
--   <a>listAccountsResponse_nextToken</a> - The page token client that is
--   used to retrieve the list of accounts.
--   
--   <a>$sel:httpStatus:ListAccountsResponse'</a>,
--   <a>listAccountsResponse_httpStatus</a> - The response's http status
--   code.
newListAccountsResponse :: Int -> ListAccountsResponse

-- | <i>See:</i> <a>newListAccountRoles</a> smart constructor.
data ListAccountRoles
ListAccountRoles' :: Maybe Text -> Maybe Natural -> Sensitive Text -> Text -> ListAccountRoles

-- | Create a value of <a>ListAccountRoles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAccountRoles'</a>,
--   <a>listAccountRoles_nextToken</a> - The page token from the previous
--   response output when you request subsequent pages.
--   
--   <a>$sel:maxResults:ListAccountRoles'</a>,
--   <a>listAccountRoles_maxResults</a> - The number of items that clients
--   can request per page.
--   
--   <a>$sel:accessToken:ListAccountRoles'</a>,
--   <a>listAccountRoles_accessToken</a> - The token issued by the
--   <tt>CreateToken</tt> API call. For more information, see
--   <a>CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.
--   
--   <a>$sel:accountId:ListAccountRoles'</a>,
--   <a>listAccountRoles_accountId</a> - The identifier for the AWS account
--   that is assigned to the user.
newListAccountRoles :: Text -> Text -> ListAccountRoles

-- | <i>See:</i> <a>newListAccountRolesResponse</a> smart constructor.
data ListAccountRolesResponse
ListAccountRolesResponse' :: Maybe [RoleInfo] -> Maybe Text -> Int -> ListAccountRolesResponse

-- | Create a value of <a>ListAccountRolesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleList:ListAccountRolesResponse'</a>,
--   <a>listAccountRolesResponse_roleList</a> - A paginated response with
--   the list of roles and the next token if more results are available.
--   
--   <a>$sel:nextToken:ListAccountRoles'</a>,
--   <a>listAccountRolesResponse_nextToken</a> - The page token client that
--   is used to retrieve the list of accounts.
--   
--   <a>$sel:httpStatus:ListAccountRolesResponse'</a>,
--   <a>listAccountRolesResponse_httpStatus</a> - The response's http
--   status code.
newListAccountRolesResponse :: Int -> ListAccountRolesResponse

-- | Provides information about your AWS account.
--   
--   <i>See:</i> <a>newAccountInfo</a> smart constructor.
data AccountInfo
AccountInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> AccountInfo

-- | Create a value of <a>AccountInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountName:AccountInfo'</a>, <a>accountInfo_accountName</a> -
--   The display name of the AWS account that is assigned to the user.
--   
--   <a>$sel:accountId:AccountInfo'</a>, <a>accountInfo_accountId</a> - The
--   identifier of the AWS account that is assigned to the user.
--   
--   <a>$sel:emailAddress:AccountInfo'</a>, <a>accountInfo_emailAddress</a>
--   - The email address of the AWS account that is assigned to the user.
newAccountInfo :: AccountInfo

-- | Provides information about the role credentials that are assigned to
--   the user.
--   
--   <i>See:</i> <a>newRoleCredentials</a> smart constructor.
data RoleCredentials
RoleCredentials' :: Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Maybe Integer -> Maybe Text -> RoleCredentials

-- | Create a value of <a>RoleCredentials</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretAccessKey:RoleCredentials'</a>,
--   <a>roleCredentials_secretAccessKey</a> - The key that is used to sign
--   the request. For more information, see <a>Using Temporary Security
--   Credentials to Request Access to AWS Resources</a> in the <i>AWS IAM
--   User Guide</i>.
--   
--   <a>$sel:sessionToken:RoleCredentials'</a>,
--   <a>roleCredentials_sessionToken</a> - The token used for temporary
--   credentials. For more information, see <a>Using Temporary Security
--   Credentials to Request Access to AWS Resources</a> in the <i>AWS IAM
--   User Guide</i>.
--   
--   <a>$sel:expiration:RoleCredentials'</a>,
--   <a>roleCredentials_expiration</a> - The date on which temporary
--   security credentials expire.
--   
--   <a>$sel:accessKeyId:RoleCredentials'</a>,
--   <a>roleCredentials_accessKeyId</a> - The identifier used for the
--   temporary security credentials. For more information, see <a>Using
--   Temporary Security Credentials to Request Access to AWS Resources</a>
--   in the <i>AWS IAM User Guide</i>.
newRoleCredentials :: RoleCredentials

-- | Provides information about the role that is assigned to the user.
--   
--   <i>See:</i> <a>newRoleInfo</a> smart constructor.
data RoleInfo
RoleInfo' :: Maybe Text -> Maybe Text -> RoleInfo

-- | Create a value of <a>RoleInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleName:RoleInfo'</a>, <a>roleInfo_roleName</a> - The
--   friendly name of the role that is assigned to the user.
--   
--   <a>$sel:accountId:RoleInfo'</a>, <a>roleInfo_accountId</a> - The
--   identifier of the AWS account assigned to the user.
newRoleInfo :: RoleInfo
