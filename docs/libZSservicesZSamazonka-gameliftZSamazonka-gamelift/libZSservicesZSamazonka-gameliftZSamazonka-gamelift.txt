-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-gameliftZSamazonka-gamelift
@version 1.6.1


module Network.AWS.GameLift.Types.AcceptanceType
newtype AcceptanceType
AcceptanceType' :: Text -> AcceptanceType
[fromAcceptanceType] :: AcceptanceType -> Text
pattern AcceptanceType_ACCEPT :: AcceptanceType
pattern AcceptanceType_REJECT :: AcceptanceType
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance GHC.Classes.Ord Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance GHC.Classes.Eq Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance GHC.Read.Read Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType
instance GHC.Show.Show Network.AWS.GameLift.Types.AcceptanceType.AcceptanceType


module Network.AWS.GameLift.Types.AttributeValue

-- | Values for use in Player attribute key-value pairs. This object lets
--   you specify an attribute value using any of the valid data types:
--   string, number, string array, or data map. Each
--   <tt>AttributeValue</tt> object can use only one of the available
--   properties.
--   
--   <i>See:</i> <a>newAttributeValue</a> smart constructor.
data AttributeValue
AttributeValue' :: Maybe [Text] -> Maybe Double -> Maybe Text -> Maybe (HashMap Text Double) -> AttributeValue

-- | For a list of up to 10 strings. Maximum length for each string is 100
--   characters. Duplicate values are not recognized; all occurrences of
--   the repeated value after the first of a repeated value are ignored.
[$sel:sl:AttributeValue'] :: AttributeValue -> Maybe [Text]

-- | For number values, expressed as double.
[$sel:n:AttributeValue'] :: AttributeValue -> Maybe Double

-- | For single string values. Maximum string length is 100 characters.
[$sel:s:AttributeValue'] :: AttributeValue -> Maybe Text

-- | For a map of up to 10 data type:value pairs. Maximum length for each
--   string value is 100 characters.
[$sel:sdm:AttributeValue'] :: AttributeValue -> Maybe (HashMap Text Double)

-- | Create a value of <a>AttributeValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sl:AttributeValue'</a>, <a>attributeValue_sl</a> - For a list
--   of up to 10 strings. Maximum length for each string is 100 characters.
--   Duplicate values are not recognized; all occurrences of the repeated
--   value after the first of a repeated value are ignored.
--   
--   <a>$sel:n:AttributeValue'</a>, <a>attributeValue_n</a> - For number
--   values, expressed as double.
--   
--   <a>$sel:s:AttributeValue'</a>, <a>attributeValue_s</a> - For single
--   string values. Maximum string length is 100 characters.
--   
--   <a>$sel:sdm:AttributeValue'</a>, <a>attributeValue_sdm</a> - For a map
--   of up to 10 data type:value pairs. Maximum length for each string
--   value is 100 characters.
newAttributeValue :: AttributeValue

-- | For a list of up to 10 strings. Maximum length for each string is 100
--   characters. Duplicate values are not recognized; all occurrences of
--   the repeated value after the first of a repeated value are ignored.
attributeValue_sl :: Lens' AttributeValue (Maybe [Text])

-- | For number values, expressed as double.
attributeValue_n :: Lens' AttributeValue (Maybe Double)

-- | For single string values. Maximum string length is 100 characters.
attributeValue_s :: Lens' AttributeValue (Maybe Text)

-- | For a map of up to 10 data type:value pairs. Maximum length for each
--   string value is 100 characters.
attributeValue_sdm :: Lens' AttributeValue (Maybe (HashMap Text Double))
instance GHC.Generics.Generic Network.AWS.GameLift.Types.AttributeValue.AttributeValue
instance GHC.Show.Show Network.AWS.GameLift.Types.AttributeValue.AttributeValue
instance GHC.Read.Read Network.AWS.GameLift.Types.AttributeValue.AttributeValue
instance GHC.Classes.Eq Network.AWS.GameLift.Types.AttributeValue.AttributeValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.AttributeValue.AttributeValue
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.AttributeValue.AttributeValue
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.AttributeValue.AttributeValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.AttributeValue.AttributeValue


module Network.AWS.GameLift.Types.AwsCredentials

-- | Temporary access credentials used for uploading game build files to
--   Amazon GameLift. They are valid for a limited time. If they expire
--   before you upload your game build, get a new set by calling
--   RequestUploadCredentials.
--   
--   <i>See:</i> <a>newAwsCredentials</a> smart constructor.
data AwsCredentials
AwsCredentials' :: Maybe Text -> Maybe Text -> Maybe Text -> AwsCredentials

-- | Temporary secret key allowing access to the Amazon GameLift S3
--   account.
[$sel:secretAccessKey:AwsCredentials'] :: AwsCredentials -> Maybe Text

-- | Temporary key allowing access to the Amazon GameLift S3 account.
[$sel:accessKeyId:AwsCredentials'] :: AwsCredentials -> Maybe Text

-- | Token used to associate a specific build ID with the files uploaded
--   using these credentials.
[$sel:sessionToken:AwsCredentials'] :: AwsCredentials -> Maybe Text

-- | Create a value of <a>AwsCredentials</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretAccessKey:AwsCredentials'</a>,
--   <a>awsCredentials_secretAccessKey</a> - Temporary secret key allowing
--   access to the Amazon GameLift S3 account.
--   
--   <a>$sel:accessKeyId:AwsCredentials'</a>,
--   <a>awsCredentials_accessKeyId</a> - Temporary key allowing access to
--   the Amazon GameLift S3 account.
--   
--   <a>$sel:sessionToken:AwsCredentials'</a>,
--   <a>awsCredentials_sessionToken</a> - Token used to associate a
--   specific build ID with the files uploaded using these credentials.
newAwsCredentials :: AwsCredentials

-- | Temporary secret key allowing access to the Amazon GameLift S3
--   account.
awsCredentials_secretAccessKey :: Lens' AwsCredentials (Maybe Text)

-- | Temporary key allowing access to the Amazon GameLift S3 account.
awsCredentials_accessKeyId :: Lens' AwsCredentials (Maybe Text)

-- | Token used to associate a specific build ID with the files uploaded
--   using these credentials.
awsCredentials_sessionToken :: Lens' AwsCredentials (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.AwsCredentials.AwsCredentials
instance GHC.Show.Show Network.AWS.GameLift.Types.AwsCredentials.AwsCredentials
instance GHC.Classes.Eq Network.AWS.GameLift.Types.AwsCredentials.AwsCredentials
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.AwsCredentials.AwsCredentials
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.AwsCredentials.AwsCredentials
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.AwsCredentials.AwsCredentials


module Network.AWS.GameLift.Types.BackfillMode
newtype BackfillMode
BackfillMode' :: Text -> BackfillMode
[fromBackfillMode] :: BackfillMode -> Text
pattern BackfillMode_AUTOMATIC :: BackfillMode
pattern BackfillMode_MANUAL :: BackfillMode
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance GHC.Generics.Generic Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance GHC.Classes.Ord Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance GHC.Classes.Eq Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance GHC.Read.Read Network.AWS.GameLift.Types.BackfillMode.BackfillMode
instance GHC.Show.Show Network.AWS.GameLift.Types.BackfillMode.BackfillMode


module Network.AWS.GameLift.Types.BalancingStrategy
newtype BalancingStrategy
BalancingStrategy' :: Text -> BalancingStrategy
[fromBalancingStrategy] :: BalancingStrategy -> Text
pattern BalancingStrategy_ON_DEMAND_ONLY :: BalancingStrategy
pattern BalancingStrategy_SPOT_ONLY :: BalancingStrategy
pattern BalancingStrategy_SPOT_PREFERRED :: BalancingStrategy
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance GHC.Generics.Generic Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance GHC.Classes.Ord Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance GHC.Classes.Eq Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance GHC.Read.Read Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy
instance GHC.Show.Show Network.AWS.GameLift.Types.BalancingStrategy.BalancingStrategy


module Network.AWS.GameLift.Types.BuildStatus
newtype BuildStatus
BuildStatus' :: Text -> BuildStatus
[fromBuildStatus] :: BuildStatus -> Text
pattern BuildStatus_FAILED :: BuildStatus
pattern BuildStatus_INITIALIZED :: BuildStatus
pattern BuildStatus_READY :: BuildStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance GHC.Generics.Generic Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance GHC.Classes.Ord Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance GHC.Classes.Eq Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance GHC.Read.Read Network.AWS.GameLift.Types.BuildStatus.BuildStatus
instance GHC.Show.Show Network.AWS.GameLift.Types.BuildStatus.BuildStatus


module Network.AWS.GameLift.Types.CertificateType
newtype CertificateType
CertificateType' :: Text -> CertificateType
[fromCertificateType] :: CertificateType -> Text
pattern CertificateType_DISABLED :: CertificateType
pattern CertificateType_GENERATED :: CertificateType
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.CertificateType.CertificateType
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.CertificateType.CertificateType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.CertificateType.CertificateType
instance GHC.Classes.Ord Network.AWS.GameLift.Types.CertificateType.CertificateType
instance GHC.Classes.Eq Network.AWS.GameLift.Types.CertificateType.CertificateType
instance GHC.Read.Read Network.AWS.GameLift.Types.CertificateType.CertificateType
instance GHC.Show.Show Network.AWS.GameLift.Types.CertificateType.CertificateType


module Network.AWS.GameLift.Types.CertificateConfiguration

-- | Determines whether a TLS/SSL certificate is generated for a fleet.
--   This feature must be enabled when creating the fleet. All instances in
--   a fleet share the same certificate. The certificate can be retrieved
--   by calling the <a>GameLift Server SDK</a> operation
--   <tt>GetInstanceCertificate</tt>.
--   
--   A fleet's certificate configuration is part of FleetAttributes.
--   
--   <i>See:</i> <a>newCertificateConfiguration</a> smart constructor.
data CertificateConfiguration
CertificateConfiguration' :: CertificateType -> CertificateConfiguration

-- | Indicates whether a TLS/SSL certificate is generated for a fleet.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b>GENERATED</b> - Generate a TLS/SSL certificate for this
--   fleet.</li>
--   <li><b>DISABLED</b> - (default) Do not generate a TLS/SSL certificate
--   for this fleet.</li>
--   </ul>
[$sel:certificateType:CertificateConfiguration'] :: CertificateConfiguration -> CertificateType

-- | Create a value of <a>CertificateConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateType:CertificateConfiguration'</a>,
--   <a>certificateConfiguration_certificateType</a> - Indicates whether a
--   TLS/SSL certificate is generated for a fleet.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b>GENERATED</b> - Generate a TLS/SSL certificate for this
--   fleet.</li>
--   <li><b>DISABLED</b> - (default) Do not generate a TLS/SSL certificate
--   for this fleet.</li>
--   </ul>
newCertificateConfiguration :: CertificateType -> CertificateConfiguration

-- | Indicates whether a TLS/SSL certificate is generated for a fleet.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b>GENERATED</b> - Generate a TLS/SSL certificate for this
--   fleet.</li>
--   <li><b>DISABLED</b> - (default) Do not generate a TLS/SSL certificate
--   for this fleet.</li>
--   </ul>
certificateConfiguration_certificateType :: Lens' CertificateConfiguration CertificateType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.CertificateConfiguration.CertificateConfiguration
instance GHC.Show.Show Network.AWS.GameLift.Types.CertificateConfiguration.CertificateConfiguration
instance GHC.Read.Read Network.AWS.GameLift.Types.CertificateConfiguration.CertificateConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.Types.CertificateConfiguration.CertificateConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.CertificateConfiguration.CertificateConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.CertificateConfiguration.CertificateConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.CertificateConfiguration.CertificateConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.CertificateConfiguration.CertificateConfiguration


module Network.AWS.GameLift.Types.ComparisonOperatorType
newtype ComparisonOperatorType
ComparisonOperatorType' :: Text -> ComparisonOperatorType
[fromComparisonOperatorType] :: ComparisonOperatorType -> Text
pattern ComparisonOperatorType_GreaterThanOrEqualToThreshold :: ComparisonOperatorType
pattern ComparisonOperatorType_GreaterThanThreshold :: ComparisonOperatorType
pattern ComparisonOperatorType_LessThanOrEqualToThreshold :: ComparisonOperatorType
pattern ComparisonOperatorType_LessThanThreshold :: ComparisonOperatorType
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance GHC.Classes.Ord Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance GHC.Classes.Eq Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance GHC.Read.Read Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType
instance GHC.Show.Show Network.AWS.GameLift.Types.ComparisonOperatorType.ComparisonOperatorType


module Network.AWS.GameLift.Types.DesiredPlayerSession

-- | Player information for use when creating player sessions using a game
--   session placement request with StartGameSessionPlacement.
--   
--   <i>See:</i> <a>newDesiredPlayerSession</a> smart constructor.
data DesiredPlayerSession
DesiredPlayerSession' :: Maybe Text -> Maybe Text -> DesiredPlayerSession

-- | A unique identifier for a player to associate with the player session.
[$sel:playerId:DesiredPlayerSession'] :: DesiredPlayerSession -> Maybe Text

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
[$sel:playerData:DesiredPlayerSession'] :: DesiredPlayerSession -> Maybe Text

-- | Create a value of <a>DesiredPlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerId:DesiredPlayerSession'</a>,
--   <a>desiredPlayerSession_playerId</a> - A unique identifier for a
--   player to associate with the player session.
--   
--   <a>$sel:playerData:DesiredPlayerSession'</a>,
--   <a>desiredPlayerSession_playerData</a> - Developer-defined information
--   related to a player. GameLift does not use this data, so it can be
--   formatted as needed for use in the game.
newDesiredPlayerSession :: DesiredPlayerSession

-- | A unique identifier for a player to associate with the player session.
desiredPlayerSession_playerId :: Lens' DesiredPlayerSession (Maybe Text)

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
desiredPlayerSession_playerData :: Lens' DesiredPlayerSession (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.DesiredPlayerSession.DesiredPlayerSession
instance GHC.Show.Show Network.AWS.GameLift.Types.DesiredPlayerSession.DesiredPlayerSession
instance GHC.Read.Read Network.AWS.GameLift.Types.DesiredPlayerSession.DesiredPlayerSession
instance GHC.Classes.Eq Network.AWS.GameLift.Types.DesiredPlayerSession.DesiredPlayerSession
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.DesiredPlayerSession.DesiredPlayerSession
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.DesiredPlayerSession.DesiredPlayerSession
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.DesiredPlayerSession.DesiredPlayerSession


module Network.AWS.GameLift.Types.EC2InstanceCounts

-- | Resource capacity settings. Fleet capacity is measured in EC2
--   instances. Pending and terminating counts are non-zero when the fleet
--   capacity is adjusting to a scaling event or if access to resources is
--   temporarily affected.
--   
--   EC2 instance counts are part of FleetCapacity.
--   
--   <i>See:</i> <a>newEC2InstanceCounts</a> smart constructor.
data EC2InstanceCounts
EC2InstanceCounts' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> EC2InstanceCounts

-- | Number of active instances that are not currently hosting a game
--   session.
[$sel:idle:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | The minimum instance count value allowed.
[$sel:minimum:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | Number of instances that are starting but not yet active.
[$sel:pending:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | Number of instances that are no longer active but haven't yet been
--   terminated.
[$sel:terminating:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | Actual number of instances that are ready to host game sessions.
[$sel:active:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | The maximum instance count value allowed.
[$sel:maximum:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | Ideal number of active instances. GameLift will always try to maintain
--   the desired number of instances. Capacity is scaled up or down by
--   changing the desired instances.
[$sel:desired:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | Create a value of <a>EC2InstanceCounts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idle:EC2InstanceCounts'</a>, <a>eC2InstanceCounts_idle</a> -
--   Number of active instances that are not currently hosting a game
--   session.
--   
--   <a>$sel:minimum:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_minimum</a> - The minimum instance count value
--   allowed.
--   
--   <a>$sel:pending:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_pending</a> - Number of instances that are
--   starting but not yet active.
--   
--   <a>$sel:terminating:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_terminating</a> - Number of instances that are no
--   longer active but haven't yet been terminated.
--   
--   <a>$sel:active:EC2InstanceCounts'</a>, <a>eC2InstanceCounts_active</a>
--   - Actual number of instances that are ready to host game sessions.
--   
--   <a>$sel:maximum:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_maximum</a> - The maximum instance count value
--   allowed.
--   
--   <a>$sel:desired:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_desired</a> - Ideal number of active instances.
--   GameLift will always try to maintain the desired number of instances.
--   Capacity is scaled up or down by changing the desired instances.
newEC2InstanceCounts :: EC2InstanceCounts

-- | Number of active instances that are not currently hosting a game
--   session.
eC2InstanceCounts_idle :: Lens' EC2InstanceCounts (Maybe Natural)

-- | The minimum instance count value allowed.
eC2InstanceCounts_minimum :: Lens' EC2InstanceCounts (Maybe Natural)

-- | Number of instances that are starting but not yet active.
eC2InstanceCounts_pending :: Lens' EC2InstanceCounts (Maybe Natural)

-- | Number of instances that are no longer active but haven't yet been
--   terminated.
eC2InstanceCounts_terminating :: Lens' EC2InstanceCounts (Maybe Natural)

-- | Actual number of instances that are ready to host game sessions.
eC2InstanceCounts_active :: Lens' EC2InstanceCounts (Maybe Natural)

-- | The maximum instance count value allowed.
eC2InstanceCounts_maximum :: Lens' EC2InstanceCounts (Maybe Natural)

-- | Ideal number of active instances. GameLift will always try to maintain
--   the desired number of instances. Capacity is scaled up or down by
--   changing the desired instances.
eC2InstanceCounts_desired :: Lens' EC2InstanceCounts (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.EC2InstanceCounts.EC2InstanceCounts
instance GHC.Show.Show Network.AWS.GameLift.Types.EC2InstanceCounts.EC2InstanceCounts
instance GHC.Read.Read Network.AWS.GameLift.Types.EC2InstanceCounts.EC2InstanceCounts
instance GHC.Classes.Eq Network.AWS.GameLift.Types.EC2InstanceCounts.EC2InstanceCounts
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.EC2InstanceCounts.EC2InstanceCounts
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.EC2InstanceCounts.EC2InstanceCounts
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.EC2InstanceCounts.EC2InstanceCounts


module Network.AWS.GameLift.Types.EC2InstanceType
newtype EC2InstanceType
EC2InstanceType' :: Text -> EC2InstanceType
[fromEC2InstanceType] :: EC2InstanceType -> Text
pattern EC2InstanceType_C3_2xlarge :: EC2InstanceType
pattern EC2InstanceType_C3_4xlarge :: EC2InstanceType
pattern EC2InstanceType_C3_8xlarge :: EC2InstanceType
pattern EC2InstanceType_C3_large :: EC2InstanceType
pattern EC2InstanceType_C3_xlarge :: EC2InstanceType
pattern EC2InstanceType_C4_2xlarge :: EC2InstanceType
pattern EC2InstanceType_C4_4xlarge :: EC2InstanceType
pattern EC2InstanceType_C4_8xlarge :: EC2InstanceType
pattern EC2InstanceType_C4_large :: EC2InstanceType
pattern EC2InstanceType_C4_xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_12xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_18xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_24xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_2xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_4xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_9xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_large :: EC2InstanceType
pattern EC2InstanceType_C5_xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_12xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_16xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_24xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_2xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_4xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_8xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_large :: EC2InstanceType
pattern EC2InstanceType_C5a_xlarge :: EC2InstanceType
pattern EC2InstanceType_M3_2xlarge :: EC2InstanceType
pattern EC2InstanceType_M3_large :: EC2InstanceType
pattern EC2InstanceType_M3_medium :: EC2InstanceType
pattern EC2InstanceType_M3_xlarge :: EC2InstanceType
pattern EC2InstanceType_M4_10xlarge :: EC2InstanceType
pattern EC2InstanceType_M4_2xlarge :: EC2InstanceType
pattern EC2InstanceType_M4_4xlarge :: EC2InstanceType
pattern EC2InstanceType_M4_large :: EC2InstanceType
pattern EC2InstanceType_M4_xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_12xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_16xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_24xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_2xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_4xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_8xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_large :: EC2InstanceType
pattern EC2InstanceType_M5_xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_12xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_16xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_24xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_2xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_4xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_8xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_large :: EC2InstanceType
pattern EC2InstanceType_M5a_xlarge :: EC2InstanceType
pattern EC2InstanceType_R3_2xlarge :: EC2InstanceType
pattern EC2InstanceType_R3_4xlarge :: EC2InstanceType
pattern EC2InstanceType_R3_8xlarge :: EC2InstanceType
pattern EC2InstanceType_R3_large :: EC2InstanceType
pattern EC2InstanceType_R3_xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_16xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_2xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_4xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_8xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_large :: EC2InstanceType
pattern EC2InstanceType_R4_xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_12xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_16xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_24xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_2xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_4xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_8xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_large :: EC2InstanceType
pattern EC2InstanceType_R5_xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_12xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_16xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_24xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_2xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_4xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_8xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_large :: EC2InstanceType
pattern EC2InstanceType_R5a_xlarge :: EC2InstanceType
pattern EC2InstanceType_T2_large :: EC2InstanceType
pattern EC2InstanceType_T2_medium :: EC2InstanceType
pattern EC2InstanceType_T2_micro :: EC2InstanceType
pattern EC2InstanceType_T2_small :: EC2InstanceType
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance GHC.Classes.Ord Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance GHC.Classes.Eq Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance GHC.Read.Read Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType
instance GHC.Show.Show Network.AWS.GameLift.Types.EC2InstanceType.EC2InstanceType


module Network.AWS.GameLift.Types.EC2InstanceLimit

-- | The GameLift service limits for an EC2 instance type and current
--   utilization. GameLift allows AWS accounts a maximum number of
--   instances, per instance type, per AWS Region or location, for use with
--   GameLift. You can request an limit increase for your account by using
--   the <b>Service limits</b> page in the GameLift console.
--   
--   <b>Related actions</b>
--   
--   DescribeEC2InstanceLimits
--   
--   <i>See:</i> <a>newEC2InstanceLimit</a> smart constructor.
data EC2InstanceLimit
EC2InstanceLimit' :: Maybe Natural -> Maybe Natural -> Maybe EC2InstanceType -> Maybe Text -> EC2InstanceLimit

-- | The number of instances that is allowed for the specified instance
--   type and location.
[$sel:instanceLimit:EC2InstanceLimit'] :: EC2InstanceLimit -> Maybe Natural

-- | The number of instances for the specified type and location that are
--   currently being used by the AWS account.
[$sel:currentInstances:EC2InstanceLimit'] :: EC2InstanceLimit -> Maybe Natural

-- | The name of an EC2 instance type. See <a>Amazon EC2 Instance Types</a>
--   for detailed descriptions.
[$sel:eC2InstanceType:EC2InstanceLimit'] :: EC2InstanceLimit -> Maybe EC2InstanceType

-- | An AWS Region code, such as <tt>us-west-2</tt>.
[$sel:location:EC2InstanceLimit'] :: EC2InstanceLimit -> Maybe Text

-- | Create a value of <a>EC2InstanceLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceLimit:EC2InstanceLimit'</a>,
--   <a>eC2InstanceLimit_instanceLimit</a> - The number of instances that
--   is allowed for the specified instance type and location.
--   
--   <a>$sel:currentInstances:EC2InstanceLimit'</a>,
--   <a>eC2InstanceLimit_currentInstances</a> - The number of instances for
--   the specified type and location that are currently being used by the
--   AWS account.
--   
--   <a>$sel:eC2InstanceType:EC2InstanceLimit'</a>,
--   <a>eC2InstanceLimit_eC2InstanceType</a> - The name of an EC2 instance
--   type. See <a>Amazon EC2 Instance Types</a> for detailed descriptions.
--   
--   <a>$sel:location:EC2InstanceLimit'</a>,
--   <a>eC2InstanceLimit_location</a> - An AWS Region code, such as
--   <tt>us-west-2</tt>.
newEC2InstanceLimit :: EC2InstanceLimit

-- | The number of instances that is allowed for the specified instance
--   type and location.
eC2InstanceLimit_instanceLimit :: Lens' EC2InstanceLimit (Maybe Natural)

-- | The number of instances for the specified type and location that are
--   currently being used by the AWS account.
eC2InstanceLimit_currentInstances :: Lens' EC2InstanceLimit (Maybe Natural)

-- | The name of an EC2 instance type. See <a>Amazon EC2 Instance Types</a>
--   for detailed descriptions.
eC2InstanceLimit_eC2InstanceType :: Lens' EC2InstanceLimit (Maybe EC2InstanceType)

-- | An AWS Region code, such as <tt>us-west-2</tt>.
eC2InstanceLimit_location :: Lens' EC2InstanceLimit (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.EC2InstanceLimit.EC2InstanceLimit
instance GHC.Show.Show Network.AWS.GameLift.Types.EC2InstanceLimit.EC2InstanceLimit
instance GHC.Read.Read Network.AWS.GameLift.Types.EC2InstanceLimit.EC2InstanceLimit
instance GHC.Classes.Eq Network.AWS.GameLift.Types.EC2InstanceLimit.EC2InstanceLimit
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.EC2InstanceLimit.EC2InstanceLimit
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.EC2InstanceLimit.EC2InstanceLimit
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.EC2InstanceLimit.EC2InstanceLimit


module Network.AWS.GameLift.Types.EventCode
newtype EventCode
EventCode' :: Text -> EventCode
[fromEventCode] :: EventCode -> Text
pattern EventCode_FLEET_ACTIVATION_FAILED :: EventCode
pattern EventCode_FLEET_ACTIVATION_FAILED_NO_INSTANCES :: EventCode
pattern EventCode_FLEET_BINARY_DOWNLOAD_FAILED :: EventCode
pattern EventCode_FLEET_CREATED :: EventCode
pattern EventCode_FLEET_CREATION_EXTRACTING_BUILD :: EventCode
pattern EventCode_FLEET_CREATION_RUNNING_INSTALLER :: EventCode
pattern EventCode_FLEET_CREATION_VALIDATING_RUNTIME_CONFIG :: EventCode
pattern EventCode_FLEET_DELETED :: EventCode
pattern EventCode_FLEET_INITIALIZATION_FAILED :: EventCode
pattern EventCode_FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED :: EventCode
pattern EventCode_FLEET_SCALING_EVENT :: EventCode
pattern EventCode_FLEET_STATE_ACTIVATING :: EventCode
pattern EventCode_FLEET_STATE_ACTIVE :: EventCode
pattern EventCode_FLEET_STATE_BUILDING :: EventCode
pattern EventCode_FLEET_STATE_DOWNLOADING :: EventCode
pattern EventCode_FLEET_STATE_ERROR :: EventCode
pattern EventCode_FLEET_STATE_VALIDATING :: EventCode
pattern EventCode_FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE :: EventCode
pattern EventCode_FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND :: EventCode
pattern EventCode_FLEET_VALIDATION_TIMED_OUT :: EventCode
pattern EventCode_FLEET_VPC_PEERING_DELETED :: EventCode
pattern EventCode_FLEET_VPC_PEERING_FAILED :: EventCode
pattern EventCode_FLEET_VPC_PEERING_SUCCEEDED :: EventCode
pattern EventCode_GAME_SESSION_ACTIVATION_TIMEOUT :: EventCode
pattern EventCode_GENERIC_EVENT :: EventCode
pattern EventCode_INSTANCE_INTERRUPTED :: EventCode
pattern EventCode_SERVER_PROCESS_CRASHED :: EventCode
pattern EventCode_SERVER_PROCESS_FORCE_TERMINATED :: EventCode
pattern EventCode_SERVER_PROCESS_INVALID_PATH :: EventCode
pattern EventCode_SERVER_PROCESS_PROCESS_EXIT_TIMEOUT :: EventCode
pattern EventCode_SERVER_PROCESS_PROCESS_READY_TIMEOUT :: EventCode
pattern EventCode_SERVER_PROCESS_SDK_INITIALIZATION_TIMEOUT :: EventCode
pattern EventCode_SERVER_PROCESS_TERMINATED_UNHEALTHY :: EventCode
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.EventCode.EventCode
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.EventCode.EventCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.EventCode.EventCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.EventCode.EventCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.EventCode.EventCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.EventCode.EventCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.EventCode.EventCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.EventCode.EventCode
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.EventCode.EventCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.EventCode.EventCode
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.EventCode.EventCode
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.EventCode.EventCode
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.EventCode.EventCode
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.EventCode.EventCode
instance GHC.Generics.Generic Network.AWS.GameLift.Types.EventCode.EventCode
instance GHC.Classes.Ord Network.AWS.GameLift.Types.EventCode.EventCode
instance GHC.Classes.Eq Network.AWS.GameLift.Types.EventCode.EventCode
instance GHC.Read.Read Network.AWS.GameLift.Types.EventCode.EventCode
instance GHC.Show.Show Network.AWS.GameLift.Types.EventCode.EventCode


module Network.AWS.GameLift.Types.Event

-- | Log entry describing an event that involves GameLift resources (such
--   as a fleet). In addition to tracking activity, event codes and
--   messages can provide additional information for troubleshooting and
--   debugging problems.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetEvents
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe Text -> Maybe EventCode -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Event

-- | A unique identifier for an event resource, such as a fleet ID.
[$sel:resourceId:Event'] :: Event -> Maybe Text

-- | The type of event being logged.
--   
--   <b>Fleet creation events (ordered by fleet creation activity):</b>
--   
--   <ul>
--   <li>FLEET_CREATED -- A fleet resource was successfully created with a
--   status of <tt>NEW</tt>. Event messaging includes the fleet ID.</li>
--   <li>FLEET_STATE_DOWNLOADING -- Fleet status changed from <tt>NEW</tt>
--   to <tt>DOWNLOADING</tt>. The compressed build has started downloading
--   to a fleet instance for installation.</li>
--   <li>FLEET_BINARY_DOWNLOAD_FAILED -- The build failed to download to
--   the fleet instance.</li>
--   <li>FLEET_CREATION_EXTRACTING_BUILD – The game server build was
--   successfully downloaded to an instance, and the build files are now
--   being extracted from the uploaded build and saved to an instance.
--   Failure at this stage prevents a fleet from moving to <tt>ACTIVE</tt>
--   status. Logs for this stage display a list of the files that are
--   extracted and saved on the instance. Access the logs by using the URL
--   in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_RUNNING_INSTALLER – The game server build files
--   were successfully extracted, and the GameLift is now running the
--   build's install script (if one is included). Failure in this stage
--   prevents a fleet from moving to <tt>ACTIVE</tt> status. Logs for this
--   stage list the installation steps and whether or not the install
--   completed successfully. Access the logs by using the URL in
--   <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_VALIDATING_RUNTIME_CONFIG -- The build process was
--   successful, and the GameLift is now verifying that the game server
--   launch paths, which are specified in the fleet's runtime
--   configuration, exist. If any listed launch path exists, GameLift tries
--   to launch a game server process and waits for the process to report
--   ready. Failures in this stage prevent a fleet from moving to
--   <tt>ACTIVE</tt> status. Logs for this stage list the launch paths in
--   the runtime configuration and indicate whether each is found. Access
--   the logs by using the URL in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_STATE_VALIDATING -- Fleet status changed from
--   <tt>DOWNLOADING</tt> to <tt>VALIDATING</tt>.</li>
--   <li>FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path does not exist on the instance.</li>
--   <li>FLEET_STATE_BUILDING -- Fleet status changed from
--   <tt>VALIDATING</tt> to <tt>BUILDING</tt>.</li>
--   <li>FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path failed to run on the fleet instance.</li>
--   <li>FLEET_STATE_ACTIVATING -- Fleet status changed from
--   <tt>BUILDING</tt> to <tt>ACTIVATING</tt>.</li>
--   <li>FLEET_ACTIVATION_FAILED - The fleet failed to successfully
--   complete one of the steps in the fleet activation process. This event
--   code indicates that the game build was successfully downloaded to a
--   fleet instance, built, and validated, but was not able to start a
--   server process. Learn more at <a>Debug Fleet Creation Issues</a></li>
--   <li>FLEET_STATE_ACTIVE -- The fleet's status changed from
--   <tt>ACTIVATING</tt> to <tt>ACTIVE</tt>. The fleet is now ready to host
--   game sessions.</li>
--   </ul>
--   
--   <b>VPC peering events:</b>
--   
--   <ul>
--   <li>FLEET_VPC_PEERING_SUCCEEDED -- A VPC peering connection has been
--   established between the VPC for an GameLift fleet and a VPC in your
--   AWS account.</li>
--   <li>FLEET_VPC_PEERING_FAILED -- A requested VPC peering connection has
--   failed. Event details and status information (see
--   DescribeVpcPeeringConnections) provide additional detail. A common
--   reason for peering failure is that the two VPCs have overlapping CIDR
--   blocks of IPv4 addresses. To resolve this, change the CIDR block for
--   the VPC in your AWS account. For more information on VPC peering
--   failures, see
--   <a>https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/invalid-peering-configurations.html</a></li>
--   <li>FLEET_VPC_PEERING_DELETED -- A VPC peering connection has been
--   successfully deleted.</li>
--   </ul>
--   
--   <b>Spot instance events:</b>
--   
--   <ul>
--   <li>INSTANCE_INTERRUPTED -- A spot instance was interrupted by EC2
--   with a two-minute notification.</li>
--   </ul>
--   
--   <b>Other fleet events:</b>
--   
--   <ul>
--   <li>FLEET_SCALING_EVENT -- A change was made to the fleet's capacity
--   settings (desired instances, minimum/maximum scaling limits). Event
--   messaging includes the new capacity settings.</li>
--   <li>FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED -- A change was
--   made to the fleet's game session protection policy setting. Event
--   messaging includes both the old and new policy setting.</li>
--   <li>FLEET_DELETED -- A request to delete a fleet was initiated.</li>
--   <li>GENERIC_EVENT -- An unspecified event has occurred.</li>
--   </ul>
[$sel:eventCode:Event'] :: Event -> Maybe EventCode

-- | A unique identifier for a fleet event.
[$sel:eventId:Event'] :: Event -> Maybe Text

-- | Additional information related to the event.
[$sel:message:Event'] :: Event -> Maybe Text

-- | Time stamp indicating when this event occurred. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:eventTime:Event'] :: Event -> Maybe POSIX

-- | Location of stored logs with additional detail that is related to the
--   event. This is useful for debugging issues. The URL is valid for 15
--   minutes. You can also access fleet creation logs through the GameLift
--   console.
[$sel:preSignedLogUrl:Event'] :: Event -> Maybe Text

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:Event'</a>, <a>event_resourceId</a> - A unique
--   identifier for an event resource, such as a fleet ID.
--   
--   <a>$sel:eventCode:Event'</a>, <a>event_eventCode</a> - The type of
--   event being logged.
--   
--   <b>Fleet creation events (ordered by fleet creation activity):</b>
--   
--   <ul>
--   <li>FLEET_CREATED -- A fleet resource was successfully created with a
--   status of <tt>NEW</tt>. Event messaging includes the fleet ID.</li>
--   <li>FLEET_STATE_DOWNLOADING -- Fleet status changed from <tt>NEW</tt>
--   to <tt>DOWNLOADING</tt>. The compressed build has started downloading
--   to a fleet instance for installation.</li>
--   <li>FLEET_BINARY_DOWNLOAD_FAILED -- The build failed to download to
--   the fleet instance.</li>
--   <li>FLEET_CREATION_EXTRACTING_BUILD – The game server build was
--   successfully downloaded to an instance, and the build files are now
--   being extracted from the uploaded build and saved to an instance.
--   Failure at this stage prevents a fleet from moving to <tt>ACTIVE</tt>
--   status. Logs for this stage display a list of the files that are
--   extracted and saved on the instance. Access the logs by using the URL
--   in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_RUNNING_INSTALLER – The game server build files
--   were successfully extracted, and the GameLift is now running the
--   build's install script (if one is included). Failure in this stage
--   prevents a fleet from moving to <tt>ACTIVE</tt> status. Logs for this
--   stage list the installation steps and whether or not the install
--   completed successfully. Access the logs by using the URL in
--   <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_VALIDATING_RUNTIME_CONFIG -- The build process was
--   successful, and the GameLift is now verifying that the game server
--   launch paths, which are specified in the fleet's runtime
--   configuration, exist. If any listed launch path exists, GameLift tries
--   to launch a game server process and waits for the process to report
--   ready. Failures in this stage prevent a fleet from moving to
--   <tt>ACTIVE</tt> status. Logs for this stage list the launch paths in
--   the runtime configuration and indicate whether each is found. Access
--   the logs by using the URL in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_STATE_VALIDATING -- Fleet status changed from
--   <tt>DOWNLOADING</tt> to <tt>VALIDATING</tt>.</li>
--   <li>FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path does not exist on the instance.</li>
--   <li>FLEET_STATE_BUILDING -- Fleet status changed from
--   <tt>VALIDATING</tt> to <tt>BUILDING</tt>.</li>
--   <li>FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path failed to run on the fleet instance.</li>
--   <li>FLEET_STATE_ACTIVATING -- Fleet status changed from
--   <tt>BUILDING</tt> to <tt>ACTIVATING</tt>.</li>
--   <li>FLEET_ACTIVATION_FAILED - The fleet failed to successfully
--   complete one of the steps in the fleet activation process. This event
--   code indicates that the game build was successfully downloaded to a
--   fleet instance, built, and validated, but was not able to start a
--   server process. Learn more at <a>Debug Fleet Creation Issues</a></li>
--   <li>FLEET_STATE_ACTIVE -- The fleet's status changed from
--   <tt>ACTIVATING</tt> to <tt>ACTIVE</tt>. The fleet is now ready to host
--   game sessions.</li>
--   </ul>
--   
--   <b>VPC peering events:</b>
--   
--   <ul>
--   <li>FLEET_VPC_PEERING_SUCCEEDED -- A VPC peering connection has been
--   established between the VPC for an GameLift fleet and a VPC in your
--   AWS account.</li>
--   <li>FLEET_VPC_PEERING_FAILED -- A requested VPC peering connection has
--   failed. Event details and status information (see
--   DescribeVpcPeeringConnections) provide additional detail. A common
--   reason for peering failure is that the two VPCs have overlapping CIDR
--   blocks of IPv4 addresses. To resolve this, change the CIDR block for
--   the VPC in your AWS account. For more information on VPC peering
--   failures, see
--   <a>https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/invalid-peering-configurations.html</a></li>
--   <li>FLEET_VPC_PEERING_DELETED -- A VPC peering connection has been
--   successfully deleted.</li>
--   </ul>
--   
--   <b>Spot instance events:</b>
--   
--   <ul>
--   <li>INSTANCE_INTERRUPTED -- A spot instance was interrupted by EC2
--   with a two-minute notification.</li>
--   </ul>
--   
--   <b>Other fleet events:</b>
--   
--   <ul>
--   <li>FLEET_SCALING_EVENT -- A change was made to the fleet's capacity
--   settings (desired instances, minimum/maximum scaling limits). Event
--   messaging includes the new capacity settings.</li>
--   <li>FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED -- A change was
--   made to the fleet's game session protection policy setting. Event
--   messaging includes both the old and new policy setting.</li>
--   <li>FLEET_DELETED -- A request to delete a fleet was initiated.</li>
--   <li>GENERIC_EVENT -- An unspecified event has occurred.</li>
--   </ul>
--   
--   <a>$sel:eventId:Event'</a>, <a>event_eventId</a> - A unique identifier
--   for a fleet event.
--   
--   <a>$sel:message:Event'</a>, <a>event_message</a> - Additional
--   information related to the event.
--   
--   <a>$sel:eventTime:Event'</a>, <a>event_eventTime</a> - Time stamp
--   indicating when this event occurred. Format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:preSignedLogUrl:Event'</a>, <a>event_preSignedLogUrl</a> -
--   Location of stored logs with additional detail that is related to the
--   event. This is useful for debugging issues. The URL is valid for 15
--   minutes. You can also access fleet creation logs through the GameLift
--   console.
newEvent :: Event

-- | A unique identifier for an event resource, such as a fleet ID.
event_resourceId :: Lens' Event (Maybe Text)

-- | The type of event being logged.
--   
--   <b>Fleet creation events (ordered by fleet creation activity):</b>
--   
--   <ul>
--   <li>FLEET_CREATED -- A fleet resource was successfully created with a
--   status of <tt>NEW</tt>. Event messaging includes the fleet ID.</li>
--   <li>FLEET_STATE_DOWNLOADING -- Fleet status changed from <tt>NEW</tt>
--   to <tt>DOWNLOADING</tt>. The compressed build has started downloading
--   to a fleet instance for installation.</li>
--   <li>FLEET_BINARY_DOWNLOAD_FAILED -- The build failed to download to
--   the fleet instance.</li>
--   <li>FLEET_CREATION_EXTRACTING_BUILD – The game server build was
--   successfully downloaded to an instance, and the build files are now
--   being extracted from the uploaded build and saved to an instance.
--   Failure at this stage prevents a fleet from moving to <tt>ACTIVE</tt>
--   status. Logs for this stage display a list of the files that are
--   extracted and saved on the instance. Access the logs by using the URL
--   in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_RUNNING_INSTALLER – The game server build files
--   were successfully extracted, and the GameLift is now running the
--   build's install script (if one is included). Failure in this stage
--   prevents a fleet from moving to <tt>ACTIVE</tt> status. Logs for this
--   stage list the installation steps and whether or not the install
--   completed successfully. Access the logs by using the URL in
--   <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_VALIDATING_RUNTIME_CONFIG -- The build process was
--   successful, and the GameLift is now verifying that the game server
--   launch paths, which are specified in the fleet's runtime
--   configuration, exist. If any listed launch path exists, GameLift tries
--   to launch a game server process and waits for the process to report
--   ready. Failures in this stage prevent a fleet from moving to
--   <tt>ACTIVE</tt> status. Logs for this stage list the launch paths in
--   the runtime configuration and indicate whether each is found. Access
--   the logs by using the URL in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_STATE_VALIDATING -- Fleet status changed from
--   <tt>DOWNLOADING</tt> to <tt>VALIDATING</tt>.</li>
--   <li>FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path does not exist on the instance.</li>
--   <li>FLEET_STATE_BUILDING -- Fleet status changed from
--   <tt>VALIDATING</tt> to <tt>BUILDING</tt>.</li>
--   <li>FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path failed to run on the fleet instance.</li>
--   <li>FLEET_STATE_ACTIVATING -- Fleet status changed from
--   <tt>BUILDING</tt> to <tt>ACTIVATING</tt>.</li>
--   <li>FLEET_ACTIVATION_FAILED - The fleet failed to successfully
--   complete one of the steps in the fleet activation process. This event
--   code indicates that the game build was successfully downloaded to a
--   fleet instance, built, and validated, but was not able to start a
--   server process. Learn more at <a>Debug Fleet Creation Issues</a></li>
--   <li>FLEET_STATE_ACTIVE -- The fleet's status changed from
--   <tt>ACTIVATING</tt> to <tt>ACTIVE</tt>. The fleet is now ready to host
--   game sessions.</li>
--   </ul>
--   
--   <b>VPC peering events:</b>
--   
--   <ul>
--   <li>FLEET_VPC_PEERING_SUCCEEDED -- A VPC peering connection has been
--   established between the VPC for an GameLift fleet and a VPC in your
--   AWS account.</li>
--   <li>FLEET_VPC_PEERING_FAILED -- A requested VPC peering connection has
--   failed. Event details and status information (see
--   DescribeVpcPeeringConnections) provide additional detail. A common
--   reason for peering failure is that the two VPCs have overlapping CIDR
--   blocks of IPv4 addresses. To resolve this, change the CIDR block for
--   the VPC in your AWS account. For more information on VPC peering
--   failures, see
--   <a>https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/invalid-peering-configurations.html</a></li>
--   <li>FLEET_VPC_PEERING_DELETED -- A VPC peering connection has been
--   successfully deleted.</li>
--   </ul>
--   
--   <b>Spot instance events:</b>
--   
--   <ul>
--   <li>INSTANCE_INTERRUPTED -- A spot instance was interrupted by EC2
--   with a two-minute notification.</li>
--   </ul>
--   
--   <b>Other fleet events:</b>
--   
--   <ul>
--   <li>FLEET_SCALING_EVENT -- A change was made to the fleet's capacity
--   settings (desired instances, minimum/maximum scaling limits). Event
--   messaging includes the new capacity settings.</li>
--   <li>FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED -- A change was
--   made to the fleet's game session protection policy setting. Event
--   messaging includes both the old and new policy setting.</li>
--   <li>FLEET_DELETED -- A request to delete a fleet was initiated.</li>
--   <li>GENERIC_EVENT -- An unspecified event has occurred.</li>
--   </ul>
event_eventCode :: Lens' Event (Maybe EventCode)

-- | A unique identifier for a fleet event.
event_eventId :: Lens' Event (Maybe Text)

-- | Additional information related to the event.
event_message :: Lens' Event (Maybe Text)

-- | Time stamp indicating when this event occurred. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
event_eventTime :: Lens' Event (Maybe UTCTime)

-- | Location of stored logs with additional detail that is related to the
--   event. This is useful for debugging issues. The URL is valid for 15
--   minutes. You can also access fleet creation logs through the GameLift
--   console.
event_preSignedLogUrl :: Lens' Event (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.Event.Event
instance GHC.Show.Show Network.AWS.GameLift.Types.Event.Event
instance GHC.Read.Read Network.AWS.GameLift.Types.Event.Event
instance GHC.Classes.Eq Network.AWS.GameLift.Types.Event.Event
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.Event.Event
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.Event.Event
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.Event.Event


module Network.AWS.GameLift.Types.FilterConfiguration

-- | A list of fleet locations where a game session queue can place new
--   game sessions. You can use a filter to temporarily turn off placements
--   for specific locations. For queues that have multi-location fleets,
--   you can use a filter configuration allow placement with some, but not
--   all of these locations.
--   
--   Filter configurations are part of a GameSessionQueue.
--   
--   <i>See:</i> <a>newFilterConfiguration</a> smart constructor.
data FilterConfiguration
FilterConfiguration' :: Maybe (NonEmpty Text) -> FilterConfiguration

-- | A list of locations to allow game session placement in, in the form of
--   AWS Region codes such as <tt>us-west-2</tt>.
[$sel:allowedLocations:FilterConfiguration'] :: FilterConfiguration -> Maybe (NonEmpty Text)

-- | Create a value of <a>FilterConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowedLocations:FilterConfiguration'</a>,
--   <a>filterConfiguration_allowedLocations</a> - A list of locations to
--   allow game session placement in, in the form of AWS Region codes such
--   as <tt>us-west-2</tt>.
newFilterConfiguration :: FilterConfiguration

-- | A list of locations to allow game session placement in, in the form of
--   AWS Region codes such as <tt>us-west-2</tt>.
filterConfiguration_allowedLocations :: Lens' FilterConfiguration (Maybe (NonEmpty Text))
instance GHC.Generics.Generic Network.AWS.GameLift.Types.FilterConfiguration.FilterConfiguration
instance GHC.Show.Show Network.AWS.GameLift.Types.FilterConfiguration.FilterConfiguration
instance GHC.Read.Read Network.AWS.GameLift.Types.FilterConfiguration.FilterConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.Types.FilterConfiguration.FilterConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.FilterConfiguration.FilterConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.FilterConfiguration.FilterConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.FilterConfiguration.FilterConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.FilterConfiguration.FilterConfiguration


module Network.AWS.GameLift.Types.FleetAction
newtype FleetAction
FleetAction' :: Text -> FleetAction
[fromFleetAction] :: FleetAction -> Text
pattern FleetAction_AUTO_SCALING :: FleetAction
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.FleetAction.FleetAction
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.FleetAction.FleetAction
instance GHC.Generics.Generic Network.AWS.GameLift.Types.FleetAction.FleetAction
instance GHC.Classes.Ord Network.AWS.GameLift.Types.FleetAction.FleetAction
instance GHC.Classes.Eq Network.AWS.GameLift.Types.FleetAction.FleetAction
instance GHC.Read.Read Network.AWS.GameLift.Types.FleetAction.FleetAction
instance GHC.Show.Show Network.AWS.GameLift.Types.FleetAction.FleetAction


module Network.AWS.GameLift.Types.FleetCapacity

-- | Current resource capacity settings in a specified fleet or location.
--   The location value might refer to a fleet's remote location or its
--   home Region.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetCapacity | DescribeFleetLocationCapacity |
--   UpdateFleetCapacity
--   
--   <i>See:</i> <a>newFleetCapacity</a> smart constructor.
data FleetCapacity
FleetCapacity' :: Maybe EC2InstanceType -> Maybe Text -> Maybe Text -> Maybe EC2InstanceCounts -> Maybe Text -> FleetCapacity

-- | The EC2 instance type that is used for all instances in a fleet. The
--   instance type determines the computing resources in use, including
--   CPU, memory, storage, and networking capacity. See <a>Amazon EC2
--   Instance Types</a> for detailed descriptions.
[$sel:instanceType:FleetCapacity'] :: FleetCapacity -> Maybe EC2InstanceType

-- | A unique identifier for the fleet associated with the location.
[$sel:fleetId:FleetCapacity'] :: FleetCapacity -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:FleetCapacity'] :: FleetCapacity -> Maybe Text

-- | The current instance count and capacity settings for the fleet
--   location.
[$sel:instanceCounts:FleetCapacity'] :: FleetCapacity -> Maybe EC2InstanceCounts

-- | The fleet location for the instance count information, expressed as an
--   AWS Region code, such as <tt>us-west-2</tt>.
[$sel:location:FleetCapacity'] :: FleetCapacity -> Maybe Text

-- | Create a value of <a>FleetCapacity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceType:FleetCapacity'</a>,
--   <a>fleetCapacity_instanceType</a> - The EC2 instance type that is used
--   for all instances in a fleet. The instance type determines the
--   computing resources in use, including CPU, memory, storage, and
--   networking capacity. See <a>Amazon EC2 Instance Types</a> for detailed
--   descriptions.
--   
--   <a>$sel:fleetId:FleetCapacity'</a>, <a>fleetCapacity_fleetId</a> - A
--   unique identifier for the fleet associated with the location.
--   
--   <a>$sel:fleetArn:FleetCapacity'</a>, <a>fleetCapacity_fleetArn</a> -
--   The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:instanceCounts:FleetCapacity'</a>,
--   <a>fleetCapacity_instanceCounts</a> - The current instance count and
--   capacity settings for the fleet location.
--   
--   <a>$sel:location:FleetCapacity'</a>, <a>fleetCapacity_location</a> -
--   The fleet location for the instance count information, expressed as an
--   AWS Region code, such as <tt>us-west-2</tt>.
newFleetCapacity :: FleetCapacity

-- | The EC2 instance type that is used for all instances in a fleet. The
--   instance type determines the computing resources in use, including
--   CPU, memory, storage, and networking capacity. See <a>Amazon EC2
--   Instance Types</a> for detailed descriptions.
fleetCapacity_instanceType :: Lens' FleetCapacity (Maybe EC2InstanceType)

-- | A unique identifier for the fleet associated with the location.
fleetCapacity_fleetId :: Lens' FleetCapacity (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
fleetCapacity_fleetArn :: Lens' FleetCapacity (Maybe Text)

-- | The current instance count and capacity settings for the fleet
--   location.
fleetCapacity_instanceCounts :: Lens' FleetCapacity (Maybe EC2InstanceCounts)

-- | The fleet location for the instance count information, expressed as an
--   AWS Region code, such as <tt>us-west-2</tt>.
fleetCapacity_location :: Lens' FleetCapacity (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.FleetCapacity.FleetCapacity
instance GHC.Show.Show Network.AWS.GameLift.Types.FleetCapacity.FleetCapacity
instance GHC.Read.Read Network.AWS.GameLift.Types.FleetCapacity.FleetCapacity
instance GHC.Classes.Eq Network.AWS.GameLift.Types.FleetCapacity.FleetCapacity
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.FleetCapacity.FleetCapacity
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.FleetCapacity.FleetCapacity
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.FleetCapacity.FleetCapacity


module Network.AWS.GameLift.Types.FleetStatus
newtype FleetStatus
FleetStatus' :: Text -> FleetStatus
[fromFleetStatus] :: FleetStatus -> Text
pattern FleetStatus_ACTIVATING :: FleetStatus
pattern FleetStatus_ACTIVE :: FleetStatus
pattern FleetStatus_BUILDING :: FleetStatus
pattern FleetStatus_DELETING :: FleetStatus
pattern FleetStatus_DOWNLOADING :: FleetStatus
pattern FleetStatus_ERROR :: FleetStatus
pattern FleetStatus_NEW :: FleetStatus
pattern FleetStatus_TERMINATED :: FleetStatus
pattern FleetStatus_VALIDATING :: FleetStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance GHC.Generics.Generic Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance GHC.Classes.Ord Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance GHC.Classes.Eq Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance GHC.Read.Read Network.AWS.GameLift.Types.FleetStatus.FleetStatus
instance GHC.Show.Show Network.AWS.GameLift.Types.FleetStatus.FleetStatus


module Network.AWS.GameLift.Types.FleetType
newtype FleetType
FleetType' :: Text -> FleetType
[fromFleetType] :: FleetType -> Text
pattern FleetType_ON_DEMAND :: FleetType
pattern FleetType_SPOT :: FleetType
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.FleetType.FleetType
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.FleetType.FleetType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.FleetType.FleetType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.FleetType.FleetType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.FleetType.FleetType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.FleetType.FleetType
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.FleetType.FleetType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.FleetType.FleetType
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.FleetType.FleetType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.FleetType.FleetType
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.FleetType.FleetType
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.FleetType.FleetType
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.FleetType.FleetType
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.FleetType.FleetType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.FleetType.FleetType
instance GHC.Classes.Ord Network.AWS.GameLift.Types.FleetType.FleetType
instance GHC.Classes.Eq Network.AWS.GameLift.Types.FleetType.FleetType
instance GHC.Read.Read Network.AWS.GameLift.Types.FleetType.FleetType
instance GHC.Show.Show Network.AWS.GameLift.Types.FleetType.FleetType


module Network.AWS.GameLift.Types.FleetUtilization

-- | Current resource utilization statistics in a specified fleet or
--   location. The location value might refer to a fleet's remote location
--   or its home Region.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetUtilization | DescribeFleetLocationUtilization
--   
--   <i>See:</i> <a>newFleetUtilization</a> smart constructor.
data FleetUtilization
FleetUtilization' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> FleetUtilization

-- | The number of active game sessions that are currently being hosted
--   across all instances in the fleet location.
[$sel:activeGameSessionCount:FleetUtilization'] :: FleetUtilization -> Maybe Natural

-- | The number of active player sessions that are currently being hosted
--   across all instances in the fleet location.
[$sel:currentPlayerSessionCount:FleetUtilization'] :: FleetUtilization -> Maybe Natural

-- | The maximum number of players allowed across all game sessions that
--   are currently being hosted across all instances in the fleet location.
[$sel:maximumPlayerSessionCount:FleetUtilization'] :: FleetUtilization -> Maybe Natural

-- | A unique identifier for the fleet associated with the location.
[$sel:fleetId:FleetUtilization'] :: FleetUtilization -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:FleetUtilization'] :: FleetUtilization -> Maybe Text

-- | The number of server processes in <tt>ACTIVE</tt> status that are
--   currently running across all instances in the fleet location.
[$sel:activeServerProcessCount:FleetUtilization'] :: FleetUtilization -> Maybe Natural

-- | The fleet location for the fleet utilization information, expressed as
--   an AWS Region code, such as <tt>us-west-2</tt>.
[$sel:location:FleetUtilization'] :: FleetUtilization -> Maybe Text

-- | Create a value of <a>FleetUtilization</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activeGameSessionCount:FleetUtilization'</a>,
--   <a>fleetUtilization_activeGameSessionCount</a> - The number of active
--   game sessions that are currently being hosted across all instances in
--   the fleet location.
--   
--   <a>$sel:currentPlayerSessionCount:FleetUtilization'</a>,
--   <a>fleetUtilization_currentPlayerSessionCount</a> - The number of
--   active player sessions that are currently being hosted across all
--   instances in the fleet location.
--   
--   <a>$sel:maximumPlayerSessionCount:FleetUtilization'</a>,
--   <a>fleetUtilization_maximumPlayerSessionCount</a> - The maximum number
--   of players allowed across all game sessions that are currently being
--   hosted across all instances in the fleet location.
--   
--   <a>$sel:fleetId:FleetUtilization'</a>, <a>fleetUtilization_fleetId</a>
--   - A unique identifier for the fleet associated with the location.
--   
--   <a>$sel:fleetArn:FleetUtilization'</a>,
--   <a>fleetUtilization_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:activeServerProcessCount:FleetUtilization'</a>,
--   <a>fleetUtilization_activeServerProcessCount</a> - The number of
--   server processes in <tt>ACTIVE</tt> status that are currently running
--   across all instances in the fleet location.
--   
--   <a>$sel:location:FleetUtilization'</a>,
--   <a>fleetUtilization_location</a> - The fleet location for the fleet
--   utilization information, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
newFleetUtilization :: FleetUtilization

-- | The number of active game sessions that are currently being hosted
--   across all instances in the fleet location.
fleetUtilization_activeGameSessionCount :: Lens' FleetUtilization (Maybe Natural)

-- | The number of active player sessions that are currently being hosted
--   across all instances in the fleet location.
fleetUtilization_currentPlayerSessionCount :: Lens' FleetUtilization (Maybe Natural)

-- | The maximum number of players allowed across all game sessions that
--   are currently being hosted across all instances in the fleet location.
fleetUtilization_maximumPlayerSessionCount :: Lens' FleetUtilization (Maybe Natural)

-- | A unique identifier for the fleet associated with the location.
fleetUtilization_fleetId :: Lens' FleetUtilization (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
fleetUtilization_fleetArn :: Lens' FleetUtilization (Maybe Text)

-- | The number of server processes in <tt>ACTIVE</tt> status that are
--   currently running across all instances in the fleet location.
fleetUtilization_activeServerProcessCount :: Lens' FleetUtilization (Maybe Natural)

-- | The fleet location for the fleet utilization information, expressed as
--   an AWS Region code, such as <tt>us-west-2</tt>.
fleetUtilization_location :: Lens' FleetUtilization (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.FleetUtilization.FleetUtilization
instance GHC.Show.Show Network.AWS.GameLift.Types.FleetUtilization.FleetUtilization
instance GHC.Read.Read Network.AWS.GameLift.Types.FleetUtilization.FleetUtilization
instance GHC.Classes.Eq Network.AWS.GameLift.Types.FleetUtilization.FleetUtilization
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.FleetUtilization.FleetUtilization
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.FleetUtilization.FleetUtilization
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.FleetUtilization.FleetUtilization


module Network.AWS.GameLift.Types.FlexMatchMode
newtype FlexMatchMode
FlexMatchMode' :: Text -> FlexMatchMode
[fromFlexMatchMode] :: FlexMatchMode -> Text
pattern FlexMatchMode_STANDALONE :: FlexMatchMode
pattern FlexMatchMode_WITH_QUEUE :: FlexMatchMode
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance GHC.Generics.Generic Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance GHC.Classes.Ord Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance GHC.Classes.Eq Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance GHC.Read.Read Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode
instance GHC.Show.Show Network.AWS.GameLift.Types.FlexMatchMode.FlexMatchMode


module Network.AWS.GameLift.Types.GameProperty

-- | Set of key-value pairs that contain information about a game session.
--   When included in a game session request, these properties communicate
--   details to be used when setting up the new game session. For example,
--   a game property might specify a game mode, level, or map. Game
--   properties are passed to the game server process when initiating a new
--   game session. For more information, see the <a>GameLift Developer
--   Guide</a>.
--   
--   <i>See:</i> <a>newGameProperty</a> smart constructor.
data GameProperty
GameProperty' :: Text -> Text -> GameProperty

-- | The game property identifier.
[$sel:key:GameProperty'] :: GameProperty -> Text

-- | The game property value.
[$sel:value:GameProperty'] :: GameProperty -> Text

-- | Create a value of <a>GameProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:GameProperty'</a>, <a>gameProperty_key</a> - The game
--   property identifier.
--   
--   <a>$sel:value:GameProperty'</a>, <a>gameProperty_value</a> - The game
--   property value.
newGameProperty :: Text -> Text -> GameProperty

-- | The game property identifier.
gameProperty_key :: Lens' GameProperty Text

-- | The game property value.
gameProperty_value :: Lens' GameProperty Text
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameProperty.GameProperty
instance GHC.Show.Show Network.AWS.GameLift.Types.GameProperty.GameProperty
instance GHC.Read.Read Network.AWS.GameLift.Types.GameProperty.GameProperty
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameProperty.GameProperty
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameProperty.GameProperty
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameProperty.GameProperty
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameProperty.GameProperty
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameProperty.GameProperty


module Network.AWS.GameLift.Types.GameServerClaimStatus
newtype GameServerClaimStatus
GameServerClaimStatus' :: Text -> GameServerClaimStatus
[fromGameServerClaimStatus] :: GameServerClaimStatus -> Text
pattern GameServerClaimStatus_CLAIMED :: GameServerClaimStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance GHC.Classes.Ord Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServerClaimStatus.GameServerClaimStatus


module Network.AWS.GameLift.Types.GameServerGroupAction
newtype GameServerGroupAction
GameServerGroupAction' :: Text -> GameServerGroupAction
[fromGameServerGroupAction] :: GameServerGroupAction -> Text
pattern GameServerGroupAction_REPLACE_INSTANCE_TYPES :: GameServerGroupAction
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance GHC.Classes.Ord Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServerGroupAction.GameServerGroupAction


module Network.AWS.GameLift.Types.GameServerGroupDeleteOption
newtype GameServerGroupDeleteOption
GameServerGroupDeleteOption' :: Text -> GameServerGroupDeleteOption
[fromGameServerGroupDeleteOption] :: GameServerGroupDeleteOption -> Text
pattern GameServerGroupDeleteOption_FORCE_DELETE :: GameServerGroupDeleteOption
pattern GameServerGroupDeleteOption_RETAIN :: GameServerGroupDeleteOption
pattern GameServerGroupDeleteOption_SAFE_DELETE :: GameServerGroupDeleteOption
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance GHC.Classes.Ord Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServerGroupDeleteOption.GameServerGroupDeleteOption


module Network.AWS.GameLift.Types.GameServerGroupInstanceType
newtype GameServerGroupInstanceType
GameServerGroupInstanceType' :: Text -> GameServerGroupInstanceType
[fromGameServerGroupInstanceType] :: GameServerGroupInstanceType -> Text
pattern GameServerGroupInstanceType_C4_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C4_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C4_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C4_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C4_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_18xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_9xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_10xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_xlarge :: GameServerGroupInstanceType
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance GHC.Classes.Ord Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServerGroupInstanceType.GameServerGroupInstanceType


module Network.AWS.GameLift.Types.GameServerGroupStatus
newtype GameServerGroupStatus
GameServerGroupStatus' :: Text -> GameServerGroupStatus
[fromGameServerGroupStatus] :: GameServerGroupStatus -> Text
pattern GameServerGroupStatus_ACTIVATING :: GameServerGroupStatus
pattern GameServerGroupStatus_ACTIVE :: GameServerGroupStatus
pattern GameServerGroupStatus_DELETED :: GameServerGroupStatus
pattern GameServerGroupStatus_DELETE_SCHEDULED :: GameServerGroupStatus
pattern GameServerGroupStatus_DELETING :: GameServerGroupStatus
pattern GameServerGroupStatus_ERROR :: GameServerGroupStatus
pattern GameServerGroupStatus_NEW :: GameServerGroupStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance GHC.Classes.Ord Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServerGroupStatus.GameServerGroupStatus


module Network.AWS.GameLift.Types.GameServerHealthCheck
newtype GameServerHealthCheck
GameServerHealthCheck' :: Text -> GameServerHealthCheck
[fromGameServerHealthCheck] :: GameServerHealthCheck -> Text
pattern GameServerHealthCheck_HEALTHY :: GameServerHealthCheck
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance GHC.Classes.Ord Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServerHealthCheck.GameServerHealthCheck


module Network.AWS.GameLift.Types.GameServerInstanceStatus
newtype GameServerInstanceStatus
GameServerInstanceStatus' :: Text -> GameServerInstanceStatus
[fromGameServerInstanceStatus] :: GameServerInstanceStatus -> Text
pattern GameServerInstanceStatus_ACTIVE :: GameServerInstanceStatus
pattern GameServerInstanceStatus_DRAINING :: GameServerInstanceStatus
pattern GameServerInstanceStatus_SPOT_TERMINATING :: GameServerInstanceStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance GHC.Classes.Ord Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServerInstanceStatus.GameServerInstanceStatus


module Network.AWS.GameLift.Types.GameServerInstance

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Additional properties, including status, that describe an EC2 instance
--   in a game server group. Instance configurations are set with game
--   server group properties (see <tt>DescribeGameServerGroup</tt> and with
--   the EC2 launch template that was used when creating the game server
--   group.
--   
--   Retrieve game server instances for a game server group by calling
--   <tt>DescribeGameServerInstances</tt>.
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newGameServerInstance</a> smart constructor.
data GameServerInstance
GameServerInstance' :: Maybe Text -> Maybe GameServerInstanceStatus -> Maybe Text -> Maybe Text -> GameServerInstance

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
[$sel:instanceId:GameServerInstance'] :: GameServerInstance -> Maybe Text

-- | Current status of the game server instance.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The instance is viable for hosting game
--   servers.</li>
--   <li><b>DRAINING</b> -- The instance is not viable for hosting game
--   servers. Existing game servers are in the process of ending, and new
--   game servers are not started on this instance unless no other
--   resources are available. When the instance is put in DRAINING, a new
--   instance is started up to replace it. Once the instance has no
--   UTILIZED game servers, it will be terminated in favor of the new
--   instance.</li>
--   <li><b>SPOT_TERMINATING</b> -- The instance is in the process of
--   shutting down due to a Spot instance interruption. No new game servers
--   are started on this instance.</li>
--   </ul>
[$sel:instanceStatus:GameServerInstance'] :: GameServerInstance -> Maybe GameServerInstanceStatus

-- | A generated unique identifier for the game server group that includes
--   the game server instance.
[$sel:gameServerGroupArn:GameServerInstance'] :: GameServerInstance -> Maybe Text

-- | A developer-defined identifier for the game server group that includes
--   the game server instance. The name is unique for each Region in each
--   AWS account.
[$sel:gameServerGroupName:GameServerInstance'] :: GameServerInstance -> Maybe Text

-- | Create a value of <a>GameServerInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:GameServerInstance'</a>,
--   <a>gameServerInstance_instanceId</a> - The unique identifier for the
--   instance where the game server is running. This ID is available in the
--   instance metadata. EC2 instance IDs use a 17-character format, for
--   example: <tt>i-1234567890abcdef0</tt>.
--   
--   <a>$sel:instanceStatus:GameServerInstance'</a>,
--   <a>gameServerInstance_instanceStatus</a> - Current status of the game
--   server instance.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The instance is viable for hosting game
--   servers.</li>
--   <li><b>DRAINING</b> -- The instance is not viable for hosting game
--   servers. Existing game servers are in the process of ending, and new
--   game servers are not started on this instance unless no other
--   resources are available. When the instance is put in DRAINING, a new
--   instance is started up to replace it. Once the instance has no
--   UTILIZED game servers, it will be terminated in favor of the new
--   instance.</li>
--   <li><b>SPOT_TERMINATING</b> -- The instance is in the process of
--   shutting down due to a Spot instance interruption. No new game servers
--   are started on this instance.</li>
--   </ul>
--   
--   <a>$sel:gameServerGroupArn:GameServerInstance'</a>,
--   <a>gameServerInstance_gameServerGroupArn</a> - A generated unique
--   identifier for the game server group that includes the game server
--   instance.
--   
--   <a>$sel:gameServerGroupName:GameServerInstance'</a>,
--   <a>gameServerInstance_gameServerGroupName</a> - A developer-defined
--   identifier for the game server group that includes the game server
--   instance. The name is unique for each Region in each AWS account.
newGameServerInstance :: GameServerInstance

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
gameServerInstance_instanceId :: Lens' GameServerInstance (Maybe Text)

-- | Current status of the game server instance.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The instance is viable for hosting game
--   servers.</li>
--   <li><b>DRAINING</b> -- The instance is not viable for hosting game
--   servers. Existing game servers are in the process of ending, and new
--   game servers are not started on this instance unless no other
--   resources are available. When the instance is put in DRAINING, a new
--   instance is started up to replace it. Once the instance has no
--   UTILIZED game servers, it will be terminated in favor of the new
--   instance.</li>
--   <li><b>SPOT_TERMINATING</b> -- The instance is in the process of
--   shutting down due to a Spot instance interruption. No new game servers
--   are started on this instance.</li>
--   </ul>
gameServerInstance_instanceStatus :: Lens' GameServerInstance (Maybe GameServerInstanceStatus)

-- | A generated unique identifier for the game server group that includes
--   the game server instance.
gameServerInstance_gameServerGroupArn :: Lens' GameServerInstance (Maybe Text)

-- | A developer-defined identifier for the game server group that includes
--   the game server instance. The name is unique for each Region in each
--   AWS account.
gameServerInstance_gameServerGroupName :: Lens' GameServerInstance (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServerInstance.GameServerInstance
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServerInstance.GameServerInstance
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServerInstance.GameServerInstance
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServerInstance.GameServerInstance
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameServerInstance.GameServerInstance
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServerInstance.GameServerInstance
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServerInstance.GameServerInstance


module Network.AWS.GameLift.Types.GameServerProtectionPolicy
newtype GameServerProtectionPolicy
GameServerProtectionPolicy' :: Text -> GameServerProtectionPolicy
[fromGameServerProtectionPolicy] :: GameServerProtectionPolicy -> Text
pattern GameServerProtectionPolicy_FULL_PROTECTION :: GameServerProtectionPolicy
pattern GameServerProtectionPolicy_NO_PROTECTION :: GameServerProtectionPolicy
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance GHC.Classes.Ord Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServerProtectionPolicy.GameServerProtectionPolicy


module Network.AWS.GameLift.Types.GameServerUtilizationStatus
newtype GameServerUtilizationStatus
GameServerUtilizationStatus' :: Text -> GameServerUtilizationStatus
[fromGameServerUtilizationStatus] :: GameServerUtilizationStatus -> Text
pattern GameServerUtilizationStatus_AVAILABLE :: GameServerUtilizationStatus
pattern GameServerUtilizationStatus_UTILIZED :: GameServerUtilizationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance GHC.Classes.Ord Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServerUtilizationStatus.GameServerUtilizationStatus


module Network.AWS.GameLift.Types.GameServer

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Properties describing a game server that is running on an instance in
--   a GameServerGroup.
--   
--   A game server is created by a successful call to
--   <tt>RegisterGameServer</tt> and deleted by calling
--   <tt>DeregisterGameServer</tt>. A game server is claimed to host a game
--   session by calling <tt>ClaimGameServer</tt>.
--   
--   <b>Related actions</b>
--   
--   RegisterGameServer | ListGameServers | ClaimGameServer |
--   DescribeGameServer | UpdateGameServer | DeregisterGameServer | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newGameServer</a> smart constructor.
data GameServer
GameServer' :: Maybe Text -> Maybe GameServerUtilizationStatus -> Maybe GameServerClaimStatus -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> GameServer

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
[$sel:instanceId:GameServer'] :: GameServer -> Maybe Text

-- | Indicates whether the game server is currently available for new games
--   or is busy. Possible statuses include:
--   
--   <ul>
--   <li><tt>AVAILABLE</tt> - The game server is available to be claimed. A
--   game server that has been claimed remains in this status until it
--   reports game hosting activity.</li>
--   <li><tt>UTILIZED</tt> - The game server is currently hosting a game
--   session with players.</li>
--   </ul>
[$sel:utilizationStatus:GameServer'] :: GameServer -> Maybe GameServerUtilizationStatus

-- | Indicates when an available game server has been reserved for gameplay
--   but has not yet started hosting a game. Once it is claimed, the game
--   server remains in <tt>CLAIMED</tt> status for a maximum of one minute.
--   During this time, game clients connect to the game server to start the
--   game and trigger the game server to update its utilization status.
--   After one minute, the game server claim status reverts to null.
[$sel:claimStatus:GameServer'] :: GameServer -> Maybe GameServerClaimStatus

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
[$sel:gameServerData:GameServer'] :: GameServer -> Maybe Text

-- | Timestamp that indicates the last time the game server was claimed
--   with a ClaimGameServer request. The format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   This value is used to calculate when a claimed game server's status
--   should revert to null.
[$sel:lastClaimTime:GameServer'] :: GameServer -> Maybe POSIX

-- | Timestamp that indicates when the game server was created with a
--   RegisterGameServer request. The format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
[$sel:registrationTime:GameServer'] :: GameServer -> Maybe POSIX

-- | The ARN identifier for the game server group where the game server is
--   located.
[$sel:gameServerGroupArn:GameServer'] :: GameServer -> Maybe Text

-- | A custom string that uniquely identifies the game server. Game server
--   IDs are developer-defined and are unique across all game server groups
--   in an AWS account.
[$sel:gameServerId:GameServer'] :: GameServer -> Maybe Text

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
[$sel:gameServerGroupName:GameServer'] :: GameServer -> Maybe Text

-- | The port and IP address that must be used to establish a client
--   connection to the game server.
[$sel:connectionInfo:GameServer'] :: GameServer -> Maybe Text

-- | Timestamp that indicates the last time the game server was updated
--   with health status using an UpdateGameServer request. The format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>). After game server registration, this
--   property is only changed when a game server update specifies a health
--   check value.
[$sel:lastHealthCheckTime:GameServer'] :: GameServer -> Maybe POSIX

-- | Create a value of <a>GameServer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:GameServer'</a>, <a>gameServer_instanceId</a> - The
--   unique identifier for the instance where the game server is running.
--   This ID is available in the instance metadata. EC2 instance IDs use a
--   17-character format, for example: <tt>i-1234567890abcdef0</tt>.
--   
--   <a>$sel:utilizationStatus:GameServer'</a>,
--   <a>gameServer_utilizationStatus</a> - Indicates whether the game
--   server is currently available for new games or is busy. Possible
--   statuses include:
--   
--   <ul>
--   <li><tt>AVAILABLE</tt> - The game server is available to be claimed. A
--   game server that has been claimed remains in this status until it
--   reports game hosting activity.</li>
--   <li><tt>UTILIZED</tt> - The game server is currently hosting a game
--   session with players.</li>
--   </ul>
--   
--   <a>$sel:claimStatus:GameServer'</a>, <a>gameServer_claimStatus</a> -
--   Indicates when an available game server has been reserved for gameplay
--   but has not yet started hosting a game. Once it is claimed, the game
--   server remains in <tt>CLAIMED</tt> status for a maximum of one minute.
--   During this time, game clients connect to the game server to start the
--   game and trigger the game server to update its utilization status.
--   After one minute, the game server claim status reverts to null.
--   
--   <a>$sel:gameServerData:GameServer'</a>,
--   <a>gameServer_gameServerData</a> - A set of custom game server
--   properties, formatted as a single string value. This data is passed to
--   a game client or service when it requests information on game servers
--   using ListGameServers or ClaimGameServer.
--   
--   <a>$sel:lastClaimTime:GameServer'</a>, <a>gameServer_lastClaimTime</a>
--   - Timestamp that indicates the last time the game server was claimed
--   with a ClaimGameServer request. The format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   This value is used to calculate when a claimed game server's status
--   should revert to null.
--   
--   <a>$sel:registrationTime:GameServer'</a>,
--   <a>gameServer_registrationTime</a> - Timestamp that indicates when the
--   game server was created with a RegisterGameServer request. The format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:gameServerGroupArn:GameServer'</a>,
--   <a>gameServer_gameServerGroupArn</a> - The ARN identifier for the game
--   server group where the game server is located.
--   
--   <a>$sel:gameServerId:GameServer'</a>, <a>gameServer_gameServerId</a> -
--   A custom string that uniquely identifies the game server. Game server
--   IDs are developer-defined and are unique across all game server groups
--   in an AWS account.
--   
--   <a>$sel:gameServerGroupName:GameServer'</a>,
--   <a>gameServer_gameServerGroupName</a> - A unique identifier for the
--   game server group where the game server is running. Use either the
--   GameServerGroup name or ARN value.
--   
--   <a>$sel:connectionInfo:GameServer'</a>,
--   <a>gameServer_connectionInfo</a> - The port and IP address that must
--   be used to establish a client connection to the game server.
--   
--   <a>$sel:lastHealthCheckTime:GameServer'</a>,
--   <a>gameServer_lastHealthCheckTime</a> - Timestamp that indicates the
--   last time the game server was updated with health status using an
--   UpdateGameServer request. The format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>). After
--   game server registration, this property is only changed when a game
--   server update specifies a health check value.
newGameServer :: GameServer

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
gameServer_instanceId :: Lens' GameServer (Maybe Text)

-- | Indicates whether the game server is currently available for new games
--   or is busy. Possible statuses include:
--   
--   <ul>
--   <li><tt>AVAILABLE</tt> - The game server is available to be claimed. A
--   game server that has been claimed remains in this status until it
--   reports game hosting activity.</li>
--   <li><tt>UTILIZED</tt> - The game server is currently hosting a game
--   session with players.</li>
--   </ul>
gameServer_utilizationStatus :: Lens' GameServer (Maybe GameServerUtilizationStatus)

-- | Indicates when an available game server has been reserved for gameplay
--   but has not yet started hosting a game. Once it is claimed, the game
--   server remains in <tt>CLAIMED</tt> status for a maximum of one minute.
--   During this time, game clients connect to the game server to start the
--   game and trigger the game server to update its utilization status.
--   After one minute, the game server claim status reverts to null.
gameServer_claimStatus :: Lens' GameServer (Maybe GameServerClaimStatus)

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
gameServer_gameServerData :: Lens' GameServer (Maybe Text)

-- | Timestamp that indicates the last time the game server was claimed
--   with a ClaimGameServer request. The format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   This value is used to calculate when a claimed game server's status
--   should revert to null.
gameServer_lastClaimTime :: Lens' GameServer (Maybe UTCTime)

-- | Timestamp that indicates when the game server was created with a
--   RegisterGameServer request. The format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
gameServer_registrationTime :: Lens' GameServer (Maybe UTCTime)

-- | The ARN identifier for the game server group where the game server is
--   located.
gameServer_gameServerGroupArn :: Lens' GameServer (Maybe Text)

-- | A custom string that uniquely identifies the game server. Game server
--   IDs are developer-defined and are unique across all game server groups
--   in an AWS account.
gameServer_gameServerId :: Lens' GameServer (Maybe Text)

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
gameServer_gameServerGroupName :: Lens' GameServer (Maybe Text)

-- | The port and IP address that must be used to establish a client
--   connection to the game server.
gameServer_connectionInfo :: Lens' GameServer (Maybe Text)

-- | Timestamp that indicates the last time the game server was updated
--   with health status using an UpdateGameServer request. The format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>). After game server registration, this
--   property is only changed when a game server update specifies a health
--   check value.
gameServer_lastHealthCheckTime :: Lens' GameServer (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServer.GameServer
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServer.GameServer
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServer.GameServer
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServer.GameServer
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameServer.GameServer
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServer.GameServer
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServer.GameServer


module Network.AWS.GameLift.Types.GameSessionPlacementState
newtype GameSessionPlacementState
GameSessionPlacementState' :: Text -> GameSessionPlacementState
[fromGameSessionPlacementState] :: GameSessionPlacementState -> Text
pattern GameSessionPlacementState_CANCELLED :: GameSessionPlacementState
pattern GameSessionPlacementState_FAILED :: GameSessionPlacementState
pattern GameSessionPlacementState_FULFILLED :: GameSessionPlacementState
pattern GameSessionPlacementState_PENDING :: GameSessionPlacementState
pattern GameSessionPlacementState_TIMED_OUT :: GameSessionPlacementState
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance GHC.Classes.Ord Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance GHC.Read.Read Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState
instance GHC.Show.Show Network.AWS.GameLift.Types.GameSessionPlacementState.GameSessionPlacementState


module Network.AWS.GameLift.Types.GameSessionQueueDestination

-- | A fleet or alias designated in a game session queue. Queues fulfill
--   requests for new game sessions by placing a new game session on any of
--   the queue's destinations.
--   
--   Destinations are part of a GameSessionQueue.
--   
--   <i>See:</i> <a>newGameSessionQueueDestination</a> smart constructor.
data GameSessionQueueDestination
GameSessionQueueDestination' :: Maybe Text -> GameSessionQueueDestination

-- | The Amazon Resource Name (ARN) that is assigned to fleet or fleet
--   alias. ARNs, which include a fleet ID or alias ID and a Region name,
--   provide a unique identifier across all Regions.
[$sel:destinationArn:GameSessionQueueDestination'] :: GameSessionQueueDestination -> Maybe Text

-- | Create a value of <a>GameSessionQueueDestination</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationArn:GameSessionQueueDestination'</a>,
--   <a>gameSessionQueueDestination_destinationArn</a> - The Amazon
--   Resource Name (ARN) that is assigned to fleet or fleet alias. ARNs,
--   which include a fleet ID or alias ID and a Region name, provide a
--   unique identifier across all Regions.
newGameSessionQueueDestination :: GameSessionQueueDestination

-- | The Amazon Resource Name (ARN) that is assigned to fleet or fleet
--   alias. ARNs, which include a fleet ID or alias ID and a Region name,
--   provide a unique identifier across all Regions.
gameSessionQueueDestination_destinationArn :: Lens' GameSessionQueueDestination (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameSessionQueueDestination.GameSessionQueueDestination
instance GHC.Show.Show Network.AWS.GameLift.Types.GameSessionQueueDestination.GameSessionQueueDestination
instance GHC.Read.Read Network.AWS.GameLift.Types.GameSessionQueueDestination.GameSessionQueueDestination
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameSessionQueueDestination.GameSessionQueueDestination
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameSessionQueueDestination.GameSessionQueueDestination
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameSessionQueueDestination.GameSessionQueueDestination
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameSessionQueueDestination.GameSessionQueueDestination
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameSessionQueueDestination.GameSessionQueueDestination


module Network.AWS.GameLift.Types.GameSessionStatus
newtype GameSessionStatus
GameSessionStatus' :: Text -> GameSessionStatus
[fromGameSessionStatus] :: GameSessionStatus -> Text
pattern GameSessionStatus_ACTIVATING :: GameSessionStatus
pattern GameSessionStatus_ACTIVE :: GameSessionStatus
pattern GameSessionStatus_ERROR :: GameSessionStatus
pattern GameSessionStatus_TERMINATED :: GameSessionStatus
pattern GameSessionStatus_TERMINATING :: GameSessionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance GHC.Classes.Ord Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance GHC.Read.Read Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus
instance GHC.Show.Show Network.AWS.GameLift.Types.GameSessionStatus.GameSessionStatus


module Network.AWS.GameLift.Types.GameSessionStatusReason
newtype GameSessionStatusReason
GameSessionStatusReason' :: Text -> GameSessionStatusReason
[fromGameSessionStatusReason] :: GameSessionStatusReason -> Text
pattern GameSessionStatusReason_INTERRUPTED :: GameSessionStatusReason
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance GHC.Classes.Ord Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance GHC.Read.Read Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason
instance GHC.Show.Show Network.AWS.GameLift.Types.GameSessionStatusReason.GameSessionStatusReason


module Network.AWS.GameLift.Types.InstanceCredentials

-- | Set of credentials required to remotely access a fleet instance.
--   Access credentials are requested by calling GetInstanceAccess and
--   returned in an InstanceAccess object.
--   
--   <i>See:</i> <a>newInstanceCredentials</a> smart constructor.
data InstanceCredentials
InstanceCredentials' :: Maybe Text -> Maybe Text -> InstanceCredentials

-- | User login string.
[$sel:userName:InstanceCredentials'] :: InstanceCredentials -> Maybe Text

-- | Secret string. For Windows instances, the secret is a password for use
--   with Windows Remote Desktop. For Linux instances, it is a private key
--   (which must be saved as a <tt>.pem</tt> file) for use with SSH.
[$sel:secret:InstanceCredentials'] :: InstanceCredentials -> Maybe Text

-- | Create a value of <a>InstanceCredentials</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:InstanceCredentials'</a>,
--   <a>instanceCredentials_userName</a> - User login string.
--   
--   <a>$sel:secret:InstanceCredentials'</a>,
--   <a>instanceCredentials_secret</a> - Secret string. For Windows
--   instances, the secret is a password for use with Windows Remote
--   Desktop. For Linux instances, it is a private key (which must be saved
--   as a <tt>.pem</tt> file) for use with SSH.
newInstanceCredentials :: InstanceCredentials

-- | User login string.
instanceCredentials_userName :: Lens' InstanceCredentials (Maybe Text)

-- | Secret string. For Windows instances, the secret is a password for use
--   with Windows Remote Desktop. For Linux instances, it is a private key
--   (which must be saved as a <tt>.pem</tt> file) for use with SSH.
instanceCredentials_secret :: Lens' InstanceCredentials (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.InstanceCredentials.InstanceCredentials
instance GHC.Show.Show Network.AWS.GameLift.Types.InstanceCredentials.InstanceCredentials
instance GHC.Classes.Eq Network.AWS.GameLift.Types.InstanceCredentials.InstanceCredentials
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.InstanceCredentials.InstanceCredentials
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.InstanceCredentials.InstanceCredentials
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.InstanceCredentials.InstanceCredentials


module Network.AWS.GameLift.Types.InstanceDefinition

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   An allowed instance type for a GameServerGroup. All game server groups
--   must have at least two instance types defined for it. GameLift FleetIQ
--   periodically evaluates each defined instance type for viability. It
--   then updates the Auto Scaling group with the list of viable instance
--   types.
--   
--   <i>See:</i> <a>newInstanceDefinition</a> smart constructor.
data InstanceDefinition
InstanceDefinition' :: Maybe Text -> GameServerGroupInstanceType -> InstanceDefinition

-- | Instance weighting that indicates how much this instance type
--   contributes to the total capacity of a game server group. Instance
--   weights are used by GameLift FleetIQ to calculate the instance type's
--   cost per unit hour and better identify the most cost-effective
--   options. For detailed information on weighting instance capacity, see
--   <a>Instance Weighting</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>. Default value is "1".
[$sel:weightedCapacity:InstanceDefinition'] :: InstanceDefinition -> Maybe Text

-- | An EC2 instance type designation.
[$sel:instanceType:InstanceDefinition'] :: InstanceDefinition -> GameServerGroupInstanceType

-- | Create a value of <a>InstanceDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weightedCapacity:InstanceDefinition'</a>,
--   <a>instanceDefinition_weightedCapacity</a> - Instance weighting that
--   indicates how much this instance type contributes to the total
--   capacity of a game server group. Instance weights are used by GameLift
--   FleetIQ to calculate the instance type's cost per unit hour and better
--   identify the most cost-effective options. For detailed information on
--   weighting instance capacity, see <a>Instance Weighting</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>. Default value is "1".
--   
--   <a>$sel:instanceType:InstanceDefinition'</a>,
--   <a>instanceDefinition_instanceType</a> - An EC2 instance type
--   designation.
newInstanceDefinition :: GameServerGroupInstanceType -> InstanceDefinition

-- | Instance weighting that indicates how much this instance type
--   contributes to the total capacity of a game server group. Instance
--   weights are used by GameLift FleetIQ to calculate the instance type's
--   cost per unit hour and better identify the most cost-effective
--   options. For detailed information on weighting instance capacity, see
--   <a>Instance Weighting</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>. Default value is "1".
instanceDefinition_weightedCapacity :: Lens' InstanceDefinition (Maybe Text)

-- | An EC2 instance type designation.
instanceDefinition_instanceType :: Lens' InstanceDefinition GameServerGroupInstanceType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.InstanceDefinition.InstanceDefinition
instance GHC.Show.Show Network.AWS.GameLift.Types.InstanceDefinition.InstanceDefinition
instance GHC.Read.Read Network.AWS.GameLift.Types.InstanceDefinition.InstanceDefinition
instance GHC.Classes.Eq Network.AWS.GameLift.Types.InstanceDefinition.InstanceDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.InstanceDefinition.InstanceDefinition
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.InstanceDefinition.InstanceDefinition
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.InstanceDefinition.InstanceDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.InstanceDefinition.InstanceDefinition


module Network.AWS.GameLift.Types.GameServerGroup

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Properties that describe a game server group resource. A game server
--   group manages certain properties related to a corresponding EC2 Auto
--   Scaling group.
--   
--   A game server group is created by a successful call to
--   <tt>CreateGameServerGroup</tt> and deleted by calling
--   <tt>DeleteGameServerGroup</tt>. Game server group activity can be
--   temporarily suspended and resumed by calling
--   <tt>SuspendGameServerGroup</tt> and <tt>ResumeGameServerGroup</tt>,
--   respectively.
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newGameServerGroup</a> smart constructor.
data GameServerGroup
GameServerGroup' :: Maybe POSIX -> Maybe GameServerGroupStatus -> Maybe Text -> Maybe Text -> Maybe (NonEmpty InstanceDefinition) -> Maybe Text -> Maybe (NonEmpty GameServerGroupAction) -> Maybe Text -> Maybe BalancingStrategy -> Maybe Text -> Maybe GameServerProtectionPolicy -> Maybe POSIX -> GameServerGroup

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:GameServerGroup'] :: GameServerGroup -> Maybe POSIX

-- | The current status of the game server group. Possible statuses
--   include:
--   
--   <ul>
--   <li><tt>NEW</tt> - GameLift FleetIQ has validated the
--   <tt>CreateGameServerGroup()</tt> request.</li>
--   <li><tt>ACTIVATING</tt> - GameLift FleetIQ is setting up a game server
--   group, which includes creating an Auto Scaling group in your AWS
--   account.</li>
--   <li><tt>ACTIVE</tt> - The game server group has been successfully
--   created.</li>
--   <li><tt>DELETE_SCHEDULED</tt> - A request to delete the game server
--   group has been received.</li>
--   <li><tt>DELETING</tt> - GameLift FleetIQ has received a valid
--   <tt>DeleteGameServerGroup()</tt> request and is processing it.
--   GameLift FleetIQ must first complete and release hosts before it
--   deletes the Auto Scaling group and the game server group.</li>
--   <li><tt>DELETED</tt> - The game server group has been successfully
--   deleted.</li>
--   <li><tt>ERROR</tt> - The asynchronous processes of activating or
--   deleting a game server group has failed, resulting in an error
--   state.</li>
--   </ul>
[$sel:status:GameServerGroup'] :: GameServerGroup -> Maybe GameServerGroupStatus

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
[$sel:roleArn:GameServerGroup'] :: GameServerGroup -> Maybe Text

-- | A generated unique ID for the EC2 Auto Scaling group that is
--   associated with this game server group.
[$sel:autoScalingGroupArn:GameServerGroup'] :: GameServerGroup -> Maybe Text

-- | The set of EC2 instance types that GameLift FleetIQ can use when
--   balancing and automatically scaling instances in the corresponding
--   Auto Scaling group.
[$sel:instanceDefinitions:GameServerGroup'] :: GameServerGroup -> Maybe (NonEmpty InstanceDefinition)

-- | A generated unique ID for the game server group.
[$sel:gameServerGroupArn:GameServerGroup'] :: GameServerGroup -> Maybe Text

-- | A list of activities that are currently suspended for this game server
--   group. If this property is empty, all activities are occurring.
[$sel:suspendedActions:GameServerGroup'] :: GameServerGroup -> Maybe (NonEmpty GameServerGroupAction)

-- | A developer-defined identifier for the game server group. The name is
--   unique for each Region in each AWS account.
[$sel:gameServerGroupName:GameServerGroup'] :: GameServerGroup -> Maybe Text

-- | Indicates how GameLift FleetIQ balances the use of Spot Instances and
--   On-Demand Instances in the game server group. Method options include
--   the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
[$sel:balancingStrategy:GameServerGroup'] :: GameServerGroup -> Maybe BalancingStrategy

-- | Additional information about the current game server group status.
--   This information might provide additional insight on groups that are
--   in <tt>ERROR</tt> status.
[$sel:statusReason:GameServerGroup'] :: GameServerGroup -> Maybe Text

-- | A flag that indicates whether instances in the game server group are
--   protected from early termination. Unprotected instances that have
--   active game servers running might be terminated during a scale-down
--   event, causing players to be dropped from the game. Protected
--   instances cannot be terminated while there are active game servers
--   running except in the event of a forced game server group deletion
--   (see ). An exception to this is with Spot Instances, which can be
--   terminated by AWS regardless of protection status.
[$sel:gameServerProtectionPolicy:GameServerGroup'] :: GameServerGroup -> Maybe GameServerProtectionPolicy

-- | A timestamp that indicates when this game server group was last
--   updated.
[$sel:lastUpdatedTime:GameServerGroup'] :: GameServerGroup -> Maybe POSIX

-- | Create a value of <a>GameServerGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:GameServerGroup'</a>,
--   <a>gameServerGroup_creationTime</a> - A time stamp indicating when
--   this data object was created. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:GameServerGroup'</a>, <a>gameServerGroup_status</a> -
--   The current status of the game server group. Possible statuses
--   include:
--   
--   <ul>
--   <li><tt>NEW</tt> - GameLift FleetIQ has validated the
--   <tt>CreateGameServerGroup()</tt> request.</li>
--   <li><tt>ACTIVATING</tt> - GameLift FleetIQ is setting up a game server
--   group, which includes creating an Auto Scaling group in your AWS
--   account.</li>
--   <li><tt>ACTIVE</tt> - The game server group has been successfully
--   created.</li>
--   <li><tt>DELETE_SCHEDULED</tt> - A request to delete the game server
--   group has been received.</li>
--   <li><tt>DELETING</tt> - GameLift FleetIQ has received a valid
--   <tt>DeleteGameServerGroup()</tt> request and is processing it.
--   GameLift FleetIQ must first complete and release hosts before it
--   deletes the Auto Scaling group and the game server group.</li>
--   <li><tt>DELETED</tt> - The game server group has been successfully
--   deleted.</li>
--   <li><tt>ERROR</tt> - The asynchronous processes of activating or
--   deleting a game server group has failed, resulting in an error
--   state.</li>
--   </ul>
--   
--   <a>$sel:roleArn:GameServerGroup'</a>, <a>gameServerGroup_roleArn</a> -
--   The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
--   
--   <a>$sel:autoScalingGroupArn:GameServerGroup'</a>,
--   <a>gameServerGroup_autoScalingGroupArn</a> - A generated unique ID for
--   the EC2 Auto Scaling group that is associated with this game server
--   group.
--   
--   <a>$sel:instanceDefinitions:GameServerGroup'</a>,
--   <a>gameServerGroup_instanceDefinitions</a> - The set of EC2 instance
--   types that GameLift FleetIQ can use when balancing and automatically
--   scaling instances in the corresponding Auto Scaling group.
--   
--   <a>$sel:gameServerGroupArn:GameServerGroup'</a>,
--   <a>gameServerGroup_gameServerGroupArn</a> - A generated unique ID for
--   the game server group.
--   
--   <a>$sel:suspendedActions:GameServerGroup'</a>,
--   <a>gameServerGroup_suspendedActions</a> - A list of activities that
--   are currently suspended for this game server group. If this property
--   is empty, all activities are occurring.
--   
--   <a>$sel:gameServerGroupName:GameServerGroup'</a>,
--   <a>gameServerGroup_gameServerGroupName</a> - A developer-defined
--   identifier for the game server group. The name is unique for each
--   Region in each AWS account.
--   
--   <a>$sel:balancingStrategy:GameServerGroup'</a>,
--   <a>gameServerGroup_balancingStrategy</a> - Indicates how GameLift
--   FleetIQ balances the use of Spot Instances and On-Demand Instances in
--   the game server group. Method options include the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
--   
--   <a>$sel:statusReason:GameServerGroup'</a>,
--   <a>gameServerGroup_statusReason</a> - Additional information about the
--   current game server group status. This information might provide
--   additional insight on groups that are in <tt>ERROR</tt> status.
--   
--   <a>$sel:gameServerProtectionPolicy:GameServerGroup'</a>,
--   <a>gameServerGroup_gameServerProtectionPolicy</a> - A flag that
--   indicates whether instances in the game server group are protected
--   from early termination. Unprotected instances that have active game
--   servers running might be terminated during a scale-down event, causing
--   players to be dropped from the game. Protected instances cannot be
--   terminated while there are active game servers running except in the
--   event of a forced game server group deletion (see ). An exception to
--   this is with Spot Instances, which can be terminated by AWS regardless
--   of protection status.
--   
--   <a>$sel:lastUpdatedTime:GameServerGroup'</a>,
--   <a>gameServerGroup_lastUpdatedTime</a> - A timestamp that indicates
--   when this game server group was last updated.
newGameServerGroup :: GameServerGroup

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
gameServerGroup_creationTime :: Lens' GameServerGroup (Maybe UTCTime)

-- | The current status of the game server group. Possible statuses
--   include:
--   
--   <ul>
--   <li><tt>NEW</tt> - GameLift FleetIQ has validated the
--   <tt>CreateGameServerGroup()</tt> request.</li>
--   <li><tt>ACTIVATING</tt> - GameLift FleetIQ is setting up a game server
--   group, which includes creating an Auto Scaling group in your AWS
--   account.</li>
--   <li><tt>ACTIVE</tt> - The game server group has been successfully
--   created.</li>
--   <li><tt>DELETE_SCHEDULED</tt> - A request to delete the game server
--   group has been received.</li>
--   <li><tt>DELETING</tt> - GameLift FleetIQ has received a valid
--   <tt>DeleteGameServerGroup()</tt> request and is processing it.
--   GameLift FleetIQ must first complete and release hosts before it
--   deletes the Auto Scaling group and the game server group.</li>
--   <li><tt>DELETED</tt> - The game server group has been successfully
--   deleted.</li>
--   <li><tt>ERROR</tt> - The asynchronous processes of activating or
--   deleting a game server group has failed, resulting in an error
--   state.</li>
--   </ul>
gameServerGroup_status :: Lens' GameServerGroup (Maybe GameServerGroupStatus)

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
gameServerGroup_roleArn :: Lens' GameServerGroup (Maybe Text)

-- | A generated unique ID for the EC2 Auto Scaling group that is
--   associated with this game server group.
gameServerGroup_autoScalingGroupArn :: Lens' GameServerGroup (Maybe Text)

-- | The set of EC2 instance types that GameLift FleetIQ can use when
--   balancing and automatically scaling instances in the corresponding
--   Auto Scaling group.
gameServerGroup_instanceDefinitions :: Lens' GameServerGroup (Maybe (NonEmpty InstanceDefinition))

-- | A generated unique ID for the game server group.
gameServerGroup_gameServerGroupArn :: Lens' GameServerGroup (Maybe Text)

-- | A list of activities that are currently suspended for this game server
--   group. If this property is empty, all activities are occurring.
gameServerGroup_suspendedActions :: Lens' GameServerGroup (Maybe (NonEmpty GameServerGroupAction))

-- | A developer-defined identifier for the game server group. The name is
--   unique for each Region in each AWS account.
gameServerGroup_gameServerGroupName :: Lens' GameServerGroup (Maybe Text)

-- | Indicates how GameLift FleetIQ balances the use of Spot Instances and
--   On-Demand Instances in the game server group. Method options include
--   the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
gameServerGroup_balancingStrategy :: Lens' GameServerGroup (Maybe BalancingStrategy)

-- | Additional information about the current game server group status.
--   This information might provide additional insight on groups that are
--   in <tt>ERROR</tt> status.
gameServerGroup_statusReason :: Lens' GameServerGroup (Maybe Text)

-- | A flag that indicates whether instances in the game server group are
--   protected from early termination. Unprotected instances that have
--   active game servers running might be terminated during a scale-down
--   event, causing players to be dropped from the game. Protected
--   instances cannot be terminated while there are active game servers
--   running except in the event of a forced game server group deletion
--   (see ). An exception to this is with Spot Instances, which can be
--   terminated by AWS regardless of protection status.
gameServerGroup_gameServerProtectionPolicy :: Lens' GameServerGroup (Maybe GameServerProtectionPolicy)

-- | A timestamp that indicates when this game server group was last
--   updated.
gameServerGroup_lastUpdatedTime :: Lens' GameServerGroup (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServerGroup.GameServerGroup
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServerGroup.GameServerGroup
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServerGroup.GameServerGroup
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServerGroup.GameServerGroup
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameServerGroup.GameServerGroup
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServerGroup.GameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServerGroup.GameServerGroup


module Network.AWS.GameLift.Types.InstanceStatus
newtype InstanceStatus
InstanceStatus' :: Text -> InstanceStatus
[fromInstanceStatus] :: InstanceStatus -> Text
pattern InstanceStatus_ACTIVE :: InstanceStatus
pattern InstanceStatus_PENDING :: InstanceStatus
pattern InstanceStatus_TERMINATING :: InstanceStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance GHC.Generics.Generic Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance GHC.Classes.Ord Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance GHC.Classes.Eq Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance GHC.Read.Read Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus
instance GHC.Show.Show Network.AWS.GameLift.Types.InstanceStatus.InstanceStatus


module Network.AWS.GameLift.Types.IpProtocol
newtype IpProtocol
IpProtocol' :: Text -> IpProtocol
[fromIpProtocol] :: IpProtocol -> Text
pattern IpProtocol_TCP :: IpProtocol
pattern IpProtocol_UDP :: IpProtocol
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance GHC.Generics.Generic Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance GHC.Classes.Ord Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance GHC.Classes.Eq Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance GHC.Read.Read Network.AWS.GameLift.Types.IpProtocol.IpProtocol
instance GHC.Show.Show Network.AWS.GameLift.Types.IpProtocol.IpProtocol


module Network.AWS.GameLift.Types.IpPermission

-- | A range of IP addresses and port settings that allow inbound traffic
--   to connect to server processes on an instance in a fleet. New game
--   sessions are assigned an IP address/port number combination, which
--   must fall into the fleet's allowed ranges. Fleets with custom game
--   builds must have permissions explicitly set. For Realtime Servers
--   fleets, GameLift automatically opens two port ranges, one for TCP
--   messaging and one for UDP.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetPortSettings
--   
--   <i>See:</i> <a>newIpPermission</a> smart constructor.
data IpPermission
IpPermission' :: Natural -> Natural -> Text -> IpProtocol -> IpPermission

-- | A starting value for a range of allowed port numbers.
[$sel:fromPort:IpPermission'] :: IpPermission -> Natural

-- | An ending value for a range of allowed port numbers. Port numbers are
--   end-inclusive. This value must be higher than <tt>FromPort</tt>.
[$sel:toPort:IpPermission'] :: IpPermission -> Natural

-- | A range of allowed IP addresses. This value must be expressed in CIDR
--   notation. Example: "<tt>000.000.000.000/[subnet mask]</tt>" or
--   optionally the shortened version "<tt>0.0.0.0/[subnet mask]</tt>".
[$sel:ipRange:IpPermission'] :: IpPermission -> Text

-- | The network communication protocol used by the fleet.
[$sel:protocol:IpPermission'] :: IpPermission -> IpProtocol

-- | Create a value of <a>IpPermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fromPort:IpPermission'</a>, <a>ipPermission_fromPort</a> - A
--   starting value for a range of allowed port numbers.
--   
--   <a>$sel:toPort:IpPermission'</a>, <a>ipPermission_toPort</a> - An
--   ending value for a range of allowed port numbers. Port numbers are
--   end-inclusive. This value must be higher than <tt>FromPort</tt>.
--   
--   <a>$sel:ipRange:IpPermission'</a>, <a>ipPermission_ipRange</a> - A
--   range of allowed IP addresses. This value must be expressed in CIDR
--   notation. Example: "<tt>000.000.000.000/[subnet mask]</tt>" or
--   optionally the shortened version "<tt>0.0.0.0/[subnet mask]</tt>".
--   
--   <a>$sel:protocol:IpPermission'</a>, <a>ipPermission_protocol</a> - The
--   network communication protocol used by the fleet.
newIpPermission :: Natural -> Natural -> Text -> IpProtocol -> IpPermission

-- | A starting value for a range of allowed port numbers.
ipPermission_fromPort :: Lens' IpPermission Natural

-- | An ending value for a range of allowed port numbers. Port numbers are
--   end-inclusive. This value must be higher than <tt>FromPort</tt>.
ipPermission_toPort :: Lens' IpPermission Natural

-- | A range of allowed IP addresses. This value must be expressed in CIDR
--   notation. Example: "<tt>000.000.000.000/[subnet mask]</tt>" or
--   optionally the shortened version "<tt>0.0.0.0/[subnet mask]</tt>".
ipPermission_ipRange :: Lens' IpPermission Text

-- | The network communication protocol used by the fleet.
ipPermission_protocol :: Lens' IpPermission IpProtocol
instance GHC.Generics.Generic Network.AWS.GameLift.Types.IpPermission.IpPermission
instance GHC.Show.Show Network.AWS.GameLift.Types.IpPermission.IpPermission
instance GHC.Read.Read Network.AWS.GameLift.Types.IpPermission.IpPermission
instance GHC.Classes.Eq Network.AWS.GameLift.Types.IpPermission.IpPermission
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.IpPermission.IpPermission
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.IpPermission.IpPermission
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.IpPermission.IpPermission
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.IpPermission.IpPermission


module Network.AWS.GameLift.Types.LaunchTemplateSpecification

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   An EC2 launch template that contains configuration settings and game
--   server code to be deployed to all instances in a game server group.
--   The launch template is specified when creating a new game server group
--   with CreateGameServerGroup.
--   
--   <i>See:</i> <a>newLaunchTemplateSpecification</a> smart constructor.
data LaunchTemplateSpecification
LaunchTemplateSpecification' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchTemplateSpecification

-- | A unique identifier for an existing EC2 launch template.
[$sel:launchTemplateId:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The version of the EC2 launch template to use. If no version is
--   specified, the default version will be used. With Amazon EC2, you can
--   specify a default version for a launch template. If none is set, the
--   default is the first version created.
[$sel:version:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | A readable identifier for an existing EC2 launch template.
[$sel:launchTemplateName:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | Create a value of <a>LaunchTemplateSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplateId:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateId</a> - A unique
--   identifier for an existing EC2 launch template.
--   
--   <a>$sel:version:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_version</a> - The version of the EC2
--   launch template to use. If no version is specified, the default
--   version will be used. With Amazon EC2, you can specify a default
--   version for a launch template. If none is set, the default is the
--   first version created.
--   
--   <a>$sel:launchTemplateName:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateName</a> - A readable
--   identifier for an existing EC2 launch template.
newLaunchTemplateSpecification :: LaunchTemplateSpecification

-- | A unique identifier for an existing EC2 launch template.
launchTemplateSpecification_launchTemplateId :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The version of the EC2 launch template to use. If no version is
--   specified, the default version will be used. With Amazon EC2, you can
--   specify a default version for a launch template. If none is set, the
--   default is the first version created.
launchTemplateSpecification_version :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | A readable identifier for an existing EC2 launch template.
launchTemplateSpecification_launchTemplateName :: Lens' LaunchTemplateSpecification (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance GHC.Show.Show Network.AWS.GameLift.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance GHC.Read.Read Network.AWS.GameLift.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance GHC.Classes.Eq Network.AWS.GameLift.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.LaunchTemplateSpecification.LaunchTemplateSpecification


module Network.AWS.GameLift.Types.LocationConfiguration

-- | A remote location where a multi-location fleet can deploy EC2
--   instances for game hosting.
--   
--   <b>Related actions</b>
--   
--   CreateFleet
--   
--   <i>See:</i> <a>newLocationConfiguration</a> smart constructor.
data LocationConfiguration
LocationConfiguration' :: Maybe Text -> LocationConfiguration

-- | An AWS Region code, such as <tt>us-west-2</tt>.
[$sel:location:LocationConfiguration'] :: LocationConfiguration -> Maybe Text

-- | Create a value of <a>LocationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:LocationConfiguration'</a>,
--   <a>locationConfiguration_location</a> - An AWS Region code, such as
--   <tt>us-west-2</tt>.
newLocationConfiguration :: LocationConfiguration

-- | An AWS Region code, such as <tt>us-west-2</tt>.
locationConfiguration_location :: Lens' LocationConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.LocationConfiguration.LocationConfiguration
instance GHC.Show.Show Network.AWS.GameLift.Types.LocationConfiguration.LocationConfiguration
instance GHC.Read.Read Network.AWS.GameLift.Types.LocationConfiguration.LocationConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.Types.LocationConfiguration.LocationConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.LocationConfiguration.LocationConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.LocationConfiguration.LocationConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.LocationConfiguration.LocationConfiguration


module Network.AWS.GameLift.Types.LocationState

-- | A fleet location and its life-cycle state. A location state object
--   might be used to describe a fleet's remote location or home Region.
--   Life-cycle state tracks the progress of launching the first instance
--   in a new location and preparing it for game hosting, and then removing
--   all instances and deleting the location from the fleet.
--   
--   <b>Related actions</b>
--   
--   CreateFleet | CreateFleetLocations | DeleteFleetLocations
--   
--   <i>See:</i> <a>newLocationState</a> smart constructor.
data LocationState
LocationState' :: Maybe FleetStatus -> Maybe Text -> LocationState

-- | The life-cycle status of a fleet location.
[$sel:status:LocationState'] :: LocationState -> Maybe FleetStatus

-- | The fleet location, expressed as an AWS Region code such as
--   <tt>us-west-2</tt>.
[$sel:location:LocationState'] :: LocationState -> Maybe Text

-- | Create a value of <a>LocationState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:LocationState'</a>, <a>locationState_status</a> - The
--   life-cycle status of a fleet location.
--   
--   <a>$sel:location:LocationState'</a>, <a>locationState_location</a> -
--   The fleet location, expressed as an AWS Region code such as
--   <tt>us-west-2</tt>.
newLocationState :: LocationState

-- | The life-cycle status of a fleet location.
locationState_status :: Lens' LocationState (Maybe FleetStatus)

-- | The fleet location, expressed as an AWS Region code such as
--   <tt>us-west-2</tt>.
locationState_location :: Lens' LocationState (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.LocationState.LocationState
instance GHC.Show.Show Network.AWS.GameLift.Types.LocationState.LocationState
instance GHC.Read.Read Network.AWS.GameLift.Types.LocationState.LocationState
instance GHC.Classes.Eq Network.AWS.GameLift.Types.LocationState.LocationState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.LocationState.LocationState
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.LocationState.LocationState
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.LocationState.LocationState


module Network.AWS.GameLift.Types.LocationUpdateStatus
newtype LocationUpdateStatus
LocationUpdateStatus' :: Text -> LocationUpdateStatus
[fromLocationUpdateStatus] :: LocationUpdateStatus -> Text
pattern LocationUpdateStatus_PENDING_UPDATE :: LocationUpdateStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance GHC.Generics.Generic Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance GHC.Classes.Ord Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance GHC.Classes.Eq Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance GHC.Read.Read Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus
instance GHC.Show.Show Network.AWS.GameLift.Types.LocationUpdateStatus.LocationUpdateStatus


module Network.AWS.GameLift.Types.LocationAttributes

-- | Represents a location in a multi-location fleet.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetLocationAttributes
--   
--   <i>See:</i> <a>newLocationAttributes</a> smart constructor.
data LocationAttributes
LocationAttributes' :: Maybe LocationUpdateStatus -> Maybe LocationState -> Maybe (NonEmpty FleetAction) -> LocationAttributes

-- | The status of fleet activity updates to the location. The status
--   <tt>PENDING_UPDATE</tt> indicates that StopFleetActions or
--   StartFleetActions has been requested but the update has not yet been
--   completed for the location.
[$sel:updateStatus:LocationAttributes'] :: LocationAttributes -> Maybe LocationUpdateStatus

-- | A fleet location and its current life-cycle state.
[$sel:locationState:LocationAttributes'] :: LocationAttributes -> Maybe LocationState

-- | A list of fleet actions that have been suspended in the fleet
--   location.
[$sel:stoppedActions:LocationAttributes'] :: LocationAttributes -> Maybe (NonEmpty FleetAction)

-- | Create a value of <a>LocationAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updateStatus:LocationAttributes'</a>,
--   <a>locationAttributes_updateStatus</a> - The status of fleet activity
--   updates to the location. The status <tt>PENDING_UPDATE</tt> indicates
--   that StopFleetActions or StartFleetActions has been requested but the
--   update has not yet been completed for the location.
--   
--   <a>$sel:locationState:LocationAttributes'</a>,
--   <a>locationAttributes_locationState</a> - A fleet location and its
--   current life-cycle state.
--   
--   <a>$sel:stoppedActions:LocationAttributes'</a>,
--   <a>locationAttributes_stoppedActions</a> - A list of fleet actions
--   that have been suspended in the fleet location.
newLocationAttributes :: LocationAttributes

-- | The status of fleet activity updates to the location. The status
--   <tt>PENDING_UPDATE</tt> indicates that StopFleetActions or
--   StartFleetActions has been requested but the update has not yet been
--   completed for the location.
locationAttributes_updateStatus :: Lens' LocationAttributes (Maybe LocationUpdateStatus)

-- | A fleet location and its current life-cycle state.
locationAttributes_locationState :: Lens' LocationAttributes (Maybe LocationState)

-- | A list of fleet actions that have been suspended in the fleet
--   location.
locationAttributes_stoppedActions :: Lens' LocationAttributes (Maybe (NonEmpty FleetAction))
instance GHC.Generics.Generic Network.AWS.GameLift.Types.LocationAttributes.LocationAttributes
instance GHC.Show.Show Network.AWS.GameLift.Types.LocationAttributes.LocationAttributes
instance GHC.Read.Read Network.AWS.GameLift.Types.LocationAttributes.LocationAttributes
instance GHC.Classes.Eq Network.AWS.GameLift.Types.LocationAttributes.LocationAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.LocationAttributes.LocationAttributes
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.LocationAttributes.LocationAttributes
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.LocationAttributes.LocationAttributes


module Network.AWS.GameLift.Types.MatchedPlayerSession

-- | Represents a new player session that is created as a result of a
--   successful FlexMatch match. A successful match automatically creates
--   new player sessions for every player ID in the original matchmaking
--   request.
--   
--   When players connect to the match's game session, they must include
--   both player ID and player session ID in order to claim their assigned
--   player slot.
--   
--   <i>See:</i> <a>newMatchedPlayerSession</a> smart constructor.
data MatchedPlayerSession
MatchedPlayerSession' :: Maybe Text -> Maybe Text -> MatchedPlayerSession

-- | A unique identifier for a player
[$sel:playerId:MatchedPlayerSession'] :: MatchedPlayerSession -> Maybe Text

-- | A unique identifier for a player session
[$sel:playerSessionId:MatchedPlayerSession'] :: MatchedPlayerSession -> Maybe Text

-- | Create a value of <a>MatchedPlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerId:MatchedPlayerSession'</a>,
--   <a>matchedPlayerSession_playerId</a> - A unique identifier for a
--   player
--   
--   <a>$sel:playerSessionId:MatchedPlayerSession'</a>,
--   <a>matchedPlayerSession_playerSessionId</a> - A unique identifier for
--   a player session
newMatchedPlayerSession :: MatchedPlayerSession

-- | A unique identifier for a player
matchedPlayerSession_playerId :: Lens' MatchedPlayerSession (Maybe Text)

-- | A unique identifier for a player session
matchedPlayerSession_playerSessionId :: Lens' MatchedPlayerSession (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.MatchedPlayerSession.MatchedPlayerSession
instance GHC.Show.Show Network.AWS.GameLift.Types.MatchedPlayerSession.MatchedPlayerSession
instance GHC.Read.Read Network.AWS.GameLift.Types.MatchedPlayerSession.MatchedPlayerSession
instance GHC.Classes.Eq Network.AWS.GameLift.Types.MatchedPlayerSession.MatchedPlayerSession
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.MatchedPlayerSession.MatchedPlayerSession
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.MatchedPlayerSession.MatchedPlayerSession
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.MatchedPlayerSession.MatchedPlayerSession


module Network.AWS.GameLift.Types.GameSessionConnectionInfo

-- | Connection information for a new game session that is created in
--   response to a StartMatchmaking request. Once a match is made, the
--   FlexMatch engine creates a new game session for it. This information,
--   including the game session endpoint and player sessions for each
--   player in the original matchmaking request, is added to the
--   MatchmakingTicket, which can be retrieved by calling
--   DescribeMatchmaking.
--   
--   <i>See:</i> <a>newGameSessionConnectionInfo</a> smart constructor.
data GameSessionConnectionInfo
GameSessionConnectionInfo' :: Maybe Text -> Maybe Text -> Maybe [MatchedPlayerSession] -> Maybe Natural -> Maybe Text -> GameSessionConnectionInfo

-- | A unique identifier for the game session. Use the game session ID.
[$sel:gameSessionArn:GameSessionConnectionInfo'] :: GameSessionConnectionInfo -> Maybe Text

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
[$sel:ipAddress:GameSessionConnectionInfo'] :: GameSessionConnectionInfo -> Maybe Text

-- | A collection of player session IDs, one for each player ID that was
--   included in the original matchmaking request.
[$sel:matchedPlayerSessions:GameSessionConnectionInfo'] :: GameSessionConnectionInfo -> Maybe [MatchedPlayerSession]

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
[$sel:port:GameSessionConnectionInfo'] :: GameSessionConnectionInfo -> Maybe Natural

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
[$sel:dnsName:GameSessionConnectionInfo'] :: GameSessionConnectionInfo -> Maybe Text

-- | Create a value of <a>GameSessionConnectionInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionArn:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_gameSessionArn</a> - A unique identifier
--   for the game session. Use the game session ID.
--   
--   <a>$sel:ipAddress:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_ipAddress</a> - The IP address of the
--   game session. To connect to a GameLift game server, an app needs both
--   the IP address and port number.
--   
--   <a>$sel:matchedPlayerSessions:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_matchedPlayerSessions</a> - A collection
--   of player session IDs, one for each player ID that was included in the
--   original matchmaking request.
--   
--   <a>$sel:port:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_port</a> - The port number for the game
--   session. To connect to a GameLift game server, an app needs both the
--   IP address and port number.
--   
--   <a>$sel:dnsName:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_dnsName</a> - The DNS identifier assigned
--   to the instance that is running the game session. Values have the
--   following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
newGameSessionConnectionInfo :: GameSessionConnectionInfo

-- | A unique identifier for the game session. Use the game session ID.
gameSessionConnectionInfo_gameSessionArn :: Lens' GameSessionConnectionInfo (Maybe Text)

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
gameSessionConnectionInfo_ipAddress :: Lens' GameSessionConnectionInfo (Maybe Text)

-- | A collection of player session IDs, one for each player ID that was
--   included in the original matchmaking request.
gameSessionConnectionInfo_matchedPlayerSessions :: Lens' GameSessionConnectionInfo (Maybe [MatchedPlayerSession])

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
gameSessionConnectionInfo_port :: Lens' GameSessionConnectionInfo (Maybe Natural)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
gameSessionConnectionInfo_dnsName :: Lens' GameSessionConnectionInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameSessionConnectionInfo.GameSessionConnectionInfo
instance GHC.Show.Show Network.AWS.GameLift.Types.GameSessionConnectionInfo.GameSessionConnectionInfo
instance GHC.Read.Read Network.AWS.GameLift.Types.GameSessionConnectionInfo.GameSessionConnectionInfo
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameSessionConnectionInfo.GameSessionConnectionInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameSessionConnectionInfo.GameSessionConnectionInfo
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameSessionConnectionInfo.GameSessionConnectionInfo
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameSessionConnectionInfo.GameSessionConnectionInfo


module Network.AWS.GameLift.Types.MatchmakingConfiguration

-- | Guidelines for use with FlexMatch to match players into games. All
--   matchmaking requests must specify a matchmaking configuration.
--   
--   <i>See:</i> <a>newMatchmakingConfiguration</a> smart constructor.
data MatchmakingConfiguration
MatchmakingConfiguration' :: Maybe FlexMatchMode -> Maybe Text -> Maybe BackfillMode -> Maybe [GameProperty] -> Maybe POSIX -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Bool -> MatchmakingConfiguration

-- | Indicates whether this matchmaking configuration is being used with
--   GameLift hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
[$sel:flexMatchMode:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe FlexMatchMode

-- | Information to attach to all events related to the matchmaking
--   configuration.
[$sel:customEventData:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | The method used to backfill game sessions created with this
--   matchmaking configuration. MANUAL indicates that the game makes
--   backfill requests or does not use the match backfill feature.
--   AUTOMATIC indicates that GameLift creates StartMatchBackfill requests
--   whenever a game session has one or more open slots. Learn more about
--   manual and automatic backfill in <a>Backfill existing games with
--   FlexMatch</a>. Automatic backfill is not available when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:backfillMode:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe BackfillMode

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>). This information is added to the new
--   GameSession object that is created for a successful match. This
--   parameter is not used when <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
[$sel:gameProperties:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe [GameProperty]

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe POSIX

-- | The length of time (in seconds) to wait for players to accept a
--   proposed match, if acceptance is required. If any player rejects the
--   match or fails to accept before the timeout, the ticket continues to
--   look for an acceptable match.
[$sel:acceptanceTimeoutSeconds:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Natural

-- | The number of player slots in a match to keep open for future players.
--   For example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:additionalPlayerCount:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Natural

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:gameSessionData:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   matchmaking configuration resource and uniquely identifies it. ARNs
--   are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingconfiguration/&lt;matchmaking
--   configuration name&gt;</tt>. In a GameLift configuration ARN, the
--   resource ID matches the <i>Name</i> value.
[$sel:configurationArn:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | A unique identifier for the matchmaking configuration. This name is
--   used to identify the configuration associated with a matchmaking
--   request or ticket.
[$sel:name:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. This property is not set when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:gameSessionQueueArns:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe [Text]

-- | An SNS topic ARN that is set up to receive matchmaking notifications.
[$sel:notificationTarget:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   matchmaking rule set resource that this configuration uses.
[$sel:ruleSetArn:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | The maximum duration, in seconds, that a matchmaking ticket can remain
--   in process before timing out. Requests that fail due to timing out can
--   be resubmitted as needed.
[$sel:requestTimeoutSeconds:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Natural

-- | A descriptive label that is associated with matchmaking configuration.
[$sel:description:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | A unique identifier for the matchmaking rule set to use with this
--   configuration. A matchmaking configuration can only use rule sets that
--   are defined in the same Region.
[$sel:ruleSetName:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | A flag that indicates whether a match that was created with this
--   configuration must be accepted by the matched players. To require
--   acceptance, set to TRUE. When this option is enabled, matchmaking
--   tickets use the status <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a
--   completed potential match is waiting for player acceptance.
[$sel:acceptanceRequired:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Bool

-- | Create a value of <a>MatchmakingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flexMatchMode:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_flexMatchMode</a> - Indicates whether this
--   matchmaking configuration is being used with GameLift hosting or as a
--   standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
--   
--   <a>$sel:customEventData:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_customEventData</a> - Information to
--   attach to all events related to the matchmaking configuration.
--   
--   <a>$sel:backfillMode:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_backfillMode</a> - The method used to
--   backfill game sessions created with this matchmaking configuration.
--   MANUAL indicates that the game makes backfill requests or does not use
--   the match backfill feature. AUTOMATIC indicates that GameLift creates
--   StartMatchBackfill requests whenever a game session has one or more
--   open slots. Learn more about manual and automatic backfill in
--   <a>Backfill existing games with FlexMatch</a>. Automatic backfill is
--   not available when <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameProperties:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_gameProperties</a> - A set of custom
--   properties for a game session, formatted as key:value pairs. These
--   properties are passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:creationTime:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_creationTime</a> - A time stamp indicating
--   when this data object was created. Format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:acceptanceTimeoutSeconds:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_acceptanceTimeoutSeconds</a> - The length
--   of time (in seconds) to wait for players to accept a proposed match,
--   if acceptance is required. If any player rejects the match or fails to
--   accept before the timeout, the ticket continues to look for an
--   acceptable match.
--   
--   <a>$sel:additionalPlayerCount:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_additionalPlayerCount</a> - The number of
--   player slots in a match to keep open for future players. For example,
--   if the configuration's rule set specifies a match for a single
--   12-person team, and the additional player count is set to 2, only 10
--   players are selected for the match. This parameter is not used when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameSessionData:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_gameSessionData</a> - A set of custom game
--   session properties, formatted as a single string value. This data is
--   passed to a game server process in the GameSession object with a
--   request to start a new game session (see <a>Start a Game Session</a>).
--   This information is added to the new GameSession object that is
--   created for a successful match. This parameter is not used when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:configurationArn:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_configurationArn</a> - The Amazon Resource
--   Name (<a>ARN</a>) that is assigned to a GameLift matchmaking
--   configuration resource and uniquely identifies it. ARNs are unique
--   across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingconfiguration/&lt;matchmaking
--   configuration name&gt;</tt>. In a GameLift configuration ARN, the
--   resource ID matches the <i>Name</i> value.
--   
--   <a>$sel:name:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_name</a> - A unique identifier for the
--   matchmaking configuration. This name is used to identify the
--   configuration associated with a matchmaking request or ticket.
--   
--   <a>$sel:gameSessionQueueArns:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_gameSessionQueueArns</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift game session
--   queue resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. This property is not set when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:notificationTarget:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_notificationTarget</a> - An SNS topic ARN
--   that is set up to receive matchmaking notifications.
--   
--   <a>$sel:ruleSetArn:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_ruleSetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift matchmaking rule set
--   resource that this configuration uses.
--   
--   <a>$sel:requestTimeoutSeconds:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_requestTimeoutSeconds</a> - The maximum
--   duration, in seconds, that a matchmaking ticket can remain in process
--   before timing out. Requests that fail due to timing out can be
--   resubmitted as needed.
--   
--   <a>$sel:description:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_description</a> - A descriptive label that
--   is associated with matchmaking configuration.
--   
--   <a>$sel:ruleSetName:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_ruleSetName</a> - A unique identifier for
--   the matchmaking rule set to use with this configuration. A matchmaking
--   configuration can only use rule sets that are defined in the same
--   Region.
--   
--   <a>$sel:acceptanceRequired:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_acceptanceRequired</a> - A flag that
--   indicates whether a match that was created with this configuration
--   must be accepted by the matched players. To require acceptance, set to
--   TRUE. When this option is enabled, matchmaking tickets use the status
--   <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a completed potential
--   match is waiting for player acceptance.
newMatchmakingConfiguration :: MatchmakingConfiguration

-- | Indicates whether this matchmaking configuration is being used with
--   GameLift hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
matchmakingConfiguration_flexMatchMode :: Lens' MatchmakingConfiguration (Maybe FlexMatchMode)

-- | Information to attach to all events related to the matchmaking
--   configuration.
matchmakingConfiguration_customEventData :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The method used to backfill game sessions created with this
--   matchmaking configuration. MANUAL indicates that the game makes
--   backfill requests or does not use the match backfill feature.
--   AUTOMATIC indicates that GameLift creates StartMatchBackfill requests
--   whenever a game session has one or more open slots. Learn more about
--   manual and automatic backfill in <a>Backfill existing games with
--   FlexMatch</a>. Automatic backfill is not available when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
matchmakingConfiguration_backfillMode :: Lens' MatchmakingConfiguration (Maybe BackfillMode)

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>). This information is added to the new
--   GameSession object that is created for a successful match. This
--   parameter is not used when <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
matchmakingConfiguration_gameProperties :: Lens' MatchmakingConfiguration (Maybe [GameProperty])

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
matchmakingConfiguration_creationTime :: Lens' MatchmakingConfiguration (Maybe UTCTime)

-- | The length of time (in seconds) to wait for players to accept a
--   proposed match, if acceptance is required. If any player rejects the
--   match or fails to accept before the timeout, the ticket continues to
--   look for an acceptable match.
matchmakingConfiguration_acceptanceTimeoutSeconds :: Lens' MatchmakingConfiguration (Maybe Natural)

-- | The number of player slots in a match to keep open for future players.
--   For example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
matchmakingConfiguration_additionalPlayerCount :: Lens' MatchmakingConfiguration (Maybe Natural)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
matchmakingConfiguration_gameSessionData :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   matchmaking configuration resource and uniquely identifies it. ARNs
--   are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingconfiguration/&lt;matchmaking
--   configuration name&gt;</tt>. In a GameLift configuration ARN, the
--   resource ID matches the <i>Name</i> value.
matchmakingConfiguration_configurationArn :: Lens' MatchmakingConfiguration (Maybe Text)

-- | A unique identifier for the matchmaking configuration. This name is
--   used to identify the configuration associated with a matchmaking
--   request or ticket.
matchmakingConfiguration_name :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. This property is not set when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
matchmakingConfiguration_gameSessionQueueArns :: Lens' MatchmakingConfiguration (Maybe [Text])

-- | An SNS topic ARN that is set up to receive matchmaking notifications.
matchmakingConfiguration_notificationTarget :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   matchmaking rule set resource that this configuration uses.
matchmakingConfiguration_ruleSetArn :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The maximum duration, in seconds, that a matchmaking ticket can remain
--   in process before timing out. Requests that fail due to timing out can
--   be resubmitted as needed.
matchmakingConfiguration_requestTimeoutSeconds :: Lens' MatchmakingConfiguration (Maybe Natural)

-- | A descriptive label that is associated with matchmaking configuration.
matchmakingConfiguration_description :: Lens' MatchmakingConfiguration (Maybe Text)

-- | A unique identifier for the matchmaking rule set to use with this
--   configuration. A matchmaking configuration can only use rule sets that
--   are defined in the same Region.
matchmakingConfiguration_ruleSetName :: Lens' MatchmakingConfiguration (Maybe Text)

-- | A flag that indicates whether a match that was created with this
--   configuration must be accepted by the matched players. To require
--   acceptance, set to TRUE. When this option is enabled, matchmaking
--   tickets use the status <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a
--   completed potential match is waiting for player acceptance.
matchmakingConfiguration_acceptanceRequired :: Lens' MatchmakingConfiguration (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.MatchmakingConfiguration.MatchmakingConfiguration
instance GHC.Show.Show Network.AWS.GameLift.Types.MatchmakingConfiguration.MatchmakingConfiguration
instance GHC.Read.Read Network.AWS.GameLift.Types.MatchmakingConfiguration.MatchmakingConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.Types.MatchmakingConfiguration.MatchmakingConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.MatchmakingConfiguration.MatchmakingConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.MatchmakingConfiguration.MatchmakingConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.MatchmakingConfiguration.MatchmakingConfiguration


module Network.AWS.GameLift.Types.MatchmakingConfigurationStatus
newtype MatchmakingConfigurationStatus
MatchmakingConfigurationStatus' :: Text -> MatchmakingConfigurationStatus
[fromMatchmakingConfigurationStatus] :: MatchmakingConfigurationStatus -> Text
pattern MatchmakingConfigurationStatus_CANCELLED :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_COMPLETED :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_FAILED :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_PLACING :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_QUEUED :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_REQUIRES_ACCEPTANCE :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_SEARCHING :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_TIMED_OUT :: MatchmakingConfigurationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance GHC.Generics.Generic Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance GHC.Classes.Ord Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance GHC.Classes.Eq Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance GHC.Read.Read Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus
instance GHC.Show.Show Network.AWS.GameLift.Types.MatchmakingConfigurationStatus.MatchmakingConfigurationStatus


module Network.AWS.GameLift.Types.MatchmakingRuleSet

-- | Set of rule statements, used with FlexMatch, that determine how to
--   build your player matches. Each rule set describes a type of group to
--   be created and defines the parameters for acceptable player matches.
--   Rule sets are used in MatchmakingConfiguration objects.
--   
--   A rule set may define the following elements for a match. For detailed
--   information and examples showing how to construct a rule set, see
--   <a>Build a FlexMatch rule set</a>.
--   
--   <ul>
--   <li>Teams -- Required. A rule set must define one or multiple teams
--   for the match and set minimum and maximum team sizes. For example, a
--   rule set might describe a 4x4 match that requires all eight slots to
--   be filled.</li>
--   <li>Player attributes -- Optional. These attributes specify a set of
--   player characteristics to evaluate when looking for a match.
--   Matchmaking requests that use a rule set with player attributes must
--   provide the corresponding attribute values. For example, an attribute
--   might specify a player's skill or level.</li>
--   <li>Rules -- Optional. Rules define how to evaluate potential players
--   for a match based on player attributes. A rule might specify minimum
--   requirements for individual players, teams, or entire matches. For
--   example, a rule might require each player to meet a certain skill
--   level, each team to have at least one player in a certain role, or the
--   match to have a minimum average skill level. or may describe an entire
--   group--such as all teams must be evenly matched or have at least one
--   player in a certain role.</li>
--   <li>Expansions -- Optional. Expansions allow you to relax the rules
--   after a period of time when no acceptable matches are found. This
--   feature lets you balance getting players into games in a reasonable
--   amount of time instead of making them wait indefinitely for the best
--   possible match. For example, you might use an expansion to increase
--   the maximum skill variance between players after 30 seconds.</li>
--   </ul>
--   
--   <i>See:</i> <a>newMatchmakingRuleSet</a> smart constructor.
data MatchmakingRuleSet
MatchmakingRuleSet' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Text -> MatchmakingRuleSet

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:MatchmakingRuleSet'] :: MatchmakingRuleSet -> Maybe POSIX

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   matchmaking rule set resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingruleset/&lt;ruleset
--   name&gt;</tt>. In a GameLift rule set ARN, the resource ID matches the
--   <i>RuleSetName</i> value.
[$sel:ruleSetArn:MatchmakingRuleSet'] :: MatchmakingRuleSet -> Maybe Text

-- | A unique identifier for the matchmaking rule set
[$sel:ruleSetName:MatchmakingRuleSet'] :: MatchmakingRuleSet -> Maybe Text

-- | A collection of matchmaking rules, formatted as a JSON string.
--   Comments are not allowed in JSON, but most elements support a
--   description field.
[$sel:ruleSetBody:MatchmakingRuleSet'] :: MatchmakingRuleSet -> Text

-- | Create a value of <a>MatchmakingRuleSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:MatchmakingRuleSet'</a>,
--   <a>matchmakingRuleSet_creationTime</a> - A time stamp indicating when
--   this data object was created. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:ruleSetArn:MatchmakingRuleSet'</a>,
--   <a>matchmakingRuleSet_ruleSetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift matchmaking rule set
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingruleset/&lt;ruleset
--   name&gt;</tt>. In a GameLift rule set ARN, the resource ID matches the
--   <i>RuleSetName</i> value.
--   
--   <a>$sel:ruleSetName:MatchmakingRuleSet'</a>,
--   <a>matchmakingRuleSet_ruleSetName</a> - A unique identifier for the
--   matchmaking rule set
--   
--   <a>$sel:ruleSetBody:MatchmakingRuleSet'</a>,
--   <a>matchmakingRuleSet_ruleSetBody</a> - A collection of matchmaking
--   rules, formatted as a JSON string. Comments are not allowed in JSON,
--   but most elements support a description field.
newMatchmakingRuleSet :: Text -> MatchmakingRuleSet

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
matchmakingRuleSet_creationTime :: Lens' MatchmakingRuleSet (Maybe UTCTime)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   matchmaking rule set resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingruleset/&lt;ruleset
--   name&gt;</tt>. In a GameLift rule set ARN, the resource ID matches the
--   <i>RuleSetName</i> value.
matchmakingRuleSet_ruleSetArn :: Lens' MatchmakingRuleSet (Maybe Text)

-- | A unique identifier for the matchmaking rule set
matchmakingRuleSet_ruleSetName :: Lens' MatchmakingRuleSet (Maybe Text)

-- | A collection of matchmaking rules, formatted as a JSON string.
--   Comments are not allowed in JSON, but most elements support a
--   description field.
matchmakingRuleSet_ruleSetBody :: Lens' MatchmakingRuleSet Text
instance GHC.Generics.Generic Network.AWS.GameLift.Types.MatchmakingRuleSet.MatchmakingRuleSet
instance GHC.Show.Show Network.AWS.GameLift.Types.MatchmakingRuleSet.MatchmakingRuleSet
instance GHC.Read.Read Network.AWS.GameLift.Types.MatchmakingRuleSet.MatchmakingRuleSet
instance GHC.Classes.Eq Network.AWS.GameLift.Types.MatchmakingRuleSet.MatchmakingRuleSet
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.MatchmakingRuleSet.MatchmakingRuleSet
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.MatchmakingRuleSet.MatchmakingRuleSet
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.MatchmakingRuleSet.MatchmakingRuleSet


module Network.AWS.GameLift.Types.MetricName
newtype MetricName
MetricName' :: Text -> MetricName
[fromMetricName] :: MetricName -> Text
pattern MetricName_ActivatingGameSessions :: MetricName
pattern MetricName_ActiveGameSessions :: MetricName
pattern MetricName_ActiveInstances :: MetricName
pattern MetricName_AvailableGameSessions :: MetricName
pattern MetricName_AvailablePlayerSessions :: MetricName
pattern MetricName_CurrentPlayerSessions :: MetricName
pattern MetricName_IdleInstances :: MetricName
pattern MetricName_PercentAvailableGameSessions :: MetricName
pattern MetricName_PercentIdleInstances :: MetricName
pattern MetricName_QueueDepth :: MetricName
pattern MetricName_WaitTime :: MetricName
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.MetricName.MetricName
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.MetricName.MetricName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.MetricName.MetricName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.MetricName.MetricName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.MetricName.MetricName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.MetricName.MetricName
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.MetricName.MetricName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.MetricName.MetricName
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.MetricName.MetricName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.MetricName.MetricName
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.MetricName.MetricName
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.MetricName.MetricName
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.MetricName.MetricName
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.MetricName.MetricName
instance GHC.Generics.Generic Network.AWS.GameLift.Types.MetricName.MetricName
instance GHC.Classes.Ord Network.AWS.GameLift.Types.MetricName.MetricName
instance GHC.Classes.Eq Network.AWS.GameLift.Types.MetricName.MetricName
instance GHC.Read.Read Network.AWS.GameLift.Types.MetricName.MetricName
instance GHC.Show.Show Network.AWS.GameLift.Types.MetricName.MetricName


module Network.AWS.GameLift.Types.OperatingSystem
newtype OperatingSystem
OperatingSystem' :: Text -> OperatingSystem
[fromOperatingSystem] :: OperatingSystem -> Text
pattern OperatingSystem_AMAZON_LINUX :: OperatingSystem
pattern OperatingSystem_AMAZON_LINUX_2 :: OperatingSystem
pattern OperatingSystem_WINDOWS_2012 :: OperatingSystem
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance GHC.Generics.Generic Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance GHC.Classes.Ord Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance GHC.Classes.Eq Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance GHC.Read.Read Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem
instance GHC.Show.Show Network.AWS.GameLift.Types.OperatingSystem.OperatingSystem


module Network.AWS.GameLift.Types.InstanceAccess

-- | Information required to remotely connect to a fleet instance. Access
--   is requested by calling GetInstanceAccess.
--   
--   <i>See:</i> <a>newInstanceAccess</a> smart constructor.
data InstanceAccess
InstanceAccess' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe OperatingSystem -> Maybe (Sensitive InstanceCredentials) -> InstanceAccess

-- | A unique identifier for the instance being accessed.
[$sel:instanceId:InstanceAccess'] :: InstanceAccess -> Maybe Text

-- | A unique identifier for the fleet containing the instance being
--   accessed.
[$sel:fleetId:InstanceAccess'] :: InstanceAccess -> Maybe Text

-- | IP address that is assigned to the instance.
[$sel:ipAddress:InstanceAccess'] :: InstanceAccess -> Maybe Text

-- | Operating system that is running on the instance.
[$sel:operatingSystem:InstanceAccess'] :: InstanceAccess -> Maybe OperatingSystem

-- | Credentials required to access the instance.
[$sel:credentials:InstanceAccess'] :: InstanceAccess -> Maybe (Sensitive InstanceCredentials)

-- | Create a value of <a>InstanceAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:InstanceAccess'</a>,
--   <a>instanceAccess_instanceId</a> - A unique identifier for the
--   instance being accessed.
--   
--   <a>$sel:fleetId:InstanceAccess'</a>, <a>instanceAccess_fleetId</a> - A
--   unique identifier for the fleet containing the instance being
--   accessed.
--   
--   <a>$sel:ipAddress:InstanceAccess'</a>, <a>instanceAccess_ipAddress</a>
--   - IP address that is assigned to the instance.
--   
--   <a>$sel:operatingSystem:InstanceAccess'</a>,
--   <a>instanceAccess_operatingSystem</a> - Operating system that is
--   running on the instance.
--   
--   <a>$sel:credentials:InstanceAccess'</a>,
--   <a>instanceAccess_credentials</a> - Credentials required to access the
--   instance.
newInstanceAccess :: InstanceAccess

-- | A unique identifier for the instance being accessed.
instanceAccess_instanceId :: Lens' InstanceAccess (Maybe Text)

-- | A unique identifier for the fleet containing the instance being
--   accessed.
instanceAccess_fleetId :: Lens' InstanceAccess (Maybe Text)

-- | IP address that is assigned to the instance.
instanceAccess_ipAddress :: Lens' InstanceAccess (Maybe Text)

-- | Operating system that is running on the instance.
instanceAccess_operatingSystem :: Lens' InstanceAccess (Maybe OperatingSystem)

-- | Credentials required to access the instance.
instanceAccess_credentials :: Lens' InstanceAccess (Maybe InstanceCredentials)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.InstanceAccess.InstanceAccess
instance GHC.Show.Show Network.AWS.GameLift.Types.InstanceAccess.InstanceAccess
instance GHC.Classes.Eq Network.AWS.GameLift.Types.InstanceAccess.InstanceAccess
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.InstanceAccess.InstanceAccess
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.InstanceAccess.InstanceAccess
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.InstanceAccess.InstanceAccess


module Network.AWS.GameLift.Types.Instance

-- | Represents an EC2 instance of virtual computing resources that hosts
--   one or more game servers. In GameLift, a fleet can contain zero or
--   more instances.
--   
--   <b>Related actions</b>
--   
--   DescribeInstances
--   
--   <i>See:</i> <a>newInstance</a> smart constructor.
data Instance
Instance' :: Maybe POSIX -> Maybe InstanceStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe OperatingSystem -> Maybe EC2InstanceType -> Maybe Text -> Instance

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:Instance'] :: Instance -> Maybe POSIX

-- | Current status of the instance. Possible statuses include the
--   following:
--   
--   <ul>
--   <li><b>PENDING</b> -- The instance is in the process of being created
--   and launching server processes as defined in the fleet's run-time
--   configuration.</li>
--   <li><b>ACTIVE</b> -- The instance has been successfully created and at
--   least one server process has successfully launched and reported back
--   to GameLift that it is ready to host a game session. The instance is
--   now considered ready to host game sessions.</li>
--   <li><b>TERMINATING</b> -- The instance is in the process of shutting
--   down. This may happen to reduce capacity during a scaling down event
--   or to recycle resources in the event of a problem.</li>
--   </ul>
[$sel:status:Instance'] :: Instance -> Maybe InstanceStatus

-- | A unique identifier for the instance.
[$sel:instanceId:Instance'] :: Instance -> Maybe Text

-- | A unique identifier for the fleet that the instance is in.
[$sel:fleetId:Instance'] :: Instance -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:Instance'] :: Instance -> Maybe Text

-- | IP address that is assigned to the instance.
[$sel:ipAddress:Instance'] :: Instance -> Maybe Text

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
[$sel:dnsName:Instance'] :: Instance -> Maybe Text

-- | Operating system that is running on this instance.
[$sel:operatingSystem:Instance'] :: Instance -> Maybe OperatingSystem

-- | EC2 instance type that defines the computing resources of this
--   instance.
[$sel:type':Instance'] :: Instance -> Maybe EC2InstanceType

-- | The fleet location of the instance, expressed as an AWS Region code,
--   such as <tt>us-west-2</tt>.
[$sel:location:Instance'] :: Instance -> Maybe Text

-- | Create a value of <a>Instance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Instance'</a>, <a>instance_creationTime</a> - A
--   time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:Instance'</a>, <a>instance_status</a> - Current status
--   of the instance. Possible statuses include the following:
--   
--   <ul>
--   <li><b>PENDING</b> -- The instance is in the process of being created
--   and launching server processes as defined in the fleet's run-time
--   configuration.</li>
--   <li><b>ACTIVE</b> -- The instance has been successfully created and at
--   least one server process has successfully launched and reported back
--   to GameLift that it is ready to host a game session. The instance is
--   now considered ready to host game sessions.</li>
--   <li><b>TERMINATING</b> -- The instance is in the process of shutting
--   down. This may happen to reduce capacity during a scaling down event
--   or to recycle resources in the event of a problem.</li>
--   </ul>
--   
--   <a>$sel:instanceId:Instance'</a>, <a>instance_instanceId</a> - A
--   unique identifier for the instance.
--   
--   <a>$sel:fleetId:Instance'</a>, <a>instance_fleetId</a> - A unique
--   identifier for the fleet that the instance is in.
--   
--   <a>$sel:fleetArn:Instance'</a>, <a>instance_fleetArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift fleet
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:ipAddress:Instance'</a>, <a>instance_ipAddress</a> - IP
--   address that is assigned to the instance.
--   
--   <a>$sel:dnsName:Instance'</a>, <a>instance_dnsName</a> - The DNS
--   identifier assigned to the instance that is running the game session.
--   Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
--   
--   <a>$sel:operatingSystem:Instance'</a>, <a>instance_operatingSystem</a>
--   - Operating system that is running on this instance.
--   
--   <a>$sel:type':Instance'</a>, <a>instance_type</a> - EC2 instance type
--   that defines the computing resources of this instance.
--   
--   <a>$sel:location:Instance'</a>, <a>instance_location</a> - The fleet
--   location of the instance, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
newInstance :: Instance

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
instance_creationTime :: Lens' Instance (Maybe UTCTime)

-- | Current status of the instance. Possible statuses include the
--   following:
--   
--   <ul>
--   <li><b>PENDING</b> -- The instance is in the process of being created
--   and launching server processes as defined in the fleet's run-time
--   configuration.</li>
--   <li><b>ACTIVE</b> -- The instance has been successfully created and at
--   least one server process has successfully launched and reported back
--   to GameLift that it is ready to host a game session. The instance is
--   now considered ready to host game sessions.</li>
--   <li><b>TERMINATING</b> -- The instance is in the process of shutting
--   down. This may happen to reduce capacity during a scaling down event
--   or to recycle resources in the event of a problem.</li>
--   </ul>
instance_status :: Lens' Instance (Maybe InstanceStatus)

-- | A unique identifier for the instance.
instance_instanceId :: Lens' Instance (Maybe Text)

-- | A unique identifier for the fleet that the instance is in.
instance_fleetId :: Lens' Instance (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
instance_fleetArn :: Lens' Instance (Maybe Text)

-- | IP address that is assigned to the instance.
instance_ipAddress :: Lens' Instance (Maybe Text)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
instance_dnsName :: Lens' Instance (Maybe Text)

-- | Operating system that is running on this instance.
instance_operatingSystem :: Lens' Instance (Maybe OperatingSystem)

-- | EC2 instance type that defines the computing resources of this
--   instance.
instance_type :: Lens' Instance (Maybe EC2InstanceType)

-- | The fleet location of the instance, expressed as an AWS Region code,
--   such as <tt>us-west-2</tt>.
instance_location :: Lens' Instance (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.Instance.Instance
instance GHC.Show.Show Network.AWS.GameLift.Types.Instance.Instance
instance GHC.Read.Read Network.AWS.GameLift.Types.Instance.Instance
instance GHC.Classes.Eq Network.AWS.GameLift.Types.Instance.Instance
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.Instance.Instance
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.Instance.Instance
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.Instance.Instance


module Network.AWS.GameLift.Types.Build

-- | Properties describing a custom game build.
--   
--   <b>Related actions</b>
--   
--   CreateBuild | ListBuilds | DescribeBuild | UpdateBuild | DeleteBuild |
--   <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newBuild</a> smart constructor.
data Build
Build' :: Maybe POSIX -> Maybe BuildStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe OperatingSystem -> Build

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:Build'] :: Build -> Maybe POSIX

-- | Current status of the build.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
[$sel:status:Build'] :: Build -> Maybe BuildStatus

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique. This value can be set using
--   CreateBuild or UpdateBuild.
[$sel:version:Build'] :: Build -> Maybe Text

-- | A descriptive label that is associated with a build. Build names do
--   not need to be unique. It can be set using CreateBuild or UpdateBuild.
[$sel:name:Build'] :: Build -> Maybe Text

-- | File size of the uploaded game build, expressed in bytes. When the
--   build status is <tt>INITIALIZED</tt>, this value is 0.
[$sel:sizeOnDisk:Build'] :: Build -> Maybe Natural

-- | A unique identifier for the build.
[$sel:buildId:Build'] :: Build -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   build resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::build/build-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift build ARN, the resource ID matches the <i>BuildId</i>
--   value.
[$sel:buildArn:Build'] :: Build -> Maybe Text

-- | Operating system that the game server binaries are built to run on.
--   This value determines the type of fleet resources that you can use for
--   this build.
[$sel:operatingSystem:Build'] :: Build -> Maybe OperatingSystem

-- | Create a value of <a>Build</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Build'</a>, <a>build_creationTime</a> - A time
--   stamp indicating when this data object was created. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:Build'</a>, <a>build_status</a> - Current status of the
--   build.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
--   
--   <a>$sel:version:Build'</a>, <a>build_version</a> - Version information
--   that is associated with a build or script. Version strings do not need
--   to be unique. This value can be set using CreateBuild or UpdateBuild.
--   
--   <a>$sel:name:Build'</a>, <a>build_name</a> - A descriptive label that
--   is associated with a build. Build names do not need to be unique. It
--   can be set using CreateBuild or UpdateBuild.
--   
--   <a>$sel:sizeOnDisk:Build'</a>, <a>build_sizeOnDisk</a> - File size of
--   the uploaded game build, expressed in bytes. When the build status is
--   <tt>INITIALIZED</tt>, this value is 0.
--   
--   <a>$sel:buildId:Build'</a>, <a>build_buildId</a> - A unique identifier
--   for the build.
--   
--   <a>$sel:buildArn:Build'</a>, <a>build_buildArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift build
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::build/build-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift build ARN, the resource ID matches the <i>BuildId</i>
--   value.
--   
--   <a>$sel:operatingSystem:Build'</a>, <a>build_operatingSystem</a> -
--   Operating system that the game server binaries are built to run on.
--   This value determines the type of fleet resources that you can use for
--   this build.
newBuild :: Build

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
build_creationTime :: Lens' Build (Maybe UTCTime)

-- | Current status of the build.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
build_status :: Lens' Build (Maybe BuildStatus)

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique. This value can be set using
--   CreateBuild or UpdateBuild.
build_version :: Lens' Build (Maybe Text)

-- | A descriptive label that is associated with a build. Build names do
--   not need to be unique. It can be set using CreateBuild or UpdateBuild.
build_name :: Lens' Build (Maybe Text)

-- | File size of the uploaded game build, expressed in bytes. When the
--   build status is <tt>INITIALIZED</tt>, this value is 0.
build_sizeOnDisk :: Lens' Build (Maybe Natural)

-- | A unique identifier for the build.
build_buildId :: Lens' Build (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   build resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::build/build-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift build ARN, the resource ID matches the <i>BuildId</i>
--   value.
build_buildArn :: Lens' Build (Maybe Text)

-- | Operating system that the game server binaries are built to run on.
--   This value determines the type of fleet resources that you can use for
--   this build.
build_operatingSystem :: Lens' Build (Maybe OperatingSystem)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.Build.Build
instance GHC.Show.Show Network.AWS.GameLift.Types.Build.Build
instance GHC.Read.Read Network.AWS.GameLift.Types.Build.Build
instance GHC.Classes.Eq Network.AWS.GameLift.Types.Build.Build
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.Build.Build
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.Build.Build
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.Build.Build


module Network.AWS.GameLift.Types.PlacedPlayerSession

-- | Information about a player session that was created as part of a
--   StartGameSessionPlacement request. This object contains only the
--   player ID and player session ID. To retrieve full details on a player
--   session, call DescribePlayerSessions with the player session ID.
--   
--   <b>Related actions</b>
--   
--   CreatePlayerSession | CreatePlayerSessions | DescribePlayerSessions |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newPlacedPlayerSession</a> smart constructor.
data PlacedPlayerSession
PlacedPlayerSession' :: Maybe Text -> Maybe Text -> PlacedPlayerSession

-- | A unique identifier for a player that is associated with this player
--   session.
[$sel:playerId:PlacedPlayerSession'] :: PlacedPlayerSession -> Maybe Text

-- | A unique identifier for a player session.
[$sel:playerSessionId:PlacedPlayerSession'] :: PlacedPlayerSession -> Maybe Text

-- | Create a value of <a>PlacedPlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerId:PlacedPlayerSession'</a>,
--   <a>placedPlayerSession_playerId</a> - A unique identifier for a player
--   that is associated with this player session.
--   
--   <a>$sel:playerSessionId:PlacedPlayerSession'</a>,
--   <a>placedPlayerSession_playerSessionId</a> - A unique identifier for a
--   player session.
newPlacedPlayerSession :: PlacedPlayerSession

-- | A unique identifier for a player that is associated with this player
--   session.
placedPlayerSession_playerId :: Lens' PlacedPlayerSession (Maybe Text)

-- | A unique identifier for a player session.
placedPlayerSession_playerSessionId :: Lens' PlacedPlayerSession (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.PlacedPlayerSession.PlacedPlayerSession
instance GHC.Show.Show Network.AWS.GameLift.Types.PlacedPlayerSession.PlacedPlayerSession
instance GHC.Read.Read Network.AWS.GameLift.Types.PlacedPlayerSession.PlacedPlayerSession
instance GHC.Classes.Eq Network.AWS.GameLift.Types.PlacedPlayerSession.PlacedPlayerSession
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.PlacedPlayerSession.PlacedPlayerSession
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.PlacedPlayerSession.PlacedPlayerSession
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.PlacedPlayerSession.PlacedPlayerSession


module Network.AWS.GameLift.Types.Player

-- | Represents a player in matchmaking. When starting a matchmaking
--   request, a player has a player ID, attributes, and may have latency
--   data. Team information is added after a match has been successfully
--   completed.
--   
--   <i>See:</i> <a>newPlayer</a> smart constructor.
data Player
Player' :: Maybe (HashMap Text AttributeValue) -> Maybe (HashMap Text Natural) -> Maybe Text -> Maybe Text -> Player

-- | A collection of key:value pairs containing player information for use
--   in matchmaking. Player attribute keys must match the
--   <i>playerAttributes</i> used in a matchmaking rule set. Example:
--   <tt>"PlayerAttributes": {"skill": {"N": "23"}, "gameMode": {"S":
--   "deathmatch"}}</tt>.
[$sel:playerAttributes:Player'] :: Player -> Maybe (HashMap Text AttributeValue)

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions. If
--   this property is present, FlexMatch considers placing the match only
--   in Regions for which latency is reported.
--   
--   If a matchmaker has a rule that evaluates player latency, players must
--   report latency in order to be matched. If no latency is reported in
--   this scenario, FlexMatch assumes that no Regions are available to the
--   player and the ticket is not matchable.
[$sel:latencyInMs:Player'] :: Player -> Maybe (HashMap Text Natural)

-- | A unique identifier for a player
[$sel:playerId:Player'] :: Player -> Maybe Text

-- | Name of the team that the player is assigned to in a match. Team names
--   are defined in a matchmaking rule set.
[$sel:team:Player'] :: Player -> Maybe Text

-- | Create a value of <a>Player</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerAttributes:Player'</a>, <a>player_playerAttributes</a> -
--   A collection of key:value pairs containing player information for use
--   in matchmaking. Player attribute keys must match the
--   <i>playerAttributes</i> used in a matchmaking rule set. Example:
--   <tt>"PlayerAttributes": {"skill": {"N": "23"}, "gameMode": {"S":
--   "deathmatch"}}</tt>.
--   
--   <a>$sel:latencyInMs:Player'</a>, <a>player_latencyInMs</a> - A set of
--   values, expressed in milliseconds, that indicates the amount of
--   latency that a player experiences when connected to AWS Regions. If
--   this property is present, FlexMatch considers placing the match only
--   in Regions for which latency is reported.
--   
--   If a matchmaker has a rule that evaluates player latency, players must
--   report latency in order to be matched. If no latency is reported in
--   this scenario, FlexMatch assumes that no Regions are available to the
--   player and the ticket is not matchable.
--   
--   <a>$sel:playerId:Player'</a>, <a>player_playerId</a> - A unique
--   identifier for a player
--   
--   <a>$sel:team:Player'</a>, <a>player_team</a> - Name of the team that
--   the player is assigned to in a match. Team names are defined in a
--   matchmaking rule set.
newPlayer :: Player

-- | A collection of key:value pairs containing player information for use
--   in matchmaking. Player attribute keys must match the
--   <i>playerAttributes</i> used in a matchmaking rule set. Example:
--   <tt>"PlayerAttributes": {"skill": {"N": "23"}, "gameMode": {"S":
--   "deathmatch"}}</tt>.
player_playerAttributes :: Lens' Player (Maybe (HashMap Text AttributeValue))

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions. If
--   this property is present, FlexMatch considers placing the match only
--   in Regions for which latency is reported.
--   
--   If a matchmaker has a rule that evaluates player latency, players must
--   report latency in order to be matched. If no latency is reported in
--   this scenario, FlexMatch assumes that no Regions are available to the
--   player and the ticket is not matchable.
player_latencyInMs :: Lens' Player (Maybe (HashMap Text Natural))

-- | A unique identifier for a player
player_playerId :: Lens' Player (Maybe Text)

-- | Name of the team that the player is assigned to in a match. Team names
--   are defined in a matchmaking rule set.
player_team :: Lens' Player (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.Player.Player
instance GHC.Show.Show Network.AWS.GameLift.Types.Player.Player
instance GHC.Read.Read Network.AWS.GameLift.Types.Player.Player
instance GHC.Classes.Eq Network.AWS.GameLift.Types.Player.Player
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.Player.Player
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.Player.Player
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.Player.Player
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.Player.Player


module Network.AWS.GameLift.Types.MatchmakingTicket

-- | Ticket generated to track the progress of a matchmaking request. Each
--   ticket is uniquely identified by a ticket ID, supplied by the
--   requester, when creating a matchmaking request with StartMatchmaking.
--   Tickets can be retrieved by calling DescribeMatchmaking with the
--   ticket ID.
--   
--   <i>See:</i> <a>newMatchmakingTicket</a> smart constructor.
data MatchmakingTicket
MatchmakingTicket' :: Maybe Text -> Maybe MatchmakingConfigurationStatus -> Maybe Natural -> Maybe Text -> Maybe [Player] -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe GameSessionConnectionInfo -> Maybe Text -> MatchmakingTicket

-- | Additional information about the current status.
[$sel:statusMessage:MatchmakingTicket'] :: MatchmakingTicket -> Maybe Text

-- | Current status of the matchmaking request.
--   
--   <ul>
--   <li><b>QUEUED</b> -- The matchmaking request has been received and is
--   currently waiting to be processed.</li>
--   <li><b>SEARCHING</b> -- The matchmaking request is currently being
--   processed.</li>
--   <li><b>REQUIRES_ACCEPTANCE</b> -- A match has been proposed and the
--   players must accept the match (see AcceptMatch). This status is used
--   only with requests that use a matchmaking configuration with a player
--   acceptance requirement.</li>
--   <li><b>PLACING</b> -- The FlexMatch engine has matched players and is
--   in the process of placing a new game session for the match.</li>
--   <li><b>COMPLETED</b> -- Players have been matched and a game session
--   is ready to host the players. A ticket in this state contains the
--   necessary connection information for players.</li>
--   <li><b>FAILED</b> -- The matchmaking request was not completed.</li>
--   <li><b>CANCELLED</b> -- The matchmaking request was canceled. This may
--   be the result of a call to StopMatchmaking or a proposed match that
--   one or more players failed to accept.</li>
--   <li><b>TIMED_OUT</b> -- The matchmaking request was not successful
--   within the duration specified in the matchmaking configuration.</li>
--   </ul>
--   
--   Matchmaking requests that fail to successfully complete (statuses
--   FAILED, CANCELLED, TIMED_OUT) can be resubmitted as new requests with
--   new ticket IDs.
[$sel:status:MatchmakingTicket'] :: MatchmakingTicket -> Maybe MatchmakingConfigurationStatus

-- | Average amount of time (in seconds) that players are currently waiting
--   for a match. If there is not enough recent data, this property may be
--   empty.
[$sel:estimatedWaitTime:MatchmakingTicket'] :: MatchmakingTicket -> Maybe Natural

-- | A unique identifier for a matchmaking ticket.
[$sel:ticketId:MatchmakingTicket'] :: MatchmakingTicket -> Maybe Text

-- | A set of <tt>Player</tt> objects, each representing a player to find
--   matches for. Players are identified by a unique player ID and may
--   include latency data for use during matchmaking. If the ticket is in
--   status <tt>COMPLETED</tt>, the <tt>Player</tt> objects include the
--   team the players were assigned to in the resulting match.
[$sel:players:MatchmakingTicket'] :: MatchmakingTicket -> Maybe [Player]

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   matchmaking configuration resource that is used with this ticket.
[$sel:configurationArn:MatchmakingTicket'] :: MatchmakingTicket -> Maybe Text

-- | Time stamp indicating when this matchmaking request was received.
--   Format is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:startTime:MatchmakingTicket'] :: MatchmakingTicket -> Maybe POSIX

-- | Time stamp indicating when this matchmaking request stopped being
--   processed due to success, failure, or cancellation. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:endTime:MatchmakingTicket'] :: MatchmakingTicket -> Maybe POSIX

-- | Name of the MatchmakingConfiguration that is used with this ticket.
--   Matchmaking configurations determine how players are grouped into a
--   match and how a new game session is created for the match.
[$sel:configurationName:MatchmakingTicket'] :: MatchmakingTicket -> Maybe Text

-- | Identifier and connection information of the game session created for
--   the match. This information is added to the ticket only after the
--   matchmaking request has been successfully completed. This parameter is
--   not set when FlexMatch is being used without GameLift hosting.
[$sel:gameSessionConnectionInfo:MatchmakingTicket'] :: MatchmakingTicket -> Maybe GameSessionConnectionInfo

-- | Code to explain the current status. For example, a status reason may
--   indicate when a ticket has returned to <tt>SEARCHING</tt> status after
--   a proposed match fails to receive player acceptances.
[$sel:statusReason:MatchmakingTicket'] :: MatchmakingTicket -> Maybe Text

-- | Create a value of <a>MatchmakingTicket</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_statusMessage</a> - Additional information about
--   the current status.
--   
--   <a>$sel:status:MatchmakingTicket'</a>, <a>matchmakingTicket_status</a>
--   - Current status of the matchmaking request.
--   
--   <ul>
--   <li><b>QUEUED</b> -- The matchmaking request has been received and is
--   currently waiting to be processed.</li>
--   <li><b>SEARCHING</b> -- The matchmaking request is currently being
--   processed.</li>
--   <li><b>REQUIRES_ACCEPTANCE</b> -- A match has been proposed and the
--   players must accept the match (see AcceptMatch). This status is used
--   only with requests that use a matchmaking configuration with a player
--   acceptance requirement.</li>
--   <li><b>PLACING</b> -- The FlexMatch engine has matched players and is
--   in the process of placing a new game session for the match.</li>
--   <li><b>COMPLETED</b> -- Players have been matched and a game session
--   is ready to host the players. A ticket in this state contains the
--   necessary connection information for players.</li>
--   <li><b>FAILED</b> -- The matchmaking request was not completed.</li>
--   <li><b>CANCELLED</b> -- The matchmaking request was canceled. This may
--   be the result of a call to StopMatchmaking or a proposed match that
--   one or more players failed to accept.</li>
--   <li><b>TIMED_OUT</b> -- The matchmaking request was not successful
--   within the duration specified in the matchmaking configuration.</li>
--   </ul>
--   
--   Matchmaking requests that fail to successfully complete (statuses
--   FAILED, CANCELLED, TIMED_OUT) can be resubmitted as new requests with
--   new ticket IDs.
--   
--   <a>$sel:estimatedWaitTime:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_estimatedWaitTime</a> - Average amount of time
--   (in seconds) that players are currently waiting for a match. If there
--   is not enough recent data, this property may be empty.
--   
--   <a>$sel:ticketId:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_ticketId</a> - A unique identifier for a
--   matchmaking ticket.
--   
--   <a>$sel:players:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_players</a> - A set of <tt>Player</tt> objects,
--   each representing a player to find matches for. Players are identified
--   by a unique player ID and may include latency data for use during
--   matchmaking. If the ticket is in status <tt>COMPLETED</tt>, the
--   <tt>Player</tt> objects include the team the players were assigned to
--   in the resulting match.
--   
--   <a>$sel:configurationArn:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_configurationArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift matchmaking configuration
--   resource that is used with this ticket.
--   
--   <a>$sel:startTime:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_startTime</a> - Time stamp indicating when this
--   matchmaking request was received. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:endTime:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_endTime</a> - Time stamp indicating when this
--   matchmaking request stopped being processed due to success, failure,
--   or cancellation. Format is a number expressed in Unix time as
--   milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:configurationName:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_configurationName</a> - Name of the
--   MatchmakingConfiguration that is used with this ticket. Matchmaking
--   configurations determine how players are grouped into a match and how
--   a new game session is created for the match.
--   
--   <a>$sel:gameSessionConnectionInfo:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_gameSessionConnectionInfo</a> - Identifier and
--   connection information of the game session created for the match. This
--   information is added to the ticket only after the matchmaking request
--   has been successfully completed. This parameter is not set when
--   FlexMatch is being used without GameLift hosting.
--   
--   <a>$sel:statusReason:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_statusReason</a> - Code to explain the current
--   status. For example, a status reason may indicate when a ticket has
--   returned to <tt>SEARCHING</tt> status after a proposed match fails to
--   receive player acceptances.
newMatchmakingTicket :: MatchmakingTicket

-- | Additional information about the current status.
matchmakingTicket_statusMessage :: Lens' MatchmakingTicket (Maybe Text)

-- | Current status of the matchmaking request.
--   
--   <ul>
--   <li><b>QUEUED</b> -- The matchmaking request has been received and is
--   currently waiting to be processed.</li>
--   <li><b>SEARCHING</b> -- The matchmaking request is currently being
--   processed.</li>
--   <li><b>REQUIRES_ACCEPTANCE</b> -- A match has been proposed and the
--   players must accept the match (see AcceptMatch). This status is used
--   only with requests that use a matchmaking configuration with a player
--   acceptance requirement.</li>
--   <li><b>PLACING</b> -- The FlexMatch engine has matched players and is
--   in the process of placing a new game session for the match.</li>
--   <li><b>COMPLETED</b> -- Players have been matched and a game session
--   is ready to host the players. A ticket in this state contains the
--   necessary connection information for players.</li>
--   <li><b>FAILED</b> -- The matchmaking request was not completed.</li>
--   <li><b>CANCELLED</b> -- The matchmaking request was canceled. This may
--   be the result of a call to StopMatchmaking or a proposed match that
--   one or more players failed to accept.</li>
--   <li><b>TIMED_OUT</b> -- The matchmaking request was not successful
--   within the duration specified in the matchmaking configuration.</li>
--   </ul>
--   
--   Matchmaking requests that fail to successfully complete (statuses
--   FAILED, CANCELLED, TIMED_OUT) can be resubmitted as new requests with
--   new ticket IDs.
matchmakingTicket_status :: Lens' MatchmakingTicket (Maybe MatchmakingConfigurationStatus)

-- | Average amount of time (in seconds) that players are currently waiting
--   for a match. If there is not enough recent data, this property may be
--   empty.
matchmakingTicket_estimatedWaitTime :: Lens' MatchmakingTicket (Maybe Natural)

-- | A unique identifier for a matchmaking ticket.
matchmakingTicket_ticketId :: Lens' MatchmakingTicket (Maybe Text)

-- | A set of <tt>Player</tt> objects, each representing a player to find
--   matches for. Players are identified by a unique player ID and may
--   include latency data for use during matchmaking. If the ticket is in
--   status <tt>COMPLETED</tt>, the <tt>Player</tt> objects include the
--   team the players were assigned to in the resulting match.
matchmakingTicket_players :: Lens' MatchmakingTicket (Maybe [Player])

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   matchmaking configuration resource that is used with this ticket.
matchmakingTicket_configurationArn :: Lens' MatchmakingTicket (Maybe Text)

-- | Time stamp indicating when this matchmaking request was received.
--   Format is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
matchmakingTicket_startTime :: Lens' MatchmakingTicket (Maybe UTCTime)

-- | Time stamp indicating when this matchmaking request stopped being
--   processed due to success, failure, or cancellation. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
matchmakingTicket_endTime :: Lens' MatchmakingTicket (Maybe UTCTime)

-- | Name of the MatchmakingConfiguration that is used with this ticket.
--   Matchmaking configurations determine how players are grouped into a
--   match and how a new game session is created for the match.
matchmakingTicket_configurationName :: Lens' MatchmakingTicket (Maybe Text)

-- | Identifier and connection information of the game session created for
--   the match. This information is added to the ticket only after the
--   matchmaking request has been successfully completed. This parameter is
--   not set when FlexMatch is being used without GameLift hosting.
matchmakingTicket_gameSessionConnectionInfo :: Lens' MatchmakingTicket (Maybe GameSessionConnectionInfo)

-- | Code to explain the current status. For example, a status reason may
--   indicate when a ticket has returned to <tt>SEARCHING</tt> status after
--   a proposed match fails to receive player acceptances.
matchmakingTicket_statusReason :: Lens' MatchmakingTicket (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.MatchmakingTicket.MatchmakingTicket
instance GHC.Show.Show Network.AWS.GameLift.Types.MatchmakingTicket.MatchmakingTicket
instance GHC.Read.Read Network.AWS.GameLift.Types.MatchmakingTicket.MatchmakingTicket
instance GHC.Classes.Eq Network.AWS.GameLift.Types.MatchmakingTicket.MatchmakingTicket
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.MatchmakingTicket.MatchmakingTicket
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.MatchmakingTicket.MatchmakingTicket
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.MatchmakingTicket.MatchmakingTicket


module Network.AWS.GameLift.Types.PlayerLatency

-- | Regional latency information for a player, used when requesting a new
--   game session with StartGameSessionPlacement. This value indicates the
--   amount of time lag that exists when the player is connected to a fleet
--   in the specified Region. The relative difference between a player's
--   latency values for multiple Regions are used to determine which fleets
--   are best suited to place a new game session for the player.
--   
--   <i>See:</i> <a>newPlayerLatency</a> smart constructor.
data PlayerLatency
PlayerLatency' :: Maybe Text -> Maybe Double -> Maybe Text -> PlayerLatency

-- | A unique identifier for a player associated with the latency data.
[$sel:playerId:PlayerLatency'] :: PlayerLatency -> Maybe Text

-- | Amount of time that represents the time lag experienced by the player
--   when connected to the specified Region.
[$sel:latencyInMilliseconds:PlayerLatency'] :: PlayerLatency -> Maybe Double

-- | Name of the Region that is associated with the latency value.
[$sel:regionIdentifier:PlayerLatency'] :: PlayerLatency -> Maybe Text

-- | Create a value of <a>PlayerLatency</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerId:PlayerLatency'</a>, <a>playerLatency_playerId</a> - A
--   unique identifier for a player associated with the latency data.
--   
--   <a>$sel:latencyInMilliseconds:PlayerLatency'</a>,
--   <a>playerLatency_latencyInMilliseconds</a> - Amount of time that
--   represents the time lag experienced by the player when connected to
--   the specified Region.
--   
--   <a>$sel:regionIdentifier:PlayerLatency'</a>,
--   <a>playerLatency_regionIdentifier</a> - Name of the Region that is
--   associated with the latency value.
newPlayerLatency :: PlayerLatency

-- | A unique identifier for a player associated with the latency data.
playerLatency_playerId :: Lens' PlayerLatency (Maybe Text)

-- | Amount of time that represents the time lag experienced by the player
--   when connected to the specified Region.
playerLatency_latencyInMilliseconds :: Lens' PlayerLatency (Maybe Double)

-- | Name of the Region that is associated with the latency value.
playerLatency_regionIdentifier :: Lens' PlayerLatency (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.PlayerLatency.PlayerLatency
instance GHC.Show.Show Network.AWS.GameLift.Types.PlayerLatency.PlayerLatency
instance GHC.Read.Read Network.AWS.GameLift.Types.PlayerLatency.PlayerLatency
instance GHC.Classes.Eq Network.AWS.GameLift.Types.PlayerLatency.PlayerLatency
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.PlayerLatency.PlayerLatency
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.PlayerLatency.PlayerLatency
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.PlayerLatency.PlayerLatency
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.PlayerLatency.PlayerLatency


module Network.AWS.GameLift.Types.GameSessionPlacement

-- | Object that describes a StartGameSessionPlacement request. This object
--   includes the full details of the original request plus the current
--   status and start/end time stamps.
--   
--   Game session placement-related operations include:
--   
--   <ul>
--   <li>StartGameSessionPlacement</li>
--   <li>DescribeGameSessionPlacement</li>
--   <li>StopGameSessionPlacement</li>
--   </ul>
--   
--   <i>See:</i> <a>newGameSessionPlacement</a> smart constructor.
data GameSessionPlacement
GameSessionPlacement' :: Maybe [GameProperty] -> Maybe GameSessionPlacementState -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [PlacedPlayerSession] -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe [PlayerLatency] -> GameSessionPlacement

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>).
[$sel:gameProperties:GameSessionPlacement'] :: GameSessionPlacement -> Maybe [GameProperty]

-- | Current status of the game session placement request.
--   
--   <ul>
--   <li><b>PENDING</b> -- The placement request is currently in the queue
--   waiting to be processed.</li>
--   <li><b>FULFILLED</b> -- A new game session and player sessions (if
--   requested) have been successfully created. Values for
--   <i>GameSessionArn</i> and <i>GameSessionRegion</i> are available.</li>
--   <li><b>CANCELLED</b> -- The placement request was canceled with a call
--   to StopGameSessionPlacement.</li>
--   <li><b>TIMED_OUT</b> -- A new game session was not successfully
--   created before the time limit expired. You can resubmit the placement
--   request as needed.</li>
--   <li><b>FAILED</b> -- GameLift is not able to complete the process of
--   placing the game session. Common reasons are the game session
--   terminated before the placement process was completed, or an
--   unexpected internal error.</li>
--   </ul>
[$sel:status:GameSessionPlacement'] :: GameSessionPlacement -> Maybe GameSessionPlacementState

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
[$sel:gameSessionQueueName:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
[$sel:maximumPlayerSessionCount:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Natural

-- | Information on the matchmaking process for this game. Data is in JSON
--   syntax, formatted as a string. It identifies the matchmaking
--   configuration used to create the match, and contains data on all
--   players assigned to the match, including player attributes and team
--   assignments. For more details on matchmaker data, see <a>Match
--   Data</a>.
[$sel:matchmakerData:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
[$sel:gameSessionData:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | A unique identifier for the game session. This value is set once the
--   new game session is placed (placement status is <tt>FULFILLED</tt>).
[$sel:gameSessionId:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | Time stamp indicating when this request was placed in the queue.
--   Format is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:startTime:GameSessionPlacement'] :: GameSessionPlacement -> Maybe POSIX

-- | Identifier for the game session created by this placement request.
--   This value is set once the new game session is placed (placement
--   status is <tt>FULFILLED</tt>). This identifier is unique across all
--   Regions. You can use this value as a <tt>GameSessionId</tt> value as
--   needed.
[$sel:gameSessionArn:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | Time stamp indicating when this request was completed, canceled, or
--   timed out.
[$sel:endTime:GameSessionPlacement'] :: GameSessionPlacement -> Maybe POSIX

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
[$sel:gameSessionName:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number. This value
--   is set once the new game session is placed (placement status is
--   <tt>FULFILLED</tt>).
[$sel:ipAddress:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | A unique identifier for a game session placement.
[$sel:placementId:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | A collection of information on player sessions created in response to
--   the game session placement request. These player sessions are created
--   only once a new game session is successfully placed (placement status
--   is <tt>FULFILLED</tt>). This information includes the player ID (as
--   provided in the placement request) and the corresponding player
--   session ID. Retrieve full player sessions by calling
--   DescribePlayerSessions with the player session ID.
[$sel:placedPlayerSessions:GameSessionPlacement'] :: GameSessionPlacement -> Maybe [PlacedPlayerSession]

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number. This value
--   is set once the new game session is placed (placement status is
--   <tt>FULFILLED</tt>).
[$sel:port:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Natural

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
[$sel:dnsName:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | Name of the Region where the game session created by this placement
--   request is running. This value is set once the new game session is
--   placed (placement status is <tt>FULFILLED</tt>).
[$sel:gameSessionRegion:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions.
[$sel:playerLatencies:GameSessionPlacement'] :: GameSessionPlacement -> Maybe [PlayerLatency]

-- | Create a value of <a>GameSessionPlacement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameProperties:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameProperties</a> - A set of custom
--   properties for a game session, formatted as key:value pairs. These
--   properties are passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
--   
--   <a>$sel:status:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_status</a> - Current status of the game
--   session placement request.
--   
--   <ul>
--   <li><b>PENDING</b> -- The placement request is currently in the queue
--   waiting to be processed.</li>
--   <li><b>FULFILLED</b> -- A new game session and player sessions (if
--   requested) have been successfully created. Values for
--   <i>GameSessionArn</i> and <i>GameSessionRegion</i> are available.</li>
--   <li><b>CANCELLED</b> -- The placement request was canceled with a call
--   to StopGameSessionPlacement.</li>
--   <li><b>TIMED_OUT</b> -- A new game session was not successfully
--   created before the time limit expired. You can resubmit the placement
--   request as needed.</li>
--   <li><b>FAILED</b> -- GameLift is not able to complete the process of
--   placing the game session. Common reasons are the game session
--   terminated before the placement process was completed, or an
--   unexpected internal error.</li>
--   </ul>
--   
--   <a>$sel:gameSessionQueueName:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionQueueName</a> - A descriptive label
--   that is associated with game session queue. Queue names must be unique
--   within each Region.
--   
--   <a>$sel:maximumPlayerSessionCount:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_maximumPlayerSessionCount</a> - The maximum
--   number of players that can be connected simultaneously to the game
--   session.
--   
--   <a>$sel:matchmakerData:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_matchmakerData</a> - Information on the
--   matchmaking process for this game. Data is in JSON syntax, formatted
--   as a string. It identifies the matchmaking configuration used to
--   create the match, and contains data on all players assigned to the
--   match, including player attributes and team assignments. For more
--   details on matchmaker data, see <a>Match Data</a>.
--   
--   <a>$sel:gameSessionData:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionData</a> - A set of custom game
--   session properties, formatted as a single string value. This data is
--   passed to a game server process in the GameSession object with a
--   request to start a new game session (see <a>Start a Game Session</a>).
--   
--   <a>$sel:gameSessionId:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionId</a> - A unique identifier for
--   the game session. This value is set once the new game session is
--   placed (placement status is <tt>FULFILLED</tt>).
--   
--   <a>$sel:startTime:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_startTime</a> - Time stamp indicating when
--   this request was placed in the queue. Format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:gameSessionArn:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionArn</a> - Identifier for the game
--   session created by this placement request. This value is set once the
--   new game session is placed (placement status is <tt>FULFILLED</tt>).
--   This identifier is unique across all Regions. You can use this value
--   as a <tt>GameSessionId</tt> value as needed.
--   
--   <a>$sel:endTime:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_endTime</a> - Time stamp indicating when this
--   request was completed, canceled, or timed out.
--   
--   <a>$sel:gameSessionName:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionName</a> - A descriptive label that
--   is associated with a game session. Session names do not need to be
--   unique.
--   
--   <a>$sel:ipAddress:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_ipAddress</a> - The IP address of the game
--   session. To connect to a GameLift game server, an app needs both the
--   IP address and port number. This value is set once the new game
--   session is placed (placement status is <tt>FULFILLED</tt>).
--   
--   <a>$sel:placementId:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_placementId</a> - A unique identifier for a
--   game session placement.
--   
--   <a>$sel:placedPlayerSessions:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_placedPlayerSessions</a> - A collection of
--   information on player sessions created in response to the game session
--   placement request. These player sessions are created only once a new
--   game session is successfully placed (placement status is
--   <tt>FULFILLED</tt>). This information includes the player ID (as
--   provided in the placement request) and the corresponding player
--   session ID. Retrieve full player sessions by calling
--   DescribePlayerSessions with the player session ID.
--   
--   <a>$sel:port:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_port</a> - The port number for the game
--   session. To connect to a GameLift game server, an app needs both the
--   IP address and port number. This value is set once the new game
--   session is placed (placement status is <tt>FULFILLED</tt>).
--   
--   <a>$sel:dnsName:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_dnsName</a> - The DNS identifier assigned to
--   the instance that is running the game session. Values have the
--   following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
--   
--   <a>$sel:gameSessionRegion:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionRegion</a> - Name of the Region
--   where the game session created by this placement request is running.
--   This value is set once the new game session is placed (placement
--   status is <tt>FULFILLED</tt>).
--   
--   <a>$sel:playerLatencies:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_playerLatencies</a> - A set of values,
--   expressed in milliseconds, that indicates the amount of latency that a
--   player experiences when connected to AWS Regions.
newGameSessionPlacement :: GameSessionPlacement

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>).
gameSessionPlacement_gameProperties :: Lens' GameSessionPlacement (Maybe [GameProperty])

-- | Current status of the game session placement request.
--   
--   <ul>
--   <li><b>PENDING</b> -- The placement request is currently in the queue
--   waiting to be processed.</li>
--   <li><b>FULFILLED</b> -- A new game session and player sessions (if
--   requested) have been successfully created. Values for
--   <i>GameSessionArn</i> and <i>GameSessionRegion</i> are available.</li>
--   <li><b>CANCELLED</b> -- The placement request was canceled with a call
--   to StopGameSessionPlacement.</li>
--   <li><b>TIMED_OUT</b> -- A new game session was not successfully
--   created before the time limit expired. You can resubmit the placement
--   request as needed.</li>
--   <li><b>FAILED</b> -- GameLift is not able to complete the process of
--   placing the game session. Common reasons are the game session
--   terminated before the placement process was completed, or an
--   unexpected internal error.</li>
--   </ul>
gameSessionPlacement_status :: Lens' GameSessionPlacement (Maybe GameSessionPlacementState)

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
gameSessionPlacement_gameSessionQueueName :: Lens' GameSessionPlacement (Maybe Text)

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
gameSessionPlacement_maximumPlayerSessionCount :: Lens' GameSessionPlacement (Maybe Natural)

-- | Information on the matchmaking process for this game. Data is in JSON
--   syntax, formatted as a string. It identifies the matchmaking
--   configuration used to create the match, and contains data on all
--   players assigned to the match, including player attributes and team
--   assignments. For more details on matchmaker data, see <a>Match
--   Data</a>.
gameSessionPlacement_matchmakerData :: Lens' GameSessionPlacement (Maybe Text)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
gameSessionPlacement_gameSessionData :: Lens' GameSessionPlacement (Maybe Text)

-- | A unique identifier for the game session. This value is set once the
--   new game session is placed (placement status is <tt>FULFILLED</tt>).
gameSessionPlacement_gameSessionId :: Lens' GameSessionPlacement (Maybe Text)

-- | Time stamp indicating when this request was placed in the queue.
--   Format is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
gameSessionPlacement_startTime :: Lens' GameSessionPlacement (Maybe UTCTime)

-- | Identifier for the game session created by this placement request.
--   This value is set once the new game session is placed (placement
--   status is <tt>FULFILLED</tt>). This identifier is unique across all
--   Regions. You can use this value as a <tt>GameSessionId</tt> value as
--   needed.
gameSessionPlacement_gameSessionArn :: Lens' GameSessionPlacement (Maybe Text)

-- | Time stamp indicating when this request was completed, canceled, or
--   timed out.
gameSessionPlacement_endTime :: Lens' GameSessionPlacement (Maybe UTCTime)

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
gameSessionPlacement_gameSessionName :: Lens' GameSessionPlacement (Maybe Text)

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number. This value
--   is set once the new game session is placed (placement status is
--   <tt>FULFILLED</tt>).
gameSessionPlacement_ipAddress :: Lens' GameSessionPlacement (Maybe Text)

-- | A unique identifier for a game session placement.
gameSessionPlacement_placementId :: Lens' GameSessionPlacement (Maybe Text)

-- | A collection of information on player sessions created in response to
--   the game session placement request. These player sessions are created
--   only once a new game session is successfully placed (placement status
--   is <tt>FULFILLED</tt>). This information includes the player ID (as
--   provided in the placement request) and the corresponding player
--   session ID. Retrieve full player sessions by calling
--   DescribePlayerSessions with the player session ID.
gameSessionPlacement_placedPlayerSessions :: Lens' GameSessionPlacement (Maybe [PlacedPlayerSession])

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number. This value
--   is set once the new game session is placed (placement status is
--   <tt>FULFILLED</tt>).
gameSessionPlacement_port :: Lens' GameSessionPlacement (Maybe Natural)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
gameSessionPlacement_dnsName :: Lens' GameSessionPlacement (Maybe Text)

-- | Name of the Region where the game session created by this placement
--   request is running. This value is set once the new game session is
--   placed (placement status is <tt>FULFILLED</tt>).
gameSessionPlacement_gameSessionRegion :: Lens' GameSessionPlacement (Maybe Text)

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions.
gameSessionPlacement_playerLatencies :: Lens' GameSessionPlacement (Maybe [PlayerLatency])
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameSessionPlacement.GameSessionPlacement
instance GHC.Show.Show Network.AWS.GameLift.Types.GameSessionPlacement.GameSessionPlacement
instance GHC.Read.Read Network.AWS.GameLift.Types.GameSessionPlacement.GameSessionPlacement
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameSessionPlacement.GameSessionPlacement
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameSessionPlacement.GameSessionPlacement
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameSessionPlacement.GameSessionPlacement
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameSessionPlacement.GameSessionPlacement


module Network.AWS.GameLift.Types.PlayerLatencyPolicy

-- | Sets a latency cap for individual players when placing a game session.
--   With a latency policy in force, a game session cannot be placed in a
--   fleet location where a player reports latency higher than the cap.
--   Latency policies are used only with placement request that provide
--   player latency information. Player latency policies can be stacked to
--   gradually relax latency requirements over time.
--   
--   Latency policies are part of a GameSessionQueue.
--   
--   <i>See:</i> <a>newPlayerLatencyPolicy</a> smart constructor.
data PlayerLatencyPolicy
PlayerLatencyPolicy' :: Maybe Natural -> Maybe Natural -> PlayerLatencyPolicy

-- | The length of time, in seconds, that the policy is enforced while
--   placing a new game session. A null value for this property means that
--   the policy is enforced until the queue times out.
[$sel:policyDurationSeconds:PlayerLatencyPolicy'] :: PlayerLatencyPolicy -> Maybe Natural

-- | The maximum latency value that is allowed for any player, in
--   milliseconds. All policies must have a value set for this property.
[$sel:maximumIndividualPlayerLatencyMilliseconds:PlayerLatencyPolicy'] :: PlayerLatencyPolicy -> Maybe Natural

-- | Create a value of <a>PlayerLatencyPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyDurationSeconds:PlayerLatencyPolicy'</a>,
--   <a>playerLatencyPolicy_policyDurationSeconds</a> - The length of time,
--   in seconds, that the policy is enforced while placing a new game
--   session. A null value for this property means that the policy is
--   enforced until the queue times out.
--   
--   
--   <a>$sel:maximumIndividualPlayerLatencyMilliseconds:PlayerLatencyPolicy'</a>,
--   <a>playerLatencyPolicy_maximumIndividualPlayerLatencyMilliseconds</a>
--   - The maximum latency value that is allowed for any player, in
--   milliseconds. All policies must have a value set for this property.
newPlayerLatencyPolicy :: PlayerLatencyPolicy

-- | The length of time, in seconds, that the policy is enforced while
--   placing a new game session. A null value for this property means that
--   the policy is enforced until the queue times out.
playerLatencyPolicy_policyDurationSeconds :: Lens' PlayerLatencyPolicy (Maybe Natural)

-- | The maximum latency value that is allowed for any player, in
--   milliseconds. All policies must have a value set for this property.
playerLatencyPolicy_maximumIndividualPlayerLatencyMilliseconds :: Lens' PlayerLatencyPolicy (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.PlayerLatencyPolicy.PlayerLatencyPolicy
instance GHC.Show.Show Network.AWS.GameLift.Types.PlayerLatencyPolicy.PlayerLatencyPolicy
instance GHC.Read.Read Network.AWS.GameLift.Types.PlayerLatencyPolicy.PlayerLatencyPolicy
instance GHC.Classes.Eq Network.AWS.GameLift.Types.PlayerLatencyPolicy.PlayerLatencyPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.PlayerLatencyPolicy.PlayerLatencyPolicy
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.PlayerLatencyPolicy.PlayerLatencyPolicy
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.PlayerLatencyPolicy.PlayerLatencyPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.PlayerLatencyPolicy.PlayerLatencyPolicy


module Network.AWS.GameLift.Types.PlayerSessionCreationPolicy
newtype PlayerSessionCreationPolicy
PlayerSessionCreationPolicy' :: Text -> PlayerSessionCreationPolicy
[fromPlayerSessionCreationPolicy] :: PlayerSessionCreationPolicy -> Text
pattern PlayerSessionCreationPolicy_ACCEPT_ALL :: PlayerSessionCreationPolicy
pattern PlayerSessionCreationPolicy_DENY_ALL :: PlayerSessionCreationPolicy
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance GHC.Generics.Generic Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance GHC.Classes.Ord Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance GHC.Classes.Eq Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance GHC.Read.Read Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy
instance GHC.Show.Show Network.AWS.GameLift.Types.PlayerSessionCreationPolicy.PlayerSessionCreationPolicy


module Network.AWS.GameLift.Types.GameSession

-- | Properties describing a game session.
--   
--   A game session in ACTIVE status can host players. When a game session
--   ends, its status is set to <tt>TERMINATED</tt>.
--   
--   Once the session ends, the game session object is retained for 30
--   days. This means you can reuse idempotency token values after this
--   time. Game session logs are retained for 14 days.
--   
--   <b>Related actions</b>
--   
--   CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails
--   | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newGameSession</a> smart constructor.
data GameSession
GameSession' :: Maybe Natural -> Maybe [GameProperty] -> Maybe POSIX -> Maybe GameSessionStatus -> Maybe PlayerSessionCreationPolicy -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe GameSessionStatusReason -> Maybe Text -> GameSession

-- | Number of players currently in the game session.
[$sel:currentPlayerSessionCount:GameSession'] :: GameSession -> Maybe Natural

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session. You can
--   search for active game sessions based on this custom data with
--   SearchGameSessions.
[$sel:gameProperties:GameSession'] :: GameSession -> Maybe [GameProperty]

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:GameSession'] :: GameSession -> Maybe POSIX

-- | Current status of the game session. A game session must have an
--   <tt>ACTIVE</tt> status to have player sessions.
[$sel:status:GameSession'] :: GameSession -> Maybe GameSessionStatus

-- | Indicates whether or not the game session is accepting new players.
[$sel:playerSessionCreationPolicy:GameSession'] :: GameSession -> Maybe PlayerSessionCreationPolicy

-- | A unique identifier for a player. This ID is used to enforce a
--   resource protection policy (if one exists), that limits the number of
--   game sessions a player can create.
[$sel:creatorId:GameSession'] :: GameSession -> Maybe Text

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
[$sel:maximumPlayerSessionCount:GameSession'] :: GameSession -> Maybe Natural

-- | Information about the matchmaking process that was used to create the
--   game session. It is in JSON syntax, formatted as a string. In addition
--   the matchmaking configuration used, it contains data on all players
--   assigned to the match, including player attributes and team
--   assignments. For more details on matchmaker data, see <a>Match
--   Data</a>. Matchmaker data is useful when requesting match backfills,
--   and is updated whenever new players are added during a successful
--   backfill (see StartMatchBackfill).
[$sel:matchmakerData:GameSession'] :: GameSession -> Maybe Text

-- | A unique identifier for the fleet that the game session is running on.
[$sel:fleetId:GameSession'] :: GameSession -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that this game session is running on.
[$sel:fleetArn:GameSession'] :: GameSession -> Maybe Text

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session.
[$sel:gameSessionData:GameSession'] :: GameSession -> Maybe Text

-- | A unique identifier for the game session. A game session ARN has the
--   following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>.
[$sel:gameSessionId:GameSession'] :: GameSession -> Maybe Text

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
[$sel:name:GameSession'] :: GameSession -> Maybe Text

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
[$sel:ipAddress:GameSession'] :: GameSession -> Maybe Text

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:terminationTime:GameSession'] :: GameSession -> Maybe POSIX

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
[$sel:port:GameSession'] :: GameSession -> Maybe Natural

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
[$sel:dnsName:GameSession'] :: GameSession -> Maybe Text

-- | Provides additional information about game session status.
--   <tt>INTERRUPTED</tt> indicates that the game session was hosted on a
--   spot instance that was reclaimed, causing the active game session to
--   be terminated.
[$sel:statusReason:GameSession'] :: GameSession -> Maybe GameSessionStatusReason

-- | The fleet location where the game session is running. This value might
--   specify the fleet's home Region or a remote location. Location is
--   expressed as an AWS Region code such as <tt>us-west-2</tt>.
[$sel:location:GameSession'] :: GameSession -> Maybe Text

-- | Create a value of <a>GameSession</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentPlayerSessionCount:GameSession'</a>,
--   <a>gameSession_currentPlayerSessionCount</a> - Number of players
--   currently in the game session.
--   
--   <a>$sel:gameProperties:GameSession'</a>,
--   <a>gameSession_gameProperties</a> - A set of custom properties for a
--   game session, formatted as key:value pairs. These properties are
--   passed to a game server process in the GameSession object with a
--   request to start a new game session. You can search for active game
--   sessions based on this custom data with SearchGameSessions.
--   
--   <a>$sel:creationTime:GameSession'</a>, <a>gameSession_creationTime</a>
--   - A time stamp indicating when this data object was created. Format is
--   a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:GameSession'</a>, <a>gameSession_status</a> - Current
--   status of the game session. A game session must have an
--   <tt>ACTIVE</tt> status to have player sessions.
--   
--   <a>$sel:playerSessionCreationPolicy:GameSession'</a>,
--   <a>gameSession_playerSessionCreationPolicy</a> - Indicates whether or
--   not the game session is accepting new players.
--   
--   <a>$sel:creatorId:GameSession'</a>, <a>gameSession_creatorId</a> - A
--   unique identifier for a player. This ID is used to enforce a resource
--   protection policy (if one exists), that limits the number of game
--   sessions a player can create.
--   
--   <a>$sel:maximumPlayerSessionCount:GameSession'</a>,
--   <a>gameSession_maximumPlayerSessionCount</a> - The maximum number of
--   players that can be connected simultaneously to the game session.
--   
--   <a>$sel:matchmakerData:GameSession'</a>,
--   <a>gameSession_matchmakerData</a> - Information about the matchmaking
--   process that was used to create the game session. It is in JSON
--   syntax, formatted as a string. In addition the matchmaking
--   configuration used, it contains data on all players assigned to the
--   match, including player attributes and team assignments. For more
--   details on matchmaker data, see <a>Match Data</a>. Matchmaker data is
--   useful when requesting match backfills, and is updated whenever new
--   players are added during a successful backfill (see
--   StartMatchBackfill).
--   
--   <a>$sel:fleetId:GameSession'</a>, <a>gameSession_fleetId</a> - A
--   unique identifier for the fleet that the game session is running on.
--   
--   <a>$sel:fleetArn:GameSession'</a>, <a>gameSession_fleetArn</a> - The
--   Amazon Resource Name (<a>ARN</a>) associated with the GameLift fleet
--   that this game session is running on.
--   
--   <a>$sel:gameSessionData:GameSession'</a>,
--   <a>gameSession_gameSessionData</a> - A set of custom game session
--   properties, formatted as a single string value. This data is passed to
--   a game server process in the GameSession object with a request to
--   start a new game session.
--   
--   <a>$sel:gameSessionId:GameSession'</a>,
--   <a>gameSession_gameSessionId</a> - A unique identifier for the game
--   session. A game session ARN has the following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>.
--   
--   <a>$sel:name:GameSession'</a>, <a>gameSession_name</a> - A descriptive
--   label that is associated with a game session. Session names do not
--   need to be unique.
--   
--   <a>$sel:ipAddress:GameSession'</a>, <a>gameSession_ipAddress</a> - The
--   IP address of the game session. To connect to a GameLift game server,
--   an app needs both the IP address and port number.
--   
--   <a>$sel:terminationTime:GameSession'</a>,
--   <a>gameSession_terminationTime</a> - A time stamp indicating when this
--   data object was terminated. Format is a number expressed in Unix time
--   as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:port:GameSession'</a>, <a>gameSession_port</a> - The port
--   number for the game session. To connect to a GameLift game server, an
--   app needs both the IP address and port number.
--   
--   <a>$sel:dnsName:GameSession'</a>, <a>gameSession_dnsName</a> - The DNS
--   identifier assigned to the instance that is running the game session.
--   Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
--   
--   <a>$sel:statusReason:GameSession'</a>, <a>gameSession_statusReason</a>
--   - Provides additional information about game session status.
--   <tt>INTERRUPTED</tt> indicates that the game session was hosted on a
--   spot instance that was reclaimed, causing the active game session to
--   be terminated.
--   
--   <a>$sel:location:GameSession'</a>, <a>gameSession_location</a> - The
--   fleet location where the game session is running. This value might
--   specify the fleet's home Region or a remote location. Location is
--   expressed as an AWS Region code such as <tt>us-west-2</tt>.
newGameSession :: GameSession

-- | Number of players currently in the game session.
gameSession_currentPlayerSessionCount :: Lens' GameSession (Maybe Natural)

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session. You can
--   search for active game sessions based on this custom data with
--   SearchGameSessions.
gameSession_gameProperties :: Lens' GameSession (Maybe [GameProperty])

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
gameSession_creationTime :: Lens' GameSession (Maybe UTCTime)

-- | Current status of the game session. A game session must have an
--   <tt>ACTIVE</tt> status to have player sessions.
gameSession_status :: Lens' GameSession (Maybe GameSessionStatus)

-- | Indicates whether or not the game session is accepting new players.
gameSession_playerSessionCreationPolicy :: Lens' GameSession (Maybe PlayerSessionCreationPolicy)

-- | A unique identifier for a player. This ID is used to enforce a
--   resource protection policy (if one exists), that limits the number of
--   game sessions a player can create.
gameSession_creatorId :: Lens' GameSession (Maybe Text)

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
gameSession_maximumPlayerSessionCount :: Lens' GameSession (Maybe Natural)

-- | Information about the matchmaking process that was used to create the
--   game session. It is in JSON syntax, formatted as a string. In addition
--   the matchmaking configuration used, it contains data on all players
--   assigned to the match, including player attributes and team
--   assignments. For more details on matchmaker data, see <a>Match
--   Data</a>. Matchmaker data is useful when requesting match backfills,
--   and is updated whenever new players are added during a successful
--   backfill (see StartMatchBackfill).
gameSession_matchmakerData :: Lens' GameSession (Maybe Text)

-- | A unique identifier for the fleet that the game session is running on.
gameSession_fleetId :: Lens' GameSession (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that this game session is running on.
gameSession_fleetArn :: Lens' GameSession (Maybe Text)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session.
gameSession_gameSessionData :: Lens' GameSession (Maybe Text)

-- | A unique identifier for the game session. A game session ARN has the
--   following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>.
gameSession_gameSessionId :: Lens' GameSession (Maybe Text)

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
gameSession_name :: Lens' GameSession (Maybe Text)

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
gameSession_ipAddress :: Lens' GameSession (Maybe Text)

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
gameSession_terminationTime :: Lens' GameSession (Maybe UTCTime)

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
gameSession_port :: Lens' GameSession (Maybe Natural)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
gameSession_dnsName :: Lens' GameSession (Maybe Text)

-- | Provides additional information about game session status.
--   <tt>INTERRUPTED</tt> indicates that the game session was hosted on a
--   spot instance that was reclaimed, causing the active game session to
--   be terminated.
gameSession_statusReason :: Lens' GameSession (Maybe GameSessionStatusReason)

-- | The fleet location where the game session is running. This value might
--   specify the fleet's home Region or a remote location. Location is
--   expressed as an AWS Region code such as <tt>us-west-2</tt>.
gameSession_location :: Lens' GameSession (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameSession.GameSession
instance GHC.Show.Show Network.AWS.GameLift.Types.GameSession.GameSession
instance GHC.Read.Read Network.AWS.GameLift.Types.GameSession.GameSession
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameSession.GameSession
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameSession.GameSession
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameSession.GameSession
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameSession.GameSession


module Network.AWS.GameLift.Types.PlayerSessionStatus
newtype PlayerSessionStatus
PlayerSessionStatus' :: Text -> PlayerSessionStatus
[fromPlayerSessionStatus] :: PlayerSessionStatus -> Text
pattern PlayerSessionStatus_ACTIVE :: PlayerSessionStatus
pattern PlayerSessionStatus_COMPLETED :: PlayerSessionStatus
pattern PlayerSessionStatus_RESERVED :: PlayerSessionStatus
pattern PlayerSessionStatus_TIMEDOUT :: PlayerSessionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance GHC.Generics.Generic Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance GHC.Classes.Ord Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance GHC.Classes.Eq Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance GHC.Read.Read Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus
instance GHC.Show.Show Network.AWS.GameLift.Types.PlayerSessionStatus.PlayerSessionStatus


module Network.AWS.GameLift.Types.PlayerSession

-- | Represents a player session. Player sessions are created either for a
--   specific game session, or as part of a game session placement or
--   matchmaking request. A player session can represents a reserved player
--   slot in a game session (when status is <tt>RESERVED</tt>) or actual
--   player activity in a game session (when status is <tt>ACTIVE</tt>). A
--   player session object, including player data, is automatically passed
--   to a game session when the player connects to the game session and is
--   validated. After the game session ends, player sessions information is
--   retained for 30 days and then removed.
--   
--   <b>Related actions</b>
--   
--   CreatePlayerSession | CreatePlayerSessions | DescribePlayerSessions |
--   StartGameSessionPlacement | DescribeGameSessionPlacement | <a>All APIs
--   by task</a>
--   
--   <i>See:</i> <a>newPlayerSession</a> smart constructor.
data PlayerSession
PlayerSession' :: Maybe POSIX -> Maybe PlayerSessionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe Text -> PlayerSession

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:PlayerSession'] :: PlayerSession -> Maybe POSIX

-- | Current status of the player session.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
[$sel:status:PlayerSession'] :: PlayerSession -> Maybe PlayerSessionStatus

-- | A unique identifier for a player that is associated with this player
--   session.
[$sel:playerId:PlayerSession'] :: PlayerSession -> Maybe Text

-- | A unique identifier for the fleet that the player's game session is
--   running on.
[$sel:fleetId:PlayerSession'] :: PlayerSession -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that the player's game session is running on.
[$sel:fleetArn:PlayerSession'] :: PlayerSession -> Maybe Text

-- | A unique identifier for a player session.
[$sel:playerSessionId:PlayerSession'] :: PlayerSession -> Maybe Text

-- | A unique identifier for the game session that the player session is
--   connected to.
[$sel:gameSessionId:PlayerSession'] :: PlayerSession -> Maybe Text

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
[$sel:ipAddress:PlayerSession'] :: PlayerSession -> Maybe Text

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:terminationTime:PlayerSession'] :: PlayerSession -> Maybe POSIX

-- | Port number for the game session. To connect to a Amazon GameLift
--   server process, an app needs both the IP address and port number.
[$sel:port:PlayerSession'] :: PlayerSession -> Maybe Natural

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
[$sel:dnsName:PlayerSession'] :: PlayerSession -> Maybe Text

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
[$sel:playerData:PlayerSession'] :: PlayerSession -> Maybe Text

-- | Create a value of <a>PlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:PlayerSession'</a>,
--   <a>playerSession_creationTime</a> - A time stamp indicating when this
--   data object was created. Format is a number expressed in Unix time as
--   milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:PlayerSession'</a>, <a>playerSession_status</a> -
--   Current status of the player session.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
--   
--   <a>$sel:playerId:PlayerSession'</a>, <a>playerSession_playerId</a> - A
--   unique identifier for a player that is associated with this player
--   session.
--   
--   <a>$sel:fleetId:PlayerSession'</a>, <a>playerSession_fleetId</a> - A
--   unique identifier for the fleet that the player's game session is
--   running on.
--   
--   <a>$sel:fleetArn:PlayerSession'</a>, <a>playerSession_fleetArn</a> -
--   The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that the player's game session is running on.
--   
--   <a>$sel:playerSessionId:PlayerSession'</a>,
--   <a>playerSession_playerSessionId</a> - A unique identifier for a
--   player session.
--   
--   <a>$sel:gameSessionId:PlayerSession'</a>,
--   <a>playerSession_gameSessionId</a> - A unique identifier for the game
--   session that the player session is connected to.
--   
--   <a>$sel:ipAddress:PlayerSession'</a>, <a>playerSession_ipAddress</a> -
--   The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
--   
--   <a>$sel:terminationTime:PlayerSession'</a>,
--   <a>playerSession_terminationTime</a> - A time stamp indicating when
--   this data object was terminated. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:port:PlayerSession'</a>, <a>playerSession_port</a> - Port
--   number for the game session. To connect to a Amazon GameLift server
--   process, an app needs both the IP address and port number.
--   
--   <a>$sel:dnsName:PlayerSession'</a>, <a>playerSession_dnsName</a> - The
--   DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
--   
--   <a>$sel:playerData:PlayerSession'</a>, <a>playerSession_playerData</a>
--   - Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
newPlayerSession :: PlayerSession

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
playerSession_creationTime :: Lens' PlayerSession (Maybe UTCTime)

-- | Current status of the player session.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
playerSession_status :: Lens' PlayerSession (Maybe PlayerSessionStatus)

-- | A unique identifier for a player that is associated with this player
--   session.
playerSession_playerId :: Lens' PlayerSession (Maybe Text)

-- | A unique identifier for the fleet that the player's game session is
--   running on.
playerSession_fleetId :: Lens' PlayerSession (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that the player's game session is running on.
playerSession_fleetArn :: Lens' PlayerSession (Maybe Text)

-- | A unique identifier for a player session.
playerSession_playerSessionId :: Lens' PlayerSession (Maybe Text)

-- | A unique identifier for the game session that the player session is
--   connected to.
playerSession_gameSessionId :: Lens' PlayerSession (Maybe Text)

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
playerSession_ipAddress :: Lens' PlayerSession (Maybe Text)

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
playerSession_terminationTime :: Lens' PlayerSession (Maybe UTCTime)

-- | Port number for the game session. To connect to a Amazon GameLift
--   server process, an app needs both the IP address and port number.
playerSession_port :: Lens' PlayerSession (Maybe Natural)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
playerSession_dnsName :: Lens' PlayerSession (Maybe Text)

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
playerSession_playerData :: Lens' PlayerSession (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.PlayerSession.PlayerSession
instance GHC.Show.Show Network.AWS.GameLift.Types.PlayerSession.PlayerSession
instance GHC.Read.Read Network.AWS.GameLift.Types.PlayerSession.PlayerSession
instance GHC.Classes.Eq Network.AWS.GameLift.Types.PlayerSession.PlayerSession
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.PlayerSession.PlayerSession
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.PlayerSession.PlayerSession
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.PlayerSession.PlayerSession


module Network.AWS.GameLift.Types.PolicyType
newtype PolicyType
PolicyType' :: Text -> PolicyType
[fromPolicyType] :: PolicyType -> Text
pattern PolicyType_RuleBased :: PolicyType
pattern PolicyType_TargetBased :: PolicyType
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.PolicyType.PolicyType
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.PolicyType.PolicyType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.PolicyType.PolicyType
instance GHC.Classes.Ord Network.AWS.GameLift.Types.PolicyType.PolicyType
instance GHC.Classes.Eq Network.AWS.GameLift.Types.PolicyType.PolicyType
instance GHC.Read.Read Network.AWS.GameLift.Types.PolicyType.PolicyType
instance GHC.Show.Show Network.AWS.GameLift.Types.PolicyType.PolicyType


module Network.AWS.GameLift.Types.PriorityType
newtype PriorityType
PriorityType' :: Text -> PriorityType
[fromPriorityType] :: PriorityType -> Text
pattern PriorityType_COST :: PriorityType
pattern PriorityType_DESTINATION :: PriorityType
pattern PriorityType_LATENCY :: PriorityType
pattern PriorityType_LOCATION :: PriorityType
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.PriorityType.PriorityType
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.PriorityType.PriorityType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.PriorityType.PriorityType
instance GHC.Classes.Ord Network.AWS.GameLift.Types.PriorityType.PriorityType
instance GHC.Classes.Eq Network.AWS.GameLift.Types.PriorityType.PriorityType
instance GHC.Read.Read Network.AWS.GameLift.Types.PriorityType.PriorityType
instance GHC.Show.Show Network.AWS.GameLift.Types.PriorityType.PriorityType


module Network.AWS.GameLift.Types.PriorityConfiguration

-- | Custom prioritization settings for use by a game session queue when
--   placing new game sessions with available game servers. When defined,
--   this configuration replaces the default FleetIQ prioritization
--   process, which is as follows:
--   
--   <ul>
--   <li>If player latency data is included in a game session request,
--   destinations and locations are prioritized first based on lowest
--   average latency (1), then on lowest hosting cost (2), then on
--   destination list order (3), and finally on location (alphabetical)
--   (4). This approach ensures that the queue's top priority is to place
--   game sessions where average player latency is lowest, and--if latency
--   is the same--where the hosting cost is less, etc.</li>
--   <li>If player latency data is not included, destinations and locations
--   are prioritized first on destination list order (1), and then on
--   location (alphabetical) (2). This approach ensures that the queue's
--   top priority is to place game sessions on the first destination fleet
--   listed. If that fleet has multiple locations, the game session is
--   placed on the first location (when listed alphabetically).</li>
--   </ul>
--   
--   Changing the priority order will affect how game sessions are placed.
--   
--   Priority configurations are part of a GameSessionQueue.
--   
--   <i>See:</i> <a>newPriorityConfiguration</a> smart constructor.
data PriorityConfiguration
PriorityConfiguration' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty PriorityType) -> PriorityConfiguration

-- | The prioritization order to use for fleet locations, when the
--   <tt>PriorityOrder</tt> property includes <tt>LOCATION</tt>. Locations
--   are identified by AWS Region codes such as <tt>us-west-2</tt>. Each
--   location can only be listed once.
[$sel:locationOrder:PriorityConfiguration'] :: PriorityConfiguration -> Maybe (NonEmpty Text)

-- | The recommended sequence to use when prioritizing where to place new
--   game sessions. Each type can only be listed once.
--   
--   <ul>
--   <li><tt>LATENCY</tt> -- FleetIQ prioritizes locations where the
--   average player latency (provided in each game session request) is
--   lowest.</li>
--   <li><tt>COST</tt> -- FleetIQ prioritizes destinations with the lowest
--   current hosting costs. Cost is evaluated based on the location,
--   instance type, and fleet type (Spot or On-Demand) for each destination
--   in the queue.</li>
--   <li><tt>DESTINATION</tt> -- FleetIQ prioritizes based on the order
--   that destinations are listed in the queue configuration.</li>
--   <li><tt>LOCATION</tt> -- FleetIQ prioritizes based on the provided
--   order of locations, as defined in <tt>LocationOrder</tt>.</li>
--   </ul>
[$sel:priorityOrder:PriorityConfiguration'] :: PriorityConfiguration -> Maybe (NonEmpty PriorityType)

-- | Create a value of <a>PriorityConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationOrder:PriorityConfiguration'</a>,
--   <a>priorityConfiguration_locationOrder</a> - The prioritization order
--   to use for fleet locations, when the <tt>PriorityOrder</tt> property
--   includes <tt>LOCATION</tt>. Locations are identified by AWS Region
--   codes such as <tt>us-west-2</tt>. Each location can only be listed
--   once.
--   
--   <a>$sel:priorityOrder:PriorityConfiguration'</a>,
--   <a>priorityConfiguration_priorityOrder</a> - The recommended sequence
--   to use when prioritizing where to place new game sessions. Each type
--   can only be listed once.
--   
--   <ul>
--   <li><tt>LATENCY</tt> -- FleetIQ prioritizes locations where the
--   average player latency (provided in each game session request) is
--   lowest.</li>
--   <li><tt>COST</tt> -- FleetIQ prioritizes destinations with the lowest
--   current hosting costs. Cost is evaluated based on the location,
--   instance type, and fleet type (Spot or On-Demand) for each destination
--   in the queue.</li>
--   <li><tt>DESTINATION</tt> -- FleetIQ prioritizes based on the order
--   that destinations are listed in the queue configuration.</li>
--   <li><tt>LOCATION</tt> -- FleetIQ prioritizes based on the provided
--   order of locations, as defined in <tt>LocationOrder</tt>.</li>
--   </ul>
newPriorityConfiguration :: PriorityConfiguration

-- | The prioritization order to use for fleet locations, when the
--   <tt>PriorityOrder</tt> property includes <tt>LOCATION</tt>. Locations
--   are identified by AWS Region codes such as <tt>us-west-2</tt>. Each
--   location can only be listed once.
priorityConfiguration_locationOrder :: Lens' PriorityConfiguration (Maybe (NonEmpty Text))

-- | The recommended sequence to use when prioritizing where to place new
--   game sessions. Each type can only be listed once.
--   
--   <ul>
--   <li><tt>LATENCY</tt> -- FleetIQ prioritizes locations where the
--   average player latency (provided in each game session request) is
--   lowest.</li>
--   <li><tt>COST</tt> -- FleetIQ prioritizes destinations with the lowest
--   current hosting costs. Cost is evaluated based on the location,
--   instance type, and fleet type (Spot or On-Demand) for each destination
--   in the queue.</li>
--   <li><tt>DESTINATION</tt> -- FleetIQ prioritizes based on the order
--   that destinations are listed in the queue configuration.</li>
--   <li><tt>LOCATION</tt> -- FleetIQ prioritizes based on the provided
--   order of locations, as defined in <tt>LocationOrder</tt>.</li>
--   </ul>
priorityConfiguration_priorityOrder :: Lens' PriorityConfiguration (Maybe (NonEmpty PriorityType))
instance GHC.Generics.Generic Network.AWS.GameLift.Types.PriorityConfiguration.PriorityConfiguration
instance GHC.Show.Show Network.AWS.GameLift.Types.PriorityConfiguration.PriorityConfiguration
instance GHC.Read.Read Network.AWS.GameLift.Types.PriorityConfiguration.PriorityConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.Types.PriorityConfiguration.PriorityConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.PriorityConfiguration.PriorityConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.PriorityConfiguration.PriorityConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.PriorityConfiguration.PriorityConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.PriorityConfiguration.PriorityConfiguration


module Network.AWS.GameLift.Types.GameSessionQueue

-- | Configuration for a game session placement mechanism that processes
--   requests for new game sessions. A queue can be used on its own or as
--   part of a matchmaking solution.
--   
--   <b>Related actions</b>
--   
--   CreateGameSessionQueue | DescribeGameSessionQueues |
--   UpdateGameSessionQueue
--   
--   <i>See:</i> <a>newGameSessionQueue</a> smart constructor.
data GameSessionQueue
GameSessionQueue' :: Maybe Text -> Maybe [PlayerLatencyPolicy] -> Maybe PriorityConfiguration -> Maybe Text -> Maybe [GameSessionQueueDestination] -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe FilterConfiguration -> GameSessionQueue

-- | Information that is added to all events that are related to this game
--   session queue.
[$sel:customEventData:GameSessionQueue'] :: GameSessionQueue -> Maybe Text

-- | A set of policies that act as a sliding cap on player latency. FleetIQ
--   works to deliver low latency for most players in a game session. These
--   policies ensure that no individual player can be placed into a game
--   with unreasonably high latency. Use multiple policies to gradually
--   relax latency requirements a step at a time. Multiple policies are
--   applied based on their maximum allowed latency, starting with the
--   lowest value.
[$sel:playerLatencyPolicies:GameSessionQueue'] :: GameSessionQueue -> Maybe [PlayerLatencyPolicy]

-- | Custom settings to use when prioritizing destinations and locations
--   for game session placements. This configuration replaces the FleetIQ
--   default prioritization process. Priority types that are not explicitly
--   named will be automatically applied at the end of the prioritization
--   process.
[$sel:priorityConfiguration:GameSessionQueue'] :: GameSessionQueue -> Maybe PriorityConfiguration

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
[$sel:name:GameSessionQueue'] :: GameSessionQueue -> Maybe Text

-- | A list of fleets and/or fleet aliases that can be used to fulfill game
--   session placement requests in the queue. Destinations are identified
--   by either a fleet ARN or a fleet alias ARN, and are listed in order of
--   placement preference.
[$sel:destinations:GameSessionQueue'] :: GameSessionQueue -> Maybe [GameSessionQueueDestination]

-- | The maximum time, in seconds, that a new game session placement
--   request remains in the queue. When a request exceeds this time, the
--   game session placement changes to a <tt>TIMED_OUT</tt> status.
[$sel:timeoutInSeconds:GameSessionQueue'] :: GameSessionQueue -> Maybe Natural

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. In a GameLift game session queue ARN, the resource ID
--   matches the <i>Name</i> value.
[$sel:gameSessionQueueArn:GameSessionQueue'] :: GameSessionQueue -> Maybe Text

-- | An SNS topic ARN that is set up to receive game session placement
--   notifications. See <a>Setting up notifications for game session
--   placement</a>.
[$sel:notificationTarget:GameSessionQueue'] :: GameSessionQueue -> Maybe Text

-- | A list of locations where a queue is allowed to place new game
--   sessions. Locations are specified in the form of AWS Region codes,
--   such as <tt>us-west-2</tt>. If this parameter is not set, game
--   sessions can be placed in any queue location.
[$sel:filterConfiguration:GameSessionQueue'] :: GameSessionQueue -> Maybe FilterConfiguration

-- | Create a value of <a>GameSessionQueue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customEventData:GameSessionQueue'</a>,
--   <a>gameSessionQueue_customEventData</a> - Information that is added to
--   all events that are related to this game session queue.
--   
--   <a>$sel:playerLatencyPolicies:GameSessionQueue'</a>,
--   <a>gameSessionQueue_playerLatencyPolicies</a> - A set of policies that
--   act as a sliding cap on player latency. FleetIQ works to deliver low
--   latency for most players in a game session. These policies ensure that
--   no individual player can be placed into a game with unreasonably high
--   latency. Use multiple policies to gradually relax latency requirements
--   a step at a time. Multiple policies are applied based on their maximum
--   allowed latency, starting with the lowest value.
--   
--   <a>$sel:priorityConfiguration:GameSessionQueue'</a>,
--   <a>gameSessionQueue_priorityConfiguration</a> - Custom settings to use
--   when prioritizing destinations and locations for game session
--   placements. This configuration replaces the FleetIQ default
--   prioritization process. Priority types that are not explicitly named
--   will be automatically applied at the end of the prioritization
--   process.
--   
--   <a>$sel:name:GameSessionQueue'</a>, <a>gameSessionQueue_name</a> - A
--   descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
--   
--   <a>$sel:destinations:GameSessionQueue'</a>,
--   <a>gameSessionQueue_destinations</a> - A list of fleets and/or fleet
--   aliases that can be used to fulfill game session placement requests in
--   the queue. Destinations are identified by either a fleet ARN or a
--   fleet alias ARN, and are listed in order of placement preference.
--   
--   <a>$sel:timeoutInSeconds:GameSessionQueue'</a>,
--   <a>gameSessionQueue_timeoutInSeconds</a> - The maximum time, in
--   seconds, that a new game session placement request remains in the
--   queue. When a request exceeds this time, the game session placement
--   changes to a <tt>TIMED_OUT</tt> status.
--   
--   <a>$sel:gameSessionQueueArn:GameSessionQueue'</a>,
--   <a>gameSessionQueue_gameSessionQueueArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift game session queue
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. In a GameLift game session queue ARN, the resource ID
--   matches the <i>Name</i> value.
--   
--   <a>$sel:notificationTarget:GameSessionQueue'</a>,
--   <a>gameSessionQueue_notificationTarget</a> - An SNS topic ARN that is
--   set up to receive game session placement notifications. See <a>Setting
--   up notifications for game session placement</a>.
--   
--   <a>$sel:filterConfiguration:GameSessionQueue'</a>,
--   <a>gameSessionQueue_filterConfiguration</a> - A list of locations
--   where a queue is allowed to place new game sessions. Locations are
--   specified in the form of AWS Region codes, such as <tt>us-west-2</tt>.
--   If this parameter is not set, game sessions can be placed in any queue
--   location.
newGameSessionQueue :: GameSessionQueue

-- | Information that is added to all events that are related to this game
--   session queue.
gameSessionQueue_customEventData :: Lens' GameSessionQueue (Maybe Text)

-- | A set of policies that act as a sliding cap on player latency. FleetIQ
--   works to deliver low latency for most players in a game session. These
--   policies ensure that no individual player can be placed into a game
--   with unreasonably high latency. Use multiple policies to gradually
--   relax latency requirements a step at a time. Multiple policies are
--   applied based on their maximum allowed latency, starting with the
--   lowest value.
gameSessionQueue_playerLatencyPolicies :: Lens' GameSessionQueue (Maybe [PlayerLatencyPolicy])

-- | Custom settings to use when prioritizing destinations and locations
--   for game session placements. This configuration replaces the FleetIQ
--   default prioritization process. Priority types that are not explicitly
--   named will be automatically applied at the end of the prioritization
--   process.
gameSessionQueue_priorityConfiguration :: Lens' GameSessionQueue (Maybe PriorityConfiguration)

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
gameSessionQueue_name :: Lens' GameSessionQueue (Maybe Text)

-- | A list of fleets and/or fleet aliases that can be used to fulfill game
--   session placement requests in the queue. Destinations are identified
--   by either a fleet ARN or a fleet alias ARN, and are listed in order of
--   placement preference.
gameSessionQueue_destinations :: Lens' GameSessionQueue (Maybe [GameSessionQueueDestination])

-- | The maximum time, in seconds, that a new game session placement
--   request remains in the queue. When a request exceeds this time, the
--   game session placement changes to a <tt>TIMED_OUT</tt> status.
gameSessionQueue_timeoutInSeconds :: Lens' GameSessionQueue (Maybe Natural)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. In a GameLift game session queue ARN, the resource ID
--   matches the <i>Name</i> value.
gameSessionQueue_gameSessionQueueArn :: Lens' GameSessionQueue (Maybe Text)

-- | An SNS topic ARN that is set up to receive game session placement
--   notifications. See <a>Setting up notifications for game session
--   placement</a>.
gameSessionQueue_notificationTarget :: Lens' GameSessionQueue (Maybe Text)

-- | A list of locations where a queue is allowed to place new game
--   sessions. Locations are specified in the form of AWS Region codes,
--   such as <tt>us-west-2</tt>. If this parameter is not set, game
--   sessions can be placed in any queue location.
gameSessionQueue_filterConfiguration :: Lens' GameSessionQueue (Maybe FilterConfiguration)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameSessionQueue.GameSessionQueue
instance GHC.Show.Show Network.AWS.GameLift.Types.GameSessionQueue.GameSessionQueue
instance GHC.Read.Read Network.AWS.GameLift.Types.GameSessionQueue.GameSessionQueue
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameSessionQueue.GameSessionQueue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameSessionQueue.GameSessionQueue
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameSessionQueue.GameSessionQueue
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameSessionQueue.GameSessionQueue


module Network.AWS.GameLift.Types.ProtectionPolicy
newtype ProtectionPolicy
ProtectionPolicy' :: Text -> ProtectionPolicy
[fromProtectionPolicy] :: ProtectionPolicy -> Text
pattern ProtectionPolicy_FullProtection :: ProtectionPolicy
pattern ProtectionPolicy_NoProtection :: ProtectionPolicy
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance GHC.Generics.Generic Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance GHC.Classes.Ord Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance GHC.Classes.Eq Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance GHC.Read.Read Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy
instance GHC.Show.Show Network.AWS.GameLift.Types.ProtectionPolicy.ProtectionPolicy


module Network.AWS.GameLift.Types.GameSessionDetail

-- | A game session's properties plus the protection policy currently in
--   force.
--   
--   <i>See:</i> <a>newGameSessionDetail</a> smart constructor.
data GameSessionDetail
GameSessionDetail' :: Maybe GameSession -> Maybe ProtectionPolicy -> GameSessionDetail

-- | Object that describes a game session.
[$sel:gameSession:GameSessionDetail'] :: GameSessionDetail -> Maybe GameSession

-- | Current status of protection for the game session.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
[$sel:protectionPolicy:GameSessionDetail'] :: GameSessionDetail -> Maybe ProtectionPolicy

-- | Create a value of <a>GameSessionDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSession:GameSessionDetail'</a>,
--   <a>gameSessionDetail_gameSession</a> - Object that describes a game
--   session.
--   
--   <a>$sel:protectionPolicy:GameSessionDetail'</a>,
--   <a>gameSessionDetail_protectionPolicy</a> - Current status of
--   protection for the game session.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
newGameSessionDetail :: GameSessionDetail

-- | Object that describes a game session.
gameSessionDetail_gameSession :: Lens' GameSessionDetail (Maybe GameSession)

-- | Current status of protection for the game session.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
gameSessionDetail_protectionPolicy :: Lens' GameSessionDetail (Maybe ProtectionPolicy)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameSessionDetail.GameSessionDetail
instance GHC.Show.Show Network.AWS.GameLift.Types.GameSessionDetail.GameSessionDetail
instance GHC.Read.Read Network.AWS.GameLift.Types.GameSessionDetail.GameSessionDetail
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameSessionDetail.GameSessionDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.GameSessionDetail.GameSessionDetail
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameSessionDetail.GameSessionDetail
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameSessionDetail.GameSessionDetail


module Network.AWS.GameLift.Types.ResourceCreationLimitPolicy

-- | A policy that puts limits on the number of game sessions that a player
--   can create within a specified span of time. With this policy, you can
--   control players' ability to consume available resources.
--   
--   The policy is evaluated when a player tries to create a new game
--   session. On receiving a <tt>CreateGameSession</tt> request, GameLift
--   checks that the player (identified by <tt>CreatorId</tt>) has created
--   fewer than game session limit in the specified time period.
--   
--   The resource creation limit policy is included in FleetAttributes.
--   
--   <i>See:</i> <a>newResourceCreationLimitPolicy</a> smart constructor.
data ResourceCreationLimitPolicy
ResourceCreationLimitPolicy' :: Maybe Natural -> Maybe Natural -> ResourceCreationLimitPolicy

-- | The time span used in evaluating the resource creation limit policy.
[$sel:policyPeriodInMinutes:ResourceCreationLimitPolicy'] :: ResourceCreationLimitPolicy -> Maybe Natural

-- | The maximum number of game sessions that an individual can create
--   during the policy period.
[$sel:newGameSessionsPerCreator':ResourceCreationLimitPolicy'] :: ResourceCreationLimitPolicy -> Maybe Natural

-- | Create a value of <a>ResourceCreationLimitPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyPeriodInMinutes:ResourceCreationLimitPolicy'</a>,
--   <a>resourceCreationLimitPolicy_policyPeriodInMinutes</a> - The time
--   span used in evaluating the resource creation limit policy.
--   
--   <a>$sel:newGameSessionsPerCreator':ResourceCreationLimitPolicy'</a>,
--   <a>resourceCreationLimitPolicy_newGameSessionsPerCreator</a> - The
--   maximum number of game sessions that an individual can create during
--   the policy period.
newResourceCreationLimitPolicy :: ResourceCreationLimitPolicy

-- | The time span used in evaluating the resource creation limit policy.
resourceCreationLimitPolicy_policyPeriodInMinutes :: Lens' ResourceCreationLimitPolicy (Maybe Natural)

-- | The maximum number of game sessions that an individual can create
--   during the policy period.
resourceCreationLimitPolicy_newGameSessionsPerCreator :: Lens' ResourceCreationLimitPolicy (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.ResourceCreationLimitPolicy.ResourceCreationLimitPolicy
instance GHC.Show.Show Network.AWS.GameLift.Types.ResourceCreationLimitPolicy.ResourceCreationLimitPolicy
instance GHC.Read.Read Network.AWS.GameLift.Types.ResourceCreationLimitPolicy.ResourceCreationLimitPolicy
instance GHC.Classes.Eq Network.AWS.GameLift.Types.ResourceCreationLimitPolicy.ResourceCreationLimitPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.ResourceCreationLimitPolicy.ResourceCreationLimitPolicy
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.ResourceCreationLimitPolicy.ResourceCreationLimitPolicy
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.ResourceCreationLimitPolicy.ResourceCreationLimitPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.ResourceCreationLimitPolicy.ResourceCreationLimitPolicy


module Network.AWS.GameLift.Types.FleetAttributes

-- | Describes a GameLift fleet of game hosting resources.
--   
--   <b>Related actions</b>
--   
--   CreateFleet | DescribeFleetAttributes
--   
--   <i>See:</i> <a>newFleetAttributes</a> smart constructor.
data FleetAttributes
FleetAttributes' :: Maybe POSIX -> Maybe FleetStatus -> Maybe EC2InstanceType -> Maybe FleetType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CertificateConfiguration -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ProtectionPolicy -> Maybe (NonEmpty FleetAction) -> Maybe POSIX -> Maybe ResourceCreationLimitPolicy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe OperatingSystem -> Maybe Text -> FleetAttributes

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:FleetAttributes'] :: FleetAttributes -> Maybe POSIX

-- | Current status of the fleet. Possible fleet statuses include the
--   following:
--   
--   <ul>
--   <li><b>NEW</b> -- A new fleet has been defined and desired instances
--   is set to 1.</li>
--   <li><b>DOWNLOADING/VALIDATING/BUILDING/ACTIVATING</b> -- GameLift is
--   setting up the new fleet, creating new instances with the game build
--   or Realtime script and starting server processes.</li>
--   <li><b>ACTIVE</b> -- Hosts can now accept game sessions.</li>
--   <li><b>ERROR</b> -- An error occurred when downloading, validating,
--   building, or activating the fleet.</li>
--   <li><b>DELETING</b> -- Hosts are responding to a delete fleet
--   request.</li>
--   <li><b>TERMINATED</b> -- The fleet no longer exists.</li>
--   </ul>
[$sel:status:FleetAttributes'] :: FleetAttributes -> Maybe FleetStatus

-- | The EC2 instance type that determines the computing resources of each
--   instance in the fleet. Instance type defines the CPU, memory, storage,
--   and networking capacity. See <a>Amazon EC2 Instance Types</a> for
--   detailed descriptions.
[$sel:instanceType:FleetAttributes'] :: FleetAttributes -> Maybe EC2InstanceType

-- | The kind of instances, On-Demand or Spot, that this fleet uses.
[$sel:fleetType:FleetAttributes'] :: FleetAttributes -> Maybe FleetType

-- | A unique identifier for the fleet.
[$sel:fleetId:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift fleet ARN, the resource ID matches the <tt>FleetId</tt>
--   value.
[$sel:fleetArn:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | A unique identifier for an AWS IAM role that manages access to your
--   AWS services. With an instance role ARN set, any application that runs
--   on an instance in this fleet can assume the role, including install
--   scripts, server processes, and daemons (background processes). Create
--   a role or look up a role's ARN by using the <a>IAM dashboard</a> in
--   the AWS Management Console. Learn more about using on-box credentials
--   for your game servers at <a>Access external resources from a game
--   server</a>.
[$sel:instanceRoleArn:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | Indicates whether a TLS/SSL certificate was generated for the fleet.
[$sel:certificateConfiguration:FleetAttributes'] :: FleetAttributes -> Maybe CertificateConfiguration

-- | <b>This parameter is no longer used.</b> Server launch paths are now
--   defined using the fleet's RuntimeConfiguration parameter. Requests
--   that use this parameter instead continue to be valid.
[$sel:serverLaunchPath:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | <b>This parameter is no longer used.</b> Game session log paths are
--   now defined using the GameLift server API <tt>ProcessReady()</tt>
--   <tt>logParameters</tt>. See more information in the <a>Server API
--   Reference</a>.
[$sel:logPaths:FleetAttributes'] :: FleetAttributes -> Maybe [Text]

-- | <b>This parameter is no longer used.</b> Server launch parameters are
--   now defined using the fleet's RuntimeConfiguration parameter. Requests
--   that use this parameter instead continue to be valid.
[$sel:serverLaunchParameters:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   script resource that is deployed on instances in this fleet. In a
--   GameLift script ARN, the resource ID matches the <tt>ScriptId</tt>
--   value.
[$sel:scriptArn:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | A descriptive label that is associated with a fleet. Fleet names do
--   not need to be unique.
[$sel:name:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | The type of game session protection to set on all new instances that
--   are started in the fleet.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
[$sel:newGameSessionProtectionPolicy':FleetAttributes'] :: FleetAttributes -> Maybe ProtectionPolicy

-- | A list of fleet activity that has been suspended using
--   StopFleetActions. This includes fleet auto-scaling.
[$sel:stoppedActions:FleetAttributes'] :: FleetAttributes -> Maybe (NonEmpty FleetAction)

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:terminationTime:FleetAttributes'] :: FleetAttributes -> Maybe POSIX

-- | The fleet policy that limits the number of game sessions an individual
--   player can create over a span of time.
[$sel:resourceCreationLimitPolicy:FleetAttributes'] :: FleetAttributes -> Maybe ResourceCreationLimitPolicy

-- | A human-readable description of the fleet.
[$sel:description:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | A unique identifier for the build resource that is deployed on
--   instances in this fleet.
[$sel:buildId:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   build resource that is deployed on instances in this fleet. In a
--   GameLift build ARN, the resource ID matches the <tt>BuildId</tt>
--   value.
[$sel:buildArn:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | Name of a metric group that metrics for this fleet are added to. In
--   Amazon CloudWatch, you can view aggregated metrics for fleets that are
--   in a metric group. A fleet can be included in only one metric group at
--   a time.
[$sel:metricGroups:FleetAttributes'] :: FleetAttributes -> Maybe [Text]

-- | The operating system of the fleet's computing resources. A fleet's
--   operating system is determined by the OS of the build or script that
--   is deployed on this fleet.
[$sel:operatingSystem:FleetAttributes'] :: FleetAttributes -> Maybe OperatingSystem

-- | A unique identifier for the Realtime script resource that is deployed
--   on instances in this fleet.
[$sel:scriptId:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | Create a value of <a>FleetAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FleetAttributes'</a>,
--   <a>fleetAttributes_creationTime</a> - A time stamp indicating when
--   this data object was created. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:FleetAttributes'</a>, <a>fleetAttributes_status</a> -
--   Current status of the fleet. Possible fleet statuses include the
--   following:
--   
--   <ul>
--   <li><b>NEW</b> -- A new fleet has been defined and desired instances
--   is set to 1.</li>
--   <li><b>DOWNLOADING/VALIDATING/BUILDING/ACTIVATING</b> -- GameLift is
--   setting up the new fleet, creating new instances with the game build
--   or Realtime script and starting server processes.</li>
--   <li><b>ACTIVE</b> -- Hosts can now accept game sessions.</li>
--   <li><b>ERROR</b> -- An error occurred when downloading, validating,
--   building, or activating the fleet.</li>
--   <li><b>DELETING</b> -- Hosts are responding to a delete fleet
--   request.</li>
--   <li><b>TERMINATED</b> -- The fleet no longer exists.</li>
--   </ul>
--   
--   <a>$sel:instanceType:FleetAttributes'</a>,
--   <a>fleetAttributes_instanceType</a> - The EC2 instance type that
--   determines the computing resources of each instance in the fleet.
--   Instance type defines the CPU, memory, storage, and networking
--   capacity. See <a>Amazon EC2 Instance Types</a> for detailed
--   descriptions.
--   
--   <a>$sel:fleetType:FleetAttributes'</a>,
--   <a>fleetAttributes_fleetType</a> - The kind of instances, On-Demand or
--   Spot, that this fleet uses.
--   
--   <a>$sel:fleetId:FleetAttributes'</a>, <a>fleetAttributes_fleetId</a> -
--   A unique identifier for the fleet.
--   
--   <a>$sel:fleetArn:FleetAttributes'</a>, <a>fleetAttributes_fleetArn</a>
--   - The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift fleet ARN, the resource ID matches the <tt>FleetId</tt>
--   value.
--   
--   <a>$sel:instanceRoleArn:FleetAttributes'</a>,
--   <a>fleetAttributes_instanceRoleArn</a> - A unique identifier for an
--   AWS IAM role that manages access to your AWS services. With an
--   instance role ARN set, any application that runs on an instance in
--   this fleet can assume the role, including install scripts, server
--   processes, and daemons (background processes). Create a role or look
--   up a role's ARN by using the <a>IAM dashboard</a> in the AWS
--   Management Console. Learn more about using on-box credentials for your
--   game servers at <a>Access external resources from a game server</a>.
--   
--   <a>$sel:certificateConfiguration:FleetAttributes'</a>,
--   <a>fleetAttributes_certificateConfiguration</a> - Indicates whether a
--   TLS/SSL certificate was generated for the fleet.
--   
--   <a>$sel:serverLaunchPath:FleetAttributes'</a>,
--   <a>fleetAttributes_serverLaunchPath</a> - <b>This parameter is no
--   longer used.</b> Server launch paths are now defined using the fleet's
--   RuntimeConfiguration parameter. Requests that use this parameter
--   instead continue to be valid.
--   
--   <a>$sel:logPaths:FleetAttributes'</a>, <a>fleetAttributes_logPaths</a>
--   - <b>This parameter is no longer used.</b> Game session log paths are
--   now defined using the GameLift server API <tt>ProcessReady()</tt>
--   <tt>logParameters</tt>. See more information in the <a>Server API
--   Reference</a>.
--   
--   <a>$sel:serverLaunchParameters:FleetAttributes'</a>,
--   <a>fleetAttributes_serverLaunchParameters</a> - <b>This parameter is
--   no longer used.</b> Server launch parameters are now defined using the
--   fleet's RuntimeConfiguration parameter. Requests that use this
--   parameter instead continue to be valid.
--   
--   <a>$sel:scriptArn:FleetAttributes'</a>,
--   <a>fleetAttributes_scriptArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift script resource that is
--   deployed on instances in this fleet. In a GameLift script ARN, the
--   resource ID matches the <tt>ScriptId</tt> value.
--   
--   <a>$sel:name:FleetAttributes'</a>, <a>fleetAttributes_name</a> - A
--   descriptive label that is associated with a fleet. Fleet names do not
--   need to be unique.
--   
--   <a>$sel:newGameSessionProtectionPolicy':FleetAttributes'</a>,
--   <a>fleetAttributes_newGameSessionProtectionPolicy</a> - The type of
--   game session protection to set on all new instances that are started
--   in the fleet.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
--   
--   <a>$sel:stoppedActions:FleetAttributes'</a>,
--   <a>fleetAttributes_stoppedActions</a> - A list of fleet activity that
--   has been suspended using StopFleetActions. This includes fleet
--   auto-scaling.
--   
--   <a>$sel:terminationTime:FleetAttributes'</a>,
--   <a>fleetAttributes_terminationTime</a> - A time stamp indicating when
--   this data object was terminated. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:resourceCreationLimitPolicy:FleetAttributes'</a>,
--   <a>fleetAttributes_resourceCreationLimitPolicy</a> - The fleet policy
--   that limits the number of game sessions an individual player can
--   create over a span of time.
--   
--   <a>$sel:description:FleetAttributes'</a>,
--   <a>fleetAttributes_description</a> - A human-readable description of
--   the fleet.
--   
--   <a>$sel:buildId:FleetAttributes'</a>, <a>fleetAttributes_buildId</a> -
--   A unique identifier for the build resource that is deployed on
--   instances in this fleet.
--   
--   <a>$sel:buildArn:FleetAttributes'</a>, <a>fleetAttributes_buildArn</a>
--   - The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   build resource that is deployed on instances in this fleet. In a
--   GameLift build ARN, the resource ID matches the <tt>BuildId</tt>
--   value.
--   
--   <a>$sel:metricGroups:FleetAttributes'</a>,
--   <a>fleetAttributes_metricGroups</a> - Name of a metric group that
--   metrics for this fleet are added to. In Amazon CloudWatch, you can
--   view aggregated metrics for fleets that are in a metric group. A fleet
--   can be included in only one metric group at a time.
--   
--   <a>$sel:operatingSystem:FleetAttributes'</a>,
--   <a>fleetAttributes_operatingSystem</a> - The operating system of the
--   fleet's computing resources. A fleet's operating system is determined
--   by the OS of the build or script that is deployed on this fleet.
--   
--   <a>$sel:scriptId:FleetAttributes'</a>, <a>fleetAttributes_scriptId</a>
--   - A unique identifier for the Realtime script resource that is
--   deployed on instances in this fleet.
newFleetAttributes :: FleetAttributes

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
fleetAttributes_creationTime :: Lens' FleetAttributes (Maybe UTCTime)

-- | Current status of the fleet. Possible fleet statuses include the
--   following:
--   
--   <ul>
--   <li><b>NEW</b> -- A new fleet has been defined and desired instances
--   is set to 1.</li>
--   <li><b>DOWNLOADING/VALIDATING/BUILDING/ACTIVATING</b> -- GameLift is
--   setting up the new fleet, creating new instances with the game build
--   or Realtime script and starting server processes.</li>
--   <li><b>ACTIVE</b> -- Hosts can now accept game sessions.</li>
--   <li><b>ERROR</b> -- An error occurred when downloading, validating,
--   building, or activating the fleet.</li>
--   <li><b>DELETING</b> -- Hosts are responding to a delete fleet
--   request.</li>
--   <li><b>TERMINATED</b> -- The fleet no longer exists.</li>
--   </ul>
fleetAttributes_status :: Lens' FleetAttributes (Maybe FleetStatus)

-- | The EC2 instance type that determines the computing resources of each
--   instance in the fleet. Instance type defines the CPU, memory, storage,
--   and networking capacity. See <a>Amazon EC2 Instance Types</a> for
--   detailed descriptions.
fleetAttributes_instanceType :: Lens' FleetAttributes (Maybe EC2InstanceType)

-- | The kind of instances, On-Demand or Spot, that this fleet uses.
fleetAttributes_fleetType :: Lens' FleetAttributes (Maybe FleetType)

-- | A unique identifier for the fleet.
fleetAttributes_fleetId :: Lens' FleetAttributes (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift fleet ARN, the resource ID matches the <tt>FleetId</tt>
--   value.
fleetAttributes_fleetArn :: Lens' FleetAttributes (Maybe Text)

-- | A unique identifier for an AWS IAM role that manages access to your
--   AWS services. With an instance role ARN set, any application that runs
--   on an instance in this fleet can assume the role, including install
--   scripts, server processes, and daemons (background processes). Create
--   a role or look up a role's ARN by using the <a>IAM dashboard</a> in
--   the AWS Management Console. Learn more about using on-box credentials
--   for your game servers at <a>Access external resources from a game
--   server</a>.
fleetAttributes_instanceRoleArn :: Lens' FleetAttributes (Maybe Text)

-- | Indicates whether a TLS/SSL certificate was generated for the fleet.
fleetAttributes_certificateConfiguration :: Lens' FleetAttributes (Maybe CertificateConfiguration)

-- | <b>This parameter is no longer used.</b> Server launch paths are now
--   defined using the fleet's RuntimeConfiguration parameter. Requests
--   that use this parameter instead continue to be valid.
fleetAttributes_serverLaunchPath :: Lens' FleetAttributes (Maybe Text)

-- | <b>This parameter is no longer used.</b> Game session log paths are
--   now defined using the GameLift server API <tt>ProcessReady()</tt>
--   <tt>logParameters</tt>. See more information in the <a>Server API
--   Reference</a>.
fleetAttributes_logPaths :: Lens' FleetAttributes (Maybe [Text])

-- | <b>This parameter is no longer used.</b> Server launch parameters are
--   now defined using the fleet's RuntimeConfiguration parameter. Requests
--   that use this parameter instead continue to be valid.
fleetAttributes_serverLaunchParameters :: Lens' FleetAttributes (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   script resource that is deployed on instances in this fleet. In a
--   GameLift script ARN, the resource ID matches the <tt>ScriptId</tt>
--   value.
fleetAttributes_scriptArn :: Lens' FleetAttributes (Maybe Text)

-- | A descriptive label that is associated with a fleet. Fleet names do
--   not need to be unique.
fleetAttributes_name :: Lens' FleetAttributes (Maybe Text)

-- | The type of game session protection to set on all new instances that
--   are started in the fleet.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
fleetAttributes_newGameSessionProtectionPolicy :: Lens' FleetAttributes (Maybe ProtectionPolicy)

-- | A list of fleet activity that has been suspended using
--   StopFleetActions. This includes fleet auto-scaling.
fleetAttributes_stoppedActions :: Lens' FleetAttributes (Maybe (NonEmpty FleetAction))

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
fleetAttributes_terminationTime :: Lens' FleetAttributes (Maybe UTCTime)

-- | The fleet policy that limits the number of game sessions an individual
--   player can create over a span of time.
fleetAttributes_resourceCreationLimitPolicy :: Lens' FleetAttributes (Maybe ResourceCreationLimitPolicy)

-- | A human-readable description of the fleet.
fleetAttributes_description :: Lens' FleetAttributes (Maybe Text)

-- | A unique identifier for the build resource that is deployed on
--   instances in this fleet.
fleetAttributes_buildId :: Lens' FleetAttributes (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   build resource that is deployed on instances in this fleet. In a
--   GameLift build ARN, the resource ID matches the <tt>BuildId</tt>
--   value.
fleetAttributes_buildArn :: Lens' FleetAttributes (Maybe Text)

-- | Name of a metric group that metrics for this fleet are added to. In
--   Amazon CloudWatch, you can view aggregated metrics for fleets that are
--   in a metric group. A fleet can be included in only one metric group at
--   a time.
fleetAttributes_metricGroups :: Lens' FleetAttributes (Maybe [Text])

-- | The operating system of the fleet's computing resources. A fleet's
--   operating system is determined by the OS of the build or script that
--   is deployed on this fleet.
fleetAttributes_operatingSystem :: Lens' FleetAttributes (Maybe OperatingSystem)

-- | A unique identifier for the Realtime script resource that is deployed
--   on instances in this fleet.
fleetAttributes_scriptId :: Lens' FleetAttributes (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.FleetAttributes.FleetAttributes
instance GHC.Show.Show Network.AWS.GameLift.Types.FleetAttributes.FleetAttributes
instance GHC.Read.Read Network.AWS.GameLift.Types.FleetAttributes.FleetAttributes
instance GHC.Classes.Eq Network.AWS.GameLift.Types.FleetAttributes.FleetAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.FleetAttributes.FleetAttributes
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.FleetAttributes.FleetAttributes
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.FleetAttributes.FleetAttributes


module Network.AWS.GameLift.Types.RoutingStrategyType
newtype RoutingStrategyType
RoutingStrategyType' :: Text -> RoutingStrategyType
[fromRoutingStrategyType] :: RoutingStrategyType -> Text
pattern RoutingStrategyType_SIMPLE :: RoutingStrategyType
pattern RoutingStrategyType_TERMINAL :: RoutingStrategyType
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance GHC.Classes.Ord Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance GHC.Classes.Eq Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance GHC.Read.Read Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType
instance GHC.Show.Show Network.AWS.GameLift.Types.RoutingStrategyType.RoutingStrategyType


module Network.AWS.GameLift.Types.RoutingStrategy

-- | The routing configuration for a fleet alias.
--   
--   <b>Related actions</b>
--   
--   CreateAlias | ListAliases | DescribeAlias | UpdateAlias | DeleteAlias
--   | ResolveAlias | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newRoutingStrategy</a> smart constructor.
data RoutingStrategy
RoutingStrategy' :: Maybe Text -> Maybe Text -> Maybe RoutingStrategyType -> RoutingStrategy

-- | A unique identifier for the fleet that the alias points to. This value
--   is the fleet ID, not the fleet ARN.
[$sel:fleetId:RoutingStrategy'] :: RoutingStrategy -> Maybe Text

-- | The message text to be used with a terminal routing strategy.
[$sel:message:RoutingStrategy'] :: RoutingStrategy -> Maybe Text

-- | The type of routing strategy for the alias.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> - The alias resolves to one specific fleet. Use this
--   type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> - The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
[$sel:type':RoutingStrategy'] :: RoutingStrategy -> Maybe RoutingStrategyType

-- | Create a value of <a>RoutingStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:RoutingStrategy'</a>, <a>routingStrategy_fleetId</a> -
--   A unique identifier for the fleet that the alias points to. This value
--   is the fleet ID, not the fleet ARN.
--   
--   <a>$sel:message:RoutingStrategy'</a>, <a>routingStrategy_message</a> -
--   The message text to be used with a terminal routing strategy.
--   
--   <a>$sel:type':RoutingStrategy'</a>, <a>routingStrategy_type</a> - The
--   type of routing strategy for the alias.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> - The alias resolves to one specific fleet. Use this
--   type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> - The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
newRoutingStrategy :: RoutingStrategy

-- | A unique identifier for the fleet that the alias points to. This value
--   is the fleet ID, not the fleet ARN.
routingStrategy_fleetId :: Lens' RoutingStrategy (Maybe Text)

-- | The message text to be used with a terminal routing strategy.
routingStrategy_message :: Lens' RoutingStrategy (Maybe Text)

-- | The type of routing strategy for the alias.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> - The alias resolves to one specific fleet. Use this
--   type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> - The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
routingStrategy_type :: Lens' RoutingStrategy (Maybe RoutingStrategyType)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.RoutingStrategy.RoutingStrategy
instance GHC.Show.Show Network.AWS.GameLift.Types.RoutingStrategy.RoutingStrategy
instance GHC.Read.Read Network.AWS.GameLift.Types.RoutingStrategy.RoutingStrategy
instance GHC.Classes.Eq Network.AWS.GameLift.Types.RoutingStrategy.RoutingStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.RoutingStrategy.RoutingStrategy
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.RoutingStrategy.RoutingStrategy
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.RoutingStrategy.RoutingStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.RoutingStrategy.RoutingStrategy


module Network.AWS.GameLift.Types.Alias

-- | Properties that describe an alias resource.
--   
--   <b>Related actions</b>
--   
--   CreateAlias | ListAliases | DescribeAlias | UpdateAlias | DeleteAlias
--   | ResolveAlias | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newAlias</a> smart constructor.
data Alias
Alias' :: Maybe RoutingStrategy -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Alias

-- | The routing configuration, including routing type and fleet target,
--   for the alias.
[$sel:routingStrategy:Alias'] :: Alias -> Maybe RoutingStrategy

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:Alias'] :: Alias -> Maybe POSIX

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
[$sel:name:Alias'] :: Alias -> Maybe Text

-- | A human-readable description of an alias.
[$sel:description:Alias'] :: Alias -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   alias resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::alias/alias-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift alias ARN, the resource ID matches the alias ID value.
[$sel:aliasArn:Alias'] :: Alias -> Maybe Text

-- | A unique identifier for the alias. Alias IDs are unique within a
--   Region.
[$sel:aliasId:Alias'] :: Alias -> Maybe Text

-- | The time that this data object was last modified. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:lastUpdatedTime:Alias'] :: Alias -> Maybe POSIX

-- | Create a value of <a>Alias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingStrategy:Alias'</a>, <a>alias_routingStrategy</a> - The
--   routing configuration, including routing type and fleet target, for
--   the alias.
--   
--   <a>$sel:creationTime:Alias'</a>, <a>alias_creationTime</a> - A time
--   stamp indicating when this data object was created. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:name:Alias'</a>, <a>alias_name</a> - A descriptive label that
--   is associated with an alias. Alias names do not need to be unique.
--   
--   <a>$sel:description:Alias'</a>, <a>alias_description</a> - A
--   human-readable description of an alias.
--   
--   <a>$sel:aliasArn:Alias'</a>, <a>alias_aliasArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift alias
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::alias/alias-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift alias ARN, the resource ID matches the alias ID value.
--   
--   <a>$sel:aliasId:Alias'</a>, <a>alias_aliasId</a> - A unique identifier
--   for the alias. Alias IDs are unique within a Region.
--   
--   <a>$sel:lastUpdatedTime:Alias'</a>, <a>alias_lastUpdatedTime</a> - The
--   time that this data object was last modified. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
newAlias :: Alias

-- | The routing configuration, including routing type and fleet target,
--   for the alias.
alias_routingStrategy :: Lens' Alias (Maybe RoutingStrategy)

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
alias_creationTime :: Lens' Alias (Maybe UTCTime)

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
alias_name :: Lens' Alias (Maybe Text)

-- | A human-readable description of an alias.
alias_description :: Lens' Alias (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   alias resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::alias/alias-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift alias ARN, the resource ID matches the alias ID value.
alias_aliasArn :: Lens' Alias (Maybe Text)

-- | A unique identifier for the alias. Alias IDs are unique within a
--   Region.
alias_aliasId :: Lens' Alias (Maybe Text)

-- | The time that this data object was last modified. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
alias_lastUpdatedTime :: Lens' Alias (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.Alias.Alias
instance GHC.Show.Show Network.AWS.GameLift.Types.Alias.Alias
instance GHC.Read.Read Network.AWS.GameLift.Types.Alias.Alias
instance GHC.Classes.Eq Network.AWS.GameLift.Types.Alias.Alias
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.Alias.Alias
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.Alias.Alias
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.Alias.Alias


module Network.AWS.GameLift.Types.S3Location

-- | The location in Amazon S3 where build or script files are stored for
--   access by Amazon GameLift. This location is specified in CreateBuild,
--   CreateScript, and UpdateScript requests.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> S3Location

-- | The name of the zip file that contains the build files or script
--   files.
[$sel:key:S3Location'] :: S3Location -> Maybe Text

-- | The version of the file, if object versioning is turned on for the
--   bucket. Amazon GameLift uses this information when retrieving files
--   from an S3 bucket that you own. Use this parameter to specify a
--   specific version of the file. If not set, the latest version of the
--   file is retrieved.
[$sel:objectVersion:S3Location'] :: S3Location -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access the S3 bucket.
[$sel:roleArn:S3Location'] :: S3Location -> Maybe Text

-- | An Amazon S3 bucket identifier. This is the name of the S3 bucket.
--   
--   GameLift currently does not support uploading from Amazon S3 buckets
--   with names that contain a dot (.).
[$sel:bucket:S3Location'] :: S3Location -> Maybe Text

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:S3Location'</a>, <a>s3Location_key</a> - The name of the
--   zip file that contains the build files or script files.
--   
--   <a>$sel:objectVersion:S3Location'</a>, <a>s3Location_objectVersion</a>
--   - The version of the file, if object versioning is turned on for the
--   bucket. Amazon GameLift uses this information when retrieving files
--   from an S3 bucket that you own. Use this parameter to specify a
--   specific version of the file. If not set, the latest version of the
--   file is retrieved.
--   
--   <a>$sel:roleArn:S3Location'</a>, <a>s3Location_roleArn</a> - The
--   Amazon Resource Name (<a>ARN</a>) for an IAM role that allows Amazon
--   GameLift to access the S3 bucket.
--   
--   <a>$sel:bucket:S3Location'</a>, <a>s3Location_bucket</a> - An Amazon
--   S3 bucket identifier. This is the name of the S3 bucket.
--   
--   GameLift currently does not support uploading from Amazon S3 buckets
--   with names that contain a dot (.).
newS3Location :: S3Location

-- | The name of the zip file that contains the build files or script
--   files.
s3Location_key :: Lens' S3Location (Maybe Text)

-- | The version of the file, if object versioning is turned on for the
--   bucket. Amazon GameLift uses this information when retrieving files
--   from an S3 bucket that you own. Use this parameter to specify a
--   specific version of the file. If not set, the latest version of the
--   file is retrieved.
s3Location_objectVersion :: Lens' S3Location (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access the S3 bucket.
s3Location_roleArn :: Lens' S3Location (Maybe Text)

-- | An Amazon S3 bucket identifier. This is the name of the S3 bucket.
--   
--   GameLift currently does not support uploading from Amazon S3 buckets
--   with names that contain a dot (.).
s3Location_bucket :: Lens' S3Location (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.S3Location.S3Location
instance GHC.Show.Show Network.AWS.GameLift.Types.S3Location.S3Location
instance GHC.Read.Read Network.AWS.GameLift.Types.S3Location.S3Location
instance GHC.Classes.Eq Network.AWS.GameLift.Types.S3Location.S3Location
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.S3Location.S3Location
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.S3Location.S3Location
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.S3Location.S3Location
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.S3Location.S3Location


module Network.AWS.GameLift.Types.ScalingAdjustmentType
newtype ScalingAdjustmentType
ScalingAdjustmentType' :: Text -> ScalingAdjustmentType
[fromScalingAdjustmentType] :: ScalingAdjustmentType -> Text
pattern ScalingAdjustmentType_ChangeInCapacity :: ScalingAdjustmentType
pattern ScalingAdjustmentType_ExactCapacity :: ScalingAdjustmentType
pattern ScalingAdjustmentType_PercentChangeInCapacity :: ScalingAdjustmentType
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance GHC.Classes.Ord Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance GHC.Classes.Eq Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance GHC.Read.Read Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType
instance GHC.Show.Show Network.AWS.GameLift.Types.ScalingAdjustmentType.ScalingAdjustmentType


module Network.AWS.GameLift.Types.ScalingStatusType
newtype ScalingStatusType
ScalingStatusType' :: Text -> ScalingStatusType
[fromScalingStatusType] :: ScalingStatusType -> Text
pattern ScalingStatusType_ACTIVE :: ScalingStatusType
pattern ScalingStatusType_DELETED :: ScalingStatusType
pattern ScalingStatusType_DELETE_REQUESTED :: ScalingStatusType
pattern ScalingStatusType_DELETING :: ScalingStatusType
pattern ScalingStatusType_ERROR :: ScalingStatusType
pattern ScalingStatusType_UPDATE_REQUESTED :: ScalingStatusType
pattern ScalingStatusType_UPDATING :: ScalingStatusType
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance GHC.Generics.Generic Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance GHC.Classes.Ord Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance GHC.Classes.Eq Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance GHC.Read.Read Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType
instance GHC.Show.Show Network.AWS.GameLift.Types.ScalingStatusType.ScalingStatusType


module Network.AWS.GameLift.Types.Script

-- | Properties describing a Realtime script.
--   
--   <b>Related actions</b>
--   
--   CreateScript | ListScripts | DescribeScript | UpdateScript |
--   DeleteScript | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newScript</a> smart constructor.
data Script
Script' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe S3Location -> Maybe Natural -> Maybe Text -> Script

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:Script'] :: Script -> Maybe POSIX

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique.
[$sel:version:Script'] :: Script -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   script resource and uniquely identifies it. ARNs are unique across all
--   Regions. In a GameLift script ARN, the resource ID matches the
--   <i>ScriptId</i> value.
[$sel:scriptArn:Script'] :: Script -> Maybe Text

-- | A descriptive label that is associated with a script. Script names do
--   not need to be unique.
[$sel:name:Script'] :: Script -> Maybe Text
[$sel:storageLocation:Script'] :: Script -> Maybe S3Location

-- | The file size of the uploaded Realtime script, expressed in bytes.
--   When files are uploaded from an S3 location, this value remains at
--   "0".
[$sel:sizeOnDisk:Script'] :: Script -> Maybe Natural

-- | A unique identifier for the Realtime script
[$sel:scriptId:Script'] :: Script -> Maybe Text

-- | Create a value of <a>Script</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Script'</a>, <a>script_creationTime</a> - A time
--   stamp indicating when this data object was created. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:version:Script'</a>, <a>script_version</a> - Version
--   information that is associated with a build or script. Version strings
--   do not need to be unique.
--   
--   <a>$sel:scriptArn:Script'</a>, <a>script_scriptArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift script
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. In a GameLift script ARN, the resource ID matches the
--   <i>ScriptId</i> value.
--   
--   <a>$sel:name:Script'</a>, <a>script_name</a> - A descriptive label
--   that is associated with a script. Script names do not need to be
--   unique.
--   
--   <a>$sel:storageLocation:Script'</a>, <a>script_storageLocation</a> -
--   Undocumented member.
--   
--   <a>$sel:sizeOnDisk:Script'</a>, <a>script_sizeOnDisk</a> - The file
--   size of the uploaded Realtime script, expressed in bytes. When files
--   are uploaded from an S3 location, this value remains at "0".
--   
--   <a>$sel:scriptId:Script'</a>, <a>script_scriptId</a> - A unique
--   identifier for the Realtime script
newScript :: Script

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
script_creationTime :: Lens' Script (Maybe UTCTime)

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique.
script_version :: Lens' Script (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   script resource and uniquely identifies it. ARNs are unique across all
--   Regions. In a GameLift script ARN, the resource ID matches the
--   <i>ScriptId</i> value.
script_scriptArn :: Lens' Script (Maybe Text)

-- | A descriptive label that is associated with a script. Script names do
--   not need to be unique.
script_name :: Lens' Script (Maybe Text)

-- | Undocumented member.
script_storageLocation :: Lens' Script (Maybe S3Location)

-- | The file size of the uploaded Realtime script, expressed in bytes.
--   When files are uploaded from an S3 location, this value remains at
--   "0".
script_sizeOnDisk :: Lens' Script (Maybe Natural)

-- | A unique identifier for the Realtime script
script_scriptId :: Lens' Script (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.Script.Script
instance GHC.Show.Show Network.AWS.GameLift.Types.Script.Script
instance GHC.Read.Read Network.AWS.GameLift.Types.Script.Script
instance GHC.Classes.Eq Network.AWS.GameLift.Types.Script.Script
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.Script.Script
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.Script.Script
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.Script.Script


module Network.AWS.GameLift.Types.ServerProcess

-- | A set of instructions for launching server processes on each instance
--   in a fleet. Server processes run either an executable in a custom game
--   build or a Realtime Servers script. Server process configurations are
--   part of a fleet's RuntimeConfiguration.
--   
--   <i>See:</i> <a>newServerProcess</a> smart constructor.
data ServerProcess
ServerProcess' :: Maybe Text -> Text -> Natural -> ServerProcess

-- | An optional list of parameters to pass to the server executable or
--   Realtime script on launch.
[$sel:parameters:ServerProcess'] :: ServerProcess -> Maybe Text

-- | The location of a game build executable or the Realtime script file
--   that contains the <tt>Init()</tt> function. Game builds and Realtime
--   scripts are installed on instances at the root:
--   
--   <ul>
--   <li>Windows (custom game builds only): <tt>C:\game</tt>. Example:
--   "<tt>C:\game\MyGame\server.exe</tt>"</li>
--   <li>Linux: <tt>/local/game</tt>. Examples:
--   "<tt>/local/game/MyGame/server.exe</tt>" or
--   "<tt>/local/game/MyRealtimeScript.js</tt>"</li>
--   </ul>
[$sel:launchPath:ServerProcess'] :: ServerProcess -> Text

-- | The number of server processes using this configuration that run
--   concurrently on each instance.
[$sel:concurrentExecutions:ServerProcess'] :: ServerProcess -> Natural

-- | Create a value of <a>ServerProcess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:ServerProcess'</a>, <a>serverProcess_parameters</a>
--   - An optional list of parameters to pass to the server executable or
--   Realtime script on launch.
--   
--   <a>$sel:launchPath:ServerProcess'</a>, <a>serverProcess_launchPath</a>
--   - The location of a game build executable or the Realtime script file
--   that contains the <tt>Init()</tt> function. Game builds and Realtime
--   scripts are installed on instances at the root:
--   
--   <ul>
--   <li>Windows (custom game builds only): <tt>C:\game</tt>. Example:
--   "<tt>C:\game\MyGame\server.exe</tt>"</li>
--   <li>Linux: <tt>/local/game</tt>. Examples:
--   "<tt>/local/game/MyGame/server.exe</tt>" or
--   "<tt>/local/game/MyRealtimeScript.js</tt>"</li>
--   </ul>
--   
--   <a>$sel:concurrentExecutions:ServerProcess'</a>,
--   <a>serverProcess_concurrentExecutions</a> - The number of server
--   processes using this configuration that run concurrently on each
--   instance.
newServerProcess :: Text -> Natural -> ServerProcess

-- | An optional list of parameters to pass to the server executable or
--   Realtime script on launch.
serverProcess_parameters :: Lens' ServerProcess (Maybe Text)

-- | The location of a game build executable or the Realtime script file
--   that contains the <tt>Init()</tt> function. Game builds and Realtime
--   scripts are installed on instances at the root:
--   
--   <ul>
--   <li>Windows (custom game builds only): <tt>C:\game</tt>. Example:
--   "<tt>C:\game\MyGame\server.exe</tt>"</li>
--   <li>Linux: <tt>/local/game</tt>. Examples:
--   "<tt>/local/game/MyGame/server.exe</tt>" or
--   "<tt>/local/game/MyRealtimeScript.js</tt>"</li>
--   </ul>
serverProcess_launchPath :: Lens' ServerProcess Text

-- | The number of server processes using this configuration that run
--   concurrently on each instance.
serverProcess_concurrentExecutions :: Lens' ServerProcess Natural
instance GHC.Generics.Generic Network.AWS.GameLift.Types.ServerProcess.ServerProcess
instance GHC.Show.Show Network.AWS.GameLift.Types.ServerProcess.ServerProcess
instance GHC.Read.Read Network.AWS.GameLift.Types.ServerProcess.ServerProcess
instance GHC.Classes.Eq Network.AWS.GameLift.Types.ServerProcess.ServerProcess
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.ServerProcess.ServerProcess
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.ServerProcess.ServerProcess
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.ServerProcess.ServerProcess
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.ServerProcess.ServerProcess


module Network.AWS.GameLift.Types.RuntimeConfiguration

-- | A collection of server process configurations that describe the set of
--   processes to run on each instance in a fleet. Server processes run
--   either an executable in a custom game build or a Realtime Servers
--   script. GameLift launches the configured processes, manages their life
--   cycle, and replaces them as needed. Each instance checks regularly for
--   an updated runtime configuration.
--   
--   A GameLift instance is limited to 50 processes running concurrently.
--   To calculate the total number of processes in a runtime configuration,
--   add the values of the <tt>ConcurrentExecutions</tt> parameter for each
--   ServerProcess. Learn more about <a>Running Multiple Processes on a
--   Fleet</a>.
--   
--   <b>Related actions</b>
--   
--   DescribeRuntimeConfiguration | UpdateRuntimeConfiguration
--   
--   <i>See:</i> <a>newRuntimeConfiguration</a> smart constructor.
data RuntimeConfiguration
RuntimeConfiguration' :: Maybe Natural -> Maybe Natural -> Maybe (NonEmpty ServerProcess) -> RuntimeConfiguration

-- | The maximum amount of time (in seconds) allowed to launch a new game
--   session and have it report ready to host players. During this time,
--   the game session is in status <tt>ACTIVATING</tt>. If the game session
--   does not become active before the timeout, it is ended and the game
--   session status is changed to <tt>TERMINATED</tt>.
[$sel:gameSessionActivationTimeoutSeconds:RuntimeConfiguration'] :: RuntimeConfiguration -> Maybe Natural

-- | The number of game sessions in status <tt>ACTIVATING</tt> to allow on
--   an instance. This setting limits the instance resources that can be
--   used for new game activations at any one time.
[$sel:maxConcurrentGameSessionActivations:RuntimeConfiguration'] :: RuntimeConfiguration -> Maybe Natural

-- | A collection of server process configurations that identify what
--   server processes to run on each instance in a fleet.
[$sel:serverProcesses:RuntimeConfiguration'] :: RuntimeConfiguration -> Maybe (NonEmpty ServerProcess)

-- | Create a value of <a>RuntimeConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionActivationTimeoutSeconds:RuntimeConfiguration'</a>,
--   <a>runtimeConfiguration_gameSessionActivationTimeoutSeconds</a> - The
--   maximum amount of time (in seconds) allowed to launch a new game
--   session and have it report ready to host players. During this time,
--   the game session is in status <tt>ACTIVATING</tt>. If the game session
--   does not become active before the timeout, it is ended and the game
--   session status is changed to <tt>TERMINATED</tt>.
--   
--   <a>$sel:maxConcurrentGameSessionActivations:RuntimeConfiguration'</a>,
--   <a>runtimeConfiguration_maxConcurrentGameSessionActivations</a> - The
--   number of game sessions in status <tt>ACTIVATING</tt> to allow on an
--   instance. This setting limits the instance resources that can be used
--   for new game activations at any one time.
--   
--   <a>$sel:serverProcesses:RuntimeConfiguration'</a>,
--   <a>runtimeConfiguration_serverProcesses</a> - A collection of server
--   process configurations that identify what server processes to run on
--   each instance in a fleet.
newRuntimeConfiguration :: RuntimeConfiguration

-- | The maximum amount of time (in seconds) allowed to launch a new game
--   session and have it report ready to host players. During this time,
--   the game session is in status <tt>ACTIVATING</tt>. If the game session
--   does not become active before the timeout, it is ended and the game
--   session status is changed to <tt>TERMINATED</tt>.
runtimeConfiguration_gameSessionActivationTimeoutSeconds :: Lens' RuntimeConfiguration (Maybe Natural)

-- | The number of game sessions in status <tt>ACTIVATING</tt> to allow on
--   an instance. This setting limits the instance resources that can be
--   used for new game activations at any one time.
runtimeConfiguration_maxConcurrentGameSessionActivations :: Lens' RuntimeConfiguration (Maybe Natural)

-- | A collection of server process configurations that identify what
--   server processes to run on each instance in a fleet.
runtimeConfiguration_serverProcesses :: Lens' RuntimeConfiguration (Maybe (NonEmpty ServerProcess))
instance GHC.Generics.Generic Network.AWS.GameLift.Types.RuntimeConfiguration.RuntimeConfiguration
instance GHC.Show.Show Network.AWS.GameLift.Types.RuntimeConfiguration.RuntimeConfiguration
instance GHC.Read.Read Network.AWS.GameLift.Types.RuntimeConfiguration.RuntimeConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.Types.RuntimeConfiguration.RuntimeConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.RuntimeConfiguration.RuntimeConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.RuntimeConfiguration.RuntimeConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.RuntimeConfiguration.RuntimeConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.RuntimeConfiguration.RuntimeConfiguration


module Network.AWS.GameLift.Types.SortOrder
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder
instance Network.AWS.Data.XML.ToXML Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Network.AWS.Data.XML.FromXML Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Network.AWS.Data.Headers.ToHeader Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Network.AWS.Data.Log.ToLog Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Network.AWS.Data.Text.ToText Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Network.AWS.Data.Text.FromText Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.SortOrder.SortOrder
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.SortOrder.SortOrder
instance GHC.Generics.Generic Network.AWS.GameLift.Types.SortOrder.SortOrder
instance GHC.Classes.Ord Network.AWS.GameLift.Types.SortOrder.SortOrder
instance GHC.Classes.Eq Network.AWS.GameLift.Types.SortOrder.SortOrder
instance GHC.Read.Read Network.AWS.GameLift.Types.SortOrder.SortOrder
instance GHC.Show.Show Network.AWS.GameLift.Types.SortOrder.SortOrder


module Network.AWS.GameLift.Types.Tag

-- | A label that can be assigned to a GameLift resource.
--   
--   <b>Learn more</b>
--   
--   <a>Tagging AWS Resources</a> in the <i>AWS General Reference</i>
--   
--   <a>AWS Tagging Strategies</a>
--   
--   <b>Related actions</b>
--   
--   TagResource | UntagResource | ListTagsForResource | <a>All APIs by
--   task</a>
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key for a developer-defined key:value pair for tagging an AWS
--   resource.
[$sel:key:Tag'] :: Tag -> Text

-- | The value for a developer-defined key:value pair for tagging an AWS
--   resource.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for a developer-defined
--   key:value pair for tagging an AWS resource.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for a
--   developer-defined key:value pair for tagging an AWS resource.
newTag :: Text -> Text -> Tag

-- | The key for a developer-defined key:value pair for tagging an AWS
--   resource.
tag_key :: Lens' Tag Text

-- | The value for a developer-defined key:value pair for tagging an AWS
--   resource.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.GameLift.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.GameLift.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.GameLift.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.GameLift.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.Tag.Tag


module Network.AWS.GameLift.Types.TargetConfiguration

-- | Settings for a target-based scaling policy (see ScalingPolicy. A
--   target-based policy tracks a particular fleet metric specifies a
--   target value for the metric. As player usage changes, the policy
--   triggers Amazon GameLift to adjust capacity so that the metric returns
--   to the target value. The target configuration specifies settings as
--   needed for the target based policy, including the target value.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetCapacity | UpdateFleetCapacity |
--   DescribeEC2InstanceLimits | PutScalingPolicy | DescribeScalingPolicies
--   | DeleteScalingPolicy | StopFleetActions | StartFleetActions | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newTargetConfiguration</a> smart constructor.
data TargetConfiguration
TargetConfiguration' :: Double -> TargetConfiguration

-- | Desired value to use with a target-based scaling policy. The value
--   must be relevant for whatever metric the scaling policy is using. For
--   example, in a policy using the metric PercentAvailableGameSessions,
--   the target value should be the preferred size of the fleet's buffer
--   (the percent of capacity that should be idle and ready for new game
--   sessions).
[$sel:targetValue:TargetConfiguration'] :: TargetConfiguration -> Double

-- | Create a value of <a>TargetConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetValue:TargetConfiguration'</a>,
--   <a>targetConfiguration_targetValue</a> - Desired value to use with a
--   target-based scaling policy. The value must be relevant for whatever
--   metric the scaling policy is using. For example, in a policy using the
--   metric PercentAvailableGameSessions, the target value should be the
--   preferred size of the fleet's buffer (the percent of capacity that
--   should be idle and ready for new game sessions).
newTargetConfiguration :: Double -> TargetConfiguration

-- | Desired value to use with a target-based scaling policy. The value
--   must be relevant for whatever metric the scaling policy is using. For
--   example, in a policy using the metric PercentAvailableGameSessions,
--   the target value should be the preferred size of the fleet's buffer
--   (the percent of capacity that should be idle and ready for new game
--   sessions).
targetConfiguration_targetValue :: Lens' TargetConfiguration Double
instance GHC.Generics.Generic Network.AWS.GameLift.Types.TargetConfiguration.TargetConfiguration
instance GHC.Show.Show Network.AWS.GameLift.Types.TargetConfiguration.TargetConfiguration
instance GHC.Read.Read Network.AWS.GameLift.Types.TargetConfiguration.TargetConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.Types.TargetConfiguration.TargetConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.TargetConfiguration.TargetConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.TargetConfiguration.TargetConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.TargetConfiguration.TargetConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.TargetConfiguration.TargetConfiguration


module Network.AWS.GameLift.Types.ScalingPolicy

-- | Rule that controls how a fleet is scaled. Scaling policies are
--   uniquely identified by the combination of name and fleet ID.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetCapacity | UpdateFleetCapacity |
--   DescribeEC2InstanceLimits | PutScalingPolicy | DescribeScalingPolicies
--   | DeleteScalingPolicy | StopFleetActions | StartFleetActions | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newScalingPolicy</a> smart constructor.
data ScalingPolicy
ScalingPolicy' :: Maybe Double -> Maybe ScalingStatusType -> Maybe TargetConfiguration -> Maybe ComparisonOperatorType -> Maybe MetricName -> Maybe Text -> Maybe Text -> Maybe PolicyType -> Maybe LocationUpdateStatus -> Maybe Int -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe ScalingAdjustmentType -> ScalingPolicy

-- | Metric value used to trigger a scaling event.
[$sel:threshold:ScalingPolicy'] :: ScalingPolicy -> Maybe Double

-- | Current status of the scaling policy. The scaling policy can be in
--   force only when in an <tt>ACTIVE</tt> status. Scaling policies can be
--   suspended for individual fleets (see StopFleetActions; if suspended
--   for a fleet, the policy status does not change. View a fleet's stopped
--   actions by calling DescribeFleetCapacity.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy can be used for auto-scaling a
--   fleet.</li>
--   <li><b>UPDATE_REQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETE_REQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
[$sel:status:ScalingPolicy'] :: ScalingPolicy -> Maybe ScalingStatusType

-- | An object that contains settings for a target-based scaling policy.
[$sel:targetConfiguration:ScalingPolicy'] :: ScalingPolicy -> Maybe TargetConfiguration

-- | Comparison operator to use when measuring a metric against the
--   threshold value.
[$sel:comparisonOperator:ScalingPolicy'] :: ScalingPolicy -> Maybe ComparisonOperatorType

-- | Name of the Amazon GameLift-defined metric that is used to trigger a
--   scaling adjustment. For detailed descriptions of fleet metrics, see
--   <a>Monitor Amazon GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
[$sel:metricName:ScalingPolicy'] :: ScalingPolicy -> Maybe MetricName

-- | A unique identifier for the fleet that is associated with this scaling
--   policy.
[$sel:fleetId:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | The type of scaling policy to create. For a target-based policy, set
--   the parameter <i>MetricName</i> to 'PercentAvailableGameSessions' and
--   specify a <i>TargetConfiguration</i>. For a rule-based policy set the
--   following parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
[$sel:policyType:ScalingPolicy'] :: ScalingPolicy -> Maybe PolicyType

-- | The current status of the fleet's scaling policies in a requested
--   fleet location. The status <tt>PENDING_UPDATE</tt> indicates that an
--   update was requested for the fleet but has not yet been completed for
--   the location.
[$sel:updateStatus:ScalingPolicy'] :: ScalingPolicy -> Maybe LocationUpdateStatus

-- | Amount of adjustment to make, based on the scaling adjustment type.
[$sel:scalingAdjustment:ScalingPolicy'] :: ScalingPolicy -> Maybe Int

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
[$sel:name:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | Length of time (in minutes) the metric must be at or beyond the
--   threshold before a scaling event is triggered.
[$sel:evaluationPeriods:ScalingPolicy'] :: ScalingPolicy -> Maybe Natural
[$sel:location:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | The type of adjustment to make to a fleet's instance count (see
--   FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down.</li>
--   </ul>
[$sel:scalingAdjustmentType:ScalingPolicy'] :: ScalingPolicy -> Maybe ScalingAdjustmentType

-- | Create a value of <a>ScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:threshold:ScalingPolicy'</a>, <a>scalingPolicy_threshold</a> -
--   Metric value used to trigger a scaling event.
--   
--   <a>$sel:status:ScalingPolicy'</a>, <a>scalingPolicy_status</a> -
--   Current status of the scaling policy. The scaling policy can be in
--   force only when in an <tt>ACTIVE</tt> status. Scaling policies can be
--   suspended for individual fleets (see StopFleetActions; if suspended
--   for a fleet, the policy status does not change. View a fleet's stopped
--   actions by calling DescribeFleetCapacity.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy can be used for auto-scaling a
--   fleet.</li>
--   <li><b>UPDATE_REQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETE_REQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
--   
--   <a>$sel:targetConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_targetConfiguration</a> - An object that contains
--   settings for a target-based scaling policy.
--   
--   <a>$sel:comparisonOperator:ScalingPolicy'</a>,
--   <a>scalingPolicy_comparisonOperator</a> - Comparison operator to use
--   when measuring a metric against the threshold value.
--   
--   <a>$sel:metricName:ScalingPolicy'</a>, <a>scalingPolicy_metricName</a>
--   - Name of the Amazon GameLift-defined metric that is used to trigger a
--   scaling adjustment. For detailed descriptions of fleet metrics, see
--   <a>Monitor Amazon GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
--   
--   <a>$sel:fleetId:ScalingPolicy'</a>, <a>scalingPolicy_fleetId</a> - A
--   unique identifier for the fleet that is associated with this scaling
--   policy.
--   
--   <a>$sel:fleetArn:ScalingPolicy'</a>, <a>scalingPolicy_fleetArn</a> -
--   The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:policyType:ScalingPolicy'</a>, <a>scalingPolicy_policyType</a>
--   - The type of scaling policy to create. For a target-based policy, set
--   the parameter <i>MetricName</i> to 'PercentAvailableGameSessions' and
--   specify a <i>TargetConfiguration</i>. For a rule-based policy set the
--   following parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
--   
--   <a>$sel:updateStatus:ScalingPolicy'</a>,
--   <a>scalingPolicy_updateStatus</a> - The current status of the fleet's
--   scaling policies in a requested fleet location. The status
--   <tt>PENDING_UPDATE</tt> indicates that an update was requested for the
--   fleet but has not yet been completed for the location.
--   
--   <a>$sel:scalingAdjustment:ScalingPolicy'</a>,
--   <a>scalingPolicy_scalingAdjustment</a> - Amount of adjustment to make,
--   based on the scaling adjustment type.
--   
--   <a>$sel:name:ScalingPolicy'</a>, <a>scalingPolicy_name</a> - A
--   descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
--   
--   <a>$sel:evaluationPeriods:ScalingPolicy'</a>,
--   <a>scalingPolicy_evaluationPeriods</a> - Length of time (in minutes)
--   the metric must be at or beyond the threshold before a scaling event
--   is triggered.
--   
--   <a>$sel:location:ScalingPolicy'</a>, <a>scalingPolicy_location</a> -
--   
--   <a>$sel:scalingAdjustmentType:ScalingPolicy'</a>,
--   <a>scalingPolicy_scalingAdjustmentType</a> - The type of adjustment to
--   make to a fleet's instance count (see FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down.</li>
--   </ul>
newScalingPolicy :: ScalingPolicy

-- | Metric value used to trigger a scaling event.
scalingPolicy_threshold :: Lens' ScalingPolicy (Maybe Double)

-- | Current status of the scaling policy. The scaling policy can be in
--   force only when in an <tt>ACTIVE</tt> status. Scaling policies can be
--   suspended for individual fleets (see StopFleetActions; if suspended
--   for a fleet, the policy status does not change. View a fleet's stopped
--   actions by calling DescribeFleetCapacity.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy can be used for auto-scaling a
--   fleet.</li>
--   <li><b>UPDATE_REQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETE_REQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
scalingPolicy_status :: Lens' ScalingPolicy (Maybe ScalingStatusType)

-- | An object that contains settings for a target-based scaling policy.
scalingPolicy_targetConfiguration :: Lens' ScalingPolicy (Maybe TargetConfiguration)

-- | Comparison operator to use when measuring a metric against the
--   threshold value.
scalingPolicy_comparisonOperator :: Lens' ScalingPolicy (Maybe ComparisonOperatorType)

-- | Name of the Amazon GameLift-defined metric that is used to trigger a
--   scaling adjustment. For detailed descriptions of fleet metrics, see
--   <a>Monitor Amazon GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
scalingPolicy_metricName :: Lens' ScalingPolicy (Maybe MetricName)

-- | A unique identifier for the fleet that is associated with this scaling
--   policy.
scalingPolicy_fleetId :: Lens' ScalingPolicy (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
scalingPolicy_fleetArn :: Lens' ScalingPolicy (Maybe Text)

-- | The type of scaling policy to create. For a target-based policy, set
--   the parameter <i>MetricName</i> to 'PercentAvailableGameSessions' and
--   specify a <i>TargetConfiguration</i>. For a rule-based policy set the
--   following parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
scalingPolicy_policyType :: Lens' ScalingPolicy (Maybe PolicyType)

-- | The current status of the fleet's scaling policies in a requested
--   fleet location. The status <tt>PENDING_UPDATE</tt> indicates that an
--   update was requested for the fleet but has not yet been completed for
--   the location.
scalingPolicy_updateStatus :: Lens' ScalingPolicy (Maybe LocationUpdateStatus)

-- | Amount of adjustment to make, based on the scaling adjustment type.
scalingPolicy_scalingAdjustment :: Lens' ScalingPolicy (Maybe Int)

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
scalingPolicy_name :: Lens' ScalingPolicy (Maybe Text)

-- | Length of time (in minutes) the metric must be at or beyond the
--   threshold before a scaling event is triggered.
scalingPolicy_evaluationPeriods :: Lens' ScalingPolicy (Maybe Natural)

scalingPolicy_location :: Lens' ScalingPolicy (Maybe Text)

-- | The type of adjustment to make to a fleet's instance count (see
--   FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down.</li>
--   </ul>
scalingPolicy_scalingAdjustmentType :: Lens' ScalingPolicy (Maybe ScalingAdjustmentType)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.ScalingPolicy.ScalingPolicy
instance GHC.Show.Show Network.AWS.GameLift.Types.ScalingPolicy.ScalingPolicy
instance GHC.Read.Read Network.AWS.GameLift.Types.ScalingPolicy.ScalingPolicy
instance GHC.Classes.Eq Network.AWS.GameLift.Types.ScalingPolicy.ScalingPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.ScalingPolicy.ScalingPolicy
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.ScalingPolicy.ScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.ScalingPolicy.ScalingPolicy


module Network.AWS.GameLift.Types.TargetTrackingConfiguration

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Settings for a target-based scaling policy as part of a
--   GameServerGroupAutoScalingPolicy. These settings are used to create a
--   target-based policy that tracks the GameLift FleetIQ metric
--   <tt>"PercentUtilizedGameServers"</tt> and specifies a target value for
--   the metric. As player usage changes, the policy triggers to adjust the
--   game server group capacity so that the metric returns to the target
--   value.
--   
--   <i>See:</i> <a>newTargetTrackingConfiguration</a> smart constructor.
data TargetTrackingConfiguration
TargetTrackingConfiguration' :: Double -> TargetTrackingConfiguration

-- | Desired value to use with a game server group target-based scaling
--   policy.
[$sel:targetValue:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Double

-- | Create a value of <a>TargetTrackingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetValue:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_targetValue</a> - Desired value to use
--   with a game server group target-based scaling policy.
newTargetTrackingConfiguration :: Double -> TargetTrackingConfiguration

-- | Desired value to use with a game server group target-based scaling
--   policy.
targetTrackingConfiguration_targetValue :: Lens' TargetTrackingConfiguration Double
instance GHC.Generics.Generic Network.AWS.GameLift.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance GHC.Show.Show Network.AWS.GameLift.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance GHC.Read.Read Network.AWS.GameLift.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.TargetTrackingConfiguration.TargetTrackingConfiguration


module Network.AWS.GameLift.Types.GameServerGroupAutoScalingPolicy

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Configuration settings for intelligent automatic scaling that uses
--   target tracking. These settings are used to add an Auto Scaling policy
--   when creating the corresponding Auto Scaling group with
--   CreateGameServerGroup. After the Auto Scaling group is created, all
--   updates to Auto Scaling policies, including changing this policy and
--   adding or removing other policies, is done directly on the Auto
--   Scaling group.
--   
--   <i>See:</i> <a>newGameServerGroupAutoScalingPolicy</a> smart
--   constructor.
data GameServerGroupAutoScalingPolicy
GameServerGroupAutoScalingPolicy' :: Maybe Natural -> TargetTrackingConfiguration -> GameServerGroupAutoScalingPolicy

-- | Length of time, in seconds, it takes for a new instance to start new
--   game server processes and register with GameLift FleetIQ. Specifying a
--   warm-up time can be useful, particularly with game servers that take a
--   long time to start up, because it avoids prematurely starting new
--   instances.
[$sel:estimatedInstanceWarmup:GameServerGroupAutoScalingPolicy'] :: GameServerGroupAutoScalingPolicy -> Maybe Natural

-- | Settings for a target-based scaling policy applied to Auto Scaling
--   group. These settings are used to create a target-based policy that
--   tracks the GameLift FleetIQ metric
--   <tt>"PercentUtilizedGameServers"</tt> and specifies a target value for
--   the metric. As player usage changes, the policy triggers to adjust the
--   game server group capacity so that the metric returns to the target
--   value.
[$sel:targetTrackingConfiguration:GameServerGroupAutoScalingPolicy'] :: GameServerGroupAutoScalingPolicy -> TargetTrackingConfiguration

-- | Create a value of <a>GameServerGroupAutoScalingPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:estimatedInstanceWarmup:GameServerGroupAutoScalingPolicy'</a>,
--   <a>gameServerGroupAutoScalingPolicy_estimatedInstanceWarmup</a> -
--   Length of time, in seconds, it takes for a new instance to start new
--   game server processes and register with GameLift FleetIQ. Specifying a
--   warm-up time can be useful, particularly with game servers that take a
--   long time to start up, because it avoids prematurely starting new
--   instances.
--   
--   
--   <a>$sel:targetTrackingConfiguration:GameServerGroupAutoScalingPolicy'</a>,
--   <a>gameServerGroupAutoScalingPolicy_targetTrackingConfiguration</a> -
--   Settings for a target-based scaling policy applied to Auto Scaling
--   group. These settings are used to create a target-based policy that
--   tracks the GameLift FleetIQ metric
--   <tt>"PercentUtilizedGameServers"</tt> and specifies a target value for
--   the metric. As player usage changes, the policy triggers to adjust the
--   game server group capacity so that the metric returns to the target
--   value.
newGameServerGroupAutoScalingPolicy :: TargetTrackingConfiguration -> GameServerGroupAutoScalingPolicy

-- | Length of time, in seconds, it takes for a new instance to start new
--   game server processes and register with GameLift FleetIQ. Specifying a
--   warm-up time can be useful, particularly with game servers that take a
--   long time to start up, because it avoids prematurely starting new
--   instances.
gameServerGroupAutoScalingPolicy_estimatedInstanceWarmup :: Lens' GameServerGroupAutoScalingPolicy (Maybe Natural)

-- | Settings for a target-based scaling policy applied to Auto Scaling
--   group. These settings are used to create a target-based policy that
--   tracks the GameLift FleetIQ metric
--   <tt>"PercentUtilizedGameServers"</tt> and specifies a target value for
--   the metric. As player usage changes, the policy triggers to adjust the
--   game server group capacity so that the metric returns to the target
--   value.
gameServerGroupAutoScalingPolicy_targetTrackingConfiguration :: Lens' GameServerGroupAutoScalingPolicy TargetTrackingConfiguration
instance GHC.Generics.Generic Network.AWS.GameLift.Types.GameServerGroupAutoScalingPolicy.GameServerGroupAutoScalingPolicy
instance GHC.Show.Show Network.AWS.GameLift.Types.GameServerGroupAutoScalingPolicy.GameServerGroupAutoScalingPolicy
instance GHC.Read.Read Network.AWS.GameLift.Types.GameServerGroupAutoScalingPolicy.GameServerGroupAutoScalingPolicy
instance GHC.Classes.Eq Network.AWS.GameLift.Types.GameServerGroupAutoScalingPolicy.GameServerGroupAutoScalingPolicy
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.GameServerGroupAutoScalingPolicy.GameServerGroupAutoScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.GameServerGroupAutoScalingPolicy.GameServerGroupAutoScalingPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.Types.GameServerGroupAutoScalingPolicy.GameServerGroupAutoScalingPolicy


module Network.AWS.GameLift.Types.VpcPeeringAuthorization

-- | Represents an authorization for a VPC peering connection between the
--   VPC for an Amazon GameLift fleet and another VPC on an account you
--   have access to. This authorization must exist and be valid for the
--   peering connection to be established. Authorizations are valid for 24
--   hours after they are issued.
--   
--   <b>Related actions</b>
--   
--   CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations |
--   DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection |
--   DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newVpcPeeringAuthorization</a> smart constructor.
data VpcPeeringAuthorization
VpcPeeringAuthorization' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> VpcPeeringAuthorization

-- | Time stamp indicating when this authorization was issued. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:VpcPeeringAuthorization'] :: VpcPeeringAuthorization -> Maybe POSIX
[$sel:peerVpcAwsAccountId:VpcPeeringAuthorization'] :: VpcPeeringAuthorization -> Maybe Text

-- | Time stamp indicating when this authorization expires (24 hours after
--   issuance). Format is a number expressed in Unix time as milliseconds
--   (for example <tt>"1469498468.057"</tt>).
[$sel:expirationTime:VpcPeeringAuthorization'] :: VpcPeeringAuthorization -> Maybe POSIX

-- | A unique identifier for the AWS account that you use to manage your
--   GameLift fleet. You can find your Account ID in the AWS Management
--   Console under account settings.
[$sel:gameLiftAwsAccountId:VpcPeeringAuthorization'] :: VpcPeeringAuthorization -> Maybe Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
[$sel:peerVpcId:VpcPeeringAuthorization'] :: VpcPeeringAuthorization -> Maybe Text

-- | Create a value of <a>VpcPeeringAuthorization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_creationTime</a> - Time stamp indicating
--   when this authorization was issued. Format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:peerVpcAwsAccountId:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_peerVpcAwsAccountId</a> -
--   
--   <a>$sel:expirationTime:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_expirationTime</a> - Time stamp indicating
--   when this authorization expires (24 hours after issuance). Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:gameLiftAwsAccountId:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_gameLiftAwsAccountId</a> - A unique
--   identifier for the AWS account that you use to manage your GameLift
--   fleet. You can find your Account ID in the AWS Management Console
--   under account settings.
--   
--   <a>$sel:peerVpcId:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_peerVpcId</a> - A unique identifier for a
--   VPC with resources to be accessed by your GameLift fleet. The VPC must
--   be in the same Region as your fleet. To look up a VPC ID, use the
--   <a>VPC Dashboard</a> in the AWS Management Console. Learn more about
--   VPC peering in <a>VPC Peering with GameLift Fleets</a>.
newVpcPeeringAuthorization :: VpcPeeringAuthorization

-- | Time stamp indicating when this authorization was issued. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
vpcPeeringAuthorization_creationTime :: Lens' VpcPeeringAuthorization (Maybe UTCTime)

vpcPeeringAuthorization_peerVpcAwsAccountId :: Lens' VpcPeeringAuthorization (Maybe Text)

-- | Time stamp indicating when this authorization expires (24 hours after
--   issuance). Format is a number expressed in Unix time as milliseconds
--   (for example <tt>"1469498468.057"</tt>).
vpcPeeringAuthorization_expirationTime :: Lens' VpcPeeringAuthorization (Maybe UTCTime)

-- | A unique identifier for the AWS account that you use to manage your
--   GameLift fleet. You can find your Account ID in the AWS Management
--   Console under account settings.
vpcPeeringAuthorization_gameLiftAwsAccountId :: Lens' VpcPeeringAuthorization (Maybe Text)

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
vpcPeeringAuthorization_peerVpcId :: Lens' VpcPeeringAuthorization (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.VpcPeeringAuthorization.VpcPeeringAuthorization
instance GHC.Show.Show Network.AWS.GameLift.Types.VpcPeeringAuthorization.VpcPeeringAuthorization
instance GHC.Read.Read Network.AWS.GameLift.Types.VpcPeeringAuthorization.VpcPeeringAuthorization
instance GHC.Classes.Eq Network.AWS.GameLift.Types.VpcPeeringAuthorization.VpcPeeringAuthorization
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.VpcPeeringAuthorization.VpcPeeringAuthorization
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.VpcPeeringAuthorization.VpcPeeringAuthorization
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.VpcPeeringAuthorization.VpcPeeringAuthorization


module Network.AWS.GameLift.Types.VpcPeeringConnectionStatus

-- | Represents status information for a VPC peering connection. Status is
--   associated with a VpcPeeringConnection object. Status codes and
--   messages are provided from EC2 (see
--   <a>VpcPeeringConnectionStateReason</a>). Connection status information
--   is also communicated as a fleet Event.
--   
--   <i>See:</i> <a>newVpcPeeringConnectionStatus</a> smart constructor.
data VpcPeeringConnectionStatus
VpcPeeringConnectionStatus' :: Maybe Text -> Maybe Text -> VpcPeeringConnectionStatus

-- | Additional messaging associated with the connection status.
[$sel:message:VpcPeeringConnectionStatus'] :: VpcPeeringConnectionStatus -> Maybe Text

-- | Code indicating the status of a VPC peering connection.
[$sel:code:VpcPeeringConnectionStatus'] :: VpcPeeringConnectionStatus -> Maybe Text

-- | Create a value of <a>VpcPeeringConnectionStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:VpcPeeringConnectionStatus'</a>,
--   <a>vpcPeeringConnectionStatus_message</a> - Additional messaging
--   associated with the connection status.
--   
--   <a>$sel:code:VpcPeeringConnectionStatus'</a>,
--   <a>vpcPeeringConnectionStatus_code</a> - Code indicating the status of
--   a VPC peering connection.
newVpcPeeringConnectionStatus :: VpcPeeringConnectionStatus

-- | Additional messaging associated with the connection status.
vpcPeeringConnectionStatus_message :: Lens' VpcPeeringConnectionStatus (Maybe Text)

-- | Code indicating the status of a VPC peering connection.
vpcPeeringConnectionStatus_code :: Lens' VpcPeeringConnectionStatus (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.VpcPeeringConnectionStatus.VpcPeeringConnectionStatus
instance GHC.Show.Show Network.AWS.GameLift.Types.VpcPeeringConnectionStatus.VpcPeeringConnectionStatus
instance GHC.Read.Read Network.AWS.GameLift.Types.VpcPeeringConnectionStatus.VpcPeeringConnectionStatus
instance GHC.Classes.Eq Network.AWS.GameLift.Types.VpcPeeringConnectionStatus.VpcPeeringConnectionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.VpcPeeringConnectionStatus.VpcPeeringConnectionStatus
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.VpcPeeringConnectionStatus.VpcPeeringConnectionStatus
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.VpcPeeringConnectionStatus.VpcPeeringConnectionStatus


module Network.AWS.GameLift.Types.VpcPeeringConnection

-- | Represents a peering connection between a VPC on one of your AWS
--   accounts and the VPC for your Amazon GameLift fleets. This record may
--   be for an active peering connection or a pending connection that has
--   not yet been established.
--   
--   <b>Related actions</b>
--   
--   CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations |
--   DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection |
--   DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newVpcPeeringConnection</a> smart constructor.
data VpcPeeringConnection
VpcPeeringConnection' :: Maybe VpcPeeringConnectionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VpcPeeringConnection

-- | The status information about the connection. Status indicates if a
--   connection is pending, successful, or failed.
[$sel:status:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe VpcPeeringConnectionStatus

-- | A unique identifier that is automatically assigned to the connection
--   record. This ID is referenced in VPC peering connection events, and is
--   used when deleting a connection with DeleteVpcPeeringConnection.
[$sel:vpcPeeringConnectionId:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe Text

-- | CIDR block of IPv4 addresses assigned to the VPC peering connection
--   for the GameLift VPC. The peered VPC also has an IPv4 CIDR block
--   associated with it; these blocks cannot overlap or the peering
--   connection cannot be created.
[$sel:ipV4CidrBlock:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe Text

-- | A unique identifier for the fleet. This ID determines the ID of the
--   Amazon GameLift VPC for your fleet.
[$sel:fleetId:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet resource for this connection.
[$sel:fleetArn:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe Text

-- | A unique identifier for the VPC that contains the Amazon GameLift
--   fleet for this connection. This VPC is managed by Amazon GameLift and
--   does not appear in your AWS account.
[$sel:gameLiftVpcId:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
[$sel:peerVpcId:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe Text

-- | Create a value of <a>VpcPeeringConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_status</a> - The status information about the
--   connection. Status indicates if a connection is pending, successful,
--   or failed.
--   
--   <a>$sel:vpcPeeringConnectionId:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_vpcPeeringConnectionId</a> - A unique
--   identifier that is automatically assigned to the connection record.
--   This ID is referenced in VPC peering connection events, and is used
--   when deleting a connection with DeleteVpcPeeringConnection.
--   
--   <a>$sel:ipV4CidrBlock:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_ipV4CidrBlock</a> - CIDR block of IPv4
--   addresses assigned to the VPC peering connection for the GameLift VPC.
--   The peered VPC also has an IPv4 CIDR block associated with it; these
--   blocks cannot overlap or the peering connection cannot be created.
--   
--   <a>$sel:fleetId:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_fleetId</a> - A unique identifier for the
--   fleet. This ID determines the ID of the Amazon GameLift VPC for your
--   fleet.
--   
--   <a>$sel:fleetArn:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift fleet resource for this
--   connection.
--   
--   <a>$sel:gameLiftVpcId:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_gameLiftVpcId</a> - A unique identifier for
--   the VPC that contains the Amazon GameLift fleet for this connection.
--   This VPC is managed by Amazon GameLift and does not appear in your AWS
--   account.
--   
--   <a>$sel:peerVpcId:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_peerVpcId</a> - A unique identifier for a VPC
--   with resources to be accessed by your GameLift fleet. The VPC must be
--   in the same Region as your fleet. To look up a VPC ID, use the <a>VPC
--   Dashboard</a> in the AWS Management Console. Learn more about VPC
--   peering in <a>VPC Peering with GameLift Fleets</a>.
newVpcPeeringConnection :: VpcPeeringConnection

-- | The status information about the connection. Status indicates if a
--   connection is pending, successful, or failed.
vpcPeeringConnection_status :: Lens' VpcPeeringConnection (Maybe VpcPeeringConnectionStatus)

-- | A unique identifier that is automatically assigned to the connection
--   record. This ID is referenced in VPC peering connection events, and is
--   used when deleting a connection with DeleteVpcPeeringConnection.
vpcPeeringConnection_vpcPeeringConnectionId :: Lens' VpcPeeringConnection (Maybe Text)

-- | CIDR block of IPv4 addresses assigned to the VPC peering connection
--   for the GameLift VPC. The peered VPC also has an IPv4 CIDR block
--   associated with it; these blocks cannot overlap or the peering
--   connection cannot be created.
vpcPeeringConnection_ipV4CidrBlock :: Lens' VpcPeeringConnection (Maybe Text)

-- | A unique identifier for the fleet. This ID determines the ID of the
--   Amazon GameLift VPC for your fleet.
vpcPeeringConnection_fleetId :: Lens' VpcPeeringConnection (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet resource for this connection.
vpcPeeringConnection_fleetArn :: Lens' VpcPeeringConnection (Maybe Text)

-- | A unique identifier for the VPC that contains the Amazon GameLift
--   fleet for this connection. This VPC is managed by Amazon GameLift and
--   does not appear in your AWS account.
vpcPeeringConnection_gameLiftVpcId :: Lens' VpcPeeringConnection (Maybe Text)

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
vpcPeeringConnection_peerVpcId :: Lens' VpcPeeringConnection (Maybe Text)
instance GHC.Generics.Generic Network.AWS.GameLift.Types.VpcPeeringConnection.VpcPeeringConnection
instance GHC.Show.Show Network.AWS.GameLift.Types.VpcPeeringConnection.VpcPeeringConnection
instance GHC.Read.Read Network.AWS.GameLift.Types.VpcPeeringConnection.VpcPeeringConnection
instance GHC.Classes.Eq Network.AWS.GameLift.Types.VpcPeeringConnection.VpcPeeringConnection
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.GameLift.Types.VpcPeeringConnection.VpcPeeringConnection
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.Types.VpcPeeringConnection.VpcPeeringConnection
instance Control.DeepSeq.NFData Network.AWS.GameLift.Types.VpcPeeringConnection.VpcPeeringConnection


module Network.AWS.GameLift.Types

-- | API version <tt>2015-10-01</tt> of the Amazon GameLift SDK
--   configuration.
defaultService :: Service

-- | The specified game server group has no available game servers to
--   fulfill a <tt>ClaimGameServer</tt> request. Clients can retry such
--   requests immediately or after a waiting period.
_OutOfCapacityException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A service resource associated with the request could not be found.
--   Clients should not retry such requests.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested tagging operation did not succeed. This may be due to
--   invalid tag format or the maximum tag limit may have been exceeded.
--   Resolve the issue before retrying.
_TaggingFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified fleet has no available instances to fulfill a
--   <tt>CreateGameSession</tt> request. Clients can retry such requests
--   immediately or after a waiting period.
_FleetCapacityExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The client failed authentication. Clients should not retry such
--   requests.
_UnauthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service encountered an unrecoverable internal failure while
--   processing the request. Clients can retry such requests immediately or
--   after a waiting period.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation would cause a conflict with the current state
--   of a resource associated with the request and/or the game instance.
--   Resolve the conflict before retrying.
_InvalidGameSessionStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameter values in the request are invalid. Correct the
--   invalid parameter values before retrying.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is unable to resolve the routing for a particular alias
--   because it has a terminal RoutingStrategy associated with it. The
--   message returned in this exception is the message defined in the
--   routing strategy itself. Such requests should only be retried if the
--   routing strategy for the specified alias is modified.
_TerminalRoutingStrategyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The game instance is currently full and cannot allow the requested
--   player(s) to join. Clients can retry such requests immediately or
--   after a waiting period.
_GameSessionFullException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation would cause a conflict with the current state
--   of a resource associated with the request and/or the fleet. Resolve
--   the conflict before retrying.
_InvalidFleetStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation would cause a conflict with the current state
--   of a service resource associated with the request. Resolve the
--   conflict before retrying this request.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation would cause the resource to exceed the allowed
--   service limit. Resolve the issue before retrying.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A game session with this custom ID string already exists in this
--   fleet. Resolve this conflict before retrying this request.
_IdempotentParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation is not supported in the Region specified.
_UnsupportedRegionException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AcceptanceType
AcceptanceType' :: Text -> AcceptanceType
[fromAcceptanceType] :: AcceptanceType -> Text
pattern AcceptanceType_ACCEPT :: AcceptanceType
pattern AcceptanceType_REJECT :: AcceptanceType
newtype BackfillMode
BackfillMode' :: Text -> BackfillMode
[fromBackfillMode] :: BackfillMode -> Text
pattern BackfillMode_AUTOMATIC :: BackfillMode
pattern BackfillMode_MANUAL :: BackfillMode
newtype BalancingStrategy
BalancingStrategy' :: Text -> BalancingStrategy
[fromBalancingStrategy] :: BalancingStrategy -> Text
pattern BalancingStrategy_ON_DEMAND_ONLY :: BalancingStrategy
pattern BalancingStrategy_SPOT_ONLY :: BalancingStrategy
pattern BalancingStrategy_SPOT_PREFERRED :: BalancingStrategy
newtype BuildStatus
BuildStatus' :: Text -> BuildStatus
[fromBuildStatus] :: BuildStatus -> Text
pattern BuildStatus_FAILED :: BuildStatus
pattern BuildStatus_INITIALIZED :: BuildStatus
pattern BuildStatus_READY :: BuildStatus
newtype CertificateType
CertificateType' :: Text -> CertificateType
[fromCertificateType] :: CertificateType -> Text
pattern CertificateType_DISABLED :: CertificateType
pattern CertificateType_GENERATED :: CertificateType
newtype ComparisonOperatorType
ComparisonOperatorType' :: Text -> ComparisonOperatorType
[fromComparisonOperatorType] :: ComparisonOperatorType -> Text
pattern ComparisonOperatorType_GreaterThanOrEqualToThreshold :: ComparisonOperatorType
pattern ComparisonOperatorType_GreaterThanThreshold :: ComparisonOperatorType
pattern ComparisonOperatorType_LessThanOrEqualToThreshold :: ComparisonOperatorType
pattern ComparisonOperatorType_LessThanThreshold :: ComparisonOperatorType
newtype EC2InstanceType
EC2InstanceType' :: Text -> EC2InstanceType
[fromEC2InstanceType] :: EC2InstanceType -> Text
pattern EC2InstanceType_C3_2xlarge :: EC2InstanceType
pattern EC2InstanceType_C3_4xlarge :: EC2InstanceType
pattern EC2InstanceType_C3_8xlarge :: EC2InstanceType
pattern EC2InstanceType_C3_large :: EC2InstanceType
pattern EC2InstanceType_C3_xlarge :: EC2InstanceType
pattern EC2InstanceType_C4_2xlarge :: EC2InstanceType
pattern EC2InstanceType_C4_4xlarge :: EC2InstanceType
pattern EC2InstanceType_C4_8xlarge :: EC2InstanceType
pattern EC2InstanceType_C4_large :: EC2InstanceType
pattern EC2InstanceType_C4_xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_12xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_18xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_24xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_2xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_4xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_9xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_large :: EC2InstanceType
pattern EC2InstanceType_C5_xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_12xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_16xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_24xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_2xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_4xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_8xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_large :: EC2InstanceType
pattern EC2InstanceType_C5a_xlarge :: EC2InstanceType
pattern EC2InstanceType_M3_2xlarge :: EC2InstanceType
pattern EC2InstanceType_M3_large :: EC2InstanceType
pattern EC2InstanceType_M3_medium :: EC2InstanceType
pattern EC2InstanceType_M3_xlarge :: EC2InstanceType
pattern EC2InstanceType_M4_10xlarge :: EC2InstanceType
pattern EC2InstanceType_M4_2xlarge :: EC2InstanceType
pattern EC2InstanceType_M4_4xlarge :: EC2InstanceType
pattern EC2InstanceType_M4_large :: EC2InstanceType
pattern EC2InstanceType_M4_xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_12xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_16xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_24xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_2xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_4xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_8xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_large :: EC2InstanceType
pattern EC2InstanceType_M5_xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_12xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_16xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_24xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_2xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_4xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_8xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_large :: EC2InstanceType
pattern EC2InstanceType_M5a_xlarge :: EC2InstanceType
pattern EC2InstanceType_R3_2xlarge :: EC2InstanceType
pattern EC2InstanceType_R3_4xlarge :: EC2InstanceType
pattern EC2InstanceType_R3_8xlarge :: EC2InstanceType
pattern EC2InstanceType_R3_large :: EC2InstanceType
pattern EC2InstanceType_R3_xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_16xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_2xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_4xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_8xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_large :: EC2InstanceType
pattern EC2InstanceType_R4_xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_12xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_16xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_24xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_2xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_4xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_8xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_large :: EC2InstanceType
pattern EC2InstanceType_R5_xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_12xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_16xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_24xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_2xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_4xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_8xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_large :: EC2InstanceType
pattern EC2InstanceType_R5a_xlarge :: EC2InstanceType
pattern EC2InstanceType_T2_large :: EC2InstanceType
pattern EC2InstanceType_T2_medium :: EC2InstanceType
pattern EC2InstanceType_T2_micro :: EC2InstanceType
pattern EC2InstanceType_T2_small :: EC2InstanceType
newtype EventCode
EventCode' :: Text -> EventCode
[fromEventCode] :: EventCode -> Text
pattern EventCode_FLEET_ACTIVATION_FAILED :: EventCode
pattern EventCode_FLEET_ACTIVATION_FAILED_NO_INSTANCES :: EventCode
pattern EventCode_FLEET_BINARY_DOWNLOAD_FAILED :: EventCode
pattern EventCode_FLEET_CREATED :: EventCode
pattern EventCode_FLEET_CREATION_EXTRACTING_BUILD :: EventCode
pattern EventCode_FLEET_CREATION_RUNNING_INSTALLER :: EventCode
pattern EventCode_FLEET_CREATION_VALIDATING_RUNTIME_CONFIG :: EventCode
pattern EventCode_FLEET_DELETED :: EventCode
pattern EventCode_FLEET_INITIALIZATION_FAILED :: EventCode
pattern EventCode_FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED :: EventCode
pattern EventCode_FLEET_SCALING_EVENT :: EventCode
pattern EventCode_FLEET_STATE_ACTIVATING :: EventCode
pattern EventCode_FLEET_STATE_ACTIVE :: EventCode
pattern EventCode_FLEET_STATE_BUILDING :: EventCode
pattern EventCode_FLEET_STATE_DOWNLOADING :: EventCode
pattern EventCode_FLEET_STATE_ERROR :: EventCode
pattern EventCode_FLEET_STATE_VALIDATING :: EventCode
pattern EventCode_FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE :: EventCode
pattern EventCode_FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND :: EventCode
pattern EventCode_FLEET_VALIDATION_TIMED_OUT :: EventCode
pattern EventCode_FLEET_VPC_PEERING_DELETED :: EventCode
pattern EventCode_FLEET_VPC_PEERING_FAILED :: EventCode
pattern EventCode_FLEET_VPC_PEERING_SUCCEEDED :: EventCode
pattern EventCode_GAME_SESSION_ACTIVATION_TIMEOUT :: EventCode
pattern EventCode_GENERIC_EVENT :: EventCode
pattern EventCode_INSTANCE_INTERRUPTED :: EventCode
pattern EventCode_SERVER_PROCESS_CRASHED :: EventCode
pattern EventCode_SERVER_PROCESS_FORCE_TERMINATED :: EventCode
pattern EventCode_SERVER_PROCESS_INVALID_PATH :: EventCode
pattern EventCode_SERVER_PROCESS_PROCESS_EXIT_TIMEOUT :: EventCode
pattern EventCode_SERVER_PROCESS_PROCESS_READY_TIMEOUT :: EventCode
pattern EventCode_SERVER_PROCESS_SDK_INITIALIZATION_TIMEOUT :: EventCode
pattern EventCode_SERVER_PROCESS_TERMINATED_UNHEALTHY :: EventCode
newtype FleetAction
FleetAction' :: Text -> FleetAction
[fromFleetAction] :: FleetAction -> Text
pattern FleetAction_AUTO_SCALING :: FleetAction
newtype FleetStatus
FleetStatus' :: Text -> FleetStatus
[fromFleetStatus] :: FleetStatus -> Text
pattern FleetStatus_ACTIVATING :: FleetStatus
pattern FleetStatus_ACTIVE :: FleetStatus
pattern FleetStatus_BUILDING :: FleetStatus
pattern FleetStatus_DELETING :: FleetStatus
pattern FleetStatus_DOWNLOADING :: FleetStatus
pattern FleetStatus_ERROR :: FleetStatus
pattern FleetStatus_NEW :: FleetStatus
pattern FleetStatus_TERMINATED :: FleetStatus
pattern FleetStatus_VALIDATING :: FleetStatus
newtype FleetType
FleetType' :: Text -> FleetType
[fromFleetType] :: FleetType -> Text
pattern FleetType_ON_DEMAND :: FleetType
pattern FleetType_SPOT :: FleetType
newtype FlexMatchMode
FlexMatchMode' :: Text -> FlexMatchMode
[fromFlexMatchMode] :: FlexMatchMode -> Text
pattern FlexMatchMode_STANDALONE :: FlexMatchMode
pattern FlexMatchMode_WITH_QUEUE :: FlexMatchMode
newtype GameServerClaimStatus
GameServerClaimStatus' :: Text -> GameServerClaimStatus
[fromGameServerClaimStatus] :: GameServerClaimStatus -> Text
pattern GameServerClaimStatus_CLAIMED :: GameServerClaimStatus
newtype GameServerGroupAction
GameServerGroupAction' :: Text -> GameServerGroupAction
[fromGameServerGroupAction] :: GameServerGroupAction -> Text
pattern GameServerGroupAction_REPLACE_INSTANCE_TYPES :: GameServerGroupAction
newtype GameServerGroupDeleteOption
GameServerGroupDeleteOption' :: Text -> GameServerGroupDeleteOption
[fromGameServerGroupDeleteOption] :: GameServerGroupDeleteOption -> Text
pattern GameServerGroupDeleteOption_FORCE_DELETE :: GameServerGroupDeleteOption
pattern GameServerGroupDeleteOption_RETAIN :: GameServerGroupDeleteOption
pattern GameServerGroupDeleteOption_SAFE_DELETE :: GameServerGroupDeleteOption
newtype GameServerGroupInstanceType
GameServerGroupInstanceType' :: Text -> GameServerGroupInstanceType
[fromGameServerGroupInstanceType] :: GameServerGroupInstanceType -> Text
pattern GameServerGroupInstanceType_C4_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C4_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C4_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C4_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C4_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_18xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_9xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_10xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_xlarge :: GameServerGroupInstanceType
newtype GameServerGroupStatus
GameServerGroupStatus' :: Text -> GameServerGroupStatus
[fromGameServerGroupStatus] :: GameServerGroupStatus -> Text
pattern GameServerGroupStatus_ACTIVATING :: GameServerGroupStatus
pattern GameServerGroupStatus_ACTIVE :: GameServerGroupStatus
pattern GameServerGroupStatus_DELETED :: GameServerGroupStatus
pattern GameServerGroupStatus_DELETE_SCHEDULED :: GameServerGroupStatus
pattern GameServerGroupStatus_DELETING :: GameServerGroupStatus
pattern GameServerGroupStatus_ERROR :: GameServerGroupStatus
pattern GameServerGroupStatus_NEW :: GameServerGroupStatus
newtype GameServerHealthCheck
GameServerHealthCheck' :: Text -> GameServerHealthCheck
[fromGameServerHealthCheck] :: GameServerHealthCheck -> Text
pattern GameServerHealthCheck_HEALTHY :: GameServerHealthCheck
newtype GameServerInstanceStatus
GameServerInstanceStatus' :: Text -> GameServerInstanceStatus
[fromGameServerInstanceStatus] :: GameServerInstanceStatus -> Text
pattern GameServerInstanceStatus_ACTIVE :: GameServerInstanceStatus
pattern GameServerInstanceStatus_DRAINING :: GameServerInstanceStatus
pattern GameServerInstanceStatus_SPOT_TERMINATING :: GameServerInstanceStatus
newtype GameServerProtectionPolicy
GameServerProtectionPolicy' :: Text -> GameServerProtectionPolicy
[fromGameServerProtectionPolicy] :: GameServerProtectionPolicy -> Text
pattern GameServerProtectionPolicy_FULL_PROTECTION :: GameServerProtectionPolicy
pattern GameServerProtectionPolicy_NO_PROTECTION :: GameServerProtectionPolicy
newtype GameServerUtilizationStatus
GameServerUtilizationStatus' :: Text -> GameServerUtilizationStatus
[fromGameServerUtilizationStatus] :: GameServerUtilizationStatus -> Text
pattern GameServerUtilizationStatus_AVAILABLE :: GameServerUtilizationStatus
pattern GameServerUtilizationStatus_UTILIZED :: GameServerUtilizationStatus
newtype GameSessionPlacementState
GameSessionPlacementState' :: Text -> GameSessionPlacementState
[fromGameSessionPlacementState] :: GameSessionPlacementState -> Text
pattern GameSessionPlacementState_CANCELLED :: GameSessionPlacementState
pattern GameSessionPlacementState_FAILED :: GameSessionPlacementState
pattern GameSessionPlacementState_FULFILLED :: GameSessionPlacementState
pattern GameSessionPlacementState_PENDING :: GameSessionPlacementState
pattern GameSessionPlacementState_TIMED_OUT :: GameSessionPlacementState
newtype GameSessionStatus
GameSessionStatus' :: Text -> GameSessionStatus
[fromGameSessionStatus] :: GameSessionStatus -> Text
pattern GameSessionStatus_ACTIVATING :: GameSessionStatus
pattern GameSessionStatus_ACTIVE :: GameSessionStatus
pattern GameSessionStatus_ERROR :: GameSessionStatus
pattern GameSessionStatus_TERMINATED :: GameSessionStatus
pattern GameSessionStatus_TERMINATING :: GameSessionStatus
newtype GameSessionStatusReason
GameSessionStatusReason' :: Text -> GameSessionStatusReason
[fromGameSessionStatusReason] :: GameSessionStatusReason -> Text
pattern GameSessionStatusReason_INTERRUPTED :: GameSessionStatusReason
newtype InstanceStatus
InstanceStatus' :: Text -> InstanceStatus
[fromInstanceStatus] :: InstanceStatus -> Text
pattern InstanceStatus_ACTIVE :: InstanceStatus
pattern InstanceStatus_PENDING :: InstanceStatus
pattern InstanceStatus_TERMINATING :: InstanceStatus
newtype IpProtocol
IpProtocol' :: Text -> IpProtocol
[fromIpProtocol] :: IpProtocol -> Text
pattern IpProtocol_TCP :: IpProtocol
pattern IpProtocol_UDP :: IpProtocol
newtype LocationUpdateStatus
LocationUpdateStatus' :: Text -> LocationUpdateStatus
[fromLocationUpdateStatus] :: LocationUpdateStatus -> Text
pattern LocationUpdateStatus_PENDING_UPDATE :: LocationUpdateStatus
newtype MatchmakingConfigurationStatus
MatchmakingConfigurationStatus' :: Text -> MatchmakingConfigurationStatus
[fromMatchmakingConfigurationStatus] :: MatchmakingConfigurationStatus -> Text
pattern MatchmakingConfigurationStatus_CANCELLED :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_COMPLETED :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_FAILED :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_PLACING :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_QUEUED :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_REQUIRES_ACCEPTANCE :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_SEARCHING :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_TIMED_OUT :: MatchmakingConfigurationStatus
newtype MetricName
MetricName' :: Text -> MetricName
[fromMetricName] :: MetricName -> Text
pattern MetricName_ActivatingGameSessions :: MetricName
pattern MetricName_ActiveGameSessions :: MetricName
pattern MetricName_ActiveInstances :: MetricName
pattern MetricName_AvailableGameSessions :: MetricName
pattern MetricName_AvailablePlayerSessions :: MetricName
pattern MetricName_CurrentPlayerSessions :: MetricName
pattern MetricName_IdleInstances :: MetricName
pattern MetricName_PercentAvailableGameSessions :: MetricName
pattern MetricName_PercentIdleInstances :: MetricName
pattern MetricName_QueueDepth :: MetricName
pattern MetricName_WaitTime :: MetricName
newtype OperatingSystem
OperatingSystem' :: Text -> OperatingSystem
[fromOperatingSystem] :: OperatingSystem -> Text
pattern OperatingSystem_AMAZON_LINUX :: OperatingSystem
pattern OperatingSystem_AMAZON_LINUX_2 :: OperatingSystem
pattern OperatingSystem_WINDOWS_2012 :: OperatingSystem
newtype PlayerSessionCreationPolicy
PlayerSessionCreationPolicy' :: Text -> PlayerSessionCreationPolicy
[fromPlayerSessionCreationPolicy] :: PlayerSessionCreationPolicy -> Text
pattern PlayerSessionCreationPolicy_ACCEPT_ALL :: PlayerSessionCreationPolicy
pattern PlayerSessionCreationPolicy_DENY_ALL :: PlayerSessionCreationPolicy
newtype PlayerSessionStatus
PlayerSessionStatus' :: Text -> PlayerSessionStatus
[fromPlayerSessionStatus] :: PlayerSessionStatus -> Text
pattern PlayerSessionStatus_ACTIVE :: PlayerSessionStatus
pattern PlayerSessionStatus_COMPLETED :: PlayerSessionStatus
pattern PlayerSessionStatus_RESERVED :: PlayerSessionStatus
pattern PlayerSessionStatus_TIMEDOUT :: PlayerSessionStatus
newtype PolicyType
PolicyType' :: Text -> PolicyType
[fromPolicyType] :: PolicyType -> Text
pattern PolicyType_RuleBased :: PolicyType
pattern PolicyType_TargetBased :: PolicyType
newtype PriorityType
PriorityType' :: Text -> PriorityType
[fromPriorityType] :: PriorityType -> Text
pattern PriorityType_COST :: PriorityType
pattern PriorityType_DESTINATION :: PriorityType
pattern PriorityType_LATENCY :: PriorityType
pattern PriorityType_LOCATION :: PriorityType
newtype ProtectionPolicy
ProtectionPolicy' :: Text -> ProtectionPolicy
[fromProtectionPolicy] :: ProtectionPolicy -> Text
pattern ProtectionPolicy_FullProtection :: ProtectionPolicy
pattern ProtectionPolicy_NoProtection :: ProtectionPolicy
newtype RoutingStrategyType
RoutingStrategyType' :: Text -> RoutingStrategyType
[fromRoutingStrategyType] :: RoutingStrategyType -> Text
pattern RoutingStrategyType_SIMPLE :: RoutingStrategyType
pattern RoutingStrategyType_TERMINAL :: RoutingStrategyType
newtype ScalingAdjustmentType
ScalingAdjustmentType' :: Text -> ScalingAdjustmentType
[fromScalingAdjustmentType] :: ScalingAdjustmentType -> Text
pattern ScalingAdjustmentType_ChangeInCapacity :: ScalingAdjustmentType
pattern ScalingAdjustmentType_ExactCapacity :: ScalingAdjustmentType
pattern ScalingAdjustmentType_PercentChangeInCapacity :: ScalingAdjustmentType
newtype ScalingStatusType
ScalingStatusType' :: Text -> ScalingStatusType
[fromScalingStatusType] :: ScalingStatusType -> Text
pattern ScalingStatusType_ACTIVE :: ScalingStatusType
pattern ScalingStatusType_DELETED :: ScalingStatusType
pattern ScalingStatusType_DELETE_REQUESTED :: ScalingStatusType
pattern ScalingStatusType_DELETING :: ScalingStatusType
pattern ScalingStatusType_ERROR :: ScalingStatusType
pattern ScalingStatusType_UPDATE_REQUESTED :: ScalingStatusType
pattern ScalingStatusType_UPDATING :: ScalingStatusType
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder

-- | Properties that describe an alias resource.
--   
--   <b>Related actions</b>
--   
--   CreateAlias | ListAliases | DescribeAlias | UpdateAlias | DeleteAlias
--   | ResolveAlias | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newAlias</a> smart constructor.
data Alias
Alias' :: Maybe RoutingStrategy -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Alias

-- | The routing configuration, including routing type and fleet target,
--   for the alias.
[$sel:routingStrategy:Alias'] :: Alias -> Maybe RoutingStrategy

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:Alias'] :: Alias -> Maybe POSIX

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
[$sel:name:Alias'] :: Alias -> Maybe Text

-- | A human-readable description of an alias.
[$sel:description:Alias'] :: Alias -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   alias resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::alias/alias-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift alias ARN, the resource ID matches the alias ID value.
[$sel:aliasArn:Alias'] :: Alias -> Maybe Text

-- | A unique identifier for the alias. Alias IDs are unique within a
--   Region.
[$sel:aliasId:Alias'] :: Alias -> Maybe Text

-- | The time that this data object was last modified. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:lastUpdatedTime:Alias'] :: Alias -> Maybe POSIX

-- | Create a value of <a>Alias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingStrategy:Alias'</a>, <a>alias_routingStrategy</a> - The
--   routing configuration, including routing type and fleet target, for
--   the alias.
--   
--   <a>$sel:creationTime:Alias'</a>, <a>alias_creationTime</a> - A time
--   stamp indicating when this data object was created. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:name:Alias'</a>, <a>alias_name</a> - A descriptive label that
--   is associated with an alias. Alias names do not need to be unique.
--   
--   <a>$sel:description:Alias'</a>, <a>alias_description</a> - A
--   human-readable description of an alias.
--   
--   <a>$sel:aliasArn:Alias'</a>, <a>alias_aliasArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift alias
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::alias/alias-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift alias ARN, the resource ID matches the alias ID value.
--   
--   <a>$sel:aliasId:Alias'</a>, <a>alias_aliasId</a> - A unique identifier
--   for the alias. Alias IDs are unique within a Region.
--   
--   <a>$sel:lastUpdatedTime:Alias'</a>, <a>alias_lastUpdatedTime</a> - The
--   time that this data object was last modified. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
newAlias :: Alias

-- | The routing configuration, including routing type and fleet target,
--   for the alias.
alias_routingStrategy :: Lens' Alias (Maybe RoutingStrategy)

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
alias_creationTime :: Lens' Alias (Maybe UTCTime)

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
alias_name :: Lens' Alias (Maybe Text)

-- | A human-readable description of an alias.
alias_description :: Lens' Alias (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   alias resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::alias/alias-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift alias ARN, the resource ID matches the alias ID value.
alias_aliasArn :: Lens' Alias (Maybe Text)

-- | A unique identifier for the alias. Alias IDs are unique within a
--   Region.
alias_aliasId :: Lens' Alias (Maybe Text)

-- | The time that this data object was last modified. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
alias_lastUpdatedTime :: Lens' Alias (Maybe UTCTime)

-- | Values for use in Player attribute key-value pairs. This object lets
--   you specify an attribute value using any of the valid data types:
--   string, number, string array, or data map. Each
--   <tt>AttributeValue</tt> object can use only one of the available
--   properties.
--   
--   <i>See:</i> <a>newAttributeValue</a> smart constructor.
data AttributeValue
AttributeValue' :: Maybe [Text] -> Maybe Double -> Maybe Text -> Maybe (HashMap Text Double) -> AttributeValue

-- | For a list of up to 10 strings. Maximum length for each string is 100
--   characters. Duplicate values are not recognized; all occurrences of
--   the repeated value after the first of a repeated value are ignored.
[$sel:sl:AttributeValue'] :: AttributeValue -> Maybe [Text]

-- | For number values, expressed as double.
[$sel:n:AttributeValue'] :: AttributeValue -> Maybe Double

-- | For single string values. Maximum string length is 100 characters.
[$sel:s:AttributeValue'] :: AttributeValue -> Maybe Text

-- | For a map of up to 10 data type:value pairs. Maximum length for each
--   string value is 100 characters.
[$sel:sdm:AttributeValue'] :: AttributeValue -> Maybe (HashMap Text Double)

-- | Create a value of <a>AttributeValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sl:AttributeValue'</a>, <a>attributeValue_sl</a> - For a list
--   of up to 10 strings. Maximum length for each string is 100 characters.
--   Duplicate values are not recognized; all occurrences of the repeated
--   value after the first of a repeated value are ignored.
--   
--   <a>$sel:n:AttributeValue'</a>, <a>attributeValue_n</a> - For number
--   values, expressed as double.
--   
--   <a>$sel:s:AttributeValue'</a>, <a>attributeValue_s</a> - For single
--   string values. Maximum string length is 100 characters.
--   
--   <a>$sel:sdm:AttributeValue'</a>, <a>attributeValue_sdm</a> - For a map
--   of up to 10 data type:value pairs. Maximum length for each string
--   value is 100 characters.
newAttributeValue :: AttributeValue

-- | For a list of up to 10 strings. Maximum length for each string is 100
--   characters. Duplicate values are not recognized; all occurrences of
--   the repeated value after the first of a repeated value are ignored.
attributeValue_sl :: Lens' AttributeValue (Maybe [Text])

-- | For number values, expressed as double.
attributeValue_n :: Lens' AttributeValue (Maybe Double)

-- | For single string values. Maximum string length is 100 characters.
attributeValue_s :: Lens' AttributeValue (Maybe Text)

-- | For a map of up to 10 data type:value pairs. Maximum length for each
--   string value is 100 characters.
attributeValue_sdm :: Lens' AttributeValue (Maybe (HashMap Text Double))

-- | Temporary access credentials used for uploading game build files to
--   Amazon GameLift. They are valid for a limited time. If they expire
--   before you upload your game build, get a new set by calling
--   RequestUploadCredentials.
--   
--   <i>See:</i> <a>newAwsCredentials</a> smart constructor.
data AwsCredentials
AwsCredentials' :: Maybe Text -> Maybe Text -> Maybe Text -> AwsCredentials

-- | Temporary secret key allowing access to the Amazon GameLift S3
--   account.
[$sel:secretAccessKey:AwsCredentials'] :: AwsCredentials -> Maybe Text

-- | Temporary key allowing access to the Amazon GameLift S3 account.
[$sel:accessKeyId:AwsCredentials'] :: AwsCredentials -> Maybe Text

-- | Token used to associate a specific build ID with the files uploaded
--   using these credentials.
[$sel:sessionToken:AwsCredentials'] :: AwsCredentials -> Maybe Text

-- | Create a value of <a>AwsCredentials</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretAccessKey:AwsCredentials'</a>,
--   <a>awsCredentials_secretAccessKey</a> - Temporary secret key allowing
--   access to the Amazon GameLift S3 account.
--   
--   <a>$sel:accessKeyId:AwsCredentials'</a>,
--   <a>awsCredentials_accessKeyId</a> - Temporary key allowing access to
--   the Amazon GameLift S3 account.
--   
--   <a>$sel:sessionToken:AwsCredentials'</a>,
--   <a>awsCredentials_sessionToken</a> - Token used to associate a
--   specific build ID with the files uploaded using these credentials.
newAwsCredentials :: AwsCredentials

-- | Temporary secret key allowing access to the Amazon GameLift S3
--   account.
awsCredentials_secretAccessKey :: Lens' AwsCredentials (Maybe Text)

-- | Temporary key allowing access to the Amazon GameLift S3 account.
awsCredentials_accessKeyId :: Lens' AwsCredentials (Maybe Text)

-- | Token used to associate a specific build ID with the files uploaded
--   using these credentials.
awsCredentials_sessionToken :: Lens' AwsCredentials (Maybe Text)

-- | Properties describing a custom game build.
--   
--   <b>Related actions</b>
--   
--   CreateBuild | ListBuilds | DescribeBuild | UpdateBuild | DeleteBuild |
--   <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newBuild</a> smart constructor.
data Build
Build' :: Maybe POSIX -> Maybe BuildStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe OperatingSystem -> Build

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:Build'] :: Build -> Maybe POSIX

-- | Current status of the build.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
[$sel:status:Build'] :: Build -> Maybe BuildStatus

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique. This value can be set using
--   CreateBuild or UpdateBuild.
[$sel:version:Build'] :: Build -> Maybe Text

-- | A descriptive label that is associated with a build. Build names do
--   not need to be unique. It can be set using CreateBuild or UpdateBuild.
[$sel:name:Build'] :: Build -> Maybe Text

-- | File size of the uploaded game build, expressed in bytes. When the
--   build status is <tt>INITIALIZED</tt>, this value is 0.
[$sel:sizeOnDisk:Build'] :: Build -> Maybe Natural

-- | A unique identifier for the build.
[$sel:buildId:Build'] :: Build -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   build resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::build/build-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift build ARN, the resource ID matches the <i>BuildId</i>
--   value.
[$sel:buildArn:Build'] :: Build -> Maybe Text

-- | Operating system that the game server binaries are built to run on.
--   This value determines the type of fleet resources that you can use for
--   this build.
[$sel:operatingSystem:Build'] :: Build -> Maybe OperatingSystem

-- | Create a value of <a>Build</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Build'</a>, <a>build_creationTime</a> - A time
--   stamp indicating when this data object was created. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:Build'</a>, <a>build_status</a> - Current status of the
--   build.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
--   
--   <a>$sel:version:Build'</a>, <a>build_version</a> - Version information
--   that is associated with a build or script. Version strings do not need
--   to be unique. This value can be set using CreateBuild or UpdateBuild.
--   
--   <a>$sel:name:Build'</a>, <a>build_name</a> - A descriptive label that
--   is associated with a build. Build names do not need to be unique. It
--   can be set using CreateBuild or UpdateBuild.
--   
--   <a>$sel:sizeOnDisk:Build'</a>, <a>build_sizeOnDisk</a> - File size of
--   the uploaded game build, expressed in bytes. When the build status is
--   <tt>INITIALIZED</tt>, this value is 0.
--   
--   <a>$sel:buildId:Build'</a>, <a>build_buildId</a> - A unique identifier
--   for the build.
--   
--   <a>$sel:buildArn:Build'</a>, <a>build_buildArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift build
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::build/build-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift build ARN, the resource ID matches the <i>BuildId</i>
--   value.
--   
--   <a>$sel:operatingSystem:Build'</a>, <a>build_operatingSystem</a> -
--   Operating system that the game server binaries are built to run on.
--   This value determines the type of fleet resources that you can use for
--   this build.
newBuild :: Build

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
build_creationTime :: Lens' Build (Maybe UTCTime)

-- | Current status of the build.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
build_status :: Lens' Build (Maybe BuildStatus)

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique. This value can be set using
--   CreateBuild or UpdateBuild.
build_version :: Lens' Build (Maybe Text)

-- | A descriptive label that is associated with a build. Build names do
--   not need to be unique. It can be set using CreateBuild or UpdateBuild.
build_name :: Lens' Build (Maybe Text)

-- | File size of the uploaded game build, expressed in bytes. When the
--   build status is <tt>INITIALIZED</tt>, this value is 0.
build_sizeOnDisk :: Lens' Build (Maybe Natural)

-- | A unique identifier for the build.
build_buildId :: Lens' Build (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   build resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::build/build-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift build ARN, the resource ID matches the <i>BuildId</i>
--   value.
build_buildArn :: Lens' Build (Maybe Text)

-- | Operating system that the game server binaries are built to run on.
--   This value determines the type of fleet resources that you can use for
--   this build.
build_operatingSystem :: Lens' Build (Maybe OperatingSystem)

-- | Determines whether a TLS/SSL certificate is generated for a fleet.
--   This feature must be enabled when creating the fleet. All instances in
--   a fleet share the same certificate. The certificate can be retrieved
--   by calling the <a>GameLift Server SDK</a> operation
--   <tt>GetInstanceCertificate</tt>.
--   
--   A fleet's certificate configuration is part of FleetAttributes.
--   
--   <i>See:</i> <a>newCertificateConfiguration</a> smart constructor.
data CertificateConfiguration
CertificateConfiguration' :: CertificateType -> CertificateConfiguration

-- | Indicates whether a TLS/SSL certificate is generated for a fleet.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b>GENERATED</b> - Generate a TLS/SSL certificate for this
--   fleet.</li>
--   <li><b>DISABLED</b> - (default) Do not generate a TLS/SSL certificate
--   for this fleet.</li>
--   </ul>
[$sel:certificateType:CertificateConfiguration'] :: CertificateConfiguration -> CertificateType

-- | Create a value of <a>CertificateConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateType:CertificateConfiguration'</a>,
--   <a>certificateConfiguration_certificateType</a> - Indicates whether a
--   TLS/SSL certificate is generated for a fleet.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b>GENERATED</b> - Generate a TLS/SSL certificate for this
--   fleet.</li>
--   <li><b>DISABLED</b> - (default) Do not generate a TLS/SSL certificate
--   for this fleet.</li>
--   </ul>
newCertificateConfiguration :: CertificateType -> CertificateConfiguration

-- | Indicates whether a TLS/SSL certificate is generated for a fleet.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b>GENERATED</b> - Generate a TLS/SSL certificate for this
--   fleet.</li>
--   <li><b>DISABLED</b> - (default) Do not generate a TLS/SSL certificate
--   for this fleet.</li>
--   </ul>
certificateConfiguration_certificateType :: Lens' CertificateConfiguration CertificateType

-- | Player information for use when creating player sessions using a game
--   session placement request with StartGameSessionPlacement.
--   
--   <i>See:</i> <a>newDesiredPlayerSession</a> smart constructor.
data DesiredPlayerSession
DesiredPlayerSession' :: Maybe Text -> Maybe Text -> DesiredPlayerSession

-- | A unique identifier for a player to associate with the player session.
[$sel:playerId:DesiredPlayerSession'] :: DesiredPlayerSession -> Maybe Text

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
[$sel:playerData:DesiredPlayerSession'] :: DesiredPlayerSession -> Maybe Text

-- | Create a value of <a>DesiredPlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerId:DesiredPlayerSession'</a>,
--   <a>desiredPlayerSession_playerId</a> - A unique identifier for a
--   player to associate with the player session.
--   
--   <a>$sel:playerData:DesiredPlayerSession'</a>,
--   <a>desiredPlayerSession_playerData</a> - Developer-defined information
--   related to a player. GameLift does not use this data, so it can be
--   formatted as needed for use in the game.
newDesiredPlayerSession :: DesiredPlayerSession

-- | A unique identifier for a player to associate with the player session.
desiredPlayerSession_playerId :: Lens' DesiredPlayerSession (Maybe Text)

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
desiredPlayerSession_playerData :: Lens' DesiredPlayerSession (Maybe Text)

-- | Resource capacity settings. Fleet capacity is measured in EC2
--   instances. Pending and terminating counts are non-zero when the fleet
--   capacity is adjusting to a scaling event or if access to resources is
--   temporarily affected.
--   
--   EC2 instance counts are part of FleetCapacity.
--   
--   <i>See:</i> <a>newEC2InstanceCounts</a> smart constructor.
data EC2InstanceCounts
EC2InstanceCounts' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> EC2InstanceCounts

-- | Number of active instances that are not currently hosting a game
--   session.
[$sel:idle:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | The minimum instance count value allowed.
[$sel:minimum:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | Number of instances that are starting but not yet active.
[$sel:pending:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | Number of instances that are no longer active but haven't yet been
--   terminated.
[$sel:terminating:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | Actual number of instances that are ready to host game sessions.
[$sel:active:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | The maximum instance count value allowed.
[$sel:maximum:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | Ideal number of active instances. GameLift will always try to maintain
--   the desired number of instances. Capacity is scaled up or down by
--   changing the desired instances.
[$sel:desired:EC2InstanceCounts'] :: EC2InstanceCounts -> Maybe Natural

-- | Create a value of <a>EC2InstanceCounts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idle:EC2InstanceCounts'</a>, <a>eC2InstanceCounts_idle</a> -
--   Number of active instances that are not currently hosting a game
--   session.
--   
--   <a>$sel:minimum:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_minimum</a> - The minimum instance count value
--   allowed.
--   
--   <a>$sel:pending:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_pending</a> - Number of instances that are
--   starting but not yet active.
--   
--   <a>$sel:terminating:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_terminating</a> - Number of instances that are no
--   longer active but haven't yet been terminated.
--   
--   <a>$sel:active:EC2InstanceCounts'</a>, <a>eC2InstanceCounts_active</a>
--   - Actual number of instances that are ready to host game sessions.
--   
--   <a>$sel:maximum:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_maximum</a> - The maximum instance count value
--   allowed.
--   
--   <a>$sel:desired:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_desired</a> - Ideal number of active instances.
--   GameLift will always try to maintain the desired number of instances.
--   Capacity is scaled up or down by changing the desired instances.
newEC2InstanceCounts :: EC2InstanceCounts

-- | Number of active instances that are not currently hosting a game
--   session.
eC2InstanceCounts_idle :: Lens' EC2InstanceCounts (Maybe Natural)

-- | The minimum instance count value allowed.
eC2InstanceCounts_minimum :: Lens' EC2InstanceCounts (Maybe Natural)

-- | Number of instances that are starting but not yet active.
eC2InstanceCounts_pending :: Lens' EC2InstanceCounts (Maybe Natural)

-- | Number of instances that are no longer active but haven't yet been
--   terminated.
eC2InstanceCounts_terminating :: Lens' EC2InstanceCounts (Maybe Natural)

-- | Actual number of instances that are ready to host game sessions.
eC2InstanceCounts_active :: Lens' EC2InstanceCounts (Maybe Natural)

-- | The maximum instance count value allowed.
eC2InstanceCounts_maximum :: Lens' EC2InstanceCounts (Maybe Natural)

-- | Ideal number of active instances. GameLift will always try to maintain
--   the desired number of instances. Capacity is scaled up or down by
--   changing the desired instances.
eC2InstanceCounts_desired :: Lens' EC2InstanceCounts (Maybe Natural)

-- | The GameLift service limits for an EC2 instance type and current
--   utilization. GameLift allows AWS accounts a maximum number of
--   instances, per instance type, per AWS Region or location, for use with
--   GameLift. You can request an limit increase for your account by using
--   the <b>Service limits</b> page in the GameLift console.
--   
--   <b>Related actions</b>
--   
--   DescribeEC2InstanceLimits
--   
--   <i>See:</i> <a>newEC2InstanceLimit</a> smart constructor.
data EC2InstanceLimit
EC2InstanceLimit' :: Maybe Natural -> Maybe Natural -> Maybe EC2InstanceType -> Maybe Text -> EC2InstanceLimit

-- | The number of instances that is allowed for the specified instance
--   type and location.
[$sel:instanceLimit:EC2InstanceLimit'] :: EC2InstanceLimit -> Maybe Natural

-- | The number of instances for the specified type and location that are
--   currently being used by the AWS account.
[$sel:currentInstances:EC2InstanceLimit'] :: EC2InstanceLimit -> Maybe Natural

-- | The name of an EC2 instance type. See <a>Amazon EC2 Instance Types</a>
--   for detailed descriptions.
[$sel:eC2InstanceType:EC2InstanceLimit'] :: EC2InstanceLimit -> Maybe EC2InstanceType

-- | An AWS Region code, such as <tt>us-west-2</tt>.
[$sel:location:EC2InstanceLimit'] :: EC2InstanceLimit -> Maybe Text

-- | Create a value of <a>EC2InstanceLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceLimit:EC2InstanceLimit'</a>,
--   <a>eC2InstanceLimit_instanceLimit</a> - The number of instances that
--   is allowed for the specified instance type and location.
--   
--   <a>$sel:currentInstances:EC2InstanceLimit'</a>,
--   <a>eC2InstanceLimit_currentInstances</a> - The number of instances for
--   the specified type and location that are currently being used by the
--   AWS account.
--   
--   <a>$sel:eC2InstanceType:EC2InstanceLimit'</a>,
--   <a>eC2InstanceLimit_eC2InstanceType</a> - The name of an EC2 instance
--   type. See <a>Amazon EC2 Instance Types</a> for detailed descriptions.
--   
--   <a>$sel:location:EC2InstanceLimit'</a>,
--   <a>eC2InstanceLimit_location</a> - An AWS Region code, such as
--   <tt>us-west-2</tt>.
newEC2InstanceLimit :: EC2InstanceLimit

-- | The number of instances that is allowed for the specified instance
--   type and location.
eC2InstanceLimit_instanceLimit :: Lens' EC2InstanceLimit (Maybe Natural)

-- | The number of instances for the specified type and location that are
--   currently being used by the AWS account.
eC2InstanceLimit_currentInstances :: Lens' EC2InstanceLimit (Maybe Natural)

-- | The name of an EC2 instance type. See <a>Amazon EC2 Instance Types</a>
--   for detailed descriptions.
eC2InstanceLimit_eC2InstanceType :: Lens' EC2InstanceLimit (Maybe EC2InstanceType)

-- | An AWS Region code, such as <tt>us-west-2</tt>.
eC2InstanceLimit_location :: Lens' EC2InstanceLimit (Maybe Text)

-- | Log entry describing an event that involves GameLift resources (such
--   as a fleet). In addition to tracking activity, event codes and
--   messages can provide additional information for troubleshooting and
--   debugging problems.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetEvents
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe Text -> Maybe EventCode -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Event

-- | A unique identifier for an event resource, such as a fleet ID.
[$sel:resourceId:Event'] :: Event -> Maybe Text

-- | The type of event being logged.
--   
--   <b>Fleet creation events (ordered by fleet creation activity):</b>
--   
--   <ul>
--   <li>FLEET_CREATED -- A fleet resource was successfully created with a
--   status of <tt>NEW</tt>. Event messaging includes the fleet ID.</li>
--   <li>FLEET_STATE_DOWNLOADING -- Fleet status changed from <tt>NEW</tt>
--   to <tt>DOWNLOADING</tt>. The compressed build has started downloading
--   to a fleet instance for installation.</li>
--   <li>FLEET_BINARY_DOWNLOAD_FAILED -- The build failed to download to
--   the fleet instance.</li>
--   <li>FLEET_CREATION_EXTRACTING_BUILD – The game server build was
--   successfully downloaded to an instance, and the build files are now
--   being extracted from the uploaded build and saved to an instance.
--   Failure at this stage prevents a fleet from moving to <tt>ACTIVE</tt>
--   status. Logs for this stage display a list of the files that are
--   extracted and saved on the instance. Access the logs by using the URL
--   in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_RUNNING_INSTALLER – The game server build files
--   were successfully extracted, and the GameLift is now running the
--   build's install script (if one is included). Failure in this stage
--   prevents a fleet from moving to <tt>ACTIVE</tt> status. Logs for this
--   stage list the installation steps and whether or not the install
--   completed successfully. Access the logs by using the URL in
--   <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_VALIDATING_RUNTIME_CONFIG -- The build process was
--   successful, and the GameLift is now verifying that the game server
--   launch paths, which are specified in the fleet's runtime
--   configuration, exist. If any listed launch path exists, GameLift tries
--   to launch a game server process and waits for the process to report
--   ready. Failures in this stage prevent a fleet from moving to
--   <tt>ACTIVE</tt> status. Logs for this stage list the launch paths in
--   the runtime configuration and indicate whether each is found. Access
--   the logs by using the URL in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_STATE_VALIDATING -- Fleet status changed from
--   <tt>DOWNLOADING</tt> to <tt>VALIDATING</tt>.</li>
--   <li>FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path does not exist on the instance.</li>
--   <li>FLEET_STATE_BUILDING -- Fleet status changed from
--   <tt>VALIDATING</tt> to <tt>BUILDING</tt>.</li>
--   <li>FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path failed to run on the fleet instance.</li>
--   <li>FLEET_STATE_ACTIVATING -- Fleet status changed from
--   <tt>BUILDING</tt> to <tt>ACTIVATING</tt>.</li>
--   <li>FLEET_ACTIVATION_FAILED - The fleet failed to successfully
--   complete one of the steps in the fleet activation process. This event
--   code indicates that the game build was successfully downloaded to a
--   fleet instance, built, and validated, but was not able to start a
--   server process. Learn more at <a>Debug Fleet Creation Issues</a></li>
--   <li>FLEET_STATE_ACTIVE -- The fleet's status changed from
--   <tt>ACTIVATING</tt> to <tt>ACTIVE</tt>. The fleet is now ready to host
--   game sessions.</li>
--   </ul>
--   
--   <b>VPC peering events:</b>
--   
--   <ul>
--   <li>FLEET_VPC_PEERING_SUCCEEDED -- A VPC peering connection has been
--   established between the VPC for an GameLift fleet and a VPC in your
--   AWS account.</li>
--   <li>FLEET_VPC_PEERING_FAILED -- A requested VPC peering connection has
--   failed. Event details and status information (see
--   DescribeVpcPeeringConnections) provide additional detail. A common
--   reason for peering failure is that the two VPCs have overlapping CIDR
--   blocks of IPv4 addresses. To resolve this, change the CIDR block for
--   the VPC in your AWS account. For more information on VPC peering
--   failures, see
--   <a>https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/invalid-peering-configurations.html</a></li>
--   <li>FLEET_VPC_PEERING_DELETED -- A VPC peering connection has been
--   successfully deleted.</li>
--   </ul>
--   
--   <b>Spot instance events:</b>
--   
--   <ul>
--   <li>INSTANCE_INTERRUPTED -- A spot instance was interrupted by EC2
--   with a two-minute notification.</li>
--   </ul>
--   
--   <b>Other fleet events:</b>
--   
--   <ul>
--   <li>FLEET_SCALING_EVENT -- A change was made to the fleet's capacity
--   settings (desired instances, minimum/maximum scaling limits). Event
--   messaging includes the new capacity settings.</li>
--   <li>FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED -- A change was
--   made to the fleet's game session protection policy setting. Event
--   messaging includes both the old and new policy setting.</li>
--   <li>FLEET_DELETED -- A request to delete a fleet was initiated.</li>
--   <li>GENERIC_EVENT -- An unspecified event has occurred.</li>
--   </ul>
[$sel:eventCode:Event'] :: Event -> Maybe EventCode

-- | A unique identifier for a fleet event.
[$sel:eventId:Event'] :: Event -> Maybe Text

-- | Additional information related to the event.
[$sel:message:Event'] :: Event -> Maybe Text

-- | Time stamp indicating when this event occurred. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:eventTime:Event'] :: Event -> Maybe POSIX

-- | Location of stored logs with additional detail that is related to the
--   event. This is useful for debugging issues. The URL is valid for 15
--   minutes. You can also access fleet creation logs through the GameLift
--   console.
[$sel:preSignedLogUrl:Event'] :: Event -> Maybe Text

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:Event'</a>, <a>event_resourceId</a> - A unique
--   identifier for an event resource, such as a fleet ID.
--   
--   <a>$sel:eventCode:Event'</a>, <a>event_eventCode</a> - The type of
--   event being logged.
--   
--   <b>Fleet creation events (ordered by fleet creation activity):</b>
--   
--   <ul>
--   <li>FLEET_CREATED -- A fleet resource was successfully created with a
--   status of <tt>NEW</tt>. Event messaging includes the fleet ID.</li>
--   <li>FLEET_STATE_DOWNLOADING -- Fleet status changed from <tt>NEW</tt>
--   to <tt>DOWNLOADING</tt>. The compressed build has started downloading
--   to a fleet instance for installation.</li>
--   <li>FLEET_BINARY_DOWNLOAD_FAILED -- The build failed to download to
--   the fleet instance.</li>
--   <li>FLEET_CREATION_EXTRACTING_BUILD – The game server build was
--   successfully downloaded to an instance, and the build files are now
--   being extracted from the uploaded build and saved to an instance.
--   Failure at this stage prevents a fleet from moving to <tt>ACTIVE</tt>
--   status. Logs for this stage display a list of the files that are
--   extracted and saved on the instance. Access the logs by using the URL
--   in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_RUNNING_INSTALLER – The game server build files
--   were successfully extracted, and the GameLift is now running the
--   build's install script (if one is included). Failure in this stage
--   prevents a fleet from moving to <tt>ACTIVE</tt> status. Logs for this
--   stage list the installation steps and whether or not the install
--   completed successfully. Access the logs by using the URL in
--   <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_VALIDATING_RUNTIME_CONFIG -- The build process was
--   successful, and the GameLift is now verifying that the game server
--   launch paths, which are specified in the fleet's runtime
--   configuration, exist. If any listed launch path exists, GameLift tries
--   to launch a game server process and waits for the process to report
--   ready. Failures in this stage prevent a fleet from moving to
--   <tt>ACTIVE</tt> status. Logs for this stage list the launch paths in
--   the runtime configuration and indicate whether each is found. Access
--   the logs by using the URL in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_STATE_VALIDATING -- Fleet status changed from
--   <tt>DOWNLOADING</tt> to <tt>VALIDATING</tt>.</li>
--   <li>FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path does not exist on the instance.</li>
--   <li>FLEET_STATE_BUILDING -- Fleet status changed from
--   <tt>VALIDATING</tt> to <tt>BUILDING</tt>.</li>
--   <li>FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path failed to run on the fleet instance.</li>
--   <li>FLEET_STATE_ACTIVATING -- Fleet status changed from
--   <tt>BUILDING</tt> to <tt>ACTIVATING</tt>.</li>
--   <li>FLEET_ACTIVATION_FAILED - The fleet failed to successfully
--   complete one of the steps in the fleet activation process. This event
--   code indicates that the game build was successfully downloaded to a
--   fleet instance, built, and validated, but was not able to start a
--   server process. Learn more at <a>Debug Fleet Creation Issues</a></li>
--   <li>FLEET_STATE_ACTIVE -- The fleet's status changed from
--   <tt>ACTIVATING</tt> to <tt>ACTIVE</tt>. The fleet is now ready to host
--   game sessions.</li>
--   </ul>
--   
--   <b>VPC peering events:</b>
--   
--   <ul>
--   <li>FLEET_VPC_PEERING_SUCCEEDED -- A VPC peering connection has been
--   established between the VPC for an GameLift fleet and a VPC in your
--   AWS account.</li>
--   <li>FLEET_VPC_PEERING_FAILED -- A requested VPC peering connection has
--   failed. Event details and status information (see
--   DescribeVpcPeeringConnections) provide additional detail. A common
--   reason for peering failure is that the two VPCs have overlapping CIDR
--   blocks of IPv4 addresses. To resolve this, change the CIDR block for
--   the VPC in your AWS account. For more information on VPC peering
--   failures, see
--   <a>https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/invalid-peering-configurations.html</a></li>
--   <li>FLEET_VPC_PEERING_DELETED -- A VPC peering connection has been
--   successfully deleted.</li>
--   </ul>
--   
--   <b>Spot instance events:</b>
--   
--   <ul>
--   <li>INSTANCE_INTERRUPTED -- A spot instance was interrupted by EC2
--   with a two-minute notification.</li>
--   </ul>
--   
--   <b>Other fleet events:</b>
--   
--   <ul>
--   <li>FLEET_SCALING_EVENT -- A change was made to the fleet's capacity
--   settings (desired instances, minimum/maximum scaling limits). Event
--   messaging includes the new capacity settings.</li>
--   <li>FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED -- A change was
--   made to the fleet's game session protection policy setting. Event
--   messaging includes both the old and new policy setting.</li>
--   <li>FLEET_DELETED -- A request to delete a fleet was initiated.</li>
--   <li>GENERIC_EVENT -- An unspecified event has occurred.</li>
--   </ul>
--   
--   <a>$sel:eventId:Event'</a>, <a>event_eventId</a> - A unique identifier
--   for a fleet event.
--   
--   <a>$sel:message:Event'</a>, <a>event_message</a> - Additional
--   information related to the event.
--   
--   <a>$sel:eventTime:Event'</a>, <a>event_eventTime</a> - Time stamp
--   indicating when this event occurred. Format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:preSignedLogUrl:Event'</a>, <a>event_preSignedLogUrl</a> -
--   Location of stored logs with additional detail that is related to the
--   event. This is useful for debugging issues. The URL is valid for 15
--   minutes. You can also access fleet creation logs through the GameLift
--   console.
newEvent :: Event

-- | A unique identifier for an event resource, such as a fleet ID.
event_resourceId :: Lens' Event (Maybe Text)

-- | The type of event being logged.
--   
--   <b>Fleet creation events (ordered by fleet creation activity):</b>
--   
--   <ul>
--   <li>FLEET_CREATED -- A fleet resource was successfully created with a
--   status of <tt>NEW</tt>. Event messaging includes the fleet ID.</li>
--   <li>FLEET_STATE_DOWNLOADING -- Fleet status changed from <tt>NEW</tt>
--   to <tt>DOWNLOADING</tt>. The compressed build has started downloading
--   to a fleet instance for installation.</li>
--   <li>FLEET_BINARY_DOWNLOAD_FAILED -- The build failed to download to
--   the fleet instance.</li>
--   <li>FLEET_CREATION_EXTRACTING_BUILD – The game server build was
--   successfully downloaded to an instance, and the build files are now
--   being extracted from the uploaded build and saved to an instance.
--   Failure at this stage prevents a fleet from moving to <tt>ACTIVE</tt>
--   status. Logs for this stage display a list of the files that are
--   extracted and saved on the instance. Access the logs by using the URL
--   in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_RUNNING_INSTALLER – The game server build files
--   were successfully extracted, and the GameLift is now running the
--   build's install script (if one is included). Failure in this stage
--   prevents a fleet from moving to <tt>ACTIVE</tt> status. Logs for this
--   stage list the installation steps and whether or not the install
--   completed successfully. Access the logs by using the URL in
--   <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_VALIDATING_RUNTIME_CONFIG -- The build process was
--   successful, and the GameLift is now verifying that the game server
--   launch paths, which are specified in the fleet's runtime
--   configuration, exist. If any listed launch path exists, GameLift tries
--   to launch a game server process and waits for the process to report
--   ready. Failures in this stage prevent a fleet from moving to
--   <tt>ACTIVE</tt> status. Logs for this stage list the launch paths in
--   the runtime configuration and indicate whether each is found. Access
--   the logs by using the URL in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_STATE_VALIDATING -- Fleet status changed from
--   <tt>DOWNLOADING</tt> to <tt>VALIDATING</tt>.</li>
--   <li>FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path does not exist on the instance.</li>
--   <li>FLEET_STATE_BUILDING -- Fleet status changed from
--   <tt>VALIDATING</tt> to <tt>BUILDING</tt>.</li>
--   <li>FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path failed to run on the fleet instance.</li>
--   <li>FLEET_STATE_ACTIVATING -- Fleet status changed from
--   <tt>BUILDING</tt> to <tt>ACTIVATING</tt>.</li>
--   <li>FLEET_ACTIVATION_FAILED - The fleet failed to successfully
--   complete one of the steps in the fleet activation process. This event
--   code indicates that the game build was successfully downloaded to a
--   fleet instance, built, and validated, but was not able to start a
--   server process. Learn more at <a>Debug Fleet Creation Issues</a></li>
--   <li>FLEET_STATE_ACTIVE -- The fleet's status changed from
--   <tt>ACTIVATING</tt> to <tt>ACTIVE</tt>. The fleet is now ready to host
--   game sessions.</li>
--   </ul>
--   
--   <b>VPC peering events:</b>
--   
--   <ul>
--   <li>FLEET_VPC_PEERING_SUCCEEDED -- A VPC peering connection has been
--   established between the VPC for an GameLift fleet and a VPC in your
--   AWS account.</li>
--   <li>FLEET_VPC_PEERING_FAILED -- A requested VPC peering connection has
--   failed. Event details and status information (see
--   DescribeVpcPeeringConnections) provide additional detail. A common
--   reason for peering failure is that the two VPCs have overlapping CIDR
--   blocks of IPv4 addresses. To resolve this, change the CIDR block for
--   the VPC in your AWS account. For more information on VPC peering
--   failures, see
--   <a>https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/invalid-peering-configurations.html</a></li>
--   <li>FLEET_VPC_PEERING_DELETED -- A VPC peering connection has been
--   successfully deleted.</li>
--   </ul>
--   
--   <b>Spot instance events:</b>
--   
--   <ul>
--   <li>INSTANCE_INTERRUPTED -- A spot instance was interrupted by EC2
--   with a two-minute notification.</li>
--   </ul>
--   
--   <b>Other fleet events:</b>
--   
--   <ul>
--   <li>FLEET_SCALING_EVENT -- A change was made to the fleet's capacity
--   settings (desired instances, minimum/maximum scaling limits). Event
--   messaging includes the new capacity settings.</li>
--   <li>FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED -- A change was
--   made to the fleet's game session protection policy setting. Event
--   messaging includes both the old and new policy setting.</li>
--   <li>FLEET_DELETED -- A request to delete a fleet was initiated.</li>
--   <li>GENERIC_EVENT -- An unspecified event has occurred.</li>
--   </ul>
event_eventCode :: Lens' Event (Maybe EventCode)

-- | A unique identifier for a fleet event.
event_eventId :: Lens' Event (Maybe Text)

-- | Additional information related to the event.
event_message :: Lens' Event (Maybe Text)

-- | Time stamp indicating when this event occurred. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
event_eventTime :: Lens' Event (Maybe UTCTime)

-- | Location of stored logs with additional detail that is related to the
--   event. This is useful for debugging issues. The URL is valid for 15
--   minutes. You can also access fleet creation logs through the GameLift
--   console.
event_preSignedLogUrl :: Lens' Event (Maybe Text)

-- | A list of fleet locations where a game session queue can place new
--   game sessions. You can use a filter to temporarily turn off placements
--   for specific locations. For queues that have multi-location fleets,
--   you can use a filter configuration allow placement with some, but not
--   all of these locations.
--   
--   Filter configurations are part of a GameSessionQueue.
--   
--   <i>See:</i> <a>newFilterConfiguration</a> smart constructor.
data FilterConfiguration
FilterConfiguration' :: Maybe (NonEmpty Text) -> FilterConfiguration

-- | A list of locations to allow game session placement in, in the form of
--   AWS Region codes such as <tt>us-west-2</tt>.
[$sel:allowedLocations:FilterConfiguration'] :: FilterConfiguration -> Maybe (NonEmpty Text)

-- | Create a value of <a>FilterConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowedLocations:FilterConfiguration'</a>,
--   <a>filterConfiguration_allowedLocations</a> - A list of locations to
--   allow game session placement in, in the form of AWS Region codes such
--   as <tt>us-west-2</tt>.
newFilterConfiguration :: FilterConfiguration

-- | A list of locations to allow game session placement in, in the form of
--   AWS Region codes such as <tt>us-west-2</tt>.
filterConfiguration_allowedLocations :: Lens' FilterConfiguration (Maybe (NonEmpty Text))

-- | Describes a GameLift fleet of game hosting resources.
--   
--   <b>Related actions</b>
--   
--   CreateFleet | DescribeFleetAttributes
--   
--   <i>See:</i> <a>newFleetAttributes</a> smart constructor.
data FleetAttributes
FleetAttributes' :: Maybe POSIX -> Maybe FleetStatus -> Maybe EC2InstanceType -> Maybe FleetType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CertificateConfiguration -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ProtectionPolicy -> Maybe (NonEmpty FleetAction) -> Maybe POSIX -> Maybe ResourceCreationLimitPolicy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe OperatingSystem -> Maybe Text -> FleetAttributes

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:FleetAttributes'] :: FleetAttributes -> Maybe POSIX

-- | Current status of the fleet. Possible fleet statuses include the
--   following:
--   
--   <ul>
--   <li><b>NEW</b> -- A new fleet has been defined and desired instances
--   is set to 1.</li>
--   <li><b>DOWNLOADING/VALIDATING/BUILDING/ACTIVATING</b> -- GameLift is
--   setting up the new fleet, creating new instances with the game build
--   or Realtime script and starting server processes.</li>
--   <li><b>ACTIVE</b> -- Hosts can now accept game sessions.</li>
--   <li><b>ERROR</b> -- An error occurred when downloading, validating,
--   building, or activating the fleet.</li>
--   <li><b>DELETING</b> -- Hosts are responding to a delete fleet
--   request.</li>
--   <li><b>TERMINATED</b> -- The fleet no longer exists.</li>
--   </ul>
[$sel:status:FleetAttributes'] :: FleetAttributes -> Maybe FleetStatus

-- | The EC2 instance type that determines the computing resources of each
--   instance in the fleet. Instance type defines the CPU, memory, storage,
--   and networking capacity. See <a>Amazon EC2 Instance Types</a> for
--   detailed descriptions.
[$sel:instanceType:FleetAttributes'] :: FleetAttributes -> Maybe EC2InstanceType

-- | The kind of instances, On-Demand or Spot, that this fleet uses.
[$sel:fleetType:FleetAttributes'] :: FleetAttributes -> Maybe FleetType

-- | A unique identifier for the fleet.
[$sel:fleetId:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift fleet ARN, the resource ID matches the <tt>FleetId</tt>
--   value.
[$sel:fleetArn:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | A unique identifier for an AWS IAM role that manages access to your
--   AWS services. With an instance role ARN set, any application that runs
--   on an instance in this fleet can assume the role, including install
--   scripts, server processes, and daemons (background processes). Create
--   a role or look up a role's ARN by using the <a>IAM dashboard</a> in
--   the AWS Management Console. Learn more about using on-box credentials
--   for your game servers at <a>Access external resources from a game
--   server</a>.
[$sel:instanceRoleArn:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | Indicates whether a TLS/SSL certificate was generated for the fleet.
[$sel:certificateConfiguration:FleetAttributes'] :: FleetAttributes -> Maybe CertificateConfiguration

-- | <b>This parameter is no longer used.</b> Server launch paths are now
--   defined using the fleet's RuntimeConfiguration parameter. Requests
--   that use this parameter instead continue to be valid.
[$sel:serverLaunchPath:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | <b>This parameter is no longer used.</b> Game session log paths are
--   now defined using the GameLift server API <tt>ProcessReady()</tt>
--   <tt>logParameters</tt>. See more information in the <a>Server API
--   Reference</a>.
[$sel:logPaths:FleetAttributes'] :: FleetAttributes -> Maybe [Text]

-- | <b>This parameter is no longer used.</b> Server launch parameters are
--   now defined using the fleet's RuntimeConfiguration parameter. Requests
--   that use this parameter instead continue to be valid.
[$sel:serverLaunchParameters:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   script resource that is deployed on instances in this fleet. In a
--   GameLift script ARN, the resource ID matches the <tt>ScriptId</tt>
--   value.
[$sel:scriptArn:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | A descriptive label that is associated with a fleet. Fleet names do
--   not need to be unique.
[$sel:name:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | The type of game session protection to set on all new instances that
--   are started in the fleet.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
[$sel:newGameSessionProtectionPolicy':FleetAttributes'] :: FleetAttributes -> Maybe ProtectionPolicy

-- | A list of fleet activity that has been suspended using
--   StopFleetActions. This includes fleet auto-scaling.
[$sel:stoppedActions:FleetAttributes'] :: FleetAttributes -> Maybe (NonEmpty FleetAction)

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:terminationTime:FleetAttributes'] :: FleetAttributes -> Maybe POSIX

-- | The fleet policy that limits the number of game sessions an individual
--   player can create over a span of time.
[$sel:resourceCreationLimitPolicy:FleetAttributes'] :: FleetAttributes -> Maybe ResourceCreationLimitPolicy

-- | A human-readable description of the fleet.
[$sel:description:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | A unique identifier for the build resource that is deployed on
--   instances in this fleet.
[$sel:buildId:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   build resource that is deployed on instances in this fleet. In a
--   GameLift build ARN, the resource ID matches the <tt>BuildId</tt>
--   value.
[$sel:buildArn:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | Name of a metric group that metrics for this fleet are added to. In
--   Amazon CloudWatch, you can view aggregated metrics for fleets that are
--   in a metric group. A fleet can be included in only one metric group at
--   a time.
[$sel:metricGroups:FleetAttributes'] :: FleetAttributes -> Maybe [Text]

-- | The operating system of the fleet's computing resources. A fleet's
--   operating system is determined by the OS of the build or script that
--   is deployed on this fleet.
[$sel:operatingSystem:FleetAttributes'] :: FleetAttributes -> Maybe OperatingSystem

-- | A unique identifier for the Realtime script resource that is deployed
--   on instances in this fleet.
[$sel:scriptId:FleetAttributes'] :: FleetAttributes -> Maybe Text

-- | Create a value of <a>FleetAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FleetAttributes'</a>,
--   <a>fleetAttributes_creationTime</a> - A time stamp indicating when
--   this data object was created. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:FleetAttributes'</a>, <a>fleetAttributes_status</a> -
--   Current status of the fleet. Possible fleet statuses include the
--   following:
--   
--   <ul>
--   <li><b>NEW</b> -- A new fleet has been defined and desired instances
--   is set to 1.</li>
--   <li><b>DOWNLOADING/VALIDATING/BUILDING/ACTIVATING</b> -- GameLift is
--   setting up the new fleet, creating new instances with the game build
--   or Realtime script and starting server processes.</li>
--   <li><b>ACTIVE</b> -- Hosts can now accept game sessions.</li>
--   <li><b>ERROR</b> -- An error occurred when downloading, validating,
--   building, or activating the fleet.</li>
--   <li><b>DELETING</b> -- Hosts are responding to a delete fleet
--   request.</li>
--   <li><b>TERMINATED</b> -- The fleet no longer exists.</li>
--   </ul>
--   
--   <a>$sel:instanceType:FleetAttributes'</a>,
--   <a>fleetAttributes_instanceType</a> - The EC2 instance type that
--   determines the computing resources of each instance in the fleet.
--   Instance type defines the CPU, memory, storage, and networking
--   capacity. See <a>Amazon EC2 Instance Types</a> for detailed
--   descriptions.
--   
--   <a>$sel:fleetType:FleetAttributes'</a>,
--   <a>fleetAttributes_fleetType</a> - The kind of instances, On-Demand or
--   Spot, that this fleet uses.
--   
--   <a>$sel:fleetId:FleetAttributes'</a>, <a>fleetAttributes_fleetId</a> -
--   A unique identifier for the fleet.
--   
--   <a>$sel:fleetArn:FleetAttributes'</a>, <a>fleetAttributes_fleetArn</a>
--   - The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift fleet ARN, the resource ID matches the <tt>FleetId</tt>
--   value.
--   
--   <a>$sel:instanceRoleArn:FleetAttributes'</a>,
--   <a>fleetAttributes_instanceRoleArn</a> - A unique identifier for an
--   AWS IAM role that manages access to your AWS services. With an
--   instance role ARN set, any application that runs on an instance in
--   this fleet can assume the role, including install scripts, server
--   processes, and daemons (background processes). Create a role or look
--   up a role's ARN by using the <a>IAM dashboard</a> in the AWS
--   Management Console. Learn more about using on-box credentials for your
--   game servers at <a>Access external resources from a game server</a>.
--   
--   <a>$sel:certificateConfiguration:FleetAttributes'</a>,
--   <a>fleetAttributes_certificateConfiguration</a> - Indicates whether a
--   TLS/SSL certificate was generated for the fleet.
--   
--   <a>$sel:serverLaunchPath:FleetAttributes'</a>,
--   <a>fleetAttributes_serverLaunchPath</a> - <b>This parameter is no
--   longer used.</b> Server launch paths are now defined using the fleet's
--   RuntimeConfiguration parameter. Requests that use this parameter
--   instead continue to be valid.
--   
--   <a>$sel:logPaths:FleetAttributes'</a>, <a>fleetAttributes_logPaths</a>
--   - <b>This parameter is no longer used.</b> Game session log paths are
--   now defined using the GameLift server API <tt>ProcessReady()</tt>
--   <tt>logParameters</tt>. See more information in the <a>Server API
--   Reference</a>.
--   
--   <a>$sel:serverLaunchParameters:FleetAttributes'</a>,
--   <a>fleetAttributes_serverLaunchParameters</a> - <b>This parameter is
--   no longer used.</b> Server launch parameters are now defined using the
--   fleet's RuntimeConfiguration parameter. Requests that use this
--   parameter instead continue to be valid.
--   
--   <a>$sel:scriptArn:FleetAttributes'</a>,
--   <a>fleetAttributes_scriptArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift script resource that is
--   deployed on instances in this fleet. In a GameLift script ARN, the
--   resource ID matches the <tt>ScriptId</tt> value.
--   
--   <a>$sel:name:FleetAttributes'</a>, <a>fleetAttributes_name</a> - A
--   descriptive label that is associated with a fleet. Fleet names do not
--   need to be unique.
--   
--   <a>$sel:newGameSessionProtectionPolicy':FleetAttributes'</a>,
--   <a>fleetAttributes_newGameSessionProtectionPolicy</a> - The type of
--   game session protection to set on all new instances that are started
--   in the fleet.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
--   
--   <a>$sel:stoppedActions:FleetAttributes'</a>,
--   <a>fleetAttributes_stoppedActions</a> - A list of fleet activity that
--   has been suspended using StopFleetActions. This includes fleet
--   auto-scaling.
--   
--   <a>$sel:terminationTime:FleetAttributes'</a>,
--   <a>fleetAttributes_terminationTime</a> - A time stamp indicating when
--   this data object was terminated. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:resourceCreationLimitPolicy:FleetAttributes'</a>,
--   <a>fleetAttributes_resourceCreationLimitPolicy</a> - The fleet policy
--   that limits the number of game sessions an individual player can
--   create over a span of time.
--   
--   <a>$sel:description:FleetAttributes'</a>,
--   <a>fleetAttributes_description</a> - A human-readable description of
--   the fleet.
--   
--   <a>$sel:buildId:FleetAttributes'</a>, <a>fleetAttributes_buildId</a> -
--   A unique identifier for the build resource that is deployed on
--   instances in this fleet.
--   
--   <a>$sel:buildArn:FleetAttributes'</a>, <a>fleetAttributes_buildArn</a>
--   - The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   build resource that is deployed on instances in this fleet. In a
--   GameLift build ARN, the resource ID matches the <tt>BuildId</tt>
--   value.
--   
--   <a>$sel:metricGroups:FleetAttributes'</a>,
--   <a>fleetAttributes_metricGroups</a> - Name of a metric group that
--   metrics for this fleet are added to. In Amazon CloudWatch, you can
--   view aggregated metrics for fleets that are in a metric group. A fleet
--   can be included in only one metric group at a time.
--   
--   <a>$sel:operatingSystem:FleetAttributes'</a>,
--   <a>fleetAttributes_operatingSystem</a> - The operating system of the
--   fleet's computing resources. A fleet's operating system is determined
--   by the OS of the build or script that is deployed on this fleet.
--   
--   <a>$sel:scriptId:FleetAttributes'</a>, <a>fleetAttributes_scriptId</a>
--   - A unique identifier for the Realtime script resource that is
--   deployed on instances in this fleet.
newFleetAttributes :: FleetAttributes

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
fleetAttributes_creationTime :: Lens' FleetAttributes (Maybe UTCTime)

-- | Current status of the fleet. Possible fleet statuses include the
--   following:
--   
--   <ul>
--   <li><b>NEW</b> -- A new fleet has been defined and desired instances
--   is set to 1.</li>
--   <li><b>DOWNLOADING/VALIDATING/BUILDING/ACTIVATING</b> -- GameLift is
--   setting up the new fleet, creating new instances with the game build
--   or Realtime script and starting server processes.</li>
--   <li><b>ACTIVE</b> -- Hosts can now accept game sessions.</li>
--   <li><b>ERROR</b> -- An error occurred when downloading, validating,
--   building, or activating the fleet.</li>
--   <li><b>DELETING</b> -- Hosts are responding to a delete fleet
--   request.</li>
--   <li><b>TERMINATED</b> -- The fleet no longer exists.</li>
--   </ul>
fleetAttributes_status :: Lens' FleetAttributes (Maybe FleetStatus)

-- | The EC2 instance type that determines the computing resources of each
--   instance in the fleet. Instance type defines the CPU, memory, storage,
--   and networking capacity. See <a>Amazon EC2 Instance Types</a> for
--   detailed descriptions.
fleetAttributes_instanceType :: Lens' FleetAttributes (Maybe EC2InstanceType)

-- | The kind of instances, On-Demand or Spot, that this fleet uses.
fleetAttributes_fleetType :: Lens' FleetAttributes (Maybe FleetType)

-- | A unique identifier for the fleet.
fleetAttributes_fleetId :: Lens' FleetAttributes (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift fleet ARN, the resource ID matches the <tt>FleetId</tt>
--   value.
fleetAttributes_fleetArn :: Lens' FleetAttributes (Maybe Text)

-- | A unique identifier for an AWS IAM role that manages access to your
--   AWS services. With an instance role ARN set, any application that runs
--   on an instance in this fleet can assume the role, including install
--   scripts, server processes, and daemons (background processes). Create
--   a role or look up a role's ARN by using the <a>IAM dashboard</a> in
--   the AWS Management Console. Learn more about using on-box credentials
--   for your game servers at <a>Access external resources from a game
--   server</a>.
fleetAttributes_instanceRoleArn :: Lens' FleetAttributes (Maybe Text)

-- | Indicates whether a TLS/SSL certificate was generated for the fleet.
fleetAttributes_certificateConfiguration :: Lens' FleetAttributes (Maybe CertificateConfiguration)

-- | <b>This parameter is no longer used.</b> Server launch paths are now
--   defined using the fleet's RuntimeConfiguration parameter. Requests
--   that use this parameter instead continue to be valid.
fleetAttributes_serverLaunchPath :: Lens' FleetAttributes (Maybe Text)

-- | <b>This parameter is no longer used.</b> Game session log paths are
--   now defined using the GameLift server API <tt>ProcessReady()</tt>
--   <tt>logParameters</tt>. See more information in the <a>Server API
--   Reference</a>.
fleetAttributes_logPaths :: Lens' FleetAttributes (Maybe [Text])

-- | <b>This parameter is no longer used.</b> Server launch parameters are
--   now defined using the fleet's RuntimeConfiguration parameter. Requests
--   that use this parameter instead continue to be valid.
fleetAttributes_serverLaunchParameters :: Lens' FleetAttributes (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   script resource that is deployed on instances in this fleet. In a
--   GameLift script ARN, the resource ID matches the <tt>ScriptId</tt>
--   value.
fleetAttributes_scriptArn :: Lens' FleetAttributes (Maybe Text)

-- | A descriptive label that is associated with a fleet. Fleet names do
--   not need to be unique.
fleetAttributes_name :: Lens' FleetAttributes (Maybe Text)

-- | The type of game session protection to set on all new instances that
--   are started in the fleet.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
fleetAttributes_newGameSessionProtectionPolicy :: Lens' FleetAttributes (Maybe ProtectionPolicy)

-- | A list of fleet activity that has been suspended using
--   StopFleetActions. This includes fleet auto-scaling.
fleetAttributes_stoppedActions :: Lens' FleetAttributes (Maybe (NonEmpty FleetAction))

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
fleetAttributes_terminationTime :: Lens' FleetAttributes (Maybe UTCTime)

-- | The fleet policy that limits the number of game sessions an individual
--   player can create over a span of time.
fleetAttributes_resourceCreationLimitPolicy :: Lens' FleetAttributes (Maybe ResourceCreationLimitPolicy)

-- | A human-readable description of the fleet.
fleetAttributes_description :: Lens' FleetAttributes (Maybe Text)

-- | A unique identifier for the build resource that is deployed on
--   instances in this fleet.
fleetAttributes_buildId :: Lens' FleetAttributes (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   build resource that is deployed on instances in this fleet. In a
--   GameLift build ARN, the resource ID matches the <tt>BuildId</tt>
--   value.
fleetAttributes_buildArn :: Lens' FleetAttributes (Maybe Text)

-- | Name of a metric group that metrics for this fleet are added to. In
--   Amazon CloudWatch, you can view aggregated metrics for fleets that are
--   in a metric group. A fleet can be included in only one metric group at
--   a time.
fleetAttributes_metricGroups :: Lens' FleetAttributes (Maybe [Text])

-- | The operating system of the fleet's computing resources. A fleet's
--   operating system is determined by the OS of the build or script that
--   is deployed on this fleet.
fleetAttributes_operatingSystem :: Lens' FleetAttributes (Maybe OperatingSystem)

-- | A unique identifier for the Realtime script resource that is deployed
--   on instances in this fleet.
fleetAttributes_scriptId :: Lens' FleetAttributes (Maybe Text)

-- | Current resource capacity settings in a specified fleet or location.
--   The location value might refer to a fleet's remote location or its
--   home Region.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetCapacity | DescribeFleetLocationCapacity |
--   UpdateFleetCapacity
--   
--   <i>See:</i> <a>newFleetCapacity</a> smart constructor.
data FleetCapacity
FleetCapacity' :: Maybe EC2InstanceType -> Maybe Text -> Maybe Text -> Maybe EC2InstanceCounts -> Maybe Text -> FleetCapacity

-- | The EC2 instance type that is used for all instances in a fleet. The
--   instance type determines the computing resources in use, including
--   CPU, memory, storage, and networking capacity. See <a>Amazon EC2
--   Instance Types</a> for detailed descriptions.
[$sel:instanceType:FleetCapacity'] :: FleetCapacity -> Maybe EC2InstanceType

-- | A unique identifier for the fleet associated with the location.
[$sel:fleetId:FleetCapacity'] :: FleetCapacity -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:FleetCapacity'] :: FleetCapacity -> Maybe Text

-- | The current instance count and capacity settings for the fleet
--   location.
[$sel:instanceCounts:FleetCapacity'] :: FleetCapacity -> Maybe EC2InstanceCounts

-- | The fleet location for the instance count information, expressed as an
--   AWS Region code, such as <tt>us-west-2</tt>.
[$sel:location:FleetCapacity'] :: FleetCapacity -> Maybe Text

-- | Create a value of <a>FleetCapacity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceType:FleetCapacity'</a>,
--   <a>fleetCapacity_instanceType</a> - The EC2 instance type that is used
--   for all instances in a fleet. The instance type determines the
--   computing resources in use, including CPU, memory, storage, and
--   networking capacity. See <a>Amazon EC2 Instance Types</a> for detailed
--   descriptions.
--   
--   <a>$sel:fleetId:FleetCapacity'</a>, <a>fleetCapacity_fleetId</a> - A
--   unique identifier for the fleet associated with the location.
--   
--   <a>$sel:fleetArn:FleetCapacity'</a>, <a>fleetCapacity_fleetArn</a> -
--   The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:instanceCounts:FleetCapacity'</a>,
--   <a>fleetCapacity_instanceCounts</a> - The current instance count and
--   capacity settings for the fleet location.
--   
--   <a>$sel:location:FleetCapacity'</a>, <a>fleetCapacity_location</a> -
--   The fleet location for the instance count information, expressed as an
--   AWS Region code, such as <tt>us-west-2</tt>.
newFleetCapacity :: FleetCapacity

-- | The EC2 instance type that is used for all instances in a fleet. The
--   instance type determines the computing resources in use, including
--   CPU, memory, storage, and networking capacity. See <a>Amazon EC2
--   Instance Types</a> for detailed descriptions.
fleetCapacity_instanceType :: Lens' FleetCapacity (Maybe EC2InstanceType)

-- | A unique identifier for the fleet associated with the location.
fleetCapacity_fleetId :: Lens' FleetCapacity (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
fleetCapacity_fleetArn :: Lens' FleetCapacity (Maybe Text)

-- | The current instance count and capacity settings for the fleet
--   location.
fleetCapacity_instanceCounts :: Lens' FleetCapacity (Maybe EC2InstanceCounts)

-- | The fleet location for the instance count information, expressed as an
--   AWS Region code, such as <tt>us-west-2</tt>.
fleetCapacity_location :: Lens' FleetCapacity (Maybe Text)

-- | Current resource utilization statistics in a specified fleet or
--   location. The location value might refer to a fleet's remote location
--   or its home Region.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetUtilization | DescribeFleetLocationUtilization
--   
--   <i>See:</i> <a>newFleetUtilization</a> smart constructor.
data FleetUtilization
FleetUtilization' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> FleetUtilization

-- | The number of active game sessions that are currently being hosted
--   across all instances in the fleet location.
[$sel:activeGameSessionCount:FleetUtilization'] :: FleetUtilization -> Maybe Natural

-- | The number of active player sessions that are currently being hosted
--   across all instances in the fleet location.
[$sel:currentPlayerSessionCount:FleetUtilization'] :: FleetUtilization -> Maybe Natural

-- | The maximum number of players allowed across all game sessions that
--   are currently being hosted across all instances in the fleet location.
[$sel:maximumPlayerSessionCount:FleetUtilization'] :: FleetUtilization -> Maybe Natural

-- | A unique identifier for the fleet associated with the location.
[$sel:fleetId:FleetUtilization'] :: FleetUtilization -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:FleetUtilization'] :: FleetUtilization -> Maybe Text

-- | The number of server processes in <tt>ACTIVE</tt> status that are
--   currently running across all instances in the fleet location.
[$sel:activeServerProcessCount:FleetUtilization'] :: FleetUtilization -> Maybe Natural

-- | The fleet location for the fleet utilization information, expressed as
--   an AWS Region code, such as <tt>us-west-2</tt>.
[$sel:location:FleetUtilization'] :: FleetUtilization -> Maybe Text

-- | Create a value of <a>FleetUtilization</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activeGameSessionCount:FleetUtilization'</a>,
--   <a>fleetUtilization_activeGameSessionCount</a> - The number of active
--   game sessions that are currently being hosted across all instances in
--   the fleet location.
--   
--   <a>$sel:currentPlayerSessionCount:FleetUtilization'</a>,
--   <a>fleetUtilization_currentPlayerSessionCount</a> - The number of
--   active player sessions that are currently being hosted across all
--   instances in the fleet location.
--   
--   <a>$sel:maximumPlayerSessionCount:FleetUtilization'</a>,
--   <a>fleetUtilization_maximumPlayerSessionCount</a> - The maximum number
--   of players allowed across all game sessions that are currently being
--   hosted across all instances in the fleet location.
--   
--   <a>$sel:fleetId:FleetUtilization'</a>, <a>fleetUtilization_fleetId</a>
--   - A unique identifier for the fleet associated with the location.
--   
--   <a>$sel:fleetArn:FleetUtilization'</a>,
--   <a>fleetUtilization_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:activeServerProcessCount:FleetUtilization'</a>,
--   <a>fleetUtilization_activeServerProcessCount</a> - The number of
--   server processes in <tt>ACTIVE</tt> status that are currently running
--   across all instances in the fleet location.
--   
--   <a>$sel:location:FleetUtilization'</a>,
--   <a>fleetUtilization_location</a> - The fleet location for the fleet
--   utilization information, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
newFleetUtilization :: FleetUtilization

-- | The number of active game sessions that are currently being hosted
--   across all instances in the fleet location.
fleetUtilization_activeGameSessionCount :: Lens' FleetUtilization (Maybe Natural)

-- | The number of active player sessions that are currently being hosted
--   across all instances in the fleet location.
fleetUtilization_currentPlayerSessionCount :: Lens' FleetUtilization (Maybe Natural)

-- | The maximum number of players allowed across all game sessions that
--   are currently being hosted across all instances in the fleet location.
fleetUtilization_maximumPlayerSessionCount :: Lens' FleetUtilization (Maybe Natural)

-- | A unique identifier for the fleet associated with the location.
fleetUtilization_fleetId :: Lens' FleetUtilization (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
fleetUtilization_fleetArn :: Lens' FleetUtilization (Maybe Text)

-- | The number of server processes in <tt>ACTIVE</tt> status that are
--   currently running across all instances in the fleet location.
fleetUtilization_activeServerProcessCount :: Lens' FleetUtilization (Maybe Natural)

-- | The fleet location for the fleet utilization information, expressed as
--   an AWS Region code, such as <tt>us-west-2</tt>.
fleetUtilization_location :: Lens' FleetUtilization (Maybe Text)

-- | Set of key-value pairs that contain information about a game session.
--   When included in a game session request, these properties communicate
--   details to be used when setting up the new game session. For example,
--   a game property might specify a game mode, level, or map. Game
--   properties are passed to the game server process when initiating a new
--   game session. For more information, see the <a>GameLift Developer
--   Guide</a>.
--   
--   <i>See:</i> <a>newGameProperty</a> smart constructor.
data GameProperty
GameProperty' :: Text -> Text -> GameProperty

-- | The game property identifier.
[$sel:key:GameProperty'] :: GameProperty -> Text

-- | The game property value.
[$sel:value:GameProperty'] :: GameProperty -> Text

-- | Create a value of <a>GameProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:GameProperty'</a>, <a>gameProperty_key</a> - The game
--   property identifier.
--   
--   <a>$sel:value:GameProperty'</a>, <a>gameProperty_value</a> - The game
--   property value.
newGameProperty :: Text -> Text -> GameProperty

-- | The game property identifier.
gameProperty_key :: Lens' GameProperty Text

-- | The game property value.
gameProperty_value :: Lens' GameProperty Text

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Properties describing a game server that is running on an instance in
--   a GameServerGroup.
--   
--   A game server is created by a successful call to
--   <tt>RegisterGameServer</tt> and deleted by calling
--   <tt>DeregisterGameServer</tt>. A game server is claimed to host a game
--   session by calling <tt>ClaimGameServer</tt>.
--   
--   <b>Related actions</b>
--   
--   RegisterGameServer | ListGameServers | ClaimGameServer |
--   DescribeGameServer | UpdateGameServer | DeregisterGameServer | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newGameServer</a> smart constructor.
data GameServer
GameServer' :: Maybe Text -> Maybe GameServerUtilizationStatus -> Maybe GameServerClaimStatus -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> GameServer

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
[$sel:instanceId:GameServer'] :: GameServer -> Maybe Text

-- | Indicates whether the game server is currently available for new games
--   or is busy. Possible statuses include:
--   
--   <ul>
--   <li><tt>AVAILABLE</tt> - The game server is available to be claimed. A
--   game server that has been claimed remains in this status until it
--   reports game hosting activity.</li>
--   <li><tt>UTILIZED</tt> - The game server is currently hosting a game
--   session with players.</li>
--   </ul>
[$sel:utilizationStatus:GameServer'] :: GameServer -> Maybe GameServerUtilizationStatus

-- | Indicates when an available game server has been reserved for gameplay
--   but has not yet started hosting a game. Once it is claimed, the game
--   server remains in <tt>CLAIMED</tt> status for a maximum of one minute.
--   During this time, game clients connect to the game server to start the
--   game and trigger the game server to update its utilization status.
--   After one minute, the game server claim status reverts to null.
[$sel:claimStatus:GameServer'] :: GameServer -> Maybe GameServerClaimStatus

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
[$sel:gameServerData:GameServer'] :: GameServer -> Maybe Text

-- | Timestamp that indicates the last time the game server was claimed
--   with a ClaimGameServer request. The format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   This value is used to calculate when a claimed game server's status
--   should revert to null.
[$sel:lastClaimTime:GameServer'] :: GameServer -> Maybe POSIX

-- | Timestamp that indicates when the game server was created with a
--   RegisterGameServer request. The format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
[$sel:registrationTime:GameServer'] :: GameServer -> Maybe POSIX

-- | The ARN identifier for the game server group where the game server is
--   located.
[$sel:gameServerGroupArn:GameServer'] :: GameServer -> Maybe Text

-- | A custom string that uniquely identifies the game server. Game server
--   IDs are developer-defined and are unique across all game server groups
--   in an AWS account.
[$sel:gameServerId:GameServer'] :: GameServer -> Maybe Text

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
[$sel:gameServerGroupName:GameServer'] :: GameServer -> Maybe Text

-- | The port and IP address that must be used to establish a client
--   connection to the game server.
[$sel:connectionInfo:GameServer'] :: GameServer -> Maybe Text

-- | Timestamp that indicates the last time the game server was updated
--   with health status using an UpdateGameServer request. The format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>). After game server registration, this
--   property is only changed when a game server update specifies a health
--   check value.
[$sel:lastHealthCheckTime:GameServer'] :: GameServer -> Maybe POSIX

-- | Create a value of <a>GameServer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:GameServer'</a>, <a>gameServer_instanceId</a> - The
--   unique identifier for the instance where the game server is running.
--   This ID is available in the instance metadata. EC2 instance IDs use a
--   17-character format, for example: <tt>i-1234567890abcdef0</tt>.
--   
--   <a>$sel:utilizationStatus:GameServer'</a>,
--   <a>gameServer_utilizationStatus</a> - Indicates whether the game
--   server is currently available for new games or is busy. Possible
--   statuses include:
--   
--   <ul>
--   <li><tt>AVAILABLE</tt> - The game server is available to be claimed. A
--   game server that has been claimed remains in this status until it
--   reports game hosting activity.</li>
--   <li><tt>UTILIZED</tt> - The game server is currently hosting a game
--   session with players.</li>
--   </ul>
--   
--   <a>$sel:claimStatus:GameServer'</a>, <a>gameServer_claimStatus</a> -
--   Indicates when an available game server has been reserved for gameplay
--   but has not yet started hosting a game. Once it is claimed, the game
--   server remains in <tt>CLAIMED</tt> status for a maximum of one minute.
--   During this time, game clients connect to the game server to start the
--   game and trigger the game server to update its utilization status.
--   After one minute, the game server claim status reverts to null.
--   
--   <a>$sel:gameServerData:GameServer'</a>,
--   <a>gameServer_gameServerData</a> - A set of custom game server
--   properties, formatted as a single string value. This data is passed to
--   a game client or service when it requests information on game servers
--   using ListGameServers or ClaimGameServer.
--   
--   <a>$sel:lastClaimTime:GameServer'</a>, <a>gameServer_lastClaimTime</a>
--   - Timestamp that indicates the last time the game server was claimed
--   with a ClaimGameServer request. The format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   This value is used to calculate when a claimed game server's status
--   should revert to null.
--   
--   <a>$sel:registrationTime:GameServer'</a>,
--   <a>gameServer_registrationTime</a> - Timestamp that indicates when the
--   game server was created with a RegisterGameServer request. The format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:gameServerGroupArn:GameServer'</a>,
--   <a>gameServer_gameServerGroupArn</a> - The ARN identifier for the game
--   server group where the game server is located.
--   
--   <a>$sel:gameServerId:GameServer'</a>, <a>gameServer_gameServerId</a> -
--   A custom string that uniquely identifies the game server. Game server
--   IDs are developer-defined and are unique across all game server groups
--   in an AWS account.
--   
--   <a>$sel:gameServerGroupName:GameServer'</a>,
--   <a>gameServer_gameServerGroupName</a> - A unique identifier for the
--   game server group where the game server is running. Use either the
--   GameServerGroup name or ARN value.
--   
--   <a>$sel:connectionInfo:GameServer'</a>,
--   <a>gameServer_connectionInfo</a> - The port and IP address that must
--   be used to establish a client connection to the game server.
--   
--   <a>$sel:lastHealthCheckTime:GameServer'</a>,
--   <a>gameServer_lastHealthCheckTime</a> - Timestamp that indicates the
--   last time the game server was updated with health status using an
--   UpdateGameServer request. The format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>). After
--   game server registration, this property is only changed when a game
--   server update specifies a health check value.
newGameServer :: GameServer

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
gameServer_instanceId :: Lens' GameServer (Maybe Text)

-- | Indicates whether the game server is currently available for new games
--   or is busy. Possible statuses include:
--   
--   <ul>
--   <li><tt>AVAILABLE</tt> - The game server is available to be claimed. A
--   game server that has been claimed remains in this status until it
--   reports game hosting activity.</li>
--   <li><tt>UTILIZED</tt> - The game server is currently hosting a game
--   session with players.</li>
--   </ul>
gameServer_utilizationStatus :: Lens' GameServer (Maybe GameServerUtilizationStatus)

-- | Indicates when an available game server has been reserved for gameplay
--   but has not yet started hosting a game. Once it is claimed, the game
--   server remains in <tt>CLAIMED</tt> status for a maximum of one minute.
--   During this time, game clients connect to the game server to start the
--   game and trigger the game server to update its utilization status.
--   After one minute, the game server claim status reverts to null.
gameServer_claimStatus :: Lens' GameServer (Maybe GameServerClaimStatus)

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
gameServer_gameServerData :: Lens' GameServer (Maybe Text)

-- | Timestamp that indicates the last time the game server was claimed
--   with a ClaimGameServer request. The format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   This value is used to calculate when a claimed game server's status
--   should revert to null.
gameServer_lastClaimTime :: Lens' GameServer (Maybe UTCTime)

-- | Timestamp that indicates when the game server was created with a
--   RegisterGameServer request. The format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
gameServer_registrationTime :: Lens' GameServer (Maybe UTCTime)

-- | The ARN identifier for the game server group where the game server is
--   located.
gameServer_gameServerGroupArn :: Lens' GameServer (Maybe Text)

-- | A custom string that uniquely identifies the game server. Game server
--   IDs are developer-defined and are unique across all game server groups
--   in an AWS account.
gameServer_gameServerId :: Lens' GameServer (Maybe Text)

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
gameServer_gameServerGroupName :: Lens' GameServer (Maybe Text)

-- | The port and IP address that must be used to establish a client
--   connection to the game server.
gameServer_connectionInfo :: Lens' GameServer (Maybe Text)

-- | Timestamp that indicates the last time the game server was updated
--   with health status using an UpdateGameServer request. The format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>). After game server registration, this
--   property is only changed when a game server update specifies a health
--   check value.
gameServer_lastHealthCheckTime :: Lens' GameServer (Maybe UTCTime)

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Properties that describe a game server group resource. A game server
--   group manages certain properties related to a corresponding EC2 Auto
--   Scaling group.
--   
--   A game server group is created by a successful call to
--   <tt>CreateGameServerGroup</tt> and deleted by calling
--   <tt>DeleteGameServerGroup</tt>. Game server group activity can be
--   temporarily suspended and resumed by calling
--   <tt>SuspendGameServerGroup</tt> and <tt>ResumeGameServerGroup</tt>,
--   respectively.
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newGameServerGroup</a> smart constructor.
data GameServerGroup
GameServerGroup' :: Maybe POSIX -> Maybe GameServerGroupStatus -> Maybe Text -> Maybe Text -> Maybe (NonEmpty InstanceDefinition) -> Maybe Text -> Maybe (NonEmpty GameServerGroupAction) -> Maybe Text -> Maybe BalancingStrategy -> Maybe Text -> Maybe GameServerProtectionPolicy -> Maybe POSIX -> GameServerGroup

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:GameServerGroup'] :: GameServerGroup -> Maybe POSIX

-- | The current status of the game server group. Possible statuses
--   include:
--   
--   <ul>
--   <li><tt>NEW</tt> - GameLift FleetIQ has validated the
--   <tt>CreateGameServerGroup()</tt> request.</li>
--   <li><tt>ACTIVATING</tt> - GameLift FleetIQ is setting up a game server
--   group, which includes creating an Auto Scaling group in your AWS
--   account.</li>
--   <li><tt>ACTIVE</tt> - The game server group has been successfully
--   created.</li>
--   <li><tt>DELETE_SCHEDULED</tt> - A request to delete the game server
--   group has been received.</li>
--   <li><tt>DELETING</tt> - GameLift FleetIQ has received a valid
--   <tt>DeleteGameServerGroup()</tt> request and is processing it.
--   GameLift FleetIQ must first complete and release hosts before it
--   deletes the Auto Scaling group and the game server group.</li>
--   <li><tt>DELETED</tt> - The game server group has been successfully
--   deleted.</li>
--   <li><tt>ERROR</tt> - The asynchronous processes of activating or
--   deleting a game server group has failed, resulting in an error
--   state.</li>
--   </ul>
[$sel:status:GameServerGroup'] :: GameServerGroup -> Maybe GameServerGroupStatus

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
[$sel:roleArn:GameServerGroup'] :: GameServerGroup -> Maybe Text

-- | A generated unique ID for the EC2 Auto Scaling group that is
--   associated with this game server group.
[$sel:autoScalingGroupArn:GameServerGroup'] :: GameServerGroup -> Maybe Text

-- | The set of EC2 instance types that GameLift FleetIQ can use when
--   balancing and automatically scaling instances in the corresponding
--   Auto Scaling group.
[$sel:instanceDefinitions:GameServerGroup'] :: GameServerGroup -> Maybe (NonEmpty InstanceDefinition)

-- | A generated unique ID for the game server group.
[$sel:gameServerGroupArn:GameServerGroup'] :: GameServerGroup -> Maybe Text

-- | A list of activities that are currently suspended for this game server
--   group. If this property is empty, all activities are occurring.
[$sel:suspendedActions:GameServerGroup'] :: GameServerGroup -> Maybe (NonEmpty GameServerGroupAction)

-- | A developer-defined identifier for the game server group. The name is
--   unique for each Region in each AWS account.
[$sel:gameServerGroupName:GameServerGroup'] :: GameServerGroup -> Maybe Text

-- | Indicates how GameLift FleetIQ balances the use of Spot Instances and
--   On-Demand Instances in the game server group. Method options include
--   the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
[$sel:balancingStrategy:GameServerGroup'] :: GameServerGroup -> Maybe BalancingStrategy

-- | Additional information about the current game server group status.
--   This information might provide additional insight on groups that are
--   in <tt>ERROR</tt> status.
[$sel:statusReason:GameServerGroup'] :: GameServerGroup -> Maybe Text

-- | A flag that indicates whether instances in the game server group are
--   protected from early termination. Unprotected instances that have
--   active game servers running might be terminated during a scale-down
--   event, causing players to be dropped from the game. Protected
--   instances cannot be terminated while there are active game servers
--   running except in the event of a forced game server group deletion
--   (see ). An exception to this is with Spot Instances, which can be
--   terminated by AWS regardless of protection status.
[$sel:gameServerProtectionPolicy:GameServerGroup'] :: GameServerGroup -> Maybe GameServerProtectionPolicy

-- | A timestamp that indicates when this game server group was last
--   updated.
[$sel:lastUpdatedTime:GameServerGroup'] :: GameServerGroup -> Maybe POSIX

-- | Create a value of <a>GameServerGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:GameServerGroup'</a>,
--   <a>gameServerGroup_creationTime</a> - A time stamp indicating when
--   this data object was created. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:GameServerGroup'</a>, <a>gameServerGroup_status</a> -
--   The current status of the game server group. Possible statuses
--   include:
--   
--   <ul>
--   <li><tt>NEW</tt> - GameLift FleetIQ has validated the
--   <tt>CreateGameServerGroup()</tt> request.</li>
--   <li><tt>ACTIVATING</tt> - GameLift FleetIQ is setting up a game server
--   group, which includes creating an Auto Scaling group in your AWS
--   account.</li>
--   <li><tt>ACTIVE</tt> - The game server group has been successfully
--   created.</li>
--   <li><tt>DELETE_SCHEDULED</tt> - A request to delete the game server
--   group has been received.</li>
--   <li><tt>DELETING</tt> - GameLift FleetIQ has received a valid
--   <tt>DeleteGameServerGroup()</tt> request and is processing it.
--   GameLift FleetIQ must first complete and release hosts before it
--   deletes the Auto Scaling group and the game server group.</li>
--   <li><tt>DELETED</tt> - The game server group has been successfully
--   deleted.</li>
--   <li><tt>ERROR</tt> - The asynchronous processes of activating or
--   deleting a game server group has failed, resulting in an error
--   state.</li>
--   </ul>
--   
--   <a>$sel:roleArn:GameServerGroup'</a>, <a>gameServerGroup_roleArn</a> -
--   The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
--   
--   <a>$sel:autoScalingGroupArn:GameServerGroup'</a>,
--   <a>gameServerGroup_autoScalingGroupArn</a> - A generated unique ID for
--   the EC2 Auto Scaling group that is associated with this game server
--   group.
--   
--   <a>$sel:instanceDefinitions:GameServerGroup'</a>,
--   <a>gameServerGroup_instanceDefinitions</a> - The set of EC2 instance
--   types that GameLift FleetIQ can use when balancing and automatically
--   scaling instances in the corresponding Auto Scaling group.
--   
--   <a>$sel:gameServerGroupArn:GameServerGroup'</a>,
--   <a>gameServerGroup_gameServerGroupArn</a> - A generated unique ID for
--   the game server group.
--   
--   <a>$sel:suspendedActions:GameServerGroup'</a>,
--   <a>gameServerGroup_suspendedActions</a> - A list of activities that
--   are currently suspended for this game server group. If this property
--   is empty, all activities are occurring.
--   
--   <a>$sel:gameServerGroupName:GameServerGroup'</a>,
--   <a>gameServerGroup_gameServerGroupName</a> - A developer-defined
--   identifier for the game server group. The name is unique for each
--   Region in each AWS account.
--   
--   <a>$sel:balancingStrategy:GameServerGroup'</a>,
--   <a>gameServerGroup_balancingStrategy</a> - Indicates how GameLift
--   FleetIQ balances the use of Spot Instances and On-Demand Instances in
--   the game server group. Method options include the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
--   
--   <a>$sel:statusReason:GameServerGroup'</a>,
--   <a>gameServerGroup_statusReason</a> - Additional information about the
--   current game server group status. This information might provide
--   additional insight on groups that are in <tt>ERROR</tt> status.
--   
--   <a>$sel:gameServerProtectionPolicy:GameServerGroup'</a>,
--   <a>gameServerGroup_gameServerProtectionPolicy</a> - A flag that
--   indicates whether instances in the game server group are protected
--   from early termination. Unprotected instances that have active game
--   servers running might be terminated during a scale-down event, causing
--   players to be dropped from the game. Protected instances cannot be
--   terminated while there are active game servers running except in the
--   event of a forced game server group deletion (see ). An exception to
--   this is with Spot Instances, which can be terminated by AWS regardless
--   of protection status.
--   
--   <a>$sel:lastUpdatedTime:GameServerGroup'</a>,
--   <a>gameServerGroup_lastUpdatedTime</a> - A timestamp that indicates
--   when this game server group was last updated.
newGameServerGroup :: GameServerGroup

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
gameServerGroup_creationTime :: Lens' GameServerGroup (Maybe UTCTime)

-- | The current status of the game server group. Possible statuses
--   include:
--   
--   <ul>
--   <li><tt>NEW</tt> - GameLift FleetIQ has validated the
--   <tt>CreateGameServerGroup()</tt> request.</li>
--   <li><tt>ACTIVATING</tt> - GameLift FleetIQ is setting up a game server
--   group, which includes creating an Auto Scaling group in your AWS
--   account.</li>
--   <li><tt>ACTIVE</tt> - The game server group has been successfully
--   created.</li>
--   <li><tt>DELETE_SCHEDULED</tt> - A request to delete the game server
--   group has been received.</li>
--   <li><tt>DELETING</tt> - GameLift FleetIQ has received a valid
--   <tt>DeleteGameServerGroup()</tt> request and is processing it.
--   GameLift FleetIQ must first complete and release hosts before it
--   deletes the Auto Scaling group and the game server group.</li>
--   <li><tt>DELETED</tt> - The game server group has been successfully
--   deleted.</li>
--   <li><tt>ERROR</tt> - The asynchronous processes of activating or
--   deleting a game server group has failed, resulting in an error
--   state.</li>
--   </ul>
gameServerGroup_status :: Lens' GameServerGroup (Maybe GameServerGroupStatus)

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
gameServerGroup_roleArn :: Lens' GameServerGroup (Maybe Text)

-- | A generated unique ID for the EC2 Auto Scaling group that is
--   associated with this game server group.
gameServerGroup_autoScalingGroupArn :: Lens' GameServerGroup (Maybe Text)

-- | The set of EC2 instance types that GameLift FleetIQ can use when
--   balancing and automatically scaling instances in the corresponding
--   Auto Scaling group.
gameServerGroup_instanceDefinitions :: Lens' GameServerGroup (Maybe (NonEmpty InstanceDefinition))

-- | A generated unique ID for the game server group.
gameServerGroup_gameServerGroupArn :: Lens' GameServerGroup (Maybe Text)

-- | A list of activities that are currently suspended for this game server
--   group. If this property is empty, all activities are occurring.
gameServerGroup_suspendedActions :: Lens' GameServerGroup (Maybe (NonEmpty GameServerGroupAction))

-- | A developer-defined identifier for the game server group. The name is
--   unique for each Region in each AWS account.
gameServerGroup_gameServerGroupName :: Lens' GameServerGroup (Maybe Text)

-- | Indicates how GameLift FleetIQ balances the use of Spot Instances and
--   On-Demand Instances in the game server group. Method options include
--   the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
gameServerGroup_balancingStrategy :: Lens' GameServerGroup (Maybe BalancingStrategy)

-- | Additional information about the current game server group status.
--   This information might provide additional insight on groups that are
--   in <tt>ERROR</tt> status.
gameServerGroup_statusReason :: Lens' GameServerGroup (Maybe Text)

-- | A flag that indicates whether instances in the game server group are
--   protected from early termination. Unprotected instances that have
--   active game servers running might be terminated during a scale-down
--   event, causing players to be dropped from the game. Protected
--   instances cannot be terminated while there are active game servers
--   running except in the event of a forced game server group deletion
--   (see ). An exception to this is with Spot Instances, which can be
--   terminated by AWS regardless of protection status.
gameServerGroup_gameServerProtectionPolicy :: Lens' GameServerGroup (Maybe GameServerProtectionPolicy)

-- | A timestamp that indicates when this game server group was last
--   updated.
gameServerGroup_lastUpdatedTime :: Lens' GameServerGroup (Maybe UTCTime)

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Configuration settings for intelligent automatic scaling that uses
--   target tracking. These settings are used to add an Auto Scaling policy
--   when creating the corresponding Auto Scaling group with
--   CreateGameServerGroup. After the Auto Scaling group is created, all
--   updates to Auto Scaling policies, including changing this policy and
--   adding or removing other policies, is done directly on the Auto
--   Scaling group.
--   
--   <i>See:</i> <a>newGameServerGroupAutoScalingPolicy</a> smart
--   constructor.
data GameServerGroupAutoScalingPolicy
GameServerGroupAutoScalingPolicy' :: Maybe Natural -> TargetTrackingConfiguration -> GameServerGroupAutoScalingPolicy

-- | Length of time, in seconds, it takes for a new instance to start new
--   game server processes and register with GameLift FleetIQ. Specifying a
--   warm-up time can be useful, particularly with game servers that take a
--   long time to start up, because it avoids prematurely starting new
--   instances.
[$sel:estimatedInstanceWarmup:GameServerGroupAutoScalingPolicy'] :: GameServerGroupAutoScalingPolicy -> Maybe Natural

-- | Settings for a target-based scaling policy applied to Auto Scaling
--   group. These settings are used to create a target-based policy that
--   tracks the GameLift FleetIQ metric
--   <tt>"PercentUtilizedGameServers"</tt> and specifies a target value for
--   the metric. As player usage changes, the policy triggers to adjust the
--   game server group capacity so that the metric returns to the target
--   value.
[$sel:targetTrackingConfiguration:GameServerGroupAutoScalingPolicy'] :: GameServerGroupAutoScalingPolicy -> TargetTrackingConfiguration

-- | Create a value of <a>GameServerGroupAutoScalingPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:estimatedInstanceWarmup:GameServerGroupAutoScalingPolicy'</a>,
--   <a>gameServerGroupAutoScalingPolicy_estimatedInstanceWarmup</a> -
--   Length of time, in seconds, it takes for a new instance to start new
--   game server processes and register with GameLift FleetIQ. Specifying a
--   warm-up time can be useful, particularly with game servers that take a
--   long time to start up, because it avoids prematurely starting new
--   instances.
--   
--   
--   <a>$sel:targetTrackingConfiguration:GameServerGroupAutoScalingPolicy'</a>,
--   <a>gameServerGroupAutoScalingPolicy_targetTrackingConfiguration</a> -
--   Settings for a target-based scaling policy applied to Auto Scaling
--   group. These settings are used to create a target-based policy that
--   tracks the GameLift FleetIQ metric
--   <tt>"PercentUtilizedGameServers"</tt> and specifies a target value for
--   the metric. As player usage changes, the policy triggers to adjust the
--   game server group capacity so that the metric returns to the target
--   value.
newGameServerGroupAutoScalingPolicy :: TargetTrackingConfiguration -> GameServerGroupAutoScalingPolicy

-- | Length of time, in seconds, it takes for a new instance to start new
--   game server processes and register with GameLift FleetIQ. Specifying a
--   warm-up time can be useful, particularly with game servers that take a
--   long time to start up, because it avoids prematurely starting new
--   instances.
gameServerGroupAutoScalingPolicy_estimatedInstanceWarmup :: Lens' GameServerGroupAutoScalingPolicy (Maybe Natural)

-- | Settings for a target-based scaling policy applied to Auto Scaling
--   group. These settings are used to create a target-based policy that
--   tracks the GameLift FleetIQ metric
--   <tt>"PercentUtilizedGameServers"</tt> and specifies a target value for
--   the metric. As player usage changes, the policy triggers to adjust the
--   game server group capacity so that the metric returns to the target
--   value.
gameServerGroupAutoScalingPolicy_targetTrackingConfiguration :: Lens' GameServerGroupAutoScalingPolicy TargetTrackingConfiguration

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Additional properties, including status, that describe an EC2 instance
--   in a game server group. Instance configurations are set with game
--   server group properties (see <tt>DescribeGameServerGroup</tt> and with
--   the EC2 launch template that was used when creating the game server
--   group.
--   
--   Retrieve game server instances for a game server group by calling
--   <tt>DescribeGameServerInstances</tt>.
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newGameServerInstance</a> smart constructor.
data GameServerInstance
GameServerInstance' :: Maybe Text -> Maybe GameServerInstanceStatus -> Maybe Text -> Maybe Text -> GameServerInstance

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
[$sel:instanceId:GameServerInstance'] :: GameServerInstance -> Maybe Text

-- | Current status of the game server instance.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The instance is viable for hosting game
--   servers.</li>
--   <li><b>DRAINING</b> -- The instance is not viable for hosting game
--   servers. Existing game servers are in the process of ending, and new
--   game servers are not started on this instance unless no other
--   resources are available. When the instance is put in DRAINING, a new
--   instance is started up to replace it. Once the instance has no
--   UTILIZED game servers, it will be terminated in favor of the new
--   instance.</li>
--   <li><b>SPOT_TERMINATING</b> -- The instance is in the process of
--   shutting down due to a Spot instance interruption. No new game servers
--   are started on this instance.</li>
--   </ul>
[$sel:instanceStatus:GameServerInstance'] :: GameServerInstance -> Maybe GameServerInstanceStatus

-- | A generated unique identifier for the game server group that includes
--   the game server instance.
[$sel:gameServerGroupArn:GameServerInstance'] :: GameServerInstance -> Maybe Text

-- | A developer-defined identifier for the game server group that includes
--   the game server instance. The name is unique for each Region in each
--   AWS account.
[$sel:gameServerGroupName:GameServerInstance'] :: GameServerInstance -> Maybe Text

-- | Create a value of <a>GameServerInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:GameServerInstance'</a>,
--   <a>gameServerInstance_instanceId</a> - The unique identifier for the
--   instance where the game server is running. This ID is available in the
--   instance metadata. EC2 instance IDs use a 17-character format, for
--   example: <tt>i-1234567890abcdef0</tt>.
--   
--   <a>$sel:instanceStatus:GameServerInstance'</a>,
--   <a>gameServerInstance_instanceStatus</a> - Current status of the game
--   server instance.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The instance is viable for hosting game
--   servers.</li>
--   <li><b>DRAINING</b> -- The instance is not viable for hosting game
--   servers. Existing game servers are in the process of ending, and new
--   game servers are not started on this instance unless no other
--   resources are available. When the instance is put in DRAINING, a new
--   instance is started up to replace it. Once the instance has no
--   UTILIZED game servers, it will be terminated in favor of the new
--   instance.</li>
--   <li><b>SPOT_TERMINATING</b> -- The instance is in the process of
--   shutting down due to a Spot instance interruption. No new game servers
--   are started on this instance.</li>
--   </ul>
--   
--   <a>$sel:gameServerGroupArn:GameServerInstance'</a>,
--   <a>gameServerInstance_gameServerGroupArn</a> - A generated unique
--   identifier for the game server group that includes the game server
--   instance.
--   
--   <a>$sel:gameServerGroupName:GameServerInstance'</a>,
--   <a>gameServerInstance_gameServerGroupName</a> - A developer-defined
--   identifier for the game server group that includes the game server
--   instance. The name is unique for each Region in each AWS account.
newGameServerInstance :: GameServerInstance

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
gameServerInstance_instanceId :: Lens' GameServerInstance (Maybe Text)

-- | Current status of the game server instance.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The instance is viable for hosting game
--   servers.</li>
--   <li><b>DRAINING</b> -- The instance is not viable for hosting game
--   servers. Existing game servers are in the process of ending, and new
--   game servers are not started on this instance unless no other
--   resources are available. When the instance is put in DRAINING, a new
--   instance is started up to replace it. Once the instance has no
--   UTILIZED game servers, it will be terminated in favor of the new
--   instance.</li>
--   <li><b>SPOT_TERMINATING</b> -- The instance is in the process of
--   shutting down due to a Spot instance interruption. No new game servers
--   are started on this instance.</li>
--   </ul>
gameServerInstance_instanceStatus :: Lens' GameServerInstance (Maybe GameServerInstanceStatus)

-- | A generated unique identifier for the game server group that includes
--   the game server instance.
gameServerInstance_gameServerGroupArn :: Lens' GameServerInstance (Maybe Text)

-- | A developer-defined identifier for the game server group that includes
--   the game server instance. The name is unique for each Region in each
--   AWS account.
gameServerInstance_gameServerGroupName :: Lens' GameServerInstance (Maybe Text)

-- | Properties describing a game session.
--   
--   A game session in ACTIVE status can host players. When a game session
--   ends, its status is set to <tt>TERMINATED</tt>.
--   
--   Once the session ends, the game session object is retained for 30
--   days. This means you can reuse idempotency token values after this
--   time. Game session logs are retained for 14 days.
--   
--   <b>Related actions</b>
--   
--   CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails
--   | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newGameSession</a> smart constructor.
data GameSession
GameSession' :: Maybe Natural -> Maybe [GameProperty] -> Maybe POSIX -> Maybe GameSessionStatus -> Maybe PlayerSessionCreationPolicy -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe GameSessionStatusReason -> Maybe Text -> GameSession

-- | Number of players currently in the game session.
[$sel:currentPlayerSessionCount:GameSession'] :: GameSession -> Maybe Natural

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session. You can
--   search for active game sessions based on this custom data with
--   SearchGameSessions.
[$sel:gameProperties:GameSession'] :: GameSession -> Maybe [GameProperty]

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:GameSession'] :: GameSession -> Maybe POSIX

-- | Current status of the game session. A game session must have an
--   <tt>ACTIVE</tt> status to have player sessions.
[$sel:status:GameSession'] :: GameSession -> Maybe GameSessionStatus

-- | Indicates whether or not the game session is accepting new players.
[$sel:playerSessionCreationPolicy:GameSession'] :: GameSession -> Maybe PlayerSessionCreationPolicy

-- | A unique identifier for a player. This ID is used to enforce a
--   resource protection policy (if one exists), that limits the number of
--   game sessions a player can create.
[$sel:creatorId:GameSession'] :: GameSession -> Maybe Text

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
[$sel:maximumPlayerSessionCount:GameSession'] :: GameSession -> Maybe Natural

-- | Information about the matchmaking process that was used to create the
--   game session. It is in JSON syntax, formatted as a string. In addition
--   the matchmaking configuration used, it contains data on all players
--   assigned to the match, including player attributes and team
--   assignments. For more details on matchmaker data, see <a>Match
--   Data</a>. Matchmaker data is useful when requesting match backfills,
--   and is updated whenever new players are added during a successful
--   backfill (see StartMatchBackfill).
[$sel:matchmakerData:GameSession'] :: GameSession -> Maybe Text

-- | A unique identifier for the fleet that the game session is running on.
[$sel:fleetId:GameSession'] :: GameSession -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that this game session is running on.
[$sel:fleetArn:GameSession'] :: GameSession -> Maybe Text

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session.
[$sel:gameSessionData:GameSession'] :: GameSession -> Maybe Text

-- | A unique identifier for the game session. A game session ARN has the
--   following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>.
[$sel:gameSessionId:GameSession'] :: GameSession -> Maybe Text

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
[$sel:name:GameSession'] :: GameSession -> Maybe Text

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
[$sel:ipAddress:GameSession'] :: GameSession -> Maybe Text

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:terminationTime:GameSession'] :: GameSession -> Maybe POSIX

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
[$sel:port:GameSession'] :: GameSession -> Maybe Natural

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
[$sel:dnsName:GameSession'] :: GameSession -> Maybe Text

-- | Provides additional information about game session status.
--   <tt>INTERRUPTED</tt> indicates that the game session was hosted on a
--   spot instance that was reclaimed, causing the active game session to
--   be terminated.
[$sel:statusReason:GameSession'] :: GameSession -> Maybe GameSessionStatusReason

-- | The fleet location where the game session is running. This value might
--   specify the fleet's home Region or a remote location. Location is
--   expressed as an AWS Region code such as <tt>us-west-2</tt>.
[$sel:location:GameSession'] :: GameSession -> Maybe Text

-- | Create a value of <a>GameSession</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentPlayerSessionCount:GameSession'</a>,
--   <a>gameSession_currentPlayerSessionCount</a> - Number of players
--   currently in the game session.
--   
--   <a>$sel:gameProperties:GameSession'</a>,
--   <a>gameSession_gameProperties</a> - A set of custom properties for a
--   game session, formatted as key:value pairs. These properties are
--   passed to a game server process in the GameSession object with a
--   request to start a new game session. You can search for active game
--   sessions based on this custom data with SearchGameSessions.
--   
--   <a>$sel:creationTime:GameSession'</a>, <a>gameSession_creationTime</a>
--   - A time stamp indicating when this data object was created. Format is
--   a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:GameSession'</a>, <a>gameSession_status</a> - Current
--   status of the game session. A game session must have an
--   <tt>ACTIVE</tt> status to have player sessions.
--   
--   <a>$sel:playerSessionCreationPolicy:GameSession'</a>,
--   <a>gameSession_playerSessionCreationPolicy</a> - Indicates whether or
--   not the game session is accepting new players.
--   
--   <a>$sel:creatorId:GameSession'</a>, <a>gameSession_creatorId</a> - A
--   unique identifier for a player. This ID is used to enforce a resource
--   protection policy (if one exists), that limits the number of game
--   sessions a player can create.
--   
--   <a>$sel:maximumPlayerSessionCount:GameSession'</a>,
--   <a>gameSession_maximumPlayerSessionCount</a> - The maximum number of
--   players that can be connected simultaneously to the game session.
--   
--   <a>$sel:matchmakerData:GameSession'</a>,
--   <a>gameSession_matchmakerData</a> - Information about the matchmaking
--   process that was used to create the game session. It is in JSON
--   syntax, formatted as a string. In addition the matchmaking
--   configuration used, it contains data on all players assigned to the
--   match, including player attributes and team assignments. For more
--   details on matchmaker data, see <a>Match Data</a>. Matchmaker data is
--   useful when requesting match backfills, and is updated whenever new
--   players are added during a successful backfill (see
--   StartMatchBackfill).
--   
--   <a>$sel:fleetId:GameSession'</a>, <a>gameSession_fleetId</a> - A
--   unique identifier for the fleet that the game session is running on.
--   
--   <a>$sel:fleetArn:GameSession'</a>, <a>gameSession_fleetArn</a> - The
--   Amazon Resource Name (<a>ARN</a>) associated with the GameLift fleet
--   that this game session is running on.
--   
--   <a>$sel:gameSessionData:GameSession'</a>,
--   <a>gameSession_gameSessionData</a> - A set of custom game session
--   properties, formatted as a single string value. This data is passed to
--   a game server process in the GameSession object with a request to
--   start a new game session.
--   
--   <a>$sel:gameSessionId:GameSession'</a>,
--   <a>gameSession_gameSessionId</a> - A unique identifier for the game
--   session. A game session ARN has the following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>.
--   
--   <a>$sel:name:GameSession'</a>, <a>gameSession_name</a> - A descriptive
--   label that is associated with a game session. Session names do not
--   need to be unique.
--   
--   <a>$sel:ipAddress:GameSession'</a>, <a>gameSession_ipAddress</a> - The
--   IP address of the game session. To connect to a GameLift game server,
--   an app needs both the IP address and port number.
--   
--   <a>$sel:terminationTime:GameSession'</a>,
--   <a>gameSession_terminationTime</a> - A time stamp indicating when this
--   data object was terminated. Format is a number expressed in Unix time
--   as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:port:GameSession'</a>, <a>gameSession_port</a> - The port
--   number for the game session. To connect to a GameLift game server, an
--   app needs both the IP address and port number.
--   
--   <a>$sel:dnsName:GameSession'</a>, <a>gameSession_dnsName</a> - The DNS
--   identifier assigned to the instance that is running the game session.
--   Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
--   
--   <a>$sel:statusReason:GameSession'</a>, <a>gameSession_statusReason</a>
--   - Provides additional information about game session status.
--   <tt>INTERRUPTED</tt> indicates that the game session was hosted on a
--   spot instance that was reclaimed, causing the active game session to
--   be terminated.
--   
--   <a>$sel:location:GameSession'</a>, <a>gameSession_location</a> - The
--   fleet location where the game session is running. This value might
--   specify the fleet's home Region or a remote location. Location is
--   expressed as an AWS Region code such as <tt>us-west-2</tt>.
newGameSession :: GameSession

-- | Number of players currently in the game session.
gameSession_currentPlayerSessionCount :: Lens' GameSession (Maybe Natural)

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session. You can
--   search for active game sessions based on this custom data with
--   SearchGameSessions.
gameSession_gameProperties :: Lens' GameSession (Maybe [GameProperty])

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
gameSession_creationTime :: Lens' GameSession (Maybe UTCTime)

-- | Current status of the game session. A game session must have an
--   <tt>ACTIVE</tt> status to have player sessions.
gameSession_status :: Lens' GameSession (Maybe GameSessionStatus)

-- | Indicates whether or not the game session is accepting new players.
gameSession_playerSessionCreationPolicy :: Lens' GameSession (Maybe PlayerSessionCreationPolicy)

-- | A unique identifier for a player. This ID is used to enforce a
--   resource protection policy (if one exists), that limits the number of
--   game sessions a player can create.
gameSession_creatorId :: Lens' GameSession (Maybe Text)

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
gameSession_maximumPlayerSessionCount :: Lens' GameSession (Maybe Natural)

-- | Information about the matchmaking process that was used to create the
--   game session. It is in JSON syntax, formatted as a string. In addition
--   the matchmaking configuration used, it contains data on all players
--   assigned to the match, including player attributes and team
--   assignments. For more details on matchmaker data, see <a>Match
--   Data</a>. Matchmaker data is useful when requesting match backfills,
--   and is updated whenever new players are added during a successful
--   backfill (see StartMatchBackfill).
gameSession_matchmakerData :: Lens' GameSession (Maybe Text)

-- | A unique identifier for the fleet that the game session is running on.
gameSession_fleetId :: Lens' GameSession (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that this game session is running on.
gameSession_fleetArn :: Lens' GameSession (Maybe Text)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session.
gameSession_gameSessionData :: Lens' GameSession (Maybe Text)

-- | A unique identifier for the game session. A game session ARN has the
--   following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>.
gameSession_gameSessionId :: Lens' GameSession (Maybe Text)

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
gameSession_name :: Lens' GameSession (Maybe Text)

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
gameSession_ipAddress :: Lens' GameSession (Maybe Text)

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
gameSession_terminationTime :: Lens' GameSession (Maybe UTCTime)

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
gameSession_port :: Lens' GameSession (Maybe Natural)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
gameSession_dnsName :: Lens' GameSession (Maybe Text)

-- | Provides additional information about game session status.
--   <tt>INTERRUPTED</tt> indicates that the game session was hosted on a
--   spot instance that was reclaimed, causing the active game session to
--   be terminated.
gameSession_statusReason :: Lens' GameSession (Maybe GameSessionStatusReason)

-- | The fleet location where the game session is running. This value might
--   specify the fleet's home Region or a remote location. Location is
--   expressed as an AWS Region code such as <tt>us-west-2</tt>.
gameSession_location :: Lens' GameSession (Maybe Text)

-- | Connection information for a new game session that is created in
--   response to a StartMatchmaking request. Once a match is made, the
--   FlexMatch engine creates a new game session for it. This information,
--   including the game session endpoint and player sessions for each
--   player in the original matchmaking request, is added to the
--   MatchmakingTicket, which can be retrieved by calling
--   DescribeMatchmaking.
--   
--   <i>See:</i> <a>newGameSessionConnectionInfo</a> smart constructor.
data GameSessionConnectionInfo
GameSessionConnectionInfo' :: Maybe Text -> Maybe Text -> Maybe [MatchedPlayerSession] -> Maybe Natural -> Maybe Text -> GameSessionConnectionInfo

-- | A unique identifier for the game session. Use the game session ID.
[$sel:gameSessionArn:GameSessionConnectionInfo'] :: GameSessionConnectionInfo -> Maybe Text

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
[$sel:ipAddress:GameSessionConnectionInfo'] :: GameSessionConnectionInfo -> Maybe Text

-- | A collection of player session IDs, one for each player ID that was
--   included in the original matchmaking request.
[$sel:matchedPlayerSessions:GameSessionConnectionInfo'] :: GameSessionConnectionInfo -> Maybe [MatchedPlayerSession]

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
[$sel:port:GameSessionConnectionInfo'] :: GameSessionConnectionInfo -> Maybe Natural

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
[$sel:dnsName:GameSessionConnectionInfo'] :: GameSessionConnectionInfo -> Maybe Text

-- | Create a value of <a>GameSessionConnectionInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionArn:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_gameSessionArn</a> - A unique identifier
--   for the game session. Use the game session ID.
--   
--   <a>$sel:ipAddress:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_ipAddress</a> - The IP address of the
--   game session. To connect to a GameLift game server, an app needs both
--   the IP address and port number.
--   
--   <a>$sel:matchedPlayerSessions:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_matchedPlayerSessions</a> - A collection
--   of player session IDs, one for each player ID that was included in the
--   original matchmaking request.
--   
--   <a>$sel:port:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_port</a> - The port number for the game
--   session. To connect to a GameLift game server, an app needs both the
--   IP address and port number.
--   
--   <a>$sel:dnsName:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_dnsName</a> - The DNS identifier assigned
--   to the instance that is running the game session. Values have the
--   following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
newGameSessionConnectionInfo :: GameSessionConnectionInfo

-- | A unique identifier for the game session. Use the game session ID.
gameSessionConnectionInfo_gameSessionArn :: Lens' GameSessionConnectionInfo (Maybe Text)

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
gameSessionConnectionInfo_ipAddress :: Lens' GameSessionConnectionInfo (Maybe Text)

-- | A collection of player session IDs, one for each player ID that was
--   included in the original matchmaking request.
gameSessionConnectionInfo_matchedPlayerSessions :: Lens' GameSessionConnectionInfo (Maybe [MatchedPlayerSession])

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
gameSessionConnectionInfo_port :: Lens' GameSessionConnectionInfo (Maybe Natural)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
gameSessionConnectionInfo_dnsName :: Lens' GameSessionConnectionInfo (Maybe Text)

-- | A game session's properties plus the protection policy currently in
--   force.
--   
--   <i>See:</i> <a>newGameSessionDetail</a> smart constructor.
data GameSessionDetail
GameSessionDetail' :: Maybe GameSession -> Maybe ProtectionPolicy -> GameSessionDetail

-- | Object that describes a game session.
[$sel:gameSession:GameSessionDetail'] :: GameSessionDetail -> Maybe GameSession

-- | Current status of protection for the game session.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
[$sel:protectionPolicy:GameSessionDetail'] :: GameSessionDetail -> Maybe ProtectionPolicy

-- | Create a value of <a>GameSessionDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSession:GameSessionDetail'</a>,
--   <a>gameSessionDetail_gameSession</a> - Object that describes a game
--   session.
--   
--   <a>$sel:protectionPolicy:GameSessionDetail'</a>,
--   <a>gameSessionDetail_protectionPolicy</a> - Current status of
--   protection for the game session.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
newGameSessionDetail :: GameSessionDetail

-- | Object that describes a game session.
gameSessionDetail_gameSession :: Lens' GameSessionDetail (Maybe GameSession)

-- | Current status of protection for the game session.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
gameSessionDetail_protectionPolicy :: Lens' GameSessionDetail (Maybe ProtectionPolicy)

-- | Object that describes a StartGameSessionPlacement request. This object
--   includes the full details of the original request plus the current
--   status and start/end time stamps.
--   
--   Game session placement-related operations include:
--   
--   <ul>
--   <li>StartGameSessionPlacement</li>
--   <li>DescribeGameSessionPlacement</li>
--   <li>StopGameSessionPlacement</li>
--   </ul>
--   
--   <i>See:</i> <a>newGameSessionPlacement</a> smart constructor.
data GameSessionPlacement
GameSessionPlacement' :: Maybe [GameProperty] -> Maybe GameSessionPlacementState -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [PlacedPlayerSession] -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe [PlayerLatency] -> GameSessionPlacement

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>).
[$sel:gameProperties:GameSessionPlacement'] :: GameSessionPlacement -> Maybe [GameProperty]

-- | Current status of the game session placement request.
--   
--   <ul>
--   <li><b>PENDING</b> -- The placement request is currently in the queue
--   waiting to be processed.</li>
--   <li><b>FULFILLED</b> -- A new game session and player sessions (if
--   requested) have been successfully created. Values for
--   <i>GameSessionArn</i> and <i>GameSessionRegion</i> are available.</li>
--   <li><b>CANCELLED</b> -- The placement request was canceled with a call
--   to StopGameSessionPlacement.</li>
--   <li><b>TIMED_OUT</b> -- A new game session was not successfully
--   created before the time limit expired. You can resubmit the placement
--   request as needed.</li>
--   <li><b>FAILED</b> -- GameLift is not able to complete the process of
--   placing the game session. Common reasons are the game session
--   terminated before the placement process was completed, or an
--   unexpected internal error.</li>
--   </ul>
[$sel:status:GameSessionPlacement'] :: GameSessionPlacement -> Maybe GameSessionPlacementState

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
[$sel:gameSessionQueueName:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
[$sel:maximumPlayerSessionCount:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Natural

-- | Information on the matchmaking process for this game. Data is in JSON
--   syntax, formatted as a string. It identifies the matchmaking
--   configuration used to create the match, and contains data on all
--   players assigned to the match, including player attributes and team
--   assignments. For more details on matchmaker data, see <a>Match
--   Data</a>.
[$sel:matchmakerData:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
[$sel:gameSessionData:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | A unique identifier for the game session. This value is set once the
--   new game session is placed (placement status is <tt>FULFILLED</tt>).
[$sel:gameSessionId:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | Time stamp indicating when this request was placed in the queue.
--   Format is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:startTime:GameSessionPlacement'] :: GameSessionPlacement -> Maybe POSIX

-- | Identifier for the game session created by this placement request.
--   This value is set once the new game session is placed (placement
--   status is <tt>FULFILLED</tt>). This identifier is unique across all
--   Regions. You can use this value as a <tt>GameSessionId</tt> value as
--   needed.
[$sel:gameSessionArn:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | Time stamp indicating when this request was completed, canceled, or
--   timed out.
[$sel:endTime:GameSessionPlacement'] :: GameSessionPlacement -> Maybe POSIX

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
[$sel:gameSessionName:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number. This value
--   is set once the new game session is placed (placement status is
--   <tt>FULFILLED</tt>).
[$sel:ipAddress:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | A unique identifier for a game session placement.
[$sel:placementId:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | A collection of information on player sessions created in response to
--   the game session placement request. These player sessions are created
--   only once a new game session is successfully placed (placement status
--   is <tt>FULFILLED</tt>). This information includes the player ID (as
--   provided in the placement request) and the corresponding player
--   session ID. Retrieve full player sessions by calling
--   DescribePlayerSessions with the player session ID.
[$sel:placedPlayerSessions:GameSessionPlacement'] :: GameSessionPlacement -> Maybe [PlacedPlayerSession]

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number. This value
--   is set once the new game session is placed (placement status is
--   <tt>FULFILLED</tt>).
[$sel:port:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Natural

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
[$sel:dnsName:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | Name of the Region where the game session created by this placement
--   request is running. This value is set once the new game session is
--   placed (placement status is <tt>FULFILLED</tt>).
[$sel:gameSessionRegion:GameSessionPlacement'] :: GameSessionPlacement -> Maybe Text

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions.
[$sel:playerLatencies:GameSessionPlacement'] :: GameSessionPlacement -> Maybe [PlayerLatency]

-- | Create a value of <a>GameSessionPlacement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameProperties:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameProperties</a> - A set of custom
--   properties for a game session, formatted as key:value pairs. These
--   properties are passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
--   
--   <a>$sel:status:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_status</a> - Current status of the game
--   session placement request.
--   
--   <ul>
--   <li><b>PENDING</b> -- The placement request is currently in the queue
--   waiting to be processed.</li>
--   <li><b>FULFILLED</b> -- A new game session and player sessions (if
--   requested) have been successfully created. Values for
--   <i>GameSessionArn</i> and <i>GameSessionRegion</i> are available.</li>
--   <li><b>CANCELLED</b> -- The placement request was canceled with a call
--   to StopGameSessionPlacement.</li>
--   <li><b>TIMED_OUT</b> -- A new game session was not successfully
--   created before the time limit expired. You can resubmit the placement
--   request as needed.</li>
--   <li><b>FAILED</b> -- GameLift is not able to complete the process of
--   placing the game session. Common reasons are the game session
--   terminated before the placement process was completed, or an
--   unexpected internal error.</li>
--   </ul>
--   
--   <a>$sel:gameSessionQueueName:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionQueueName</a> - A descriptive label
--   that is associated with game session queue. Queue names must be unique
--   within each Region.
--   
--   <a>$sel:maximumPlayerSessionCount:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_maximumPlayerSessionCount</a> - The maximum
--   number of players that can be connected simultaneously to the game
--   session.
--   
--   <a>$sel:matchmakerData:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_matchmakerData</a> - Information on the
--   matchmaking process for this game. Data is in JSON syntax, formatted
--   as a string. It identifies the matchmaking configuration used to
--   create the match, and contains data on all players assigned to the
--   match, including player attributes and team assignments. For more
--   details on matchmaker data, see <a>Match Data</a>.
--   
--   <a>$sel:gameSessionData:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionData</a> - A set of custom game
--   session properties, formatted as a single string value. This data is
--   passed to a game server process in the GameSession object with a
--   request to start a new game session (see <a>Start a Game Session</a>).
--   
--   <a>$sel:gameSessionId:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionId</a> - A unique identifier for
--   the game session. This value is set once the new game session is
--   placed (placement status is <tt>FULFILLED</tt>).
--   
--   <a>$sel:startTime:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_startTime</a> - Time stamp indicating when
--   this request was placed in the queue. Format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:gameSessionArn:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionArn</a> - Identifier for the game
--   session created by this placement request. This value is set once the
--   new game session is placed (placement status is <tt>FULFILLED</tt>).
--   This identifier is unique across all Regions. You can use this value
--   as a <tt>GameSessionId</tt> value as needed.
--   
--   <a>$sel:endTime:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_endTime</a> - Time stamp indicating when this
--   request was completed, canceled, or timed out.
--   
--   <a>$sel:gameSessionName:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionName</a> - A descriptive label that
--   is associated with a game session. Session names do not need to be
--   unique.
--   
--   <a>$sel:ipAddress:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_ipAddress</a> - The IP address of the game
--   session. To connect to a GameLift game server, an app needs both the
--   IP address and port number. This value is set once the new game
--   session is placed (placement status is <tt>FULFILLED</tt>).
--   
--   <a>$sel:placementId:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_placementId</a> - A unique identifier for a
--   game session placement.
--   
--   <a>$sel:placedPlayerSessions:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_placedPlayerSessions</a> - A collection of
--   information on player sessions created in response to the game session
--   placement request. These player sessions are created only once a new
--   game session is successfully placed (placement status is
--   <tt>FULFILLED</tt>). This information includes the player ID (as
--   provided in the placement request) and the corresponding player
--   session ID. Retrieve full player sessions by calling
--   DescribePlayerSessions with the player session ID.
--   
--   <a>$sel:port:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_port</a> - The port number for the game
--   session. To connect to a GameLift game server, an app needs both the
--   IP address and port number. This value is set once the new game
--   session is placed (placement status is <tt>FULFILLED</tt>).
--   
--   <a>$sel:dnsName:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_dnsName</a> - The DNS identifier assigned to
--   the instance that is running the game session. Values have the
--   following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
--   
--   <a>$sel:gameSessionRegion:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionRegion</a> - Name of the Region
--   where the game session created by this placement request is running.
--   This value is set once the new game session is placed (placement
--   status is <tt>FULFILLED</tt>).
--   
--   <a>$sel:playerLatencies:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_playerLatencies</a> - A set of values,
--   expressed in milliseconds, that indicates the amount of latency that a
--   player experiences when connected to AWS Regions.
newGameSessionPlacement :: GameSessionPlacement

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>).
gameSessionPlacement_gameProperties :: Lens' GameSessionPlacement (Maybe [GameProperty])

-- | Current status of the game session placement request.
--   
--   <ul>
--   <li><b>PENDING</b> -- The placement request is currently in the queue
--   waiting to be processed.</li>
--   <li><b>FULFILLED</b> -- A new game session and player sessions (if
--   requested) have been successfully created. Values for
--   <i>GameSessionArn</i> and <i>GameSessionRegion</i> are available.</li>
--   <li><b>CANCELLED</b> -- The placement request was canceled with a call
--   to StopGameSessionPlacement.</li>
--   <li><b>TIMED_OUT</b> -- A new game session was not successfully
--   created before the time limit expired. You can resubmit the placement
--   request as needed.</li>
--   <li><b>FAILED</b> -- GameLift is not able to complete the process of
--   placing the game session. Common reasons are the game session
--   terminated before the placement process was completed, or an
--   unexpected internal error.</li>
--   </ul>
gameSessionPlacement_status :: Lens' GameSessionPlacement (Maybe GameSessionPlacementState)

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
gameSessionPlacement_gameSessionQueueName :: Lens' GameSessionPlacement (Maybe Text)

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
gameSessionPlacement_maximumPlayerSessionCount :: Lens' GameSessionPlacement (Maybe Natural)

-- | Information on the matchmaking process for this game. Data is in JSON
--   syntax, formatted as a string. It identifies the matchmaking
--   configuration used to create the match, and contains data on all
--   players assigned to the match, including player attributes and team
--   assignments. For more details on matchmaker data, see <a>Match
--   Data</a>.
gameSessionPlacement_matchmakerData :: Lens' GameSessionPlacement (Maybe Text)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
gameSessionPlacement_gameSessionData :: Lens' GameSessionPlacement (Maybe Text)

-- | A unique identifier for the game session. This value is set once the
--   new game session is placed (placement status is <tt>FULFILLED</tt>).
gameSessionPlacement_gameSessionId :: Lens' GameSessionPlacement (Maybe Text)

-- | Time stamp indicating when this request was placed in the queue.
--   Format is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
gameSessionPlacement_startTime :: Lens' GameSessionPlacement (Maybe UTCTime)

-- | Identifier for the game session created by this placement request.
--   This value is set once the new game session is placed (placement
--   status is <tt>FULFILLED</tt>). This identifier is unique across all
--   Regions. You can use this value as a <tt>GameSessionId</tt> value as
--   needed.
gameSessionPlacement_gameSessionArn :: Lens' GameSessionPlacement (Maybe Text)

-- | Time stamp indicating when this request was completed, canceled, or
--   timed out.
gameSessionPlacement_endTime :: Lens' GameSessionPlacement (Maybe UTCTime)

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
gameSessionPlacement_gameSessionName :: Lens' GameSessionPlacement (Maybe Text)

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number. This value
--   is set once the new game session is placed (placement status is
--   <tt>FULFILLED</tt>).
gameSessionPlacement_ipAddress :: Lens' GameSessionPlacement (Maybe Text)

-- | A unique identifier for a game session placement.
gameSessionPlacement_placementId :: Lens' GameSessionPlacement (Maybe Text)

-- | A collection of information on player sessions created in response to
--   the game session placement request. These player sessions are created
--   only once a new game session is successfully placed (placement status
--   is <tt>FULFILLED</tt>). This information includes the player ID (as
--   provided in the placement request) and the corresponding player
--   session ID. Retrieve full player sessions by calling
--   DescribePlayerSessions with the player session ID.
gameSessionPlacement_placedPlayerSessions :: Lens' GameSessionPlacement (Maybe [PlacedPlayerSession])

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number. This value
--   is set once the new game session is placed (placement status is
--   <tt>FULFILLED</tt>).
gameSessionPlacement_port :: Lens' GameSessionPlacement (Maybe Natural)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
gameSessionPlacement_dnsName :: Lens' GameSessionPlacement (Maybe Text)

-- | Name of the Region where the game session created by this placement
--   request is running. This value is set once the new game session is
--   placed (placement status is <tt>FULFILLED</tt>).
gameSessionPlacement_gameSessionRegion :: Lens' GameSessionPlacement (Maybe Text)

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions.
gameSessionPlacement_playerLatencies :: Lens' GameSessionPlacement (Maybe [PlayerLatency])

-- | Configuration for a game session placement mechanism that processes
--   requests for new game sessions. A queue can be used on its own or as
--   part of a matchmaking solution.
--   
--   <b>Related actions</b>
--   
--   CreateGameSessionQueue | DescribeGameSessionQueues |
--   UpdateGameSessionQueue
--   
--   <i>See:</i> <a>newGameSessionQueue</a> smart constructor.
data GameSessionQueue
GameSessionQueue' :: Maybe Text -> Maybe [PlayerLatencyPolicy] -> Maybe PriorityConfiguration -> Maybe Text -> Maybe [GameSessionQueueDestination] -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe FilterConfiguration -> GameSessionQueue

-- | Information that is added to all events that are related to this game
--   session queue.
[$sel:customEventData:GameSessionQueue'] :: GameSessionQueue -> Maybe Text

-- | A set of policies that act as a sliding cap on player latency. FleetIQ
--   works to deliver low latency for most players in a game session. These
--   policies ensure that no individual player can be placed into a game
--   with unreasonably high latency. Use multiple policies to gradually
--   relax latency requirements a step at a time. Multiple policies are
--   applied based on their maximum allowed latency, starting with the
--   lowest value.
[$sel:playerLatencyPolicies:GameSessionQueue'] :: GameSessionQueue -> Maybe [PlayerLatencyPolicy]

-- | Custom settings to use when prioritizing destinations and locations
--   for game session placements. This configuration replaces the FleetIQ
--   default prioritization process. Priority types that are not explicitly
--   named will be automatically applied at the end of the prioritization
--   process.
[$sel:priorityConfiguration:GameSessionQueue'] :: GameSessionQueue -> Maybe PriorityConfiguration

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
[$sel:name:GameSessionQueue'] :: GameSessionQueue -> Maybe Text

-- | A list of fleets and/or fleet aliases that can be used to fulfill game
--   session placement requests in the queue. Destinations are identified
--   by either a fleet ARN or a fleet alias ARN, and are listed in order of
--   placement preference.
[$sel:destinations:GameSessionQueue'] :: GameSessionQueue -> Maybe [GameSessionQueueDestination]

-- | The maximum time, in seconds, that a new game session placement
--   request remains in the queue. When a request exceeds this time, the
--   game session placement changes to a <tt>TIMED_OUT</tt> status.
[$sel:timeoutInSeconds:GameSessionQueue'] :: GameSessionQueue -> Maybe Natural

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. In a GameLift game session queue ARN, the resource ID
--   matches the <i>Name</i> value.
[$sel:gameSessionQueueArn:GameSessionQueue'] :: GameSessionQueue -> Maybe Text

-- | An SNS topic ARN that is set up to receive game session placement
--   notifications. See <a>Setting up notifications for game session
--   placement</a>.
[$sel:notificationTarget:GameSessionQueue'] :: GameSessionQueue -> Maybe Text

-- | A list of locations where a queue is allowed to place new game
--   sessions. Locations are specified in the form of AWS Region codes,
--   such as <tt>us-west-2</tt>. If this parameter is not set, game
--   sessions can be placed in any queue location.
[$sel:filterConfiguration:GameSessionQueue'] :: GameSessionQueue -> Maybe FilterConfiguration

-- | Create a value of <a>GameSessionQueue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customEventData:GameSessionQueue'</a>,
--   <a>gameSessionQueue_customEventData</a> - Information that is added to
--   all events that are related to this game session queue.
--   
--   <a>$sel:playerLatencyPolicies:GameSessionQueue'</a>,
--   <a>gameSessionQueue_playerLatencyPolicies</a> - A set of policies that
--   act as a sliding cap on player latency. FleetIQ works to deliver low
--   latency for most players in a game session. These policies ensure that
--   no individual player can be placed into a game with unreasonably high
--   latency. Use multiple policies to gradually relax latency requirements
--   a step at a time. Multiple policies are applied based on their maximum
--   allowed latency, starting with the lowest value.
--   
--   <a>$sel:priorityConfiguration:GameSessionQueue'</a>,
--   <a>gameSessionQueue_priorityConfiguration</a> - Custom settings to use
--   when prioritizing destinations and locations for game session
--   placements. This configuration replaces the FleetIQ default
--   prioritization process. Priority types that are not explicitly named
--   will be automatically applied at the end of the prioritization
--   process.
--   
--   <a>$sel:name:GameSessionQueue'</a>, <a>gameSessionQueue_name</a> - A
--   descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
--   
--   <a>$sel:destinations:GameSessionQueue'</a>,
--   <a>gameSessionQueue_destinations</a> - A list of fleets and/or fleet
--   aliases that can be used to fulfill game session placement requests in
--   the queue. Destinations are identified by either a fleet ARN or a
--   fleet alias ARN, and are listed in order of placement preference.
--   
--   <a>$sel:timeoutInSeconds:GameSessionQueue'</a>,
--   <a>gameSessionQueue_timeoutInSeconds</a> - The maximum time, in
--   seconds, that a new game session placement request remains in the
--   queue. When a request exceeds this time, the game session placement
--   changes to a <tt>TIMED_OUT</tt> status.
--   
--   <a>$sel:gameSessionQueueArn:GameSessionQueue'</a>,
--   <a>gameSessionQueue_gameSessionQueueArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift game session queue
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. In a GameLift game session queue ARN, the resource ID
--   matches the <i>Name</i> value.
--   
--   <a>$sel:notificationTarget:GameSessionQueue'</a>,
--   <a>gameSessionQueue_notificationTarget</a> - An SNS topic ARN that is
--   set up to receive game session placement notifications. See <a>Setting
--   up notifications for game session placement</a>.
--   
--   <a>$sel:filterConfiguration:GameSessionQueue'</a>,
--   <a>gameSessionQueue_filterConfiguration</a> - A list of locations
--   where a queue is allowed to place new game sessions. Locations are
--   specified in the form of AWS Region codes, such as <tt>us-west-2</tt>.
--   If this parameter is not set, game sessions can be placed in any queue
--   location.
newGameSessionQueue :: GameSessionQueue

-- | Information that is added to all events that are related to this game
--   session queue.
gameSessionQueue_customEventData :: Lens' GameSessionQueue (Maybe Text)

-- | A set of policies that act as a sliding cap on player latency. FleetIQ
--   works to deliver low latency for most players in a game session. These
--   policies ensure that no individual player can be placed into a game
--   with unreasonably high latency. Use multiple policies to gradually
--   relax latency requirements a step at a time. Multiple policies are
--   applied based on their maximum allowed latency, starting with the
--   lowest value.
gameSessionQueue_playerLatencyPolicies :: Lens' GameSessionQueue (Maybe [PlayerLatencyPolicy])

-- | Custom settings to use when prioritizing destinations and locations
--   for game session placements. This configuration replaces the FleetIQ
--   default prioritization process. Priority types that are not explicitly
--   named will be automatically applied at the end of the prioritization
--   process.
gameSessionQueue_priorityConfiguration :: Lens' GameSessionQueue (Maybe PriorityConfiguration)

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
gameSessionQueue_name :: Lens' GameSessionQueue (Maybe Text)

-- | A list of fleets and/or fleet aliases that can be used to fulfill game
--   session placement requests in the queue. Destinations are identified
--   by either a fleet ARN or a fleet alias ARN, and are listed in order of
--   placement preference.
gameSessionQueue_destinations :: Lens' GameSessionQueue (Maybe [GameSessionQueueDestination])

-- | The maximum time, in seconds, that a new game session placement
--   request remains in the queue. When a request exceeds this time, the
--   game session placement changes to a <tt>TIMED_OUT</tt> status.
gameSessionQueue_timeoutInSeconds :: Lens' GameSessionQueue (Maybe Natural)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. In a GameLift game session queue ARN, the resource ID
--   matches the <i>Name</i> value.
gameSessionQueue_gameSessionQueueArn :: Lens' GameSessionQueue (Maybe Text)

-- | An SNS topic ARN that is set up to receive game session placement
--   notifications. See <a>Setting up notifications for game session
--   placement</a>.
gameSessionQueue_notificationTarget :: Lens' GameSessionQueue (Maybe Text)

-- | A list of locations where a queue is allowed to place new game
--   sessions. Locations are specified in the form of AWS Region codes,
--   such as <tt>us-west-2</tt>. If this parameter is not set, game
--   sessions can be placed in any queue location.
gameSessionQueue_filterConfiguration :: Lens' GameSessionQueue (Maybe FilterConfiguration)

-- | A fleet or alias designated in a game session queue. Queues fulfill
--   requests for new game sessions by placing a new game session on any of
--   the queue's destinations.
--   
--   Destinations are part of a GameSessionQueue.
--   
--   <i>See:</i> <a>newGameSessionQueueDestination</a> smart constructor.
data GameSessionQueueDestination
GameSessionQueueDestination' :: Maybe Text -> GameSessionQueueDestination

-- | The Amazon Resource Name (ARN) that is assigned to fleet or fleet
--   alias. ARNs, which include a fleet ID or alias ID and a Region name,
--   provide a unique identifier across all Regions.
[$sel:destinationArn:GameSessionQueueDestination'] :: GameSessionQueueDestination -> Maybe Text

-- | Create a value of <a>GameSessionQueueDestination</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationArn:GameSessionQueueDestination'</a>,
--   <a>gameSessionQueueDestination_destinationArn</a> - The Amazon
--   Resource Name (ARN) that is assigned to fleet or fleet alias. ARNs,
--   which include a fleet ID or alias ID and a Region name, provide a
--   unique identifier across all Regions.
newGameSessionQueueDestination :: GameSessionQueueDestination

-- | The Amazon Resource Name (ARN) that is assigned to fleet or fleet
--   alias. ARNs, which include a fleet ID or alias ID and a Region name,
--   provide a unique identifier across all Regions.
gameSessionQueueDestination_destinationArn :: Lens' GameSessionQueueDestination (Maybe Text)

-- | Represents an EC2 instance of virtual computing resources that hosts
--   one or more game servers. In GameLift, a fleet can contain zero or
--   more instances.
--   
--   <b>Related actions</b>
--   
--   DescribeInstances
--   
--   <i>See:</i> <a>newInstance</a> smart constructor.
data Instance
Instance' :: Maybe POSIX -> Maybe InstanceStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe OperatingSystem -> Maybe EC2InstanceType -> Maybe Text -> Instance

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:Instance'] :: Instance -> Maybe POSIX

-- | Current status of the instance. Possible statuses include the
--   following:
--   
--   <ul>
--   <li><b>PENDING</b> -- The instance is in the process of being created
--   and launching server processes as defined in the fleet's run-time
--   configuration.</li>
--   <li><b>ACTIVE</b> -- The instance has been successfully created and at
--   least one server process has successfully launched and reported back
--   to GameLift that it is ready to host a game session. The instance is
--   now considered ready to host game sessions.</li>
--   <li><b>TERMINATING</b> -- The instance is in the process of shutting
--   down. This may happen to reduce capacity during a scaling down event
--   or to recycle resources in the event of a problem.</li>
--   </ul>
[$sel:status:Instance'] :: Instance -> Maybe InstanceStatus

-- | A unique identifier for the instance.
[$sel:instanceId:Instance'] :: Instance -> Maybe Text

-- | A unique identifier for the fleet that the instance is in.
[$sel:fleetId:Instance'] :: Instance -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:Instance'] :: Instance -> Maybe Text

-- | IP address that is assigned to the instance.
[$sel:ipAddress:Instance'] :: Instance -> Maybe Text

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
[$sel:dnsName:Instance'] :: Instance -> Maybe Text

-- | Operating system that is running on this instance.
[$sel:operatingSystem:Instance'] :: Instance -> Maybe OperatingSystem

-- | EC2 instance type that defines the computing resources of this
--   instance.
[$sel:type':Instance'] :: Instance -> Maybe EC2InstanceType

-- | The fleet location of the instance, expressed as an AWS Region code,
--   such as <tt>us-west-2</tt>.
[$sel:location:Instance'] :: Instance -> Maybe Text

-- | Create a value of <a>Instance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Instance'</a>, <a>instance_creationTime</a> - A
--   time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:Instance'</a>, <a>instance_status</a> - Current status
--   of the instance. Possible statuses include the following:
--   
--   <ul>
--   <li><b>PENDING</b> -- The instance is in the process of being created
--   and launching server processes as defined in the fleet's run-time
--   configuration.</li>
--   <li><b>ACTIVE</b> -- The instance has been successfully created and at
--   least one server process has successfully launched and reported back
--   to GameLift that it is ready to host a game session. The instance is
--   now considered ready to host game sessions.</li>
--   <li><b>TERMINATING</b> -- The instance is in the process of shutting
--   down. This may happen to reduce capacity during a scaling down event
--   or to recycle resources in the event of a problem.</li>
--   </ul>
--   
--   <a>$sel:instanceId:Instance'</a>, <a>instance_instanceId</a> - A
--   unique identifier for the instance.
--   
--   <a>$sel:fleetId:Instance'</a>, <a>instance_fleetId</a> - A unique
--   identifier for the fleet that the instance is in.
--   
--   <a>$sel:fleetArn:Instance'</a>, <a>instance_fleetArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift fleet
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:ipAddress:Instance'</a>, <a>instance_ipAddress</a> - IP
--   address that is assigned to the instance.
--   
--   <a>$sel:dnsName:Instance'</a>, <a>instance_dnsName</a> - The DNS
--   identifier assigned to the instance that is running the game session.
--   Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
--   
--   <a>$sel:operatingSystem:Instance'</a>, <a>instance_operatingSystem</a>
--   - Operating system that is running on this instance.
--   
--   <a>$sel:type':Instance'</a>, <a>instance_type</a> - EC2 instance type
--   that defines the computing resources of this instance.
--   
--   <a>$sel:location:Instance'</a>, <a>instance_location</a> - The fleet
--   location of the instance, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
newInstance :: Instance

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
instance_creationTime :: Lens' Instance (Maybe UTCTime)

-- | Current status of the instance. Possible statuses include the
--   following:
--   
--   <ul>
--   <li><b>PENDING</b> -- The instance is in the process of being created
--   and launching server processes as defined in the fleet's run-time
--   configuration.</li>
--   <li><b>ACTIVE</b> -- The instance has been successfully created and at
--   least one server process has successfully launched and reported back
--   to GameLift that it is ready to host a game session. The instance is
--   now considered ready to host game sessions.</li>
--   <li><b>TERMINATING</b> -- The instance is in the process of shutting
--   down. This may happen to reduce capacity during a scaling down event
--   or to recycle resources in the event of a problem.</li>
--   </ul>
instance_status :: Lens' Instance (Maybe InstanceStatus)

-- | A unique identifier for the instance.
instance_instanceId :: Lens' Instance (Maybe Text)

-- | A unique identifier for the fleet that the instance is in.
instance_fleetId :: Lens' Instance (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
instance_fleetArn :: Lens' Instance (Maybe Text)

-- | IP address that is assigned to the instance.
instance_ipAddress :: Lens' Instance (Maybe Text)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
instance_dnsName :: Lens' Instance (Maybe Text)

-- | Operating system that is running on this instance.
instance_operatingSystem :: Lens' Instance (Maybe OperatingSystem)

-- | EC2 instance type that defines the computing resources of this
--   instance.
instance_type :: Lens' Instance (Maybe EC2InstanceType)

-- | The fleet location of the instance, expressed as an AWS Region code,
--   such as <tt>us-west-2</tt>.
instance_location :: Lens' Instance (Maybe Text)

-- | Information required to remotely connect to a fleet instance. Access
--   is requested by calling GetInstanceAccess.
--   
--   <i>See:</i> <a>newInstanceAccess</a> smart constructor.
data InstanceAccess
InstanceAccess' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe OperatingSystem -> Maybe (Sensitive InstanceCredentials) -> InstanceAccess

-- | A unique identifier for the instance being accessed.
[$sel:instanceId:InstanceAccess'] :: InstanceAccess -> Maybe Text

-- | A unique identifier for the fleet containing the instance being
--   accessed.
[$sel:fleetId:InstanceAccess'] :: InstanceAccess -> Maybe Text

-- | IP address that is assigned to the instance.
[$sel:ipAddress:InstanceAccess'] :: InstanceAccess -> Maybe Text

-- | Operating system that is running on the instance.
[$sel:operatingSystem:InstanceAccess'] :: InstanceAccess -> Maybe OperatingSystem

-- | Credentials required to access the instance.
[$sel:credentials:InstanceAccess'] :: InstanceAccess -> Maybe (Sensitive InstanceCredentials)

-- | Create a value of <a>InstanceAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:InstanceAccess'</a>,
--   <a>instanceAccess_instanceId</a> - A unique identifier for the
--   instance being accessed.
--   
--   <a>$sel:fleetId:InstanceAccess'</a>, <a>instanceAccess_fleetId</a> - A
--   unique identifier for the fleet containing the instance being
--   accessed.
--   
--   <a>$sel:ipAddress:InstanceAccess'</a>, <a>instanceAccess_ipAddress</a>
--   - IP address that is assigned to the instance.
--   
--   <a>$sel:operatingSystem:InstanceAccess'</a>,
--   <a>instanceAccess_operatingSystem</a> - Operating system that is
--   running on the instance.
--   
--   <a>$sel:credentials:InstanceAccess'</a>,
--   <a>instanceAccess_credentials</a> - Credentials required to access the
--   instance.
newInstanceAccess :: InstanceAccess

-- | A unique identifier for the instance being accessed.
instanceAccess_instanceId :: Lens' InstanceAccess (Maybe Text)

-- | A unique identifier for the fleet containing the instance being
--   accessed.
instanceAccess_fleetId :: Lens' InstanceAccess (Maybe Text)

-- | IP address that is assigned to the instance.
instanceAccess_ipAddress :: Lens' InstanceAccess (Maybe Text)

-- | Operating system that is running on the instance.
instanceAccess_operatingSystem :: Lens' InstanceAccess (Maybe OperatingSystem)

-- | Credentials required to access the instance.
instanceAccess_credentials :: Lens' InstanceAccess (Maybe InstanceCredentials)

-- | Set of credentials required to remotely access a fleet instance.
--   Access credentials are requested by calling GetInstanceAccess and
--   returned in an InstanceAccess object.
--   
--   <i>See:</i> <a>newInstanceCredentials</a> smart constructor.
data InstanceCredentials
InstanceCredentials' :: Maybe Text -> Maybe Text -> InstanceCredentials

-- | User login string.
[$sel:userName:InstanceCredentials'] :: InstanceCredentials -> Maybe Text

-- | Secret string. For Windows instances, the secret is a password for use
--   with Windows Remote Desktop. For Linux instances, it is a private key
--   (which must be saved as a <tt>.pem</tt> file) for use with SSH.
[$sel:secret:InstanceCredentials'] :: InstanceCredentials -> Maybe Text

-- | Create a value of <a>InstanceCredentials</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:InstanceCredentials'</a>,
--   <a>instanceCredentials_userName</a> - User login string.
--   
--   <a>$sel:secret:InstanceCredentials'</a>,
--   <a>instanceCredentials_secret</a> - Secret string. For Windows
--   instances, the secret is a password for use with Windows Remote
--   Desktop. For Linux instances, it is a private key (which must be saved
--   as a <tt>.pem</tt> file) for use with SSH.
newInstanceCredentials :: InstanceCredentials

-- | User login string.
instanceCredentials_userName :: Lens' InstanceCredentials (Maybe Text)

-- | Secret string. For Windows instances, the secret is a password for use
--   with Windows Remote Desktop. For Linux instances, it is a private key
--   (which must be saved as a <tt>.pem</tt> file) for use with SSH.
instanceCredentials_secret :: Lens' InstanceCredentials (Maybe Text)

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   An allowed instance type for a GameServerGroup. All game server groups
--   must have at least two instance types defined for it. GameLift FleetIQ
--   periodically evaluates each defined instance type for viability. It
--   then updates the Auto Scaling group with the list of viable instance
--   types.
--   
--   <i>See:</i> <a>newInstanceDefinition</a> smart constructor.
data InstanceDefinition
InstanceDefinition' :: Maybe Text -> GameServerGroupInstanceType -> InstanceDefinition

-- | Instance weighting that indicates how much this instance type
--   contributes to the total capacity of a game server group. Instance
--   weights are used by GameLift FleetIQ to calculate the instance type's
--   cost per unit hour and better identify the most cost-effective
--   options. For detailed information on weighting instance capacity, see
--   <a>Instance Weighting</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>. Default value is "1".
[$sel:weightedCapacity:InstanceDefinition'] :: InstanceDefinition -> Maybe Text

-- | An EC2 instance type designation.
[$sel:instanceType:InstanceDefinition'] :: InstanceDefinition -> GameServerGroupInstanceType

-- | Create a value of <a>InstanceDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weightedCapacity:InstanceDefinition'</a>,
--   <a>instanceDefinition_weightedCapacity</a> - Instance weighting that
--   indicates how much this instance type contributes to the total
--   capacity of a game server group. Instance weights are used by GameLift
--   FleetIQ to calculate the instance type's cost per unit hour and better
--   identify the most cost-effective options. For detailed information on
--   weighting instance capacity, see <a>Instance Weighting</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>. Default value is "1".
--   
--   <a>$sel:instanceType:InstanceDefinition'</a>,
--   <a>instanceDefinition_instanceType</a> - An EC2 instance type
--   designation.
newInstanceDefinition :: GameServerGroupInstanceType -> InstanceDefinition

-- | Instance weighting that indicates how much this instance type
--   contributes to the total capacity of a game server group. Instance
--   weights are used by GameLift FleetIQ to calculate the instance type's
--   cost per unit hour and better identify the most cost-effective
--   options. For detailed information on weighting instance capacity, see
--   <a>Instance Weighting</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>. Default value is "1".
instanceDefinition_weightedCapacity :: Lens' InstanceDefinition (Maybe Text)

-- | An EC2 instance type designation.
instanceDefinition_instanceType :: Lens' InstanceDefinition GameServerGroupInstanceType

-- | A range of IP addresses and port settings that allow inbound traffic
--   to connect to server processes on an instance in a fleet. New game
--   sessions are assigned an IP address/port number combination, which
--   must fall into the fleet's allowed ranges. Fleets with custom game
--   builds must have permissions explicitly set. For Realtime Servers
--   fleets, GameLift automatically opens two port ranges, one for TCP
--   messaging and one for UDP.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetPortSettings
--   
--   <i>See:</i> <a>newIpPermission</a> smart constructor.
data IpPermission
IpPermission' :: Natural -> Natural -> Text -> IpProtocol -> IpPermission

-- | A starting value for a range of allowed port numbers.
[$sel:fromPort:IpPermission'] :: IpPermission -> Natural

-- | An ending value for a range of allowed port numbers. Port numbers are
--   end-inclusive. This value must be higher than <tt>FromPort</tt>.
[$sel:toPort:IpPermission'] :: IpPermission -> Natural

-- | A range of allowed IP addresses. This value must be expressed in CIDR
--   notation. Example: "<tt>000.000.000.000/[subnet mask]</tt>" or
--   optionally the shortened version "<tt>0.0.0.0/[subnet mask]</tt>".
[$sel:ipRange:IpPermission'] :: IpPermission -> Text

-- | The network communication protocol used by the fleet.
[$sel:protocol:IpPermission'] :: IpPermission -> IpProtocol

-- | Create a value of <a>IpPermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fromPort:IpPermission'</a>, <a>ipPermission_fromPort</a> - A
--   starting value for a range of allowed port numbers.
--   
--   <a>$sel:toPort:IpPermission'</a>, <a>ipPermission_toPort</a> - An
--   ending value for a range of allowed port numbers. Port numbers are
--   end-inclusive. This value must be higher than <tt>FromPort</tt>.
--   
--   <a>$sel:ipRange:IpPermission'</a>, <a>ipPermission_ipRange</a> - A
--   range of allowed IP addresses. This value must be expressed in CIDR
--   notation. Example: "<tt>000.000.000.000/[subnet mask]</tt>" or
--   optionally the shortened version "<tt>0.0.0.0/[subnet mask]</tt>".
--   
--   <a>$sel:protocol:IpPermission'</a>, <a>ipPermission_protocol</a> - The
--   network communication protocol used by the fleet.
newIpPermission :: Natural -> Natural -> Text -> IpProtocol -> IpPermission

-- | A starting value for a range of allowed port numbers.
ipPermission_fromPort :: Lens' IpPermission Natural

-- | An ending value for a range of allowed port numbers. Port numbers are
--   end-inclusive. This value must be higher than <tt>FromPort</tt>.
ipPermission_toPort :: Lens' IpPermission Natural

-- | A range of allowed IP addresses. This value must be expressed in CIDR
--   notation. Example: "<tt>000.000.000.000/[subnet mask]</tt>" or
--   optionally the shortened version "<tt>0.0.0.0/[subnet mask]</tt>".
ipPermission_ipRange :: Lens' IpPermission Text

-- | The network communication protocol used by the fleet.
ipPermission_protocol :: Lens' IpPermission IpProtocol

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   An EC2 launch template that contains configuration settings and game
--   server code to be deployed to all instances in a game server group.
--   The launch template is specified when creating a new game server group
--   with CreateGameServerGroup.
--   
--   <i>See:</i> <a>newLaunchTemplateSpecification</a> smart constructor.
data LaunchTemplateSpecification
LaunchTemplateSpecification' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchTemplateSpecification

-- | A unique identifier for an existing EC2 launch template.
[$sel:launchTemplateId:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The version of the EC2 launch template to use. If no version is
--   specified, the default version will be used. With Amazon EC2, you can
--   specify a default version for a launch template. If none is set, the
--   default is the first version created.
[$sel:version:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | A readable identifier for an existing EC2 launch template.
[$sel:launchTemplateName:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | Create a value of <a>LaunchTemplateSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplateId:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateId</a> - A unique
--   identifier for an existing EC2 launch template.
--   
--   <a>$sel:version:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_version</a> - The version of the EC2
--   launch template to use. If no version is specified, the default
--   version will be used. With Amazon EC2, you can specify a default
--   version for a launch template. If none is set, the default is the
--   first version created.
--   
--   <a>$sel:launchTemplateName:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateName</a> - A readable
--   identifier for an existing EC2 launch template.
newLaunchTemplateSpecification :: LaunchTemplateSpecification

-- | A unique identifier for an existing EC2 launch template.
launchTemplateSpecification_launchTemplateId :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The version of the EC2 launch template to use. If no version is
--   specified, the default version will be used. With Amazon EC2, you can
--   specify a default version for a launch template. If none is set, the
--   default is the first version created.
launchTemplateSpecification_version :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | A readable identifier for an existing EC2 launch template.
launchTemplateSpecification_launchTemplateName :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | Represents a location in a multi-location fleet.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetLocationAttributes
--   
--   <i>See:</i> <a>newLocationAttributes</a> smart constructor.
data LocationAttributes
LocationAttributes' :: Maybe LocationUpdateStatus -> Maybe LocationState -> Maybe (NonEmpty FleetAction) -> LocationAttributes

-- | The status of fleet activity updates to the location. The status
--   <tt>PENDING_UPDATE</tt> indicates that StopFleetActions or
--   StartFleetActions has been requested but the update has not yet been
--   completed for the location.
[$sel:updateStatus:LocationAttributes'] :: LocationAttributes -> Maybe LocationUpdateStatus

-- | A fleet location and its current life-cycle state.
[$sel:locationState:LocationAttributes'] :: LocationAttributes -> Maybe LocationState

-- | A list of fleet actions that have been suspended in the fleet
--   location.
[$sel:stoppedActions:LocationAttributes'] :: LocationAttributes -> Maybe (NonEmpty FleetAction)

-- | Create a value of <a>LocationAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updateStatus:LocationAttributes'</a>,
--   <a>locationAttributes_updateStatus</a> - The status of fleet activity
--   updates to the location. The status <tt>PENDING_UPDATE</tt> indicates
--   that StopFleetActions or StartFleetActions has been requested but the
--   update has not yet been completed for the location.
--   
--   <a>$sel:locationState:LocationAttributes'</a>,
--   <a>locationAttributes_locationState</a> - A fleet location and its
--   current life-cycle state.
--   
--   <a>$sel:stoppedActions:LocationAttributes'</a>,
--   <a>locationAttributes_stoppedActions</a> - A list of fleet actions
--   that have been suspended in the fleet location.
newLocationAttributes :: LocationAttributes

-- | The status of fleet activity updates to the location. The status
--   <tt>PENDING_UPDATE</tt> indicates that StopFleetActions or
--   StartFleetActions has been requested but the update has not yet been
--   completed for the location.
locationAttributes_updateStatus :: Lens' LocationAttributes (Maybe LocationUpdateStatus)

-- | A fleet location and its current life-cycle state.
locationAttributes_locationState :: Lens' LocationAttributes (Maybe LocationState)

-- | A list of fleet actions that have been suspended in the fleet
--   location.
locationAttributes_stoppedActions :: Lens' LocationAttributes (Maybe (NonEmpty FleetAction))

-- | A remote location where a multi-location fleet can deploy EC2
--   instances for game hosting.
--   
--   <b>Related actions</b>
--   
--   CreateFleet
--   
--   <i>See:</i> <a>newLocationConfiguration</a> smart constructor.
data LocationConfiguration
LocationConfiguration' :: Maybe Text -> LocationConfiguration

-- | An AWS Region code, such as <tt>us-west-2</tt>.
[$sel:location:LocationConfiguration'] :: LocationConfiguration -> Maybe Text

-- | Create a value of <a>LocationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:LocationConfiguration'</a>,
--   <a>locationConfiguration_location</a> - An AWS Region code, such as
--   <tt>us-west-2</tt>.
newLocationConfiguration :: LocationConfiguration

-- | An AWS Region code, such as <tt>us-west-2</tt>.
locationConfiguration_location :: Lens' LocationConfiguration (Maybe Text)

-- | A fleet location and its life-cycle state. A location state object
--   might be used to describe a fleet's remote location or home Region.
--   Life-cycle state tracks the progress of launching the first instance
--   in a new location and preparing it for game hosting, and then removing
--   all instances and deleting the location from the fleet.
--   
--   <b>Related actions</b>
--   
--   CreateFleet | CreateFleetLocations | DeleteFleetLocations
--   
--   <i>See:</i> <a>newLocationState</a> smart constructor.
data LocationState
LocationState' :: Maybe FleetStatus -> Maybe Text -> LocationState

-- | The life-cycle status of a fleet location.
[$sel:status:LocationState'] :: LocationState -> Maybe FleetStatus

-- | The fleet location, expressed as an AWS Region code such as
--   <tt>us-west-2</tt>.
[$sel:location:LocationState'] :: LocationState -> Maybe Text

-- | Create a value of <a>LocationState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:LocationState'</a>, <a>locationState_status</a> - The
--   life-cycle status of a fleet location.
--   
--   <a>$sel:location:LocationState'</a>, <a>locationState_location</a> -
--   The fleet location, expressed as an AWS Region code such as
--   <tt>us-west-2</tt>.
newLocationState :: LocationState

-- | The life-cycle status of a fleet location.
locationState_status :: Lens' LocationState (Maybe FleetStatus)

-- | The fleet location, expressed as an AWS Region code such as
--   <tt>us-west-2</tt>.
locationState_location :: Lens' LocationState (Maybe Text)

-- | Represents a new player session that is created as a result of a
--   successful FlexMatch match. A successful match automatically creates
--   new player sessions for every player ID in the original matchmaking
--   request.
--   
--   When players connect to the match's game session, they must include
--   both player ID and player session ID in order to claim their assigned
--   player slot.
--   
--   <i>See:</i> <a>newMatchedPlayerSession</a> smart constructor.
data MatchedPlayerSession
MatchedPlayerSession' :: Maybe Text -> Maybe Text -> MatchedPlayerSession

-- | A unique identifier for a player
[$sel:playerId:MatchedPlayerSession'] :: MatchedPlayerSession -> Maybe Text

-- | A unique identifier for a player session
[$sel:playerSessionId:MatchedPlayerSession'] :: MatchedPlayerSession -> Maybe Text

-- | Create a value of <a>MatchedPlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerId:MatchedPlayerSession'</a>,
--   <a>matchedPlayerSession_playerId</a> - A unique identifier for a
--   player
--   
--   <a>$sel:playerSessionId:MatchedPlayerSession'</a>,
--   <a>matchedPlayerSession_playerSessionId</a> - A unique identifier for
--   a player session
newMatchedPlayerSession :: MatchedPlayerSession

-- | A unique identifier for a player
matchedPlayerSession_playerId :: Lens' MatchedPlayerSession (Maybe Text)

-- | A unique identifier for a player session
matchedPlayerSession_playerSessionId :: Lens' MatchedPlayerSession (Maybe Text)

-- | Guidelines for use with FlexMatch to match players into games. All
--   matchmaking requests must specify a matchmaking configuration.
--   
--   <i>See:</i> <a>newMatchmakingConfiguration</a> smart constructor.
data MatchmakingConfiguration
MatchmakingConfiguration' :: Maybe FlexMatchMode -> Maybe Text -> Maybe BackfillMode -> Maybe [GameProperty] -> Maybe POSIX -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Bool -> MatchmakingConfiguration

-- | Indicates whether this matchmaking configuration is being used with
--   GameLift hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
[$sel:flexMatchMode:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe FlexMatchMode

-- | Information to attach to all events related to the matchmaking
--   configuration.
[$sel:customEventData:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | The method used to backfill game sessions created with this
--   matchmaking configuration. MANUAL indicates that the game makes
--   backfill requests or does not use the match backfill feature.
--   AUTOMATIC indicates that GameLift creates StartMatchBackfill requests
--   whenever a game session has one or more open slots. Learn more about
--   manual and automatic backfill in <a>Backfill existing games with
--   FlexMatch</a>. Automatic backfill is not available when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:backfillMode:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe BackfillMode

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>). This information is added to the new
--   GameSession object that is created for a successful match. This
--   parameter is not used when <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
[$sel:gameProperties:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe [GameProperty]

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe POSIX

-- | The length of time (in seconds) to wait for players to accept a
--   proposed match, if acceptance is required. If any player rejects the
--   match or fails to accept before the timeout, the ticket continues to
--   look for an acceptable match.
[$sel:acceptanceTimeoutSeconds:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Natural

-- | The number of player slots in a match to keep open for future players.
--   For example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:additionalPlayerCount:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Natural

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:gameSessionData:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   matchmaking configuration resource and uniquely identifies it. ARNs
--   are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingconfiguration/&lt;matchmaking
--   configuration name&gt;</tt>. In a GameLift configuration ARN, the
--   resource ID matches the <i>Name</i> value.
[$sel:configurationArn:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | A unique identifier for the matchmaking configuration. This name is
--   used to identify the configuration associated with a matchmaking
--   request or ticket.
[$sel:name:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. This property is not set when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:gameSessionQueueArns:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe [Text]

-- | An SNS topic ARN that is set up to receive matchmaking notifications.
[$sel:notificationTarget:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   matchmaking rule set resource that this configuration uses.
[$sel:ruleSetArn:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | The maximum duration, in seconds, that a matchmaking ticket can remain
--   in process before timing out. Requests that fail due to timing out can
--   be resubmitted as needed.
[$sel:requestTimeoutSeconds:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Natural

-- | A descriptive label that is associated with matchmaking configuration.
[$sel:description:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | A unique identifier for the matchmaking rule set to use with this
--   configuration. A matchmaking configuration can only use rule sets that
--   are defined in the same Region.
[$sel:ruleSetName:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Text

-- | A flag that indicates whether a match that was created with this
--   configuration must be accepted by the matched players. To require
--   acceptance, set to TRUE. When this option is enabled, matchmaking
--   tickets use the status <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a
--   completed potential match is waiting for player acceptance.
[$sel:acceptanceRequired:MatchmakingConfiguration'] :: MatchmakingConfiguration -> Maybe Bool

-- | Create a value of <a>MatchmakingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flexMatchMode:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_flexMatchMode</a> - Indicates whether this
--   matchmaking configuration is being used with GameLift hosting or as a
--   standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
--   
--   <a>$sel:customEventData:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_customEventData</a> - Information to
--   attach to all events related to the matchmaking configuration.
--   
--   <a>$sel:backfillMode:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_backfillMode</a> - The method used to
--   backfill game sessions created with this matchmaking configuration.
--   MANUAL indicates that the game makes backfill requests or does not use
--   the match backfill feature. AUTOMATIC indicates that GameLift creates
--   StartMatchBackfill requests whenever a game session has one or more
--   open slots. Learn more about manual and automatic backfill in
--   <a>Backfill existing games with FlexMatch</a>. Automatic backfill is
--   not available when <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameProperties:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_gameProperties</a> - A set of custom
--   properties for a game session, formatted as key:value pairs. These
--   properties are passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:creationTime:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_creationTime</a> - A time stamp indicating
--   when this data object was created. Format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:acceptanceTimeoutSeconds:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_acceptanceTimeoutSeconds</a> - The length
--   of time (in seconds) to wait for players to accept a proposed match,
--   if acceptance is required. If any player rejects the match or fails to
--   accept before the timeout, the ticket continues to look for an
--   acceptable match.
--   
--   <a>$sel:additionalPlayerCount:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_additionalPlayerCount</a> - The number of
--   player slots in a match to keep open for future players. For example,
--   if the configuration's rule set specifies a match for a single
--   12-person team, and the additional player count is set to 2, only 10
--   players are selected for the match. This parameter is not used when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameSessionData:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_gameSessionData</a> - A set of custom game
--   session properties, formatted as a single string value. This data is
--   passed to a game server process in the GameSession object with a
--   request to start a new game session (see <a>Start a Game Session</a>).
--   This information is added to the new GameSession object that is
--   created for a successful match. This parameter is not used when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:configurationArn:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_configurationArn</a> - The Amazon Resource
--   Name (<a>ARN</a>) that is assigned to a GameLift matchmaking
--   configuration resource and uniquely identifies it. ARNs are unique
--   across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingconfiguration/&lt;matchmaking
--   configuration name&gt;</tt>. In a GameLift configuration ARN, the
--   resource ID matches the <i>Name</i> value.
--   
--   <a>$sel:name:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_name</a> - A unique identifier for the
--   matchmaking configuration. This name is used to identify the
--   configuration associated with a matchmaking request or ticket.
--   
--   <a>$sel:gameSessionQueueArns:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_gameSessionQueueArns</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift game session
--   queue resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. This property is not set when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:notificationTarget:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_notificationTarget</a> - An SNS topic ARN
--   that is set up to receive matchmaking notifications.
--   
--   <a>$sel:ruleSetArn:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_ruleSetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift matchmaking rule set
--   resource that this configuration uses.
--   
--   <a>$sel:requestTimeoutSeconds:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_requestTimeoutSeconds</a> - The maximum
--   duration, in seconds, that a matchmaking ticket can remain in process
--   before timing out. Requests that fail due to timing out can be
--   resubmitted as needed.
--   
--   <a>$sel:description:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_description</a> - A descriptive label that
--   is associated with matchmaking configuration.
--   
--   <a>$sel:ruleSetName:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_ruleSetName</a> - A unique identifier for
--   the matchmaking rule set to use with this configuration. A matchmaking
--   configuration can only use rule sets that are defined in the same
--   Region.
--   
--   <a>$sel:acceptanceRequired:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_acceptanceRequired</a> - A flag that
--   indicates whether a match that was created with this configuration
--   must be accepted by the matched players. To require acceptance, set to
--   TRUE. When this option is enabled, matchmaking tickets use the status
--   <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a completed potential
--   match is waiting for player acceptance.
newMatchmakingConfiguration :: MatchmakingConfiguration

-- | Indicates whether this matchmaking configuration is being used with
--   GameLift hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
matchmakingConfiguration_flexMatchMode :: Lens' MatchmakingConfiguration (Maybe FlexMatchMode)

-- | Information to attach to all events related to the matchmaking
--   configuration.
matchmakingConfiguration_customEventData :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The method used to backfill game sessions created with this
--   matchmaking configuration. MANUAL indicates that the game makes
--   backfill requests or does not use the match backfill feature.
--   AUTOMATIC indicates that GameLift creates StartMatchBackfill requests
--   whenever a game session has one or more open slots. Learn more about
--   manual and automatic backfill in <a>Backfill existing games with
--   FlexMatch</a>. Automatic backfill is not available when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
matchmakingConfiguration_backfillMode :: Lens' MatchmakingConfiguration (Maybe BackfillMode)

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>). This information is added to the new
--   GameSession object that is created for a successful match. This
--   parameter is not used when <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
matchmakingConfiguration_gameProperties :: Lens' MatchmakingConfiguration (Maybe [GameProperty])

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
matchmakingConfiguration_creationTime :: Lens' MatchmakingConfiguration (Maybe UTCTime)

-- | The length of time (in seconds) to wait for players to accept a
--   proposed match, if acceptance is required. If any player rejects the
--   match or fails to accept before the timeout, the ticket continues to
--   look for an acceptable match.
matchmakingConfiguration_acceptanceTimeoutSeconds :: Lens' MatchmakingConfiguration (Maybe Natural)

-- | The number of player slots in a match to keep open for future players.
--   For example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
matchmakingConfiguration_additionalPlayerCount :: Lens' MatchmakingConfiguration (Maybe Natural)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
matchmakingConfiguration_gameSessionData :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   matchmaking configuration resource and uniquely identifies it. ARNs
--   are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingconfiguration/&lt;matchmaking
--   configuration name&gt;</tt>. In a GameLift configuration ARN, the
--   resource ID matches the <i>Name</i> value.
matchmakingConfiguration_configurationArn :: Lens' MatchmakingConfiguration (Maybe Text)

-- | A unique identifier for the matchmaking configuration. This name is
--   used to identify the configuration associated with a matchmaking
--   request or ticket.
matchmakingConfiguration_name :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. This property is not set when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
matchmakingConfiguration_gameSessionQueueArns :: Lens' MatchmakingConfiguration (Maybe [Text])

-- | An SNS topic ARN that is set up to receive matchmaking notifications.
matchmakingConfiguration_notificationTarget :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   matchmaking rule set resource that this configuration uses.
matchmakingConfiguration_ruleSetArn :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The maximum duration, in seconds, that a matchmaking ticket can remain
--   in process before timing out. Requests that fail due to timing out can
--   be resubmitted as needed.
matchmakingConfiguration_requestTimeoutSeconds :: Lens' MatchmakingConfiguration (Maybe Natural)

-- | A descriptive label that is associated with matchmaking configuration.
matchmakingConfiguration_description :: Lens' MatchmakingConfiguration (Maybe Text)

-- | A unique identifier for the matchmaking rule set to use with this
--   configuration. A matchmaking configuration can only use rule sets that
--   are defined in the same Region.
matchmakingConfiguration_ruleSetName :: Lens' MatchmakingConfiguration (Maybe Text)

-- | A flag that indicates whether a match that was created with this
--   configuration must be accepted by the matched players. To require
--   acceptance, set to TRUE. When this option is enabled, matchmaking
--   tickets use the status <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a
--   completed potential match is waiting for player acceptance.
matchmakingConfiguration_acceptanceRequired :: Lens' MatchmakingConfiguration (Maybe Bool)

-- | Set of rule statements, used with FlexMatch, that determine how to
--   build your player matches. Each rule set describes a type of group to
--   be created and defines the parameters for acceptable player matches.
--   Rule sets are used in MatchmakingConfiguration objects.
--   
--   A rule set may define the following elements for a match. For detailed
--   information and examples showing how to construct a rule set, see
--   <a>Build a FlexMatch rule set</a>.
--   
--   <ul>
--   <li>Teams -- Required. A rule set must define one or multiple teams
--   for the match and set minimum and maximum team sizes. For example, a
--   rule set might describe a 4x4 match that requires all eight slots to
--   be filled.</li>
--   <li>Player attributes -- Optional. These attributes specify a set of
--   player characteristics to evaluate when looking for a match.
--   Matchmaking requests that use a rule set with player attributes must
--   provide the corresponding attribute values. For example, an attribute
--   might specify a player's skill or level.</li>
--   <li>Rules -- Optional. Rules define how to evaluate potential players
--   for a match based on player attributes. A rule might specify minimum
--   requirements for individual players, teams, or entire matches. For
--   example, a rule might require each player to meet a certain skill
--   level, each team to have at least one player in a certain role, or the
--   match to have a minimum average skill level. or may describe an entire
--   group--such as all teams must be evenly matched or have at least one
--   player in a certain role.</li>
--   <li>Expansions -- Optional. Expansions allow you to relax the rules
--   after a period of time when no acceptable matches are found. This
--   feature lets you balance getting players into games in a reasonable
--   amount of time instead of making them wait indefinitely for the best
--   possible match. For example, you might use an expansion to increase
--   the maximum skill variance between players after 30 seconds.</li>
--   </ul>
--   
--   <i>See:</i> <a>newMatchmakingRuleSet</a> smart constructor.
data MatchmakingRuleSet
MatchmakingRuleSet' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Text -> MatchmakingRuleSet

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:MatchmakingRuleSet'] :: MatchmakingRuleSet -> Maybe POSIX

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   matchmaking rule set resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingruleset/&lt;ruleset
--   name&gt;</tt>. In a GameLift rule set ARN, the resource ID matches the
--   <i>RuleSetName</i> value.
[$sel:ruleSetArn:MatchmakingRuleSet'] :: MatchmakingRuleSet -> Maybe Text

-- | A unique identifier for the matchmaking rule set
[$sel:ruleSetName:MatchmakingRuleSet'] :: MatchmakingRuleSet -> Maybe Text

-- | A collection of matchmaking rules, formatted as a JSON string.
--   Comments are not allowed in JSON, but most elements support a
--   description field.
[$sel:ruleSetBody:MatchmakingRuleSet'] :: MatchmakingRuleSet -> Text

-- | Create a value of <a>MatchmakingRuleSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:MatchmakingRuleSet'</a>,
--   <a>matchmakingRuleSet_creationTime</a> - A time stamp indicating when
--   this data object was created. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:ruleSetArn:MatchmakingRuleSet'</a>,
--   <a>matchmakingRuleSet_ruleSetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift matchmaking rule set
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingruleset/&lt;ruleset
--   name&gt;</tt>. In a GameLift rule set ARN, the resource ID matches the
--   <i>RuleSetName</i> value.
--   
--   <a>$sel:ruleSetName:MatchmakingRuleSet'</a>,
--   <a>matchmakingRuleSet_ruleSetName</a> - A unique identifier for the
--   matchmaking rule set
--   
--   <a>$sel:ruleSetBody:MatchmakingRuleSet'</a>,
--   <a>matchmakingRuleSet_ruleSetBody</a> - A collection of matchmaking
--   rules, formatted as a JSON string. Comments are not allowed in JSON,
--   but most elements support a description field.
newMatchmakingRuleSet :: Text -> MatchmakingRuleSet

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
matchmakingRuleSet_creationTime :: Lens' MatchmakingRuleSet (Maybe UTCTime)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   matchmaking rule set resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingruleset/&lt;ruleset
--   name&gt;</tt>. In a GameLift rule set ARN, the resource ID matches the
--   <i>RuleSetName</i> value.
matchmakingRuleSet_ruleSetArn :: Lens' MatchmakingRuleSet (Maybe Text)

-- | A unique identifier for the matchmaking rule set
matchmakingRuleSet_ruleSetName :: Lens' MatchmakingRuleSet (Maybe Text)

-- | A collection of matchmaking rules, formatted as a JSON string.
--   Comments are not allowed in JSON, but most elements support a
--   description field.
matchmakingRuleSet_ruleSetBody :: Lens' MatchmakingRuleSet Text

-- | Ticket generated to track the progress of a matchmaking request. Each
--   ticket is uniquely identified by a ticket ID, supplied by the
--   requester, when creating a matchmaking request with StartMatchmaking.
--   Tickets can be retrieved by calling DescribeMatchmaking with the
--   ticket ID.
--   
--   <i>See:</i> <a>newMatchmakingTicket</a> smart constructor.
data MatchmakingTicket
MatchmakingTicket' :: Maybe Text -> Maybe MatchmakingConfigurationStatus -> Maybe Natural -> Maybe Text -> Maybe [Player] -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe GameSessionConnectionInfo -> Maybe Text -> MatchmakingTicket

-- | Additional information about the current status.
[$sel:statusMessage:MatchmakingTicket'] :: MatchmakingTicket -> Maybe Text

-- | Current status of the matchmaking request.
--   
--   <ul>
--   <li><b>QUEUED</b> -- The matchmaking request has been received and is
--   currently waiting to be processed.</li>
--   <li><b>SEARCHING</b> -- The matchmaking request is currently being
--   processed.</li>
--   <li><b>REQUIRES_ACCEPTANCE</b> -- A match has been proposed and the
--   players must accept the match (see AcceptMatch). This status is used
--   only with requests that use a matchmaking configuration with a player
--   acceptance requirement.</li>
--   <li><b>PLACING</b> -- The FlexMatch engine has matched players and is
--   in the process of placing a new game session for the match.</li>
--   <li><b>COMPLETED</b> -- Players have been matched and a game session
--   is ready to host the players. A ticket in this state contains the
--   necessary connection information for players.</li>
--   <li><b>FAILED</b> -- The matchmaking request was not completed.</li>
--   <li><b>CANCELLED</b> -- The matchmaking request was canceled. This may
--   be the result of a call to StopMatchmaking or a proposed match that
--   one or more players failed to accept.</li>
--   <li><b>TIMED_OUT</b> -- The matchmaking request was not successful
--   within the duration specified in the matchmaking configuration.</li>
--   </ul>
--   
--   Matchmaking requests that fail to successfully complete (statuses
--   FAILED, CANCELLED, TIMED_OUT) can be resubmitted as new requests with
--   new ticket IDs.
[$sel:status:MatchmakingTicket'] :: MatchmakingTicket -> Maybe MatchmakingConfigurationStatus

-- | Average amount of time (in seconds) that players are currently waiting
--   for a match. If there is not enough recent data, this property may be
--   empty.
[$sel:estimatedWaitTime:MatchmakingTicket'] :: MatchmakingTicket -> Maybe Natural

-- | A unique identifier for a matchmaking ticket.
[$sel:ticketId:MatchmakingTicket'] :: MatchmakingTicket -> Maybe Text

-- | A set of <tt>Player</tt> objects, each representing a player to find
--   matches for. Players are identified by a unique player ID and may
--   include latency data for use during matchmaking. If the ticket is in
--   status <tt>COMPLETED</tt>, the <tt>Player</tt> objects include the
--   team the players were assigned to in the resulting match.
[$sel:players:MatchmakingTicket'] :: MatchmakingTicket -> Maybe [Player]

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   matchmaking configuration resource that is used with this ticket.
[$sel:configurationArn:MatchmakingTicket'] :: MatchmakingTicket -> Maybe Text

-- | Time stamp indicating when this matchmaking request was received.
--   Format is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:startTime:MatchmakingTicket'] :: MatchmakingTicket -> Maybe POSIX

-- | Time stamp indicating when this matchmaking request stopped being
--   processed due to success, failure, or cancellation. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:endTime:MatchmakingTicket'] :: MatchmakingTicket -> Maybe POSIX

-- | Name of the MatchmakingConfiguration that is used with this ticket.
--   Matchmaking configurations determine how players are grouped into a
--   match and how a new game session is created for the match.
[$sel:configurationName:MatchmakingTicket'] :: MatchmakingTicket -> Maybe Text

-- | Identifier and connection information of the game session created for
--   the match. This information is added to the ticket only after the
--   matchmaking request has been successfully completed. This parameter is
--   not set when FlexMatch is being used without GameLift hosting.
[$sel:gameSessionConnectionInfo:MatchmakingTicket'] :: MatchmakingTicket -> Maybe GameSessionConnectionInfo

-- | Code to explain the current status. For example, a status reason may
--   indicate when a ticket has returned to <tt>SEARCHING</tt> status after
--   a proposed match fails to receive player acceptances.
[$sel:statusReason:MatchmakingTicket'] :: MatchmakingTicket -> Maybe Text

-- | Create a value of <a>MatchmakingTicket</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_statusMessage</a> - Additional information about
--   the current status.
--   
--   <a>$sel:status:MatchmakingTicket'</a>, <a>matchmakingTicket_status</a>
--   - Current status of the matchmaking request.
--   
--   <ul>
--   <li><b>QUEUED</b> -- The matchmaking request has been received and is
--   currently waiting to be processed.</li>
--   <li><b>SEARCHING</b> -- The matchmaking request is currently being
--   processed.</li>
--   <li><b>REQUIRES_ACCEPTANCE</b> -- A match has been proposed and the
--   players must accept the match (see AcceptMatch). This status is used
--   only with requests that use a matchmaking configuration with a player
--   acceptance requirement.</li>
--   <li><b>PLACING</b> -- The FlexMatch engine has matched players and is
--   in the process of placing a new game session for the match.</li>
--   <li><b>COMPLETED</b> -- Players have been matched and a game session
--   is ready to host the players. A ticket in this state contains the
--   necessary connection information for players.</li>
--   <li><b>FAILED</b> -- The matchmaking request was not completed.</li>
--   <li><b>CANCELLED</b> -- The matchmaking request was canceled. This may
--   be the result of a call to StopMatchmaking or a proposed match that
--   one or more players failed to accept.</li>
--   <li><b>TIMED_OUT</b> -- The matchmaking request was not successful
--   within the duration specified in the matchmaking configuration.</li>
--   </ul>
--   
--   Matchmaking requests that fail to successfully complete (statuses
--   FAILED, CANCELLED, TIMED_OUT) can be resubmitted as new requests with
--   new ticket IDs.
--   
--   <a>$sel:estimatedWaitTime:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_estimatedWaitTime</a> - Average amount of time
--   (in seconds) that players are currently waiting for a match. If there
--   is not enough recent data, this property may be empty.
--   
--   <a>$sel:ticketId:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_ticketId</a> - A unique identifier for a
--   matchmaking ticket.
--   
--   <a>$sel:players:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_players</a> - A set of <tt>Player</tt> objects,
--   each representing a player to find matches for. Players are identified
--   by a unique player ID and may include latency data for use during
--   matchmaking. If the ticket is in status <tt>COMPLETED</tt>, the
--   <tt>Player</tt> objects include the team the players were assigned to
--   in the resulting match.
--   
--   <a>$sel:configurationArn:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_configurationArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift matchmaking configuration
--   resource that is used with this ticket.
--   
--   <a>$sel:startTime:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_startTime</a> - Time stamp indicating when this
--   matchmaking request was received. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:endTime:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_endTime</a> - Time stamp indicating when this
--   matchmaking request stopped being processed due to success, failure,
--   or cancellation. Format is a number expressed in Unix time as
--   milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:configurationName:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_configurationName</a> - Name of the
--   MatchmakingConfiguration that is used with this ticket. Matchmaking
--   configurations determine how players are grouped into a match and how
--   a new game session is created for the match.
--   
--   <a>$sel:gameSessionConnectionInfo:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_gameSessionConnectionInfo</a> - Identifier and
--   connection information of the game session created for the match. This
--   information is added to the ticket only after the matchmaking request
--   has been successfully completed. This parameter is not set when
--   FlexMatch is being used without GameLift hosting.
--   
--   <a>$sel:statusReason:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_statusReason</a> - Code to explain the current
--   status. For example, a status reason may indicate when a ticket has
--   returned to <tt>SEARCHING</tt> status after a proposed match fails to
--   receive player acceptances.
newMatchmakingTicket :: MatchmakingTicket

-- | Additional information about the current status.
matchmakingTicket_statusMessage :: Lens' MatchmakingTicket (Maybe Text)

-- | Current status of the matchmaking request.
--   
--   <ul>
--   <li><b>QUEUED</b> -- The matchmaking request has been received and is
--   currently waiting to be processed.</li>
--   <li><b>SEARCHING</b> -- The matchmaking request is currently being
--   processed.</li>
--   <li><b>REQUIRES_ACCEPTANCE</b> -- A match has been proposed and the
--   players must accept the match (see AcceptMatch). This status is used
--   only with requests that use a matchmaking configuration with a player
--   acceptance requirement.</li>
--   <li><b>PLACING</b> -- The FlexMatch engine has matched players and is
--   in the process of placing a new game session for the match.</li>
--   <li><b>COMPLETED</b> -- Players have been matched and a game session
--   is ready to host the players. A ticket in this state contains the
--   necessary connection information for players.</li>
--   <li><b>FAILED</b> -- The matchmaking request was not completed.</li>
--   <li><b>CANCELLED</b> -- The matchmaking request was canceled. This may
--   be the result of a call to StopMatchmaking or a proposed match that
--   one or more players failed to accept.</li>
--   <li><b>TIMED_OUT</b> -- The matchmaking request was not successful
--   within the duration specified in the matchmaking configuration.</li>
--   </ul>
--   
--   Matchmaking requests that fail to successfully complete (statuses
--   FAILED, CANCELLED, TIMED_OUT) can be resubmitted as new requests with
--   new ticket IDs.
matchmakingTicket_status :: Lens' MatchmakingTicket (Maybe MatchmakingConfigurationStatus)

-- | Average amount of time (in seconds) that players are currently waiting
--   for a match. If there is not enough recent data, this property may be
--   empty.
matchmakingTicket_estimatedWaitTime :: Lens' MatchmakingTicket (Maybe Natural)

-- | A unique identifier for a matchmaking ticket.
matchmakingTicket_ticketId :: Lens' MatchmakingTicket (Maybe Text)

-- | A set of <tt>Player</tt> objects, each representing a player to find
--   matches for. Players are identified by a unique player ID and may
--   include latency data for use during matchmaking. If the ticket is in
--   status <tt>COMPLETED</tt>, the <tt>Player</tt> objects include the
--   team the players were assigned to in the resulting match.
matchmakingTicket_players :: Lens' MatchmakingTicket (Maybe [Player])

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   matchmaking configuration resource that is used with this ticket.
matchmakingTicket_configurationArn :: Lens' MatchmakingTicket (Maybe Text)

-- | Time stamp indicating when this matchmaking request was received.
--   Format is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
matchmakingTicket_startTime :: Lens' MatchmakingTicket (Maybe UTCTime)

-- | Time stamp indicating when this matchmaking request stopped being
--   processed due to success, failure, or cancellation. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
matchmakingTicket_endTime :: Lens' MatchmakingTicket (Maybe UTCTime)

-- | Name of the MatchmakingConfiguration that is used with this ticket.
--   Matchmaking configurations determine how players are grouped into a
--   match and how a new game session is created for the match.
matchmakingTicket_configurationName :: Lens' MatchmakingTicket (Maybe Text)

-- | Identifier and connection information of the game session created for
--   the match. This information is added to the ticket only after the
--   matchmaking request has been successfully completed. This parameter is
--   not set when FlexMatch is being used without GameLift hosting.
matchmakingTicket_gameSessionConnectionInfo :: Lens' MatchmakingTicket (Maybe GameSessionConnectionInfo)

-- | Code to explain the current status. For example, a status reason may
--   indicate when a ticket has returned to <tt>SEARCHING</tt> status after
--   a proposed match fails to receive player acceptances.
matchmakingTicket_statusReason :: Lens' MatchmakingTicket (Maybe Text)

-- | Information about a player session that was created as part of a
--   StartGameSessionPlacement request. This object contains only the
--   player ID and player session ID. To retrieve full details on a player
--   session, call DescribePlayerSessions with the player session ID.
--   
--   <b>Related actions</b>
--   
--   CreatePlayerSession | CreatePlayerSessions | DescribePlayerSessions |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newPlacedPlayerSession</a> smart constructor.
data PlacedPlayerSession
PlacedPlayerSession' :: Maybe Text -> Maybe Text -> PlacedPlayerSession

-- | A unique identifier for a player that is associated with this player
--   session.
[$sel:playerId:PlacedPlayerSession'] :: PlacedPlayerSession -> Maybe Text

-- | A unique identifier for a player session.
[$sel:playerSessionId:PlacedPlayerSession'] :: PlacedPlayerSession -> Maybe Text

-- | Create a value of <a>PlacedPlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerId:PlacedPlayerSession'</a>,
--   <a>placedPlayerSession_playerId</a> - A unique identifier for a player
--   that is associated with this player session.
--   
--   <a>$sel:playerSessionId:PlacedPlayerSession'</a>,
--   <a>placedPlayerSession_playerSessionId</a> - A unique identifier for a
--   player session.
newPlacedPlayerSession :: PlacedPlayerSession

-- | A unique identifier for a player that is associated with this player
--   session.
placedPlayerSession_playerId :: Lens' PlacedPlayerSession (Maybe Text)

-- | A unique identifier for a player session.
placedPlayerSession_playerSessionId :: Lens' PlacedPlayerSession (Maybe Text)

-- | Represents a player in matchmaking. When starting a matchmaking
--   request, a player has a player ID, attributes, and may have latency
--   data. Team information is added after a match has been successfully
--   completed.
--   
--   <i>See:</i> <a>newPlayer</a> smart constructor.
data Player
Player' :: Maybe (HashMap Text AttributeValue) -> Maybe (HashMap Text Natural) -> Maybe Text -> Maybe Text -> Player

-- | A collection of key:value pairs containing player information for use
--   in matchmaking. Player attribute keys must match the
--   <i>playerAttributes</i> used in a matchmaking rule set. Example:
--   <tt>"PlayerAttributes": {"skill": {"N": "23"}, "gameMode": {"S":
--   "deathmatch"}}</tt>.
[$sel:playerAttributes:Player'] :: Player -> Maybe (HashMap Text AttributeValue)

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions. If
--   this property is present, FlexMatch considers placing the match only
--   in Regions for which latency is reported.
--   
--   If a matchmaker has a rule that evaluates player latency, players must
--   report latency in order to be matched. If no latency is reported in
--   this scenario, FlexMatch assumes that no Regions are available to the
--   player and the ticket is not matchable.
[$sel:latencyInMs:Player'] :: Player -> Maybe (HashMap Text Natural)

-- | A unique identifier for a player
[$sel:playerId:Player'] :: Player -> Maybe Text

-- | Name of the team that the player is assigned to in a match. Team names
--   are defined in a matchmaking rule set.
[$sel:team:Player'] :: Player -> Maybe Text

-- | Create a value of <a>Player</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerAttributes:Player'</a>, <a>player_playerAttributes</a> -
--   A collection of key:value pairs containing player information for use
--   in matchmaking. Player attribute keys must match the
--   <i>playerAttributes</i> used in a matchmaking rule set. Example:
--   <tt>"PlayerAttributes": {"skill": {"N": "23"}, "gameMode": {"S":
--   "deathmatch"}}</tt>.
--   
--   <a>$sel:latencyInMs:Player'</a>, <a>player_latencyInMs</a> - A set of
--   values, expressed in milliseconds, that indicates the amount of
--   latency that a player experiences when connected to AWS Regions. If
--   this property is present, FlexMatch considers placing the match only
--   in Regions for which latency is reported.
--   
--   If a matchmaker has a rule that evaluates player latency, players must
--   report latency in order to be matched. If no latency is reported in
--   this scenario, FlexMatch assumes that no Regions are available to the
--   player and the ticket is not matchable.
--   
--   <a>$sel:playerId:Player'</a>, <a>player_playerId</a> - A unique
--   identifier for a player
--   
--   <a>$sel:team:Player'</a>, <a>player_team</a> - Name of the team that
--   the player is assigned to in a match. Team names are defined in a
--   matchmaking rule set.
newPlayer :: Player

-- | A collection of key:value pairs containing player information for use
--   in matchmaking. Player attribute keys must match the
--   <i>playerAttributes</i> used in a matchmaking rule set. Example:
--   <tt>"PlayerAttributes": {"skill": {"N": "23"}, "gameMode": {"S":
--   "deathmatch"}}</tt>.
player_playerAttributes :: Lens' Player (Maybe (HashMap Text AttributeValue))

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions. If
--   this property is present, FlexMatch considers placing the match only
--   in Regions for which latency is reported.
--   
--   If a matchmaker has a rule that evaluates player latency, players must
--   report latency in order to be matched. If no latency is reported in
--   this scenario, FlexMatch assumes that no Regions are available to the
--   player and the ticket is not matchable.
player_latencyInMs :: Lens' Player (Maybe (HashMap Text Natural))

-- | A unique identifier for a player
player_playerId :: Lens' Player (Maybe Text)

-- | Name of the team that the player is assigned to in a match. Team names
--   are defined in a matchmaking rule set.
player_team :: Lens' Player (Maybe Text)

-- | Regional latency information for a player, used when requesting a new
--   game session with StartGameSessionPlacement. This value indicates the
--   amount of time lag that exists when the player is connected to a fleet
--   in the specified Region. The relative difference between a player's
--   latency values for multiple Regions are used to determine which fleets
--   are best suited to place a new game session for the player.
--   
--   <i>See:</i> <a>newPlayerLatency</a> smart constructor.
data PlayerLatency
PlayerLatency' :: Maybe Text -> Maybe Double -> Maybe Text -> PlayerLatency

-- | A unique identifier for a player associated with the latency data.
[$sel:playerId:PlayerLatency'] :: PlayerLatency -> Maybe Text

-- | Amount of time that represents the time lag experienced by the player
--   when connected to the specified Region.
[$sel:latencyInMilliseconds:PlayerLatency'] :: PlayerLatency -> Maybe Double

-- | Name of the Region that is associated with the latency value.
[$sel:regionIdentifier:PlayerLatency'] :: PlayerLatency -> Maybe Text

-- | Create a value of <a>PlayerLatency</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerId:PlayerLatency'</a>, <a>playerLatency_playerId</a> - A
--   unique identifier for a player associated with the latency data.
--   
--   <a>$sel:latencyInMilliseconds:PlayerLatency'</a>,
--   <a>playerLatency_latencyInMilliseconds</a> - Amount of time that
--   represents the time lag experienced by the player when connected to
--   the specified Region.
--   
--   <a>$sel:regionIdentifier:PlayerLatency'</a>,
--   <a>playerLatency_regionIdentifier</a> - Name of the Region that is
--   associated with the latency value.
newPlayerLatency :: PlayerLatency

-- | A unique identifier for a player associated with the latency data.
playerLatency_playerId :: Lens' PlayerLatency (Maybe Text)

-- | Amount of time that represents the time lag experienced by the player
--   when connected to the specified Region.
playerLatency_latencyInMilliseconds :: Lens' PlayerLatency (Maybe Double)

-- | Name of the Region that is associated with the latency value.
playerLatency_regionIdentifier :: Lens' PlayerLatency (Maybe Text)

-- | Sets a latency cap for individual players when placing a game session.
--   With a latency policy in force, a game session cannot be placed in a
--   fleet location where a player reports latency higher than the cap.
--   Latency policies are used only with placement request that provide
--   player latency information. Player latency policies can be stacked to
--   gradually relax latency requirements over time.
--   
--   Latency policies are part of a GameSessionQueue.
--   
--   <i>See:</i> <a>newPlayerLatencyPolicy</a> smart constructor.
data PlayerLatencyPolicy
PlayerLatencyPolicy' :: Maybe Natural -> Maybe Natural -> PlayerLatencyPolicy

-- | The length of time, in seconds, that the policy is enforced while
--   placing a new game session. A null value for this property means that
--   the policy is enforced until the queue times out.
[$sel:policyDurationSeconds:PlayerLatencyPolicy'] :: PlayerLatencyPolicy -> Maybe Natural

-- | The maximum latency value that is allowed for any player, in
--   milliseconds. All policies must have a value set for this property.
[$sel:maximumIndividualPlayerLatencyMilliseconds:PlayerLatencyPolicy'] :: PlayerLatencyPolicy -> Maybe Natural

-- | Create a value of <a>PlayerLatencyPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyDurationSeconds:PlayerLatencyPolicy'</a>,
--   <a>playerLatencyPolicy_policyDurationSeconds</a> - The length of time,
--   in seconds, that the policy is enforced while placing a new game
--   session. A null value for this property means that the policy is
--   enforced until the queue times out.
--   
--   
--   <a>$sel:maximumIndividualPlayerLatencyMilliseconds:PlayerLatencyPolicy'</a>,
--   <a>playerLatencyPolicy_maximumIndividualPlayerLatencyMilliseconds</a>
--   - The maximum latency value that is allowed for any player, in
--   milliseconds. All policies must have a value set for this property.
newPlayerLatencyPolicy :: PlayerLatencyPolicy

-- | The length of time, in seconds, that the policy is enforced while
--   placing a new game session. A null value for this property means that
--   the policy is enforced until the queue times out.
playerLatencyPolicy_policyDurationSeconds :: Lens' PlayerLatencyPolicy (Maybe Natural)

-- | The maximum latency value that is allowed for any player, in
--   milliseconds. All policies must have a value set for this property.
playerLatencyPolicy_maximumIndividualPlayerLatencyMilliseconds :: Lens' PlayerLatencyPolicy (Maybe Natural)

-- | Represents a player session. Player sessions are created either for a
--   specific game session, or as part of a game session placement or
--   matchmaking request. A player session can represents a reserved player
--   slot in a game session (when status is <tt>RESERVED</tt>) or actual
--   player activity in a game session (when status is <tt>ACTIVE</tt>). A
--   player session object, including player data, is automatically passed
--   to a game session when the player connects to the game session and is
--   validated. After the game session ends, player sessions information is
--   retained for 30 days and then removed.
--   
--   <b>Related actions</b>
--   
--   CreatePlayerSession | CreatePlayerSessions | DescribePlayerSessions |
--   StartGameSessionPlacement | DescribeGameSessionPlacement | <a>All APIs
--   by task</a>
--   
--   <i>See:</i> <a>newPlayerSession</a> smart constructor.
data PlayerSession
PlayerSession' :: Maybe POSIX -> Maybe PlayerSessionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe Text -> PlayerSession

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:PlayerSession'] :: PlayerSession -> Maybe POSIX

-- | Current status of the player session.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
[$sel:status:PlayerSession'] :: PlayerSession -> Maybe PlayerSessionStatus

-- | A unique identifier for a player that is associated with this player
--   session.
[$sel:playerId:PlayerSession'] :: PlayerSession -> Maybe Text

-- | A unique identifier for the fleet that the player's game session is
--   running on.
[$sel:fleetId:PlayerSession'] :: PlayerSession -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that the player's game session is running on.
[$sel:fleetArn:PlayerSession'] :: PlayerSession -> Maybe Text

-- | A unique identifier for a player session.
[$sel:playerSessionId:PlayerSession'] :: PlayerSession -> Maybe Text

-- | A unique identifier for the game session that the player session is
--   connected to.
[$sel:gameSessionId:PlayerSession'] :: PlayerSession -> Maybe Text

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
[$sel:ipAddress:PlayerSession'] :: PlayerSession -> Maybe Text

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:terminationTime:PlayerSession'] :: PlayerSession -> Maybe POSIX

-- | Port number for the game session. To connect to a Amazon GameLift
--   server process, an app needs both the IP address and port number.
[$sel:port:PlayerSession'] :: PlayerSession -> Maybe Natural

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
[$sel:dnsName:PlayerSession'] :: PlayerSession -> Maybe Text

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
[$sel:playerData:PlayerSession'] :: PlayerSession -> Maybe Text

-- | Create a value of <a>PlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:PlayerSession'</a>,
--   <a>playerSession_creationTime</a> - A time stamp indicating when this
--   data object was created. Format is a number expressed in Unix time as
--   milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:PlayerSession'</a>, <a>playerSession_status</a> -
--   Current status of the player session.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
--   
--   <a>$sel:playerId:PlayerSession'</a>, <a>playerSession_playerId</a> - A
--   unique identifier for a player that is associated with this player
--   session.
--   
--   <a>$sel:fleetId:PlayerSession'</a>, <a>playerSession_fleetId</a> - A
--   unique identifier for the fleet that the player's game session is
--   running on.
--   
--   <a>$sel:fleetArn:PlayerSession'</a>, <a>playerSession_fleetArn</a> -
--   The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that the player's game session is running on.
--   
--   <a>$sel:playerSessionId:PlayerSession'</a>,
--   <a>playerSession_playerSessionId</a> - A unique identifier for a
--   player session.
--   
--   <a>$sel:gameSessionId:PlayerSession'</a>,
--   <a>playerSession_gameSessionId</a> - A unique identifier for the game
--   session that the player session is connected to.
--   
--   <a>$sel:ipAddress:PlayerSession'</a>, <a>playerSession_ipAddress</a> -
--   The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
--   
--   <a>$sel:terminationTime:PlayerSession'</a>,
--   <a>playerSession_terminationTime</a> - A time stamp indicating when
--   this data object was terminated. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:port:PlayerSession'</a>, <a>playerSession_port</a> - Port
--   number for the game session. To connect to a Amazon GameLift server
--   process, an app needs both the IP address and port number.
--   
--   <a>$sel:dnsName:PlayerSession'</a>, <a>playerSession_dnsName</a> - The
--   DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
--   
--   <a>$sel:playerData:PlayerSession'</a>, <a>playerSession_playerData</a>
--   - Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
newPlayerSession :: PlayerSession

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
playerSession_creationTime :: Lens' PlayerSession (Maybe UTCTime)

-- | Current status of the player session.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
playerSession_status :: Lens' PlayerSession (Maybe PlayerSessionStatus)

-- | A unique identifier for a player that is associated with this player
--   session.
playerSession_playerId :: Lens' PlayerSession (Maybe Text)

-- | A unique identifier for the fleet that the player's game session is
--   running on.
playerSession_fleetId :: Lens' PlayerSession (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that the player's game session is running on.
playerSession_fleetArn :: Lens' PlayerSession (Maybe Text)

-- | A unique identifier for a player session.
playerSession_playerSessionId :: Lens' PlayerSession (Maybe Text)

-- | A unique identifier for the game session that the player session is
--   connected to.
playerSession_gameSessionId :: Lens' PlayerSession (Maybe Text)

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
playerSession_ipAddress :: Lens' PlayerSession (Maybe Text)

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
playerSession_terminationTime :: Lens' PlayerSession (Maybe UTCTime)

-- | Port number for the game session. To connect to a Amazon GameLift
--   server process, an app needs both the IP address and port number.
playerSession_port :: Lens' PlayerSession (Maybe Natural)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
playerSession_dnsName :: Lens' PlayerSession (Maybe Text)

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
playerSession_playerData :: Lens' PlayerSession (Maybe Text)

-- | Custom prioritization settings for use by a game session queue when
--   placing new game sessions with available game servers. When defined,
--   this configuration replaces the default FleetIQ prioritization
--   process, which is as follows:
--   
--   <ul>
--   <li>If player latency data is included in a game session request,
--   destinations and locations are prioritized first based on lowest
--   average latency (1), then on lowest hosting cost (2), then on
--   destination list order (3), and finally on location (alphabetical)
--   (4). This approach ensures that the queue's top priority is to place
--   game sessions where average player latency is lowest, and--if latency
--   is the same--where the hosting cost is less, etc.</li>
--   <li>If player latency data is not included, destinations and locations
--   are prioritized first on destination list order (1), and then on
--   location (alphabetical) (2). This approach ensures that the queue's
--   top priority is to place game sessions on the first destination fleet
--   listed. If that fleet has multiple locations, the game session is
--   placed on the first location (when listed alphabetically).</li>
--   </ul>
--   
--   Changing the priority order will affect how game sessions are placed.
--   
--   Priority configurations are part of a GameSessionQueue.
--   
--   <i>See:</i> <a>newPriorityConfiguration</a> smart constructor.
data PriorityConfiguration
PriorityConfiguration' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty PriorityType) -> PriorityConfiguration

-- | The prioritization order to use for fleet locations, when the
--   <tt>PriorityOrder</tt> property includes <tt>LOCATION</tt>. Locations
--   are identified by AWS Region codes such as <tt>us-west-2</tt>. Each
--   location can only be listed once.
[$sel:locationOrder:PriorityConfiguration'] :: PriorityConfiguration -> Maybe (NonEmpty Text)

-- | The recommended sequence to use when prioritizing where to place new
--   game sessions. Each type can only be listed once.
--   
--   <ul>
--   <li><tt>LATENCY</tt> -- FleetIQ prioritizes locations where the
--   average player latency (provided in each game session request) is
--   lowest.</li>
--   <li><tt>COST</tt> -- FleetIQ prioritizes destinations with the lowest
--   current hosting costs. Cost is evaluated based on the location,
--   instance type, and fleet type (Spot or On-Demand) for each destination
--   in the queue.</li>
--   <li><tt>DESTINATION</tt> -- FleetIQ prioritizes based on the order
--   that destinations are listed in the queue configuration.</li>
--   <li><tt>LOCATION</tt> -- FleetIQ prioritizes based on the provided
--   order of locations, as defined in <tt>LocationOrder</tt>.</li>
--   </ul>
[$sel:priorityOrder:PriorityConfiguration'] :: PriorityConfiguration -> Maybe (NonEmpty PriorityType)

-- | Create a value of <a>PriorityConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationOrder:PriorityConfiguration'</a>,
--   <a>priorityConfiguration_locationOrder</a> - The prioritization order
--   to use for fleet locations, when the <tt>PriorityOrder</tt> property
--   includes <tt>LOCATION</tt>. Locations are identified by AWS Region
--   codes such as <tt>us-west-2</tt>. Each location can only be listed
--   once.
--   
--   <a>$sel:priorityOrder:PriorityConfiguration'</a>,
--   <a>priorityConfiguration_priorityOrder</a> - The recommended sequence
--   to use when prioritizing where to place new game sessions. Each type
--   can only be listed once.
--   
--   <ul>
--   <li><tt>LATENCY</tt> -- FleetIQ prioritizes locations where the
--   average player latency (provided in each game session request) is
--   lowest.</li>
--   <li><tt>COST</tt> -- FleetIQ prioritizes destinations with the lowest
--   current hosting costs. Cost is evaluated based on the location,
--   instance type, and fleet type (Spot or On-Demand) for each destination
--   in the queue.</li>
--   <li><tt>DESTINATION</tt> -- FleetIQ prioritizes based on the order
--   that destinations are listed in the queue configuration.</li>
--   <li><tt>LOCATION</tt> -- FleetIQ prioritizes based on the provided
--   order of locations, as defined in <tt>LocationOrder</tt>.</li>
--   </ul>
newPriorityConfiguration :: PriorityConfiguration

-- | The prioritization order to use for fleet locations, when the
--   <tt>PriorityOrder</tt> property includes <tt>LOCATION</tt>. Locations
--   are identified by AWS Region codes such as <tt>us-west-2</tt>. Each
--   location can only be listed once.
priorityConfiguration_locationOrder :: Lens' PriorityConfiguration (Maybe (NonEmpty Text))

-- | The recommended sequence to use when prioritizing where to place new
--   game sessions. Each type can only be listed once.
--   
--   <ul>
--   <li><tt>LATENCY</tt> -- FleetIQ prioritizes locations where the
--   average player latency (provided in each game session request) is
--   lowest.</li>
--   <li><tt>COST</tt> -- FleetIQ prioritizes destinations with the lowest
--   current hosting costs. Cost is evaluated based on the location,
--   instance type, and fleet type (Spot or On-Demand) for each destination
--   in the queue.</li>
--   <li><tt>DESTINATION</tt> -- FleetIQ prioritizes based on the order
--   that destinations are listed in the queue configuration.</li>
--   <li><tt>LOCATION</tt> -- FleetIQ prioritizes based on the provided
--   order of locations, as defined in <tt>LocationOrder</tt>.</li>
--   </ul>
priorityConfiguration_priorityOrder :: Lens' PriorityConfiguration (Maybe (NonEmpty PriorityType))

-- | A policy that puts limits on the number of game sessions that a player
--   can create within a specified span of time. With this policy, you can
--   control players' ability to consume available resources.
--   
--   The policy is evaluated when a player tries to create a new game
--   session. On receiving a <tt>CreateGameSession</tt> request, GameLift
--   checks that the player (identified by <tt>CreatorId</tt>) has created
--   fewer than game session limit in the specified time period.
--   
--   The resource creation limit policy is included in FleetAttributes.
--   
--   <i>See:</i> <a>newResourceCreationLimitPolicy</a> smart constructor.
data ResourceCreationLimitPolicy
ResourceCreationLimitPolicy' :: Maybe Natural -> Maybe Natural -> ResourceCreationLimitPolicy

-- | The time span used in evaluating the resource creation limit policy.
[$sel:policyPeriodInMinutes:ResourceCreationLimitPolicy'] :: ResourceCreationLimitPolicy -> Maybe Natural

-- | The maximum number of game sessions that an individual can create
--   during the policy period.
[$sel:newGameSessionsPerCreator':ResourceCreationLimitPolicy'] :: ResourceCreationLimitPolicy -> Maybe Natural

-- | Create a value of <a>ResourceCreationLimitPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyPeriodInMinutes:ResourceCreationLimitPolicy'</a>,
--   <a>resourceCreationLimitPolicy_policyPeriodInMinutes</a> - The time
--   span used in evaluating the resource creation limit policy.
--   
--   <a>$sel:newGameSessionsPerCreator':ResourceCreationLimitPolicy'</a>,
--   <a>resourceCreationLimitPolicy_newGameSessionsPerCreator</a> - The
--   maximum number of game sessions that an individual can create during
--   the policy period.
newResourceCreationLimitPolicy :: ResourceCreationLimitPolicy

-- | The time span used in evaluating the resource creation limit policy.
resourceCreationLimitPolicy_policyPeriodInMinutes :: Lens' ResourceCreationLimitPolicy (Maybe Natural)

-- | The maximum number of game sessions that an individual can create
--   during the policy period.
resourceCreationLimitPolicy_newGameSessionsPerCreator :: Lens' ResourceCreationLimitPolicy (Maybe Natural)

-- | The routing configuration for a fleet alias.
--   
--   <b>Related actions</b>
--   
--   CreateAlias | ListAliases | DescribeAlias | UpdateAlias | DeleteAlias
--   | ResolveAlias | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newRoutingStrategy</a> smart constructor.
data RoutingStrategy
RoutingStrategy' :: Maybe Text -> Maybe Text -> Maybe RoutingStrategyType -> RoutingStrategy

-- | A unique identifier for the fleet that the alias points to. This value
--   is the fleet ID, not the fleet ARN.
[$sel:fleetId:RoutingStrategy'] :: RoutingStrategy -> Maybe Text

-- | The message text to be used with a terminal routing strategy.
[$sel:message:RoutingStrategy'] :: RoutingStrategy -> Maybe Text

-- | The type of routing strategy for the alias.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> - The alias resolves to one specific fleet. Use this
--   type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> - The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
[$sel:type':RoutingStrategy'] :: RoutingStrategy -> Maybe RoutingStrategyType

-- | Create a value of <a>RoutingStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:RoutingStrategy'</a>, <a>routingStrategy_fleetId</a> -
--   A unique identifier for the fleet that the alias points to. This value
--   is the fleet ID, not the fleet ARN.
--   
--   <a>$sel:message:RoutingStrategy'</a>, <a>routingStrategy_message</a> -
--   The message text to be used with a terminal routing strategy.
--   
--   <a>$sel:type':RoutingStrategy'</a>, <a>routingStrategy_type</a> - The
--   type of routing strategy for the alias.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> - The alias resolves to one specific fleet. Use this
--   type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> - The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
newRoutingStrategy :: RoutingStrategy

-- | A unique identifier for the fleet that the alias points to. This value
--   is the fleet ID, not the fleet ARN.
routingStrategy_fleetId :: Lens' RoutingStrategy (Maybe Text)

-- | The message text to be used with a terminal routing strategy.
routingStrategy_message :: Lens' RoutingStrategy (Maybe Text)

-- | The type of routing strategy for the alias.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> - The alias resolves to one specific fleet. Use this
--   type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> - The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
routingStrategy_type :: Lens' RoutingStrategy (Maybe RoutingStrategyType)

-- | A collection of server process configurations that describe the set of
--   processes to run on each instance in a fleet. Server processes run
--   either an executable in a custom game build or a Realtime Servers
--   script. GameLift launches the configured processes, manages their life
--   cycle, and replaces them as needed. Each instance checks regularly for
--   an updated runtime configuration.
--   
--   A GameLift instance is limited to 50 processes running concurrently.
--   To calculate the total number of processes in a runtime configuration,
--   add the values of the <tt>ConcurrentExecutions</tt> parameter for each
--   ServerProcess. Learn more about <a>Running Multiple Processes on a
--   Fleet</a>.
--   
--   <b>Related actions</b>
--   
--   DescribeRuntimeConfiguration | UpdateRuntimeConfiguration
--   
--   <i>See:</i> <a>newRuntimeConfiguration</a> smart constructor.
data RuntimeConfiguration
RuntimeConfiguration' :: Maybe Natural -> Maybe Natural -> Maybe (NonEmpty ServerProcess) -> RuntimeConfiguration

-- | The maximum amount of time (in seconds) allowed to launch a new game
--   session and have it report ready to host players. During this time,
--   the game session is in status <tt>ACTIVATING</tt>. If the game session
--   does not become active before the timeout, it is ended and the game
--   session status is changed to <tt>TERMINATED</tt>.
[$sel:gameSessionActivationTimeoutSeconds:RuntimeConfiguration'] :: RuntimeConfiguration -> Maybe Natural

-- | The number of game sessions in status <tt>ACTIVATING</tt> to allow on
--   an instance. This setting limits the instance resources that can be
--   used for new game activations at any one time.
[$sel:maxConcurrentGameSessionActivations:RuntimeConfiguration'] :: RuntimeConfiguration -> Maybe Natural

-- | A collection of server process configurations that identify what
--   server processes to run on each instance in a fleet.
[$sel:serverProcesses:RuntimeConfiguration'] :: RuntimeConfiguration -> Maybe (NonEmpty ServerProcess)

-- | Create a value of <a>RuntimeConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionActivationTimeoutSeconds:RuntimeConfiguration'</a>,
--   <a>runtimeConfiguration_gameSessionActivationTimeoutSeconds</a> - The
--   maximum amount of time (in seconds) allowed to launch a new game
--   session and have it report ready to host players. During this time,
--   the game session is in status <tt>ACTIVATING</tt>. If the game session
--   does not become active before the timeout, it is ended and the game
--   session status is changed to <tt>TERMINATED</tt>.
--   
--   <a>$sel:maxConcurrentGameSessionActivations:RuntimeConfiguration'</a>,
--   <a>runtimeConfiguration_maxConcurrentGameSessionActivations</a> - The
--   number of game sessions in status <tt>ACTIVATING</tt> to allow on an
--   instance. This setting limits the instance resources that can be used
--   for new game activations at any one time.
--   
--   <a>$sel:serverProcesses:RuntimeConfiguration'</a>,
--   <a>runtimeConfiguration_serverProcesses</a> - A collection of server
--   process configurations that identify what server processes to run on
--   each instance in a fleet.
newRuntimeConfiguration :: RuntimeConfiguration

-- | The maximum amount of time (in seconds) allowed to launch a new game
--   session and have it report ready to host players. During this time,
--   the game session is in status <tt>ACTIVATING</tt>. If the game session
--   does not become active before the timeout, it is ended and the game
--   session status is changed to <tt>TERMINATED</tt>.
runtimeConfiguration_gameSessionActivationTimeoutSeconds :: Lens' RuntimeConfiguration (Maybe Natural)

-- | The number of game sessions in status <tt>ACTIVATING</tt> to allow on
--   an instance. This setting limits the instance resources that can be
--   used for new game activations at any one time.
runtimeConfiguration_maxConcurrentGameSessionActivations :: Lens' RuntimeConfiguration (Maybe Natural)

-- | A collection of server process configurations that identify what
--   server processes to run on each instance in a fleet.
runtimeConfiguration_serverProcesses :: Lens' RuntimeConfiguration (Maybe (NonEmpty ServerProcess))

-- | The location in Amazon S3 where build or script files are stored for
--   access by Amazon GameLift. This location is specified in CreateBuild,
--   CreateScript, and UpdateScript requests.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> S3Location

-- | The name of the zip file that contains the build files or script
--   files.
[$sel:key:S3Location'] :: S3Location -> Maybe Text

-- | The version of the file, if object versioning is turned on for the
--   bucket. Amazon GameLift uses this information when retrieving files
--   from an S3 bucket that you own. Use this parameter to specify a
--   specific version of the file. If not set, the latest version of the
--   file is retrieved.
[$sel:objectVersion:S3Location'] :: S3Location -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access the S3 bucket.
[$sel:roleArn:S3Location'] :: S3Location -> Maybe Text

-- | An Amazon S3 bucket identifier. This is the name of the S3 bucket.
--   
--   GameLift currently does not support uploading from Amazon S3 buckets
--   with names that contain a dot (.).
[$sel:bucket:S3Location'] :: S3Location -> Maybe Text

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:S3Location'</a>, <a>s3Location_key</a> - The name of the
--   zip file that contains the build files or script files.
--   
--   <a>$sel:objectVersion:S3Location'</a>, <a>s3Location_objectVersion</a>
--   - The version of the file, if object versioning is turned on for the
--   bucket. Amazon GameLift uses this information when retrieving files
--   from an S3 bucket that you own. Use this parameter to specify a
--   specific version of the file. If not set, the latest version of the
--   file is retrieved.
--   
--   <a>$sel:roleArn:S3Location'</a>, <a>s3Location_roleArn</a> - The
--   Amazon Resource Name (<a>ARN</a>) for an IAM role that allows Amazon
--   GameLift to access the S3 bucket.
--   
--   <a>$sel:bucket:S3Location'</a>, <a>s3Location_bucket</a> - An Amazon
--   S3 bucket identifier. This is the name of the S3 bucket.
--   
--   GameLift currently does not support uploading from Amazon S3 buckets
--   with names that contain a dot (.).
newS3Location :: S3Location

-- | The name of the zip file that contains the build files or script
--   files.
s3Location_key :: Lens' S3Location (Maybe Text)

-- | The version of the file, if object versioning is turned on for the
--   bucket. Amazon GameLift uses this information when retrieving files
--   from an S3 bucket that you own. Use this parameter to specify a
--   specific version of the file. If not set, the latest version of the
--   file is retrieved.
s3Location_objectVersion :: Lens' S3Location (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access the S3 bucket.
s3Location_roleArn :: Lens' S3Location (Maybe Text)

-- | An Amazon S3 bucket identifier. This is the name of the S3 bucket.
--   
--   GameLift currently does not support uploading from Amazon S3 buckets
--   with names that contain a dot (.).
s3Location_bucket :: Lens' S3Location (Maybe Text)

-- | Rule that controls how a fleet is scaled. Scaling policies are
--   uniquely identified by the combination of name and fleet ID.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetCapacity | UpdateFleetCapacity |
--   DescribeEC2InstanceLimits | PutScalingPolicy | DescribeScalingPolicies
--   | DeleteScalingPolicy | StopFleetActions | StartFleetActions | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newScalingPolicy</a> smart constructor.
data ScalingPolicy
ScalingPolicy' :: Maybe Double -> Maybe ScalingStatusType -> Maybe TargetConfiguration -> Maybe ComparisonOperatorType -> Maybe MetricName -> Maybe Text -> Maybe Text -> Maybe PolicyType -> Maybe LocationUpdateStatus -> Maybe Int -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe ScalingAdjustmentType -> ScalingPolicy

-- | Metric value used to trigger a scaling event.
[$sel:threshold:ScalingPolicy'] :: ScalingPolicy -> Maybe Double

-- | Current status of the scaling policy. The scaling policy can be in
--   force only when in an <tt>ACTIVE</tt> status. Scaling policies can be
--   suspended for individual fleets (see StopFleetActions; if suspended
--   for a fleet, the policy status does not change. View a fleet's stopped
--   actions by calling DescribeFleetCapacity.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy can be used for auto-scaling a
--   fleet.</li>
--   <li><b>UPDATE_REQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETE_REQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
[$sel:status:ScalingPolicy'] :: ScalingPolicy -> Maybe ScalingStatusType

-- | An object that contains settings for a target-based scaling policy.
[$sel:targetConfiguration:ScalingPolicy'] :: ScalingPolicy -> Maybe TargetConfiguration

-- | Comparison operator to use when measuring a metric against the
--   threshold value.
[$sel:comparisonOperator:ScalingPolicy'] :: ScalingPolicy -> Maybe ComparisonOperatorType

-- | Name of the Amazon GameLift-defined metric that is used to trigger a
--   scaling adjustment. For detailed descriptions of fleet metrics, see
--   <a>Monitor Amazon GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
[$sel:metricName:ScalingPolicy'] :: ScalingPolicy -> Maybe MetricName

-- | A unique identifier for the fleet that is associated with this scaling
--   policy.
[$sel:fleetId:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | The type of scaling policy to create. For a target-based policy, set
--   the parameter <i>MetricName</i> to 'PercentAvailableGameSessions' and
--   specify a <i>TargetConfiguration</i>. For a rule-based policy set the
--   following parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
[$sel:policyType:ScalingPolicy'] :: ScalingPolicy -> Maybe PolicyType

-- | The current status of the fleet's scaling policies in a requested
--   fleet location. The status <tt>PENDING_UPDATE</tt> indicates that an
--   update was requested for the fleet but has not yet been completed for
--   the location.
[$sel:updateStatus:ScalingPolicy'] :: ScalingPolicy -> Maybe LocationUpdateStatus

-- | Amount of adjustment to make, based on the scaling adjustment type.
[$sel:scalingAdjustment:ScalingPolicy'] :: ScalingPolicy -> Maybe Int

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
[$sel:name:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | Length of time (in minutes) the metric must be at or beyond the
--   threshold before a scaling event is triggered.
[$sel:evaluationPeriods:ScalingPolicy'] :: ScalingPolicy -> Maybe Natural
[$sel:location:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | The type of adjustment to make to a fleet's instance count (see
--   FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down.</li>
--   </ul>
[$sel:scalingAdjustmentType:ScalingPolicy'] :: ScalingPolicy -> Maybe ScalingAdjustmentType

-- | Create a value of <a>ScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:threshold:ScalingPolicy'</a>, <a>scalingPolicy_threshold</a> -
--   Metric value used to trigger a scaling event.
--   
--   <a>$sel:status:ScalingPolicy'</a>, <a>scalingPolicy_status</a> -
--   Current status of the scaling policy. The scaling policy can be in
--   force only when in an <tt>ACTIVE</tt> status. Scaling policies can be
--   suspended for individual fleets (see StopFleetActions; if suspended
--   for a fleet, the policy status does not change. View a fleet's stopped
--   actions by calling DescribeFleetCapacity.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy can be used for auto-scaling a
--   fleet.</li>
--   <li><b>UPDATE_REQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETE_REQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
--   
--   <a>$sel:targetConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_targetConfiguration</a> - An object that contains
--   settings for a target-based scaling policy.
--   
--   <a>$sel:comparisonOperator:ScalingPolicy'</a>,
--   <a>scalingPolicy_comparisonOperator</a> - Comparison operator to use
--   when measuring a metric against the threshold value.
--   
--   <a>$sel:metricName:ScalingPolicy'</a>, <a>scalingPolicy_metricName</a>
--   - Name of the Amazon GameLift-defined metric that is used to trigger a
--   scaling adjustment. For detailed descriptions of fleet metrics, see
--   <a>Monitor Amazon GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
--   
--   <a>$sel:fleetId:ScalingPolicy'</a>, <a>scalingPolicy_fleetId</a> - A
--   unique identifier for the fleet that is associated with this scaling
--   policy.
--   
--   <a>$sel:fleetArn:ScalingPolicy'</a>, <a>scalingPolicy_fleetArn</a> -
--   The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:policyType:ScalingPolicy'</a>, <a>scalingPolicy_policyType</a>
--   - The type of scaling policy to create. For a target-based policy, set
--   the parameter <i>MetricName</i> to 'PercentAvailableGameSessions' and
--   specify a <i>TargetConfiguration</i>. For a rule-based policy set the
--   following parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
--   
--   <a>$sel:updateStatus:ScalingPolicy'</a>,
--   <a>scalingPolicy_updateStatus</a> - The current status of the fleet's
--   scaling policies in a requested fleet location. The status
--   <tt>PENDING_UPDATE</tt> indicates that an update was requested for the
--   fleet but has not yet been completed for the location.
--   
--   <a>$sel:scalingAdjustment:ScalingPolicy'</a>,
--   <a>scalingPolicy_scalingAdjustment</a> - Amount of adjustment to make,
--   based on the scaling adjustment type.
--   
--   <a>$sel:name:ScalingPolicy'</a>, <a>scalingPolicy_name</a> - A
--   descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
--   
--   <a>$sel:evaluationPeriods:ScalingPolicy'</a>,
--   <a>scalingPolicy_evaluationPeriods</a> - Length of time (in minutes)
--   the metric must be at or beyond the threshold before a scaling event
--   is triggered.
--   
--   <a>$sel:location:ScalingPolicy'</a>, <a>scalingPolicy_location</a> -
--   
--   <a>$sel:scalingAdjustmentType:ScalingPolicy'</a>,
--   <a>scalingPolicy_scalingAdjustmentType</a> - The type of adjustment to
--   make to a fleet's instance count (see FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down.</li>
--   </ul>
newScalingPolicy :: ScalingPolicy

-- | Metric value used to trigger a scaling event.
scalingPolicy_threshold :: Lens' ScalingPolicy (Maybe Double)

-- | Current status of the scaling policy. The scaling policy can be in
--   force only when in an <tt>ACTIVE</tt> status. Scaling policies can be
--   suspended for individual fleets (see StopFleetActions; if suspended
--   for a fleet, the policy status does not change. View a fleet's stopped
--   actions by calling DescribeFleetCapacity.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy can be used for auto-scaling a
--   fleet.</li>
--   <li><b>UPDATE_REQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETE_REQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
scalingPolicy_status :: Lens' ScalingPolicy (Maybe ScalingStatusType)

-- | An object that contains settings for a target-based scaling policy.
scalingPolicy_targetConfiguration :: Lens' ScalingPolicy (Maybe TargetConfiguration)

-- | Comparison operator to use when measuring a metric against the
--   threshold value.
scalingPolicy_comparisonOperator :: Lens' ScalingPolicy (Maybe ComparisonOperatorType)

-- | Name of the Amazon GameLift-defined metric that is used to trigger a
--   scaling adjustment. For detailed descriptions of fleet metrics, see
--   <a>Monitor Amazon GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
scalingPolicy_metricName :: Lens' ScalingPolicy (Maybe MetricName)

-- | A unique identifier for the fleet that is associated with this scaling
--   policy.
scalingPolicy_fleetId :: Lens' ScalingPolicy (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
scalingPolicy_fleetArn :: Lens' ScalingPolicy (Maybe Text)

-- | The type of scaling policy to create. For a target-based policy, set
--   the parameter <i>MetricName</i> to 'PercentAvailableGameSessions' and
--   specify a <i>TargetConfiguration</i>. For a rule-based policy set the
--   following parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
scalingPolicy_policyType :: Lens' ScalingPolicy (Maybe PolicyType)

-- | The current status of the fleet's scaling policies in a requested
--   fleet location. The status <tt>PENDING_UPDATE</tt> indicates that an
--   update was requested for the fleet but has not yet been completed for
--   the location.
scalingPolicy_updateStatus :: Lens' ScalingPolicy (Maybe LocationUpdateStatus)

-- | Amount of adjustment to make, based on the scaling adjustment type.
scalingPolicy_scalingAdjustment :: Lens' ScalingPolicy (Maybe Int)

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
scalingPolicy_name :: Lens' ScalingPolicy (Maybe Text)

-- | Length of time (in minutes) the metric must be at or beyond the
--   threshold before a scaling event is triggered.
scalingPolicy_evaluationPeriods :: Lens' ScalingPolicy (Maybe Natural)

scalingPolicy_location :: Lens' ScalingPolicy (Maybe Text)

-- | The type of adjustment to make to a fleet's instance count (see
--   FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down.</li>
--   </ul>
scalingPolicy_scalingAdjustmentType :: Lens' ScalingPolicy (Maybe ScalingAdjustmentType)

-- | Properties describing a Realtime script.
--   
--   <b>Related actions</b>
--   
--   CreateScript | ListScripts | DescribeScript | UpdateScript |
--   DeleteScript | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newScript</a> smart constructor.
data Script
Script' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe S3Location -> Maybe Natural -> Maybe Text -> Script

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:Script'] :: Script -> Maybe POSIX

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique.
[$sel:version:Script'] :: Script -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   script resource and uniquely identifies it. ARNs are unique across all
--   Regions. In a GameLift script ARN, the resource ID matches the
--   <i>ScriptId</i> value.
[$sel:scriptArn:Script'] :: Script -> Maybe Text

-- | A descriptive label that is associated with a script. Script names do
--   not need to be unique.
[$sel:name:Script'] :: Script -> Maybe Text
[$sel:storageLocation:Script'] :: Script -> Maybe S3Location

-- | The file size of the uploaded Realtime script, expressed in bytes.
--   When files are uploaded from an S3 location, this value remains at
--   "0".
[$sel:sizeOnDisk:Script'] :: Script -> Maybe Natural

-- | A unique identifier for the Realtime script
[$sel:scriptId:Script'] :: Script -> Maybe Text

-- | Create a value of <a>Script</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Script'</a>, <a>script_creationTime</a> - A time
--   stamp indicating when this data object was created. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:version:Script'</a>, <a>script_version</a> - Version
--   information that is associated with a build or script. Version strings
--   do not need to be unique.
--   
--   <a>$sel:scriptArn:Script'</a>, <a>script_scriptArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift script
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. In a GameLift script ARN, the resource ID matches the
--   <i>ScriptId</i> value.
--   
--   <a>$sel:name:Script'</a>, <a>script_name</a> - A descriptive label
--   that is associated with a script. Script names do not need to be
--   unique.
--   
--   <a>$sel:storageLocation:Script'</a>, <a>script_storageLocation</a> -
--   Undocumented member.
--   
--   <a>$sel:sizeOnDisk:Script'</a>, <a>script_sizeOnDisk</a> - The file
--   size of the uploaded Realtime script, expressed in bytes. When files
--   are uploaded from an S3 location, this value remains at "0".
--   
--   <a>$sel:scriptId:Script'</a>, <a>script_scriptId</a> - A unique
--   identifier for the Realtime script
newScript :: Script

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
script_creationTime :: Lens' Script (Maybe UTCTime)

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique.
script_version :: Lens' Script (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   script resource and uniquely identifies it. ARNs are unique across all
--   Regions. In a GameLift script ARN, the resource ID matches the
--   <i>ScriptId</i> value.
script_scriptArn :: Lens' Script (Maybe Text)

-- | A descriptive label that is associated with a script. Script names do
--   not need to be unique.
script_name :: Lens' Script (Maybe Text)

-- | Undocumented member.
script_storageLocation :: Lens' Script (Maybe S3Location)

-- | The file size of the uploaded Realtime script, expressed in bytes.
--   When files are uploaded from an S3 location, this value remains at
--   "0".
script_sizeOnDisk :: Lens' Script (Maybe Natural)

-- | A unique identifier for the Realtime script
script_scriptId :: Lens' Script (Maybe Text)

-- | A set of instructions for launching server processes on each instance
--   in a fleet. Server processes run either an executable in a custom game
--   build or a Realtime Servers script. Server process configurations are
--   part of a fleet's RuntimeConfiguration.
--   
--   <i>See:</i> <a>newServerProcess</a> smart constructor.
data ServerProcess
ServerProcess' :: Maybe Text -> Text -> Natural -> ServerProcess

-- | An optional list of parameters to pass to the server executable or
--   Realtime script on launch.
[$sel:parameters:ServerProcess'] :: ServerProcess -> Maybe Text

-- | The location of a game build executable or the Realtime script file
--   that contains the <tt>Init()</tt> function. Game builds and Realtime
--   scripts are installed on instances at the root:
--   
--   <ul>
--   <li>Windows (custom game builds only): <tt>C:\game</tt>. Example:
--   "<tt>C:\game\MyGame\server.exe</tt>"</li>
--   <li>Linux: <tt>/local/game</tt>. Examples:
--   "<tt>/local/game/MyGame/server.exe</tt>" or
--   "<tt>/local/game/MyRealtimeScript.js</tt>"</li>
--   </ul>
[$sel:launchPath:ServerProcess'] :: ServerProcess -> Text

-- | The number of server processes using this configuration that run
--   concurrently on each instance.
[$sel:concurrentExecutions:ServerProcess'] :: ServerProcess -> Natural

-- | Create a value of <a>ServerProcess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:ServerProcess'</a>, <a>serverProcess_parameters</a>
--   - An optional list of parameters to pass to the server executable or
--   Realtime script on launch.
--   
--   <a>$sel:launchPath:ServerProcess'</a>, <a>serverProcess_launchPath</a>
--   - The location of a game build executable or the Realtime script file
--   that contains the <tt>Init()</tt> function. Game builds and Realtime
--   scripts are installed on instances at the root:
--   
--   <ul>
--   <li>Windows (custom game builds only): <tt>C:\game</tt>. Example:
--   "<tt>C:\game\MyGame\server.exe</tt>"</li>
--   <li>Linux: <tt>/local/game</tt>. Examples:
--   "<tt>/local/game/MyGame/server.exe</tt>" or
--   "<tt>/local/game/MyRealtimeScript.js</tt>"</li>
--   </ul>
--   
--   <a>$sel:concurrentExecutions:ServerProcess'</a>,
--   <a>serverProcess_concurrentExecutions</a> - The number of server
--   processes using this configuration that run concurrently on each
--   instance.
newServerProcess :: Text -> Natural -> ServerProcess

-- | An optional list of parameters to pass to the server executable or
--   Realtime script on launch.
serverProcess_parameters :: Lens' ServerProcess (Maybe Text)

-- | The location of a game build executable or the Realtime script file
--   that contains the <tt>Init()</tt> function. Game builds and Realtime
--   scripts are installed on instances at the root:
--   
--   <ul>
--   <li>Windows (custom game builds only): <tt>C:\game</tt>. Example:
--   "<tt>C:\game\MyGame\server.exe</tt>"</li>
--   <li>Linux: <tt>/local/game</tt>. Examples:
--   "<tt>/local/game/MyGame/server.exe</tt>" or
--   "<tt>/local/game/MyRealtimeScript.js</tt>"</li>
--   </ul>
serverProcess_launchPath :: Lens' ServerProcess Text

-- | The number of server processes using this configuration that run
--   concurrently on each instance.
serverProcess_concurrentExecutions :: Lens' ServerProcess Natural

-- | A label that can be assigned to a GameLift resource.
--   
--   <b>Learn more</b>
--   
--   <a>Tagging AWS Resources</a> in the <i>AWS General Reference</i>
--   
--   <a>AWS Tagging Strategies</a>
--   
--   <b>Related actions</b>
--   
--   TagResource | UntagResource | ListTagsForResource | <a>All APIs by
--   task</a>
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key for a developer-defined key:value pair for tagging an AWS
--   resource.
[$sel:key:Tag'] :: Tag -> Text

-- | The value for a developer-defined key:value pair for tagging an AWS
--   resource.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for a developer-defined
--   key:value pair for tagging an AWS resource.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for a
--   developer-defined key:value pair for tagging an AWS resource.
newTag :: Text -> Text -> Tag

-- | The key for a developer-defined key:value pair for tagging an AWS
--   resource.
tag_key :: Lens' Tag Text

-- | The value for a developer-defined key:value pair for tagging an AWS
--   resource.
tag_value :: Lens' Tag Text

-- | Settings for a target-based scaling policy (see ScalingPolicy. A
--   target-based policy tracks a particular fleet metric specifies a
--   target value for the metric. As player usage changes, the policy
--   triggers Amazon GameLift to adjust capacity so that the metric returns
--   to the target value. The target configuration specifies settings as
--   needed for the target based policy, including the target value.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetCapacity | UpdateFleetCapacity |
--   DescribeEC2InstanceLimits | PutScalingPolicy | DescribeScalingPolicies
--   | DeleteScalingPolicy | StopFleetActions | StartFleetActions | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newTargetConfiguration</a> smart constructor.
data TargetConfiguration
TargetConfiguration' :: Double -> TargetConfiguration

-- | Desired value to use with a target-based scaling policy. The value
--   must be relevant for whatever metric the scaling policy is using. For
--   example, in a policy using the metric PercentAvailableGameSessions,
--   the target value should be the preferred size of the fleet's buffer
--   (the percent of capacity that should be idle and ready for new game
--   sessions).
[$sel:targetValue:TargetConfiguration'] :: TargetConfiguration -> Double

-- | Create a value of <a>TargetConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetValue:TargetConfiguration'</a>,
--   <a>targetConfiguration_targetValue</a> - Desired value to use with a
--   target-based scaling policy. The value must be relevant for whatever
--   metric the scaling policy is using. For example, in a policy using the
--   metric PercentAvailableGameSessions, the target value should be the
--   preferred size of the fleet's buffer (the percent of capacity that
--   should be idle and ready for new game sessions).
newTargetConfiguration :: Double -> TargetConfiguration

-- | Desired value to use with a target-based scaling policy. The value
--   must be relevant for whatever metric the scaling policy is using. For
--   example, in a policy using the metric PercentAvailableGameSessions,
--   the target value should be the preferred size of the fleet's buffer
--   (the percent of capacity that should be idle and ready for new game
--   sessions).
targetConfiguration_targetValue :: Lens' TargetConfiguration Double

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Settings for a target-based scaling policy as part of a
--   GameServerGroupAutoScalingPolicy. These settings are used to create a
--   target-based policy that tracks the GameLift FleetIQ metric
--   <tt>"PercentUtilizedGameServers"</tt> and specifies a target value for
--   the metric. As player usage changes, the policy triggers to adjust the
--   game server group capacity so that the metric returns to the target
--   value.
--   
--   <i>See:</i> <a>newTargetTrackingConfiguration</a> smart constructor.
data TargetTrackingConfiguration
TargetTrackingConfiguration' :: Double -> TargetTrackingConfiguration

-- | Desired value to use with a game server group target-based scaling
--   policy.
[$sel:targetValue:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Double

-- | Create a value of <a>TargetTrackingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetValue:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_targetValue</a> - Desired value to use
--   with a game server group target-based scaling policy.
newTargetTrackingConfiguration :: Double -> TargetTrackingConfiguration

-- | Desired value to use with a game server group target-based scaling
--   policy.
targetTrackingConfiguration_targetValue :: Lens' TargetTrackingConfiguration Double

-- | Represents an authorization for a VPC peering connection between the
--   VPC for an Amazon GameLift fleet and another VPC on an account you
--   have access to. This authorization must exist and be valid for the
--   peering connection to be established. Authorizations are valid for 24
--   hours after they are issued.
--   
--   <b>Related actions</b>
--   
--   CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations |
--   DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection |
--   DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newVpcPeeringAuthorization</a> smart constructor.
data VpcPeeringAuthorization
VpcPeeringAuthorization' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> VpcPeeringAuthorization

-- | Time stamp indicating when this authorization was issued. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
[$sel:creationTime:VpcPeeringAuthorization'] :: VpcPeeringAuthorization -> Maybe POSIX
[$sel:peerVpcAwsAccountId:VpcPeeringAuthorization'] :: VpcPeeringAuthorization -> Maybe Text

-- | Time stamp indicating when this authorization expires (24 hours after
--   issuance). Format is a number expressed in Unix time as milliseconds
--   (for example <tt>"1469498468.057"</tt>).
[$sel:expirationTime:VpcPeeringAuthorization'] :: VpcPeeringAuthorization -> Maybe POSIX

-- | A unique identifier for the AWS account that you use to manage your
--   GameLift fleet. You can find your Account ID in the AWS Management
--   Console under account settings.
[$sel:gameLiftAwsAccountId:VpcPeeringAuthorization'] :: VpcPeeringAuthorization -> Maybe Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
[$sel:peerVpcId:VpcPeeringAuthorization'] :: VpcPeeringAuthorization -> Maybe Text

-- | Create a value of <a>VpcPeeringAuthorization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_creationTime</a> - Time stamp indicating
--   when this authorization was issued. Format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:peerVpcAwsAccountId:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_peerVpcAwsAccountId</a> -
--   
--   <a>$sel:expirationTime:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_expirationTime</a> - Time stamp indicating
--   when this authorization expires (24 hours after issuance). Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:gameLiftAwsAccountId:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_gameLiftAwsAccountId</a> - A unique
--   identifier for the AWS account that you use to manage your GameLift
--   fleet. You can find your Account ID in the AWS Management Console
--   under account settings.
--   
--   <a>$sel:peerVpcId:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_peerVpcId</a> - A unique identifier for a
--   VPC with resources to be accessed by your GameLift fleet. The VPC must
--   be in the same Region as your fleet. To look up a VPC ID, use the
--   <a>VPC Dashboard</a> in the AWS Management Console. Learn more about
--   VPC peering in <a>VPC Peering with GameLift Fleets</a>.
newVpcPeeringAuthorization :: VpcPeeringAuthorization

-- | Time stamp indicating when this authorization was issued. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
vpcPeeringAuthorization_creationTime :: Lens' VpcPeeringAuthorization (Maybe UTCTime)

vpcPeeringAuthorization_peerVpcAwsAccountId :: Lens' VpcPeeringAuthorization (Maybe Text)

-- | Time stamp indicating when this authorization expires (24 hours after
--   issuance). Format is a number expressed in Unix time as milliseconds
--   (for example <tt>"1469498468.057"</tt>).
vpcPeeringAuthorization_expirationTime :: Lens' VpcPeeringAuthorization (Maybe UTCTime)

-- | A unique identifier for the AWS account that you use to manage your
--   GameLift fleet. You can find your Account ID in the AWS Management
--   Console under account settings.
vpcPeeringAuthorization_gameLiftAwsAccountId :: Lens' VpcPeeringAuthorization (Maybe Text)

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
vpcPeeringAuthorization_peerVpcId :: Lens' VpcPeeringAuthorization (Maybe Text)

-- | Represents a peering connection between a VPC on one of your AWS
--   accounts and the VPC for your Amazon GameLift fleets. This record may
--   be for an active peering connection or a pending connection that has
--   not yet been established.
--   
--   <b>Related actions</b>
--   
--   CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations |
--   DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection |
--   DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newVpcPeeringConnection</a> smart constructor.
data VpcPeeringConnection
VpcPeeringConnection' :: Maybe VpcPeeringConnectionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VpcPeeringConnection

-- | The status information about the connection. Status indicates if a
--   connection is pending, successful, or failed.
[$sel:status:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe VpcPeeringConnectionStatus

-- | A unique identifier that is automatically assigned to the connection
--   record. This ID is referenced in VPC peering connection events, and is
--   used when deleting a connection with DeleteVpcPeeringConnection.
[$sel:vpcPeeringConnectionId:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe Text

-- | CIDR block of IPv4 addresses assigned to the VPC peering connection
--   for the GameLift VPC. The peered VPC also has an IPv4 CIDR block
--   associated with it; these blocks cannot overlap or the peering
--   connection cannot be created.
[$sel:ipV4CidrBlock:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe Text

-- | A unique identifier for the fleet. This ID determines the ID of the
--   Amazon GameLift VPC for your fleet.
[$sel:fleetId:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet resource for this connection.
[$sel:fleetArn:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe Text

-- | A unique identifier for the VPC that contains the Amazon GameLift
--   fleet for this connection. This VPC is managed by Amazon GameLift and
--   does not appear in your AWS account.
[$sel:gameLiftVpcId:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
[$sel:peerVpcId:VpcPeeringConnection'] :: VpcPeeringConnection -> Maybe Text

-- | Create a value of <a>VpcPeeringConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_status</a> - The status information about the
--   connection. Status indicates if a connection is pending, successful,
--   or failed.
--   
--   <a>$sel:vpcPeeringConnectionId:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_vpcPeeringConnectionId</a> - A unique
--   identifier that is automatically assigned to the connection record.
--   This ID is referenced in VPC peering connection events, and is used
--   when deleting a connection with DeleteVpcPeeringConnection.
--   
--   <a>$sel:ipV4CidrBlock:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_ipV4CidrBlock</a> - CIDR block of IPv4
--   addresses assigned to the VPC peering connection for the GameLift VPC.
--   The peered VPC also has an IPv4 CIDR block associated with it; these
--   blocks cannot overlap or the peering connection cannot be created.
--   
--   <a>$sel:fleetId:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_fleetId</a> - A unique identifier for the
--   fleet. This ID determines the ID of the Amazon GameLift VPC for your
--   fleet.
--   
--   <a>$sel:fleetArn:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift fleet resource for this
--   connection.
--   
--   <a>$sel:gameLiftVpcId:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_gameLiftVpcId</a> - A unique identifier for
--   the VPC that contains the Amazon GameLift fleet for this connection.
--   This VPC is managed by Amazon GameLift and does not appear in your AWS
--   account.
--   
--   <a>$sel:peerVpcId:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_peerVpcId</a> - A unique identifier for a VPC
--   with resources to be accessed by your GameLift fleet. The VPC must be
--   in the same Region as your fleet. To look up a VPC ID, use the <a>VPC
--   Dashboard</a> in the AWS Management Console. Learn more about VPC
--   peering in <a>VPC Peering with GameLift Fleets</a>.
newVpcPeeringConnection :: VpcPeeringConnection

-- | The status information about the connection. Status indicates if a
--   connection is pending, successful, or failed.
vpcPeeringConnection_status :: Lens' VpcPeeringConnection (Maybe VpcPeeringConnectionStatus)

-- | A unique identifier that is automatically assigned to the connection
--   record. This ID is referenced in VPC peering connection events, and is
--   used when deleting a connection with DeleteVpcPeeringConnection.
vpcPeeringConnection_vpcPeeringConnectionId :: Lens' VpcPeeringConnection (Maybe Text)

-- | CIDR block of IPv4 addresses assigned to the VPC peering connection
--   for the GameLift VPC. The peered VPC also has an IPv4 CIDR block
--   associated with it; these blocks cannot overlap or the peering
--   connection cannot be created.
vpcPeeringConnection_ipV4CidrBlock :: Lens' VpcPeeringConnection (Maybe Text)

-- | A unique identifier for the fleet. This ID determines the ID of the
--   Amazon GameLift VPC for your fleet.
vpcPeeringConnection_fleetId :: Lens' VpcPeeringConnection (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet resource for this connection.
vpcPeeringConnection_fleetArn :: Lens' VpcPeeringConnection (Maybe Text)

-- | A unique identifier for the VPC that contains the Amazon GameLift
--   fleet for this connection. This VPC is managed by Amazon GameLift and
--   does not appear in your AWS account.
vpcPeeringConnection_gameLiftVpcId :: Lens' VpcPeeringConnection (Maybe Text)

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
vpcPeeringConnection_peerVpcId :: Lens' VpcPeeringConnection (Maybe Text)

-- | Represents status information for a VPC peering connection. Status is
--   associated with a VpcPeeringConnection object. Status codes and
--   messages are provided from EC2 (see
--   <a>VpcPeeringConnectionStateReason</a>). Connection status information
--   is also communicated as a fleet Event.
--   
--   <i>See:</i> <a>newVpcPeeringConnectionStatus</a> smart constructor.
data VpcPeeringConnectionStatus
VpcPeeringConnectionStatus' :: Maybe Text -> Maybe Text -> VpcPeeringConnectionStatus

-- | Additional messaging associated with the connection status.
[$sel:message:VpcPeeringConnectionStatus'] :: VpcPeeringConnectionStatus -> Maybe Text

-- | Code indicating the status of a VPC peering connection.
[$sel:code:VpcPeeringConnectionStatus'] :: VpcPeeringConnectionStatus -> Maybe Text

-- | Create a value of <a>VpcPeeringConnectionStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:VpcPeeringConnectionStatus'</a>,
--   <a>vpcPeeringConnectionStatus_message</a> - Additional messaging
--   associated with the connection status.
--   
--   <a>$sel:code:VpcPeeringConnectionStatus'</a>,
--   <a>vpcPeeringConnectionStatus_code</a> - Code indicating the status of
--   a VPC peering connection.
newVpcPeeringConnectionStatus :: VpcPeeringConnectionStatus

-- | Additional messaging associated with the connection status.
vpcPeeringConnectionStatus_message :: Lens' VpcPeeringConnectionStatus (Maybe Text)

-- | Code indicating the status of a VPC peering connection.
vpcPeeringConnectionStatus_code :: Lens' VpcPeeringConnectionStatus (Maybe Text)


-- | Assigns a tag to a GameLift resource. AWS resource tags provide an
--   additional management tool set. You can use tags to organize
--   resources, create IAM permissions policies to manage access to groups
--   of resources, customize AWS cost breakdowns, etc. This operation
--   handles the permissions necessary to manage tags for the following
--   GameLift resource types:
--   
--   <ul>
--   <li>Build</li>
--   <li>Script</li>
--   <li>Fleet</li>
--   <li>Alias</li>
--   <li>GameSessionQueue</li>
--   <li>MatchmakingConfiguration</li>
--   <li>MatchmakingRuleSet</li>
--   </ul>
--   
--   To add a tag to a resource, specify the unique ARN value for the
--   resource and provide a tag list containing one or more tags. The
--   operation succeeds even if the list includes tags that are already
--   assigned to the specified resource.
--   
--   <b>Learn more</b>
--   
--   <a>Tagging AWS Resources</a> in the <i>AWS General Reference</i>
--   
--   <a>AWS Tagging Strategies</a>
--   
--   <b>Related actions</b>
--   
--   TagResource | UntagResource | ListTagsForResource | <a>All APIs by
--   task</a>
module Network.AWS.GameLift.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to and uniquely
--   identifies the GameLift resource that you want to assign tags to.
--   GameLift resource ARNs are included in the data object for the
--   resource, which can be retrieved by calling a List or Describe
--   operation for the resource type.
[$sel:resourceARN:TagResource'] :: TagResource -> Text

-- | A list of one or more tags to assign to the specified GameLift
--   resource. Tags are developer-defined and structured as key-value
--   pairs. The maximum tag limit may be lower than stated. See <a>Tagging
--   AWS Resources</a> for actual tagging limits.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The Amazon Resource Name (<a>ARN</a>) that is assigned to and uniquely
--   identifies the GameLift resource that you want to assign tags to.
--   GameLift resource ARNs are included in the data object for the
--   resource, which can be retrieved by calling a List or Describe
--   operation for the resource type.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of one
--   or more tags to assign to the specified GameLift resource. Tags are
--   developer-defined and structured as key-value pairs. The maximum tag
--   limit may be lower than stated. See <a>Tagging AWS Resources</a> for
--   actual tagging limits.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to and uniquely
--   identifies the GameLift resource that you want to assign tags to.
--   GameLift resource ARNs are included in the data object for the
--   resource, which can be retrieved by calling a List or Describe
--   operation for the resource type.
tagResource_resourceARN :: Lens' TagResource Text

-- | A list of one or more tags to assign to the specified GameLift
--   resource. Tags are developer-defined and structured as key-value
--   pairs. The maximum tag limit may be lower than stated. See <a>Tagging
--   AWS Resources</a> for actual tagging limits.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.TagResource.TagResource
instance GHC.Show.Show Network.AWS.GameLift.TagResource.TagResource
instance GHC.Read.Read Network.AWS.GameLift.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.GameLift.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.GameLift.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.GameLift.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.GameLift.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.GameLift.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.GameLift.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.GameLift.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.TagResource.TagResource


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Temporarily stops activity on a game server group without terminating
--   instances or the game server group. You can restart activity by
--   calling ResumeGameServerGroup. You can suspend the following activity:
--   
--   <ul>
--   <li><b>Instance type replacement</b> - This activity evaluates the
--   current game hosting viability of all Spot instance types that are
--   defined for the game server group. It updates the Auto Scaling group
--   to remove nonviable Spot Instance types, which have a higher chance of
--   game server interruptions. It then balances capacity across the
--   remaining viable Spot Instance types. When this activity is suspended,
--   the Auto Scaling group continues with its current balance, regardless
--   of viability. Instance protection, utilization metrics, and capacity
--   scaling activities continue to be active.</li>
--   </ul>
--   
--   To suspend activity, specify a game server group ARN and the type of
--   activity to be suspended. If successful, a GameServerGroup object is
--   returned showing that the activity is listed in
--   <tt>SuspendedActions</tt>.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
module Network.AWS.GameLift.SuspendGameServerGroup

-- | <i>See:</i> <a>newSuspendGameServerGroup</a> smart constructor.
data SuspendGameServerGroup
SuspendGameServerGroup' :: Text -> NonEmpty GameServerGroupAction -> SuspendGameServerGroup

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
[$sel:gameServerGroupName:SuspendGameServerGroup'] :: SuspendGameServerGroup -> Text

-- | The activity to suspend for this game server group.
[$sel:suspendActions:SuspendGameServerGroup'] :: SuspendGameServerGroup -> NonEmpty GameServerGroupAction

-- | Create a value of <a>SuspendGameServerGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroupName:SuspendGameServerGroup'</a>,
--   <a>suspendGameServerGroup_gameServerGroupName</a> - A unique
--   identifier for the game server group. Use either the GameServerGroup
--   name or ARN value.
--   
--   <a>$sel:suspendActions:SuspendGameServerGroup'</a>,
--   <a>suspendGameServerGroup_suspendActions</a> - The activity to suspend
--   for this game server group.
newSuspendGameServerGroup :: Text -> NonEmpty GameServerGroupAction -> SuspendGameServerGroup

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
suspendGameServerGroup_gameServerGroupName :: Lens' SuspendGameServerGroup Text

-- | The activity to suspend for this game server group.
suspendGameServerGroup_suspendActions :: Lens' SuspendGameServerGroup (NonEmpty GameServerGroupAction)

-- | <i>See:</i> <a>newSuspendGameServerGroupResponse</a> smart
--   constructor.
data SuspendGameServerGroupResponse
SuspendGameServerGroupResponse' :: Maybe GameServerGroup -> Int -> SuspendGameServerGroupResponse

-- | An object that describes the game server group resource, with the
--   <tt>SuspendedActions</tt> property updated to reflect the suspended
--   activity.
[$sel:gameServerGroup:SuspendGameServerGroupResponse'] :: SuspendGameServerGroupResponse -> Maybe GameServerGroup

-- | The response's http status code.
[$sel:httpStatus:SuspendGameServerGroupResponse'] :: SuspendGameServerGroupResponse -> Int

-- | Create a value of <a>SuspendGameServerGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroup:SuspendGameServerGroupResponse'</a>,
--   <a>suspendGameServerGroupResponse_gameServerGroup</a> - An object that
--   describes the game server group resource, with the
--   <tt>SuspendedActions</tt> property updated to reflect the suspended
--   activity.
--   
--   <a>$sel:httpStatus:SuspendGameServerGroupResponse'</a>,
--   <a>suspendGameServerGroupResponse_httpStatus</a> - The response's http
--   status code.
newSuspendGameServerGroupResponse :: Int -> SuspendGameServerGroupResponse

-- | An object that describes the game server group resource, with the
--   <tt>SuspendedActions</tt> property updated to reflect the suspended
--   activity.
suspendGameServerGroupResponse_gameServerGroup :: Lens' SuspendGameServerGroupResponse (Maybe GameServerGroup)

-- | The response's http status code.
suspendGameServerGroupResponse_httpStatus :: Lens' SuspendGameServerGroupResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroup
instance GHC.Show.Show Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroup
instance GHC.Read.Read Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroup
instance GHC.Classes.Eq Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroup
instance GHC.Generics.Generic Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroupResponse
instance GHC.Show.Show Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroupResponse
instance GHC.Read.Read Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroupResponse
instance GHC.Classes.Eq Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.SuspendGameServerGroup.SuspendGameServerGroup


-- | Cancels a matchmaking ticket or match backfill ticket that is
--   currently being processed. To stop the matchmaking operation, specify
--   the ticket ID. If successful, work on the ticket is stopped, and the
--   ticket status is changed to <tt>CANCELLED</tt>.
--   
--   This call is also used to turn off automatic backfill for an
--   individual game session. This is for game sessions that are created
--   with a matchmaking configuration that has automatic backfill enabled.
--   The ticket ID is included in the <tt>MatchmakerData</tt> of an updated
--   game session object, which is provided to the game server.
--   
--   If the operation is successful, the service sends back an empty JSON
--   struct with the HTTP 200 response (not an empty HTTP body).
--   
--   <b>Learn more</b>
--   
--   <a>Add FlexMatch to a game client</a>
--   
--   <b>Related actions</b>
--   
--   StartMatchmaking | DescribeMatchmaking | StopMatchmaking | AcceptMatch
--   | StartMatchBackfill | <a>All APIs by task</a>
module Network.AWS.GameLift.StopMatchmaking

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStopMatchmaking</a> smart constructor.
data StopMatchmaking
StopMatchmaking' :: Text -> StopMatchmaking

-- | A unique identifier for a matchmaking ticket.
[$sel:ticketId:StopMatchmaking'] :: StopMatchmaking -> Text

-- | Create a value of <a>StopMatchmaking</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ticketId:StopMatchmaking'</a>, <a>stopMatchmaking_ticketId</a>
--   - A unique identifier for a matchmaking ticket.
newStopMatchmaking :: Text -> StopMatchmaking

-- | A unique identifier for a matchmaking ticket.
stopMatchmaking_ticketId :: Lens' StopMatchmaking Text

-- | <i>See:</i> <a>newStopMatchmakingResponse</a> smart constructor.
data StopMatchmakingResponse
StopMatchmakingResponse' :: Int -> StopMatchmakingResponse

-- | The response's http status code.
[$sel:httpStatus:StopMatchmakingResponse'] :: StopMatchmakingResponse -> Int

-- | Create a value of <a>StopMatchmakingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopMatchmakingResponse'</a>,
--   <a>stopMatchmakingResponse_httpStatus</a> - The response's http status
--   code.
newStopMatchmakingResponse :: Int -> StopMatchmakingResponse

-- | The response's http status code.
stopMatchmakingResponse_httpStatus :: Lens' StopMatchmakingResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.StopMatchmaking.StopMatchmaking
instance GHC.Show.Show Network.AWS.GameLift.StopMatchmaking.StopMatchmaking
instance GHC.Read.Read Network.AWS.GameLift.StopMatchmaking.StopMatchmaking
instance GHC.Classes.Eq Network.AWS.GameLift.StopMatchmaking.StopMatchmaking
instance GHC.Generics.Generic Network.AWS.GameLift.StopMatchmaking.StopMatchmakingResponse
instance GHC.Show.Show Network.AWS.GameLift.StopMatchmaking.StopMatchmakingResponse
instance GHC.Read.Read Network.AWS.GameLift.StopMatchmaking.StopMatchmakingResponse
instance GHC.Classes.Eq Network.AWS.GameLift.StopMatchmaking.StopMatchmakingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.StopMatchmaking.StopMatchmaking
instance Control.DeepSeq.NFData Network.AWS.GameLift.StopMatchmaking.StopMatchmakingResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.StopMatchmaking.StopMatchmaking
instance Control.DeepSeq.NFData Network.AWS.GameLift.StopMatchmaking.StopMatchmaking
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.StopMatchmaking.StopMatchmaking
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.StopMatchmaking.StopMatchmaking
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.StopMatchmaking.StopMatchmaking
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.StopMatchmaking.StopMatchmaking


-- | Cancels a game session placement that is in <tt>PENDING</tt> status.
--   To stop a placement, provide the placement ID values. If successful,
--   the placement is moved to <tt>CANCELLED</tt> status.
--   
--   <b>Related actions</b>
--   
--   CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails
--   | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
module Network.AWS.GameLift.StopGameSessionPlacement

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStopGameSessionPlacement</a> smart constructor.
data StopGameSessionPlacement
StopGameSessionPlacement' :: Text -> StopGameSessionPlacement

-- | A unique identifier for a game session placement to cancel.
[$sel:placementId:StopGameSessionPlacement'] :: StopGameSessionPlacement -> Text

-- | Create a value of <a>StopGameSessionPlacement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:placementId:StopGameSessionPlacement'</a>,
--   <a>stopGameSessionPlacement_placementId</a> - A unique identifier for
--   a game session placement to cancel.
newStopGameSessionPlacement :: Text -> StopGameSessionPlacement

-- | A unique identifier for a game session placement to cancel.
stopGameSessionPlacement_placementId :: Lens' StopGameSessionPlacement Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newStopGameSessionPlacementResponse</a> smart
--   constructor.
data StopGameSessionPlacementResponse
StopGameSessionPlacementResponse' :: Maybe GameSessionPlacement -> Int -> StopGameSessionPlacementResponse

-- | Object that describes the canceled game session placement, with
--   <tt>CANCELLED</tt> status and an end time stamp.
[$sel:gameSessionPlacement:StopGameSessionPlacementResponse'] :: StopGameSessionPlacementResponse -> Maybe GameSessionPlacement

-- | The response's http status code.
[$sel:httpStatus:StopGameSessionPlacementResponse'] :: StopGameSessionPlacementResponse -> Int

-- | Create a value of <a>StopGameSessionPlacementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionPlacement:StopGameSessionPlacementResponse'</a>,
--   <a>stopGameSessionPlacementResponse_gameSessionPlacement</a> - Object
--   that describes the canceled game session placement, with
--   <tt>CANCELLED</tt> status and an end time stamp.
--   
--   <a>$sel:httpStatus:StopGameSessionPlacementResponse'</a>,
--   <a>stopGameSessionPlacementResponse_httpStatus</a> - The response's
--   http status code.
newStopGameSessionPlacementResponse :: Int -> StopGameSessionPlacementResponse

-- | Object that describes the canceled game session placement, with
--   <tt>CANCELLED</tt> status and an end time stamp.
stopGameSessionPlacementResponse_gameSessionPlacement :: Lens' StopGameSessionPlacementResponse (Maybe GameSessionPlacement)

-- | The response's http status code.
stopGameSessionPlacementResponse_httpStatus :: Lens' StopGameSessionPlacementResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacement
instance GHC.Show.Show Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacement
instance GHC.Read.Read Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacement
instance GHC.Classes.Eq Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacement
instance GHC.Generics.Generic Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacementResponse
instance GHC.Show.Show Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacementResponse
instance GHC.Read.Read Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacementResponse
instance GHC.Classes.Eq Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacementResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacement
instance Control.DeepSeq.NFData Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacementResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacement
instance Control.DeepSeq.NFData Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacement
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacement
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacement
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacement
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.StopGameSessionPlacement.StopGameSessionPlacement


-- | Suspends certain types of activity in a fleet location. Currently,
--   this operation is used to stop auto-scaling activity. For
--   multi-location fleets, fleet actions are managed separately for each
--   location.
--   
--   Stopping fleet actions has several potential purposes. It allows you
--   to temporarily stop auto-scaling activity but retain your scaling
--   policies for use in the future. For multi-location fleets, you can set
--   up fleet-wide auto-scaling, and then opt out of it for certain
--   locations.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To stop actions on instances in the fleet's home Region, provide a
--   fleet ID and the type of actions to suspend.</li>
--   <li>To stop actions on instances in one of the fleet's remote
--   locations, provide a fleet ID, a location name, and the type of
--   actions to suspend.</li>
--   </ul>
--   
--   If successful, GameLift no longer initiates scaling events except in
--   response to manual changes using UpdateFleetCapacity. You can view a
--   fleet's stopped actions using DescribeFleetAttributes or
--   DescribeFleetLocationAttributes. Suspended activity can be restarted
--   using StartFleetActions.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift Fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleet | UpdateFleetCapacity | PutScalingPolicy |
--   DescribeEC2InstanceLimits | DescribeFleetAttributes |
--   DescribeFleetLocationAttributes | UpdateFleetAttributes |
--   StopFleetActions | DeleteFleet | <a>All APIs by task</a>
module Network.AWS.GameLift.StopFleetActions

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStopFleetActions</a> smart constructor.
data StopFleetActions
StopFleetActions' :: Maybe Text -> Text -> NonEmpty FleetAction -> StopFleetActions

-- | The fleet location to stop fleet actions for. Specify a location in
--   the form of an AWS Region code, such as <tt>us-west-2</tt>.
[$sel:location:StopFleetActions'] :: StopFleetActions -> Maybe Text

-- | A unique identifier for the fleet to stop actions on. You can use
--   either the fleet ID or ARN value.
[$sel:fleetId:StopFleetActions'] :: StopFleetActions -> Text

-- | List of actions to suspend on the fleet.
[$sel:actions:StopFleetActions'] :: StopFleetActions -> NonEmpty FleetAction

-- | Create a value of <a>StopFleetActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:StopFleetActions'</a>,
--   <a>stopFleetActions_location</a> - The fleet location to stop fleet
--   actions for. Specify a location in the form of an AWS Region code,
--   such as <tt>us-west-2</tt>.
--   
--   <a>$sel:fleetId:StopFleetActions'</a>, <a>stopFleetActions_fleetId</a>
--   - A unique identifier for the fleet to stop actions on. You can use
--   either the fleet ID or ARN value.
--   
--   <a>$sel:actions:StopFleetActions'</a>, <a>stopFleetActions_actions</a>
--   - List of actions to suspend on the fleet.
newStopFleetActions :: Text -> NonEmpty FleetAction -> StopFleetActions

-- | The fleet location to stop fleet actions for. Specify a location in
--   the form of an AWS Region code, such as <tt>us-west-2</tt>.
stopFleetActions_location :: Lens' StopFleetActions (Maybe Text)

-- | A unique identifier for the fleet to stop actions on. You can use
--   either the fleet ID or ARN value.
stopFleetActions_fleetId :: Lens' StopFleetActions Text

-- | List of actions to suspend on the fleet.
stopFleetActions_actions :: Lens' StopFleetActions (NonEmpty FleetAction)

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStopFleetActionsResponse</a> smart constructor.
data StopFleetActionsResponse
StopFleetActionsResponse' :: Maybe Text -> Maybe Text -> Int -> StopFleetActionsResponse

-- | A unique identifier for the fleet to stop actions on.
[$sel:fleetId:StopFleetActionsResponse'] :: StopFleetActionsResponse -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:StopFleetActionsResponse'] :: StopFleetActionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StopFleetActionsResponse'] :: StopFleetActionsResponse -> Int

-- | Create a value of <a>StopFleetActionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:StopFleetActions'</a>,
--   <a>stopFleetActionsResponse_fleetId</a> - A unique identifier for the
--   fleet to stop actions on.
--   
--   <a>$sel:fleetArn:StopFleetActionsResponse'</a>,
--   <a>stopFleetActionsResponse_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:httpStatus:StopFleetActionsResponse'</a>,
--   <a>stopFleetActionsResponse_httpStatus</a> - The response's http
--   status code.
newStopFleetActionsResponse :: Int -> StopFleetActionsResponse

-- | A unique identifier for the fleet to stop actions on.
stopFleetActionsResponse_fleetId :: Lens' StopFleetActionsResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
stopFleetActionsResponse_fleetArn :: Lens' StopFleetActionsResponse (Maybe Text)

-- | The response's http status code.
stopFleetActionsResponse_httpStatus :: Lens' StopFleetActionsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.StopFleetActions.StopFleetActions
instance GHC.Show.Show Network.AWS.GameLift.StopFleetActions.StopFleetActions
instance GHC.Read.Read Network.AWS.GameLift.StopFleetActions.StopFleetActions
instance GHC.Classes.Eq Network.AWS.GameLift.StopFleetActions.StopFleetActions
instance GHC.Generics.Generic Network.AWS.GameLift.StopFleetActions.StopFleetActionsResponse
instance GHC.Show.Show Network.AWS.GameLift.StopFleetActions.StopFleetActionsResponse
instance GHC.Read.Read Network.AWS.GameLift.StopFleetActions.StopFleetActionsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.StopFleetActions.StopFleetActionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.StopFleetActions.StopFleetActions
instance Control.DeepSeq.NFData Network.AWS.GameLift.StopFleetActions.StopFleetActionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.StopFleetActions.StopFleetActions
instance Control.DeepSeq.NFData Network.AWS.GameLift.StopFleetActions.StopFleetActions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.StopFleetActions.StopFleetActions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.StopFleetActions.StopFleetActions
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.StopFleetActions.StopFleetActions
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.StopFleetActions.StopFleetActions


-- | Uses FlexMatch to create a game match for a group of players based on
--   custom matchmaking rules. With games that use GameLift managed
--   hosting, this operation also triggers GameLift to find hosting
--   resources and start a new game session for the new match. Each
--   matchmaking request includes information on one or more players and
--   specifies the FlexMatch matchmaker to use. When a request is for
--   multiple players, FlexMatch attempts to build a match that includes
--   all players in the request, placing them in the same team and finding
--   additional players as needed to fill the match.
--   
--   To start matchmaking, provide a unique ticket ID, specify a
--   matchmaking configuration, and include the players to be matched. You
--   must also include any player attributes that are required by the
--   matchmaking configuration's rule set. If successful, a matchmaking
--   ticket is returned with status set to <tt>QUEUED</tt>.
--   
--   Track matchmaking events to respond as needed and acquire game session
--   connection information for successfully completed matches. Ticket
--   status updates are tracked using event notification through Amazon
--   Simple Notification Service (SNS), which is defined in the matchmaking
--   configuration.
--   
--   <b>Learn more</b>
--   
--   <a>Add FlexMatch to a game client</a>
--   
--   <a>Set Up FlexMatch event notification</a>
--   
--   <a>How GameLift FlexMatch works</a>
--   
--   <b>Related actions</b>
--   
--   StartMatchmaking | DescribeMatchmaking | StopMatchmaking | AcceptMatch
--   | StartMatchBackfill | <a>All APIs by task</a>
module Network.AWS.GameLift.StartMatchmaking

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStartMatchmaking</a> smart constructor.
data StartMatchmaking
StartMatchmaking' :: Maybe Text -> Text -> [Player] -> StartMatchmaking

-- | A unique identifier for a matchmaking ticket. If no ticket ID is
--   specified here, Amazon GameLift will generate one in the form of a
--   UUID. Use this identifier to track the matchmaking ticket status and
--   retrieve match results.
[$sel:ticketId:StartMatchmaking'] :: StartMatchmaking -> Maybe Text

-- | Name of the matchmaking configuration to use for this request.
--   Matchmaking configurations must exist in the same Region as this
--   request. You can use either the configuration name or ARN value.
[$sel:configurationName:StartMatchmaking'] :: StartMatchmaking -> Text

-- | Information on each player to be matched. This information must
--   include a player ID, and may contain player attributes and latency
--   data to be used in the matchmaking process. After a successful match,
--   <tt>Player</tt> objects contain the name of the team the player is
--   assigned to.
[$sel:players:StartMatchmaking'] :: StartMatchmaking -> [Player]

-- | Create a value of <a>StartMatchmaking</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ticketId:StartMatchmaking'</a>,
--   <a>startMatchmaking_ticketId</a> - A unique identifier for a
--   matchmaking ticket. If no ticket ID is specified here, Amazon GameLift
--   will generate one in the form of a UUID. Use this identifier to track
--   the matchmaking ticket status and retrieve match results.
--   
--   <a>$sel:configurationName:StartMatchmaking'</a>,
--   <a>startMatchmaking_configurationName</a> - Name of the matchmaking
--   configuration to use for this request. Matchmaking configurations must
--   exist in the same Region as this request. You can use either the
--   configuration name or ARN value.
--   
--   <a>$sel:players:StartMatchmaking'</a>, <a>startMatchmaking_players</a>
--   - Information on each player to be matched. This information must
--   include a player ID, and may contain player attributes and latency
--   data to be used in the matchmaking process. After a successful match,
--   <tt>Player</tt> objects contain the name of the team the player is
--   assigned to.
newStartMatchmaking :: Text -> StartMatchmaking

-- | A unique identifier for a matchmaking ticket. If no ticket ID is
--   specified here, Amazon GameLift will generate one in the form of a
--   UUID. Use this identifier to track the matchmaking ticket status and
--   retrieve match results.
startMatchmaking_ticketId :: Lens' StartMatchmaking (Maybe Text)

-- | Name of the matchmaking configuration to use for this request.
--   Matchmaking configurations must exist in the same Region as this
--   request. You can use either the configuration name or ARN value.
startMatchmaking_configurationName :: Lens' StartMatchmaking Text

-- | Information on each player to be matched. This information must
--   include a player ID, and may contain player attributes and latency
--   data to be used in the matchmaking process. After a successful match,
--   <tt>Player</tt> objects contain the name of the team the player is
--   assigned to.
startMatchmaking_players :: Lens' StartMatchmaking [Player]

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newStartMatchmakingResponse</a> smart constructor.
data StartMatchmakingResponse
StartMatchmakingResponse' :: Maybe MatchmakingTicket -> Int -> StartMatchmakingResponse

-- | Ticket representing the matchmaking request. This object include the
--   information included in the request, ticket status, and match results
--   as generated during the matchmaking process.
[$sel:matchmakingTicket:StartMatchmakingResponse'] :: StartMatchmakingResponse -> Maybe MatchmakingTicket

-- | The response's http status code.
[$sel:httpStatus:StartMatchmakingResponse'] :: StartMatchmakingResponse -> Int

-- | Create a value of <a>StartMatchmakingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchmakingTicket:StartMatchmakingResponse'</a>,
--   <a>startMatchmakingResponse_matchmakingTicket</a> - Ticket
--   representing the matchmaking request. This object include the
--   information included in the request, ticket status, and match results
--   as generated during the matchmaking process.
--   
--   <a>$sel:httpStatus:StartMatchmakingResponse'</a>,
--   <a>startMatchmakingResponse_httpStatus</a> - The response's http
--   status code.
newStartMatchmakingResponse :: Int -> StartMatchmakingResponse

-- | Ticket representing the matchmaking request. This object include the
--   information included in the request, ticket status, and match results
--   as generated during the matchmaking process.
startMatchmakingResponse_matchmakingTicket :: Lens' StartMatchmakingResponse (Maybe MatchmakingTicket)

-- | The response's http status code.
startMatchmakingResponse_httpStatus :: Lens' StartMatchmakingResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.StartMatchmaking.StartMatchmaking
instance GHC.Show.Show Network.AWS.GameLift.StartMatchmaking.StartMatchmaking
instance GHC.Read.Read Network.AWS.GameLift.StartMatchmaking.StartMatchmaking
instance GHC.Classes.Eq Network.AWS.GameLift.StartMatchmaking.StartMatchmaking
instance GHC.Generics.Generic Network.AWS.GameLift.StartMatchmaking.StartMatchmakingResponse
instance GHC.Show.Show Network.AWS.GameLift.StartMatchmaking.StartMatchmakingResponse
instance GHC.Read.Read Network.AWS.GameLift.StartMatchmaking.StartMatchmakingResponse
instance GHC.Classes.Eq Network.AWS.GameLift.StartMatchmaking.StartMatchmakingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.StartMatchmaking.StartMatchmaking
instance Control.DeepSeq.NFData Network.AWS.GameLift.StartMatchmaking.StartMatchmakingResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.StartMatchmaking.StartMatchmaking
instance Control.DeepSeq.NFData Network.AWS.GameLift.StartMatchmaking.StartMatchmaking
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.StartMatchmaking.StartMatchmaking
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.StartMatchmaking.StartMatchmaking
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.StartMatchmaking.StartMatchmaking
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.StartMatchmaking.StartMatchmaking


-- | Finds new players to fill open slots in currently running game
--   sessions. The backfill match process is essentially identical to the
--   process of forming new matches. Backfill requests use the same
--   matchmaker that was used to make the original match, and they provide
--   matchmaking data for all players currently in the game session.
--   FlexMatch uses this information to select new players so that
--   backfilled match continues to meet the original match requirements.
--   
--   When using FlexMatch with GameLift managed hosting, you can request a
--   backfill match from a client service by calling this operation with a
--   GameSession identifier. You also have the option of making backfill
--   requests directly from your game server. In response to a request,
--   FlexMatch creates player sessions for the new players, updates the
--   <tt>GameSession</tt> resource, and sends updated matchmaking data to
--   the game server. You can request a backfill match at any point after a
--   game session is started. Each game session can have only one active
--   backfill request at a time; a subsequent request automatically
--   replaces the earlier request.
--   
--   When using FlexMatch as a standalone component, request a backfill
--   match by calling this operation without a game session identifier. As
--   with newly formed matches, matchmaking results are returned in a
--   matchmaking event so that your game can update the game session that
--   is being backfilled.
--   
--   To request a backfill match, specify a unique ticket ID, the original
--   matchmaking configuration, and matchmaking data for all current
--   players in the game session being backfilled. Optionally, specify the
--   <tt>GameSession</tt> ARN. If successful, a match backfill ticket is
--   created and returned with status set to QUEUED. Track the status of
--   backfill tickets using the same method for tracking tickets for new
--   matches.
--   
--   <b>Learn more</b>
--   
--   <a>Backfill existing games with FlexMatch</a>
--   
--   <a>Matchmaking events</a> (reference)
--   
--   <a>How GameLift FlexMatch works</a>
--   
--   <b>Related actions</b>
--   
--   StartMatchmaking | DescribeMatchmaking | StopMatchmaking | AcceptMatch
--   | StartMatchBackfill | <a>All APIs by task</a>
module Network.AWS.GameLift.StartMatchBackfill

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStartMatchBackfill</a> smart constructor.
data StartMatchBackfill
StartMatchBackfill' :: Maybe Text -> Maybe Text -> Text -> [Player] -> StartMatchBackfill

-- | A unique identifier for a matchmaking ticket. If no ticket ID is
--   specified here, Amazon GameLift will generate one in the form of a
--   UUID. Use this identifier to track the match backfill ticket status
--   and retrieve match results.
[$sel:ticketId:StartMatchBackfill'] :: StartMatchBackfill -> Maybe Text

-- | A unique identifier for the game session. Use the game session ID.
--   When using FlexMatch as a standalone matchmaking solution, this
--   parameter is not needed.
[$sel:gameSessionArn:StartMatchBackfill'] :: StartMatchBackfill -> Maybe Text

-- | Name of the matchmaker to use for this request. You can use either the
--   configuration name or ARN value. The ARN of the matchmaker that was
--   used with the original game session is listed in the GameSession
--   object, <tt>MatchmakerData</tt> property.
[$sel:configurationName:StartMatchBackfill'] :: StartMatchBackfill -> Text

-- | Match information on all players that are currently assigned to the
--   game session. This information is used by the matchmaker to find new
--   players and add them to the existing game.
--   
--   <ul>
--   <li>PlayerID, PlayerAttributes, Team -- This information is maintained
--   in the GameSession object, <tt>MatchmakerData</tt> property, for all
--   players who are currently assigned to the game session. The matchmaker
--   data is in JSON syntax, formatted as a string. For more details, see
--   <a>Match Data</a>.</li>
--   <li>LatencyInMs -- If the matchmaker uses player latency, include a
--   latency value, in milliseconds, for the Region that the game session
--   is currently in. Do not include latency values for any other
--   Region.</li>
--   </ul>
[$sel:players:StartMatchBackfill'] :: StartMatchBackfill -> [Player]

-- | Create a value of <a>StartMatchBackfill</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ticketId:StartMatchBackfill'</a>,
--   <a>startMatchBackfill_ticketId</a> - A unique identifier for a
--   matchmaking ticket. If no ticket ID is specified here, Amazon GameLift
--   will generate one in the form of a UUID. Use this identifier to track
--   the match backfill ticket status and retrieve match results.
--   
--   <a>$sel:gameSessionArn:StartMatchBackfill'</a>,
--   <a>startMatchBackfill_gameSessionArn</a> - A unique identifier for the
--   game session. Use the game session ID. When using FlexMatch as a
--   standalone matchmaking solution, this parameter is not needed.
--   
--   <a>$sel:configurationName:StartMatchBackfill'</a>,
--   <a>startMatchBackfill_configurationName</a> - Name of the matchmaker
--   to use for this request. You can use either the configuration name or
--   ARN value. The ARN of the matchmaker that was used with the original
--   game session is listed in the GameSession object,
--   <tt>MatchmakerData</tt> property.
--   
--   <a>$sel:players:StartMatchBackfill'</a>,
--   <a>startMatchBackfill_players</a> - Match information on all players
--   that are currently assigned to the game session. This information is
--   used by the matchmaker to find new players and add them to the
--   existing game.
--   
--   <ul>
--   <li>PlayerID, PlayerAttributes, Team -- This information is maintained
--   in the GameSession object, <tt>MatchmakerData</tt> property, for all
--   players who are currently assigned to the game session. The matchmaker
--   data is in JSON syntax, formatted as a string. For more details, see
--   <a>Match Data</a>.</li>
--   <li>LatencyInMs -- If the matchmaker uses player latency, include a
--   latency value, in milliseconds, for the Region that the game session
--   is currently in. Do not include latency values for any other
--   Region.</li>
--   </ul>
newStartMatchBackfill :: Text -> StartMatchBackfill

-- | A unique identifier for a matchmaking ticket. If no ticket ID is
--   specified here, Amazon GameLift will generate one in the form of a
--   UUID. Use this identifier to track the match backfill ticket status
--   and retrieve match results.
startMatchBackfill_ticketId :: Lens' StartMatchBackfill (Maybe Text)

-- | A unique identifier for the game session. Use the game session ID.
--   When using FlexMatch as a standalone matchmaking solution, this
--   parameter is not needed.
startMatchBackfill_gameSessionArn :: Lens' StartMatchBackfill (Maybe Text)

-- | Name of the matchmaker to use for this request. You can use either the
--   configuration name or ARN value. The ARN of the matchmaker that was
--   used with the original game session is listed in the GameSession
--   object, <tt>MatchmakerData</tt> property.
startMatchBackfill_configurationName :: Lens' StartMatchBackfill Text

-- | Match information on all players that are currently assigned to the
--   game session. This information is used by the matchmaker to find new
--   players and add them to the existing game.
--   
--   <ul>
--   <li>PlayerID, PlayerAttributes, Team -- This information is maintained
--   in the GameSession object, <tt>MatchmakerData</tt> property, for all
--   players who are currently assigned to the game session. The matchmaker
--   data is in JSON syntax, formatted as a string. For more details, see
--   <a>Match Data</a>.</li>
--   <li>LatencyInMs -- If the matchmaker uses player latency, include a
--   latency value, in milliseconds, for the Region that the game session
--   is currently in. Do not include latency values for any other
--   Region.</li>
--   </ul>
startMatchBackfill_players :: Lens' StartMatchBackfill [Player]

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newStartMatchBackfillResponse</a> smart constructor.
data StartMatchBackfillResponse
StartMatchBackfillResponse' :: Maybe MatchmakingTicket -> Int -> StartMatchBackfillResponse

-- | Ticket representing the backfill matchmaking request. This object
--   includes the information in the request, ticket status, and match
--   results as generated during the matchmaking process.
[$sel:matchmakingTicket:StartMatchBackfillResponse'] :: StartMatchBackfillResponse -> Maybe MatchmakingTicket

-- | The response's http status code.
[$sel:httpStatus:StartMatchBackfillResponse'] :: StartMatchBackfillResponse -> Int

-- | Create a value of <a>StartMatchBackfillResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchmakingTicket:StartMatchBackfillResponse'</a>,
--   <a>startMatchBackfillResponse_matchmakingTicket</a> - Ticket
--   representing the backfill matchmaking request. This object includes
--   the information in the request, ticket status, and match results as
--   generated during the matchmaking process.
--   
--   <a>$sel:httpStatus:StartMatchBackfillResponse'</a>,
--   <a>startMatchBackfillResponse_httpStatus</a> - The response's http
--   status code.
newStartMatchBackfillResponse :: Int -> StartMatchBackfillResponse

-- | Ticket representing the backfill matchmaking request. This object
--   includes the information in the request, ticket status, and match
--   results as generated during the matchmaking process.
startMatchBackfillResponse_matchmakingTicket :: Lens' StartMatchBackfillResponse (Maybe MatchmakingTicket)

-- | The response's http status code.
startMatchBackfillResponse_httpStatus :: Lens' StartMatchBackfillResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfill
instance GHC.Show.Show Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfill
instance GHC.Read.Read Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfill
instance GHC.Classes.Eq Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfill
instance GHC.Generics.Generic Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfillResponse
instance GHC.Show.Show Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfillResponse
instance GHC.Read.Read Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfillResponse
instance GHC.Classes.Eq Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfillResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfill
instance Control.DeepSeq.NFData Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfillResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfill
instance Control.DeepSeq.NFData Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfill
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfill
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfill
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfill
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.StartMatchBackfill.StartMatchBackfill


-- | Places a request for a new game session in a queue (see
--   CreateGameSessionQueue). When processing a placement request, Amazon
--   GameLift searches for available resources on the queue's destinations,
--   scanning each until it finds resources or the placement request times
--   out.
--   
--   A game session placement request can also request player sessions.
--   When a new game session is successfully created, Amazon GameLift
--   creates a player session for each player included in the request.
--   
--   When placing a game session, by default Amazon GameLift tries each
--   fleet in the order they are listed in the queue configuration.
--   Ideally, a queue's destinations are listed in preference order.
--   
--   Alternatively, when requesting a game session with players, you can
--   also provide latency data for each player in relevant Regions. Latency
--   data indicates the performance lag a player experiences when connected
--   to a fleet in the Region. Amazon GameLift uses latency data to reorder
--   the list of destinations to place the game session in a Region with
--   minimal lag. If latency data is provided for multiple players, Amazon
--   GameLift calculates each Region's average lag for all players and
--   reorders to get the best game play across all players.
--   
--   To place a new game session request, specify the following:
--   
--   <ul>
--   <li>The queue name and a set of game session properties and
--   settings</li>
--   <li>A unique ID (such as a UUID) for the placement. You use this ID to
--   track the status of the placement request</li>
--   <li>(Optional) A set of player data and a unique player ID for each
--   player that you are joining to the new game session (player data is
--   optional, but if you include it, you must also provide a unique ID for
--   each player)</li>
--   <li>Latency data for all players (if you want to optimize game play
--   for the players)</li>
--   </ul>
--   
--   If successful, a new game session placement is created.
--   
--   To track the status of a placement request, call
--   DescribeGameSessionPlacement and check the request's status. If the
--   status is <tt>FULFILLED</tt>, a new game session has been created and
--   a game session ARN and Region are referenced. If the placement request
--   times out, you can resubmit the request or retry it with a different
--   queue.
--   
--   <b>Related actions</b>
--   
--   CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails
--   | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
module Network.AWS.GameLift.StartGameSessionPlacement

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStartGameSessionPlacement</a> smart constructor.
data StartGameSessionPlacement
StartGameSessionPlacement' :: Maybe [GameProperty] -> Maybe Text -> Maybe Text -> Maybe [DesiredPlayerSession] -> Maybe [PlayerLatency] -> Text -> Text -> Natural -> StartGameSessionPlacement

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>).
[$sel:gameProperties:StartGameSessionPlacement'] :: StartGameSessionPlacement -> Maybe [GameProperty]

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
[$sel:gameSessionData:StartGameSessionPlacement'] :: StartGameSessionPlacement -> Maybe Text

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
[$sel:gameSessionName:StartGameSessionPlacement'] :: StartGameSessionPlacement -> Maybe Text

-- | Set of information on each player to create a player session for.
[$sel:desiredPlayerSessions:StartGameSessionPlacement'] :: StartGameSessionPlacement -> Maybe [DesiredPlayerSession]

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions.
--   This information is used to try to place the new game session where it
--   can offer the best possible gameplay experience for the players.
[$sel:playerLatencies:StartGameSessionPlacement'] :: StartGameSessionPlacement -> Maybe [PlayerLatency]

-- | A unique identifier to assign to the new game session placement. This
--   value is developer-defined. The value must be unique across all
--   Regions and cannot be reused unless you are resubmitting a canceled or
--   timed-out placement request.
[$sel:placementId:StartGameSessionPlacement'] :: StartGameSessionPlacement -> Text

-- | Name of the queue to use to place the new game session. You can use
--   either the queue name or ARN value.
[$sel:gameSessionQueueName:StartGameSessionPlacement'] :: StartGameSessionPlacement -> Text

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
[$sel:maximumPlayerSessionCount:StartGameSessionPlacement'] :: StartGameSessionPlacement -> Natural

-- | Create a value of <a>StartGameSessionPlacement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameProperties:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_gameProperties</a> - A set of custom
--   properties for a game session, formatted as key:value pairs. These
--   properties are passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
--   
--   <a>$sel:gameSessionData:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_gameSessionData</a> - A set of custom
--   game session properties, formatted as a single string value. This data
--   is passed to a game server process in the GameSession object with a
--   request to start a new game session (see <a>Start a Game Session</a>).
--   
--   <a>$sel:gameSessionName:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_gameSessionName</a> - A descriptive label
--   that is associated with a game session. Session names do not need to
--   be unique.
--   
--   <a>$sel:desiredPlayerSessions:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_desiredPlayerSessions</a> - Set of
--   information on each player to create a player session for.
--   
--   <a>$sel:playerLatencies:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_playerLatencies</a> - A set of values,
--   expressed in milliseconds, that indicates the amount of latency that a
--   player experiences when connected to AWS Regions. This information is
--   used to try to place the new game session where it can offer the best
--   possible gameplay experience for the players.
--   
--   <a>$sel:placementId:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_placementId</a> - A unique identifier to
--   assign to the new game session placement. This value is
--   developer-defined. The value must be unique across all Regions and
--   cannot be reused unless you are resubmitting a canceled or timed-out
--   placement request.
--   
--   <a>$sel:gameSessionQueueName:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_gameSessionQueueName</a> - Name of the
--   queue to use to place the new game session. You can use either the
--   queue name or ARN value.
--   
--   <a>$sel:maximumPlayerSessionCount:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_maximumPlayerSessionCount</a> - The
--   maximum number of players that can be connected simultaneously to the
--   game session.
newStartGameSessionPlacement :: Text -> Text -> Natural -> StartGameSessionPlacement

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>).
startGameSessionPlacement_gameProperties :: Lens' StartGameSessionPlacement (Maybe [GameProperty])

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
startGameSessionPlacement_gameSessionData :: Lens' StartGameSessionPlacement (Maybe Text)

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
startGameSessionPlacement_gameSessionName :: Lens' StartGameSessionPlacement (Maybe Text)

-- | Set of information on each player to create a player session for.
startGameSessionPlacement_desiredPlayerSessions :: Lens' StartGameSessionPlacement (Maybe [DesiredPlayerSession])

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions.
--   This information is used to try to place the new game session where it
--   can offer the best possible gameplay experience for the players.
startGameSessionPlacement_playerLatencies :: Lens' StartGameSessionPlacement (Maybe [PlayerLatency])

-- | A unique identifier to assign to the new game session placement. This
--   value is developer-defined. The value must be unique across all
--   Regions and cannot be reused unless you are resubmitting a canceled or
--   timed-out placement request.
startGameSessionPlacement_placementId :: Lens' StartGameSessionPlacement Text

-- | Name of the queue to use to place the new game session. You can use
--   either the queue name or ARN value.
startGameSessionPlacement_gameSessionQueueName :: Lens' StartGameSessionPlacement Text

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
startGameSessionPlacement_maximumPlayerSessionCount :: Lens' StartGameSessionPlacement Natural

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newStartGameSessionPlacementResponse</a> smart
--   constructor.
data StartGameSessionPlacementResponse
StartGameSessionPlacementResponse' :: Maybe GameSessionPlacement -> Int -> StartGameSessionPlacementResponse

-- | Object that describes the newly created game session placement. This
--   object includes all the information provided in the request, as well
--   as start/end time stamps and placement status.
[$sel:gameSessionPlacement:StartGameSessionPlacementResponse'] :: StartGameSessionPlacementResponse -> Maybe GameSessionPlacement

-- | The response's http status code.
[$sel:httpStatus:StartGameSessionPlacementResponse'] :: StartGameSessionPlacementResponse -> Int

-- | Create a value of <a>StartGameSessionPlacementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionPlacement:StartGameSessionPlacementResponse'</a>,
--   <a>startGameSessionPlacementResponse_gameSessionPlacement</a> - Object
--   that describes the newly created game session placement. This object
--   includes all the information provided in the request, as well as
--   start/end time stamps and placement status.
--   
--   <a>$sel:httpStatus:StartGameSessionPlacementResponse'</a>,
--   <a>startGameSessionPlacementResponse_httpStatus</a> - The response's
--   http status code.
newStartGameSessionPlacementResponse :: Int -> StartGameSessionPlacementResponse

-- | Object that describes the newly created game session placement. This
--   object includes all the information provided in the request, as well
--   as start/end time stamps and placement status.
startGameSessionPlacementResponse_gameSessionPlacement :: Lens' StartGameSessionPlacementResponse (Maybe GameSessionPlacement)

-- | The response's http status code.
startGameSessionPlacementResponse_httpStatus :: Lens' StartGameSessionPlacementResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacement
instance GHC.Show.Show Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacement
instance GHC.Read.Read Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacement
instance GHC.Classes.Eq Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacement
instance GHC.Generics.Generic Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacementResponse
instance GHC.Show.Show Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacementResponse
instance GHC.Read.Read Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacementResponse
instance GHC.Classes.Eq Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacementResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacement
instance Control.DeepSeq.NFData Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacementResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacement
instance Control.DeepSeq.NFData Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacement
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacement
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacement
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacement
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.StartGameSessionPlacement.StartGameSessionPlacement


-- | Resumes certain types of activity on fleet instances that were
--   suspended with StopFleetActions. For multi-location fleets, fleet
--   actions are managed separately for each location. Currently, this
--   operation is used to restart a fleet's auto-scaling activity.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To restart actions on instances in the fleet's home Region,
--   provide a fleet ID and the type of actions to resume.</li>
--   <li>To restart actions on instances in one of the fleet's remote
--   locations, provide a fleet ID, a location name, and the type of
--   actions to resume.</li>
--   </ul>
--   
--   If successful, GameLift once again initiates scaling events as
--   triggered by the fleet's scaling policies. If actions on the fleet
--   location were never stopped, this operation will have no effect. You
--   can view a fleet's stopped actions using DescribeFleetAttributes or
--   DescribeFleetLocationAttributes.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleet | UpdateFleetCapacity | PutScalingPolicy |
--   DescribeEC2InstanceLimits | DescribeFleetAttributes |
--   DescribeFleetLocationAttributes | UpdateFleetAttributes |
--   StopFleetActions | DeleteFleet | <a>All APIs by task</a>
module Network.AWS.GameLift.StartFleetActions

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStartFleetActions</a> smart constructor.
data StartFleetActions
StartFleetActions' :: Maybe Text -> Text -> NonEmpty FleetAction -> StartFleetActions

-- | The fleet location to restart fleet actions for. Specify a location in
--   the form of an AWS Region code, such as <tt>us-west-2</tt>.
[$sel:location:StartFleetActions'] :: StartFleetActions -> Maybe Text

-- | A unique identifier for the fleet to restart actions on. You can use
--   either the fleet ID or ARN value.
[$sel:fleetId:StartFleetActions'] :: StartFleetActions -> Text

-- | List of actions to restart on the fleet.
[$sel:actions:StartFleetActions'] :: StartFleetActions -> NonEmpty FleetAction

-- | Create a value of <a>StartFleetActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:StartFleetActions'</a>,
--   <a>startFleetActions_location</a> - The fleet location to restart
--   fleet actions for. Specify a location in the form of an AWS Region
--   code, such as <tt>us-west-2</tt>.
--   
--   <a>$sel:fleetId:StartFleetActions'</a>,
--   <a>startFleetActions_fleetId</a> - A unique identifier for the fleet
--   to restart actions on. You can use either the fleet ID or ARN value.
--   
--   <a>$sel:actions:StartFleetActions'</a>,
--   <a>startFleetActions_actions</a> - List of actions to restart on the
--   fleet.
newStartFleetActions :: Text -> NonEmpty FleetAction -> StartFleetActions

-- | The fleet location to restart fleet actions for. Specify a location in
--   the form of an AWS Region code, such as <tt>us-west-2</tt>.
startFleetActions_location :: Lens' StartFleetActions (Maybe Text)

-- | A unique identifier for the fleet to restart actions on. You can use
--   either the fleet ID or ARN value.
startFleetActions_fleetId :: Lens' StartFleetActions Text

-- | List of actions to restart on the fleet.
startFleetActions_actions :: Lens' StartFleetActions (NonEmpty FleetAction)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newStartFleetActionsResponse</a> smart constructor.
data StartFleetActionsResponse
StartFleetActionsResponse' :: Maybe Text -> Maybe Text -> Int -> StartFleetActionsResponse

-- | A unique identifier for the fleet to restart actions on.
[$sel:fleetId:StartFleetActionsResponse'] :: StartFleetActionsResponse -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:StartFleetActionsResponse'] :: StartFleetActionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartFleetActionsResponse'] :: StartFleetActionsResponse -> Int

-- | Create a value of <a>StartFleetActionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:StartFleetActions'</a>,
--   <a>startFleetActionsResponse_fleetId</a> - A unique identifier for the
--   fleet to restart actions on.
--   
--   <a>$sel:fleetArn:StartFleetActionsResponse'</a>,
--   <a>startFleetActionsResponse_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:httpStatus:StartFleetActionsResponse'</a>,
--   <a>startFleetActionsResponse_httpStatus</a> - The response's http
--   status code.
newStartFleetActionsResponse :: Int -> StartFleetActionsResponse

-- | A unique identifier for the fleet to restart actions on.
startFleetActionsResponse_fleetId :: Lens' StartFleetActionsResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
startFleetActionsResponse_fleetArn :: Lens' StartFleetActionsResponse (Maybe Text)

-- | The response's http status code.
startFleetActionsResponse_httpStatus :: Lens' StartFleetActionsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.StartFleetActions.StartFleetActions
instance GHC.Show.Show Network.AWS.GameLift.StartFleetActions.StartFleetActions
instance GHC.Read.Read Network.AWS.GameLift.StartFleetActions.StartFleetActions
instance GHC.Classes.Eq Network.AWS.GameLift.StartFleetActions.StartFleetActions
instance GHC.Generics.Generic Network.AWS.GameLift.StartFleetActions.StartFleetActionsResponse
instance GHC.Show.Show Network.AWS.GameLift.StartFleetActions.StartFleetActionsResponse
instance GHC.Read.Read Network.AWS.GameLift.StartFleetActions.StartFleetActionsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.StartFleetActions.StartFleetActionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.StartFleetActions.StartFleetActions
instance Control.DeepSeq.NFData Network.AWS.GameLift.StartFleetActions.StartFleetActionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.StartFleetActions.StartFleetActions
instance Control.DeepSeq.NFData Network.AWS.GameLift.StartFleetActions.StartFleetActions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.StartFleetActions.StartFleetActions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.StartFleetActions.StartFleetActions
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.StartFleetActions.StartFleetActions
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.StartFleetActions.StartFleetActions


-- | Retrieves all active game sessions that match a set of search criteria
--   and sorts them into a specified order.
--   
--   When searching for game sessions, you specify exactly where you want
--   to search and provide a search filter expression, a sort expression,
--   or both. A search request can search only one fleet, but it can search
--   all of a fleet's locations.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To search all game sessions that are currently running on all
--   locations in a fleet, provide a fleet or alias ID. This approach
--   returns game sessions in the fleet's home Region and all remote
--   locations that fit the search criteria.</li>
--   <li>To search all game sessions that are currently running on a
--   specific fleet location, provide a fleet or alias ID and a location
--   name. For location, you can specify a fleet's home Region or any
--   remote location.</li>
--   </ul>
--   
--   Use the pagination parameters to retrieve results as a set of
--   sequential pages.
--   
--   If successful, a <tt>GameSession</tt> object is returned for each game
--   session that matches the request. Search finds game sessions that are
--   in <tt>ACTIVE</tt> status only. To retrieve information on game
--   sessions in other statuses, use DescribeGameSessions.
--   
--   You can search or sort by the following game session attributes:
--   
--   <ul>
--   <li><b>gameSessionId</b> -- A unique identifier for the game session.
--   You can use either a <tt>GameSessionId</tt> or <tt>GameSessionArn</tt>
--   value.</li>
--   <li><b>gameSessionName</b> -- Name assigned to a game session. This
--   value is set when requesting a new game session with CreateGameSession
--   or updating with UpdateGameSession. Game session names do not need to
--   be unique to a game session.</li>
--   <li><b>gameSessionProperties</b> -- Custom data defined in a game
--   session's <tt>GameProperty</tt> parameter. <tt>GameProperty</tt>
--   values are stored as key:value pairs; the filter expression must
--   indicate the key and a string to search the data values for. For
--   example, to search for game sessions with custom data containing the
--   key:value pair "gameMode:brawl", specify the following:
--   <tt>gameSessionProperties.gameMode = "brawl"</tt>. All custom data
--   values are searched as strings.</li>
--   <li><b>maximumSessions</b> -- Maximum number of player sessions
--   allowed for a game session. This value is set when requesting a new
--   game session with CreateGameSession or updating with
--   UpdateGameSession.</li>
--   <li><b>creationTimeMillis</b> -- Value indicating when a game session
--   was created. It is expressed in Unix time as milliseconds.</li>
--   <li><b>playerSessionCount</b> -- Number of players currently connected
--   to a game session. This value changes rapidly as players join the
--   session or drop out.</li>
--   <li><b>hasAvailablePlayerSessions</b> -- Boolean value indicating
--   whether a game session has reached its maximum number of players. It
--   is highly recommended that all search requests include this filter
--   attribute to optimize search performance and return only sessions that
--   players can join.</li>
--   </ul>
--   
--   Returned values for <tt>playerSessionCount</tt> and
--   <tt>hasAvailablePlayerSessions</tt> change quickly as players join
--   sessions and others drop out. Results should be considered a snapshot
--   in time. Be sure to refresh search results often, and handle sessions
--   that fill up before a player can join.
--   
--   <b>Related actions</b>
--   
--   CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails
--   | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.SearchGameSessions

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newSearchGameSessions</a> smart constructor.
data SearchGameSessions
SearchGameSessions' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> SearchGameSessions

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:SearchGameSessions'] :: SearchGameSessions -> Maybe Text

-- | A unique identifier for the fleet to search for active game sessions.
--   You can use either the fleet ID or ARN value. Each request must
--   reference either a fleet ID or alias ID, but not both.
[$sel:fleetId:SearchGameSessions'] :: SearchGameSessions -> Maybe Text

-- | Instructions on how to sort the search results. If no sort expression
--   is included, the request returns results in random order. A sort
--   expression consists of the following elements:
--   
--   <ul>
--   <li><b>Operand</b> -- Name of a game session attribute. Valid values
--   are <tt>gameSessionName</tt>, <tt>gameSessionId</tt>,
--   <tt>gameSessionProperties</tt>, <tt>maximumSessions</tt>,
--   <tt>creationTimeMillis</tt>, <tt>playerSessionCount</tt>,
--   <tt>hasAvailablePlayerSessions</tt>.</li>
--   <li><b>Order</b> -- Valid sort orders are <tt>ASC</tt> (ascending) and
--   <tt>DESC</tt> (descending).</li>
--   </ul>
--   
--   For example, this sort expression returns the oldest active sessions
--   first: <tt>"SortExpression": "creationTimeMillis ASC"</tt>. Results
--   with a null value for the sort operand are returned at the end of the
--   list.
[$sel:sortExpression:SearchGameSessions'] :: SearchGameSessions -> Maybe Text

-- | String containing the search criteria for the session search. If no
--   filter expression is included, the request returns results for all
--   game sessions in the fleet that are in <tt>ACTIVE</tt> status.
--   
--   A filter expression can contain one or multiple conditions. Each
--   condition consists of the following:
--   
--   <ul>
--   <li><b>Operand</b> -- Name of a game session attribute. Valid values
--   are <tt>gameSessionName</tt>, <tt>gameSessionId</tt>,
--   <tt>gameSessionProperties</tt>, <tt>maximumSessions</tt>,
--   <tt>creationTimeMillis</tt>, <tt>playerSessionCount</tt>,
--   <tt>hasAvailablePlayerSessions</tt>.</li>
--   <li><b>Comparator</b> -- Valid comparators are: <tt>=</tt>,
--   <tt>&lt;&gt;</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>, <tt>&lt;=</tt>,
--   <tt>&gt;=</tt>.</li>
--   <li><b>Value</b> -- Value to be searched for. Values may be numbers,
--   boolean values (true/false) or strings depending on the operand.
--   String values are case sensitive and must be enclosed in single
--   quotes. Special characters must be escaped. Boolean and string values
--   can only be used with the comparators <tt>=</tt> and
--   <tt>&lt;&gt;</tt>. For example, the following filter expression
--   searches on <tt>gameSessionName</tt>: "<tt>FilterExpression":
--   "gameSessionName = 'Matt\\'s Awesome Game 1'"</tt>.</li>
--   </ul>
--   
--   To chain multiple conditions in a single expression, use the logical
--   keywords <tt>AND</tt>, <tt>OR</tt>, and <tt>NOT</tt> and parentheses
--   as needed. For example: <tt>x AND y AND NOT z</tt>, <tt>NOT (x OR
--   y)</tt>.
--   
--   Session search evaluates conditions from left to right using the
--   following precedence rules:
--   
--   <ol>
--   <li><tt>=</tt>, <tt>&lt;&gt;</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>,
--   <tt>&lt;=</tt>, <tt>&gt;=</tt></li>
--   <li>Parentheses</li>
--   <li>NOT</li>
--   <li>AND</li>
--   <li>OR</li>
--   </ol>
--   
--   For example, this filter expression retrieves game sessions hosting at
--   least ten players that have an open player slot:
--   <tt>"maximumSessions&gt;=10 AND hasAvailablePlayerSessions=true"</tt>.
[$sel:filterExpression:SearchGameSessions'] :: SearchGameSessions -> Maybe Text

-- | A unique identifier for the alias associated with the fleet to search
--   for active game sessions. You can use either the alias ID or ARN
--   value. Each request must reference either a fleet ID or alias ID, but
--   not both.
[$sel:aliasId:SearchGameSessions'] :: SearchGameSessions -> Maybe Text

-- | A fleet location to search for game sessions. You can specify a
--   fleet's home Region or a remote location. Use the AWS Region code
--   format, such as <tt>us-west-2</tt>.
[$sel:location:SearchGameSessions'] :: SearchGameSessions -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. The
--   maximum number of results returned is 20, even if this value is not
--   set or is set higher than 20.
[$sel:limit:SearchGameSessions'] :: SearchGameSessions -> Maybe Natural

-- | Create a value of <a>SearchGameSessions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchGameSessions'</a>,
--   <a>searchGameSessions_nextToken</a> - A token that indicates the start
--   of the next sequential page of results. Use the token that is returned
--   with a previous call to this operation. To start at the beginning of
--   the result set, do not specify a value.
--   
--   <a>$sel:fleetId:SearchGameSessions'</a>,
--   <a>searchGameSessions_fleetId</a> - A unique identifier for the fleet
--   to search for active game sessions. You can use either the fleet ID or
--   ARN value. Each request must reference either a fleet ID or alias ID,
--   but not both.
--   
--   <a>$sel:sortExpression:SearchGameSessions'</a>,
--   <a>searchGameSessions_sortExpression</a> - Instructions on how to sort
--   the search results. If no sort expression is included, the request
--   returns results in random order. A sort expression consists of the
--   following elements:
--   
--   <ul>
--   <li><b>Operand</b> -- Name of a game session attribute. Valid values
--   are <tt>gameSessionName</tt>, <tt>gameSessionId</tt>,
--   <tt>gameSessionProperties</tt>, <tt>maximumSessions</tt>,
--   <tt>creationTimeMillis</tt>, <tt>playerSessionCount</tt>,
--   <tt>hasAvailablePlayerSessions</tt>.</li>
--   <li><b>Order</b> -- Valid sort orders are <tt>ASC</tt> (ascending) and
--   <tt>DESC</tt> (descending).</li>
--   </ul>
--   
--   For example, this sort expression returns the oldest active sessions
--   first: <tt>"SortExpression": "creationTimeMillis ASC"</tt>. Results
--   with a null value for the sort operand are returned at the end of the
--   list.
--   
--   <a>$sel:filterExpression:SearchGameSessions'</a>,
--   <a>searchGameSessions_filterExpression</a> - String containing the
--   search criteria for the session search. If no filter expression is
--   included, the request returns results for all game sessions in the
--   fleet that are in <tt>ACTIVE</tt> status.
--   
--   A filter expression can contain one or multiple conditions. Each
--   condition consists of the following:
--   
--   <ul>
--   <li><b>Operand</b> -- Name of a game session attribute. Valid values
--   are <tt>gameSessionName</tt>, <tt>gameSessionId</tt>,
--   <tt>gameSessionProperties</tt>, <tt>maximumSessions</tt>,
--   <tt>creationTimeMillis</tt>, <tt>playerSessionCount</tt>,
--   <tt>hasAvailablePlayerSessions</tt>.</li>
--   <li><b>Comparator</b> -- Valid comparators are: <tt>=</tt>,
--   <tt>&lt;&gt;</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>, <tt>&lt;=</tt>,
--   <tt>&gt;=</tt>.</li>
--   <li><b>Value</b> -- Value to be searched for. Values may be numbers,
--   boolean values (true/false) or strings depending on the operand.
--   String values are case sensitive and must be enclosed in single
--   quotes. Special characters must be escaped. Boolean and string values
--   can only be used with the comparators <tt>=</tt> and
--   <tt>&lt;&gt;</tt>. For example, the following filter expression
--   searches on <tt>gameSessionName</tt>: "<tt>FilterExpression":
--   "gameSessionName = 'Matt\\'s Awesome Game 1'"</tt>.</li>
--   </ul>
--   
--   To chain multiple conditions in a single expression, use the logical
--   keywords <tt>AND</tt>, <tt>OR</tt>, and <tt>NOT</tt> and parentheses
--   as needed. For example: <tt>x AND y AND NOT z</tt>, <tt>NOT (x OR
--   y)</tt>.
--   
--   Session search evaluates conditions from left to right using the
--   following precedence rules:
--   
--   <ol>
--   <li><tt>=</tt>, <tt>&lt;&gt;</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>,
--   <tt>&lt;=</tt>, <tt>&gt;=</tt></li>
--   <li>Parentheses</li>
--   <li>NOT</li>
--   <li>AND</li>
--   <li>OR</li>
--   </ol>
--   
--   For example, this filter expression retrieves game sessions hosting at
--   least ten players that have an open player slot:
--   <tt>"maximumSessions&gt;=10 AND hasAvailablePlayerSessions=true"</tt>.
--   
--   <a>$sel:aliasId:SearchGameSessions'</a>,
--   <a>searchGameSessions_aliasId</a> - A unique identifier for the alias
--   associated with the fleet to search for active game sessions. You can
--   use either the alias ID or ARN value. Each request must reference
--   either a fleet ID or alias ID, but not both.
--   
--   <a>$sel:location:SearchGameSessions'</a>,
--   <a>searchGameSessions_location</a> - A fleet location to search for
--   game sessions. You can specify a fleet's home Region or a remote
--   location. Use the AWS Region code format, such as <tt>us-west-2</tt>.
--   
--   <a>$sel:limit:SearchGameSessions'</a>, <a>searchGameSessions_limit</a>
--   - The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. The
--   maximum number of results returned is 20, even if this value is not
--   set or is set higher than 20.
newSearchGameSessions :: SearchGameSessions

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
searchGameSessions_nextToken :: Lens' SearchGameSessions (Maybe Text)

-- | A unique identifier for the fleet to search for active game sessions.
--   You can use either the fleet ID or ARN value. Each request must
--   reference either a fleet ID or alias ID, but not both.
searchGameSessions_fleetId :: Lens' SearchGameSessions (Maybe Text)

-- | Instructions on how to sort the search results. If no sort expression
--   is included, the request returns results in random order. A sort
--   expression consists of the following elements:
--   
--   <ul>
--   <li><b>Operand</b> -- Name of a game session attribute. Valid values
--   are <tt>gameSessionName</tt>, <tt>gameSessionId</tt>,
--   <tt>gameSessionProperties</tt>, <tt>maximumSessions</tt>,
--   <tt>creationTimeMillis</tt>, <tt>playerSessionCount</tt>,
--   <tt>hasAvailablePlayerSessions</tt>.</li>
--   <li><b>Order</b> -- Valid sort orders are <tt>ASC</tt> (ascending) and
--   <tt>DESC</tt> (descending).</li>
--   </ul>
--   
--   For example, this sort expression returns the oldest active sessions
--   first: <tt>"SortExpression": "creationTimeMillis ASC"</tt>. Results
--   with a null value for the sort operand are returned at the end of the
--   list.
searchGameSessions_sortExpression :: Lens' SearchGameSessions (Maybe Text)

-- | String containing the search criteria for the session search. If no
--   filter expression is included, the request returns results for all
--   game sessions in the fleet that are in <tt>ACTIVE</tt> status.
--   
--   A filter expression can contain one or multiple conditions. Each
--   condition consists of the following:
--   
--   <ul>
--   <li><b>Operand</b> -- Name of a game session attribute. Valid values
--   are <tt>gameSessionName</tt>, <tt>gameSessionId</tt>,
--   <tt>gameSessionProperties</tt>, <tt>maximumSessions</tt>,
--   <tt>creationTimeMillis</tt>, <tt>playerSessionCount</tt>,
--   <tt>hasAvailablePlayerSessions</tt>.</li>
--   <li><b>Comparator</b> -- Valid comparators are: <tt>=</tt>,
--   <tt>&lt;&gt;</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>, <tt>&lt;=</tt>,
--   <tt>&gt;=</tt>.</li>
--   <li><b>Value</b> -- Value to be searched for. Values may be numbers,
--   boolean values (true/false) or strings depending on the operand.
--   String values are case sensitive and must be enclosed in single
--   quotes. Special characters must be escaped. Boolean and string values
--   can only be used with the comparators <tt>=</tt> and
--   <tt>&lt;&gt;</tt>. For example, the following filter expression
--   searches on <tt>gameSessionName</tt>: "<tt>FilterExpression":
--   "gameSessionName = 'Matt\\'s Awesome Game 1'"</tt>.</li>
--   </ul>
--   
--   To chain multiple conditions in a single expression, use the logical
--   keywords <tt>AND</tt>, <tt>OR</tt>, and <tt>NOT</tt> and parentheses
--   as needed. For example: <tt>x AND y AND NOT z</tt>, <tt>NOT (x OR
--   y)</tt>.
--   
--   Session search evaluates conditions from left to right using the
--   following precedence rules:
--   
--   <ol>
--   <li><tt>=</tt>, <tt>&lt;&gt;</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>,
--   <tt>&lt;=</tt>, <tt>&gt;=</tt></li>
--   <li>Parentheses</li>
--   <li>NOT</li>
--   <li>AND</li>
--   <li>OR</li>
--   </ol>
--   
--   For example, this filter expression retrieves game sessions hosting at
--   least ten players that have an open player slot:
--   <tt>"maximumSessions&gt;=10 AND hasAvailablePlayerSessions=true"</tt>.
searchGameSessions_filterExpression :: Lens' SearchGameSessions (Maybe Text)

-- | A unique identifier for the alias associated with the fleet to search
--   for active game sessions. You can use either the alias ID or ARN
--   value. Each request must reference either a fleet ID or alias ID, but
--   not both.
searchGameSessions_aliasId :: Lens' SearchGameSessions (Maybe Text)

-- | A fleet location to search for game sessions. You can specify a
--   fleet's home Region or a remote location. Use the AWS Region code
--   format, such as <tt>us-west-2</tt>.
searchGameSessions_location :: Lens' SearchGameSessions (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. The
--   maximum number of results returned is 20, even if this value is not
--   set or is set higher than 20.
searchGameSessions_limit :: Lens' SearchGameSessions (Maybe Natural)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newSearchGameSessionsResponse</a> smart constructor.
data SearchGameSessionsResponse
SearchGameSessionsResponse' :: Maybe Text -> Maybe [GameSession] -> Int -> SearchGameSessionsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:SearchGameSessionsResponse'] :: SearchGameSessionsResponse -> Maybe Text

-- | A collection of objects containing game session properties for each
--   session that matches the request.
[$sel:gameSessions:SearchGameSessionsResponse'] :: SearchGameSessionsResponse -> Maybe [GameSession]

-- | The response's http status code.
[$sel:httpStatus:SearchGameSessionsResponse'] :: SearchGameSessionsResponse -> Int

-- | Create a value of <a>SearchGameSessionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchGameSessions'</a>,
--   <a>searchGameSessionsResponse_nextToken</a> - A token that indicates
--   where to resume retrieving results on the next call to this operation.
--   If no token is returned, these results represent the end of the list.
--   
--   <a>$sel:gameSessions:SearchGameSessionsResponse'</a>,
--   <a>searchGameSessionsResponse_gameSessions</a> - A collection of
--   objects containing game session properties for each session that
--   matches the request.
--   
--   <a>$sel:httpStatus:SearchGameSessionsResponse'</a>,
--   <a>searchGameSessionsResponse_httpStatus</a> - The response's http
--   status code.
newSearchGameSessionsResponse :: Int -> SearchGameSessionsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
searchGameSessionsResponse_nextToken :: Lens' SearchGameSessionsResponse (Maybe Text)

-- | A collection of objects containing game session properties for each
--   session that matches the request.
searchGameSessionsResponse_gameSessions :: Lens' SearchGameSessionsResponse (Maybe [GameSession])

-- | The response's http status code.
searchGameSessionsResponse_httpStatus :: Lens' SearchGameSessionsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.SearchGameSessions.SearchGameSessions
instance GHC.Show.Show Network.AWS.GameLift.SearchGameSessions.SearchGameSessions
instance GHC.Read.Read Network.AWS.GameLift.SearchGameSessions.SearchGameSessions
instance GHC.Classes.Eq Network.AWS.GameLift.SearchGameSessions.SearchGameSessions
instance GHC.Generics.Generic Network.AWS.GameLift.SearchGameSessions.SearchGameSessionsResponse
instance GHC.Show.Show Network.AWS.GameLift.SearchGameSessions.SearchGameSessionsResponse
instance GHC.Read.Read Network.AWS.GameLift.SearchGameSessions.SearchGameSessionsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.SearchGameSessions.SearchGameSessionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.SearchGameSessions.SearchGameSessions
instance Control.DeepSeq.NFData Network.AWS.GameLift.SearchGameSessions.SearchGameSessionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.SearchGameSessions.SearchGameSessions
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.SearchGameSessions.SearchGameSessions
instance Control.DeepSeq.NFData Network.AWS.GameLift.SearchGameSessions.SearchGameSessions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.SearchGameSessions.SearchGameSessions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.SearchGameSessions.SearchGameSessions
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.SearchGameSessions.SearchGameSessions
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.SearchGameSessions.SearchGameSessions


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Reinstates activity on a game server group after it has been
--   suspended. A game server group might be suspended by
--   theSuspendGameServerGroup operation, or it might be suspended
--   involuntarily due to a configuration problem. In the second case, you
--   can manually resume activity on the group once the configuration
--   problem has been resolved. Refer to the game server group status and
--   status reason for more information on why group activity is suspended.
--   
--   To resume activity, specify a game server group ARN and the type of
--   activity to be resumed. If successful, a GameServerGroup object is
--   returned showing that the resumed activity is no longer listed in
--   <tt>SuspendedActions</tt>.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
module Network.AWS.GameLift.ResumeGameServerGroup

-- | <i>See:</i> <a>newResumeGameServerGroup</a> smart constructor.
data ResumeGameServerGroup
ResumeGameServerGroup' :: Text -> NonEmpty GameServerGroupAction -> ResumeGameServerGroup

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
[$sel:gameServerGroupName:ResumeGameServerGroup'] :: ResumeGameServerGroup -> Text

-- | The activity to resume for this game server group.
[$sel:resumeActions:ResumeGameServerGroup'] :: ResumeGameServerGroup -> NonEmpty GameServerGroupAction

-- | Create a value of <a>ResumeGameServerGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroupName:ResumeGameServerGroup'</a>,
--   <a>resumeGameServerGroup_gameServerGroupName</a> - A unique identifier
--   for the game server group. Use either the GameServerGroup name or ARN
--   value.
--   
--   <a>$sel:resumeActions:ResumeGameServerGroup'</a>,
--   <a>resumeGameServerGroup_resumeActions</a> - The activity to resume
--   for this game server group.
newResumeGameServerGroup :: Text -> NonEmpty GameServerGroupAction -> ResumeGameServerGroup

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
resumeGameServerGroup_gameServerGroupName :: Lens' ResumeGameServerGroup Text

-- | The activity to resume for this game server group.
resumeGameServerGroup_resumeActions :: Lens' ResumeGameServerGroup (NonEmpty GameServerGroupAction)

-- | <i>See:</i> <a>newResumeGameServerGroupResponse</a> smart constructor.
data ResumeGameServerGroupResponse
ResumeGameServerGroupResponse' :: Maybe GameServerGroup -> Int -> ResumeGameServerGroupResponse

-- | An object that describes the game server group resource, with the
--   <tt>SuspendedActions</tt> property updated to reflect the resumed
--   activity.
[$sel:gameServerGroup:ResumeGameServerGroupResponse'] :: ResumeGameServerGroupResponse -> Maybe GameServerGroup

-- | The response's http status code.
[$sel:httpStatus:ResumeGameServerGroupResponse'] :: ResumeGameServerGroupResponse -> Int

-- | Create a value of <a>ResumeGameServerGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroup:ResumeGameServerGroupResponse'</a>,
--   <a>resumeGameServerGroupResponse_gameServerGroup</a> - An object that
--   describes the game server group resource, with the
--   <tt>SuspendedActions</tt> property updated to reflect the resumed
--   activity.
--   
--   <a>$sel:httpStatus:ResumeGameServerGroupResponse'</a>,
--   <a>resumeGameServerGroupResponse_httpStatus</a> - The response's http
--   status code.
newResumeGameServerGroupResponse :: Int -> ResumeGameServerGroupResponse

-- | An object that describes the game server group resource, with the
--   <tt>SuspendedActions</tt> property updated to reflect the resumed
--   activity.
resumeGameServerGroupResponse_gameServerGroup :: Lens' ResumeGameServerGroupResponse (Maybe GameServerGroup)

-- | The response's http status code.
resumeGameServerGroupResponse_httpStatus :: Lens' ResumeGameServerGroupResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroup
instance GHC.Show.Show Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroup
instance GHC.Read.Read Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroup
instance GHC.Classes.Eq Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroup
instance GHC.Generics.Generic Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroupResponse
instance GHC.Show.Show Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroupResponse
instance GHC.Read.Read Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroupResponse
instance GHC.Classes.Eq Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.ResumeGameServerGroup.ResumeGameServerGroup


-- | Retrieves the fleet ID that an alias is currently pointing to.
--   
--   <b>Related actions</b>
--   
--   CreateAlias | ListAliases | DescribeAlias | UpdateAlias | DeleteAlias
--   | ResolveAlias | <a>All APIs by task</a>
module Network.AWS.GameLift.ResolveAlias

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newResolveAlias</a> smart constructor.
data ResolveAlias
ResolveAlias' :: Text -> ResolveAlias

-- | The unique identifier of the alias that you want to retrieve a fleet
--   ID for. You can use either the alias ID or ARN value.
[$sel:aliasId:ResolveAlias'] :: ResolveAlias -> Text

-- | Create a value of <a>ResolveAlias</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aliasId:ResolveAlias'</a>, <a>resolveAlias_aliasId</a> - The
--   unique identifier of the alias that you want to retrieve a fleet ID
--   for. You can use either the alias ID or ARN value.
newResolveAlias :: Text -> ResolveAlias

-- | The unique identifier of the alias that you want to retrieve a fleet
--   ID for. You can use either the alias ID or ARN value.
resolveAlias_aliasId :: Lens' ResolveAlias Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newResolveAliasResponse</a> smart constructor.
data ResolveAliasResponse
ResolveAliasResponse' :: Maybe Text -> Maybe Text -> Int -> ResolveAliasResponse

-- | The fleet identifier that the alias is pointing to.
[$sel:fleetId:ResolveAliasResponse'] :: ResolveAliasResponse -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet resource that this alias points to.
[$sel:fleetArn:ResolveAliasResponse'] :: ResolveAliasResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ResolveAliasResponse'] :: ResolveAliasResponse -> Int

-- | Create a value of <a>ResolveAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:ResolveAliasResponse'</a>,
--   <a>resolveAliasResponse_fleetId</a> - The fleet identifier that the
--   alias is pointing to.
--   
--   <a>$sel:fleetArn:ResolveAliasResponse'</a>,
--   <a>resolveAliasResponse_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift fleet resource that this
--   alias points to.
--   
--   <a>$sel:httpStatus:ResolveAliasResponse'</a>,
--   <a>resolveAliasResponse_httpStatus</a> - The response's http status
--   code.
newResolveAliasResponse :: Int -> ResolveAliasResponse

-- | The fleet identifier that the alias is pointing to.
resolveAliasResponse_fleetId :: Lens' ResolveAliasResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet resource that this alias points to.
resolveAliasResponse_fleetArn :: Lens' ResolveAliasResponse (Maybe Text)

-- | The response's http status code.
resolveAliasResponse_httpStatus :: Lens' ResolveAliasResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.ResolveAlias.ResolveAlias
instance GHC.Show.Show Network.AWS.GameLift.ResolveAlias.ResolveAlias
instance GHC.Read.Read Network.AWS.GameLift.ResolveAlias.ResolveAlias
instance GHC.Classes.Eq Network.AWS.GameLift.ResolveAlias.ResolveAlias
instance GHC.Generics.Generic Network.AWS.GameLift.ResolveAlias.ResolveAliasResponse
instance GHC.Show.Show Network.AWS.GameLift.ResolveAlias.ResolveAliasResponse
instance GHC.Read.Read Network.AWS.GameLift.ResolveAlias.ResolveAliasResponse
instance GHC.Classes.Eq Network.AWS.GameLift.ResolveAlias.ResolveAliasResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.ResolveAlias.ResolveAlias
instance Control.DeepSeq.NFData Network.AWS.GameLift.ResolveAlias.ResolveAliasResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.ResolveAlias.ResolveAlias
instance Control.DeepSeq.NFData Network.AWS.GameLift.ResolveAlias.ResolveAlias
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.ResolveAlias.ResolveAlias
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.ResolveAlias.ResolveAlias
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.ResolveAlias.ResolveAlias
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.ResolveAlias.ResolveAlias


-- | Retrieves a fresh set of credentials for use when uploading a new set
--   of game build files to Amazon GameLift's Amazon S3. This is done as
--   part of the build creation process; see CreateBuild.
--   
--   To request new credentials, specify the build ID as returned with an
--   initial <tt>CreateBuild</tt> request. If successful, a new set of
--   credentials are returned, along with the S3 storage location
--   associated with the build ID.
--   
--   <b>Learn more</b>
--   
--   <a>Create a Build with Files in S3</a>
--   
--   <b>Related actions</b>
--   
--   CreateBuild | ListBuilds | DescribeBuild | UpdateBuild | DeleteBuild |
--   <a>All APIs by task</a>
module Network.AWS.GameLift.RequestUploadCredentials

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newRequestUploadCredentials</a> smart constructor.
data RequestUploadCredentials
RequestUploadCredentials' :: Text -> RequestUploadCredentials

-- | A unique identifier for the build to get credentials for. You can use
--   either the build ID or ARN value.
[$sel:buildId:RequestUploadCredentials'] :: RequestUploadCredentials -> Text

-- | Create a value of <a>RequestUploadCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildId:RequestUploadCredentials'</a>,
--   <a>requestUploadCredentials_buildId</a> - A unique identifier for the
--   build to get credentials for. You can use either the build ID or ARN
--   value.
newRequestUploadCredentials :: Text -> RequestUploadCredentials

-- | A unique identifier for the build to get credentials for. You can use
--   either the build ID or ARN value.
requestUploadCredentials_buildId :: Lens' RequestUploadCredentials Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newRequestUploadCredentialsResponse</a> smart
--   constructor.
data RequestUploadCredentialsResponse
RequestUploadCredentialsResponse' :: Maybe S3Location -> Maybe (Sensitive AwsCredentials) -> Int -> RequestUploadCredentialsResponse

-- | Amazon S3 path and key, identifying where the game build files are
--   stored.
[$sel:storageLocation:RequestUploadCredentialsResponse'] :: RequestUploadCredentialsResponse -> Maybe S3Location

-- | AWS credentials required when uploading a game build to the storage
--   location. These credentials have a limited lifespan and are valid only
--   for the build they were issued for.
[$sel:uploadCredentials:RequestUploadCredentialsResponse'] :: RequestUploadCredentialsResponse -> Maybe (Sensitive AwsCredentials)

-- | The response's http status code.
[$sel:httpStatus:RequestUploadCredentialsResponse'] :: RequestUploadCredentialsResponse -> Int

-- | Create a value of <a>RequestUploadCredentialsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storageLocation:RequestUploadCredentialsResponse'</a>,
--   <a>requestUploadCredentialsResponse_storageLocation</a> - Amazon S3
--   path and key, identifying where the game build files are stored.
--   
--   <a>$sel:uploadCredentials:RequestUploadCredentialsResponse'</a>,
--   <a>requestUploadCredentialsResponse_uploadCredentials</a> - AWS
--   credentials required when uploading a game build to the storage
--   location. These credentials have a limited lifespan and are valid only
--   for the build they were issued for.
--   
--   <a>$sel:httpStatus:RequestUploadCredentialsResponse'</a>,
--   <a>requestUploadCredentialsResponse_httpStatus</a> - The response's
--   http status code.
newRequestUploadCredentialsResponse :: Int -> RequestUploadCredentialsResponse

-- | Amazon S3 path and key, identifying where the game build files are
--   stored.
requestUploadCredentialsResponse_storageLocation :: Lens' RequestUploadCredentialsResponse (Maybe S3Location)

-- | AWS credentials required when uploading a game build to the storage
--   location. These credentials have a limited lifespan and are valid only
--   for the build they were issued for.
requestUploadCredentialsResponse_uploadCredentials :: Lens' RequestUploadCredentialsResponse (Maybe AwsCredentials)

-- | The response's http status code.
requestUploadCredentialsResponse_httpStatus :: Lens' RequestUploadCredentialsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentials
instance GHC.Show.Show Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentials
instance GHC.Read.Read Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentials
instance GHC.Classes.Eq Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentials
instance GHC.Generics.Generic Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentialsResponse
instance GHC.Show.Show Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentialsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentialsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentials
instance Control.DeepSeq.NFData Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentialsResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentials
instance Control.DeepSeq.NFData Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentials
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentials
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentials
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentials
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.RequestUploadCredentials.RequestUploadCredentials


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Creates a new game server resource and notifies GameLift FleetIQ that
--   the game server is ready to host gameplay and players. This operation
--   is called by a game server process that is running on an instance in a
--   game server group. Registering game servers enables GameLift FleetIQ
--   to track available game servers and enables game clients and services
--   to claim a game server for a new game session.
--   
--   To register a game server, identify the game server group and instance
--   where the game server is running, and provide a unique identifier for
--   the game server. You can also include connection and game server data.
--   When a game client or service requests a game server by calling
--   ClaimGameServer, this information is returned in the response.
--   
--   Once a game server is successfully registered, it is put in status
--   <tt>AVAILABLE</tt>. A request to register a game server may fail if
--   the instance it is running on is in the process of shutting down as
--   part of instance balancing or scale-down activity.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   RegisterGameServer | ListGameServers | ClaimGameServer |
--   DescribeGameServer | UpdateGameServer | DeregisterGameServer | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.RegisterGameServer

-- | <i>See:</i> <a>newRegisterGameServer</a> smart constructor.
data RegisterGameServer
RegisterGameServer' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> RegisterGameServer

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
[$sel:gameServerData:RegisterGameServer'] :: RegisterGameServer -> Maybe Text

-- | Information that is needed to make inbound client connections to the
--   game server. This might include the IP address and port, DNS name, and
--   other information.
[$sel:connectionInfo:RegisterGameServer'] :: RegisterGameServer -> Maybe Text

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
[$sel:gameServerGroupName:RegisterGameServer'] :: RegisterGameServer -> Text

-- | A custom string that uniquely identifies the game server to register.
--   Game server IDs are developer-defined and must be unique across all
--   game server groups in your AWS account.
[$sel:gameServerId:RegisterGameServer'] :: RegisterGameServer -> Text

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
[$sel:instanceId:RegisterGameServer'] :: RegisterGameServer -> Text

-- | Create a value of <a>RegisterGameServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerData:RegisterGameServer'</a>,
--   <a>registerGameServer_gameServerData</a> - A set of custom game server
--   properties, formatted as a single string value. This data is passed to
--   a game client or service when it requests information on game servers
--   using ListGameServers or ClaimGameServer.
--   
--   <a>$sel:connectionInfo:RegisterGameServer'</a>,
--   <a>registerGameServer_connectionInfo</a> - Information that is needed
--   to make inbound client connections to the game server. This might
--   include the IP address and port, DNS name, and other information.
--   
--   <a>$sel:gameServerGroupName:RegisterGameServer'</a>,
--   <a>registerGameServer_gameServerGroupName</a> - A unique identifier
--   for the game server group where the game server is running. Use either
--   the GameServerGroup name or ARN value.
--   
--   <a>$sel:gameServerId:RegisterGameServer'</a>,
--   <a>registerGameServer_gameServerId</a> - A custom string that uniquely
--   identifies the game server to register. Game server IDs are
--   developer-defined and must be unique across all game server groups in
--   your AWS account.
--   
--   <a>$sel:instanceId:RegisterGameServer'</a>,
--   <a>registerGameServer_instanceId</a> - The unique identifier for the
--   instance where the game server is running. This ID is available in the
--   instance metadata. EC2 instance IDs use a 17-character format, for
--   example: <tt>i-1234567890abcdef0</tt>.
newRegisterGameServer :: Text -> Text -> Text -> RegisterGameServer

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
registerGameServer_gameServerData :: Lens' RegisterGameServer (Maybe Text)

-- | Information that is needed to make inbound client connections to the
--   game server. This might include the IP address and port, DNS name, and
--   other information.
registerGameServer_connectionInfo :: Lens' RegisterGameServer (Maybe Text)

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
registerGameServer_gameServerGroupName :: Lens' RegisterGameServer Text

-- | A custom string that uniquely identifies the game server to register.
--   Game server IDs are developer-defined and must be unique across all
--   game server groups in your AWS account.
registerGameServer_gameServerId :: Lens' RegisterGameServer Text

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
registerGameServer_instanceId :: Lens' RegisterGameServer Text

-- | <i>See:</i> <a>newRegisterGameServerResponse</a> smart constructor.
data RegisterGameServerResponse
RegisterGameServerResponse' :: Maybe GameServer -> Int -> RegisterGameServerResponse

-- | Object that describes the newly registered game server.
[$sel:gameServer:RegisterGameServerResponse'] :: RegisterGameServerResponse -> Maybe GameServer

-- | The response's http status code.
[$sel:httpStatus:RegisterGameServerResponse'] :: RegisterGameServerResponse -> Int

-- | Create a value of <a>RegisterGameServerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServer:RegisterGameServerResponse'</a>,
--   <a>registerGameServerResponse_gameServer</a> - Object that describes
--   the newly registered game server.
--   
--   <a>$sel:httpStatus:RegisterGameServerResponse'</a>,
--   <a>registerGameServerResponse_httpStatus</a> - The response's http
--   status code.
newRegisterGameServerResponse :: Int -> RegisterGameServerResponse

-- | Object that describes the newly registered game server.
registerGameServerResponse_gameServer :: Lens' RegisterGameServerResponse (Maybe GameServer)

-- | The response's http status code.
registerGameServerResponse_httpStatus :: Lens' RegisterGameServerResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.RegisterGameServer.RegisterGameServer
instance GHC.Show.Show Network.AWS.GameLift.RegisterGameServer.RegisterGameServer
instance GHC.Read.Read Network.AWS.GameLift.RegisterGameServer.RegisterGameServer
instance GHC.Classes.Eq Network.AWS.GameLift.RegisterGameServer.RegisterGameServer
instance GHC.Generics.Generic Network.AWS.GameLift.RegisterGameServer.RegisterGameServerResponse
instance GHC.Show.Show Network.AWS.GameLift.RegisterGameServer.RegisterGameServerResponse
instance GHC.Read.Read Network.AWS.GameLift.RegisterGameServer.RegisterGameServerResponse
instance GHC.Classes.Eq Network.AWS.GameLift.RegisterGameServer.RegisterGameServerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.RegisterGameServer.RegisterGameServer
instance Control.DeepSeq.NFData Network.AWS.GameLift.RegisterGameServer.RegisterGameServerResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.RegisterGameServer.RegisterGameServer
instance Control.DeepSeq.NFData Network.AWS.GameLift.RegisterGameServer.RegisterGameServer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.RegisterGameServer.RegisterGameServer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.RegisterGameServer.RegisterGameServer
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.RegisterGameServer.RegisterGameServer
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.RegisterGameServer.RegisterGameServer


-- | Creates or updates a scaling policy for a fleet. Scaling policies are
--   used to automatically scale a fleet's hosting capacity to meet player
--   demand. An active scaling policy instructs Amazon GameLift to track a
--   fleet metric and automatically change the fleet's capacity when a
--   certain threshold is reached. There are two types of scaling policies:
--   target-based and rule-based. Use a target-based policy to quickly and
--   efficiently manage fleet scaling; this option is the most commonly
--   used. Use rule-based policies when you need to exert fine-grained
--   control over auto-scaling.
--   
--   Fleets can have multiple scaling policies of each type in force at the
--   same time; you can have one target-based policy, one or multiple
--   rule-based scaling policies, or both. We recommend caution, however,
--   because multiple auto-scaling policies can have unintended
--   consequences.
--   
--   You can temporarily suspend all scaling policies for a fleet by
--   calling StopFleetActions with the fleet action AUTO_SCALING. To resume
--   scaling policies, call StartFleetActions with the same fleet action.
--   To stop just one scaling policy--or to permanently remove it, you must
--   delete the policy with DeleteScalingPolicy.
--   
--   Learn more about how to work with auto-scaling in <a>Set Up Fleet
--   Automatic Scaling</a>.
--   
--   <b>Target-based policy</b>
--   
--   A target-based policy tracks a single metric:
--   PercentAvailableGameSessions. This metric tells us how much of a
--   fleet's hosting capacity is ready to host game sessions but is not
--   currently in use. This is the fleet's buffer; it measures the
--   additional player demand that the fleet could handle at current
--   capacity. With a target-based policy, you set your ideal buffer size
--   and leave it to Amazon GameLift to take whatever action is needed to
--   maintain that target.
--   
--   For example, you might choose to maintain a 10% buffer for a fleet
--   that has the capacity to host 100 simultaneous game sessions. This
--   policy tells Amazon GameLift to take action whenever the fleet's
--   available capacity falls below or rises above 10 game sessions. Amazon
--   GameLift will start new instances or stop unused instances in order to
--   return to the 10% buffer.
--   
--   To create or update a target-based policy, specify a fleet ID and
--   name, and set the policy type to "TargetBased". Specify the metric to
--   track (PercentAvailableGameSessions) and reference a
--   TargetConfiguration object with your desired buffer value. Exclude all
--   other parameters. On a successful request, the policy name is
--   returned. The scaling policy is automatically in force as soon as it's
--   successfully created. If the fleet's auto-scaling actions are
--   temporarily suspended, the new policy will be in force once the fleet
--   actions are restarted.
--   
--   <b>Rule-based policy</b>
--   
--   A rule-based policy tracks specified fleet metric, sets a threshold
--   value, and specifies the type of action to initiate when triggered.
--   With a rule-based policy, you can select from several available fleet
--   metrics. Each policy specifies whether to scale up or scale down (and
--   by how much), so you need one policy for each type of action.
--   
--   For example, a policy may make the following statement: "If the
--   percentage of idle instances is greater than 20% for more than 15
--   minutes, then reduce the fleet capacity by 10%."
--   
--   A policy's rule statement has the following structure:
--   
--   If <tt>[MetricName]</tt> is <tt>[ComparisonOperator]</tt>
--   <tt>[Threshold]</tt> for <tt>[EvaluationPeriods]</tt> minutes, then
--   <tt>[ScalingAdjustmentType]</tt> to/by <tt>[ScalingAdjustment]</tt>.
--   
--   To implement the example, the rule statement would look like this:
--   
--   If <tt>[PercentIdleInstances]</tt> is <tt>[GreaterThanThreshold]</tt>
--   <tt>[20]</tt> for <tt>[15]</tt> minutes, then
--   <tt>[PercentChangeInCapacity]</tt> to/by <tt>[10]</tt>.
--   
--   To create or update a scaling policy, specify a unique combination of
--   name and fleet ID, and set the policy type to "RuleBased". Specify the
--   parameter values for a policy rule statement. On a successful request,
--   the policy name is returned. Scaling policies are automatically in
--   force as soon as they're successfully created. If the fleet's
--   auto-scaling actions are temporarily suspended, the new policy will be
--   in force once the fleet actions are restarted.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetCapacity | UpdateFleetCapacity |
--   DescribeEC2InstanceLimits | PutScalingPolicy | DescribeScalingPolicies
--   | DeleteScalingPolicy | StopFleetActions | StartFleetActions | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.PutScalingPolicy

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newPutScalingPolicy</a> smart constructor.
data PutScalingPolicy
PutScalingPolicy' :: Maybe Double -> Maybe TargetConfiguration -> Maybe ComparisonOperatorType -> Maybe PolicyType -> Maybe Int -> Maybe Natural -> Maybe ScalingAdjustmentType -> Text -> Text -> MetricName -> PutScalingPolicy

-- | Metric value used to trigger a scaling event.
[$sel:threshold:PutScalingPolicy'] :: PutScalingPolicy -> Maybe Double

-- | An object that contains settings for a target-based scaling policy.
[$sel:targetConfiguration:PutScalingPolicy'] :: PutScalingPolicy -> Maybe TargetConfiguration

-- | Comparison operator to use when measuring the metric against the
--   threshold value.
[$sel:comparisonOperator:PutScalingPolicy'] :: PutScalingPolicy -> Maybe ComparisonOperatorType

-- | The type of scaling policy to create. For a target-based policy, set
--   the parameter <i>MetricName</i> to 'PercentAvailableGameSessions' and
--   specify a <i>TargetConfiguration</i>. For a rule-based policy set the
--   following parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
[$sel:policyType:PutScalingPolicy'] :: PutScalingPolicy -> Maybe PolicyType

-- | Amount of adjustment to make, based on the scaling adjustment type.
[$sel:scalingAdjustment:PutScalingPolicy'] :: PutScalingPolicy -> Maybe Int

-- | Length of time (in minutes) the metric must be at or beyond the
--   threshold before a scaling event is triggered.
[$sel:evaluationPeriods:PutScalingPolicy'] :: PutScalingPolicy -> Maybe Natural

-- | The type of adjustment to make to a fleet's instance count (see
--   FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down; for
--   example, a value of "-10" scales the fleet down by 10%.</li>
--   </ul>
[$sel:scalingAdjustmentType:PutScalingPolicy'] :: PutScalingPolicy -> Maybe ScalingAdjustmentType

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique. A fleet can have only one
--   scaling policy with the same name.
[$sel:name:PutScalingPolicy'] :: PutScalingPolicy -> Text

-- | A unique identifier for the fleet to apply this policy to. You can use
--   either the fleet ID or ARN value. The fleet cannot be in any of the
--   following statuses: ERROR or DELETING.
[$sel:fleetId:PutScalingPolicy'] :: PutScalingPolicy -> Text

-- | Name of the Amazon GameLift-defined metric that is used to trigger a
--   scaling adjustment. For detailed descriptions of fleet metrics, see
--   <a>Monitor Amazon GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
[$sel:metricName:PutScalingPolicy'] :: PutScalingPolicy -> MetricName

-- | Create a value of <a>PutScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:threshold:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_threshold</a> - Metric value used to trigger a
--   scaling event.
--   
--   <a>$sel:targetConfiguration:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_targetConfiguration</a> - An object that contains
--   settings for a target-based scaling policy.
--   
--   <a>$sel:comparisonOperator:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_comparisonOperator</a> - Comparison operator to
--   use when measuring the metric against the threshold value.
--   
--   <a>$sel:policyType:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_policyType</a> - The type of scaling policy to
--   create. For a target-based policy, set the parameter <i>MetricName</i>
--   to 'PercentAvailableGameSessions' and specify a
--   <i>TargetConfiguration</i>. For a rule-based policy set the following
--   parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
--   
--   <a>$sel:scalingAdjustment:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_scalingAdjustment</a> - Amount of adjustment to
--   make, based on the scaling adjustment type.
--   
--   <a>$sel:evaluationPeriods:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_evaluationPeriods</a> - Length of time (in
--   minutes) the metric must be at or beyond the threshold before a
--   scaling event is triggered.
--   
--   <a>$sel:scalingAdjustmentType:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_scalingAdjustmentType</a> - The type of adjustment
--   to make to a fleet's instance count (see FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down; for
--   example, a value of "-10" scales the fleet down by 10%.</li>
--   </ul>
--   
--   <a>$sel:name:PutScalingPolicy'</a>, <a>putScalingPolicy_name</a> - A
--   descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique. A fleet can have only one
--   scaling policy with the same name.
--   
--   <a>$sel:fleetId:PutScalingPolicy'</a>, <a>putScalingPolicy_fleetId</a>
--   - A unique identifier for the fleet to apply this policy to. You can
--   use either the fleet ID or ARN value. The fleet cannot be in any of
--   the following statuses: ERROR or DELETING.
--   
--   <a>$sel:metricName:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_metricName</a> - Name of the Amazon
--   GameLift-defined metric that is used to trigger a scaling adjustment.
--   For detailed descriptions of fleet metrics, see <a>Monitor Amazon
--   GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
newPutScalingPolicy :: Text -> Text -> MetricName -> PutScalingPolicy

-- | Metric value used to trigger a scaling event.
putScalingPolicy_threshold :: Lens' PutScalingPolicy (Maybe Double)

-- | An object that contains settings for a target-based scaling policy.
putScalingPolicy_targetConfiguration :: Lens' PutScalingPolicy (Maybe TargetConfiguration)

-- | Comparison operator to use when measuring the metric against the
--   threshold value.
putScalingPolicy_comparisonOperator :: Lens' PutScalingPolicy (Maybe ComparisonOperatorType)

-- | The type of scaling policy to create. For a target-based policy, set
--   the parameter <i>MetricName</i> to 'PercentAvailableGameSessions' and
--   specify a <i>TargetConfiguration</i>. For a rule-based policy set the
--   following parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
putScalingPolicy_policyType :: Lens' PutScalingPolicy (Maybe PolicyType)

-- | Amount of adjustment to make, based on the scaling adjustment type.
putScalingPolicy_scalingAdjustment :: Lens' PutScalingPolicy (Maybe Int)

-- | Length of time (in minutes) the metric must be at or beyond the
--   threshold before a scaling event is triggered.
putScalingPolicy_evaluationPeriods :: Lens' PutScalingPolicy (Maybe Natural)

-- | The type of adjustment to make to a fleet's instance count (see
--   FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down; for
--   example, a value of "-10" scales the fleet down by 10%.</li>
--   </ul>
putScalingPolicy_scalingAdjustmentType :: Lens' PutScalingPolicy (Maybe ScalingAdjustmentType)

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique. A fleet can have only one
--   scaling policy with the same name.
putScalingPolicy_name :: Lens' PutScalingPolicy Text

-- | A unique identifier for the fleet to apply this policy to. You can use
--   either the fleet ID or ARN value. The fleet cannot be in any of the
--   following statuses: ERROR or DELETING.
putScalingPolicy_fleetId :: Lens' PutScalingPolicy Text

-- | Name of the Amazon GameLift-defined metric that is used to trigger a
--   scaling adjustment. For detailed descriptions of fleet metrics, see
--   <a>Monitor Amazon GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
putScalingPolicy_metricName :: Lens' PutScalingPolicy MetricName

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newPutScalingPolicyResponse</a> smart constructor.
data PutScalingPolicyResponse
PutScalingPolicyResponse' :: Maybe Text -> Int -> PutScalingPolicyResponse

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
[$sel:name:PutScalingPolicyResponse'] :: PutScalingPolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutScalingPolicyResponse'] :: PutScalingPolicyResponse -> Int

-- | Create a value of <a>PutScalingPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:PutScalingPolicy'</a>,
--   <a>putScalingPolicyResponse_name</a> - A descriptive label that is
--   associated with a fleet's scaling policy. Policy names do not need to
--   be unique.
--   
--   <a>$sel:httpStatus:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutScalingPolicyResponse :: Int -> PutScalingPolicyResponse

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
putScalingPolicyResponse_name :: Lens' PutScalingPolicyResponse (Maybe Text)

-- | The response's http status code.
putScalingPolicyResponse_httpStatus :: Lens' PutScalingPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicy
instance GHC.Show.Show Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicy
instance GHC.Read.Read Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicy
instance GHC.Classes.Eq Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicy
instance GHC.Generics.Generic Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicyResponse
instance GHC.Show.Show Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicyResponse
instance GHC.Read.Read Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicyResponse
instance GHC.Classes.Eq Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.PutScalingPolicy.PutScalingPolicy


-- | Retrieves all tags that are assigned to a GameLift resource. Resource
--   tags are used to organize AWS resources for a range of purposes. This
--   operation handles the permissions necessary to manage tags for the
--   following GameLift resource types:
--   
--   <ul>
--   <li>Build</li>
--   <li>Script</li>
--   <li>Fleet</li>
--   <li>Alias</li>
--   <li>GameSessionQueue</li>
--   <li>MatchmakingConfiguration</li>
--   <li>MatchmakingRuleSet</li>
--   </ul>
--   
--   To list tags for a resource, specify the unique ARN value for the
--   resource.
--   
--   <b>Learn more</b>
--   
--   <a>Tagging AWS Resources</a> in the <i>AWS General Reference</i>
--   
--   <a>AWS Tagging Strategies</a>
--   
--   <b>Related actions</b>
--   
--   TagResource | UntagResource | ListTagsForResource | <a>All APIs by
--   task</a>
module Network.AWS.GameLift.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to and uniquely
--   identifies the GameLift resource that you want to retrieve tags for.
--   GameLift resource ARNs are included in the data object for the
--   resource, which can be retrieved by calling a List or Describe
--   operation for the resource type.
[$sel:resourceARN:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to and uniquely identifies the GameLift
--   resource that you want to retrieve tags for. GameLift resource ARNs
--   are included in the data object for the resource, which can be
--   retrieved by calling a List or Describe operation for the resource
--   type.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to and uniquely
--   identifies the GameLift resource that you want to retrieve tags for.
--   GameLift resource ARNs are included in the data object for the
--   resource, which can be retrieved by calling a List or Describe
--   operation for the resource type.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | The collection of tags that have been assigned to the specified
--   resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The collection of tags that
--   have been assigned to the specified resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The collection of tags that have been assigned to the specified
--   resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.GameLift.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.GameLift.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.GameLift.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.GameLift.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.GameLift.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.GameLift.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.GameLift.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.ListTagsForResource.ListTagsForResource


-- | Retrieves script records for all Realtime scripts that are associated
--   with the AWS account in use.
--   
--   <b>Learn more</b>
--   
--   <a>Amazon GameLift Realtime Servers</a>
--   
--   <b>Related actions</b>
--   
--   CreateScript | ListScripts | DescribeScript | UpdateScript |
--   DeleteScript | <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.ListScripts

-- | <i>See:</i> <a>newListScripts</a> smart constructor.
data ListScripts
ListScripts' :: Maybe Text -> Maybe Natural -> ListScripts

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:ListScripts'] :: ListScripts -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:ListScripts'] :: ListScripts -> Maybe Natural

-- | Create a value of <a>ListScripts</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListScripts'</a>, <a>listScripts_nextToken</a> - A
--   token that indicates the start of the next sequential page of results.
--   Use the token that is returned with a previous call to this operation.
--   To start at the beginning of the result set, do not specify a value.
--   
--   <a>$sel:limit:ListScripts'</a>, <a>listScripts_limit</a> - The maximum
--   number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
newListScripts :: ListScripts

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
listScripts_nextToken :: Lens' ListScripts (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
listScripts_limit :: Lens' ListScripts (Maybe Natural)

-- | <i>See:</i> <a>newListScriptsResponse</a> smart constructor.
data ListScriptsResponse
ListScriptsResponse' :: Maybe Text -> Maybe [Script] -> Int -> ListScriptsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:ListScriptsResponse'] :: ListScriptsResponse -> Maybe Text

-- | A set of properties describing the requested script.
[$sel:scripts:ListScriptsResponse'] :: ListScriptsResponse -> Maybe [Script]

-- | The response's http status code.
[$sel:httpStatus:ListScriptsResponse'] :: ListScriptsResponse -> Int

-- | Create a value of <a>ListScriptsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListScripts'</a>,
--   <a>listScriptsResponse_nextToken</a> - A token that indicates where to
--   resume retrieving results on the next call to this operation. If no
--   token is returned, these results represent the end of the list.
--   
--   <a>$sel:scripts:ListScriptsResponse'</a>,
--   <a>listScriptsResponse_scripts</a> - A set of properties describing
--   the requested script.
--   
--   <a>$sel:httpStatus:ListScriptsResponse'</a>,
--   <a>listScriptsResponse_httpStatus</a> - The response's http status
--   code.
newListScriptsResponse :: Int -> ListScriptsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
listScriptsResponse_nextToken :: Lens' ListScriptsResponse (Maybe Text)

-- | A set of properties describing the requested script.
listScriptsResponse_scripts :: Lens' ListScriptsResponse (Maybe [Script])

-- | The response's http status code.
listScriptsResponse_httpStatus :: Lens' ListScriptsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.ListScripts.ListScripts
instance GHC.Show.Show Network.AWS.GameLift.ListScripts.ListScripts
instance GHC.Read.Read Network.AWS.GameLift.ListScripts.ListScripts
instance GHC.Classes.Eq Network.AWS.GameLift.ListScripts.ListScripts
instance GHC.Generics.Generic Network.AWS.GameLift.ListScripts.ListScriptsResponse
instance GHC.Show.Show Network.AWS.GameLift.ListScripts.ListScriptsResponse
instance GHC.Read.Read Network.AWS.GameLift.ListScripts.ListScriptsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.ListScripts.ListScriptsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.ListScripts.ListScripts
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListScripts.ListScriptsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.ListScripts.ListScripts
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.ListScripts.ListScripts
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListScripts.ListScripts
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.ListScripts.ListScripts
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.ListScripts.ListScripts
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.ListScripts.ListScripts
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.ListScripts.ListScripts


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Retrieves information on all game servers that are currently active in
--   a specified game server group. You can opt to sort the list by game
--   server age. Use the pagination parameters to retrieve results in a set
--   of sequential segments.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   RegisterGameServer | ListGameServers | ClaimGameServer |
--   DescribeGameServer | UpdateGameServer | DeregisterGameServer | <a>All
--   APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.ListGameServers

-- | <i>See:</i> <a>newListGameServers</a> smart constructor.
data ListGameServers
ListGameServers' :: Maybe Text -> Maybe SortOrder -> Maybe Natural -> Text -> ListGameServers

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:ListGameServers'] :: ListGameServers -> Maybe Text

-- | Indicates how to sort the returned data based on game server
--   registration timestamp. Use <tt>ASCENDING</tt> to retrieve oldest game
--   servers first, or use <tt>DESCENDING</tt> to retrieve newest game
--   servers first. If this parameter is left empty, game servers are
--   returned in no particular order.
[$sel:sortOrder:ListGameServers'] :: ListGameServers -> Maybe SortOrder

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:ListGameServers'] :: ListGameServers -> Maybe Natural

-- | An identifier for the game server group to retrieve a list of game
--   servers from. Use either the GameServerGroup name or ARN value.
[$sel:gameServerGroupName:ListGameServers'] :: ListGameServers -> Text

-- | Create a value of <a>ListGameServers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGameServers'</a>,
--   <a>listGameServers_nextToken</a> - A token that indicates the start of
--   the next sequential page of results. Use the token that is returned
--   with a previous call to this operation. To start at the beginning of
--   the result set, do not specify a value.
--   
--   <a>$sel:sortOrder:ListGameServers'</a>,
--   <a>listGameServers_sortOrder</a> - Indicates how to sort the returned
--   data based on game server registration timestamp. Use
--   <tt>ASCENDING</tt> to retrieve oldest game servers first, or use
--   <tt>DESCENDING</tt> to retrieve newest game servers first. If this
--   parameter is left empty, game servers are returned in no particular
--   order.
--   
--   <a>$sel:limit:ListGameServers'</a>, <a>listGameServers_limit</a> - The
--   maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
--   
--   <a>$sel:gameServerGroupName:ListGameServers'</a>,
--   <a>listGameServers_gameServerGroupName</a> - An identifier for the
--   game server group to retrieve a list of game servers from. Use either
--   the GameServerGroup name or ARN value.
newListGameServers :: Text -> ListGameServers

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
listGameServers_nextToken :: Lens' ListGameServers (Maybe Text)

-- | Indicates how to sort the returned data based on game server
--   registration timestamp. Use <tt>ASCENDING</tt> to retrieve oldest game
--   servers first, or use <tt>DESCENDING</tt> to retrieve newest game
--   servers first. If this parameter is left empty, game servers are
--   returned in no particular order.
listGameServers_sortOrder :: Lens' ListGameServers (Maybe SortOrder)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
listGameServers_limit :: Lens' ListGameServers (Maybe Natural)

-- | An identifier for the game server group to retrieve a list of game
--   servers from. Use either the GameServerGroup name or ARN value.
listGameServers_gameServerGroupName :: Lens' ListGameServers Text

-- | <i>See:</i> <a>newListGameServersResponse</a> smart constructor.
data ListGameServersResponse
ListGameServersResponse' :: Maybe Text -> Maybe [GameServer] -> Int -> ListGameServersResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:ListGameServersResponse'] :: ListGameServersResponse -> Maybe Text

-- | A collection of game server objects that match the request.
[$sel:gameServers:ListGameServersResponse'] :: ListGameServersResponse -> Maybe [GameServer]

-- | The response's http status code.
[$sel:httpStatus:ListGameServersResponse'] :: ListGameServersResponse -> Int

-- | Create a value of <a>ListGameServersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGameServers'</a>,
--   <a>listGameServersResponse_nextToken</a> - A token that indicates
--   where to resume retrieving results on the next call to this operation.
--   If no token is returned, these results represent the end of the list.
--   
--   <a>$sel:gameServers:ListGameServersResponse'</a>,
--   <a>listGameServersResponse_gameServers</a> - A collection of game
--   server objects that match the request.
--   
--   <a>$sel:httpStatus:ListGameServersResponse'</a>,
--   <a>listGameServersResponse_httpStatus</a> - The response's http status
--   code.
newListGameServersResponse :: Int -> ListGameServersResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
listGameServersResponse_nextToken :: Lens' ListGameServersResponse (Maybe Text)

-- | A collection of game server objects that match the request.
listGameServersResponse_gameServers :: Lens' ListGameServersResponse (Maybe [GameServer])

-- | The response's http status code.
listGameServersResponse_httpStatus :: Lens' ListGameServersResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.ListGameServers.ListGameServers
instance GHC.Show.Show Network.AWS.GameLift.ListGameServers.ListGameServers
instance GHC.Read.Read Network.AWS.GameLift.ListGameServers.ListGameServers
instance GHC.Classes.Eq Network.AWS.GameLift.ListGameServers.ListGameServers
instance GHC.Generics.Generic Network.AWS.GameLift.ListGameServers.ListGameServersResponse
instance GHC.Show.Show Network.AWS.GameLift.ListGameServers.ListGameServersResponse
instance GHC.Read.Read Network.AWS.GameLift.ListGameServers.ListGameServersResponse
instance GHC.Classes.Eq Network.AWS.GameLift.ListGameServers.ListGameServersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.ListGameServers.ListGameServers
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListGameServers.ListGameServersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.ListGameServers.ListGameServers
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.ListGameServers.ListGameServers
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListGameServers.ListGameServers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.ListGameServers.ListGameServers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.ListGameServers.ListGameServers
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.ListGameServers.ListGameServers
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.ListGameServers.ListGameServers


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Retrieves information on all game servers groups that exist in the
--   current AWS account for the selected Region. Use the pagination
--   parameters to retrieve results in a set of sequential segments.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.ListGameServerGroups

-- | <i>See:</i> <a>newListGameServerGroups</a> smart constructor.
data ListGameServerGroups
ListGameServerGroups' :: Maybe Text -> Maybe Natural -> ListGameServerGroups

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:ListGameServerGroups'] :: ListGameServerGroups -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:ListGameServerGroups'] :: ListGameServerGroups -> Maybe Natural

-- | Create a value of <a>ListGameServerGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGameServerGroups'</a>,
--   <a>listGameServerGroups_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:limit:ListGameServerGroups'</a>,
--   <a>listGameServerGroups_limit</a> - The maximum number of results to
--   return. Use this parameter with <tt>NextToken</tt> to get results as a
--   set of sequential pages.
newListGameServerGroups :: ListGameServerGroups

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
listGameServerGroups_nextToken :: Lens' ListGameServerGroups (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
listGameServerGroups_limit :: Lens' ListGameServerGroups (Maybe Natural)

-- | <i>See:</i> <a>newListGameServerGroupsResponse</a> smart constructor.
data ListGameServerGroupsResponse
ListGameServerGroupsResponse' :: Maybe [GameServerGroup] -> Maybe Text -> Int -> ListGameServerGroupsResponse

-- | A collection of game server group objects that match the request.
[$sel:gameServerGroups:ListGameServerGroupsResponse'] :: ListGameServerGroupsResponse -> Maybe [GameServerGroup]

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:ListGameServerGroupsResponse'] :: ListGameServerGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListGameServerGroupsResponse'] :: ListGameServerGroupsResponse -> Int

-- | Create a value of <a>ListGameServerGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroups:ListGameServerGroupsResponse'</a>,
--   <a>listGameServerGroupsResponse_gameServerGroups</a> - A collection of
--   game server group objects that match the request.
--   
--   <a>$sel:nextToken:ListGameServerGroups'</a>,
--   <a>listGameServerGroupsResponse_nextToken</a> - A token that indicates
--   where to resume retrieving results on the next call to this operation.
--   If no token is returned, these results represent the end of the list.
--   
--   <a>$sel:httpStatus:ListGameServerGroupsResponse'</a>,
--   <a>listGameServerGroupsResponse_httpStatus</a> - The response's http
--   status code.
newListGameServerGroupsResponse :: Int -> ListGameServerGroupsResponse

-- | A collection of game server group objects that match the request.
listGameServerGroupsResponse_gameServerGroups :: Lens' ListGameServerGroupsResponse (Maybe [GameServerGroup])

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
listGameServerGroupsResponse_nextToken :: Lens' ListGameServerGroupsResponse (Maybe Text)

-- | The response's http status code.
listGameServerGroupsResponse_httpStatus :: Lens' ListGameServerGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroups
instance GHC.Show.Show Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroups
instance GHC.Read.Read Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroups
instance GHC.Classes.Eq Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroups
instance GHC.Generics.Generic Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroupsResponse
instance GHC.Show.Show Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroupsResponse
instance GHC.Read.Read Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroupsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroups
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroups
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroups
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroups
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.ListGameServerGroups.ListGameServerGroups


-- | Retrieves a collection of fleet resources in an AWS Region. You can
--   call this operation to get fleets in a previously selected default
--   Region (see
--   <a>https://docs.aws.amazon.com/credref/latest/refdocs/setting-global-region.html</a>or
--   specify a Region in your request. You can filter the result set to
--   find only those fleets that are deployed with a specific build or
--   script. For fleets that have multiple locations, this operation
--   retrieves fleets based on their home Region only.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To get a list of all fleets in a Region, don't provide a build or
--   script identifier.</li>
--   <li>To get a list of all fleets where a specific custom game build is
--   deployed, provide the build ID.</li>
--   <li>To get a list of all Realtime Servers fleets with a specific
--   configuration script, provide the script ID.</li>
--   </ul>
--   
--   Use the pagination parameters to retrieve results as a set of
--   sequential pages.
--   
--   If successful, a list of fleet IDs that match the request parameters
--   is returned. A NextToken value is also returned if there are more
--   result pages to retrieve.
--   
--   Fleet resources are not listed in a particular order.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleet | UpdateFleetCapacity | PutScalingPolicy |
--   DescribeEC2InstanceLimits | DescribeFleetAttributes |
--   DescribeFleetLocationAttributes | UpdateFleetAttributes |
--   StopFleetActions | DeleteFleet | <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.ListFleets

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newListFleets</a> smart constructor.
data ListFleets
ListFleets' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> ListFleets

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:ListFleets'] :: ListFleets -> Maybe Text

-- | A unique identifier for the build to request fleets for. Use this
--   parameter to return only fleets using a specified build. Use either
--   the build ID or ARN value.
[$sel:buildId:ListFleets'] :: ListFleets -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:ListFleets'] :: ListFleets -> Maybe Natural

-- | A unique identifier for the Realtime script to request fleets for. Use
--   this parameter to return only fleets using a specified script. Use
--   either the script ID or ARN value.
[$sel:scriptId:ListFleets'] :: ListFleets -> Maybe Text

-- | Create a value of <a>ListFleets</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFleets'</a>, <a>listFleets_nextToken</a> - A
--   token that indicates the start of the next sequential page of results.
--   Use the token that is returned with a previous call to this operation.
--   To start at the beginning of the result set, do not specify a value.
--   
--   <a>$sel:buildId:ListFleets'</a>, <a>listFleets_buildId</a> - A unique
--   identifier for the build to request fleets for. Use this parameter to
--   return only fleets using a specified build. Use either the build ID or
--   ARN value.
--   
--   <a>$sel:limit:ListFleets'</a>, <a>listFleets_limit</a> - The maximum
--   number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
--   
--   <a>$sel:scriptId:ListFleets'</a>, <a>listFleets_scriptId</a> - A
--   unique identifier for the Realtime script to request fleets for. Use
--   this parameter to return only fleets using a specified script. Use
--   either the script ID or ARN value.
newListFleets :: ListFleets

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
listFleets_nextToken :: Lens' ListFleets (Maybe Text)

-- | A unique identifier for the build to request fleets for. Use this
--   parameter to return only fleets using a specified build. Use either
--   the build ID or ARN value.
listFleets_buildId :: Lens' ListFleets (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
listFleets_limit :: Lens' ListFleets (Maybe Natural)

-- | A unique identifier for the Realtime script to request fleets for. Use
--   this parameter to return only fleets using a specified script. Use
--   either the script ID or ARN value.
listFleets_scriptId :: Lens' ListFleets (Maybe Text)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newListFleetsResponse</a> smart constructor.
data ListFleetsResponse
ListFleetsResponse' :: Maybe Text -> Maybe (NonEmpty Text) -> Int -> ListFleetsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:ListFleetsResponse'] :: ListFleetsResponse -> Maybe Text

-- | A set of fleet IDs that match the list request. You can retrieve
--   additional information about all returned fleets by passing this
--   result set to a DescribeFleetAttributes, DescribeFleetCapacity, or
--   DescribeFleetUtilization call.
[$sel:fleetIds:ListFleetsResponse'] :: ListFleetsResponse -> Maybe (NonEmpty Text)

-- | The response's http status code.
[$sel:httpStatus:ListFleetsResponse'] :: ListFleetsResponse -> Int

-- | Create a value of <a>ListFleetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFleets'</a>, <a>listFleetsResponse_nextToken</a>
--   - A token that indicates where to resume retrieving results on the
--   next call to this operation. If no token is returned, these results
--   represent the end of the list.
--   
--   <a>$sel:fleetIds:ListFleetsResponse'</a>,
--   <a>listFleetsResponse_fleetIds</a> - A set of fleet IDs that match the
--   list request. You can retrieve additional information about all
--   returned fleets by passing this result set to a
--   DescribeFleetAttributes, DescribeFleetCapacity, or
--   DescribeFleetUtilization call.
--   
--   <a>$sel:httpStatus:ListFleetsResponse'</a>,
--   <a>listFleetsResponse_httpStatus</a> - The response's http status
--   code.
newListFleetsResponse :: Int -> ListFleetsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
listFleetsResponse_nextToken :: Lens' ListFleetsResponse (Maybe Text)

-- | A set of fleet IDs that match the list request. You can retrieve
--   additional information about all returned fleets by passing this
--   result set to a DescribeFleetAttributes, DescribeFleetCapacity, or
--   DescribeFleetUtilization call.
listFleetsResponse_fleetIds :: Lens' ListFleetsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
listFleetsResponse_httpStatus :: Lens' ListFleetsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.ListFleets.ListFleets
instance GHC.Show.Show Network.AWS.GameLift.ListFleets.ListFleets
instance GHC.Read.Read Network.AWS.GameLift.ListFleets.ListFleets
instance GHC.Classes.Eq Network.AWS.GameLift.ListFleets.ListFleets
instance GHC.Generics.Generic Network.AWS.GameLift.ListFleets.ListFleetsResponse
instance GHC.Show.Show Network.AWS.GameLift.ListFleets.ListFleetsResponse
instance GHC.Read.Read Network.AWS.GameLift.ListFleets.ListFleetsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.ListFleets.ListFleetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.ListFleets.ListFleets
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListFleets.ListFleetsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.ListFleets.ListFleets
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.ListFleets.ListFleets
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListFleets.ListFleets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.ListFleets.ListFleets
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.ListFleets.ListFleets
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.ListFleets.ListFleets
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.ListFleets.ListFleets


-- | Retrieves build resources for all builds associated with the AWS
--   account in use. You can limit results to builds that are in a specific
--   status by using the <tt>Status</tt> parameter. Use the pagination
--   parameters to retrieve results in a set of sequential pages.
--   
--   Build resources are not listed in any particular order.
--   
--   <b>Learn more</b>
--   
--   <a>Upload a Custom Server Build</a>
--   
--   <b>Related actions</b>
--   
--   CreateBuild | ListBuilds | DescribeBuild | UpdateBuild | DeleteBuild |
--   <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.ListBuilds

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newListBuilds</a> smart constructor.
data ListBuilds
ListBuilds' :: Maybe BuildStatus -> Maybe Text -> Maybe Natural -> ListBuilds

-- | Build status to filter results by. To retrieve all builds, leave this
--   parameter empty.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
[$sel:status:ListBuilds'] :: ListBuilds -> Maybe BuildStatus

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:ListBuilds'] :: ListBuilds -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:ListBuilds'] :: ListBuilds -> Maybe Natural

-- | Create a value of <a>ListBuilds</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListBuilds'</a>, <a>listBuilds_status</a> - Build
--   status to filter results by. To retrieve all builds, leave this
--   parameter empty.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListBuilds'</a>, <a>listBuilds_nextToken</a> - A
--   token that indicates the start of the next sequential page of results.
--   Use the token that is returned with a previous call to this operation.
--   To start at the beginning of the result set, do not specify a value.
--   
--   <a>$sel:limit:ListBuilds'</a>, <a>listBuilds_limit</a> - The maximum
--   number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
newListBuilds :: ListBuilds

-- | Build status to filter results by. To retrieve all builds, leave this
--   parameter empty.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
listBuilds_status :: Lens' ListBuilds (Maybe BuildStatus)

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
listBuilds_nextToken :: Lens' ListBuilds (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
listBuilds_limit :: Lens' ListBuilds (Maybe Natural)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newListBuildsResponse</a> smart constructor.
data ListBuildsResponse
ListBuildsResponse' :: Maybe Text -> Maybe [Build] -> Int -> ListBuildsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:ListBuildsResponse'] :: ListBuildsResponse -> Maybe Text

-- | A collection of build resources that match the request.
[$sel:builds:ListBuildsResponse'] :: ListBuildsResponse -> Maybe [Build]

-- | The response's http status code.
[$sel:httpStatus:ListBuildsResponse'] :: ListBuildsResponse -> Int

-- | Create a value of <a>ListBuildsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBuilds'</a>, <a>listBuildsResponse_nextToken</a>
--   - A token that indicates where to resume retrieving results on the
--   next call to this operation. If no token is returned, these results
--   represent the end of the list.
--   
--   <a>$sel:builds:ListBuildsResponse'</a>,
--   <a>listBuildsResponse_builds</a> - A collection of build resources
--   that match the request.
--   
--   <a>$sel:httpStatus:ListBuildsResponse'</a>,
--   <a>listBuildsResponse_httpStatus</a> - The response's http status
--   code.
newListBuildsResponse :: Int -> ListBuildsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
listBuildsResponse_nextToken :: Lens' ListBuildsResponse (Maybe Text)

-- | A collection of build resources that match the request.
listBuildsResponse_builds :: Lens' ListBuildsResponse (Maybe [Build])

-- | The response's http status code.
listBuildsResponse_httpStatus :: Lens' ListBuildsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.ListBuilds.ListBuilds
instance GHC.Show.Show Network.AWS.GameLift.ListBuilds.ListBuilds
instance GHC.Read.Read Network.AWS.GameLift.ListBuilds.ListBuilds
instance GHC.Classes.Eq Network.AWS.GameLift.ListBuilds.ListBuilds
instance GHC.Generics.Generic Network.AWS.GameLift.ListBuilds.ListBuildsResponse
instance GHC.Show.Show Network.AWS.GameLift.ListBuilds.ListBuildsResponse
instance GHC.Read.Read Network.AWS.GameLift.ListBuilds.ListBuildsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.ListBuilds.ListBuildsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.ListBuilds.ListBuilds
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListBuilds.ListBuildsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.ListBuilds.ListBuilds
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.ListBuilds.ListBuilds
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListBuilds.ListBuilds
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.ListBuilds.ListBuilds
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.ListBuilds.ListBuilds
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.ListBuilds.ListBuilds
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.ListBuilds.ListBuilds


-- | Retrieves all aliases for this AWS account. You can filter the result
--   set by alias name and/or routing strategy type. Use the pagination
--   parameters to retrieve results in sequential pages.
--   
--   Returned aliases are not listed in any particular order.
--   
--   <b>Related actions</b>
--   
--   CreateAlias | ListAliases | DescribeAlias | UpdateAlias | DeleteAlias
--   | ResolveAlias | <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.ListAliases

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newListAliases</a> smart constructor.
data ListAliases
ListAliases' :: Maybe Text -> Maybe Text -> Maybe RoutingStrategyType -> Maybe Natural -> ListAliases

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:ListAliases'] :: ListAliases -> Maybe Text

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
[$sel:name:ListAliases'] :: ListAliases -> Maybe Text

-- | The routing type to filter results on. Use this parameter to retrieve
--   only aliases with a certain routing type. To retrieve all aliases,
--   leave this parameter empty.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> -- The alias resolves to one specific fleet. Use
--   this type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> -- The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
[$sel:routingStrategyType:ListAliases'] :: ListAliases -> Maybe RoutingStrategyType

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:ListAliases'] :: ListAliases -> Maybe Natural

-- | Create a value of <a>ListAliases</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAliases'</a>, <a>listAliases_nextToken</a> - A
--   token that indicates the start of the next sequential page of results.
--   Use the token that is returned with a previous call to this operation.
--   To start at the beginning of the result set, do not specify a value.
--   
--   <a>$sel:name:ListAliases'</a>, <a>listAliases_name</a> - A descriptive
--   label that is associated with an alias. Alias names do not need to be
--   unique.
--   
--   <a>$sel:routingStrategyType:ListAliases'</a>,
--   <a>listAliases_routingStrategyType</a> - The routing type to filter
--   results on. Use this parameter to retrieve only aliases with a certain
--   routing type. To retrieve all aliases, leave this parameter empty.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> -- The alias resolves to one specific fleet. Use
--   this type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> -- The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
--   
--   <a>$sel:limit:ListAliases'</a>, <a>listAliases_limit</a> - The maximum
--   number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
newListAliases :: ListAliases

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
listAliases_nextToken :: Lens' ListAliases (Maybe Text)

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
listAliases_name :: Lens' ListAliases (Maybe Text)

-- | The routing type to filter results on. Use this parameter to retrieve
--   only aliases with a certain routing type. To retrieve all aliases,
--   leave this parameter empty.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> -- The alias resolves to one specific fleet. Use
--   this type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> -- The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
listAliases_routingStrategyType :: Lens' ListAliases (Maybe RoutingStrategyType)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
listAliases_limit :: Lens' ListAliases (Maybe Natural)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newListAliasesResponse</a> smart constructor.
data ListAliasesResponse
ListAliasesResponse' :: Maybe Text -> Maybe [Alias] -> Int -> ListAliasesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:ListAliasesResponse'] :: ListAliasesResponse -> Maybe Text

-- | A collection of alias resources that match the request parameters.
[$sel:aliases:ListAliasesResponse'] :: ListAliasesResponse -> Maybe [Alias]

-- | The response's http status code.
[$sel:httpStatus:ListAliasesResponse'] :: ListAliasesResponse -> Int

-- | Create a value of <a>ListAliasesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAliases'</a>,
--   <a>listAliasesResponse_nextToken</a> - A token that indicates where to
--   resume retrieving results on the next call to this operation. If no
--   token is returned, these results represent the end of the list.
--   
--   <a>$sel:aliases:ListAliasesResponse'</a>,
--   <a>listAliasesResponse_aliases</a> - A collection of alias resources
--   that match the request parameters.
--   
--   <a>$sel:httpStatus:ListAliasesResponse'</a>,
--   <a>listAliasesResponse_httpStatus</a> - The response's http status
--   code.
newListAliasesResponse :: Int -> ListAliasesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
listAliasesResponse_nextToken :: Lens' ListAliasesResponse (Maybe Text)

-- | A collection of alias resources that match the request parameters.
listAliasesResponse_aliases :: Lens' ListAliasesResponse (Maybe [Alias])

-- | The response's http status code.
listAliasesResponse_httpStatus :: Lens' ListAliasesResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.ListAliases.ListAliases
instance GHC.Show.Show Network.AWS.GameLift.ListAliases.ListAliases
instance GHC.Read.Read Network.AWS.GameLift.ListAliases.ListAliases
instance GHC.Classes.Eq Network.AWS.GameLift.ListAliases.ListAliases
instance GHC.Generics.Generic Network.AWS.GameLift.ListAliases.ListAliasesResponse
instance GHC.Show.Show Network.AWS.GameLift.ListAliases.ListAliasesResponse
instance GHC.Read.Read Network.AWS.GameLift.ListAliases.ListAliasesResponse
instance GHC.Classes.Eq Network.AWS.GameLift.ListAliases.ListAliasesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.ListAliases.ListAliases
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListAliases.ListAliasesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.ListAliases.ListAliases
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.ListAliases.ListAliases
instance Control.DeepSeq.NFData Network.AWS.GameLift.ListAliases.ListAliases
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.ListAliases.ListAliases
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.ListAliases.ListAliases
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.ListAliases.ListAliases
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.ListAliases.ListAliases


-- | Requests remote access to a fleet instance. Remote access is useful
--   for debugging, gathering benchmarking data, or observing activity in
--   real time.
--   
--   To remotely access an instance, you need credentials that match the
--   operating system of the instance. For a Windows instance, GameLift
--   returns a user name and password as strings for use with a Windows
--   Remote Desktop client. For a Linux instance, GameLift returns a user
--   name and RSA private key, also as strings, for use with an SSH client.
--   The private key must be saved in the proper format to a <tt>.pem</tt>
--   file before using. If you're making this request using the AWS CLI,
--   saving the secret can be handled as part of the
--   <tt>GetInstanceAccess</tt> request, as shown in one of the examples
--   for this operation.
--   
--   To request access to a specific instance, specify the IDs of both the
--   instance and the fleet it belongs to. You can retrieve a fleet's
--   instance IDs by calling DescribeInstances. If successful, an
--   InstanceAccess object is returned that contains the instance's IP
--   address and a set of credentials.
--   
--   <b>Learn more</b>
--   
--   <a>Remotely Access Fleet Instances</a>
--   
--   <a>Debug Fleet Issues</a>
--   
--   <b>Related actions</b>
--   
--   DescribeInstances | GetInstanceAccess | DescribeEC2InstanceLimits |
--   <a>All APIs by task</a>
module Network.AWS.GameLift.GetInstanceAccess

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newGetInstanceAccess</a> smart constructor.
data GetInstanceAccess
GetInstanceAccess' :: Text -> Text -> GetInstanceAccess

-- | A unique identifier for the fleet that contains the instance you want
--   access to. You can use either the fleet ID or ARN value. The fleet can
--   be in any of the following statuses: <tt>ACTIVATING</tt>,
--   <tt>ACTIVE</tt>, or <tt>ERROR</tt>. Fleets with an <tt>ERROR</tt>
--   status may be accessible for a short time before they are deleted.
[$sel:fleetId:GetInstanceAccess'] :: GetInstanceAccess -> Text

-- | A unique identifier for the instance you want to get access to. You
--   can access an instance in any status.
[$sel:instanceId:GetInstanceAccess'] :: GetInstanceAccess -> Text

-- | Create a value of <a>GetInstanceAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:GetInstanceAccess'</a>,
--   <a>getInstanceAccess_fleetId</a> - A unique identifier for the fleet
--   that contains the instance you want access to. You can use either the
--   fleet ID or ARN value. The fleet can be in any of the following
--   statuses: <tt>ACTIVATING</tt>, <tt>ACTIVE</tt>, or <tt>ERROR</tt>.
--   Fleets with an <tt>ERROR</tt> status may be accessible for a short
--   time before they are deleted.
--   
--   <a>$sel:instanceId:GetInstanceAccess'</a>,
--   <a>getInstanceAccess_instanceId</a> - A unique identifier for the
--   instance you want to get access to. You can access an instance in any
--   status.
newGetInstanceAccess :: Text -> Text -> GetInstanceAccess

-- | A unique identifier for the fleet that contains the instance you want
--   access to. You can use either the fleet ID or ARN value. The fleet can
--   be in any of the following statuses: <tt>ACTIVATING</tt>,
--   <tt>ACTIVE</tt>, or <tt>ERROR</tt>. Fleets with an <tt>ERROR</tt>
--   status may be accessible for a short time before they are deleted.
getInstanceAccess_fleetId :: Lens' GetInstanceAccess Text

-- | A unique identifier for the instance you want to get access to. You
--   can access an instance in any status.
getInstanceAccess_instanceId :: Lens' GetInstanceAccess Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newGetInstanceAccessResponse</a> smart constructor.
data GetInstanceAccessResponse
GetInstanceAccessResponse' :: Maybe InstanceAccess -> Int -> GetInstanceAccessResponse

-- | The connection information for a fleet instance, including IP address
--   and access credentials.
[$sel:instanceAccess:GetInstanceAccessResponse'] :: GetInstanceAccessResponse -> Maybe InstanceAccess

-- | The response's http status code.
[$sel:httpStatus:GetInstanceAccessResponse'] :: GetInstanceAccessResponse -> Int

-- | Create a value of <a>GetInstanceAccessResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceAccess:GetInstanceAccessResponse'</a>,
--   <a>getInstanceAccessResponse_instanceAccess</a> - The connection
--   information for a fleet instance, including IP address and access
--   credentials.
--   
--   <a>$sel:httpStatus:GetInstanceAccessResponse'</a>,
--   <a>getInstanceAccessResponse_httpStatus</a> - The response's http
--   status code.
newGetInstanceAccessResponse :: Int -> GetInstanceAccessResponse

-- | The connection information for a fleet instance, including IP address
--   and access credentials.
getInstanceAccessResponse_instanceAccess :: Lens' GetInstanceAccessResponse (Maybe InstanceAccess)

-- | The response's http status code.
getInstanceAccessResponse_httpStatus :: Lens' GetInstanceAccessResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccess
instance GHC.Show.Show Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccess
instance GHC.Read.Read Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccess
instance GHC.Classes.Eq Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccess
instance GHC.Generics.Generic Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccessResponse
instance GHC.Show.Show Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccessResponse
instance GHC.Classes.Eq Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccessResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccess
instance Control.DeepSeq.NFData Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccessResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccess
instance Control.DeepSeq.NFData Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccess
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccess
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccess
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccess
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.GetInstanceAccess.GetInstanceAccess


-- | Retrieves the location of stored game session logs for a specified
--   game session. When a game session is terminated, GameLift
--   automatically stores the logs in Amazon S3 and retains them for 14
--   days. Use this URL to download the logs.
--   
--   See the <a>AWS Service Limits</a> page for maximum log file sizes. Log
--   files that exceed this limit are not saved.
--   
--   <b>Related actions</b>
--   
--   CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails
--   | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
module Network.AWS.GameLift.GetGameSessionLogUrl

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newGetGameSessionLogUrl</a> smart constructor.
data GetGameSessionLogUrl
GetGameSessionLogUrl' :: Text -> GetGameSessionLogUrl

-- | A unique identifier for the game session to get logs for.
[$sel:gameSessionId:GetGameSessionLogUrl'] :: GetGameSessionLogUrl -> Text

-- | Create a value of <a>GetGameSessionLogUrl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionId:GetGameSessionLogUrl'</a>,
--   <a>getGameSessionLogUrl_gameSessionId</a> - A unique identifier for
--   the game session to get logs for.
newGetGameSessionLogUrl :: Text -> GetGameSessionLogUrl

-- | A unique identifier for the game session to get logs for.
getGameSessionLogUrl_gameSessionId :: Lens' GetGameSessionLogUrl Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newGetGameSessionLogUrlResponse</a> smart constructor.
data GetGameSessionLogUrlResponse
GetGameSessionLogUrlResponse' :: Maybe Text -> Int -> GetGameSessionLogUrlResponse

-- | Location of the requested game session logs, available for download.
--   This URL is valid for 15 minutes, after which S3 will reject any
--   download request using this URL. You can request a new URL any time
--   within the 14-day period that the logs are retained.
[$sel:preSignedUrl:GetGameSessionLogUrlResponse'] :: GetGameSessionLogUrlResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetGameSessionLogUrlResponse'] :: GetGameSessionLogUrlResponse -> Int

-- | Create a value of <a>GetGameSessionLogUrlResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preSignedUrl:GetGameSessionLogUrlResponse'</a>,
--   <a>getGameSessionLogUrlResponse_preSignedUrl</a> - Location of the
--   requested game session logs, available for download. This URL is valid
--   for 15 minutes, after which S3 will reject any download request using
--   this URL. You can request a new URL any time within the 14-day period
--   that the logs are retained.
--   
--   <a>$sel:httpStatus:GetGameSessionLogUrlResponse'</a>,
--   <a>getGameSessionLogUrlResponse_httpStatus</a> - The response's http
--   status code.
newGetGameSessionLogUrlResponse :: Int -> GetGameSessionLogUrlResponse

-- | Location of the requested game session logs, available for download.
--   This URL is valid for 15 minutes, after which S3 will reject any
--   download request using this URL. You can request a new URL any time
--   within the 14-day period that the logs are retained.
getGameSessionLogUrlResponse_preSignedUrl :: Lens' GetGameSessionLogUrlResponse (Maybe Text)

-- | The response's http status code.
getGameSessionLogUrlResponse_httpStatus :: Lens' GetGameSessionLogUrlResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrl
instance GHC.Show.Show Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrl
instance GHC.Read.Read Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrl
instance GHC.Classes.Eq Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrl
instance GHC.Generics.Generic Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrlResponse
instance GHC.Show.Show Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrlResponse
instance GHC.Read.Read Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrlResponse
instance GHC.Classes.Eq Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrlResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrl
instance Control.DeepSeq.NFData Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrlResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrl
instance Control.DeepSeq.NFData Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrl
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrl
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrl
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrl
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.GetGameSessionLogUrl.GetGameSessionLogUrl


-- | Retrieves information on VPC peering connections. Use this operation
--   to get peering information for all fleets or for one specific fleet
--   ID.
--   
--   To retrieve connection information, call this operation from the AWS
--   account that is used to manage the Amazon GameLift fleets. Specify a
--   fleet ID or leave the parameter empty to retrieve all connection
--   records. If successful, the retrieved information includes both active
--   and pending connections. Active connections identify the IpV4 CIDR
--   block that the VPC uses to connect.
--   
--   <b>Related actions</b>
--   
--   CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations |
--   DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection |
--   DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.DescribeVpcPeeringConnections

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeVpcPeeringConnections</a> smart constructor.
data DescribeVpcPeeringConnections
DescribeVpcPeeringConnections' :: Maybe Text -> DescribeVpcPeeringConnections

-- | A unique identifier for the fleet. You can use either the fleet ID or
--   ARN value.
[$sel:fleetId:DescribeVpcPeeringConnections'] :: DescribeVpcPeeringConnections -> Maybe Text

-- | Create a value of <a>DescribeVpcPeeringConnections</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DescribeVpcPeeringConnections'</a>,
--   <a>describeVpcPeeringConnections_fleetId</a> - A unique identifier for
--   the fleet. You can use either the fleet ID or ARN value.
newDescribeVpcPeeringConnections :: DescribeVpcPeeringConnections

-- | A unique identifier for the fleet. You can use either the fleet ID or
--   ARN value.
describeVpcPeeringConnections_fleetId :: Lens' DescribeVpcPeeringConnections (Maybe Text)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeVpcPeeringConnectionsResponse</a> smart
--   constructor.
data DescribeVpcPeeringConnectionsResponse
DescribeVpcPeeringConnectionsResponse' :: Maybe [VpcPeeringConnection] -> Int -> DescribeVpcPeeringConnectionsResponse

-- | A collection of VPC peering connection records that match the request.
[$sel:vpcPeeringConnections:DescribeVpcPeeringConnectionsResponse'] :: DescribeVpcPeeringConnectionsResponse -> Maybe [VpcPeeringConnection]

-- | The response's http status code.
[$sel:httpStatus:DescribeVpcPeeringConnectionsResponse'] :: DescribeVpcPeeringConnectionsResponse -> Int

-- | Create a value of <a>DescribeVpcPeeringConnectionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:vpcPeeringConnections:DescribeVpcPeeringConnectionsResponse'</a>,
--   <a>describeVpcPeeringConnectionsResponse_vpcPeeringConnections</a> - A
--   collection of VPC peering connection records that match the request.
--   
--   <a>$sel:httpStatus:DescribeVpcPeeringConnectionsResponse'</a>,
--   <a>describeVpcPeeringConnectionsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeVpcPeeringConnectionsResponse :: Int -> DescribeVpcPeeringConnectionsResponse

-- | A collection of VPC peering connection records that match the request.
describeVpcPeeringConnectionsResponse_vpcPeeringConnections :: Lens' DescribeVpcPeeringConnectionsResponse (Maybe [VpcPeeringConnection])

-- | The response's http status code.
describeVpcPeeringConnectionsResponse_httpStatus :: Lens' DescribeVpcPeeringConnectionsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnections
instance GHC.Show.Show Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnections
instance GHC.Read.Read Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnections
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnections
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnectionsResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnectionsResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnectionsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnectionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnections
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnectionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnections
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnections
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnections
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnections
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnections
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeVpcPeeringConnections.DescribeVpcPeeringConnections


-- | Retrieves valid VPC peering authorizations that are pending for the
--   AWS account. This operation returns all VPC peering authorizations and
--   requests for peering. This includes those initiated and received by
--   this account.
--   
--   <b>Related actions</b>
--   
--   CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations |
--   DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection |
--   DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.DescribeVpcPeeringAuthorizations

-- | <i>See:</i> <a>newDescribeVpcPeeringAuthorizations</a> smart
--   constructor.
data DescribeVpcPeeringAuthorizations
DescribeVpcPeeringAuthorizations' :: DescribeVpcPeeringAuthorizations

-- | Create a value of <a>DescribeVpcPeeringAuthorizations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeVpcPeeringAuthorizations :: DescribeVpcPeeringAuthorizations

-- | <i>See:</i> <a>newDescribeVpcPeeringAuthorizationsResponse</a> smart
--   constructor.
data DescribeVpcPeeringAuthorizationsResponse
DescribeVpcPeeringAuthorizationsResponse' :: Maybe [VpcPeeringAuthorization] -> Int -> DescribeVpcPeeringAuthorizationsResponse

-- | A collection of objects that describe all valid VPC peering operations
--   for the current AWS account.
[$sel:vpcPeeringAuthorizations:DescribeVpcPeeringAuthorizationsResponse'] :: DescribeVpcPeeringAuthorizationsResponse -> Maybe [VpcPeeringAuthorization]

-- | The response's http status code.
[$sel:httpStatus:DescribeVpcPeeringAuthorizationsResponse'] :: DescribeVpcPeeringAuthorizationsResponse -> Int

-- | Create a value of <a>DescribeVpcPeeringAuthorizationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:vpcPeeringAuthorizations:DescribeVpcPeeringAuthorizationsResponse'</a>,
--   <a>describeVpcPeeringAuthorizationsResponse_vpcPeeringAuthorizations</a>
--   - A collection of objects that describe all valid VPC peering
--   operations for the current AWS account.
--   
--   <a>$sel:httpStatus:DescribeVpcPeeringAuthorizationsResponse'</a>,
--   <a>describeVpcPeeringAuthorizationsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeVpcPeeringAuthorizationsResponse :: Int -> DescribeVpcPeeringAuthorizationsResponse

-- | A collection of objects that describe all valid VPC peering operations
--   for the current AWS account.
describeVpcPeeringAuthorizationsResponse_vpcPeeringAuthorizations :: Lens' DescribeVpcPeeringAuthorizationsResponse (Maybe [VpcPeeringAuthorization])

-- | The response's http status code.
describeVpcPeeringAuthorizationsResponse_httpStatus :: Lens' DescribeVpcPeeringAuthorizationsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizations
instance GHC.Show.Show Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizations
instance GHC.Read.Read Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizations
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizations
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizationsResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizationsResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizationsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizations
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizations
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizations
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizations
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeVpcPeeringAuthorizations.DescribeVpcPeeringAuthorizations


-- | Retrieves properties for a Realtime script.
--   
--   To request a script record, specify the script ID. If successful, an
--   object containing the script properties is returned.
--   
--   <b>Learn more</b>
--   
--   <a>Amazon GameLift Realtime Servers</a>
--   
--   <b>Related actions</b>
--   
--   CreateScript | ListScripts | DescribeScript | UpdateScript |
--   DeleteScript | <a>All APIs by task</a>
module Network.AWS.GameLift.DescribeScript

-- | <i>See:</i> <a>newDescribeScript</a> smart constructor.
data DescribeScript
DescribeScript' :: Text -> DescribeScript

-- | A unique identifier for the Realtime script to retrieve properties
--   for. You can use either the script ID or ARN value.
[$sel:scriptId:DescribeScript'] :: DescribeScript -> Text

-- | Create a value of <a>DescribeScript</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scriptId:DescribeScript'</a>, <a>describeScript_scriptId</a> -
--   A unique identifier for the Realtime script to retrieve properties
--   for. You can use either the script ID or ARN value.
newDescribeScript :: Text -> DescribeScript

-- | A unique identifier for the Realtime script to retrieve properties
--   for. You can use either the script ID or ARN value.
describeScript_scriptId :: Lens' DescribeScript Text

-- | <i>See:</i> <a>newDescribeScriptResponse</a> smart constructor.
data DescribeScriptResponse
DescribeScriptResponse' :: Maybe Script -> Int -> DescribeScriptResponse

-- | A set of properties describing the requested script.
[$sel:script:DescribeScriptResponse'] :: DescribeScriptResponse -> Maybe Script

-- | The response's http status code.
[$sel:httpStatus:DescribeScriptResponse'] :: DescribeScriptResponse -> Int

-- | Create a value of <a>DescribeScriptResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:script:DescribeScriptResponse'</a>,
--   <a>describeScriptResponse_script</a> - A set of properties describing
--   the requested script.
--   
--   <a>$sel:httpStatus:DescribeScriptResponse'</a>,
--   <a>describeScriptResponse_httpStatus</a> - The response's http status
--   code.
newDescribeScriptResponse :: Int -> DescribeScriptResponse

-- | A set of properties describing the requested script.
describeScriptResponse_script :: Lens' DescribeScriptResponse (Maybe Script)

-- | The response's http status code.
describeScriptResponse_httpStatus :: Lens' DescribeScriptResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeScript.DescribeScript
instance GHC.Show.Show Network.AWS.GameLift.DescribeScript.DescribeScript
instance GHC.Read.Read Network.AWS.GameLift.DescribeScript.DescribeScript
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeScript.DescribeScript
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeScript.DescribeScriptResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeScript.DescribeScriptResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeScript.DescribeScriptResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeScript.DescribeScriptResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeScript.DescribeScript
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeScript.DescribeScriptResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeScript.DescribeScript
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeScript.DescribeScript
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeScript.DescribeScript
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeScript.DescribeScript
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeScript.DescribeScript
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeScript.DescribeScript


-- | Retrieves all scaling policies applied to a fleet.
--   
--   To get a fleet's scaling policies, specify the fleet ID. You can
--   filter this request by policy status, such as to retrieve only active
--   scaling policies. Use the pagination parameters to retrieve results as
--   a set of sequential pages. If successful, set of ScalingPolicy objects
--   is returned for the fleet.
--   
--   A fleet may have all of its scaling policies suspended
--   (StopFleetActions). This operation does not affect the status of the
--   scaling policies, which remains ACTIVE. To see whether a fleet's
--   scaling policies are in force or suspended, call
--   DescribeFleetAttributes and check the stopped actions.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetCapacity | UpdateFleetCapacity |
--   DescribeEC2InstanceLimits | PutScalingPolicy | DescribeScalingPolicies
--   | DeleteScalingPolicy | StopFleetActions | StartFleetActions | <a>All
--   APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribeScalingPolicies

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeScalingPolicies</a> smart constructor.
data DescribeScalingPolicies
DescribeScalingPolicies' :: Maybe Text -> Maybe ScalingStatusType -> Maybe Text -> Maybe Natural -> Text -> DescribeScalingPolicies

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:DescribeScalingPolicies'] :: DescribeScalingPolicies -> Maybe Text

-- | Scaling policy status to filter results on. A scaling policy is only
--   in force when in an <tt>ACTIVE</tt> status.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy is currently in force.</li>
--   <li><b>UPDATEREQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETEREQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
[$sel:statusFilter:DescribeScalingPolicies'] :: DescribeScalingPolicies -> Maybe ScalingStatusType

-- | CONTENT TODO
[$sel:location:DescribeScalingPolicies'] :: DescribeScalingPolicies -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:DescribeScalingPolicies'] :: DescribeScalingPolicies -> Maybe Natural

-- | A unique identifier for the fleet to retrieve scaling policies for.
--   You can use either the fleet ID or ARN value.
[$sel:fleetId:DescribeScalingPolicies'] :: DescribeScalingPolicies -> Text

-- | Create a value of <a>DescribeScalingPolicies</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:statusFilter:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_statusFilter</a> - Scaling policy status to
--   filter results on. A scaling policy is only in force when in an
--   <tt>ACTIVE</tt> status.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy is currently in force.</li>
--   <li><b>UPDATEREQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETEREQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
--   
--   <a>$sel:location:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_location</a> - CONTENT TODO
--   
--   <a>$sel:limit:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_limit</a> - The maximum number of results
--   to return. Use this parameter with <tt>NextToken</tt> to get results
--   as a set of sequential pages.
--   
--   <a>$sel:fleetId:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_fleetId</a> - A unique identifier for the
--   fleet to retrieve scaling policies for. You can use either the fleet
--   ID or ARN value.
newDescribeScalingPolicies :: Text -> DescribeScalingPolicies

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeScalingPolicies_nextToken :: Lens' DescribeScalingPolicies (Maybe Text)

-- | Scaling policy status to filter results on. A scaling policy is only
--   in force when in an <tt>ACTIVE</tt> status.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy is currently in force.</li>
--   <li><b>UPDATEREQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETEREQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
describeScalingPolicies_statusFilter :: Lens' DescribeScalingPolicies (Maybe ScalingStatusType)

-- | CONTENT TODO
describeScalingPolicies_location :: Lens' DescribeScalingPolicies (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeScalingPolicies_limit :: Lens' DescribeScalingPolicies (Maybe Natural)

-- | A unique identifier for the fleet to retrieve scaling policies for.
--   You can use either the fleet ID or ARN value.
describeScalingPolicies_fleetId :: Lens' DescribeScalingPolicies Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeScalingPoliciesResponse</a> smart
--   constructor.
data DescribeScalingPoliciesResponse
DescribeScalingPoliciesResponse' :: Maybe Text -> Maybe [ScalingPolicy] -> Int -> DescribeScalingPoliciesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeScalingPoliciesResponse'] :: DescribeScalingPoliciesResponse -> Maybe Text

-- | A collection of objects containing the scaling policies matching the
--   request.
[$sel:scalingPolicies:DescribeScalingPoliciesResponse'] :: DescribeScalingPoliciesResponse -> Maybe [ScalingPolicy]

-- | The response's http status code.
[$sel:httpStatus:DescribeScalingPoliciesResponse'] :: DescribeScalingPoliciesResponse -> Int

-- | Create a value of <a>DescribeScalingPoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingPolicies'</a>,
--   <a>describeScalingPoliciesResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:scalingPolicies:DescribeScalingPoliciesResponse'</a>,
--   <a>describeScalingPoliciesResponse_scalingPolicies</a> - A collection
--   of objects containing the scaling policies matching the request.
--   
--   <a>$sel:httpStatus:DescribeScalingPoliciesResponse'</a>,
--   <a>describeScalingPoliciesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScalingPoliciesResponse :: Int -> DescribeScalingPoliciesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeScalingPoliciesResponse_nextToken :: Lens' DescribeScalingPoliciesResponse (Maybe Text)

-- | A collection of objects containing the scaling policies matching the
--   request.
describeScalingPoliciesResponse_scalingPolicies :: Lens' DescribeScalingPoliciesResponse (Maybe [ScalingPolicy])

-- | The response's http status code.
describeScalingPoliciesResponse_httpStatus :: Lens' DescribeScalingPoliciesResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPolicies
instance GHC.Show.Show Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPolicies
instance GHC.Read.Read Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPolicies
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPolicies
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPoliciesResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPoliciesResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPoliciesResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPoliciesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPolicies
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPoliciesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPolicies
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPolicies
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPolicies
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPolicies
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPolicies
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPolicies
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeScalingPolicies.DescribeScalingPolicies


-- | Retrieves a fleet's runtime configuration settings. The runtime
--   configuration tells GameLift which server processes to run (and how)
--   on each instance in the fleet.
--   
--   To get the runtime configuration that is currently in forces for a
--   fleet, provide the fleet ID.
--   
--   If successful, a RuntimeConfiguration object is returned for the
--   requested fleet. If the requested fleet has been deleted, the result
--   set is empty.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <a>Running multiple processes on a fleet</a>
--   
--   <b>Related actions</b>
--   
--   ListFleets | DescribeEC2InstanceLimits | DescribeFleetAttributes |
--   DescribeFleetCapacity | DescribeFleetEvents |
--   DescribeFleetLocationAttributes | DescribeFleetPortSettings |
--   DescribeFleetUtilization | DescribeRuntimeConfiguration |
--   DescribeScalingPolicies | <a>All APIs by task</a>
module Network.AWS.GameLift.DescribeRuntimeConfiguration

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeRuntimeConfiguration</a> smart constructor.
data DescribeRuntimeConfiguration
DescribeRuntimeConfiguration' :: Text -> DescribeRuntimeConfiguration

-- | A unique identifier for the fleet to get the runtime configuration
--   for. You can use either the fleet ID or ARN value.
[$sel:fleetId:DescribeRuntimeConfiguration'] :: DescribeRuntimeConfiguration -> Text

-- | Create a value of <a>DescribeRuntimeConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DescribeRuntimeConfiguration'</a>,
--   <a>describeRuntimeConfiguration_fleetId</a> - A unique identifier for
--   the fleet to get the runtime configuration for. You can use either the
--   fleet ID or ARN value.
newDescribeRuntimeConfiguration :: Text -> DescribeRuntimeConfiguration

-- | A unique identifier for the fleet to get the runtime configuration
--   for. You can use either the fleet ID or ARN value.
describeRuntimeConfiguration_fleetId :: Lens' DescribeRuntimeConfiguration Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeRuntimeConfigurationResponse</a> smart
--   constructor.
data DescribeRuntimeConfigurationResponse
DescribeRuntimeConfigurationResponse' :: Maybe RuntimeConfiguration -> Int -> DescribeRuntimeConfigurationResponse

-- | Instructions that describe how server processes should be launched and
--   maintained on each instance in the fleet.
[$sel:runtimeConfiguration:DescribeRuntimeConfigurationResponse'] :: DescribeRuntimeConfigurationResponse -> Maybe RuntimeConfiguration

-- | The response's http status code.
[$sel:httpStatus:DescribeRuntimeConfigurationResponse'] :: DescribeRuntimeConfigurationResponse -> Int

-- | Create a value of <a>DescribeRuntimeConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:runtimeConfiguration:DescribeRuntimeConfigurationResponse'</a>,
--   <a>describeRuntimeConfigurationResponse_runtimeConfiguration</a> -
--   Instructions that describe how server processes should be launched and
--   maintained on each instance in the fleet.
--   
--   <a>$sel:httpStatus:DescribeRuntimeConfigurationResponse'</a>,
--   <a>describeRuntimeConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRuntimeConfigurationResponse :: Int -> DescribeRuntimeConfigurationResponse

-- | Instructions that describe how server processes should be launched and
--   maintained on each instance in the fleet.
describeRuntimeConfigurationResponse_runtimeConfiguration :: Lens' DescribeRuntimeConfigurationResponse (Maybe RuntimeConfiguration)

-- | The response's http status code.
describeRuntimeConfigurationResponse_httpStatus :: Lens' DescribeRuntimeConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfiguration
instance GHC.Show.Show Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfiguration
instance GHC.Read.Read Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfiguration
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfigurationResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfigurationResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfigurationResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeRuntimeConfiguration.DescribeRuntimeConfiguration


-- | Retrieves properties for one or more player sessions.
--   
--   This action can be used in the following ways:
--   
--   <ul>
--   <li>To retrieve a specific player session, provide the player session
--   ID only.</li>
--   <li>To retrieve all player sessions in a game session, provide the
--   game session ID only.</li>
--   <li>To retrieve all player sessions for a specific player, provide a
--   player ID only.</li>
--   </ul>
--   
--   To request player sessions, specify either a player session ID, game
--   session ID, or player ID. You can filter this request by player
--   session status. Use the pagination parameters to retrieve results as a
--   set of sequential pages.
--   
--   If successful, a <tt>PlayerSession</tt> object is returned for each
--   session that matches the request.
--   
--   <i>Available in Amazon GameLift Local.</i>
--   
--   <b>Related actions</b>
--   
--   CreatePlayerSession | CreatePlayerSessions | DescribePlayerSessions |
--   StartGameSessionPlacement | DescribeGameSessionPlacement | <a>All APIs
--   by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribePlayerSessions

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribePlayerSessions</a> smart constructor.
data DescribePlayerSessions
DescribePlayerSessions' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribePlayerSessions

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value. If a player session ID is specified, this parameter is
--   ignored.
[$sel:nextToken:DescribePlayerSessions'] :: DescribePlayerSessions -> Maybe Text

-- | Player session status to filter results on.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
[$sel:playerSessionStatusFilter:DescribePlayerSessions'] :: DescribePlayerSessions -> Maybe Text

-- | A unique identifier for a player to retrieve player sessions for.
[$sel:playerId:DescribePlayerSessions'] :: DescribePlayerSessions -> Maybe Text

-- | A unique identifier for a player session to retrieve.
[$sel:playerSessionId:DescribePlayerSessions'] :: DescribePlayerSessions -> Maybe Text

-- | A unique identifier for the game session to retrieve player sessions
--   for.
[$sel:gameSessionId:DescribePlayerSessions'] :: DescribePlayerSessions -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. If a
--   player session ID is specified, this parameter is ignored.
[$sel:limit:DescribePlayerSessions'] :: DescribePlayerSessions -> Maybe Natural

-- | Create a value of <a>DescribePlayerSessions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePlayerSessions'</a>,
--   <a>describePlayerSessions_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value. If a player
--   session ID is specified, this parameter is ignored.
--   
--   <a>$sel:playerSessionStatusFilter:DescribePlayerSessions'</a>,
--   <a>describePlayerSessions_playerSessionStatusFilter</a> - Player
--   session status to filter results on.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
--   
--   <a>$sel:playerId:DescribePlayerSessions'</a>,
--   <a>describePlayerSessions_playerId</a> - A unique identifier for a
--   player to retrieve player sessions for.
--   
--   <a>$sel:playerSessionId:DescribePlayerSessions'</a>,
--   <a>describePlayerSessions_playerSessionId</a> - A unique identifier
--   for a player session to retrieve.
--   
--   <a>$sel:gameSessionId:DescribePlayerSessions'</a>,
--   <a>describePlayerSessions_gameSessionId</a> - A unique identifier for
--   the game session to retrieve player sessions for.
--   
--   <a>$sel:limit:DescribePlayerSessions'</a>,
--   <a>describePlayerSessions_limit</a> - The maximum number of results to
--   return. Use this parameter with <tt>NextToken</tt> to get results as a
--   set of sequential pages. If a player session ID is specified, this
--   parameter is ignored.
newDescribePlayerSessions :: DescribePlayerSessions

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value. If a player session ID is specified, this parameter is
--   ignored.
describePlayerSessions_nextToken :: Lens' DescribePlayerSessions (Maybe Text)

-- | Player session status to filter results on.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
describePlayerSessions_playerSessionStatusFilter :: Lens' DescribePlayerSessions (Maybe Text)

-- | A unique identifier for a player to retrieve player sessions for.
describePlayerSessions_playerId :: Lens' DescribePlayerSessions (Maybe Text)

-- | A unique identifier for a player session to retrieve.
describePlayerSessions_playerSessionId :: Lens' DescribePlayerSessions (Maybe Text)

-- | A unique identifier for the game session to retrieve player sessions
--   for.
describePlayerSessions_gameSessionId :: Lens' DescribePlayerSessions (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. If a
--   player session ID is specified, this parameter is ignored.
describePlayerSessions_limit :: Lens' DescribePlayerSessions (Maybe Natural)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribePlayerSessionsResponse</a> smart
--   constructor.
data DescribePlayerSessionsResponse
DescribePlayerSessionsResponse' :: Maybe Text -> Maybe [PlayerSession] -> Int -> DescribePlayerSessionsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribePlayerSessionsResponse'] :: DescribePlayerSessionsResponse -> Maybe Text

-- | A collection of objects containing properties for each player session
--   that matches the request.
[$sel:playerSessions:DescribePlayerSessionsResponse'] :: DescribePlayerSessionsResponse -> Maybe [PlayerSession]

-- | The response's http status code.
[$sel:httpStatus:DescribePlayerSessionsResponse'] :: DescribePlayerSessionsResponse -> Int

-- | Create a value of <a>DescribePlayerSessionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePlayerSessions'</a>,
--   <a>describePlayerSessionsResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:playerSessions:DescribePlayerSessionsResponse'</a>,
--   <a>describePlayerSessionsResponse_playerSessions</a> - A collection of
--   objects containing properties for each player session that matches the
--   request.
--   
--   <a>$sel:httpStatus:DescribePlayerSessionsResponse'</a>,
--   <a>describePlayerSessionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribePlayerSessionsResponse :: Int -> DescribePlayerSessionsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describePlayerSessionsResponse_nextToken :: Lens' DescribePlayerSessionsResponse (Maybe Text)

-- | A collection of objects containing properties for each player session
--   that matches the request.
describePlayerSessionsResponse_playerSessions :: Lens' DescribePlayerSessionsResponse (Maybe [PlayerSession])

-- | The response's http status code.
describePlayerSessionsResponse_httpStatus :: Lens' DescribePlayerSessionsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessions
instance GHC.Show.Show Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessions
instance GHC.Read.Read Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessions
instance GHC.Classes.Eq Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessions
instance GHC.Generics.Generic Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessionsResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessionsResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessionsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessions
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessions
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessions
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessions
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessions
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribePlayerSessions.DescribePlayerSessions


-- | Retrieves the details for FlexMatch matchmaking rule sets. You can
--   request all existing rule sets for the Region, or provide a list of
--   one or more rule set names. When requesting multiple items, use the
--   pagination parameters to retrieve results as a set of sequential
--   pages. If successful, a rule set is returned for each requested name.
--   
--   <b>Learn more</b>
--   
--   <ul>
--   <li><a>Build a rule set</a></li>
--   </ul>
--   
--   <b>Related actions</b>
--   
--   CreateMatchmakingConfiguration | DescribeMatchmakingConfigurations |
--   UpdateMatchmakingConfiguration | DeleteMatchmakingConfiguration |
--   CreateMatchmakingRuleSet | DescribeMatchmakingRuleSets |
--   ValidateMatchmakingRuleSet | DeleteMatchmakingRuleSet | <a>All APIs by
--   task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribeMatchmakingRuleSets

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeMatchmakingRuleSets</a> smart constructor.
data DescribeMatchmakingRuleSets
DescribeMatchmakingRuleSets' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe Natural -> DescribeMatchmakingRuleSets

-- | A list of one or more matchmaking rule set names to retrieve details
--   for. (Note: The rule set name is different from the optional "name"
--   field in the rule set body.) You can use either the rule set name or
--   ARN value.
[$sel:names:DescribeMatchmakingRuleSets'] :: DescribeMatchmakingRuleSets -> Maybe (NonEmpty Text)

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:DescribeMatchmakingRuleSets'] :: DescribeMatchmakingRuleSets -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:DescribeMatchmakingRuleSets'] :: DescribeMatchmakingRuleSets -> Maybe Natural

-- | Create a value of <a>DescribeMatchmakingRuleSets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeMatchmakingRuleSets'</a>,
--   <a>describeMatchmakingRuleSets_names</a> - A list of one or more
--   matchmaking rule set names to retrieve details for. (Note: The rule
--   set name is different from the optional "name" field in the rule set
--   body.) You can use either the rule set name or ARN value.
--   
--   <a>$sel:nextToken:DescribeMatchmakingRuleSets'</a>,
--   <a>describeMatchmakingRuleSets_nextToken</a> - A token that indicates
--   the start of the next sequential page of results. Use the token that
--   is returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:limit:DescribeMatchmakingRuleSets'</a>,
--   <a>describeMatchmakingRuleSets_limit</a> - The maximum number of
--   results to return. Use this parameter with <tt>NextToken</tt> to get
--   results as a set of sequential pages.
newDescribeMatchmakingRuleSets :: DescribeMatchmakingRuleSets

-- | A list of one or more matchmaking rule set names to retrieve details
--   for. (Note: The rule set name is different from the optional "name"
--   field in the rule set body.) You can use either the rule set name or
--   ARN value.
describeMatchmakingRuleSets_names :: Lens' DescribeMatchmakingRuleSets (Maybe (NonEmpty Text))

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeMatchmakingRuleSets_nextToken :: Lens' DescribeMatchmakingRuleSets (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeMatchmakingRuleSets_limit :: Lens' DescribeMatchmakingRuleSets (Maybe Natural)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeMatchmakingRuleSetsResponse</a> smart
--   constructor.
data DescribeMatchmakingRuleSetsResponse
DescribeMatchmakingRuleSetsResponse' :: Maybe Text -> Int -> [MatchmakingRuleSet] -> DescribeMatchmakingRuleSetsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeMatchmakingRuleSetsResponse'] :: DescribeMatchmakingRuleSetsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeMatchmakingRuleSetsResponse'] :: DescribeMatchmakingRuleSetsResponse -> Int

-- | A collection of requested matchmaking rule set objects.
[$sel:ruleSets:DescribeMatchmakingRuleSetsResponse'] :: DescribeMatchmakingRuleSetsResponse -> [MatchmakingRuleSet]

-- | Create a value of <a>DescribeMatchmakingRuleSetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeMatchmakingRuleSets'</a>,
--   <a>describeMatchmakingRuleSetsResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:httpStatus:DescribeMatchmakingRuleSetsResponse'</a>,
--   <a>describeMatchmakingRuleSetsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:ruleSets:DescribeMatchmakingRuleSetsResponse'</a>,
--   <a>describeMatchmakingRuleSetsResponse_ruleSets</a> - A collection of
--   requested matchmaking rule set objects.
newDescribeMatchmakingRuleSetsResponse :: Int -> DescribeMatchmakingRuleSetsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeMatchmakingRuleSetsResponse_nextToken :: Lens' DescribeMatchmakingRuleSetsResponse (Maybe Text)

-- | The response's http status code.
describeMatchmakingRuleSetsResponse_httpStatus :: Lens' DescribeMatchmakingRuleSetsResponse Int

-- | A collection of requested matchmaking rule set objects.
describeMatchmakingRuleSetsResponse_ruleSets :: Lens' DescribeMatchmakingRuleSetsResponse [MatchmakingRuleSet]
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSets
instance GHC.Show.Show Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSets
instance GHC.Read.Read Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSets
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSets
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSetsResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSetsResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSetsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSets
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSetsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSets
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSets
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSets
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSets
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSets
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeMatchmakingRuleSets.DescribeMatchmakingRuleSets


-- | Retrieves the details of FlexMatch matchmaking configurations.
--   
--   This operation offers the following options: (1) retrieve all
--   matchmaking configurations, (2) retrieve configurations for a
--   specified list, or (3) retrieve all configurations that use a
--   specified rule set name. When requesting multiple items, use the
--   pagination parameters to retrieve results as a set of sequential
--   pages.
--   
--   If successful, a configuration is returned for each requested name.
--   When specifying a list of names, only configurations that currently
--   exist are returned.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up FlexMatch matchmakers</a>
--   
--   <b>Related actions</b>
--   
--   CreateMatchmakingConfiguration | DescribeMatchmakingConfigurations |
--   UpdateMatchmakingConfiguration | DeleteMatchmakingConfiguration |
--   CreateMatchmakingRuleSet | DescribeMatchmakingRuleSets |
--   ValidateMatchmakingRuleSet | DeleteMatchmakingRuleSet | <a>All APIs by
--   task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribeMatchmakingConfigurations

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeMatchmakingConfigurations</a> smart
--   constructor.
data DescribeMatchmakingConfigurations
DescribeMatchmakingConfigurations' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeMatchmakingConfigurations

-- | A unique identifier for the matchmaking configuration(s) to retrieve.
--   You can use either the configuration name or ARN value. To request all
--   existing configurations, leave this parameter empty.
[$sel:names:DescribeMatchmakingConfigurations'] :: DescribeMatchmakingConfigurations -> Maybe [Text]

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:DescribeMatchmakingConfigurations'] :: DescribeMatchmakingConfigurations -> Maybe Text

-- | A unique identifier for the matchmaking rule set. You can use either
--   the rule set name or ARN value. Use this parameter to retrieve all
--   matchmaking configurations that use this rule set.
[$sel:ruleSetName:DescribeMatchmakingConfigurations'] :: DescribeMatchmakingConfigurations -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   parameter is limited to 10.
[$sel:limit:DescribeMatchmakingConfigurations'] :: DescribeMatchmakingConfigurations -> Maybe Natural

-- | Create a value of <a>DescribeMatchmakingConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeMatchmakingConfigurations'</a>,
--   <a>describeMatchmakingConfigurations_names</a> - A unique identifier
--   for the matchmaking configuration(s) to retrieve. You can use either
--   the configuration name or ARN value. To request all existing
--   configurations, leave this parameter empty.
--   
--   <a>$sel:nextToken:DescribeMatchmakingConfigurations'</a>,
--   <a>describeMatchmakingConfigurations_nextToken</a> - A token that
--   indicates the start of the next sequential page of results. Use the
--   token that is returned with a previous call to this operation. To
--   start at the beginning of the result set, do not specify a value.
--   
--   <a>$sel:ruleSetName:DescribeMatchmakingConfigurations'</a>,
--   <a>describeMatchmakingConfigurations_ruleSetName</a> - A unique
--   identifier for the matchmaking rule set. You can use either the rule
--   set name or ARN value. Use this parameter to retrieve all matchmaking
--   configurations that use this rule set.
--   
--   <a>$sel:limit:DescribeMatchmakingConfigurations'</a>,
--   <a>describeMatchmakingConfigurations_limit</a> - The maximum number of
--   results to return. Use this parameter with <tt>NextToken</tt> to get
--   results as a set of sequential pages. This parameter is limited to 10.
newDescribeMatchmakingConfigurations :: DescribeMatchmakingConfigurations

-- | A unique identifier for the matchmaking configuration(s) to retrieve.
--   You can use either the configuration name or ARN value. To request all
--   existing configurations, leave this parameter empty.
describeMatchmakingConfigurations_names :: Lens' DescribeMatchmakingConfigurations (Maybe [Text])

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeMatchmakingConfigurations_nextToken :: Lens' DescribeMatchmakingConfigurations (Maybe Text)

-- | A unique identifier for the matchmaking rule set. You can use either
--   the rule set name or ARN value. Use this parameter to retrieve all
--   matchmaking configurations that use this rule set.
describeMatchmakingConfigurations_ruleSetName :: Lens' DescribeMatchmakingConfigurations (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   parameter is limited to 10.
describeMatchmakingConfigurations_limit :: Lens' DescribeMatchmakingConfigurations (Maybe Natural)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeMatchmakingConfigurationsResponse</a> smart
--   constructor.
data DescribeMatchmakingConfigurationsResponse
DescribeMatchmakingConfigurationsResponse' :: Maybe Text -> Maybe [MatchmakingConfiguration] -> Int -> DescribeMatchmakingConfigurationsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeMatchmakingConfigurationsResponse'] :: DescribeMatchmakingConfigurationsResponse -> Maybe Text

-- | A collection of requested matchmaking configurations.
[$sel:configurations:DescribeMatchmakingConfigurationsResponse'] :: DescribeMatchmakingConfigurationsResponse -> Maybe [MatchmakingConfiguration]

-- | The response's http status code.
[$sel:httpStatus:DescribeMatchmakingConfigurationsResponse'] :: DescribeMatchmakingConfigurationsResponse -> Int

-- | Create a value of <a>DescribeMatchmakingConfigurationsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeMatchmakingConfigurations'</a>,
--   <a>describeMatchmakingConfigurationsResponse_nextToken</a> - A token
--   that indicates where to resume retrieving results on the next call to
--   this operation. If no token is returned, these results represent the
--   end of the list.
--   
--   <a>$sel:configurations:DescribeMatchmakingConfigurationsResponse'</a>,
--   <a>describeMatchmakingConfigurationsResponse_configurations</a> - A
--   collection of requested matchmaking configurations.
--   
--   <a>$sel:httpStatus:DescribeMatchmakingConfigurationsResponse'</a>,
--   <a>describeMatchmakingConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeMatchmakingConfigurationsResponse :: Int -> DescribeMatchmakingConfigurationsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeMatchmakingConfigurationsResponse_nextToken :: Lens' DescribeMatchmakingConfigurationsResponse (Maybe Text)

-- | A collection of requested matchmaking configurations.
describeMatchmakingConfigurationsResponse_configurations :: Lens' DescribeMatchmakingConfigurationsResponse (Maybe [MatchmakingConfiguration])

-- | The response's http status code.
describeMatchmakingConfigurationsResponse_httpStatus :: Lens' DescribeMatchmakingConfigurationsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurations
instance GHC.Show.Show Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurations
instance GHC.Read.Read Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurations
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurations
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurationsResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurationsResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurationsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurations
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurations
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurations
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurations
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurations
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeMatchmakingConfigurations.DescribeMatchmakingConfigurations


-- | Retrieves one or more matchmaking tickets. Use this operation to
--   retrieve ticket information, including--after a successful match is
--   made--connection information for the resulting new game session.
--   
--   To request matchmaking tickets, provide a list of up to 10 ticket IDs.
--   If the request is successful, a ticket object is returned for each
--   requested ID that currently exists.
--   
--   This operation is not designed to be continually called to track
--   matchmaking ticket status. This practice can cause you to exceed your
--   API limit, which results in errors. Instead, as a best practice, set
--   up an Amazon Simple Notification Service (SNS) to receive
--   notifications, and provide the topic ARN in the matchmaking
--   configuration. Continuously poling ticket status with
--   DescribeMatchmaking should only be used for games in development with
--   low matchmaking usage.
--   
--   <b>Learn more</b>
--   
--   <a>Add FlexMatch to a game client</a>
--   
--   <a>Set Up FlexMatch event notification</a>
--   
--   <b>Related actions</b>
--   
--   StartMatchmaking | DescribeMatchmaking | StopMatchmaking | AcceptMatch
--   | StartMatchBackfill | <a>All APIs by task</a>
module Network.AWS.GameLift.DescribeMatchmaking

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeMatchmaking</a> smart constructor.
data DescribeMatchmaking
DescribeMatchmaking' :: [Text] -> DescribeMatchmaking

-- | A unique identifier for a matchmaking ticket. You can include up to 10
--   ID values.
[$sel:ticketIds:DescribeMatchmaking'] :: DescribeMatchmaking -> [Text]

-- | Create a value of <a>DescribeMatchmaking</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ticketIds:DescribeMatchmaking'</a>,
--   <a>describeMatchmaking_ticketIds</a> - A unique identifier for a
--   matchmaking ticket. You can include up to 10 ID values.
newDescribeMatchmaking :: DescribeMatchmaking

-- | A unique identifier for a matchmaking ticket. You can include up to 10
--   ID values.
describeMatchmaking_ticketIds :: Lens' DescribeMatchmaking [Text]

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeMatchmakingResponse</a> smart constructor.
data DescribeMatchmakingResponse
DescribeMatchmakingResponse' :: Maybe [MatchmakingTicket] -> Int -> DescribeMatchmakingResponse

-- | A collection of existing matchmaking ticket objects matching the
--   request.
[$sel:ticketList:DescribeMatchmakingResponse'] :: DescribeMatchmakingResponse -> Maybe [MatchmakingTicket]

-- | The response's http status code.
[$sel:httpStatus:DescribeMatchmakingResponse'] :: DescribeMatchmakingResponse -> Int

-- | Create a value of <a>DescribeMatchmakingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ticketList:DescribeMatchmakingResponse'</a>,
--   <a>describeMatchmakingResponse_ticketList</a> - A collection of
--   existing matchmaking ticket objects matching the request.
--   
--   <a>$sel:httpStatus:DescribeMatchmakingResponse'</a>,
--   <a>describeMatchmakingResponse_httpStatus</a> - The response's http
--   status code.
newDescribeMatchmakingResponse :: Int -> DescribeMatchmakingResponse

-- | A collection of existing matchmaking ticket objects matching the
--   request.
describeMatchmakingResponse_ticketList :: Lens' DescribeMatchmakingResponse (Maybe [MatchmakingTicket])

-- | The response's http status code.
describeMatchmakingResponse_httpStatus :: Lens' DescribeMatchmakingResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmaking
instance GHC.Show.Show Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmaking
instance GHC.Read.Read Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmaking
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmaking
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmakingResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmakingResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmakingResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmakingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmaking
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmakingResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmaking
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmaking
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmaking
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmaking
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmaking
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeMatchmaking.DescribeMatchmaking


-- | Retrieves information about a fleet's instances, including instance
--   IDs, connection data, and status.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To get information on all instances that are deployed to a fleet's
--   home Region, provide the fleet ID.</li>
--   <li>To get information on all instances that are deployed to a fleet's
--   remote location, provide the fleet ID and location name.</li>
--   <li>To get information on a specific instance in a fleet, provide the
--   fleet ID and instance ID.</li>
--   </ul>
--   
--   Use the pagination parameters to retrieve results as a set of
--   sequential pages.
--   
--   If successful, an <tt>Instance</tt> object is returned for each
--   requested instance. Instances are not returned in any particular
--   order.
--   
--   <b>Learn more</b>
--   
--   <a>Remotely Access Fleet Instances</a>
--   
--   <a>Debug Fleet Issues</a>
--   
--   <b>Related actions</b>
--   
--   DescribeInstances | GetInstanceAccess | DescribeEC2InstanceLimits |
--   <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribeInstances

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeInstances</a> smart constructor.
data DescribeInstances
DescribeInstances' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> DescribeInstances

-- | A unique identifier for an instance to retrieve. Specify an instance
--   ID or leave blank to retrieve all instances in the fleet.
[$sel:instanceId:DescribeInstances'] :: DescribeInstances -> Maybe Text

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:DescribeInstances'] :: DescribeInstances -> Maybe Text

-- | The name of a location to retrieve instance information for, in the
--   form of an AWS Region code such as <tt>us-west-2</tt>.
[$sel:location:DescribeInstances'] :: DescribeInstances -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:DescribeInstances'] :: DescribeInstances -> Maybe Natural

-- | A unique identifier for the fleet to retrieve instance information
--   for. You can use either the fleet ID or ARN value.
[$sel:fleetId:DescribeInstances'] :: DescribeInstances -> Text

-- | Create a value of <a>DescribeInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:DescribeInstances'</a>,
--   <a>describeInstances_instanceId</a> - A unique identifier for an
--   instance to retrieve. Specify an instance ID or leave blank to
--   retrieve all instances in the fleet.
--   
--   <a>$sel:nextToken:DescribeInstances'</a>,
--   <a>describeInstances_nextToken</a> - A token that indicates the start
--   of the next sequential page of results. Use the token that is returned
--   with a previous call to this operation. To start at the beginning of
--   the result set, do not specify a value.
--   
--   <a>$sel:location:DescribeInstances'</a>,
--   <a>describeInstances_location</a> - The name of a location to retrieve
--   instance information for, in the form of an AWS Region code such as
--   <tt>us-west-2</tt>.
--   
--   <a>$sel:limit:DescribeInstances'</a>, <a>describeInstances_limit</a> -
--   The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
--   
--   <a>$sel:fleetId:DescribeInstances'</a>,
--   <a>describeInstances_fleetId</a> - A unique identifier for the fleet
--   to retrieve instance information for. You can use either the fleet ID
--   or ARN value.
newDescribeInstances :: Text -> DescribeInstances

-- | A unique identifier for an instance to retrieve. Specify an instance
--   ID or leave blank to retrieve all instances in the fleet.
describeInstances_instanceId :: Lens' DescribeInstances (Maybe Text)

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeInstances_nextToken :: Lens' DescribeInstances (Maybe Text)

-- | The name of a location to retrieve instance information for, in the
--   form of an AWS Region code such as <tt>us-west-2</tt>.
describeInstances_location :: Lens' DescribeInstances (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeInstances_limit :: Lens' DescribeInstances (Maybe Natural)

-- | A unique identifier for the fleet to retrieve instance information
--   for. You can use either the fleet ID or ARN value.
describeInstances_fleetId :: Lens' DescribeInstances Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeInstancesResponse</a> smart constructor.
data DescribeInstancesResponse
DescribeInstancesResponse' :: Maybe Text -> Maybe [Instance] -> Int -> DescribeInstancesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeInstancesResponse'] :: DescribeInstancesResponse -> Maybe Text

-- | A collection of objects containing properties for each instance
--   returned.
[$sel:instances:DescribeInstancesResponse'] :: DescribeInstancesResponse -> Maybe [Instance]

-- | The response's http status code.
[$sel:httpStatus:DescribeInstancesResponse'] :: DescribeInstancesResponse -> Int

-- | Create a value of <a>DescribeInstancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeInstances'</a>,
--   <a>describeInstancesResponse_nextToken</a> - A token that indicates
--   where to resume retrieving results on the next call to this operation.
--   If no token is returned, these results represent the end of the list.
--   
--   <a>$sel:instances:DescribeInstancesResponse'</a>,
--   <a>describeInstancesResponse_instances</a> - A collection of objects
--   containing properties for each instance returned.
--   
--   <a>$sel:httpStatus:DescribeInstancesResponse'</a>,
--   <a>describeInstancesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeInstancesResponse :: Int -> DescribeInstancesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeInstancesResponse_nextToken :: Lens' DescribeInstancesResponse (Maybe Text)

-- | A collection of objects containing properties for each instance
--   returned.
describeInstancesResponse_instances :: Lens' DescribeInstancesResponse (Maybe [Instance])

-- | The response's http status code.
describeInstancesResponse_httpStatus :: Lens' DescribeInstancesResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeInstances.DescribeInstances
instance GHC.Show.Show Network.AWS.GameLift.DescribeInstances.DescribeInstances
instance GHC.Read.Read Network.AWS.GameLift.DescribeInstances.DescribeInstances
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeInstances.DescribeInstances
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeInstances.DescribeInstancesResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeInstances.DescribeInstancesResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeInstances.DescribeInstancesResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeInstances.DescribeInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeInstances.DescribeInstances
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeInstances.DescribeInstancesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribeInstances.DescribeInstances
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeInstances.DescribeInstances
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeInstances.DescribeInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeInstances.DescribeInstances
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeInstances.DescribeInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeInstances.DescribeInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeInstances.DescribeInstances


-- | Retrieves a set of one or more game sessions in a specific fleet
--   location. You can optionally filter the results by current game
--   session status. Alternatively, use SearchGameSessions to request a set
--   of active game sessions that are filtered by certain criteria. To
--   retrieve the protection policy for game sessions, use
--   DescribeGameSessionDetails.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To retrieve all game sessions that are currently running on all
--   locations in a fleet, provide a fleet or alias ID, with an optional
--   status filter. This approach returns all game sessions in the fleet's
--   home Region and all remote locations.</li>
--   <li>To retrieve all game sessions that are currently running on a
--   specific fleet location, provide a fleet or alias ID and a location
--   name, with optional status filter. The location can be the fleet's
--   home Region or any remote location.</li>
--   <li>To retrieve a specific game session, provide the game session ID.
--   This approach looks for the game session ID in all fleets that reside
--   in the AWS Region defined in the request.</li>
--   </ul>
--   
--   Use the pagination parameters to retrieve results as a set of
--   sequential pages.
--   
--   If successful, a <tt>GameSession</tt> object is returned for each game
--   session that matches the request.
--   
--   <i>Available in GameLift Local.</i>
--   
--   <b>Learn more</b>
--   
--   <a>Find a game session</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails
--   | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribeGameSessions

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessions</a> smart constructor.
data DescribeGameSessions
DescribeGameSessions' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeGameSessions

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:DescribeGameSessions'] :: DescribeGameSessions -> Maybe Text

-- | A unique identifier for the fleet to retrieve game sessions for. You
--   can use either the fleet ID or ARN value.
[$sel:fleetId:DescribeGameSessions'] :: DescribeGameSessions -> Maybe Text

-- | A unique identifier for the game session to retrieve.
[$sel:gameSessionId:DescribeGameSessions'] :: DescribeGameSessions -> Maybe Text

-- | Game session status to filter results on. You can filter on the
--   following states: <tt>ACTIVE</tt>, <tt>TERMINATED</tt>,
--   <tt>ACTIVATING</tt>, and <tt>TERMINATING</tt>. The last two are
--   transitory and used for only very brief periods of time.
[$sel:statusFilter:DescribeGameSessions'] :: DescribeGameSessions -> Maybe Text

-- | A unique identifier for the alias associated with the fleet to
--   retrieve game sessions for. You can use either the alias ID or ARN
--   value.
[$sel:aliasId:DescribeGameSessions'] :: DescribeGameSessions -> Maybe Text

-- | A fleet location to get game session details for. You can specify a
--   fleet's home Region or a remote location. Use the AWS Region code
--   format, such as <tt>us-west-2</tt>.
[$sel:location:DescribeGameSessions'] :: DescribeGameSessions -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:DescribeGameSessions'] :: DescribeGameSessions -> Maybe Natural

-- | Create a value of <a>DescribeGameSessions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeGameSessions'</a>,
--   <a>describeGameSessions_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:fleetId:DescribeGameSessions'</a>,
--   <a>describeGameSessions_fleetId</a> - A unique identifier for the
--   fleet to retrieve game sessions for. You can use either the fleet ID
--   or ARN value.
--   
--   <a>$sel:gameSessionId:DescribeGameSessions'</a>,
--   <a>describeGameSessions_gameSessionId</a> - A unique identifier for
--   the game session to retrieve.
--   
--   <a>$sel:statusFilter:DescribeGameSessions'</a>,
--   <a>describeGameSessions_statusFilter</a> - Game session status to
--   filter results on. You can filter on the following states:
--   <tt>ACTIVE</tt>, <tt>TERMINATED</tt>, <tt>ACTIVATING</tt>, and
--   <tt>TERMINATING</tt>. The last two are transitory and used for only
--   very brief periods of time.
--   
--   <a>$sel:aliasId:DescribeGameSessions'</a>,
--   <a>describeGameSessions_aliasId</a> - A unique identifier for the
--   alias associated with the fleet to retrieve game sessions for. You can
--   use either the alias ID or ARN value.
--   
--   <a>$sel:location:DescribeGameSessions'</a>,
--   <a>describeGameSessions_location</a> - A fleet location to get game
--   session details for. You can specify a fleet's home Region or a remote
--   location. Use the AWS Region code format, such as <tt>us-west-2</tt>.
--   
--   <a>$sel:limit:DescribeGameSessions'</a>,
--   <a>describeGameSessions_limit</a> - The maximum number of results to
--   return. Use this parameter with <tt>NextToken</tt> to get results as a
--   set of sequential pages.
newDescribeGameSessions :: DescribeGameSessions

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeGameSessions_nextToken :: Lens' DescribeGameSessions (Maybe Text)

-- | A unique identifier for the fleet to retrieve game sessions for. You
--   can use either the fleet ID or ARN value.
describeGameSessions_fleetId :: Lens' DescribeGameSessions (Maybe Text)

-- | A unique identifier for the game session to retrieve.
describeGameSessions_gameSessionId :: Lens' DescribeGameSessions (Maybe Text)

-- | Game session status to filter results on. You can filter on the
--   following states: <tt>ACTIVE</tt>, <tt>TERMINATED</tt>,
--   <tt>ACTIVATING</tt>, and <tt>TERMINATING</tt>. The last two are
--   transitory and used for only very brief periods of time.
describeGameSessions_statusFilter :: Lens' DescribeGameSessions (Maybe Text)

-- | A unique identifier for the alias associated with the fleet to
--   retrieve game sessions for. You can use either the alias ID or ARN
--   value.
describeGameSessions_aliasId :: Lens' DescribeGameSessions (Maybe Text)

-- | A fleet location to get game session details for. You can specify a
--   fleet's home Region or a remote location. Use the AWS Region code
--   format, such as <tt>us-west-2</tt>.
describeGameSessions_location :: Lens' DescribeGameSessions (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeGameSessions_limit :: Lens' DescribeGameSessions (Maybe Natural)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionsResponse</a> smart constructor.
data DescribeGameSessionsResponse
DescribeGameSessionsResponse' :: Maybe Text -> Maybe [GameSession] -> Int -> DescribeGameSessionsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeGameSessionsResponse'] :: DescribeGameSessionsResponse -> Maybe Text

-- | A collection of properties for each game session that matches the
--   request.
[$sel:gameSessions:DescribeGameSessionsResponse'] :: DescribeGameSessionsResponse -> Maybe [GameSession]

-- | The response's http status code.
[$sel:httpStatus:DescribeGameSessionsResponse'] :: DescribeGameSessionsResponse -> Int

-- | Create a value of <a>DescribeGameSessionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeGameSessions'</a>,
--   <a>describeGameSessionsResponse_nextToken</a> - A token that indicates
--   where to resume retrieving results on the next call to this operation.
--   If no token is returned, these results represent the end of the list.
--   
--   <a>$sel:gameSessions:DescribeGameSessionsResponse'</a>,
--   <a>describeGameSessionsResponse_gameSessions</a> - A collection of
--   properties for each game session that matches the request.
--   
--   <a>$sel:httpStatus:DescribeGameSessionsResponse'</a>,
--   <a>describeGameSessionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeGameSessionsResponse :: Int -> DescribeGameSessionsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeGameSessionsResponse_nextToken :: Lens' DescribeGameSessionsResponse (Maybe Text)

-- | A collection of properties for each game session that matches the
--   request.
describeGameSessionsResponse_gameSessions :: Lens' DescribeGameSessionsResponse (Maybe [GameSession])

-- | The response's http status code.
describeGameSessionsResponse_httpStatus :: Lens' DescribeGameSessionsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessions
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessions
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessions
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessions
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessionsResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessionsResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessionsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessions
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessions
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessions
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessions
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessions
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeGameSessions.DescribeGameSessions


-- | Retrieves the properties for one or more game session queues. When
--   requesting multiple queues, use the pagination parameters to retrieve
--   results as a set of sequential pages. If successful, a
--   GameSessionQueue object is returned for each requested queue. When
--   specifying a list of queues, objects are returned only for queues that
--   currently exist in the Region.
--   
--   <b>Learn more</b>
--   
--   <a>View Your Queues</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameSessionQueue | DescribeGameSessionQueues |
--   UpdateGameSessionQueue | DeleteGameSessionQueue | <a>All APIs by
--   task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribeGameSessionQueues

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionQueues</a> smart constructor.
data DescribeGameSessionQueues
DescribeGameSessionQueues' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeGameSessionQueues

-- | A list of queue names to retrieve information for. You can use either
--   the queue ID or ARN value. To request settings for all queues, leave
--   this parameter empty.
[$sel:names:DescribeGameSessionQueues'] :: DescribeGameSessionQueues -> Maybe [Text]

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:DescribeGameSessionQueues'] :: DescribeGameSessionQueues -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. You
--   can request up to 50 results.
[$sel:limit:DescribeGameSessionQueues'] :: DescribeGameSessionQueues -> Maybe Natural

-- | Create a value of <a>DescribeGameSessionQueues</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeGameSessionQueues'</a>,
--   <a>describeGameSessionQueues_names</a> - A list of queue names to
--   retrieve information for. You can use either the queue ID or ARN
--   value. To request settings for all queues, leave this parameter empty.
--   
--   <a>$sel:nextToken:DescribeGameSessionQueues'</a>,
--   <a>describeGameSessionQueues_nextToken</a> - A token that indicates
--   the start of the next sequential page of results. Use the token that
--   is returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:limit:DescribeGameSessionQueues'</a>,
--   <a>describeGameSessionQueues_limit</a> - The maximum number of results
--   to return. Use this parameter with <tt>NextToken</tt> to get results
--   as a set of sequential pages. You can request up to 50 results.
newDescribeGameSessionQueues :: DescribeGameSessionQueues

-- | A list of queue names to retrieve information for. You can use either
--   the queue ID or ARN value. To request settings for all queues, leave
--   this parameter empty.
describeGameSessionQueues_names :: Lens' DescribeGameSessionQueues (Maybe [Text])

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeGameSessionQueues_nextToken :: Lens' DescribeGameSessionQueues (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. You
--   can request up to 50 results.
describeGameSessionQueues_limit :: Lens' DescribeGameSessionQueues (Maybe Natural)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionQueuesResponse</a> smart
--   constructor.
data DescribeGameSessionQueuesResponse
DescribeGameSessionQueuesResponse' :: Maybe Text -> Maybe [GameSessionQueue] -> Int -> DescribeGameSessionQueuesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeGameSessionQueuesResponse'] :: DescribeGameSessionQueuesResponse -> Maybe Text

-- | A collection of objects that describe the requested game session
--   queues.
[$sel:gameSessionQueues:DescribeGameSessionQueuesResponse'] :: DescribeGameSessionQueuesResponse -> Maybe [GameSessionQueue]

-- | The response's http status code.
[$sel:httpStatus:DescribeGameSessionQueuesResponse'] :: DescribeGameSessionQueuesResponse -> Int

-- | Create a value of <a>DescribeGameSessionQueuesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeGameSessionQueues'</a>,
--   <a>describeGameSessionQueuesResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:gameSessionQueues:DescribeGameSessionQueuesResponse'</a>,
--   <a>describeGameSessionQueuesResponse_gameSessionQueues</a> - A
--   collection of objects that describe the requested game session queues.
--   
--   <a>$sel:httpStatus:DescribeGameSessionQueuesResponse'</a>,
--   <a>describeGameSessionQueuesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeGameSessionQueuesResponse :: Int -> DescribeGameSessionQueuesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeGameSessionQueuesResponse_nextToken :: Lens' DescribeGameSessionQueuesResponse (Maybe Text)

-- | A collection of objects that describe the requested game session
--   queues.
describeGameSessionQueuesResponse_gameSessionQueues :: Lens' DescribeGameSessionQueuesResponse (Maybe [GameSessionQueue])

-- | The response's http status code.
describeGameSessionQueuesResponse_httpStatus :: Lens' DescribeGameSessionQueuesResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueues
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueues
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueues
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueues
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueuesResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueuesResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueuesResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueuesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueues
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueuesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueues
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueues
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueues
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueues
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueues
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueues
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeGameSessionQueues.DescribeGameSessionQueues


-- | Retrieves information, including current status, about a game session
--   placement request.
--   
--   To get game session placement details, specify the placement ID.
--   
--   If successful, a GameSessionPlacement object is returned.
--   
--   <b>Related actions</b>
--   
--   CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails
--   | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
module Network.AWS.GameLift.DescribeGameSessionPlacement

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionPlacement</a> smart constructor.
data DescribeGameSessionPlacement
DescribeGameSessionPlacement' :: Text -> DescribeGameSessionPlacement

-- | A unique identifier for a game session placement to retrieve.
[$sel:placementId:DescribeGameSessionPlacement'] :: DescribeGameSessionPlacement -> Text

-- | Create a value of <a>DescribeGameSessionPlacement</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:placementId:DescribeGameSessionPlacement'</a>,
--   <a>describeGameSessionPlacement_placementId</a> - A unique identifier
--   for a game session placement to retrieve.
newDescribeGameSessionPlacement :: Text -> DescribeGameSessionPlacement

-- | A unique identifier for a game session placement to retrieve.
describeGameSessionPlacement_placementId :: Lens' DescribeGameSessionPlacement Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionPlacementResponse</a> smart
--   constructor.
data DescribeGameSessionPlacementResponse
DescribeGameSessionPlacementResponse' :: Maybe GameSessionPlacement -> Int -> DescribeGameSessionPlacementResponse

-- | Object that describes the requested game session placement.
[$sel:gameSessionPlacement:DescribeGameSessionPlacementResponse'] :: DescribeGameSessionPlacementResponse -> Maybe GameSessionPlacement

-- | The response's http status code.
[$sel:httpStatus:DescribeGameSessionPlacementResponse'] :: DescribeGameSessionPlacementResponse -> Int

-- | Create a value of <a>DescribeGameSessionPlacementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:gameSessionPlacement:DescribeGameSessionPlacementResponse'</a>,
--   <a>describeGameSessionPlacementResponse_gameSessionPlacement</a> -
--   Object that describes the requested game session placement.
--   
--   <a>$sel:httpStatus:DescribeGameSessionPlacementResponse'</a>,
--   <a>describeGameSessionPlacementResponse_httpStatus</a> - The
--   response's http status code.
newDescribeGameSessionPlacementResponse :: Int -> DescribeGameSessionPlacementResponse

-- | Object that describes the requested game session placement.
describeGameSessionPlacementResponse_gameSessionPlacement :: Lens' DescribeGameSessionPlacementResponse (Maybe GameSessionPlacement)

-- | The response's http status code.
describeGameSessionPlacementResponse_httpStatus :: Lens' DescribeGameSessionPlacementResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacement
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacement
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacement
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacement
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacementResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacementResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacementResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacementResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacement
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacementResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacement
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacement
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacement
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacement
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacement
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeGameSessionPlacement.DescribeGameSessionPlacement


-- | Retrieves additional game session properties, including the game
--   session protection policy in force, a set of one or more game sessions
--   in a specific fleet location. You can optionally filter the results by
--   current game session status. Alternatively, use SearchGameSessions to
--   request a set of active game sessions that are filtered by certain
--   criteria. To retrieve all game session properties, use
--   DescribeGameSessions.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To retrieve details for all game sessions that are currently
--   running on all locations in a fleet, provide a fleet or alias ID, with
--   an optional status filter. This approach returns details from the
--   fleet's home Region and all remote locations.</li>
--   <li>To retrieve details for all game sessions that are currently
--   running on a specific fleet location, provide a fleet or alias ID and
--   a location name, with optional status filter. The location can be the
--   fleet's home Region or any remote location.</li>
--   <li>To retrieve details for a specific game session, provide the game
--   session ID. This approach looks for the game session ID in all fleets
--   that reside in the AWS Region defined in the request.</li>
--   </ul>
--   
--   Use the pagination parameters to retrieve results as a set of
--   sequential pages.
--   
--   If successful, a <tt>GameSessionDetail</tt> object is returned for
--   each game session that matches the request.
--   
--   <b>Learn more</b>
--   
--   <a>Find a game session</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails
--   | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribeGameSessionDetails

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionDetails</a> smart constructor.
data DescribeGameSessionDetails
DescribeGameSessionDetails' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeGameSessionDetails

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:DescribeGameSessionDetails'] :: DescribeGameSessionDetails -> Maybe Text

-- | A unique identifier for the fleet to retrieve all game sessions active
--   on the fleet. You can use either the fleet ID or ARN value.
[$sel:fleetId:DescribeGameSessionDetails'] :: DescribeGameSessionDetails -> Maybe Text

-- | A unique identifier for the game session to retrieve.
[$sel:gameSessionId:DescribeGameSessionDetails'] :: DescribeGameSessionDetails -> Maybe Text

-- | Game session status to filter results on. Possible game session
--   statuses include <tt>ACTIVE</tt>, <tt>TERMINATED</tt>,
--   <tt>ACTIVATING</tt> and <tt>TERMINATING</tt> (the last two are
--   transitory).
[$sel:statusFilter:DescribeGameSessionDetails'] :: DescribeGameSessionDetails -> Maybe Text

-- | A unique identifier for the alias associated with the fleet to
--   retrieve all game sessions for. You can use either the alias ID or ARN
--   value.
[$sel:aliasId:DescribeGameSessionDetails'] :: DescribeGameSessionDetails -> Maybe Text

-- | A fleet location to get game sessions for. You can specify a fleet's
--   home Region or a remote location. Use the AWS Region code format, such
--   as <tt>us-west-2</tt>.
[$sel:location:DescribeGameSessionDetails'] :: DescribeGameSessionDetails -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:DescribeGameSessionDetails'] :: DescribeGameSessionDetails -> Maybe Natural

-- | Create a value of <a>DescribeGameSessionDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_nextToken</a> - A token that indicates
--   the start of the next sequential page of results. Use the token that
--   is returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:fleetId:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_fleetId</a> - A unique identifier for
--   the fleet to retrieve all game sessions active on the fleet. You can
--   use either the fleet ID or ARN value.
--   
--   <a>$sel:gameSessionId:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_gameSessionId</a> - A unique identifier
--   for the game session to retrieve.
--   
--   <a>$sel:statusFilter:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_statusFilter</a> - Game session status
--   to filter results on. Possible game session statuses include
--   <tt>ACTIVE</tt>, <tt>TERMINATED</tt>, <tt>ACTIVATING</tt> and
--   <tt>TERMINATING</tt> (the last two are transitory).
--   
--   <a>$sel:aliasId:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_aliasId</a> - A unique identifier for
--   the alias associated with the fleet to retrieve all game sessions for.
--   You can use either the alias ID or ARN value.
--   
--   <a>$sel:location:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_location</a> - A fleet location to get
--   game sessions for. You can specify a fleet's home Region or a remote
--   location. Use the AWS Region code format, such as <tt>us-west-2</tt>.
--   
--   <a>$sel:limit:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_limit</a> - The maximum number of
--   results to return. Use this parameter with <tt>NextToken</tt> to get
--   results as a set of sequential pages.
newDescribeGameSessionDetails :: DescribeGameSessionDetails

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeGameSessionDetails_nextToken :: Lens' DescribeGameSessionDetails (Maybe Text)

-- | A unique identifier for the fleet to retrieve all game sessions active
--   on the fleet. You can use either the fleet ID or ARN value.
describeGameSessionDetails_fleetId :: Lens' DescribeGameSessionDetails (Maybe Text)

-- | A unique identifier for the game session to retrieve.
describeGameSessionDetails_gameSessionId :: Lens' DescribeGameSessionDetails (Maybe Text)

-- | Game session status to filter results on. Possible game session
--   statuses include <tt>ACTIVE</tt>, <tt>TERMINATED</tt>,
--   <tt>ACTIVATING</tt> and <tt>TERMINATING</tt> (the last two are
--   transitory).
describeGameSessionDetails_statusFilter :: Lens' DescribeGameSessionDetails (Maybe Text)

-- | A unique identifier for the alias associated with the fleet to
--   retrieve all game sessions for. You can use either the alias ID or ARN
--   value.
describeGameSessionDetails_aliasId :: Lens' DescribeGameSessionDetails (Maybe Text)

-- | A fleet location to get game sessions for. You can specify a fleet's
--   home Region or a remote location. Use the AWS Region code format, such
--   as <tt>us-west-2</tt>.
describeGameSessionDetails_location :: Lens' DescribeGameSessionDetails (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeGameSessionDetails_limit :: Lens' DescribeGameSessionDetails (Maybe Natural)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionDetailsResponse</a> smart
--   constructor.
data DescribeGameSessionDetailsResponse
DescribeGameSessionDetailsResponse' :: Maybe Text -> Maybe [GameSessionDetail] -> Int -> DescribeGameSessionDetailsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeGameSessionDetailsResponse'] :: DescribeGameSessionDetailsResponse -> Maybe Text

-- | A collection of properties for each game session that matches the
--   request.
[$sel:gameSessionDetails:DescribeGameSessionDetailsResponse'] :: DescribeGameSessionDetailsResponse -> Maybe [GameSessionDetail]

-- | The response's http status code.
[$sel:httpStatus:DescribeGameSessionDetailsResponse'] :: DescribeGameSessionDetailsResponse -> Int

-- | Create a value of <a>DescribeGameSessionDetailsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetailsResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:gameSessionDetails:DescribeGameSessionDetailsResponse'</a>,
--   <a>describeGameSessionDetailsResponse_gameSessionDetails</a> - A
--   collection of properties for each game session that matches the
--   request.
--   
--   <a>$sel:httpStatus:DescribeGameSessionDetailsResponse'</a>,
--   <a>describeGameSessionDetailsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeGameSessionDetailsResponse :: Int -> DescribeGameSessionDetailsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeGameSessionDetailsResponse_nextToken :: Lens' DescribeGameSessionDetailsResponse (Maybe Text)

-- | A collection of properties for each game session that matches the
--   request.
describeGameSessionDetailsResponse_gameSessionDetails :: Lens' DescribeGameSessionDetailsResponse (Maybe [GameSessionDetail])

-- | The response's http status code.
describeGameSessionDetailsResponse_httpStatus :: Lens' DescribeGameSessionDetailsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetails
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetails
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetails
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetails
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetailsResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetailsResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetailsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetailsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetails
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetailsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetails
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetails
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetails
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetails
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetails
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetails
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeGameSessionDetails.DescribeGameSessionDetails


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Retrieves status information about the Amazon EC2 instances associated
--   with a GameLift FleetIQ game server group. Use this operation to
--   detect when instances are active or not available to host new game
--   servers. If you are looking for instance configuration information,
--   call DescribeGameServerGroup or access the corresponding Auto Scaling
--   group properties.
--   
--   To request status for all instances in the game server group, provide
--   a game server group ID only. To request status for specific instances,
--   provide the game server group ID and one or more instance IDs. Use the
--   pagination parameters to retrieve results in sequential segments. If
--   successful, a collection of <tt>GameServerInstance</tt> objects is
--   returned.
--   
--   This operation is not designed to be called with every game server
--   claim request; this practice can cause you to exceed your API limit,
--   which results in errors. Instead, as a best practice, cache the
--   results and refresh your cache no more than once every 10 seconds.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribeGameServerInstances

-- | <i>See:</i> <a>newDescribeGameServerInstances</a> smart constructor.
data DescribeGameServerInstances
DescribeGameServerInstances' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe Natural -> Text -> DescribeGameServerInstances

-- | The EC2 instance IDs that you want to retrieve status on. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>. To retrieve all instances in the game
--   server group, leave this parameter empty.
[$sel:instanceIds:DescribeGameServerInstances'] :: DescribeGameServerInstances -> Maybe (NonEmpty Text)

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:DescribeGameServerInstances'] :: DescribeGameServerInstances -> Maybe Text

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:DescribeGameServerInstances'] :: DescribeGameServerInstances -> Maybe Natural

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
[$sel:gameServerGroupName:DescribeGameServerInstances'] :: DescribeGameServerInstances -> Text

-- | Create a value of <a>DescribeGameServerInstances</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:DescribeGameServerInstances'</a>,
--   <a>describeGameServerInstances_instanceIds</a> - The EC2 instance IDs
--   that you want to retrieve status on. EC2 instance IDs use a
--   17-character format, for example: <tt>i-1234567890abcdef0</tt>. To
--   retrieve all instances in the game server group, leave this parameter
--   empty.
--   
--   <a>$sel:nextToken:DescribeGameServerInstances'</a>,
--   <a>describeGameServerInstances_nextToken</a> - A token that indicates
--   the start of the next sequential page of results. Use the token that
--   is returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:limit:DescribeGameServerInstances'</a>,
--   <a>describeGameServerInstances_limit</a> - The maximum number of
--   results to return. Use this parameter with <tt>NextToken</tt> to get
--   results as a set of sequential pages.
--   
--   <a>$sel:gameServerGroupName:DescribeGameServerInstances'</a>,
--   <a>describeGameServerInstances_gameServerGroupName</a> - A unique
--   identifier for the game server group. Use either the GameServerGroup
--   name or ARN value.
newDescribeGameServerInstances :: Text -> DescribeGameServerInstances

-- | The EC2 instance IDs that you want to retrieve status on. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>. To retrieve all instances in the game
--   server group, leave this parameter empty.
describeGameServerInstances_instanceIds :: Lens' DescribeGameServerInstances (Maybe (NonEmpty Text))

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeGameServerInstances_nextToken :: Lens' DescribeGameServerInstances (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeGameServerInstances_limit :: Lens' DescribeGameServerInstances (Maybe Natural)

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
describeGameServerInstances_gameServerGroupName :: Lens' DescribeGameServerInstances Text

-- | <i>See:</i> <a>newDescribeGameServerInstancesResponse</a> smart
--   constructor.
data DescribeGameServerInstancesResponse
DescribeGameServerInstancesResponse' :: Maybe Text -> Maybe [GameServerInstance] -> Int -> DescribeGameServerInstancesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeGameServerInstancesResponse'] :: DescribeGameServerInstancesResponse -> Maybe Text

-- | The collection of requested game server instances.
[$sel:gameServerInstances:DescribeGameServerInstancesResponse'] :: DescribeGameServerInstancesResponse -> Maybe [GameServerInstance]

-- | The response's http status code.
[$sel:httpStatus:DescribeGameServerInstancesResponse'] :: DescribeGameServerInstancesResponse -> Int

-- | Create a value of <a>DescribeGameServerInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeGameServerInstances'</a>,
--   <a>describeGameServerInstancesResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:gameServerInstances:DescribeGameServerInstancesResponse'</a>,
--   <a>describeGameServerInstancesResponse_gameServerInstances</a> - The
--   collection of requested game server instances.
--   
--   <a>$sel:httpStatus:DescribeGameServerInstancesResponse'</a>,
--   <a>describeGameServerInstancesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeGameServerInstancesResponse :: Int -> DescribeGameServerInstancesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeGameServerInstancesResponse_nextToken :: Lens' DescribeGameServerInstancesResponse (Maybe Text)

-- | The collection of requested game server instances.
describeGameServerInstancesResponse_gameServerInstances :: Lens' DescribeGameServerInstancesResponse (Maybe [GameServerInstance])

-- | The response's http status code.
describeGameServerInstancesResponse_httpStatus :: Lens' DescribeGameServerInstancesResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstances
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstances
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstances
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstances
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstancesResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstancesResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstancesResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstances
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstancesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstances
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstances
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstances
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeGameServerInstances.DescribeGameServerInstances


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Retrieves information on a game server group. This operation returns
--   only properties related to GameLift FleetIQ. To view or update
--   properties for the corresponding Auto Scaling group, such as launch
--   template, auto scaling policies, and maximum/minimum group size,
--   access the Auto Scaling group directly.
--   
--   To get attributes for a game server group, provide a group name or ARN
--   value. If successful, a GameServerGroup object is returned.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
module Network.AWS.GameLift.DescribeGameServerGroup

-- | <i>See:</i> <a>newDescribeGameServerGroup</a> smart constructor.
data DescribeGameServerGroup
DescribeGameServerGroup' :: Text -> DescribeGameServerGroup

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
[$sel:gameServerGroupName:DescribeGameServerGroup'] :: DescribeGameServerGroup -> Text

-- | Create a value of <a>DescribeGameServerGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroupName:DescribeGameServerGroup'</a>,
--   <a>describeGameServerGroup_gameServerGroupName</a> - A unique
--   identifier for the game server group. Use either the GameServerGroup
--   name or ARN value.
newDescribeGameServerGroup :: Text -> DescribeGameServerGroup

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
describeGameServerGroup_gameServerGroupName :: Lens' DescribeGameServerGroup Text

-- | <i>See:</i> <a>newDescribeGameServerGroupResponse</a> smart
--   constructor.
data DescribeGameServerGroupResponse
DescribeGameServerGroupResponse' :: Maybe GameServerGroup -> Int -> DescribeGameServerGroupResponse

-- | An object with the property settings for the requested game server
--   group resource.
[$sel:gameServerGroup:DescribeGameServerGroupResponse'] :: DescribeGameServerGroupResponse -> Maybe GameServerGroup

-- | The response's http status code.
[$sel:httpStatus:DescribeGameServerGroupResponse'] :: DescribeGameServerGroupResponse -> Int

-- | Create a value of <a>DescribeGameServerGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroup:DescribeGameServerGroupResponse'</a>,
--   <a>describeGameServerGroupResponse_gameServerGroup</a> - An object
--   with the property settings for the requested game server group
--   resource.
--   
--   <a>$sel:httpStatus:DescribeGameServerGroupResponse'</a>,
--   <a>describeGameServerGroupResponse_httpStatus</a> - The response's
--   http status code.
newDescribeGameServerGroupResponse :: Int -> DescribeGameServerGroupResponse

-- | An object with the property settings for the requested game server
--   group resource.
describeGameServerGroupResponse_gameServerGroup :: Lens' DescribeGameServerGroupResponse (Maybe GameServerGroup)

-- | The response's http status code.
describeGameServerGroupResponse_httpStatus :: Lens' DescribeGameServerGroupResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroup
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroup
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroup
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroup
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroupResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroupResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroupResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeGameServerGroup.DescribeGameServerGroup


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Retrieves information for a registered game server. Information
--   includes game server status, health check info, and the instance that
--   the game server is running on.
--   
--   To retrieve game server information, specify the game server ID. If
--   successful, the requested game server object is returned.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   RegisterGameServer | ListGameServers | ClaimGameServer |
--   DescribeGameServer | UpdateGameServer | DeregisterGameServer | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.DescribeGameServer

-- | <i>See:</i> <a>newDescribeGameServer</a> smart constructor.
data DescribeGameServer
DescribeGameServer' :: Text -> Text -> DescribeGameServer

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
[$sel:gameServerGroupName:DescribeGameServer'] :: DescribeGameServer -> Text

-- | A custom string that uniquely identifies the game server information
--   to be retrieved.
[$sel:gameServerId:DescribeGameServer'] :: DescribeGameServer -> Text

-- | Create a value of <a>DescribeGameServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroupName:DescribeGameServer'</a>,
--   <a>describeGameServer_gameServerGroupName</a> - A unique identifier
--   for the game server group where the game server is running. Use either
--   the GameServerGroup name or ARN value.
--   
--   <a>$sel:gameServerId:DescribeGameServer'</a>,
--   <a>describeGameServer_gameServerId</a> - A custom string that uniquely
--   identifies the game server information to be retrieved.
newDescribeGameServer :: Text -> Text -> DescribeGameServer

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
describeGameServer_gameServerGroupName :: Lens' DescribeGameServer Text

-- | A custom string that uniquely identifies the game server information
--   to be retrieved.
describeGameServer_gameServerId :: Lens' DescribeGameServer Text

-- | <i>See:</i> <a>newDescribeGameServerResponse</a> smart constructor.
data DescribeGameServerResponse
DescribeGameServerResponse' :: Maybe GameServer -> Int -> DescribeGameServerResponse

-- | Object that describes the requested game server.
[$sel:gameServer:DescribeGameServerResponse'] :: DescribeGameServerResponse -> Maybe GameServer

-- | The response's http status code.
[$sel:httpStatus:DescribeGameServerResponse'] :: DescribeGameServerResponse -> Int

-- | Create a value of <a>DescribeGameServerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServer:DescribeGameServerResponse'</a>,
--   <a>describeGameServerResponse_gameServer</a> - Object that describes
--   the requested game server.
--   
--   <a>$sel:httpStatus:DescribeGameServerResponse'</a>,
--   <a>describeGameServerResponse_httpStatus</a> - The response's http
--   status code.
newDescribeGameServerResponse :: Int -> DescribeGameServerResponse

-- | Object that describes the requested game server.
describeGameServerResponse_gameServer :: Lens' DescribeGameServerResponse (Maybe GameServer)

-- | The response's http status code.
describeGameServerResponse_httpStatus :: Lens' DescribeGameServerResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameServer.DescribeGameServer
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameServer.DescribeGameServer
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameServer.DescribeGameServer
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameServer.DescribeGameServer
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeGameServer.DescribeGameServerResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeGameServer.DescribeGameServerResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeGameServer.DescribeGameServerResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeGameServer.DescribeGameServerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeGameServer.DescribeGameServer
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameServer.DescribeGameServerResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeGameServer.DescribeGameServer
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeGameServer.DescribeGameServer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeGameServer.DescribeGameServer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeGameServer.DescribeGameServer
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeGameServer.DescribeGameServer
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeGameServer.DescribeGameServer


-- | Retrieves utilization statistics for one or more fleets. Utilization
--   data provides a snapshot of how the fleet's hosting resources are
--   currently being used. For fleets with remote locations, this operation
--   retrieves data for the fleet's home Region only. See
--   DescribeFleetLocationUtilization to get utilization statistics for a
--   fleet's remote locations.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To get utilization data for one or more specific fleets, provide a
--   list of fleet IDs or fleet ARNs.</li>
--   <li>To get utilization data for all fleets, do not provide a fleet
--   identifier.</li>
--   </ul>
--   
--   When requesting multiple fleets, use the pagination parameters to
--   retrieve results as a set of sequential pages.
--   
--   If successful, a FleetUtilization object is returned for each
--   requested fleet ID, unless the fleet identifier is not found. Each
--   fleet utilization object includes a <tt>Location</tt> property, which
--   is set to the fleet's home Region.
--   
--   Some API operations may limit the number of fleet IDs allowed in one
--   request. If a request exceeds this limit, the request fails and the
--   error message includes the maximum allowed.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift Fleets</a>
--   
--   <a>GameLift Metrics for Fleets</a>
--   
--   <b>Related actions</b>
--   
--   ListFleets | DescribeEC2InstanceLimits | DescribeFleetAttributes |
--   DescribeFleetCapacity | DescribeFleetEvents |
--   DescribeFleetLocationAttributes | DescribeFleetPortSettings |
--   DescribeFleetUtilization | DescribeRuntimeConfiguration |
--   DescribeScalingPolicies | <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribeFleetUtilization

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetUtilization</a> smart constructor.
data DescribeFleetUtilization
DescribeFleetUtilization' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> DescribeFleetUtilization

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value. This parameter is ignored when the request specifies one or a
--   list of fleet IDs.
[$sel:nextToken:DescribeFleetUtilization'] :: DescribeFleetUtilization -> Maybe Text

-- | A unique identifier for the fleet(s) to retrieve utilization data for.
--   You can use either the fleet ID or ARN value. To retrieve attributes
--   for all current fleets, do not include this parameter.
[$sel:fleetIds:DescribeFleetUtilization'] :: DescribeFleetUtilization -> Maybe (NonEmpty Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   parameter is ignored when the request specifies one or a list of fleet
--   IDs.
[$sel:limit:DescribeFleetUtilization'] :: DescribeFleetUtilization -> Maybe Natural

-- | Create a value of <a>DescribeFleetUtilization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetUtilization'</a>,
--   <a>describeFleetUtilization_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value. This parameter is
--   ignored when the request specifies one or a list of fleet IDs.
--   
--   <a>$sel:fleetIds:DescribeFleetUtilization'</a>,
--   <a>describeFleetUtilization_fleetIds</a> - A unique identifier for the
--   fleet(s) to retrieve utilization data for. You can use either the
--   fleet ID or ARN value. To retrieve attributes for all current fleets,
--   do not include this parameter.
--   
--   <a>$sel:limit:DescribeFleetUtilization'</a>,
--   <a>describeFleetUtilization_limit</a> - The maximum number of results
--   to return. Use this parameter with <tt>NextToken</tt> to get results
--   as a set of sequential pages. This parameter is ignored when the
--   request specifies one or a list of fleet IDs.
newDescribeFleetUtilization :: DescribeFleetUtilization

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value. This parameter is ignored when the request specifies one or a
--   list of fleet IDs.
describeFleetUtilization_nextToken :: Lens' DescribeFleetUtilization (Maybe Text)

-- | A unique identifier for the fleet(s) to retrieve utilization data for.
--   You can use either the fleet ID or ARN value. To retrieve attributes
--   for all current fleets, do not include this parameter.
describeFleetUtilization_fleetIds :: Lens' DescribeFleetUtilization (Maybe (NonEmpty Text))

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   parameter is ignored when the request specifies one or a list of fleet
--   IDs.
describeFleetUtilization_limit :: Lens' DescribeFleetUtilization (Maybe Natural)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetUtilizationResponse</a> smart
--   constructor.
data DescribeFleetUtilizationResponse
DescribeFleetUtilizationResponse' :: Maybe Text -> Maybe [FleetUtilization] -> Int -> DescribeFleetUtilizationResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeFleetUtilizationResponse'] :: DescribeFleetUtilizationResponse -> Maybe Text

-- | A collection of objects containing utilization information for each
--   requested fleet ID. Utilization objects are returned only for fleets
--   that currently exist.
[$sel:fleetUtilization:DescribeFleetUtilizationResponse'] :: DescribeFleetUtilizationResponse -> Maybe [FleetUtilization]

-- | The response's http status code.
[$sel:httpStatus:DescribeFleetUtilizationResponse'] :: DescribeFleetUtilizationResponse -> Int

-- | Create a value of <a>DescribeFleetUtilizationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetUtilization'</a>,
--   <a>describeFleetUtilizationResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:fleetUtilization:DescribeFleetUtilizationResponse'</a>,
--   <a>describeFleetUtilizationResponse_fleetUtilization</a> - A
--   collection of objects containing utilization information for each
--   requested fleet ID. Utilization objects are returned only for fleets
--   that currently exist.
--   
--   <a>$sel:httpStatus:DescribeFleetUtilizationResponse'</a>,
--   <a>describeFleetUtilizationResponse_httpStatus</a> - The response's
--   http status code.
newDescribeFleetUtilizationResponse :: Int -> DescribeFleetUtilizationResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeFleetUtilizationResponse_nextToken :: Lens' DescribeFleetUtilizationResponse (Maybe Text)

-- | A collection of objects containing utilization information for each
--   requested fleet ID. Utilization objects are returned only for fleets
--   that currently exist.
describeFleetUtilizationResponse_fleetUtilization :: Lens' DescribeFleetUtilizationResponse (Maybe [FleetUtilization])

-- | The response's http status code.
describeFleetUtilizationResponse_httpStatus :: Lens' DescribeFleetUtilizationResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilization
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilization
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilization
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilization
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilizationResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilizationResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilizationResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilizationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilization
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilizationResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilization
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilization
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilization
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilization
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilization
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilization
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeFleetUtilization.DescribeFleetUtilization


-- | Retrieves a fleet's inbound connection permissions. Connection
--   permissions specify the range of IP addresses and port settings that
--   incoming traffic can use to access server processes in the fleet. Game
--   sessions that are running on instances in the fleet must use
--   connections that fall in this range.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To retrieve the inbound connection permissions for a fleet,
--   identify the fleet's unique identifier.</li>
--   <li>To check the status of recent updates to a fleet remote location,
--   specify the fleet ID and a location. Port setting updates can take
--   time to propagate across all locations.</li>
--   </ul>
--   
--   If successful, a set of IpPermission objects is returned for the
--   requested fleet ID. When a location is specified, a pending status is
--   included. If the requested fleet has been deleted, the result set is
--   empty.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <b>Related actions</b>
--   
--   ListFleets | DescribeEC2InstanceLimits | DescribeFleetAttributes |
--   DescribeFleetCapacity | DescribeFleetEvents |
--   DescribeFleetLocationAttributes | DescribeFleetPortSettings |
--   DescribeFleetUtilization | DescribeRuntimeConfiguration |
--   DescribeScalingPolicies | <a>All APIs by task</a>
module Network.AWS.GameLift.DescribeFleetPortSettings

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetPortSettings</a> smart constructor.
data DescribeFleetPortSettings
DescribeFleetPortSettings' :: Maybe Text -> Text -> DescribeFleetPortSettings

-- | A remote location to check for status of port setting updates. Use the
--   AWS Region code format, such as <tt>us-west-2</tt>.
[$sel:location:DescribeFleetPortSettings'] :: DescribeFleetPortSettings -> Maybe Text

-- | A unique identifier for the fleet to retrieve port settings for. You
--   can use either the fleet ID or ARN value.
[$sel:fleetId:DescribeFleetPortSettings'] :: DescribeFleetPortSettings -> Text

-- | Create a value of <a>DescribeFleetPortSettings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:DescribeFleetPortSettings'</a>,
--   <a>describeFleetPortSettings_location</a> - A remote location to check
--   for status of port setting updates. Use the AWS Region code format,
--   such as <tt>us-west-2</tt>.
--   
--   <a>$sel:fleetId:DescribeFleetPortSettings'</a>,
--   <a>describeFleetPortSettings_fleetId</a> - A unique identifier for the
--   fleet to retrieve port settings for. You can use either the fleet ID
--   or ARN value.
newDescribeFleetPortSettings :: Text -> DescribeFleetPortSettings

-- | A remote location to check for status of port setting updates. Use the
--   AWS Region code format, such as <tt>us-west-2</tt>.
describeFleetPortSettings_location :: Lens' DescribeFleetPortSettings (Maybe Text)

-- | A unique identifier for the fleet to retrieve port settings for. You
--   can use either the fleet ID or ARN value.
describeFleetPortSettings_fleetId :: Lens' DescribeFleetPortSettings Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetPortSettingsResponse</a> smart
--   constructor.
data DescribeFleetPortSettingsResponse
DescribeFleetPortSettingsResponse' :: Maybe Text -> Maybe Text -> Maybe LocationUpdateStatus -> Maybe [IpPermission] -> Maybe Text -> Int -> DescribeFleetPortSettingsResponse

-- | A unique identifier for the fleet that was requested.
[$sel:fleetId:DescribeFleetPortSettingsResponse'] :: DescribeFleetPortSettingsResponse -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:DescribeFleetPortSettingsResponse'] :: DescribeFleetPortSettingsResponse -> Maybe Text

-- | The current status of updates to the fleet's port settings in the
--   requested fleet location. A status of <tt>PENDING_UPDATE</tt>
--   indicates that an update was requested for the fleet but has not yet
--   been completed for the location.
[$sel:updateStatus:DescribeFleetPortSettingsResponse'] :: DescribeFleetPortSettingsResponse -> Maybe LocationUpdateStatus

-- | The port settings for the requested fleet ID.
[$sel:inboundPermissions:DescribeFleetPortSettingsResponse'] :: DescribeFleetPortSettingsResponse -> Maybe [IpPermission]

-- | The requested fleet location, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
[$sel:location:DescribeFleetPortSettingsResponse'] :: DescribeFleetPortSettingsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeFleetPortSettingsResponse'] :: DescribeFleetPortSettingsResponse -> Int

-- | Create a value of <a>DescribeFleetPortSettingsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DescribeFleetPortSettings'</a>,
--   <a>describeFleetPortSettingsResponse_fleetId</a> - A unique identifier
--   for the fleet that was requested.
--   
--   <a>$sel:fleetArn:DescribeFleetPortSettingsResponse'</a>,
--   <a>describeFleetPortSettingsResponse_fleetArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift fleet
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:updateStatus:DescribeFleetPortSettingsResponse'</a>,
--   <a>describeFleetPortSettingsResponse_updateStatus</a> - The current
--   status of updates to the fleet's port settings in the requested fleet
--   location. A status of <tt>PENDING_UPDATE</tt> indicates that an update
--   was requested for the fleet but has not yet been completed for the
--   location.
--   
--   <a>$sel:inboundPermissions:DescribeFleetPortSettingsResponse'</a>,
--   <a>describeFleetPortSettingsResponse_inboundPermissions</a> - The port
--   settings for the requested fleet ID.
--   
--   <a>$sel:location:DescribeFleetPortSettings'</a>,
--   <a>describeFleetPortSettingsResponse_location</a> - The requested
--   fleet location, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
--   
--   <a>$sel:httpStatus:DescribeFleetPortSettingsResponse'</a>,
--   <a>describeFleetPortSettingsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeFleetPortSettingsResponse :: Int -> DescribeFleetPortSettingsResponse

-- | A unique identifier for the fleet that was requested.
describeFleetPortSettingsResponse_fleetId :: Lens' DescribeFleetPortSettingsResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
describeFleetPortSettingsResponse_fleetArn :: Lens' DescribeFleetPortSettingsResponse (Maybe Text)

-- | The current status of updates to the fleet's port settings in the
--   requested fleet location. A status of <tt>PENDING_UPDATE</tt>
--   indicates that an update was requested for the fleet but has not yet
--   been completed for the location.
describeFleetPortSettingsResponse_updateStatus :: Lens' DescribeFleetPortSettingsResponse (Maybe LocationUpdateStatus)

-- | The port settings for the requested fleet ID.
describeFleetPortSettingsResponse_inboundPermissions :: Lens' DescribeFleetPortSettingsResponse (Maybe [IpPermission])

-- | The requested fleet location, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
describeFleetPortSettingsResponse_location :: Lens' DescribeFleetPortSettingsResponse (Maybe Text)

-- | The response's http status code.
describeFleetPortSettingsResponse_httpStatus :: Lens' DescribeFleetPortSettingsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettings
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettings
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettings
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettings
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettingsResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettingsResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettingsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettings
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettings
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettings
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettings
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeFleetPortSettings.DescribeFleetPortSettings


-- | Retrieves current usage data for a fleet location. Utilization data
--   provides a snapshot of current game hosting activity at the requested
--   location. Use this operation to retrieve utilization information for a
--   fleet's remote location or home Region (you can also retrieve home
--   Region utilization by calling <tt>DescribeFleetUtilization</tt>).
--   
--   To retrieve utilization data, identify a fleet and location.
--   
--   If successful, a <tt>FleetUtilization</tt> object is returned for the
--   requested fleet location.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <a>GameLift metrics for fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleetLocations | DescribeFleetLocationAttributes |
--   DescribeFleetLocationCapacity | DescribeFleetLocationUtilization |
--   DescribeFleetAttributes | DescribeFleetCapacity |
--   DescribeFleetUtilization | UpdateFleetCapacity | StopFleetActions |
--   DeleteFleetLocations | <a>All APIs by task</a>
module Network.AWS.GameLift.DescribeFleetLocationUtilization

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetLocationUtilization</a> smart
--   constructor.
data DescribeFleetLocationUtilization
DescribeFleetLocationUtilization' :: Text -> Text -> DescribeFleetLocationUtilization

-- | A unique identifier for the fleet to request location utilization for.
--   You can use either the fleet ID or ARN value.
[$sel:fleetId:DescribeFleetLocationUtilization'] :: DescribeFleetLocationUtilization -> Text

-- | The fleet location to retrieve utilization information for. Specify a
--   location in the form of an AWS Region code, such as
--   <tt>us-west-2</tt>.
[$sel:location:DescribeFleetLocationUtilization'] :: DescribeFleetLocationUtilization -> Text

-- | Create a value of <a>DescribeFleetLocationUtilization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DescribeFleetLocationUtilization'</a>,
--   <a>describeFleetLocationUtilization_fleetId</a> - A unique identifier
--   for the fleet to request location utilization for. You can use either
--   the fleet ID or ARN value.
--   
--   <a>$sel:location:DescribeFleetLocationUtilization'</a>,
--   <a>describeFleetLocationUtilization_location</a> - The fleet location
--   to retrieve utilization information for. Specify a location in the
--   form of an AWS Region code, such as <tt>us-west-2</tt>.
newDescribeFleetLocationUtilization :: Text -> Text -> DescribeFleetLocationUtilization

-- | A unique identifier for the fleet to request location utilization for.
--   You can use either the fleet ID or ARN value.
describeFleetLocationUtilization_fleetId :: Lens' DescribeFleetLocationUtilization Text

-- | The fleet location to retrieve utilization information for. Specify a
--   location in the form of an AWS Region code, such as
--   <tt>us-west-2</tt>.
describeFleetLocationUtilization_location :: Lens' DescribeFleetLocationUtilization Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetLocationUtilizationResponse</a> smart
--   constructor.
data DescribeFleetLocationUtilizationResponse
DescribeFleetLocationUtilizationResponse' :: Maybe FleetUtilization -> Int -> DescribeFleetLocationUtilizationResponse

-- | Utilization information for the requested fleet location. Utilization
--   objects are returned only for fleets and locations that currently
--   exist.
[$sel:fleetUtilization:DescribeFleetLocationUtilizationResponse'] :: DescribeFleetLocationUtilizationResponse -> Maybe FleetUtilization

-- | The response's http status code.
[$sel:httpStatus:DescribeFleetLocationUtilizationResponse'] :: DescribeFleetLocationUtilizationResponse -> Int

-- | Create a value of <a>DescribeFleetLocationUtilizationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:fleetUtilization:DescribeFleetLocationUtilizationResponse'</a>,
--   <a>describeFleetLocationUtilizationResponse_fleetUtilization</a> -
--   Utilization information for the requested fleet location. Utilization
--   objects are returned only for fleets and locations that currently
--   exist.
--   
--   <a>$sel:httpStatus:DescribeFleetLocationUtilizationResponse'</a>,
--   <a>describeFleetLocationUtilizationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeFleetLocationUtilizationResponse :: Int -> DescribeFleetLocationUtilizationResponse

-- | Utilization information for the requested fleet location. Utilization
--   objects are returned only for fleets and locations that currently
--   exist.
describeFleetLocationUtilizationResponse_fleetUtilization :: Lens' DescribeFleetLocationUtilizationResponse (Maybe FleetUtilization)

-- | The response's http status code.
describeFleetLocationUtilizationResponse_httpStatus :: Lens' DescribeFleetLocationUtilizationResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilization
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilization
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilization
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilization
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilizationResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilizationResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilizationResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilizationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilization
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilizationResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilization
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilization
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilization
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilization
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilization
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeFleetLocationUtilization.DescribeFleetLocationUtilization


-- | Retrieves the resource capacity settings for a fleet location. The
--   data returned includes the current capacity (number of EC2 instances)
--   and some scaling settings for the requested fleet location. Use this
--   operation to retrieve capacity information for a fleet's remote
--   location or home Region (you can also retrieve home Region capacity by
--   calling <tt>DescribeFleetCapacity</tt>).
--   
--   To retrieve capacity data, identify a fleet and location.
--   
--   If successful, a <tt>FleetCapacity</tt> object is returned for the
--   requested fleet location.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <a>GameLift metrics for fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleetLocations | DescribeFleetLocationAttributes |
--   DescribeFleetLocationCapacity | DescribeFleetLocationUtilization |
--   DescribeFleetAttributes | DescribeFleetCapacity |
--   DescribeFleetUtilization | UpdateFleetCapacity | StopFleetActions |
--   DeleteFleetLocations | <a>All APIs by task</a>
module Network.AWS.GameLift.DescribeFleetLocationCapacity

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetLocationCapacity</a> smart constructor.
data DescribeFleetLocationCapacity
DescribeFleetLocationCapacity' :: Text -> Text -> DescribeFleetLocationCapacity

-- | A unique identifier for the fleet to request location capacity for.
--   You can use either the fleet ID or ARN value.
[$sel:fleetId:DescribeFleetLocationCapacity'] :: DescribeFleetLocationCapacity -> Text

-- | The fleet location to retrieve capacity information for. Specify a
--   location in the form of an AWS Region code, such as
--   <tt>us-west-2</tt>.
[$sel:location:DescribeFleetLocationCapacity'] :: DescribeFleetLocationCapacity -> Text

-- | Create a value of <a>DescribeFleetLocationCapacity</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DescribeFleetLocationCapacity'</a>,
--   <a>describeFleetLocationCapacity_fleetId</a> - A unique identifier for
--   the fleet to request location capacity for. You can use either the
--   fleet ID or ARN value.
--   
--   <a>$sel:location:DescribeFleetLocationCapacity'</a>,
--   <a>describeFleetLocationCapacity_location</a> - The fleet location to
--   retrieve capacity information for. Specify a location in the form of
--   an AWS Region code, such as <tt>us-west-2</tt>.
newDescribeFleetLocationCapacity :: Text -> Text -> DescribeFleetLocationCapacity

-- | A unique identifier for the fleet to request location capacity for.
--   You can use either the fleet ID or ARN value.
describeFleetLocationCapacity_fleetId :: Lens' DescribeFleetLocationCapacity Text

-- | The fleet location to retrieve capacity information for. Specify a
--   location in the form of an AWS Region code, such as
--   <tt>us-west-2</tt>.
describeFleetLocationCapacity_location :: Lens' DescribeFleetLocationCapacity Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetLocationCapacityResponse</a> smart
--   constructor.
data DescribeFleetLocationCapacityResponse
DescribeFleetLocationCapacityResponse' :: Maybe FleetCapacity -> Int -> DescribeFleetLocationCapacityResponse

-- | Resource capacity information for the requested fleet location.
--   Capacity objects are returned only for fleets and locations that
--   currently exist.
[$sel:fleetCapacity:DescribeFleetLocationCapacityResponse'] :: DescribeFleetLocationCapacityResponse -> Maybe FleetCapacity

-- | The response's http status code.
[$sel:httpStatus:DescribeFleetLocationCapacityResponse'] :: DescribeFleetLocationCapacityResponse -> Int

-- | Create a value of <a>DescribeFleetLocationCapacityResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetCapacity:DescribeFleetLocationCapacityResponse'</a>,
--   <a>describeFleetLocationCapacityResponse_fleetCapacity</a> - Resource
--   capacity information for the requested fleet location. Capacity
--   objects are returned only for fleets and locations that currently
--   exist.
--   
--   <a>$sel:httpStatus:DescribeFleetLocationCapacityResponse'</a>,
--   <a>describeFleetLocationCapacityResponse_httpStatus</a> - The
--   response's http status code.
newDescribeFleetLocationCapacityResponse :: Int -> DescribeFleetLocationCapacityResponse

-- | Resource capacity information for the requested fleet location.
--   Capacity objects are returned only for fleets and locations that
--   currently exist.
describeFleetLocationCapacityResponse_fleetCapacity :: Lens' DescribeFleetLocationCapacityResponse (Maybe FleetCapacity)

-- | The response's http status code.
describeFleetLocationCapacityResponse_httpStatus :: Lens' DescribeFleetLocationCapacityResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacity
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacity
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacity
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacity
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacityResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacityResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacityResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacity
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacityResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacity
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacity
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacity
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeFleetLocationCapacity.DescribeFleetLocationCapacity


-- | Retrieves information on a fleet's remote locations, including
--   life-cycle status and any suspended fleet activity.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To get data for specific locations, provide a fleet identifier and
--   a list of locations. Location data is returned in the order that it is
--   requested.</li>
--   <li>To get data for all locations, provide a fleet identifier only.
--   Location data is returned in no particular order.</li>
--   </ul>
--   
--   When requesting attributes for multiple locations, use the pagination
--   parameters to retrieve results as a set of sequential pages.
--   
--   If successful, a <tt>LocationAttributes</tt> object is returned for
--   each requested location. If the fleet does not have a requested
--   location, no information is returned. This operation does not return
--   the home Region. To get information on a fleet's home Region, call
--   <tt>DescribeFleetAttributes</tt>.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleetLocations | DescribeFleetLocationAttributes |
--   DescribeFleetLocationCapacity | DescribeFleetLocationUtilization |
--   DescribeFleetAttributes | DescribeFleetCapacity |
--   DescribeFleetUtilization | UpdateFleetCapacity | StopFleetActions |
--   DeleteFleetLocations | <a>All APIs by task</a>
module Network.AWS.GameLift.DescribeFleetLocationAttributes

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetLocationAttributes</a> smart
--   constructor.
data DescribeFleetLocationAttributes
DescribeFleetLocationAttributes' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> Text -> DescribeFleetLocationAttributes

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:DescribeFleetLocationAttributes'] :: DescribeFleetLocationAttributes -> Maybe Text

-- | A list of fleet locations to retrieve information for. Specify
--   locations in the form of an AWS Region code, such as
--   <tt>us-west-2</tt>.
[$sel:locations:DescribeFleetLocationAttributes'] :: DescribeFleetLocationAttributes -> Maybe (NonEmpty Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   limit is not currently enforced.
[$sel:limit:DescribeFleetLocationAttributes'] :: DescribeFleetLocationAttributes -> Maybe Natural

-- | A unique identifier for the fleet to retrieve remote locations for.
--   You can use either the fleet ID or ARN value.
[$sel:fleetId:DescribeFleetLocationAttributes'] :: DescribeFleetLocationAttributes -> Text

-- | Create a value of <a>DescribeFleetLocationAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetLocationAttributes'</a>,
--   <a>describeFleetLocationAttributes_nextToken</a> - A token that
--   indicates the start of the next sequential page of results. Use the
--   token that is returned with a previous call to this operation. To
--   start at the beginning of the result set, do not specify a value.
--   
--   <a>$sel:locations:DescribeFleetLocationAttributes'</a>,
--   <a>describeFleetLocationAttributes_locations</a> - A list of fleet
--   locations to retrieve information for. Specify locations in the form
--   of an AWS Region code, such as <tt>us-west-2</tt>.
--   
--   <a>$sel:limit:DescribeFleetLocationAttributes'</a>,
--   <a>describeFleetLocationAttributes_limit</a> - The maximum number of
--   results to return. Use this parameter with <tt>NextToken</tt> to get
--   results as a set of sequential pages. This limit is not currently
--   enforced.
--   
--   <a>$sel:fleetId:DescribeFleetLocationAttributes'</a>,
--   <a>describeFleetLocationAttributes_fleetId</a> - A unique identifier
--   for the fleet to retrieve remote locations for. You can use either the
--   fleet ID or ARN value.
newDescribeFleetLocationAttributes :: Text -> DescribeFleetLocationAttributes

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeFleetLocationAttributes_nextToken :: Lens' DescribeFleetLocationAttributes (Maybe Text)

-- | A list of fleet locations to retrieve information for. Specify
--   locations in the form of an AWS Region code, such as
--   <tt>us-west-2</tt>.
describeFleetLocationAttributes_locations :: Lens' DescribeFleetLocationAttributes (Maybe (NonEmpty Text))

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   limit is not currently enforced.
describeFleetLocationAttributes_limit :: Lens' DescribeFleetLocationAttributes (Maybe Natural)

-- | A unique identifier for the fleet to retrieve remote locations for.
--   You can use either the fleet ID or ARN value.
describeFleetLocationAttributes_fleetId :: Lens' DescribeFleetLocationAttributes Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetLocationAttributesResponse</a> smart
--   constructor.
data DescribeFleetLocationAttributesResponse
DescribeFleetLocationAttributesResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [LocationAttributes] -> Int -> DescribeFleetLocationAttributesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeFleetLocationAttributesResponse'] :: DescribeFleetLocationAttributesResponse -> Maybe Text

-- | A unique identifier for the fleet that location attributes were
--   requested for.
[$sel:fleetId:DescribeFleetLocationAttributesResponse'] :: DescribeFleetLocationAttributesResponse -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:DescribeFleetLocationAttributesResponse'] :: DescribeFleetLocationAttributesResponse -> Maybe Text

-- | Location-specific information on the requested fleet's remote
--   locations.
[$sel:locationAttributes:DescribeFleetLocationAttributesResponse'] :: DescribeFleetLocationAttributesResponse -> Maybe [LocationAttributes]

-- | The response's http status code.
[$sel:httpStatus:DescribeFleetLocationAttributesResponse'] :: DescribeFleetLocationAttributesResponse -> Int

-- | Create a value of <a>DescribeFleetLocationAttributesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetLocationAttributes'</a>,
--   <a>describeFleetLocationAttributesResponse_nextToken</a> - A token
--   that indicates where to resume retrieving results on the next call to
--   this operation. If no token is returned, these results represent the
--   end of the list.
--   
--   <a>$sel:fleetId:DescribeFleetLocationAttributes'</a>,
--   <a>describeFleetLocationAttributesResponse_fleetId</a> - A unique
--   identifier for the fleet that location attributes were requested for.
--   
--   <a>$sel:fleetArn:DescribeFleetLocationAttributesResponse'</a>,
--   <a>describeFleetLocationAttributesResponse_fleetArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift fleet
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   
--   <a>$sel:locationAttributes:DescribeFleetLocationAttributesResponse'</a>,
--   <a>describeFleetLocationAttributesResponse_locationAttributes</a> -
--   Location-specific information on the requested fleet's remote
--   locations.
--   
--   <a>$sel:httpStatus:DescribeFleetLocationAttributesResponse'</a>,
--   <a>describeFleetLocationAttributesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeFleetLocationAttributesResponse :: Int -> DescribeFleetLocationAttributesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeFleetLocationAttributesResponse_nextToken :: Lens' DescribeFleetLocationAttributesResponse (Maybe Text)

-- | A unique identifier for the fleet that location attributes were
--   requested for.
describeFleetLocationAttributesResponse_fleetId :: Lens' DescribeFleetLocationAttributesResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
describeFleetLocationAttributesResponse_fleetArn :: Lens' DescribeFleetLocationAttributesResponse (Maybe Text)

-- | Location-specific information on the requested fleet's remote
--   locations.
describeFleetLocationAttributesResponse_locationAttributes :: Lens' DescribeFleetLocationAttributesResponse (Maybe [LocationAttributes])

-- | The response's http status code.
describeFleetLocationAttributesResponse_httpStatus :: Lens' DescribeFleetLocationAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributes
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributes
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributes
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributes
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributesResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributesResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributesResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributes
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributes
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeFleetLocationAttributes.DescribeFleetLocationAttributes


-- | Retrieves entries from a fleet's event log. Fleet events are initiated
--   by changes in status, such as during fleet creation and termination,
--   changes in capacity, etc. If a fleet has multiple locations, events
--   are also initiated by changes to status and capacity in remote
--   locations.
--   
--   You can specify a time range to limit the result set. Use the
--   pagination parameters to retrieve results as a set of sequential
--   pages.
--   
--   If successful, a collection of event log entries matching the request
--   are returned.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <b>Related actions</b>
--   
--   ListFleets | DescribeEC2InstanceLimits | DescribeFleetAttributes |
--   DescribeFleetCapacity | DescribeFleetEvents |
--   DescribeFleetLocationAttributes | DescribeFleetPortSettings |
--   DescribeFleetUtilization | DescribeRuntimeConfiguration |
--   DescribeScalingPolicies | <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribeFleetEvents

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetEvents</a> smart constructor.
data DescribeFleetEvents
DescribeFleetEvents' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Natural -> Text -> DescribeFleetEvents

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
[$sel:nextToken:DescribeFleetEvents'] :: DescribeFleetEvents -> Maybe Text

-- | The earliest date to retrieve event logs for. If no start time is
--   specified, this call returns entries starting from when the fleet was
--   created to the specified end time. Format is a number expressed in
--   Unix time as milliseconds (ex: "1469498468.057").
[$sel:startTime:DescribeFleetEvents'] :: DescribeFleetEvents -> Maybe POSIX

-- | The most recent date to retrieve event logs for. If no end time is
--   specified, this call returns entries from the specified start time up
--   to the present. Format is a number expressed in Unix time as
--   milliseconds (ex: "1469498468.057").
[$sel:endTime:DescribeFleetEvents'] :: DescribeFleetEvents -> Maybe POSIX

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
[$sel:limit:DescribeFleetEvents'] :: DescribeFleetEvents -> Maybe Natural

-- | A unique identifier for the fleet to get event logs for. You can use
--   either the fleet ID or ARN value.
[$sel:fleetId:DescribeFleetEvents'] :: DescribeFleetEvents -> Text

-- | Create a value of <a>DescribeFleetEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetEvents'</a>,
--   <a>describeFleetEvents_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:startTime:DescribeFleetEvents'</a>,
--   <a>describeFleetEvents_startTime</a> - The earliest date to retrieve
--   event logs for. If no start time is specified, this call returns
--   entries starting from when the fleet was created to the specified end
--   time. Format is a number expressed in Unix time as milliseconds (ex:
--   "1469498468.057").
--   
--   <a>$sel:endTime:DescribeFleetEvents'</a>,
--   <a>describeFleetEvents_endTime</a> - The most recent date to retrieve
--   event logs for. If no end time is specified, this call returns entries
--   from the specified start time up to the present. Format is a number
--   expressed in Unix time as milliseconds (ex: "1469498468.057").
--   
--   <a>$sel:limit:DescribeFleetEvents'</a>,
--   <a>describeFleetEvents_limit</a> - The maximum number of results to
--   return. Use this parameter with <tt>NextToken</tt> to get results as a
--   set of sequential pages.
--   
--   <a>$sel:fleetId:DescribeFleetEvents'</a>,
--   <a>describeFleetEvents_fleetId</a> - A unique identifier for the fleet
--   to get event logs for. You can use either the fleet ID or ARN value.
newDescribeFleetEvents :: Text -> DescribeFleetEvents

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeFleetEvents_nextToken :: Lens' DescribeFleetEvents (Maybe Text)

-- | The earliest date to retrieve event logs for. If no start time is
--   specified, this call returns entries starting from when the fleet was
--   created to the specified end time. Format is a number expressed in
--   Unix time as milliseconds (ex: "1469498468.057").
describeFleetEvents_startTime :: Lens' DescribeFleetEvents (Maybe UTCTime)

-- | The most recent date to retrieve event logs for. If no end time is
--   specified, this call returns entries from the specified start time up
--   to the present. Format is a number expressed in Unix time as
--   milliseconds (ex: "1469498468.057").
describeFleetEvents_endTime :: Lens' DescribeFleetEvents (Maybe UTCTime)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeFleetEvents_limit :: Lens' DescribeFleetEvents (Maybe Natural)

-- | A unique identifier for the fleet to get event logs for. You can use
--   either the fleet ID or ARN value.
describeFleetEvents_fleetId :: Lens' DescribeFleetEvents Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetEventsResponse</a> smart constructor.
data DescribeFleetEventsResponse
DescribeFleetEventsResponse' :: Maybe Text -> Maybe [Event] -> Int -> DescribeFleetEventsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeFleetEventsResponse'] :: DescribeFleetEventsResponse -> Maybe Text

-- | A collection of objects containing event log entries for the specified
--   fleet.
[$sel:events:DescribeFleetEventsResponse'] :: DescribeFleetEventsResponse -> Maybe [Event]

-- | The response's http status code.
[$sel:httpStatus:DescribeFleetEventsResponse'] :: DescribeFleetEventsResponse -> Int

-- | Create a value of <a>DescribeFleetEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetEvents'</a>,
--   <a>describeFleetEventsResponse_nextToken</a> - A token that indicates
--   where to resume retrieving results on the next call to this operation.
--   If no token is returned, these results represent the end of the list.
--   
--   <a>$sel:events:DescribeFleetEventsResponse'</a>,
--   <a>describeFleetEventsResponse_events</a> - A collection of objects
--   containing event log entries for the specified fleet.
--   
--   <a>$sel:httpStatus:DescribeFleetEventsResponse'</a>,
--   <a>describeFleetEventsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeFleetEventsResponse :: Int -> DescribeFleetEventsResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeFleetEventsResponse_nextToken :: Lens' DescribeFleetEventsResponse (Maybe Text)

-- | A collection of objects containing event log entries for the specified
--   fleet.
describeFleetEventsResponse_events :: Lens' DescribeFleetEventsResponse (Maybe [Event])

-- | The response's http status code.
describeFleetEventsResponse_httpStatus :: Lens' DescribeFleetEventsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEvents
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEvents
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEvents
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEvents
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEventsResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEventsResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEventsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEventsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEvents
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEventsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEvents
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEvents
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEvents
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEvents
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEvents
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEvents
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeFleetEvents.DescribeFleetEvents


-- | Retrieves the resource capacity settings for one or more fleets. The
--   data returned includes the current fleet capacity (number of EC2
--   instances), and settings that can control how capacity scaling. For
--   fleets with remote locations, this operation retrieves data for the
--   fleet's home Region only. See DescribeFleetLocationCapacity to get
--   capacity settings for a fleet's remote locations.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To get capacity data for one or more specific fleets, provide a
--   list of fleet IDs or fleet ARNs.</li>
--   <li>To get capacity data for all fleets, do not provide a fleet
--   identifier.</li>
--   </ul>
--   
--   When requesting multiple fleets, use the pagination parameters to
--   retrieve results as a set of sequential pages.
--   
--   If successful, a FleetCapacity object is returned for each requested
--   fleet ID. Each FleetCapacity object includes a <tt>Location</tt>
--   property, which is set to the fleet's home Region. When a list of
--   fleet IDs is provided, attribute objects are returned only for fleets
--   that currently exist.
--   
--   Some API operations may limit the number of fleet IDs that are allowed
--   in one request. If a request exceeds this limit, the request fails and
--   the error message includes the maximum allowed.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <a>GameLift metrics for fleets</a>
--   
--   <b>Related actions</b>
--   
--   ListFleets | DescribeEC2InstanceLimits | DescribeFleetAttributes |
--   DescribeFleetCapacity | DescribeFleetEvents |
--   DescribeFleetLocationAttributes | DescribeFleetPortSettings |
--   DescribeFleetUtilization | DescribeRuntimeConfiguration |
--   DescribeScalingPolicies | <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribeFleetCapacity

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetCapacity</a> smart constructor.
data DescribeFleetCapacity
DescribeFleetCapacity' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> DescribeFleetCapacity

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value. This parameter is ignored when the request specifies one or a
--   list of fleet IDs.
[$sel:nextToken:DescribeFleetCapacity'] :: DescribeFleetCapacity -> Maybe Text

-- | A unique identifier for the fleet(s) to retrieve capacity information
--   for. You can use either the fleet ID or ARN value. Leave this
--   parameter empty to retrieve capacity information for all fleets.
[$sel:fleetIds:DescribeFleetCapacity'] :: DescribeFleetCapacity -> Maybe (NonEmpty Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   parameter is ignored when the request specifies one or a list of fleet
--   IDs.
[$sel:limit:DescribeFleetCapacity'] :: DescribeFleetCapacity -> Maybe Natural

-- | Create a value of <a>DescribeFleetCapacity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetCapacity'</a>,
--   <a>describeFleetCapacity_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value. This parameter is
--   ignored when the request specifies one or a list of fleet IDs.
--   
--   <a>$sel:fleetIds:DescribeFleetCapacity'</a>,
--   <a>describeFleetCapacity_fleetIds</a> - A unique identifier for the
--   fleet(s) to retrieve capacity information for. You can use either the
--   fleet ID or ARN value. Leave this parameter empty to retrieve capacity
--   information for all fleets.
--   
--   <a>$sel:limit:DescribeFleetCapacity'</a>,
--   <a>describeFleetCapacity_limit</a> - The maximum number of results to
--   return. Use this parameter with <tt>NextToken</tt> to get results as a
--   set of sequential pages. This parameter is ignored when the request
--   specifies one or a list of fleet IDs.
newDescribeFleetCapacity :: DescribeFleetCapacity

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value. This parameter is ignored when the request specifies one or a
--   list of fleet IDs.
describeFleetCapacity_nextToken :: Lens' DescribeFleetCapacity (Maybe Text)

-- | A unique identifier for the fleet(s) to retrieve capacity information
--   for. You can use either the fleet ID or ARN value. Leave this
--   parameter empty to retrieve capacity information for all fleets.
describeFleetCapacity_fleetIds :: Lens' DescribeFleetCapacity (Maybe (NonEmpty Text))

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   parameter is ignored when the request specifies one or a list of fleet
--   IDs.
describeFleetCapacity_limit :: Lens' DescribeFleetCapacity (Maybe Natural)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetCapacityResponse</a> smart constructor.
data DescribeFleetCapacityResponse
DescribeFleetCapacityResponse' :: Maybe Text -> Maybe [FleetCapacity] -> Int -> DescribeFleetCapacityResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeFleetCapacityResponse'] :: DescribeFleetCapacityResponse -> Maybe Text

-- | A collection of objects that contains capacity information for each
--   requested fleet ID. Capacity objects are returned only for fleets that
--   currently exist.
[$sel:fleetCapacity:DescribeFleetCapacityResponse'] :: DescribeFleetCapacityResponse -> Maybe [FleetCapacity]

-- | The response's http status code.
[$sel:httpStatus:DescribeFleetCapacityResponse'] :: DescribeFleetCapacityResponse -> Int

-- | Create a value of <a>DescribeFleetCapacityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetCapacity'</a>,
--   <a>describeFleetCapacityResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:fleetCapacity:DescribeFleetCapacityResponse'</a>,
--   <a>describeFleetCapacityResponse_fleetCapacity</a> - A collection of
--   objects that contains capacity information for each requested fleet
--   ID. Capacity objects are returned only for fleets that currently
--   exist.
--   
--   <a>$sel:httpStatus:DescribeFleetCapacityResponse'</a>,
--   <a>describeFleetCapacityResponse_httpStatus</a> - The response's http
--   status code.
newDescribeFleetCapacityResponse :: Int -> DescribeFleetCapacityResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeFleetCapacityResponse_nextToken :: Lens' DescribeFleetCapacityResponse (Maybe Text)

-- | A collection of objects that contains capacity information for each
--   requested fleet ID. Capacity objects are returned only for fleets that
--   currently exist.
describeFleetCapacityResponse_fleetCapacity :: Lens' DescribeFleetCapacityResponse (Maybe [FleetCapacity])

-- | The response's http status code.
describeFleetCapacityResponse_httpStatus :: Lens' DescribeFleetCapacityResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacity
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacity
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacity
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacity
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacityResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacityResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacityResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacity
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacityResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacity
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacity
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacity
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacity
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeFleetCapacity.DescribeFleetCapacity


-- | Retrieves core fleet-wide properties, including the computing hardware
--   and deployment configuration for all instances in the fleet.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To get attributes for one or more specific fleets, provide a list
--   of fleet IDs or fleet ARNs.</li>
--   <li>To get attributes for all fleets, do not provide a fleet
--   identifier.</li>
--   </ul>
--   
--   When requesting attributes for multiple fleets, use the pagination
--   parameters to retrieve results as a set of sequential pages.
--   
--   If successful, a <tt>FleetAttributes</tt> object is returned for each
--   fleet requested, unless the fleet identifier is not found.
--   
--   Some API operations limit the number of fleet IDs that allowed in one
--   request. If a request exceeds this limit, the request fails and the
--   error message contains the maximum allowed number.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <b>Related actions</b>
--   
--   ListFleets | DescribeEC2InstanceLimits | DescribeFleetAttributes |
--   DescribeFleetCapacity | DescribeFleetEvents |
--   DescribeFleetLocationAttributes | DescribeFleetPortSettings |
--   DescribeFleetUtilization | DescribeRuntimeConfiguration |
--   DescribeScalingPolicies | <a>All APIs by task</a>
--   
--   This operation returns paginated results.
module Network.AWS.GameLift.DescribeFleetAttributes

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetAttributes</a> smart constructor.
data DescribeFleetAttributes
DescribeFleetAttributes' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> DescribeFleetAttributes

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value. This parameter is ignored when the request specifies one or a
--   list of fleet IDs.
[$sel:nextToken:DescribeFleetAttributes'] :: DescribeFleetAttributes -> Maybe Text

-- | A list of unique fleet identifiers to retrieve attributes for. You can
--   use either the fleet ID or ARN value. To retrieve attributes for all
--   current fleets, do not include this parameter.
[$sel:fleetIds:DescribeFleetAttributes'] :: DescribeFleetAttributes -> Maybe (NonEmpty Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   parameter is ignored when the request specifies one or a list of fleet
--   IDs.
[$sel:limit:DescribeFleetAttributes'] :: DescribeFleetAttributes -> Maybe Natural

-- | Create a value of <a>DescribeFleetAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetAttributes'</a>,
--   <a>describeFleetAttributes_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value. This parameter is
--   ignored when the request specifies one or a list of fleet IDs.
--   
--   <a>$sel:fleetIds:DescribeFleetAttributes'</a>,
--   <a>describeFleetAttributes_fleetIds</a> - A list of unique fleet
--   identifiers to retrieve attributes for. You can use either the fleet
--   ID or ARN value. To retrieve attributes for all current fleets, do not
--   include this parameter.
--   
--   <a>$sel:limit:DescribeFleetAttributes'</a>,
--   <a>describeFleetAttributes_limit</a> - The maximum number of results
--   to return. Use this parameter with <tt>NextToken</tt> to get results
--   as a set of sequential pages. This parameter is ignored when the
--   request specifies one or a list of fleet IDs.
newDescribeFleetAttributes :: DescribeFleetAttributes

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value. This parameter is ignored when the request specifies one or a
--   list of fleet IDs.
describeFleetAttributes_nextToken :: Lens' DescribeFleetAttributes (Maybe Text)

-- | A list of unique fleet identifiers to retrieve attributes for. You can
--   use either the fleet ID or ARN value. To retrieve attributes for all
--   current fleets, do not include this parameter.
describeFleetAttributes_fleetIds :: Lens' DescribeFleetAttributes (Maybe (NonEmpty Text))

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   parameter is ignored when the request specifies one or a list of fleet
--   IDs.
describeFleetAttributes_limit :: Lens' DescribeFleetAttributes (Maybe Natural)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetAttributesResponse</a> smart
--   constructor.
data DescribeFleetAttributesResponse
DescribeFleetAttributesResponse' :: Maybe Text -> Maybe [FleetAttributes] -> Int -> DescribeFleetAttributesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
[$sel:nextToken:DescribeFleetAttributesResponse'] :: DescribeFleetAttributesResponse -> Maybe Text

-- | A collection of objects containing attribute metadata for each
--   requested fleet ID. Attribute objects are returned only for fleets
--   that currently exist.
[$sel:fleetAttributes:DescribeFleetAttributesResponse'] :: DescribeFleetAttributesResponse -> Maybe [FleetAttributes]

-- | The response's http status code.
[$sel:httpStatus:DescribeFleetAttributesResponse'] :: DescribeFleetAttributesResponse -> Int

-- | Create a value of <a>DescribeFleetAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetAttributes'</a>,
--   <a>describeFleetAttributesResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:fleetAttributes:DescribeFleetAttributesResponse'</a>,
--   <a>describeFleetAttributesResponse_fleetAttributes</a> - A collection
--   of objects containing attribute metadata for each requested fleet ID.
--   Attribute objects are returned only for fleets that currently exist.
--   
--   <a>$sel:httpStatus:DescribeFleetAttributesResponse'</a>,
--   <a>describeFleetAttributesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeFleetAttributesResponse :: Int -> DescribeFleetAttributesResponse

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeFleetAttributesResponse_nextToken :: Lens' DescribeFleetAttributesResponse (Maybe Text)

-- | A collection of objects containing attribute metadata for each
--   requested fleet ID. Attribute objects are returned only for fleets
--   that currently exist.
describeFleetAttributesResponse_fleetAttributes :: Lens' DescribeFleetAttributesResponse (Maybe [FleetAttributes])

-- | The response's http status code.
describeFleetAttributesResponse_httpStatus :: Lens' DescribeFleetAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributes
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributes
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributes
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributes
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributesResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributesResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributesResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributes
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributes
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributes
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeFleetAttributes.DescribeFleetAttributes


-- | The GameLift service limits and current utilization for an AWS Region
--   or location. Instance limits control the number of instances, per
--   instance type, per location, that your AWS account can use. Learn more
--   at <a>Amazon EC2 Instance Types</a>. The information returned includes
--   the maximum number of instances allowed and your account's current
--   usage across all fleets. This information can affect your ability to
--   scale your GameLift fleets. You can request a limit increase for your
--   account by using the __Service limits__ page in the GameLift console.
--   
--   Instance limits differ based on whether the instances are deployed in
--   a fleet's home Region or in a remote location. For remote locations,
--   limits also differ based on the combination of home Region and remote
--   location. All requests must specify an AWS Region (either explicitly
--   or as your default settings). To get the limit for a remote location,
--   you must also specify the location. For example, the following
--   requests all return different results:
--   
--   <ul>
--   <li>Request specifies the Region <tt>ap-northeast-1</tt> with no
--   location. The result is limits and usage data on all instance types
--   that are deployed in <tt>us-east-2</tt>, by all of the fleets that
--   reside in <tt>ap-northeast-1</tt>.</li>
--   <li>Request specifies the Region <tt>us-east-1</tt> with location
--   <tt>ca-central-1</tt>. The result is limits and usage data on all
--   instance types that are deployed in <tt>ca-central-1</tt>, by all of
--   the fleets that reside in <tt>us-east-2</tt>. These limits do not
--   affect fleets in any other Regions that deploy instances to
--   <tt>ca-central-1</tt>.</li>
--   <li>Request specifies the Region <tt>eu-west-1</tt> with location
--   <tt>ca-central-1</tt>. The result is limits and usage data on all
--   instance types that are deployed in <tt>ca-central-1</tt>, by all of
--   the fleets that reside in <tt>eu-west-1</tt>.</li>
--   </ul>
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To get limit and usage data for all instance types that are
--   deployed in an AWS Region by fleets that reside in the same Region:
--   Specify the Region only. Optionally, specify a single instance type to
--   retrieve information for.</li>
--   <li>To get limit and usage data for all instance types that are
--   deployed to a remote location by fleets that reside in different AWS
--   Region: Provide both the AWS Region and the remote location.
--   Optionally, specify a single instance type to retrieve information
--   for.</li>
--   </ul>
--   
--   If successful, an <tt>EC2InstanceLimits</tt> object is returned with
--   limits and usage data for each requested instance type.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleet | UpdateFleetCapacity | PutScalingPolicy |
--   DescribeEC2InstanceLimits | DescribeFleetAttributes |
--   DescribeFleetLocationAttributes | UpdateFleetAttributes |
--   StopFleetActions | DeleteFleet | <a>All APIs by task</a>
module Network.AWS.GameLift.DescribeEC2InstanceLimits

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeEC2InstanceLimits</a> smart constructor.
data DescribeEC2InstanceLimits
DescribeEC2InstanceLimits' :: Maybe EC2InstanceType -> Maybe Text -> DescribeEC2InstanceLimits

-- | Name of an EC2 instance type that is supported in GameLift. A fleet
--   instance type determines the computing resources of each instance in
--   the fleet, including CPU, memory, storage, and networking capacity. Do
--   not specify a value for this parameter to retrieve limits for all
--   instance types.
[$sel:eC2InstanceType:DescribeEC2InstanceLimits'] :: DescribeEC2InstanceLimits -> Maybe EC2InstanceType

-- | The name of a remote location to request instance limits for, in the
--   form of an AWS Region code such as <tt>us-west-2</tt>.
[$sel:location:DescribeEC2InstanceLimits'] :: DescribeEC2InstanceLimits -> Maybe Text

-- | Create a value of <a>DescribeEC2InstanceLimits</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eC2InstanceType:DescribeEC2InstanceLimits'</a>,
--   <a>describeEC2InstanceLimits_eC2InstanceType</a> - Name of an EC2
--   instance type that is supported in GameLift. A fleet instance type
--   determines the computing resources of each instance in the fleet,
--   including CPU, memory, storage, and networking capacity. Do not
--   specify a value for this parameter to retrieve limits for all instance
--   types.
--   
--   <a>$sel:location:DescribeEC2InstanceLimits'</a>,
--   <a>describeEC2InstanceLimits_location</a> - The name of a remote
--   location to request instance limits for, in the form of an AWS Region
--   code such as <tt>us-west-2</tt>.
newDescribeEC2InstanceLimits :: DescribeEC2InstanceLimits

-- | Name of an EC2 instance type that is supported in GameLift. A fleet
--   instance type determines the computing resources of each instance in
--   the fleet, including CPU, memory, storage, and networking capacity. Do
--   not specify a value for this parameter to retrieve limits for all
--   instance types.
describeEC2InstanceLimits_eC2InstanceType :: Lens' DescribeEC2InstanceLimits (Maybe EC2InstanceType)

-- | The name of a remote location to request instance limits for, in the
--   form of an AWS Region code such as <tt>us-west-2</tt>.
describeEC2InstanceLimits_location :: Lens' DescribeEC2InstanceLimits (Maybe Text)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeEC2InstanceLimitsResponse</a> smart
--   constructor.
data DescribeEC2InstanceLimitsResponse
DescribeEC2InstanceLimitsResponse' :: Maybe [EC2InstanceLimit] -> Int -> DescribeEC2InstanceLimitsResponse

-- | The maximum number of instances for the specified instance type.
[$sel:eC2InstanceLimits:DescribeEC2InstanceLimitsResponse'] :: DescribeEC2InstanceLimitsResponse -> Maybe [EC2InstanceLimit]

-- | The response's http status code.
[$sel:httpStatus:DescribeEC2InstanceLimitsResponse'] :: DescribeEC2InstanceLimitsResponse -> Int

-- | Create a value of <a>DescribeEC2InstanceLimitsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eC2InstanceLimits:DescribeEC2InstanceLimitsResponse'</a>,
--   <a>describeEC2InstanceLimitsResponse_eC2InstanceLimits</a> - The
--   maximum number of instances for the specified instance type.
--   
--   <a>$sel:httpStatus:DescribeEC2InstanceLimitsResponse'</a>,
--   <a>describeEC2InstanceLimitsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeEC2InstanceLimitsResponse :: Int -> DescribeEC2InstanceLimitsResponse

-- | The maximum number of instances for the specified instance type.
describeEC2InstanceLimitsResponse_eC2InstanceLimits :: Lens' DescribeEC2InstanceLimitsResponse (Maybe [EC2InstanceLimit])

-- | The response's http status code.
describeEC2InstanceLimitsResponse_httpStatus :: Lens' DescribeEC2InstanceLimitsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimits
instance GHC.Show.Show Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimits
instance GHC.Read.Read Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimits
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimits
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimitsResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimitsResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimitsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimitsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimits
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimitsResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimits
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimits
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimits
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimits
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimits
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeEC2InstanceLimits.DescribeEC2InstanceLimits


-- | Retrieves properties for a custom game build. To request a build
--   resource, specify a build ID. If successful, an object containing the
--   build properties is returned.
--   
--   <b>Learn more</b>
--   
--   <a>Upload a Custom Server Build</a>
--   
--   <b>Related actions</b>
--   
--   CreateBuild | ListBuilds | DescribeBuild | UpdateBuild | DeleteBuild |
--   <a>All APIs by task</a>
module Network.AWS.GameLift.DescribeBuild

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeBuild</a> smart constructor.
data DescribeBuild
DescribeBuild' :: Text -> DescribeBuild

-- | A unique identifier for the build to retrieve properties for. You can
--   use either the build ID or ARN value.
[$sel:buildId:DescribeBuild'] :: DescribeBuild -> Text

-- | Create a value of <a>DescribeBuild</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildId:DescribeBuild'</a>, <a>describeBuild_buildId</a> - A
--   unique identifier for the build to retrieve properties for. You can
--   use either the build ID or ARN value.
newDescribeBuild :: Text -> DescribeBuild

-- | A unique identifier for the build to retrieve properties for. You can
--   use either the build ID or ARN value.
describeBuild_buildId :: Lens' DescribeBuild Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeBuildResponse</a> smart constructor.
data DescribeBuildResponse
DescribeBuildResponse' :: Maybe Build -> Int -> DescribeBuildResponse

-- | Set of properties describing the requested build.
[$sel:build:DescribeBuildResponse'] :: DescribeBuildResponse -> Maybe Build

-- | The response's http status code.
[$sel:httpStatus:DescribeBuildResponse'] :: DescribeBuildResponse -> Int

-- | Create a value of <a>DescribeBuildResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:build:DescribeBuildResponse'</a>,
--   <a>describeBuildResponse_build</a> - Set of properties describing the
--   requested build.
--   
--   <a>$sel:httpStatus:DescribeBuildResponse'</a>,
--   <a>describeBuildResponse_httpStatus</a> - The response's http status
--   code.
newDescribeBuildResponse :: Int -> DescribeBuildResponse

-- | Set of properties describing the requested build.
describeBuildResponse_build :: Lens' DescribeBuildResponse (Maybe Build)

-- | The response's http status code.
describeBuildResponse_httpStatus :: Lens' DescribeBuildResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeBuild.DescribeBuild
instance GHC.Show.Show Network.AWS.GameLift.DescribeBuild.DescribeBuild
instance GHC.Read.Read Network.AWS.GameLift.DescribeBuild.DescribeBuild
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeBuild.DescribeBuild
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeBuild.DescribeBuildResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeBuild.DescribeBuildResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeBuild.DescribeBuildResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeBuild.DescribeBuildResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeBuild.DescribeBuild
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeBuild.DescribeBuildResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeBuild.DescribeBuild
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeBuild.DescribeBuild
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeBuild.DescribeBuild
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeBuild.DescribeBuild
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeBuild.DescribeBuild
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeBuild.DescribeBuild


-- | Retrieves properties for an alias. This operation returns all alias
--   metadata and settings. To get an alias's target fleet ID only, use
--   <tt>ResolveAlias</tt>.
--   
--   To get alias properties, specify the alias ID. If successful, the
--   requested alias record is returned.
--   
--   <b>Related actions</b>
--   
--   CreateAlias | ListAliases | DescribeAlias | UpdateAlias | DeleteAlias
--   | ResolveAlias | <a>All APIs by task</a>
module Network.AWS.GameLift.DescribeAlias

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeAlias</a> smart constructor.
data DescribeAlias
DescribeAlias' :: Text -> DescribeAlias

-- | The unique identifier for the fleet alias that you want to retrieve.
--   You can use either the alias ID or ARN value.
[$sel:aliasId:DescribeAlias'] :: DescribeAlias -> Text

-- | Create a value of <a>DescribeAlias</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aliasId:DescribeAlias'</a>, <a>describeAlias_aliasId</a> - The
--   unique identifier for the fleet alias that you want to retrieve. You
--   can use either the alias ID or ARN value.
newDescribeAlias :: Text -> DescribeAlias

-- | The unique identifier for the fleet alias that you want to retrieve.
--   You can use either the alias ID or ARN value.
describeAlias_aliasId :: Lens' DescribeAlias Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeAliasResponse</a> smart constructor.
data DescribeAliasResponse
DescribeAliasResponse' :: Maybe Alias -> Int -> DescribeAliasResponse

-- | The requested alias resource.
[$sel:alias:DescribeAliasResponse'] :: DescribeAliasResponse -> Maybe Alias

-- | The response's http status code.
[$sel:httpStatus:DescribeAliasResponse'] :: DescribeAliasResponse -> Int

-- | Create a value of <a>DescribeAliasResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alias:DescribeAliasResponse'</a>,
--   <a>describeAliasResponse_alias</a> - The requested alias resource.
--   
--   <a>$sel:httpStatus:DescribeAliasResponse'</a>,
--   <a>describeAliasResponse_httpStatus</a> - The response's http status
--   code.
newDescribeAliasResponse :: Int -> DescribeAliasResponse

-- | The requested alias resource.
describeAliasResponse_alias :: Lens' DescribeAliasResponse (Maybe Alias)

-- | The response's http status code.
describeAliasResponse_httpStatus :: Lens' DescribeAliasResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeAlias.DescribeAlias
instance GHC.Show.Show Network.AWS.GameLift.DescribeAlias.DescribeAlias
instance GHC.Read.Read Network.AWS.GameLift.DescribeAlias.DescribeAlias
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeAlias.DescribeAlias
instance GHC.Generics.Generic Network.AWS.GameLift.DescribeAlias.DescribeAliasResponse
instance GHC.Show.Show Network.AWS.GameLift.DescribeAlias.DescribeAliasResponse
instance GHC.Read.Read Network.AWS.GameLift.DescribeAlias.DescribeAliasResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DescribeAlias.DescribeAliasResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DescribeAlias.DescribeAlias
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeAlias.DescribeAliasResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DescribeAlias.DescribeAlias
instance Control.DeepSeq.NFData Network.AWS.GameLift.DescribeAlias.DescribeAlias
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DescribeAlias.DescribeAlias
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DescribeAlias.DescribeAlias
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DescribeAlias.DescribeAlias
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DescribeAlias.DescribeAlias


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Removes the game server from a game server group. As a result of this
--   operation, the deregistered game server can no longer be claimed and
--   will not be returned in a list of active game servers.
--   
--   To deregister a game server, specify the game server group and game
--   server ID. If successful, this operation emits a CloudWatch event with
--   termination timestamp and reason.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   RegisterGameServer | ListGameServers | ClaimGameServer |
--   DescribeGameServer | UpdateGameServer | DeregisterGameServer | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.DeregisterGameServer

-- | <i>See:</i> <a>newDeregisterGameServer</a> smart constructor.
data DeregisterGameServer
DeregisterGameServer' :: Text -> Text -> DeregisterGameServer

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
[$sel:gameServerGroupName:DeregisterGameServer'] :: DeregisterGameServer -> Text

-- | A custom string that uniquely identifies the game server to
--   deregister.
[$sel:gameServerId:DeregisterGameServer'] :: DeregisterGameServer -> Text

-- | Create a value of <a>DeregisterGameServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroupName:DeregisterGameServer'</a>,
--   <a>deregisterGameServer_gameServerGroupName</a> - A unique identifier
--   for the game server group where the game server is running. Use either
--   the GameServerGroup name or ARN value.
--   
--   <a>$sel:gameServerId:DeregisterGameServer'</a>,
--   <a>deregisterGameServer_gameServerId</a> - A custom string that
--   uniquely identifies the game server to deregister.
newDeregisterGameServer :: Text -> Text -> DeregisterGameServer

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
deregisterGameServer_gameServerGroupName :: Lens' DeregisterGameServer Text

-- | A custom string that uniquely identifies the game server to
--   deregister.
deregisterGameServer_gameServerId :: Lens' DeregisterGameServer Text

-- | <i>See:</i> <a>newDeregisterGameServerResponse</a> smart constructor.
data DeregisterGameServerResponse
DeregisterGameServerResponse' :: DeregisterGameServerResponse

-- | Create a value of <a>DeregisterGameServerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeregisterGameServerResponse :: DeregisterGameServerResponse
instance GHC.Generics.Generic Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServer
instance GHC.Show.Show Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServer
instance GHC.Read.Read Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServer
instance GHC.Classes.Eq Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServer
instance GHC.Generics.Generic Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServerResponse
instance GHC.Show.Show Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServerResponse
instance GHC.Read.Read Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServerResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServer
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServerResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServer
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServer
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServer
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeregisterGameServer.DeregisterGameServer


-- | Removes a VPC peering connection. To delete the connection, you must
--   have a valid authorization for the VPC peering connection that you
--   want to delete. You can check for an authorization by calling
--   DescribeVpcPeeringAuthorizations or request a new one using
--   CreateVpcPeeringAuthorization.
--   
--   Once a valid authorization exists, call this operation from the AWS
--   account that is used to manage the Amazon GameLift fleets. Identify
--   the connection to delete by the connection ID and fleet ID. If
--   successful, the connection is removed.
--   
--   <b>Related actions</b>
--   
--   CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations |
--   DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection |
--   DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.DeleteVpcPeeringConnection

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteVpcPeeringConnection</a> smart constructor.
data DeleteVpcPeeringConnection
DeleteVpcPeeringConnection' :: Text -> Text -> DeleteVpcPeeringConnection

-- | A unique identifier for the fleet. This fleet specified must match the
--   fleet referenced in the VPC peering connection record. You can use
--   either the fleet ID or ARN value.
[$sel:fleetId:DeleteVpcPeeringConnection'] :: DeleteVpcPeeringConnection -> Text

-- | A unique identifier for a VPC peering connection. This value is
--   included in the VpcPeeringConnection object, which can be retrieved by
--   calling DescribeVpcPeeringConnections.
[$sel:vpcPeeringConnectionId:DeleteVpcPeeringConnection'] :: DeleteVpcPeeringConnection -> Text

-- | Create a value of <a>DeleteVpcPeeringConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DeleteVpcPeeringConnection'</a>,
--   <a>deleteVpcPeeringConnection_fleetId</a> - A unique identifier for
--   the fleet. This fleet specified must match the fleet referenced in the
--   VPC peering connection record. You can use either the fleet ID or ARN
--   value.
--   
--   <a>$sel:vpcPeeringConnectionId:DeleteVpcPeeringConnection'</a>,
--   <a>deleteVpcPeeringConnection_vpcPeeringConnectionId</a> - A unique
--   identifier for a VPC peering connection. This value is included in the
--   VpcPeeringConnection object, which can be retrieved by calling
--   DescribeVpcPeeringConnections.
newDeleteVpcPeeringConnection :: Text -> Text -> DeleteVpcPeeringConnection

-- | A unique identifier for the fleet. This fleet specified must match the
--   fleet referenced in the VPC peering connection record. You can use
--   either the fleet ID or ARN value.
deleteVpcPeeringConnection_fleetId :: Lens' DeleteVpcPeeringConnection Text

-- | A unique identifier for a VPC peering connection. This value is
--   included in the VpcPeeringConnection object, which can be retrieved by
--   calling DescribeVpcPeeringConnections.
deleteVpcPeeringConnection_vpcPeeringConnectionId :: Lens' DeleteVpcPeeringConnection Text

-- | <i>See:</i> <a>newDeleteVpcPeeringConnectionResponse</a> smart
--   constructor.
data DeleteVpcPeeringConnectionResponse
DeleteVpcPeeringConnectionResponse' :: Int -> DeleteVpcPeeringConnectionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteVpcPeeringConnectionResponse'] :: DeleteVpcPeeringConnectionResponse -> Int

-- | Create a value of <a>DeleteVpcPeeringConnectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVpcPeeringConnectionResponse'</a>,
--   <a>deleteVpcPeeringConnectionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteVpcPeeringConnectionResponse :: Int -> DeleteVpcPeeringConnectionResponse

-- | The response's http status code.
deleteVpcPeeringConnectionResponse_httpStatus :: Lens' DeleteVpcPeeringConnectionResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnection
instance GHC.Show.Show Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnection
instance GHC.Read.Read Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnection
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnection
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnectionResponse
instance GHC.Show.Show Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnectionResponse
instance GHC.Read.Read Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnectionResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnection
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnection
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeleteVpcPeeringConnection.DeleteVpcPeeringConnection


-- | Cancels a pending VPC peering authorization for the specified VPC. If
--   you need to delete an existing VPC peering connection, call
--   DeleteVpcPeeringConnection.
--   
--   <b>Related actions</b>
--   
--   CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations |
--   DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection |
--   DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.DeleteVpcPeeringAuthorization

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteVpcPeeringAuthorization</a> smart constructor.
data DeleteVpcPeeringAuthorization
DeleteVpcPeeringAuthorization' :: Text -> Text -> DeleteVpcPeeringAuthorization

-- | A unique identifier for the AWS account that you use to manage your
--   GameLift fleet. You can find your Account ID in the AWS Management
--   Console under account settings.
[$sel:gameLiftAwsAccountId:DeleteVpcPeeringAuthorization'] :: DeleteVpcPeeringAuthorization -> Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
[$sel:peerVpcId:DeleteVpcPeeringAuthorization'] :: DeleteVpcPeeringAuthorization -> Text

-- | Create a value of <a>DeleteVpcPeeringAuthorization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameLiftAwsAccountId:DeleteVpcPeeringAuthorization'</a>,
--   <a>deleteVpcPeeringAuthorization_gameLiftAwsAccountId</a> - A unique
--   identifier for the AWS account that you use to manage your GameLift
--   fleet. You can find your Account ID in the AWS Management Console
--   under account settings.
--   
--   <a>$sel:peerVpcId:DeleteVpcPeeringAuthorization'</a>,
--   <a>deleteVpcPeeringAuthorization_peerVpcId</a> - A unique identifier
--   for a VPC with resources to be accessed by your GameLift fleet. The
--   VPC must be in the same Region as your fleet. To look up a VPC ID, use
--   the <a>VPC Dashboard</a> in the AWS Management Console. Learn more
--   about VPC peering in <a>VPC Peering with GameLift Fleets</a>.
newDeleteVpcPeeringAuthorization :: Text -> Text -> DeleteVpcPeeringAuthorization

-- | A unique identifier for the AWS account that you use to manage your
--   GameLift fleet. You can find your Account ID in the AWS Management
--   Console under account settings.
deleteVpcPeeringAuthorization_gameLiftAwsAccountId :: Lens' DeleteVpcPeeringAuthorization Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
deleteVpcPeeringAuthorization_peerVpcId :: Lens' DeleteVpcPeeringAuthorization Text

-- | <i>See:</i> <a>newDeleteVpcPeeringAuthorizationResponse</a> smart
--   constructor.
data DeleteVpcPeeringAuthorizationResponse
DeleteVpcPeeringAuthorizationResponse' :: Int -> DeleteVpcPeeringAuthorizationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteVpcPeeringAuthorizationResponse'] :: DeleteVpcPeeringAuthorizationResponse -> Int

-- | Create a value of <a>DeleteVpcPeeringAuthorizationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVpcPeeringAuthorizationResponse'</a>,
--   <a>deleteVpcPeeringAuthorizationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteVpcPeeringAuthorizationResponse :: Int -> DeleteVpcPeeringAuthorizationResponse

-- | The response's http status code.
deleteVpcPeeringAuthorizationResponse_httpStatus :: Lens' DeleteVpcPeeringAuthorizationResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorization
instance GHC.Show.Show Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorization
instance GHC.Read.Read Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorization
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorization
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorizationResponse
instance GHC.Show.Show Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorizationResponse
instance GHC.Read.Read Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorizationResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorizationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorization
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorizationResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorization
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorization
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorization
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorization
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorization
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeleteVpcPeeringAuthorization.DeleteVpcPeeringAuthorization


-- | Deletes a Realtime script. This operation permanently deletes the
--   script record. If script files were uploaded, they are also deleted
--   (files stored in an S3 bucket are not deleted).
--   
--   To delete a script, specify the script ID. Before deleting a script,
--   be sure to terminate all fleets that are deployed with the script
--   being deleted. Fleet instances periodically check for script updates,
--   and if the script record no longer exists, the instance will go into
--   an error state and be unable to host game sessions.
--   
--   <b>Learn more</b>
--   
--   <a>Amazon GameLift Realtime Servers</a>
--   
--   <b>Related actions</b>
--   
--   CreateScript | ListScripts | DescribeScript | UpdateScript |
--   DeleteScript | <a>All APIs by task</a>
module Network.AWS.GameLift.DeleteScript

-- | <i>See:</i> <a>newDeleteScript</a> smart constructor.
data DeleteScript
DeleteScript' :: Text -> DeleteScript

-- | A unique identifier for the Realtime script to delete. You can use
--   either the script ID or ARN value.
[$sel:scriptId:DeleteScript'] :: DeleteScript -> Text

-- | Create a value of <a>DeleteScript</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scriptId:DeleteScript'</a>, <a>deleteScript_scriptId</a> - A
--   unique identifier for the Realtime script to delete. You can use
--   either the script ID or ARN value.
newDeleteScript :: Text -> DeleteScript

-- | A unique identifier for the Realtime script to delete. You can use
--   either the script ID or ARN value.
deleteScript_scriptId :: Lens' DeleteScript Text

-- | <i>See:</i> <a>newDeleteScriptResponse</a> smart constructor.
data DeleteScriptResponse
DeleteScriptResponse' :: DeleteScriptResponse

-- | Create a value of <a>DeleteScriptResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteScriptResponse :: DeleteScriptResponse
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteScript.DeleteScript
instance GHC.Show.Show Network.AWS.GameLift.DeleteScript.DeleteScript
instance GHC.Read.Read Network.AWS.GameLift.DeleteScript.DeleteScript
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteScript.DeleteScript
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteScript.DeleteScriptResponse
instance GHC.Show.Show Network.AWS.GameLift.DeleteScript.DeleteScriptResponse
instance GHC.Read.Read Network.AWS.GameLift.DeleteScript.DeleteScriptResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteScript.DeleteScriptResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeleteScript.DeleteScript
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteScript.DeleteScriptResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeleteScript.DeleteScript
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteScript.DeleteScript
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeleteScript.DeleteScript
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeleteScript.DeleteScript
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeleteScript.DeleteScript
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeleteScript.DeleteScript


-- | Deletes a fleet scaling policy. Once deleted, the policy is no longer
--   in force and GameLift removes all record of it. To delete a scaling
--   policy, specify both the scaling policy name and the fleet ID it is
--   associated with.
--   
--   To temporarily suspend scaling policies, call StopFleetActions. This
--   operation suspends all policies for the fleet.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetCapacity | UpdateFleetCapacity |
--   DescribeEC2InstanceLimits | PutScalingPolicy | DescribeScalingPolicies
--   | DeleteScalingPolicy | StopFleetActions | StartFleetActions | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.DeleteScalingPolicy

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteScalingPolicy</a> smart constructor.
data DeleteScalingPolicy
DeleteScalingPolicy' :: Text -> Text -> DeleteScalingPolicy

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
[$sel:name:DeleteScalingPolicy'] :: DeleteScalingPolicy -> Text

-- | A unique identifier for the fleet to be deleted. You can use either
--   the fleet ID or ARN value.
[$sel:fleetId:DeleteScalingPolicy'] :: DeleteScalingPolicy -> Text

-- | Create a value of <a>DeleteScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteScalingPolicy'</a>, <a>deleteScalingPolicy_name</a>
--   - A descriptive label that is associated with a fleet's scaling
--   policy. Policy names do not need to be unique.
--   
--   <a>$sel:fleetId:DeleteScalingPolicy'</a>,
--   <a>deleteScalingPolicy_fleetId</a> - A unique identifier for the fleet
--   to be deleted. You can use either the fleet ID or ARN value.
newDeleteScalingPolicy :: Text -> Text -> DeleteScalingPolicy

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
deleteScalingPolicy_name :: Lens' DeleteScalingPolicy Text

-- | A unique identifier for the fleet to be deleted. You can use either
--   the fleet ID or ARN value.
deleteScalingPolicy_fleetId :: Lens' DeleteScalingPolicy Text

-- | <i>See:</i> <a>newDeleteScalingPolicyResponse</a> smart constructor.
data DeleteScalingPolicyResponse
DeleteScalingPolicyResponse' :: DeleteScalingPolicyResponse

-- | Create a value of <a>DeleteScalingPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteScalingPolicyResponse :: DeleteScalingPolicyResponse
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicy
instance GHC.Show.Show Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicy
instance GHC.Read.Read Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicy
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicy
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicyResponse
instance GHC.Show.Show Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicyResponse
instance GHC.Read.Read Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicyResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeleteScalingPolicy.DeleteScalingPolicy


-- | Deletes an existing matchmaking rule set. To delete the rule set,
--   provide the rule set name. Rule sets cannot be deleted if they are
--   currently being used by a matchmaking configuration.
--   
--   <b>Learn more</b>
--   
--   <ul>
--   <li><a>Build a rule set</a></li>
--   </ul>
--   
--   <b>Related actions</b>
--   
--   CreateMatchmakingConfiguration | DescribeMatchmakingConfigurations |
--   UpdateMatchmakingConfiguration | DeleteMatchmakingConfiguration |
--   CreateMatchmakingRuleSet | DescribeMatchmakingRuleSets |
--   ValidateMatchmakingRuleSet | DeleteMatchmakingRuleSet | <a>All APIs by
--   task</a>
module Network.AWS.GameLift.DeleteMatchmakingRuleSet

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteMatchmakingRuleSet</a> smart constructor.
data DeleteMatchmakingRuleSet
DeleteMatchmakingRuleSet' :: Text -> DeleteMatchmakingRuleSet

-- | A unique identifier for the matchmaking rule set to be deleted. (Note:
--   The rule set name is different from the optional "name" field in the
--   rule set body.) You can use either the rule set name or ARN value.
[$sel:name:DeleteMatchmakingRuleSet'] :: DeleteMatchmakingRuleSet -> Text

-- | Create a value of <a>DeleteMatchmakingRuleSet</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteMatchmakingRuleSet'</a>,
--   <a>deleteMatchmakingRuleSet_name</a> - A unique identifier for the
--   matchmaking rule set to be deleted. (Note: The rule set name is
--   different from the optional "name" field in the rule set body.) You
--   can use either the rule set name or ARN value.
newDeleteMatchmakingRuleSet :: Text -> DeleteMatchmakingRuleSet

-- | A unique identifier for the matchmaking rule set to be deleted. (Note:
--   The rule set name is different from the optional "name" field in the
--   rule set body.) You can use either the rule set name or ARN value.
deleteMatchmakingRuleSet_name :: Lens' DeleteMatchmakingRuleSet Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDeleteMatchmakingRuleSetResponse</a> smart
--   constructor.
data DeleteMatchmakingRuleSetResponse
DeleteMatchmakingRuleSetResponse' :: Int -> DeleteMatchmakingRuleSetResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteMatchmakingRuleSetResponse'] :: DeleteMatchmakingRuleSetResponse -> Int

-- | Create a value of <a>DeleteMatchmakingRuleSetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMatchmakingRuleSetResponse'</a>,
--   <a>deleteMatchmakingRuleSetResponse_httpStatus</a> - The response's
--   http status code.
newDeleteMatchmakingRuleSetResponse :: Int -> DeleteMatchmakingRuleSetResponse

-- | The response's http status code.
deleteMatchmakingRuleSetResponse_httpStatus :: Lens' DeleteMatchmakingRuleSetResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSet
instance GHC.Show.Show Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSet
instance GHC.Read.Read Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSet
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSet
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSetResponse
instance GHC.Show.Show Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSetResponse
instance GHC.Read.Read Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSetResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSet
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSetResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSet
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSet
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSet
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeleteMatchmakingRuleSet.DeleteMatchmakingRuleSet


-- | Permanently removes a FlexMatch matchmaking configuration. To delete,
--   specify the configuration name. A matchmaking configuration cannot be
--   deleted if it is being used in any active matchmaking tickets.
--   
--   <b>Related actions</b>
--   
--   CreateMatchmakingConfiguration | DescribeMatchmakingConfigurations |
--   UpdateMatchmakingConfiguration | DeleteMatchmakingConfiguration |
--   CreateMatchmakingRuleSet | DescribeMatchmakingRuleSets |
--   ValidateMatchmakingRuleSet | DeleteMatchmakingRuleSet | <a>All APIs by
--   task</a>
module Network.AWS.GameLift.DeleteMatchmakingConfiguration

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteMatchmakingConfiguration</a> smart
--   constructor.
data DeleteMatchmakingConfiguration
DeleteMatchmakingConfiguration' :: Text -> DeleteMatchmakingConfiguration

-- | A unique identifier for the matchmaking configuration. You can use
--   either the configuration name or ARN value.
[$sel:name:DeleteMatchmakingConfiguration'] :: DeleteMatchmakingConfiguration -> Text

-- | Create a value of <a>DeleteMatchmakingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteMatchmakingConfiguration'</a>,
--   <a>deleteMatchmakingConfiguration_name</a> - A unique identifier for
--   the matchmaking configuration. You can use either the configuration
--   name or ARN value.
newDeleteMatchmakingConfiguration :: Text -> DeleteMatchmakingConfiguration

-- | A unique identifier for the matchmaking configuration. You can use
--   either the configuration name or ARN value.
deleteMatchmakingConfiguration_name :: Lens' DeleteMatchmakingConfiguration Text

-- | <i>See:</i> <a>newDeleteMatchmakingConfigurationResponse</a> smart
--   constructor.
data DeleteMatchmakingConfigurationResponse
DeleteMatchmakingConfigurationResponse' :: Int -> DeleteMatchmakingConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteMatchmakingConfigurationResponse'] :: DeleteMatchmakingConfigurationResponse -> Int

-- | Create a value of <a>DeleteMatchmakingConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMatchmakingConfigurationResponse'</a>,
--   <a>deleteMatchmakingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteMatchmakingConfigurationResponse :: Int -> DeleteMatchmakingConfigurationResponse

-- | The response's http status code.
deleteMatchmakingConfigurationResponse_httpStatus :: Lens' DeleteMatchmakingConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfiguration
instance GHC.Show.Show Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfiguration
instance GHC.Read.Read Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfiguration
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfigurationResponse
instance GHC.Show.Show Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfigurationResponse
instance GHC.Read.Read Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfigurationResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeleteMatchmakingConfiguration.DeleteMatchmakingConfiguration


-- | Deletes a game session queue. Once a queue is successfully deleted,
--   unfulfilled StartGameSessionPlacement requests that reference the
--   queue will fail. To delete a queue, specify the queue name.
--   
--   <b>Learn more</b>
--   
--   <a>Using Multi-Region Queues</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameSessionQueue | DescribeGameSessionQueues |
--   UpdateGameSessionQueue | DeleteGameSessionQueue | <a>All APIs by
--   task</a>
module Network.AWS.GameLift.DeleteGameSessionQueue

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteGameSessionQueue</a> smart constructor.
data DeleteGameSessionQueue
DeleteGameSessionQueue' :: Text -> DeleteGameSessionQueue

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region. You can use either the queue
--   ID or ARN value.
[$sel:name:DeleteGameSessionQueue'] :: DeleteGameSessionQueue -> Text

-- | Create a value of <a>DeleteGameSessionQueue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteGameSessionQueue'</a>,
--   <a>deleteGameSessionQueue_name</a> - A descriptive label that is
--   associated with game session queue. Queue names must be unique within
--   each Region. You can use either the queue ID or ARN value.
newDeleteGameSessionQueue :: Text -> DeleteGameSessionQueue

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region. You can use either the queue
--   ID or ARN value.
deleteGameSessionQueue_name :: Lens' DeleteGameSessionQueue Text

-- | <i>See:</i> <a>newDeleteGameSessionQueueResponse</a> smart
--   constructor.
data DeleteGameSessionQueueResponse
DeleteGameSessionQueueResponse' :: Int -> DeleteGameSessionQueueResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteGameSessionQueueResponse'] :: DeleteGameSessionQueueResponse -> Int

-- | Create a value of <a>DeleteGameSessionQueueResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteGameSessionQueueResponse'</a>,
--   <a>deleteGameSessionQueueResponse_httpStatus</a> - The response's http
--   status code.
newDeleteGameSessionQueueResponse :: Int -> DeleteGameSessionQueueResponse

-- | The response's http status code.
deleteGameSessionQueueResponse_httpStatus :: Lens' DeleteGameSessionQueueResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueue
instance GHC.Show.Show Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueue
instance GHC.Read.Read Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueue
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueue
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueueResponse
instance GHC.Show.Show Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueueResponse
instance GHC.Read.Read Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueueResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueue
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueueResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueue
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueue
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueue
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeleteGameSessionQueue.DeleteGameSessionQueue


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Terminates a game server group and permanently deletes the game server
--   group record. You have several options for how these resources are
--   impacted when deleting the game server group. Depending on the type of
--   delete operation selected, this operation might affect these
--   resources:
--   
--   <ul>
--   <li>The game server group</li>
--   <li>The corresponding Auto Scaling group</li>
--   <li>All game servers that are currently running in the group</li>
--   </ul>
--   
--   To delete a game server group, identify the game server group to
--   delete and specify the type of delete operation to initiate. Game
--   server groups can only be deleted if they are in <tt>ACTIVE</tt> or
--   <tt>ERROR</tt> status.
--   
--   If the delete request is successful, a series of operations are kicked
--   off. The game server group status is changed to
--   <tt>DELETE_SCHEDULED</tt>, which prevents new game servers from being
--   registered and stops automatic scaling activity. Once all game servers
--   in the game server group are deregistered, GameLift FleetIQ can begin
--   deleting resources. If any of the delete operations fail, the game
--   server group is placed in <tt>ERROR</tt> status.
--   
--   GameLift FleetIQ emits delete events to Amazon CloudWatch.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
module Network.AWS.GameLift.DeleteGameServerGroup

-- | <i>See:</i> <a>newDeleteGameServerGroup</a> smart constructor.
data DeleteGameServerGroup
DeleteGameServerGroup' :: Maybe GameServerGroupDeleteOption -> Text -> DeleteGameServerGroup

-- | The type of delete to perform. Options include the following:
--   
--   <ul>
--   <li><tt>SAFE_DELETE</tt> – (default) Terminates the game server group
--   and EC2 Auto Scaling group only when it has no game servers that are
--   in <tt>UTILIZED</tt> status.</li>
--   <li><tt>FORCE_DELETE</tt> – Terminates the game server group,
--   including all active game servers regardless of their utilization
--   status, and the EC2 Auto Scaling group.</li>
--   <li><tt>RETAIN</tt> – Does a safe delete of the game server group but
--   retains the EC2 Auto Scaling group as is.</li>
--   </ul>
[$sel:deleteOption:DeleteGameServerGroup'] :: DeleteGameServerGroup -> Maybe GameServerGroupDeleteOption

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
[$sel:gameServerGroupName:DeleteGameServerGroup'] :: DeleteGameServerGroup -> Text

-- | Create a value of <a>DeleteGameServerGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteOption:DeleteGameServerGroup'</a>,
--   <a>deleteGameServerGroup_deleteOption</a> - The type of delete to
--   perform. Options include the following:
--   
--   <ul>
--   <li><tt>SAFE_DELETE</tt> – (default) Terminates the game server group
--   and EC2 Auto Scaling group only when it has no game servers that are
--   in <tt>UTILIZED</tt> status.</li>
--   <li><tt>FORCE_DELETE</tt> – Terminates the game server group,
--   including all active game servers regardless of their utilization
--   status, and the EC2 Auto Scaling group.</li>
--   <li><tt>RETAIN</tt> – Does a safe delete of the game server group but
--   retains the EC2 Auto Scaling group as is.</li>
--   </ul>
--   
--   <a>$sel:gameServerGroupName:DeleteGameServerGroup'</a>,
--   <a>deleteGameServerGroup_gameServerGroupName</a> - A unique identifier
--   for the game server group. Use either the GameServerGroup name or ARN
--   value.
newDeleteGameServerGroup :: Text -> DeleteGameServerGroup

-- | The type of delete to perform. Options include the following:
--   
--   <ul>
--   <li><tt>SAFE_DELETE</tt> – (default) Terminates the game server group
--   and EC2 Auto Scaling group only when it has no game servers that are
--   in <tt>UTILIZED</tt> status.</li>
--   <li><tt>FORCE_DELETE</tt> – Terminates the game server group,
--   including all active game servers regardless of their utilization
--   status, and the EC2 Auto Scaling group.</li>
--   <li><tt>RETAIN</tt> – Does a safe delete of the game server group but
--   retains the EC2 Auto Scaling group as is.</li>
--   </ul>
deleteGameServerGroup_deleteOption :: Lens' DeleteGameServerGroup (Maybe GameServerGroupDeleteOption)

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
deleteGameServerGroup_gameServerGroupName :: Lens' DeleteGameServerGroup Text

-- | <i>See:</i> <a>newDeleteGameServerGroupResponse</a> smart constructor.
data DeleteGameServerGroupResponse
DeleteGameServerGroupResponse' :: Maybe GameServerGroup -> Int -> DeleteGameServerGroupResponse

-- | An object that describes the deleted game server group resource, with
--   status updated to <tt>DELETE_SCHEDULED</tt>.
[$sel:gameServerGroup:DeleteGameServerGroupResponse'] :: DeleteGameServerGroupResponse -> Maybe GameServerGroup

-- | The response's http status code.
[$sel:httpStatus:DeleteGameServerGroupResponse'] :: DeleteGameServerGroupResponse -> Int

-- | Create a value of <a>DeleteGameServerGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroup:DeleteGameServerGroupResponse'</a>,
--   <a>deleteGameServerGroupResponse_gameServerGroup</a> - An object that
--   describes the deleted game server group resource, with status updated
--   to <tt>DELETE_SCHEDULED</tt>.
--   
--   <a>$sel:httpStatus:DeleteGameServerGroupResponse'</a>,
--   <a>deleteGameServerGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteGameServerGroupResponse :: Int -> DeleteGameServerGroupResponse

-- | An object that describes the deleted game server group resource, with
--   status updated to <tt>DELETE_SCHEDULED</tt>.
deleteGameServerGroupResponse_gameServerGroup :: Lens' DeleteGameServerGroupResponse (Maybe GameServerGroup)

-- | The response's http status code.
deleteGameServerGroupResponse_httpStatus :: Lens' DeleteGameServerGroupResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroup
instance GHC.Show.Show Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroup
instance GHC.Read.Read Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroup
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroup
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroupResponse
instance GHC.Show.Show Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroupResponse
instance GHC.Read.Read Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroupResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeleteGameServerGroup.DeleteGameServerGroup


-- | Removes locations from a multi-location fleet. When deleting a
--   location, all game server process and all instances that are still
--   active in the location are shut down.
--   
--   To delete fleet locations, identify the fleet ID and provide a list of
--   the locations to be deleted.
--   
--   If successful, GameLift sets the location status to <tt>DELETING</tt>,
--   and begins to shut down existing server processes and terminate
--   instances in each location being deleted. When completed, the location
--   status changes to <tt>TERMINATED</tt>.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleetLocations | DescribeFleetLocationAttributes |
--   DescribeFleetLocationCapacity | DescribeFleetLocationUtilization |
--   DescribeFleetAttributes | DescribeFleetCapacity |
--   DescribeFleetUtilization | UpdateFleetCapacity | StopFleetActions |
--   DeleteFleetLocations | <a>All APIs by task</a>
module Network.AWS.GameLift.DeleteFleetLocations

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteFleetLocations</a> smart constructor.
data DeleteFleetLocations
DeleteFleetLocations' :: Text -> NonEmpty Text -> DeleteFleetLocations

-- | A unique identifier for the fleet to delete locations for. You can use
--   either the fleet ID or ARN value.
[$sel:fleetId:DeleteFleetLocations'] :: DeleteFleetLocations -> Text

-- | The list of fleet locations to delete. Specify locations in the form
--   of an AWS Region code, such as <tt>us-west-2</tt>.
[$sel:locations:DeleteFleetLocations'] :: DeleteFleetLocations -> NonEmpty Text

-- | Create a value of <a>DeleteFleetLocations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DeleteFleetLocations'</a>,
--   <a>deleteFleetLocations_fleetId</a> - A unique identifier for the
--   fleet to delete locations for. You can use either the fleet ID or ARN
--   value.
--   
--   <a>$sel:locations:DeleteFleetLocations'</a>,
--   <a>deleteFleetLocations_locations</a> - The list of fleet locations to
--   delete. Specify locations in the form of an AWS Region code, such as
--   <tt>us-west-2</tt>.
newDeleteFleetLocations :: Text -> NonEmpty Text -> DeleteFleetLocations

-- | A unique identifier for the fleet to delete locations for. You can use
--   either the fleet ID or ARN value.
deleteFleetLocations_fleetId :: Lens' DeleteFleetLocations Text

-- | The list of fleet locations to delete. Specify locations in the form
--   of an AWS Region code, such as <tt>us-west-2</tt>.
deleteFleetLocations_locations :: Lens' DeleteFleetLocations (NonEmpty Text)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDeleteFleetLocationsResponse</a> smart constructor.
data DeleteFleetLocationsResponse
DeleteFleetLocationsResponse' :: Maybe [LocationState] -> Maybe Text -> Maybe Text -> Int -> DeleteFleetLocationsResponse

-- | The remote locations that are being deleted, with each location status
--   set to <tt>DELETING</tt>.
[$sel:locationStates:DeleteFleetLocationsResponse'] :: DeleteFleetLocationsResponse -> Maybe [LocationState]

-- | A unique identifier for the fleet that location attributes are being
--   deleted for.
[$sel:fleetId:DeleteFleetLocationsResponse'] :: DeleteFleetLocationsResponse -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:DeleteFleetLocationsResponse'] :: DeleteFleetLocationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteFleetLocationsResponse'] :: DeleteFleetLocationsResponse -> Int

-- | Create a value of <a>DeleteFleetLocationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationStates:DeleteFleetLocationsResponse'</a>,
--   <a>deleteFleetLocationsResponse_locationStates</a> - The remote
--   locations that are being deleted, with each location status set to
--   <tt>DELETING</tt>.
--   
--   <a>$sel:fleetId:DeleteFleetLocations'</a>,
--   <a>deleteFleetLocationsResponse_fleetId</a> - A unique identifier for
--   the fleet that location attributes are being deleted for.
--   
--   <a>$sel:fleetArn:DeleteFleetLocationsResponse'</a>,
--   <a>deleteFleetLocationsResponse_fleetArn</a> - The Amazon Resource
--   Name (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:httpStatus:DeleteFleetLocationsResponse'</a>,
--   <a>deleteFleetLocationsResponse_httpStatus</a> - The response's http
--   status code.
newDeleteFleetLocationsResponse :: Int -> DeleteFleetLocationsResponse

-- | The remote locations that are being deleted, with each location status
--   set to <tt>DELETING</tt>.
deleteFleetLocationsResponse_locationStates :: Lens' DeleteFleetLocationsResponse (Maybe [LocationState])

-- | A unique identifier for the fleet that location attributes are being
--   deleted for.
deleteFleetLocationsResponse_fleetId :: Lens' DeleteFleetLocationsResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
deleteFleetLocationsResponse_fleetArn :: Lens' DeleteFleetLocationsResponse (Maybe Text)

-- | The response's http status code.
deleteFleetLocationsResponse_httpStatus :: Lens' DeleteFleetLocationsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocations
instance GHC.Show.Show Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocations
instance GHC.Read.Read Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocations
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocations
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocationsResponse
instance GHC.Show.Show Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocationsResponse
instance GHC.Read.Read Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocationsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocations
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocations
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocations
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocations
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeleteFleetLocations.DeleteFleetLocations


-- | Deletes all resources and information related a fleet. Any current
--   fleet instances, including those in remote locations, are shut down.
--   You don't need to call <tt>DeleteFleetLocations</tt> separately.
--   
--   If the fleet being deleted has a VPC peering connection, you first
--   need to get a valid authorization (good for 24 hours) by calling
--   CreateVpcPeeringAuthorization. You do not need to explicitly delete
--   the VPC peering connection--this is done as part of the delete fleet
--   process.
--   
--   To delete a fleet, specify the fleet ID to be terminated. During the
--   deletion process the fleet status is changed to <tt>DELETING</tt>.
--   When completed, the status switches to <tt>TERMINATED</tt> and the
--   fleet event <tt>FLEET_DELETED</tt> is sent.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift Fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleetLocations | UpdateFleetAttributes | UpdateFleetCapacity |
--   UpdateFleetPortSettings | UpdateRuntimeConfiguration |
--   StopFleetActions | StartFleetActions | PutScalingPolicy | DeleteFleet
--   | DeleteFleetLocations | DeleteScalingPolicy | <a>All APIs by task</a>
module Network.AWS.GameLift.DeleteFleet

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteFleet</a> smart constructor.
data DeleteFleet
DeleteFleet' :: Text -> DeleteFleet

-- | A unique identifier for the fleet to be deleted. You can use either
--   the fleet ID or ARN value.
[$sel:fleetId:DeleteFleet'] :: DeleteFleet -> Text

-- | Create a value of <a>DeleteFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DeleteFleet'</a>, <a>deleteFleet_fleetId</a> - A
--   unique identifier for the fleet to be deleted. You can use either the
--   fleet ID or ARN value.
newDeleteFleet :: Text -> DeleteFleet

-- | A unique identifier for the fleet to be deleted. You can use either
--   the fleet ID or ARN value.
deleteFleet_fleetId :: Lens' DeleteFleet Text

-- | <i>See:</i> <a>newDeleteFleetResponse</a> smart constructor.
data DeleteFleetResponse
DeleteFleetResponse' :: DeleteFleetResponse

-- | Create a value of <a>DeleteFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFleetResponse :: DeleteFleetResponse
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteFleet.DeleteFleet
instance GHC.Show.Show Network.AWS.GameLift.DeleteFleet.DeleteFleet
instance GHC.Read.Read Network.AWS.GameLift.DeleteFleet.DeleteFleet
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteFleet.DeleteFleet
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteFleet.DeleteFleetResponse
instance GHC.Show.Show Network.AWS.GameLift.DeleteFleet.DeleteFleetResponse
instance GHC.Read.Read Network.AWS.GameLift.DeleteFleet.DeleteFleetResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteFleet.DeleteFleetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeleteFleet.DeleteFleet
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteFleet.DeleteFleetResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeleteFleet.DeleteFleet
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteFleet.DeleteFleet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeleteFleet.DeleteFleet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeleteFleet.DeleteFleet
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeleteFleet.DeleteFleet
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeleteFleet.DeleteFleet


-- | Deletes a build. This operation permanently deletes the build resource
--   and any uploaded build files. Deleting a build does not affect the
--   status of any active fleets using the build, but you can no longer
--   create new fleets with the deleted build.
--   
--   To delete a build, specify the build ID.
--   
--   <b>Learn more</b>
--   
--   <a>Upload a Custom Server Build</a>
--   
--   <b>Related actions</b>
--   
--   CreateBuild | ListBuilds | DescribeBuild | UpdateBuild | DeleteBuild |
--   <a>All APIs by task</a>
module Network.AWS.GameLift.DeleteBuild

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteBuild</a> smart constructor.
data DeleteBuild
DeleteBuild' :: Text -> DeleteBuild

-- | A unique identifier for the build to delete. You can use either the
--   build ID or ARN value.
[$sel:buildId:DeleteBuild'] :: DeleteBuild -> Text

-- | Create a value of <a>DeleteBuild</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildId:DeleteBuild'</a>, <a>deleteBuild_buildId</a> - A
--   unique identifier for the build to delete. You can use either the
--   build ID or ARN value.
newDeleteBuild :: Text -> DeleteBuild

-- | A unique identifier for the build to delete. You can use either the
--   build ID or ARN value.
deleteBuild_buildId :: Lens' DeleteBuild Text

-- | <i>See:</i> <a>newDeleteBuildResponse</a> smart constructor.
data DeleteBuildResponse
DeleteBuildResponse' :: DeleteBuildResponse

-- | Create a value of <a>DeleteBuildResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteBuildResponse :: DeleteBuildResponse
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteBuild.DeleteBuild
instance GHC.Show.Show Network.AWS.GameLift.DeleteBuild.DeleteBuild
instance GHC.Read.Read Network.AWS.GameLift.DeleteBuild.DeleteBuild
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteBuild.DeleteBuild
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteBuild.DeleteBuildResponse
instance GHC.Show.Show Network.AWS.GameLift.DeleteBuild.DeleteBuildResponse
instance GHC.Read.Read Network.AWS.GameLift.DeleteBuild.DeleteBuildResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteBuild.DeleteBuildResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeleteBuild.DeleteBuild
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteBuild.DeleteBuildResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeleteBuild.DeleteBuild
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteBuild.DeleteBuild
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeleteBuild.DeleteBuild
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeleteBuild.DeleteBuild
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeleteBuild.DeleteBuild
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeleteBuild.DeleteBuild


-- | Deletes an alias. This operation removes all record of the alias. Game
--   clients attempting to access a server process using the deleted alias
--   receive an error. To delete an alias, specify the alias ID to be
--   deleted.
--   
--   <b>Related actions</b>
--   
--   CreateAlias | ListAliases | DescribeAlias | UpdateAlias | DeleteAlias
--   | ResolveAlias | <a>All APIs by task</a>
module Network.AWS.GameLift.DeleteAlias

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteAlias</a> smart constructor.
data DeleteAlias
DeleteAlias' :: Text -> DeleteAlias

-- | A unique identifier of the alias that you want to delete. You can use
--   either the alias ID or ARN value.
[$sel:aliasId:DeleteAlias'] :: DeleteAlias -> Text

-- | Create a value of <a>DeleteAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aliasId:DeleteAlias'</a>, <a>deleteAlias_aliasId</a> - A
--   unique identifier of the alias that you want to delete. You can use
--   either the alias ID or ARN value.
newDeleteAlias :: Text -> DeleteAlias

-- | A unique identifier of the alias that you want to delete. You can use
--   either the alias ID or ARN value.
deleteAlias_aliasId :: Lens' DeleteAlias Text

-- | <i>See:</i> <a>newDeleteAliasResponse</a> smart constructor.
data DeleteAliasResponse
DeleteAliasResponse' :: DeleteAliasResponse

-- | Create a value of <a>DeleteAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAliasResponse :: DeleteAliasResponse
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteAlias.DeleteAlias
instance GHC.Show.Show Network.AWS.GameLift.DeleteAlias.DeleteAlias
instance GHC.Read.Read Network.AWS.GameLift.DeleteAlias.DeleteAlias
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteAlias.DeleteAlias
instance GHC.Generics.Generic Network.AWS.GameLift.DeleteAlias.DeleteAliasResponse
instance GHC.Show.Show Network.AWS.GameLift.DeleteAlias.DeleteAliasResponse
instance GHC.Read.Read Network.AWS.GameLift.DeleteAlias.DeleteAliasResponse
instance GHC.Classes.Eq Network.AWS.GameLift.DeleteAlias.DeleteAliasResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.DeleteAlias.DeleteAlias
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteAlias.DeleteAliasResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.DeleteAlias.DeleteAlias
instance Control.DeepSeq.NFData Network.AWS.GameLift.DeleteAlias.DeleteAlias
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.DeleteAlias.DeleteAlias
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.DeleteAlias.DeleteAlias
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.DeleteAlias.DeleteAlias
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.DeleteAlias.DeleteAlias


-- | Establishes a VPC peering connection between a virtual private cloud
--   (VPC) in an AWS account with the VPC for your Amazon GameLift fleet.
--   VPC peering enables the game servers on your fleet to communicate
--   directly with other AWS resources. You can peer with VPCs in any AWS
--   account that you have access to, including the account that you use to
--   manage your Amazon GameLift fleets. You cannot peer with VPCs that are
--   in different Regions. For more information, see <a>VPC Peering with
--   Amazon GameLift Fleets</a>.
--   
--   Before calling this operation to establish the peering connection, you
--   first need to call CreateVpcPeeringAuthorization and identify the VPC
--   you want to peer with. Once the authorization for the specified VPC is
--   issued, you have 24 hours to establish the connection. These two
--   operations handle all tasks necessary to peer the two VPCs, including
--   acceptance, updating routing tables, etc.
--   
--   To establish the connection, call this operation from the AWS account
--   that is used to manage the Amazon GameLift fleets. Identify the
--   following values: (1) The ID of the fleet you want to be enable a VPC
--   peering connection for; (2) The AWS account with the VPC that you want
--   to peer with; and (3) The ID of the VPC you want to peer with. This
--   operation is asynchronous. If successful, a VpcPeeringConnection
--   request is created. You can use continuous polling to track the
--   request's status using DescribeVpcPeeringConnections, or by monitoring
--   fleet events for success or failure using DescribeFleetEvents.
--   
--   <b>Related actions</b>
--   
--   CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations |
--   DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection |
--   DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.CreateVpcPeeringConnection

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateVpcPeeringConnection</a> smart constructor.
data CreateVpcPeeringConnection
CreateVpcPeeringConnection' :: Text -> Text -> Text -> CreateVpcPeeringConnection

-- | A unique identifier for the fleet. You can use either the fleet ID or
--   ARN value. This tells Amazon GameLift which GameLift VPC to peer with.
[$sel:fleetId:CreateVpcPeeringConnection'] :: CreateVpcPeeringConnection -> Text

-- | A unique identifier for the AWS account with the VPC that you want to
--   peer your Amazon GameLift fleet with. You can find your Account ID in
--   the AWS Management Console under account settings.
[$sel:peerVpcAwsAccountId:CreateVpcPeeringConnection'] :: CreateVpcPeeringConnection -> Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
[$sel:peerVpcId:CreateVpcPeeringConnection'] :: CreateVpcPeeringConnection -> Text

-- | Create a value of <a>CreateVpcPeeringConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:CreateVpcPeeringConnection'</a>,
--   <a>createVpcPeeringConnection_fleetId</a> - A unique identifier for
--   the fleet. You can use either the fleet ID or ARN value. This tells
--   Amazon GameLift which GameLift VPC to peer with.
--   
--   <a>$sel:peerVpcAwsAccountId:CreateVpcPeeringConnection'</a>,
--   <a>createVpcPeeringConnection_peerVpcAwsAccountId</a> - A unique
--   identifier for the AWS account with the VPC that you want to peer your
--   Amazon GameLift fleet with. You can find your Account ID in the AWS
--   Management Console under account settings.
--   
--   <a>$sel:peerVpcId:CreateVpcPeeringConnection'</a>,
--   <a>createVpcPeeringConnection_peerVpcId</a> - A unique identifier for
--   a VPC with resources to be accessed by your GameLift fleet. The VPC
--   must be in the same Region as your fleet. To look up a VPC ID, use the
--   <a>VPC Dashboard</a> in the AWS Management Console. Learn more about
--   VPC peering in <a>VPC Peering with GameLift Fleets</a>.
newCreateVpcPeeringConnection :: Text -> Text -> Text -> CreateVpcPeeringConnection

-- | A unique identifier for the fleet. You can use either the fleet ID or
--   ARN value. This tells Amazon GameLift which GameLift VPC to peer with.
createVpcPeeringConnection_fleetId :: Lens' CreateVpcPeeringConnection Text

-- | A unique identifier for the AWS account with the VPC that you want to
--   peer your Amazon GameLift fleet with. You can find your Account ID in
--   the AWS Management Console under account settings.
createVpcPeeringConnection_peerVpcAwsAccountId :: Lens' CreateVpcPeeringConnection Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
createVpcPeeringConnection_peerVpcId :: Lens' CreateVpcPeeringConnection Text

-- | <i>See:</i> <a>newCreateVpcPeeringConnectionResponse</a> smart
--   constructor.
data CreateVpcPeeringConnectionResponse
CreateVpcPeeringConnectionResponse' :: Int -> CreateVpcPeeringConnectionResponse

-- | The response's http status code.
[$sel:httpStatus:CreateVpcPeeringConnectionResponse'] :: CreateVpcPeeringConnectionResponse -> Int

-- | Create a value of <a>CreateVpcPeeringConnectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVpcPeeringConnectionResponse'</a>,
--   <a>createVpcPeeringConnectionResponse_httpStatus</a> - The response's
--   http status code.
newCreateVpcPeeringConnectionResponse :: Int -> CreateVpcPeeringConnectionResponse

-- | The response's http status code.
createVpcPeeringConnectionResponse_httpStatus :: Lens' CreateVpcPeeringConnectionResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnection
instance GHC.Show.Show Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnection
instance GHC.Read.Read Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnection
instance GHC.Classes.Eq Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnection
instance GHC.Generics.Generic Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnectionResponse
instance GHC.Show.Show Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnectionResponse
instance GHC.Read.Read Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnectionResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnection
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnection
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreateVpcPeeringConnection.CreateVpcPeeringConnection


-- | Requests authorization to create or delete a peer connection between
--   the VPC for your Amazon GameLift fleet and a virtual private cloud
--   (VPC) in your AWS account. VPC peering enables the game servers on
--   your fleet to communicate directly with other AWS resources. Once
--   you've received authorization, call CreateVpcPeeringConnection to
--   establish the peering connection. For more information, see <a>VPC
--   Peering with Amazon GameLift Fleets</a>.
--   
--   You can peer with VPCs that are owned by any AWS account you have
--   access to, including the account that you use to manage your Amazon
--   GameLift fleets. You cannot peer with VPCs that are in different
--   Regions.
--   
--   To request authorization to create a connection, call this operation
--   from the AWS account with the VPC that you want to peer to your Amazon
--   GameLift fleet. For example, to enable your game servers to retrieve
--   data from a DynamoDB table, use the account that manages that DynamoDB
--   resource. Identify the following values: (1) The ID of the VPC that
--   you want to peer with, and (2) the ID of the AWS account that you use
--   to manage Amazon GameLift. If successful, VPC peering is authorized
--   for the specified VPC.
--   
--   To request authorization to delete a connection, call this operation
--   from the AWS account with the VPC that is peered with your Amazon
--   GameLift fleet. Identify the following values: (1) VPC ID that you
--   want to delete the peering connection for, and (2) ID of the AWS
--   account that you use to manage Amazon GameLift.
--   
--   The authorization remains valid for 24 hours unless it is canceled by
--   a call to DeleteVpcPeeringAuthorization. You must create or delete the
--   peering connection while the authorization is valid.
--   
--   <b>Related actions</b>
--   
--   CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations |
--   DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection |
--   DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.CreateVpcPeeringAuthorization

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateVpcPeeringAuthorization</a> smart constructor.
data CreateVpcPeeringAuthorization
CreateVpcPeeringAuthorization' :: Text -> Text -> CreateVpcPeeringAuthorization

-- | A unique identifier for the AWS account that you use to manage your
--   GameLift fleet. You can find your Account ID in the AWS Management
--   Console under account settings.
[$sel:gameLiftAwsAccountId:CreateVpcPeeringAuthorization'] :: CreateVpcPeeringAuthorization -> Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
[$sel:peerVpcId:CreateVpcPeeringAuthorization'] :: CreateVpcPeeringAuthorization -> Text

-- | Create a value of <a>CreateVpcPeeringAuthorization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameLiftAwsAccountId:CreateVpcPeeringAuthorization'</a>,
--   <a>createVpcPeeringAuthorization_gameLiftAwsAccountId</a> - A unique
--   identifier for the AWS account that you use to manage your GameLift
--   fleet. You can find your Account ID in the AWS Management Console
--   under account settings.
--   
--   <a>$sel:peerVpcId:CreateVpcPeeringAuthorization'</a>,
--   <a>createVpcPeeringAuthorization_peerVpcId</a> - A unique identifier
--   for a VPC with resources to be accessed by your GameLift fleet. The
--   VPC must be in the same Region as your fleet. To look up a VPC ID, use
--   the <a>VPC Dashboard</a> in the AWS Management Console. Learn more
--   about VPC peering in <a>VPC Peering with GameLift Fleets</a>.
newCreateVpcPeeringAuthorization :: Text -> Text -> CreateVpcPeeringAuthorization

-- | A unique identifier for the AWS account that you use to manage your
--   GameLift fleet. You can find your Account ID in the AWS Management
--   Console under account settings.
createVpcPeeringAuthorization_gameLiftAwsAccountId :: Lens' CreateVpcPeeringAuthorization Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
createVpcPeeringAuthorization_peerVpcId :: Lens' CreateVpcPeeringAuthorization Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateVpcPeeringAuthorizationResponse</a> smart
--   constructor.
data CreateVpcPeeringAuthorizationResponse
CreateVpcPeeringAuthorizationResponse' :: Maybe VpcPeeringAuthorization -> Int -> CreateVpcPeeringAuthorizationResponse

-- | Details on the requested VPC peering authorization, including
--   expiration.
[$sel:vpcPeeringAuthorization:CreateVpcPeeringAuthorizationResponse'] :: CreateVpcPeeringAuthorizationResponse -> Maybe VpcPeeringAuthorization

-- | The response's http status code.
[$sel:httpStatus:CreateVpcPeeringAuthorizationResponse'] :: CreateVpcPeeringAuthorizationResponse -> Int

-- | Create a value of <a>CreateVpcPeeringAuthorizationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:vpcPeeringAuthorization:CreateVpcPeeringAuthorizationResponse'</a>,
--   <a>createVpcPeeringAuthorizationResponse_vpcPeeringAuthorization</a> -
--   Details on the requested VPC peering authorization, including
--   expiration.
--   
--   <a>$sel:httpStatus:CreateVpcPeeringAuthorizationResponse'</a>,
--   <a>createVpcPeeringAuthorizationResponse_httpStatus</a> - The
--   response's http status code.
newCreateVpcPeeringAuthorizationResponse :: Int -> CreateVpcPeeringAuthorizationResponse

-- | Details on the requested VPC peering authorization, including
--   expiration.
createVpcPeeringAuthorizationResponse_vpcPeeringAuthorization :: Lens' CreateVpcPeeringAuthorizationResponse (Maybe VpcPeeringAuthorization)

-- | The response's http status code.
createVpcPeeringAuthorizationResponse_httpStatus :: Lens' CreateVpcPeeringAuthorizationResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorization
instance GHC.Show.Show Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorization
instance GHC.Read.Read Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorization
instance GHC.Classes.Eq Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorization
instance GHC.Generics.Generic Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorizationResponse
instance GHC.Show.Show Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorizationResponse
instance GHC.Read.Read Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorizationResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorizationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorization
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorizationResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorization
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorization
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorization
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorization
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorization
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreateVpcPeeringAuthorization.CreateVpcPeeringAuthorization


-- | Creates a new script record for your Realtime Servers script. Realtime
--   scripts are JavaScript that provide configuration settings and
--   optional custom game logic for your game. The script is deployed when
--   you create a Realtime Servers fleet to host your game sessions. Script
--   logic is executed during an active game session.
--   
--   To create a new script record, specify a script name and provide the
--   script file(s). The script files and all dependencies must be zipped
--   into a single file. You can pull the zip file from either of these
--   locations:
--   
--   <ul>
--   <li>A locally available directory. Use the <i>ZipFile</i> parameter
--   for this option.</li>
--   <li>An Amazon Simple Storage Service (Amazon S3) bucket under your AWS
--   account. Use the <i>StorageLocation</i> parameter for this option.
--   You'll need to have an Identity Access Management (IAM) role that
--   allows the Amazon GameLift service to access your S3 bucket.</li>
--   </ul>
--   
--   If the call is successful, a new script record is created with a
--   unique script ID. If the script file is provided as a local file, the
--   file is uploaded to an Amazon GameLift-owned S3 bucket and the script
--   record's storage location reflects this location. If the script file
--   is provided as an S3 bucket, Amazon GameLift accesses the file at this
--   storage location as needed for deployment.
--   
--   <b>Learn more</b>
--   
--   <a>Amazon GameLift Realtime Servers</a>
--   
--   <a>Set Up a Role for Amazon GameLift Access</a>
--   
--   <b>Related actions</b>
--   
--   CreateScript | ListScripts | DescribeScript | UpdateScript |
--   DeleteScript | <a>All APIs by task</a>
module Network.AWS.GameLift.CreateScript

-- | <i>See:</i> <a>newCreateScript</a> smart constructor.
data CreateScript
CreateScript' :: Maybe Base64 -> Maybe Text -> Maybe Text -> Maybe S3Location -> Maybe [Tag] -> CreateScript

-- | A data object containing your Realtime scripts and dependencies as a
--   zip file. The zip file can have one or multiple files. Maximum size of
--   a zip file is 5 MB.
--   
--   When using the AWS CLI tool to create a script, this parameter is set
--   to the zip file name. It must be prepended with the string "fileb://"
--   to indicate that the file data is a binary object. For example:
--   <tt>--zip-file fileb://myRealtimeScript.zip</tt>.
[$sel:zipFile:CreateScript'] :: CreateScript -> Maybe Base64

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique. You can use UpdateScript to change
--   this value later.
[$sel:version:CreateScript'] :: CreateScript -> Maybe Text

-- | A descriptive label that is associated with a script. Script names do
--   not need to be unique. You can use UpdateScript to change this value
--   later.
[$sel:name:CreateScript'] :: CreateScript -> Maybe Text

-- | The location of the Amazon S3 bucket where a zipped file containing
--   your Realtime scripts is stored. The storage location must specify the
--   Amazon S3 bucket name, the zip file name (the "key"), and a role ARN
--   that allows Amazon GameLift to access the Amazon S3 storage location.
--   The S3 bucket must be in the same Region where you want to create a
--   new script. By default, Amazon GameLift uploads the latest version of
--   the zip file; if you have S3 object versioning turned on, you can use
--   the <tt>ObjectVersion</tt> parameter to specify an earlier version.
[$sel:storageLocation:CreateScript'] :: CreateScript -> Maybe S3Location

-- | A list of labels to assign to the new script resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
[$sel:tags:CreateScript'] :: CreateScript -> Maybe [Tag]

-- | Create a value of <a>CreateScript</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:zipFile:CreateScript'</a>, <a>createScript_zipFile</a> - A
--   data object containing your Realtime scripts and dependencies as a zip
--   file. The zip file can have one or multiple files. Maximum size of a
--   zip file is 5 MB.
--   
--   When using the AWS CLI tool to create a script, this parameter is set
--   to the zip file name. It must be prepended with the string "fileb://"
--   to indicate that the file data is a binary object. For example:
--   <tt>--zip-file fileb://myRealtimeScript.zip</tt>.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:version:CreateScript'</a>, <a>createScript_version</a> -
--   Version information that is associated with a build or script. Version
--   strings do not need to be unique. You can use UpdateScript to change
--   this value later.
--   
--   <a>$sel:name:CreateScript'</a>, <a>createScript_name</a> - A
--   descriptive label that is associated with a script. Script names do
--   not need to be unique. You can use UpdateScript to change this value
--   later.
--   
--   <a>$sel:storageLocation:CreateScript'</a>,
--   <a>createScript_storageLocation</a> - The location of the Amazon S3
--   bucket where a zipped file containing your Realtime scripts is stored.
--   The storage location must specify the Amazon S3 bucket name, the zip
--   file name (the "key"), and a role ARN that allows Amazon GameLift to
--   access the Amazon S3 storage location. The S3 bucket must be in the
--   same Region where you want to create a new script. By default, Amazon
--   GameLift uploads the latest version of the zip file; if you have S3
--   object versioning turned on, you can use the <tt>ObjectVersion</tt>
--   parameter to specify an earlier version.
--   
--   <a>$sel:tags:CreateScript'</a>, <a>createScript_tags</a> - A list of
--   labels to assign to the new script resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
newCreateScript :: CreateScript

-- | A data object containing your Realtime scripts and dependencies as a
--   zip file. The zip file can have one or multiple files. Maximum size of
--   a zip file is 5 MB.
--   
--   When using the AWS CLI tool to create a script, this parameter is set
--   to the zip file name. It must be prepended with the string "fileb://"
--   to indicate that the file data is a binary object. For example:
--   <tt>--zip-file fileb://myRealtimeScript.zip</tt>.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
createScript_zipFile :: Lens' CreateScript (Maybe ByteString)

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique. You can use UpdateScript to change
--   this value later.
createScript_version :: Lens' CreateScript (Maybe Text)

-- | A descriptive label that is associated with a script. Script names do
--   not need to be unique. You can use UpdateScript to change this value
--   later.
createScript_name :: Lens' CreateScript (Maybe Text)

-- | The location of the Amazon S3 bucket where a zipped file containing
--   your Realtime scripts is stored. The storage location must specify the
--   Amazon S3 bucket name, the zip file name (the "key"), and a role ARN
--   that allows Amazon GameLift to access the Amazon S3 storage location.
--   The S3 bucket must be in the same Region where you want to create a
--   new script. By default, Amazon GameLift uploads the latest version of
--   the zip file; if you have S3 object versioning turned on, you can use
--   the <tt>ObjectVersion</tt> parameter to specify an earlier version.
createScript_storageLocation :: Lens' CreateScript (Maybe S3Location)

-- | A list of labels to assign to the new script resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
createScript_tags :: Lens' CreateScript (Maybe [Tag])

-- | <i>See:</i> <a>newCreateScriptResponse</a> smart constructor.
data CreateScriptResponse
CreateScriptResponse' :: Maybe Script -> Int -> CreateScriptResponse

-- | The newly created script record with a unique script ID and ARN. The
--   new script's storage location reflects an Amazon S3 location: (1) If
--   the script was uploaded from an S3 bucket under your account, the
--   storage location reflects the information that was provided in the
--   <i>CreateScript</i> request; (2) If the script file was uploaded from
--   a local zip file, the storage location reflects an S3 location
--   controls by the Amazon GameLift service.
[$sel:script:CreateScriptResponse'] :: CreateScriptResponse -> Maybe Script

-- | The response's http status code.
[$sel:httpStatus:CreateScriptResponse'] :: CreateScriptResponse -> Int

-- | Create a value of <a>CreateScriptResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:script:CreateScriptResponse'</a>,
--   <a>createScriptResponse_script</a> - The newly created script record
--   with a unique script ID and ARN. The new script's storage location
--   reflects an Amazon S3 location: (1) If the script was uploaded from an
--   S3 bucket under your account, the storage location reflects the
--   information that was provided in the <i>CreateScript</i> request; (2)
--   If the script file was uploaded from a local zip file, the storage
--   location reflects an S3 location controls by the Amazon GameLift
--   service.
--   
--   <a>$sel:httpStatus:CreateScriptResponse'</a>,
--   <a>createScriptResponse_httpStatus</a> - The response's http status
--   code.
newCreateScriptResponse :: Int -> CreateScriptResponse

-- | The newly created script record with a unique script ID and ARN. The
--   new script's storage location reflects an Amazon S3 location: (1) If
--   the script was uploaded from an S3 bucket under your account, the
--   storage location reflects the information that was provided in the
--   <i>CreateScript</i> request; (2) If the script file was uploaded from
--   a local zip file, the storage location reflects an S3 location
--   controls by the Amazon GameLift service.
createScriptResponse_script :: Lens' CreateScriptResponse (Maybe Script)

-- | The response's http status code.
createScriptResponse_httpStatus :: Lens' CreateScriptResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreateScript.CreateScript
instance GHC.Show.Show Network.AWS.GameLift.CreateScript.CreateScript
instance GHC.Read.Read Network.AWS.GameLift.CreateScript.CreateScript
instance GHC.Classes.Eq Network.AWS.GameLift.CreateScript.CreateScript
instance GHC.Generics.Generic Network.AWS.GameLift.CreateScript.CreateScriptResponse
instance GHC.Show.Show Network.AWS.GameLift.CreateScript.CreateScriptResponse
instance GHC.Read.Read Network.AWS.GameLift.CreateScript.CreateScriptResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreateScript.CreateScriptResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreateScript.CreateScript
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateScript.CreateScriptResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreateScript.CreateScript
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateScript.CreateScript
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreateScript.CreateScript
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreateScript.CreateScript
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreateScript.CreateScript
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreateScript.CreateScript


-- | Reserves open slots in a game session for a group of players. New
--   player sessions can be created in any game session with an open slot
--   that is in <tt>ACTIVE</tt> status and has a player creation policy of
--   <tt>ACCEPT_ALL</tt>. To add a single player to a game session, use
--   CreatePlayerSession.
--   
--   To create player sessions, specify a game session ID and a list of
--   player IDs. Optionally, provide a set of player data for each player
--   ID.
--   
--   If successful, a slot is reserved in the game session for each player,
--   and new PlayerSession objects are returned with player session IDs.
--   Each player references their player session ID when sending a
--   connection request to the game session, and the game server can use it
--   to validate the player reservation with the GameLift service. Player
--   sessions cannot be updated.
--   
--   <i>Available in Amazon GameLift Local.</i>
--   
--   <b>Related actions</b>
--   
--   CreatePlayerSession | CreatePlayerSessions | DescribePlayerSessions |
--   StartGameSessionPlacement | DescribeGameSessionPlacement | <a>All APIs
--   by task</a>
module Network.AWS.GameLift.CreatePlayerSessions

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreatePlayerSessions</a> smart constructor.
data CreatePlayerSessions
CreatePlayerSessions' :: Maybe (HashMap Text Text) -> Text -> NonEmpty Text -> CreatePlayerSessions

-- | Map of string pairs, each specifying a player ID and a set of
--   developer-defined information related to the player. Amazon GameLift
--   does not use this data, so it can be formatted as needed for use in
--   the game. Any player data strings for player IDs that are not included
--   in the <tt>PlayerIds</tt> parameter are ignored.
[$sel:playerDataMap:CreatePlayerSessions'] :: CreatePlayerSessions -> Maybe (HashMap Text Text)

-- | A unique identifier for the game session to add players to.
[$sel:gameSessionId:CreatePlayerSessions'] :: CreatePlayerSessions -> Text

-- | List of unique identifiers for the players to be added.
[$sel:playerIds:CreatePlayerSessions'] :: CreatePlayerSessions -> NonEmpty Text

-- | Create a value of <a>CreatePlayerSessions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerDataMap:CreatePlayerSessions'</a>,
--   <a>createPlayerSessions_playerDataMap</a> - Map of string pairs, each
--   specifying a player ID and a set of developer-defined information
--   related to the player. Amazon GameLift does not use this data, so it
--   can be formatted as needed for use in the game. Any player data
--   strings for player IDs that are not included in the <tt>PlayerIds</tt>
--   parameter are ignored.
--   
--   <a>$sel:gameSessionId:CreatePlayerSessions'</a>,
--   <a>createPlayerSessions_gameSessionId</a> - A unique identifier for
--   the game session to add players to.
--   
--   <a>$sel:playerIds:CreatePlayerSessions'</a>,
--   <a>createPlayerSessions_playerIds</a> - List of unique identifiers for
--   the players to be added.
newCreatePlayerSessions :: Text -> NonEmpty Text -> CreatePlayerSessions

-- | Map of string pairs, each specifying a player ID and a set of
--   developer-defined information related to the player. Amazon GameLift
--   does not use this data, so it can be formatted as needed for use in
--   the game. Any player data strings for player IDs that are not included
--   in the <tt>PlayerIds</tt> parameter are ignored.
createPlayerSessions_playerDataMap :: Lens' CreatePlayerSessions (Maybe (HashMap Text Text))

-- | A unique identifier for the game session to add players to.
createPlayerSessions_gameSessionId :: Lens' CreatePlayerSessions Text

-- | List of unique identifiers for the players to be added.
createPlayerSessions_playerIds :: Lens' CreatePlayerSessions (NonEmpty Text)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreatePlayerSessionsResponse</a> smart constructor.
data CreatePlayerSessionsResponse
CreatePlayerSessionsResponse' :: Maybe [PlayerSession] -> Int -> CreatePlayerSessionsResponse

-- | A collection of player session objects created for the added players.
[$sel:playerSessions:CreatePlayerSessionsResponse'] :: CreatePlayerSessionsResponse -> Maybe [PlayerSession]

-- | The response's http status code.
[$sel:httpStatus:CreatePlayerSessionsResponse'] :: CreatePlayerSessionsResponse -> Int

-- | Create a value of <a>CreatePlayerSessionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerSessions:CreatePlayerSessionsResponse'</a>,
--   <a>createPlayerSessionsResponse_playerSessions</a> - A collection of
--   player session objects created for the added players.
--   
--   <a>$sel:httpStatus:CreatePlayerSessionsResponse'</a>,
--   <a>createPlayerSessionsResponse_httpStatus</a> - The response's http
--   status code.
newCreatePlayerSessionsResponse :: Int -> CreatePlayerSessionsResponse

-- | A collection of player session objects created for the added players.
createPlayerSessionsResponse_playerSessions :: Lens' CreatePlayerSessionsResponse (Maybe [PlayerSession])

-- | The response's http status code.
createPlayerSessionsResponse_httpStatus :: Lens' CreatePlayerSessionsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessions
instance GHC.Show.Show Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessions
instance GHC.Read.Read Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessions
instance GHC.Classes.Eq Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessions
instance GHC.Generics.Generic Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessionsResponse
instance GHC.Show.Show Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessionsResponse
instance GHC.Read.Read Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessionsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessions
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessions
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessions
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessions
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreatePlayerSessions.CreatePlayerSessions


-- | Reserves an open player slot in a game session for a player. New
--   player sessions can be created in any game session with an open slot
--   that is in <tt>ACTIVE</tt> status and has a player creation policy of
--   <tt>ACCEPT_ALL</tt>. You can add a group of players to a game session
--   with CreatePlayerSessions.
--   
--   To create a player session, specify a game session ID, player ID, and
--   optionally a set of player data.
--   
--   If successful, a slot is reserved in the game session for the player
--   and a new PlayerSession object is returned with a player session ID.
--   The player references the player session ID when sending a connection
--   request to the game session, and the game server can use it to
--   validate the player reservation with the GameLift service. Player
--   sessions cannot be updated.
--   
--   <i>Available in Amazon GameLift Local.</i>
--   
--   <b>Related actions</b>
--   
--   CreatePlayerSession | CreatePlayerSessions | DescribePlayerSessions |
--   StartGameSessionPlacement | DescribeGameSessionPlacement | <a>All APIs
--   by task</a>
module Network.AWS.GameLift.CreatePlayerSession

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreatePlayerSession</a> smart constructor.
data CreatePlayerSession
CreatePlayerSession' :: Maybe Text -> Text -> Text -> CreatePlayerSession

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
[$sel:playerData:CreatePlayerSession'] :: CreatePlayerSession -> Maybe Text

-- | A unique identifier for the game session to add a player to.
[$sel:gameSessionId:CreatePlayerSession'] :: CreatePlayerSession -> Text

-- | A unique identifier for a player. Player IDs are developer-defined.
[$sel:playerId:CreatePlayerSession'] :: CreatePlayerSession -> Text

-- | Create a value of <a>CreatePlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerData:CreatePlayerSession'</a>,
--   <a>createPlayerSession_playerData</a> - Developer-defined information
--   related to a player. GameLift does not use this data, so it can be
--   formatted as needed for use in the game.
--   
--   <a>$sel:gameSessionId:CreatePlayerSession'</a>,
--   <a>createPlayerSession_gameSessionId</a> - A unique identifier for the
--   game session to add a player to.
--   
--   <a>$sel:playerId:CreatePlayerSession'</a>,
--   <a>createPlayerSession_playerId</a> - A unique identifier for a
--   player. Player IDs are developer-defined.
newCreatePlayerSession :: Text -> Text -> CreatePlayerSession

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
createPlayerSession_playerData :: Lens' CreatePlayerSession (Maybe Text)

-- | A unique identifier for the game session to add a player to.
createPlayerSession_gameSessionId :: Lens' CreatePlayerSession Text

-- | A unique identifier for a player. Player IDs are developer-defined.
createPlayerSession_playerId :: Lens' CreatePlayerSession Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreatePlayerSessionResponse</a> smart constructor.
data CreatePlayerSessionResponse
CreatePlayerSessionResponse' :: Maybe PlayerSession -> Int -> CreatePlayerSessionResponse

-- | Object that describes the newly created player session record.
[$sel:playerSession:CreatePlayerSessionResponse'] :: CreatePlayerSessionResponse -> Maybe PlayerSession

-- | The response's http status code.
[$sel:httpStatus:CreatePlayerSessionResponse'] :: CreatePlayerSessionResponse -> Int

-- | Create a value of <a>CreatePlayerSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerSession:CreatePlayerSessionResponse'</a>,
--   <a>createPlayerSessionResponse_playerSession</a> - Object that
--   describes the newly created player session record.
--   
--   <a>$sel:httpStatus:CreatePlayerSessionResponse'</a>,
--   <a>createPlayerSessionResponse_httpStatus</a> - The response's http
--   status code.
newCreatePlayerSessionResponse :: Int -> CreatePlayerSessionResponse

-- | Object that describes the newly created player session record.
createPlayerSessionResponse_playerSession :: Lens' CreatePlayerSessionResponse (Maybe PlayerSession)

-- | The response's http status code.
createPlayerSessionResponse_httpStatus :: Lens' CreatePlayerSessionResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSession
instance GHC.Show.Show Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSession
instance GHC.Read.Read Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSession
instance GHC.Classes.Eq Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSession
instance GHC.Generics.Generic Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSessionResponse
instance GHC.Show.Show Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSessionResponse
instance GHC.Read.Read Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSessionResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSession
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSession
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSession
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSession
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreatePlayerSession.CreatePlayerSession


-- | Creates a new rule set for FlexMatch matchmaking. A rule set describes
--   the type of match to create, such as the number and size of teams. It
--   also sets the parameters for acceptable player matches, such as
--   minimum skill level or character type. A rule set is used by a
--   MatchmakingConfiguration.
--   
--   To create a matchmaking rule set, provide unique rule set name and the
--   rule set body in JSON format. Rule sets must be defined in the same
--   Region as the matchmaking configuration they are used with.
--   
--   Since matchmaking rule sets cannot be edited, it is a good idea to
--   check the rule set syntax using ValidateMatchmakingRuleSet before
--   creating a new rule set.
--   
--   <b>Learn more</b>
--   
--   <ul>
--   <li><a>Build a rule set</a></li>
--   <li><a>Design a matchmaker</a></li>
--   <li><a>Matchmaking with FlexMatch</a></li>
--   </ul>
--   
--   <b>Related actions</b>
--   
--   CreateMatchmakingConfiguration | DescribeMatchmakingConfigurations |
--   UpdateMatchmakingConfiguration | DeleteMatchmakingConfiguration |
--   CreateMatchmakingRuleSet | DescribeMatchmakingRuleSets |
--   ValidateMatchmakingRuleSet | DeleteMatchmakingRuleSet | <a>All APIs by
--   task</a>
module Network.AWS.GameLift.CreateMatchmakingRuleSet

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateMatchmakingRuleSet</a> smart constructor.
data CreateMatchmakingRuleSet
CreateMatchmakingRuleSet' :: Maybe [Tag] -> Text -> Text -> CreateMatchmakingRuleSet

-- | A list of labels to assign to the new matchmaking rule set resource.
--   Tags are developer-defined key-value pairs. Tagging AWS resources are
--   useful for resource management, access management and cost allocation.
--   For more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
[$sel:tags:CreateMatchmakingRuleSet'] :: CreateMatchmakingRuleSet -> Maybe [Tag]

-- | A unique identifier for the matchmaking rule set. A matchmaking
--   configuration identifies the rule set it uses by this name value. Note
--   that the rule set name is different from the optional <tt>name</tt>
--   field in the rule set body.
[$sel:name:CreateMatchmakingRuleSet'] :: CreateMatchmakingRuleSet -> Text

-- | A collection of matchmaking rules, formatted as a JSON string.
--   Comments are not allowed in JSON, but most elements support a
--   description field.
[$sel:ruleSetBody:CreateMatchmakingRuleSet'] :: CreateMatchmakingRuleSet -> Text

-- | Create a value of <a>CreateMatchmakingRuleSet</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateMatchmakingRuleSet'</a>,
--   <a>createMatchmakingRuleSet_tags</a> - A list of labels to assign to
--   the new matchmaking rule set resource. Tags are developer-defined
--   key-value pairs. Tagging AWS resources are useful for resource
--   management, access management and cost allocation. For more
--   information, see <a>Tagging AWS Resources</a> in the <i>AWS General
--   Reference</i>. Once the resource is created, you can use TagResource,
--   UntagResource, and ListTagsForResource to add, remove, and view tags.
--   The maximum tag limit may be lower than stated. See the AWS General
--   Reference for actual tagging limits.
--   
--   <a>$sel:name:CreateMatchmakingRuleSet'</a>,
--   <a>createMatchmakingRuleSet_name</a> - A unique identifier for the
--   matchmaking rule set. A matchmaking configuration identifies the rule
--   set it uses by this name value. Note that the rule set name is
--   different from the optional <tt>name</tt> field in the rule set body.
--   
--   <a>$sel:ruleSetBody:CreateMatchmakingRuleSet'</a>,
--   <a>createMatchmakingRuleSet_ruleSetBody</a> - A collection of
--   matchmaking rules, formatted as a JSON string. Comments are not
--   allowed in JSON, but most elements support a description field.
newCreateMatchmakingRuleSet :: Text -> Text -> CreateMatchmakingRuleSet

-- | A list of labels to assign to the new matchmaking rule set resource.
--   Tags are developer-defined key-value pairs. Tagging AWS resources are
--   useful for resource management, access management and cost allocation.
--   For more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
createMatchmakingRuleSet_tags :: Lens' CreateMatchmakingRuleSet (Maybe [Tag])

-- | A unique identifier for the matchmaking rule set. A matchmaking
--   configuration identifies the rule set it uses by this name value. Note
--   that the rule set name is different from the optional <tt>name</tt>
--   field in the rule set body.
createMatchmakingRuleSet_name :: Lens' CreateMatchmakingRuleSet Text

-- | A collection of matchmaking rules, formatted as a JSON string.
--   Comments are not allowed in JSON, but most elements support a
--   description field.
createMatchmakingRuleSet_ruleSetBody :: Lens' CreateMatchmakingRuleSet Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateMatchmakingRuleSetResponse</a> smart
--   constructor.
data CreateMatchmakingRuleSetResponse
CreateMatchmakingRuleSetResponse' :: Int -> MatchmakingRuleSet -> CreateMatchmakingRuleSetResponse

-- | The response's http status code.
[$sel:httpStatus:CreateMatchmakingRuleSetResponse'] :: CreateMatchmakingRuleSetResponse -> Int

-- | The newly created matchmaking rule set.
[$sel:ruleSet:CreateMatchmakingRuleSetResponse'] :: CreateMatchmakingRuleSetResponse -> MatchmakingRuleSet

-- | Create a value of <a>CreateMatchmakingRuleSetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateMatchmakingRuleSetResponse'</a>,
--   <a>createMatchmakingRuleSetResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:ruleSet:CreateMatchmakingRuleSetResponse'</a>,
--   <a>createMatchmakingRuleSetResponse_ruleSet</a> - The newly created
--   matchmaking rule set.
newCreateMatchmakingRuleSetResponse :: Int -> MatchmakingRuleSet -> CreateMatchmakingRuleSetResponse

-- | The response's http status code.
createMatchmakingRuleSetResponse_httpStatus :: Lens' CreateMatchmakingRuleSetResponse Int

-- | The newly created matchmaking rule set.
createMatchmakingRuleSetResponse_ruleSet :: Lens' CreateMatchmakingRuleSetResponse MatchmakingRuleSet
instance GHC.Generics.Generic Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSet
instance GHC.Show.Show Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSet
instance GHC.Read.Read Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSet
instance GHC.Classes.Eq Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSet
instance GHC.Generics.Generic Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSetResponse
instance GHC.Show.Show Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSetResponse
instance GHC.Read.Read Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSetResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSet
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSetResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSet
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSet
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSet
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreateMatchmakingRuleSet.CreateMatchmakingRuleSet


-- | Defines a new matchmaking configuration for use with FlexMatch.
--   Whether your are using FlexMatch with GameLift hosting or as a
--   standalone matchmaking service, the matchmaking configuration sets out
--   rules for matching players and forming teams. If you're also using
--   GameLift hosting, it defines how to start game sessions for each
--   match. Your matchmaking system can use multiple configurations to
--   handle different game scenarios. All matchmaking requests
--   (StartMatchmaking or StartMatchBackfill) identify the matchmaking
--   configuration to use and provide player attributes consistent with
--   that configuration.
--   
--   To create a matchmaking configuration, you must provide the following:
--   configuration name and FlexMatch mode (with or without GameLift
--   hosting); a rule set that specifies how to evaluate players and find
--   acceptable matches; whether player acceptance is required; and the
--   maximum time allowed for a matchmaking attempt. When using FlexMatch
--   with GameLift hosting, you also need to identify the game session
--   queue to use when starting a game session for the match.
--   
--   In addition, you must set up an Amazon Simple Notification Service
--   (SNS) topic to receive matchmaking notifications. Provide the topic
--   ARN in the matchmaking configuration. An alternative method,
--   continuously polling ticket status with DescribeMatchmaking, is only
--   suitable for games in development with low matchmaking usage.
--   
--   <b>Learn more</b>
--   
--   <a>Design a FlexMatch matchmaker</a>
--   
--   <a>Set up FlexMatch event notification</a>
--   
--   <b>Related actions</b>
--   
--   CreateMatchmakingConfiguration | DescribeMatchmakingConfigurations |
--   UpdateMatchmakingConfiguration | DeleteMatchmakingConfiguration |
--   CreateMatchmakingRuleSet | DescribeMatchmakingRuleSets |
--   ValidateMatchmakingRuleSet | DeleteMatchmakingRuleSet | <a>All APIs by
--   task</a>
module Network.AWS.GameLift.CreateMatchmakingConfiguration

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateMatchmakingConfiguration</a> smart
--   constructor.
data CreateMatchmakingConfiguration
CreateMatchmakingConfiguration' :: Maybe FlexMatchMode -> Maybe Text -> Maybe BackfillMode -> Maybe [GameProperty] -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Text -> Natural -> Bool -> Text -> CreateMatchmakingConfiguration

-- | Indicates whether this matchmaking configuration is being used with
--   GameLift hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
[$sel:flexMatchMode:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Maybe FlexMatchMode

-- | Information to be added to all events related to this matchmaking
--   configuration.
[$sel:customEventData:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Maybe Text

-- | The method used to backfill game sessions that are created with this
--   matchmaking configuration. Specify <tt>MANUAL</tt> when your game
--   manages backfill requests manually or does not use the match backfill
--   feature. Specify <tt>AUTOMATIC</tt> to have GameLift create a
--   StartMatchBackfill request whenever a game session has one or more
--   open slots. Learn more about manual and automatic backfill in
--   <a>Backfill Existing Games with FlexMatch</a>. Automatic backfill is
--   not available when <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
[$sel:backfillMode:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Maybe BackfillMode

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>). This information is added to the new
--   GameSession object that is created for a successful match. This
--   parameter is not used if <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
[$sel:gameProperties:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Maybe [GameProperty]

-- | The length of time (in seconds) to wait for players to accept a
--   proposed match, if acceptance is required.
[$sel:acceptanceTimeoutSeconds:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Maybe Natural

-- | The number of player slots in a match to keep open for future players.
--   For example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   if <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:additionalPlayerCount:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Maybe Natural

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:gameSessionData:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. If <tt>FlexMatchMode</tt> is set
--   to <tt>STANDALONE</tt>, do not set this parameter.
[$sel:gameSessionQueueArns:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Maybe [Text]

-- | An SNS topic ARN that is set up to receive matchmaking notifications.
--   See <a>Setting up notifications for matchmaking</a> for more
--   information.
[$sel:notificationTarget:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Maybe Text

-- | A list of labels to assign to the new matchmaking configuration
--   resource. Tags are developer-defined key-value pairs. Tagging AWS
--   resources are useful for resource management, access management and
--   cost allocation. For more information, see <a>Tagging AWS
--   Resources</a> in the <i>AWS General Reference</i>. Once the resource
--   is created, you can use TagResource, UntagResource, and
--   ListTagsForResource to add, remove, and view tags. The maximum tag
--   limit may be lower than stated. See the AWS General Reference for
--   actual tagging limits.
[$sel:tags:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Maybe [Tag]

-- | A human-readable description of the matchmaking configuration.
[$sel:description:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Maybe Text

-- | A unique identifier for the matchmaking configuration. This name is
--   used to identify the configuration associated with a matchmaking
--   request or ticket.
[$sel:name:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Text

-- | The maximum duration, in seconds, that a matchmaking ticket can remain
--   in process before timing out. Requests that fail due to timing out can
--   be resubmitted as needed.
[$sel:requestTimeoutSeconds:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Natural

-- | A flag that determines whether a match that was created with this
--   configuration must be accepted by the matched players. To require
--   acceptance, set to <tt>TRUE</tt>. With this option enabled,
--   matchmaking tickets use the status <tt>REQUIRES_ACCEPTANCE</tt> to
--   indicate when a completed potential match is waiting for player
--   acceptance.
[$sel:acceptanceRequired:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Bool

-- | A unique identifier for the matchmaking rule set to use with this
--   configuration. You can use either the rule set name or ARN value. A
--   matchmaking configuration can only use rule sets that are defined in
--   the same Region.
[$sel:ruleSetName:CreateMatchmakingConfiguration'] :: CreateMatchmakingConfiguration -> Text

-- | Create a value of <a>CreateMatchmakingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flexMatchMode:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_flexMatchMode</a> - Indicates
--   whether this matchmaking configuration is being used with GameLift
--   hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
--   
--   <a>$sel:customEventData:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_customEventData</a> - Information to
--   be added to all events related to this matchmaking configuration.
--   
--   <a>$sel:backfillMode:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_backfillMode</a> - The method used
--   to backfill game sessions that are created with this matchmaking
--   configuration. Specify <tt>MANUAL</tt> when your game manages backfill
--   requests manually or does not use the match backfill feature. Specify
--   <tt>AUTOMATIC</tt> to have GameLift create a StartMatchBackfill
--   request whenever a game session has one or more open slots. Learn more
--   about manual and automatic backfill in <a>Backfill Existing Games with
--   FlexMatch</a>. Automatic backfill is not available when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameProperties:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_gameProperties</a> - A set of custom
--   properties for a game session, formatted as key:value pairs. These
--   properties are passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:acceptanceTimeoutSeconds:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_acceptanceTimeoutSeconds</a> - The
--   length of time (in seconds) to wait for players to accept a proposed
--   match, if acceptance is required.
--   
--   <a>$sel:additionalPlayerCount:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_additionalPlayerCount</a> - The
--   number of player slots in a match to keep open for future players. For
--   example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   if <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameSessionData:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_gameSessionData</a> - A set of
--   custom game session properties, formatted as a single string value.
--   This data is passed to a game server process in the GameSession object
--   with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameSessionQueueArns:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_gameSessionQueueArns</a> - The
--   Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift game
--   session queue resource and uniquely identifies it. ARNs are unique
--   across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. If <tt>FlexMatchMode</tt> is set
--   to <tt>STANDALONE</tt>, do not set this parameter.
--   
--   <a>$sel:notificationTarget:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_notificationTarget</a> - An SNS
--   topic ARN that is set up to receive matchmaking notifications. See
--   <a>Setting up notifications for matchmaking</a> for more information.
--   
--   <a>$sel:tags:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_tags</a> - A list of labels to
--   assign to the new matchmaking configuration resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
--   
--   <a>$sel:description:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_description</a> - A human-readable
--   description of the matchmaking configuration.
--   
--   <a>$sel:name:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_name</a> - A unique identifier for
--   the matchmaking configuration. This name is used to identify the
--   configuration associated with a matchmaking request or ticket.
--   
--   <a>$sel:requestTimeoutSeconds:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_requestTimeoutSeconds</a> - The
--   maximum duration, in seconds, that a matchmaking ticket can remain in
--   process before timing out. Requests that fail due to timing out can be
--   resubmitted as needed.
--   
--   <a>$sel:acceptanceRequired:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_acceptanceRequired</a> - A flag that
--   determines whether a match that was created with this configuration
--   must be accepted by the matched players. To require acceptance, set to
--   <tt>TRUE</tt>. With this option enabled, matchmaking tickets use the
--   status <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a completed
--   potential match is waiting for player acceptance.
--   
--   <a>$sel:ruleSetName:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_ruleSetName</a> - A unique
--   identifier for the matchmaking rule set to use with this
--   configuration. You can use either the rule set name or ARN value. A
--   matchmaking configuration can only use rule sets that are defined in
--   the same Region.
newCreateMatchmakingConfiguration :: Text -> Natural -> Bool -> Text -> CreateMatchmakingConfiguration

-- | Indicates whether this matchmaking configuration is being used with
--   GameLift hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
createMatchmakingConfiguration_flexMatchMode :: Lens' CreateMatchmakingConfiguration (Maybe FlexMatchMode)

-- | Information to be added to all events related to this matchmaking
--   configuration.
createMatchmakingConfiguration_customEventData :: Lens' CreateMatchmakingConfiguration (Maybe Text)

-- | The method used to backfill game sessions that are created with this
--   matchmaking configuration. Specify <tt>MANUAL</tt> when your game
--   manages backfill requests manually or does not use the match backfill
--   feature. Specify <tt>AUTOMATIC</tt> to have GameLift create a
--   StartMatchBackfill request whenever a game session has one or more
--   open slots. Learn more about manual and automatic backfill in
--   <a>Backfill Existing Games with FlexMatch</a>. Automatic backfill is
--   not available when <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
createMatchmakingConfiguration_backfillMode :: Lens' CreateMatchmakingConfiguration (Maybe BackfillMode)

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>). This information is added to the new
--   GameSession object that is created for a successful match. This
--   parameter is not used if <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
createMatchmakingConfiguration_gameProperties :: Lens' CreateMatchmakingConfiguration (Maybe [GameProperty])

-- | The length of time (in seconds) to wait for players to accept a
--   proposed match, if acceptance is required.
createMatchmakingConfiguration_acceptanceTimeoutSeconds :: Lens' CreateMatchmakingConfiguration (Maybe Natural)

-- | The number of player slots in a match to keep open for future players.
--   For example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   if <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
createMatchmakingConfiguration_additionalPlayerCount :: Lens' CreateMatchmakingConfiguration (Maybe Natural)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
createMatchmakingConfiguration_gameSessionData :: Lens' CreateMatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. If <tt>FlexMatchMode</tt> is set
--   to <tt>STANDALONE</tt>, do not set this parameter.
createMatchmakingConfiguration_gameSessionQueueArns :: Lens' CreateMatchmakingConfiguration (Maybe [Text])

-- | An SNS topic ARN that is set up to receive matchmaking notifications.
--   See <a>Setting up notifications for matchmaking</a> for more
--   information.
createMatchmakingConfiguration_notificationTarget :: Lens' CreateMatchmakingConfiguration (Maybe Text)

-- | A list of labels to assign to the new matchmaking configuration
--   resource. Tags are developer-defined key-value pairs. Tagging AWS
--   resources are useful for resource management, access management and
--   cost allocation. For more information, see <a>Tagging AWS
--   Resources</a> in the <i>AWS General Reference</i>. Once the resource
--   is created, you can use TagResource, UntagResource, and
--   ListTagsForResource to add, remove, and view tags. The maximum tag
--   limit may be lower than stated. See the AWS General Reference for
--   actual tagging limits.
createMatchmakingConfiguration_tags :: Lens' CreateMatchmakingConfiguration (Maybe [Tag])

-- | A human-readable description of the matchmaking configuration.
createMatchmakingConfiguration_description :: Lens' CreateMatchmakingConfiguration (Maybe Text)

-- | A unique identifier for the matchmaking configuration. This name is
--   used to identify the configuration associated with a matchmaking
--   request or ticket.
createMatchmakingConfiguration_name :: Lens' CreateMatchmakingConfiguration Text

-- | The maximum duration, in seconds, that a matchmaking ticket can remain
--   in process before timing out. Requests that fail due to timing out can
--   be resubmitted as needed.
createMatchmakingConfiguration_requestTimeoutSeconds :: Lens' CreateMatchmakingConfiguration Natural

-- | A flag that determines whether a match that was created with this
--   configuration must be accepted by the matched players. To require
--   acceptance, set to <tt>TRUE</tt>. With this option enabled,
--   matchmaking tickets use the status <tt>REQUIRES_ACCEPTANCE</tt> to
--   indicate when a completed potential match is waiting for player
--   acceptance.
createMatchmakingConfiguration_acceptanceRequired :: Lens' CreateMatchmakingConfiguration Bool

-- | A unique identifier for the matchmaking rule set to use with this
--   configuration. You can use either the rule set name or ARN value. A
--   matchmaking configuration can only use rule sets that are defined in
--   the same Region.
createMatchmakingConfiguration_ruleSetName :: Lens' CreateMatchmakingConfiguration Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateMatchmakingConfigurationResponse</a> smart
--   constructor.
data CreateMatchmakingConfigurationResponse
CreateMatchmakingConfigurationResponse' :: Maybe MatchmakingConfiguration -> Int -> CreateMatchmakingConfigurationResponse

-- | Object that describes the newly created matchmaking configuration.
[$sel:configuration:CreateMatchmakingConfigurationResponse'] :: CreateMatchmakingConfigurationResponse -> Maybe MatchmakingConfiguration

-- | The response's http status code.
[$sel:httpStatus:CreateMatchmakingConfigurationResponse'] :: CreateMatchmakingConfigurationResponse -> Int

-- | Create a value of <a>CreateMatchmakingConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:CreateMatchmakingConfigurationResponse'</a>,
--   <a>createMatchmakingConfigurationResponse_configuration</a> - Object
--   that describes the newly created matchmaking configuration.
--   
--   <a>$sel:httpStatus:CreateMatchmakingConfigurationResponse'</a>,
--   <a>createMatchmakingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newCreateMatchmakingConfigurationResponse :: Int -> CreateMatchmakingConfigurationResponse

-- | Object that describes the newly created matchmaking configuration.
createMatchmakingConfigurationResponse_configuration :: Lens' CreateMatchmakingConfigurationResponse (Maybe MatchmakingConfiguration)

-- | The response's http status code.
createMatchmakingConfigurationResponse_httpStatus :: Lens' CreateMatchmakingConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfiguration
instance GHC.Show.Show Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfiguration
instance GHC.Read.Read Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfiguration
instance GHC.Generics.Generic Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfigurationResponse
instance GHC.Show.Show Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfigurationResponse
instance GHC.Read.Read Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfigurationResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreateMatchmakingConfiguration.CreateMatchmakingConfiguration


-- | Creates a placement queue that processes requests for new game
--   sessions. A queue uses FleetIQ algorithms to determine the best
--   placement locations and find an available game server there, then
--   prompts the game server process to start a new game session.
--   
--   A game session queue is configured with a set of destinations
--   (GameLift fleets or aliases), which determine the locations where the
--   queue can place new game sessions. These destinations can span
--   multiple fleet types (Spot and On-Demand), instance types, and AWS
--   Regions. If the queue includes multi-location fleets, the queue is
--   able to place game sessions in all of a fleet's remote locations. You
--   can opt to filter out individual locations if needed.
--   
--   The queue configuration also determines how FleetIQ selects the best
--   available placement for a new game session. Before searching for an
--   available game server, FleetIQ first prioritizes the queue's
--   destinations and locations, with the best placement locations on top.
--   You can set up the queue to use the FleetIQ default prioritization or
--   provide an alternate set of priorities.
--   
--   To create a new queue, provide a name, timeout value, and a list of
--   destinations. Optionally, specify a sort configuration and/or a
--   filter, and define a set of latency cap policies. You can also include
--   the ARN for an Amazon Simple Notification Service (SNS) topic to
--   receive notifications of game session placement activity.
--   Notifications using SNS or CloudWatch events is the preferred way to
--   track placement activity.
--   
--   If successful, a new <tt>GameSessionQueue</tt> object is returned with
--   an assigned queue ARN. New game session requests, which are submitted
--   to the queue with StartGameSessionPlacement or StartMatchmaking,
--   reference a queue's name or ARN.
--   
--   <b>Learn more</b>
--   
--   <a>Design a game session queue</a>
--   
--   <a>Create a game session queue</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameSessionQueue | DescribeGameSessionQueues |
--   UpdateGameSessionQueue | DeleteGameSessionQueue | <a>All APIs by
--   task</a>
module Network.AWS.GameLift.CreateGameSessionQueue

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateGameSessionQueue</a> smart constructor.
data CreateGameSessionQueue
CreateGameSessionQueue' :: Maybe Text -> Maybe [PlayerLatencyPolicy] -> Maybe PriorityConfiguration -> Maybe [GameSessionQueueDestination] -> Maybe Natural -> Maybe Text -> Maybe [Tag] -> Maybe FilterConfiguration -> Text -> CreateGameSessionQueue

-- | Information to be added to all events that are related to this game
--   session queue.
[$sel:customEventData:CreateGameSessionQueue'] :: CreateGameSessionQueue -> Maybe Text

-- | A set of policies that act as a sliding cap on player latency. FleetIQ
--   works to deliver low latency for most players in a game session. These
--   policies ensure that no individual player can be placed into a game
--   with unreasonably high latency. Use multiple policies to gradually
--   relax latency requirements a step at a time. Multiple policies are
--   applied based on their maximum allowed latency, starting with the
--   lowest value.
[$sel:playerLatencyPolicies:CreateGameSessionQueue'] :: CreateGameSessionQueue -> Maybe [PlayerLatencyPolicy]

-- | Custom settings to use when prioritizing destinations and locations
--   for game session placements. This configuration replaces the FleetIQ
--   default prioritization process. Priority types that are not explicitly
--   named will be automatically applied at the end of the prioritization
--   process.
[$sel:priorityConfiguration:CreateGameSessionQueue'] :: CreateGameSessionQueue -> Maybe PriorityConfiguration

-- | A list of fleets and/or fleet aliases that can be used to fulfill game
--   session placement requests in the queue. Destinations are identified
--   by either a fleet ARN or a fleet alias ARN, and are listed in order of
--   placement preference.
[$sel:destinations:CreateGameSessionQueue'] :: CreateGameSessionQueue -> Maybe [GameSessionQueueDestination]

-- | The maximum time, in seconds, that a new game session placement
--   request remains in the queue. When a request exceeds this time, the
--   game session placement changes to a <tt>TIMED_OUT</tt> status.
[$sel:timeoutInSeconds:CreateGameSessionQueue'] :: CreateGameSessionQueue -> Maybe Natural

-- | An SNS topic ARN that is set up to receive game session placement
--   notifications. See <a>Setting up notifications for game session
--   placement</a>.
[$sel:notificationTarget:CreateGameSessionQueue'] :: CreateGameSessionQueue -> Maybe Text

-- | A list of labels to assign to the new game session queue resource.
--   Tags are developer-defined key-value pairs. Tagging AWS resources are
--   useful for resource management, access management and cost allocation.
--   For more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
[$sel:tags:CreateGameSessionQueue'] :: CreateGameSessionQueue -> Maybe [Tag]

-- | A list of locations where a queue is allowed to place new game
--   sessions. Locations are specified in the form of AWS Region codes,
--   such as <tt>us-west-2</tt>. If this parameter is not set, game
--   sessions can be placed in any queue location.
[$sel:filterConfiguration:CreateGameSessionQueue'] :: CreateGameSessionQueue -> Maybe FilterConfiguration

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
[$sel:name:CreateGameSessionQueue'] :: CreateGameSessionQueue -> Text

-- | Create a value of <a>CreateGameSessionQueue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customEventData:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_customEventData</a> - Information to be
--   added to all events that are related to this game session queue.
--   
--   <a>$sel:playerLatencyPolicies:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_playerLatencyPolicies</a> - A set of
--   policies that act as a sliding cap on player latency. FleetIQ works to
--   deliver low latency for most players in a game session. These policies
--   ensure that no individual player can be placed into a game with
--   unreasonably high latency. Use multiple policies to gradually relax
--   latency requirements a step at a time. Multiple policies are applied
--   based on their maximum allowed latency, starting with the lowest
--   value.
--   
--   <a>$sel:priorityConfiguration:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_priorityConfiguration</a> - Custom settings
--   to use when prioritizing destinations and locations for game session
--   placements. This configuration replaces the FleetIQ default
--   prioritization process. Priority types that are not explicitly named
--   will be automatically applied at the end of the prioritization
--   process.
--   
--   <a>$sel:destinations:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_destinations</a> - A list of fleets and/or
--   fleet aliases that can be used to fulfill game session placement
--   requests in the queue. Destinations are identified by either a fleet
--   ARN or a fleet alias ARN, and are listed in order of placement
--   preference.
--   
--   <a>$sel:timeoutInSeconds:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_timeoutInSeconds</a> - The maximum time, in
--   seconds, that a new game session placement request remains in the
--   queue. When a request exceeds this time, the game session placement
--   changes to a <tt>TIMED_OUT</tt> status.
--   
--   <a>$sel:notificationTarget:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_notificationTarget</a> - An SNS topic ARN
--   that is set up to receive game session placement notifications. See
--   <a>Setting up notifications for game session placement</a>.
--   
--   <a>$sel:tags:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_tags</a> - A list of labels to assign to the
--   new game session queue resource. Tags are developer-defined key-value
--   pairs. Tagging AWS resources are useful for resource management,
--   access management and cost allocation. For more information, see
--   <a>Tagging AWS Resources</a> in the <i>AWS General Reference</i>. Once
--   the resource is created, you can use TagResource, UntagResource, and
--   ListTagsForResource to add, remove, and view tags. The maximum tag
--   limit may be lower than stated. See the AWS General Reference for
--   actual tagging limits.
--   
--   <a>$sel:filterConfiguration:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_filterConfiguration</a> - A list of
--   locations where a queue is allowed to place new game sessions.
--   Locations are specified in the form of AWS Region codes, such as
--   <tt>us-west-2</tt>. If this parameter is not set, game sessions can be
--   placed in any queue location.
--   
--   <a>$sel:name:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_name</a> - A descriptive label that is
--   associated with game session queue. Queue names must be unique within
--   each Region.
newCreateGameSessionQueue :: Text -> CreateGameSessionQueue

-- | Information to be added to all events that are related to this game
--   session queue.
createGameSessionQueue_customEventData :: Lens' CreateGameSessionQueue (Maybe Text)

-- | A set of policies that act as a sliding cap on player latency. FleetIQ
--   works to deliver low latency for most players in a game session. These
--   policies ensure that no individual player can be placed into a game
--   with unreasonably high latency. Use multiple policies to gradually
--   relax latency requirements a step at a time. Multiple policies are
--   applied based on their maximum allowed latency, starting with the
--   lowest value.
createGameSessionQueue_playerLatencyPolicies :: Lens' CreateGameSessionQueue (Maybe [PlayerLatencyPolicy])

-- | Custom settings to use when prioritizing destinations and locations
--   for game session placements. This configuration replaces the FleetIQ
--   default prioritization process. Priority types that are not explicitly
--   named will be automatically applied at the end of the prioritization
--   process.
createGameSessionQueue_priorityConfiguration :: Lens' CreateGameSessionQueue (Maybe PriorityConfiguration)

-- | A list of fleets and/or fleet aliases that can be used to fulfill game
--   session placement requests in the queue. Destinations are identified
--   by either a fleet ARN or a fleet alias ARN, and are listed in order of
--   placement preference.
createGameSessionQueue_destinations :: Lens' CreateGameSessionQueue (Maybe [GameSessionQueueDestination])

-- | The maximum time, in seconds, that a new game session placement
--   request remains in the queue. When a request exceeds this time, the
--   game session placement changes to a <tt>TIMED_OUT</tt> status.
createGameSessionQueue_timeoutInSeconds :: Lens' CreateGameSessionQueue (Maybe Natural)

-- | An SNS topic ARN that is set up to receive game session placement
--   notifications. See <a>Setting up notifications for game session
--   placement</a>.
createGameSessionQueue_notificationTarget :: Lens' CreateGameSessionQueue (Maybe Text)

-- | A list of labels to assign to the new game session queue resource.
--   Tags are developer-defined key-value pairs. Tagging AWS resources are
--   useful for resource management, access management and cost allocation.
--   For more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
createGameSessionQueue_tags :: Lens' CreateGameSessionQueue (Maybe [Tag])

-- | A list of locations where a queue is allowed to place new game
--   sessions. Locations are specified in the form of AWS Region codes,
--   such as <tt>us-west-2</tt>. If this parameter is not set, game
--   sessions can be placed in any queue location.
createGameSessionQueue_filterConfiguration :: Lens' CreateGameSessionQueue (Maybe FilterConfiguration)

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
createGameSessionQueue_name :: Lens' CreateGameSessionQueue Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateGameSessionQueueResponse</a> smart
--   constructor.
data CreateGameSessionQueueResponse
CreateGameSessionQueueResponse' :: Maybe GameSessionQueue -> Int -> CreateGameSessionQueueResponse

-- | An object that describes the newly created game session queue.
[$sel:gameSessionQueue:CreateGameSessionQueueResponse'] :: CreateGameSessionQueueResponse -> Maybe GameSessionQueue

-- | The response's http status code.
[$sel:httpStatus:CreateGameSessionQueueResponse'] :: CreateGameSessionQueueResponse -> Int

-- | Create a value of <a>CreateGameSessionQueueResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionQueue:CreateGameSessionQueueResponse'</a>,
--   <a>createGameSessionQueueResponse_gameSessionQueue</a> - An object
--   that describes the newly created game session queue.
--   
--   <a>$sel:httpStatus:CreateGameSessionQueueResponse'</a>,
--   <a>createGameSessionQueueResponse_httpStatus</a> - The response's http
--   status code.
newCreateGameSessionQueueResponse :: Int -> CreateGameSessionQueueResponse

-- | An object that describes the newly created game session queue.
createGameSessionQueueResponse_gameSessionQueue :: Lens' CreateGameSessionQueueResponse (Maybe GameSessionQueue)

-- | The response's http status code.
createGameSessionQueueResponse_httpStatus :: Lens' CreateGameSessionQueueResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueue
instance GHC.Show.Show Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueue
instance GHC.Read.Read Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueue
instance GHC.Classes.Eq Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueue
instance GHC.Generics.Generic Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueueResponse
instance GHC.Show.Show Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueueResponse
instance GHC.Read.Read Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueueResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueue
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueueResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueue
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueue
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueue
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreateGameSessionQueue.CreateGameSessionQueue


-- | Creates a multiplayer game session for players in a specific fleet
--   location. This operation prompts an available server process to start
--   a game session and retrieves connection information for the new game
--   session. As an alternative, consider using the GameLift game session
--   placement feature with
--   
--   with StartGameSessionPlacement, which uses FleetIQ algorithms and
--   queues to optimize the placement process.
--   
--   When creating a game session, you specify exactly where you want to
--   place it and provide a set of game session configuration settings. The
--   fleet must be in <tt>ACTIVE</tt> status before a game session can be
--   created in it.
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To create a game session on an instance in a fleet's home Region,
--   provide a fleet or alias ID along with your game session
--   configuration.</li>
--   <li>To create a game session on an instance in a fleet's remote
--   location, provide a fleet or alias ID and a location name, along with
--   your game session configuration.</li>
--   </ul>
--   
--   If successful, a workflow is initiated to start a new game session. A
--   <tt>GameSession</tt> object is returned containing the game session
--   configuration and status. When the status is <tt>ACTIVE</tt>, game
--   session connection information is provided and player sessions can be
--   created for the game session. By default, newly created game sessions
--   are open to new players. You can restrict new player access by using
--   UpdateGameSession to change the game session's player session creation
--   policy.
--   
--   Game session logs are retained for all active game sessions for 14
--   days. To access the logs, call GetGameSessionLogUrl to download the
--   log files.
--   
--   <i>Available in GameLift Local.</i>
--   
--   <b>Learn more</b>
--   
--   <a>Start a game session</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails
--   | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
module Network.AWS.GameLift.CreateGameSession

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateGameSession</a> smart constructor.
data CreateGameSession
CreateGameSession' :: Maybe [GameProperty] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Natural -> CreateGameSession

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session.
[$sel:gameProperties:CreateGameSession'] :: CreateGameSession -> Maybe [GameProperty]

-- | Custom string that uniquely identifies the new game session request.
--   This is useful for ensuring that game session requests with the same
--   idempotency token are processed only once. Subsequent requests with
--   the same string return the original <tt>GameSession</tt> object, with
--   an updated status. Maximum token length is 48 characters. If provided,
--   this string is included in the new game session's ID. A game session
--   ARN has the following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>. Idempotency
--   tokens remain in use for 30 days after a game session has ended; game
--   session objects are retained for this time period and then deleted.
[$sel:idempotencyToken:CreateGameSession'] :: CreateGameSession -> Maybe Text

-- | A unique identifier for a player or entity creating the game session.
--   This parameter is required when requesting a new game session on a
--   fleet with a resource creation limit policy. This type of policy
--   limits the number of concurrent active game sessions that one player
--   can create within a certain time span. GameLift uses the CreatorId to
--   evaluate the new request against the policy.
[$sel:creatorId:CreateGameSession'] :: CreateGameSession -> Maybe Text

-- | A unique identifier for the fleet to create a game session in. You can
--   use either the fleet ID or ARN value. Each request must reference
--   either a fleet ID or alias ID, but not both.
[$sel:fleetId:CreateGameSession'] :: CreateGameSession -> Maybe Text

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session.
[$sel:gameSessionData:CreateGameSession'] :: CreateGameSession -> Maybe Text

-- | /This parameter is no longer preferred. Please use
--   <tt>IdempotencyToken</tt> instead./ Custom string that uniquely
--   identifies a request for a new game session. Maximum token length is
--   48 characters. If provided, this string is included in the new game
--   session's ID.
[$sel:gameSessionId:CreateGameSession'] :: CreateGameSession -> Maybe Text

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
[$sel:name:CreateGameSession'] :: CreateGameSession -> Maybe Text

-- | A unique identifier for the alias associated with the fleet to create
--   a game session in. You can use either the alias ID or ARN value. Each
--   request must reference either a fleet ID or alias ID, but not both.
[$sel:aliasId:CreateGameSession'] :: CreateGameSession -> Maybe Text

-- | A fleet's remote location to place the new game session in. If this
--   parameter is not set, the new game session is placed in the fleet's
--   home Region. Specify a remote location with an AWS Region code such as
--   <tt>us-west-2</tt>.
[$sel:location:CreateGameSession'] :: CreateGameSession -> Maybe Text

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
[$sel:maximumPlayerSessionCount:CreateGameSession'] :: CreateGameSession -> Natural

-- | Create a value of <a>CreateGameSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameProperties:CreateGameSession'</a>,
--   <a>createGameSession_gameProperties</a> - A set of custom properties
--   for a game session, formatted as key:value pairs. These properties are
--   passed to a game server process in the GameSession object with a
--   request to start a new game session.
--   
--   <a>$sel:idempotencyToken:CreateGameSession'</a>,
--   <a>createGameSession_idempotencyToken</a> - Custom string that
--   uniquely identifies the new game session request. This is useful for
--   ensuring that game session requests with the same idempotency token
--   are processed only once. Subsequent requests with the same string
--   return the original <tt>GameSession</tt> object, with an updated
--   status. Maximum token length is 48 characters. If provided, this
--   string is included in the new game session's ID. A game session ARN
--   has the following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>. Idempotency
--   tokens remain in use for 30 days after a game session has ended; game
--   session objects are retained for this time period and then deleted.
--   
--   <a>$sel:creatorId:CreateGameSession'</a>,
--   <a>createGameSession_creatorId</a> - A unique identifier for a player
--   or entity creating the game session. This parameter is required when
--   requesting a new game session on a fleet with a resource creation
--   limit policy. This type of policy limits the number of concurrent
--   active game sessions that one player can create within a certain time
--   span. GameLift uses the CreatorId to evaluate the new request against
--   the policy.
--   
--   <a>$sel:fleetId:CreateGameSession'</a>,
--   <a>createGameSession_fleetId</a> - A unique identifier for the fleet
--   to create a game session in. You can use either the fleet ID or ARN
--   value. Each request must reference either a fleet ID or alias ID, but
--   not both.
--   
--   <a>$sel:gameSessionData:CreateGameSession'</a>,
--   <a>createGameSession_gameSessionData</a> - A set of custom game
--   session properties, formatted as a single string value. This data is
--   passed to a game server process in the GameSession object with a
--   request to start a new game session.
--   
--   <a>$sel:gameSessionId:CreateGameSession'</a>,
--   <a>createGameSession_gameSessionId</a> - /This parameter is no longer
--   preferred. Please use <tt>IdempotencyToken</tt> instead./ Custom
--   string that uniquely identifies a request for a new game session.
--   Maximum token length is 48 characters. If provided, this string is
--   included in the new game session's ID.
--   
--   <a>$sel:name:CreateGameSession'</a>, <a>createGameSession_name</a> - A
--   descriptive label that is associated with a game session. Session
--   names do not need to be unique.
--   
--   <a>$sel:aliasId:CreateGameSession'</a>,
--   <a>createGameSession_aliasId</a> - A unique identifier for the alias
--   associated with the fleet to create a game session in. You can use
--   either the alias ID or ARN value. Each request must reference either a
--   fleet ID or alias ID, but not both.
--   
--   <a>$sel:location:CreateGameSession'</a>,
--   <a>createGameSession_location</a> - A fleet's remote location to place
--   the new game session in. If this parameter is not set, the new game
--   session is placed in the fleet's home Region. Specify a remote
--   location with an AWS Region code such as <tt>us-west-2</tt>.
--   
--   <a>$sel:maximumPlayerSessionCount:CreateGameSession'</a>,
--   <a>createGameSession_maximumPlayerSessionCount</a> - The maximum
--   number of players that can be connected simultaneously to the game
--   session.
newCreateGameSession :: Natural -> CreateGameSession

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session.
createGameSession_gameProperties :: Lens' CreateGameSession (Maybe [GameProperty])

-- | Custom string that uniquely identifies the new game session request.
--   This is useful for ensuring that game session requests with the same
--   idempotency token are processed only once. Subsequent requests with
--   the same string return the original <tt>GameSession</tt> object, with
--   an updated status. Maximum token length is 48 characters. If provided,
--   this string is included in the new game session's ID. A game session
--   ARN has the following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>. Idempotency
--   tokens remain in use for 30 days after a game session has ended; game
--   session objects are retained for this time period and then deleted.
createGameSession_idempotencyToken :: Lens' CreateGameSession (Maybe Text)

-- | A unique identifier for a player or entity creating the game session.
--   This parameter is required when requesting a new game session on a
--   fleet with a resource creation limit policy. This type of policy
--   limits the number of concurrent active game sessions that one player
--   can create within a certain time span. GameLift uses the CreatorId to
--   evaluate the new request against the policy.
createGameSession_creatorId :: Lens' CreateGameSession (Maybe Text)

-- | A unique identifier for the fleet to create a game session in. You can
--   use either the fleet ID or ARN value. Each request must reference
--   either a fleet ID or alias ID, but not both.
createGameSession_fleetId :: Lens' CreateGameSession (Maybe Text)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session.
createGameSession_gameSessionData :: Lens' CreateGameSession (Maybe Text)

-- | /This parameter is no longer preferred. Please use
--   <tt>IdempotencyToken</tt> instead./ Custom string that uniquely
--   identifies a request for a new game session. Maximum token length is
--   48 characters. If provided, this string is included in the new game
--   session's ID.
createGameSession_gameSessionId :: Lens' CreateGameSession (Maybe Text)

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
createGameSession_name :: Lens' CreateGameSession (Maybe Text)

-- | A unique identifier for the alias associated with the fleet to create
--   a game session in. You can use either the alias ID or ARN value. Each
--   request must reference either a fleet ID or alias ID, but not both.
createGameSession_aliasId :: Lens' CreateGameSession (Maybe Text)

-- | A fleet's remote location to place the new game session in. If this
--   parameter is not set, the new game session is placed in the fleet's
--   home Region. Specify a remote location with an AWS Region code such as
--   <tt>us-west-2</tt>.
createGameSession_location :: Lens' CreateGameSession (Maybe Text)

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
createGameSession_maximumPlayerSessionCount :: Lens' CreateGameSession Natural

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateGameSessionResponse</a> smart constructor.
data CreateGameSessionResponse
CreateGameSessionResponse' :: Maybe GameSession -> Int -> CreateGameSessionResponse

-- | Object that describes the newly created game session record.
[$sel:gameSession:CreateGameSessionResponse'] :: CreateGameSessionResponse -> Maybe GameSession

-- | The response's http status code.
[$sel:httpStatus:CreateGameSessionResponse'] :: CreateGameSessionResponse -> Int

-- | Create a value of <a>CreateGameSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSession:CreateGameSessionResponse'</a>,
--   <a>createGameSessionResponse_gameSession</a> - Object that describes
--   the newly created game session record.
--   
--   <a>$sel:httpStatus:CreateGameSessionResponse'</a>,
--   <a>createGameSessionResponse_httpStatus</a> - The response's http
--   status code.
newCreateGameSessionResponse :: Int -> CreateGameSessionResponse

-- | Object that describes the newly created game session record.
createGameSessionResponse_gameSession :: Lens' CreateGameSessionResponse (Maybe GameSession)

-- | The response's http status code.
createGameSessionResponse_httpStatus :: Lens' CreateGameSessionResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreateGameSession.CreateGameSession
instance GHC.Show.Show Network.AWS.GameLift.CreateGameSession.CreateGameSession
instance GHC.Read.Read Network.AWS.GameLift.CreateGameSession.CreateGameSession
instance GHC.Classes.Eq Network.AWS.GameLift.CreateGameSession.CreateGameSession
instance GHC.Generics.Generic Network.AWS.GameLift.CreateGameSession.CreateGameSessionResponse
instance GHC.Show.Show Network.AWS.GameLift.CreateGameSession.CreateGameSessionResponse
instance GHC.Read.Read Network.AWS.GameLift.CreateGameSession.CreateGameSessionResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreateGameSession.CreateGameSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreateGameSession.CreateGameSession
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateGameSession.CreateGameSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreateGameSession.CreateGameSession
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateGameSession.CreateGameSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreateGameSession.CreateGameSession
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreateGameSession.CreateGameSession
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreateGameSession.CreateGameSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreateGameSession.CreateGameSession


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Creates a GameLift FleetIQ game server group for managing game hosting
--   on a collection of Amazon EC2 instances for game hosting. This
--   operation creates the game server group, creates an Auto Scaling group
--   in your AWS account, and establishes a link between the two groups.
--   You can view the status of your game server groups in the GameLift
--   console. Game server group metrics and events are emitted to Amazon
--   CloudWatch.
--   
--   Before creating a new game server group, you must have the following:
--   
--   <ul>
--   <li>An Amazon EC2 launch template that specifies how to launch Amazon
--   EC2 instances with your game server build. For more information, see
--   <a>Launching an Instance from a Launch Template</a> in the <i>Amazon
--   EC2 User Guide</i>.</li>
--   <li>An IAM role that extends limited access to your AWS account to
--   allow GameLift FleetIQ to create and interact with the Auto Scaling
--   group. For more information, see <a>Create IAM roles for cross-service
--   interaction</a> in the <i>GameLift FleetIQ Developer Guide</i>.</li>
--   </ul>
--   
--   To create a new game server group, specify a unique group name, IAM
--   role and Amazon EC2 launch template, and provide a list of instance
--   types that can be used in the group. You must also set initial maximum
--   and minimum limits on the group's instance count. You can optionally
--   set an Auto Scaling policy with target tracking based on a GameLift
--   FleetIQ metric.
--   
--   Once the game server group and corresponding Auto Scaling group are
--   created, you have full access to change the Auto Scaling group's
--   configuration as needed. Several properties that are set when creating
--   a game server group, including maximum/minimum size and auto-scaling
--   policy settings, must be updated directly in the Auto Scaling group.
--   Keep in mind that some Auto Scaling group properties are periodically
--   updated by GameLift FleetIQ as part of its balancing activities to
--   optimize for availability and cost.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
module Network.AWS.GameLift.CreateGameServerGroup

-- | <i>See:</i> <a>newCreateGameServerGroup</a> smart constructor.
data CreateGameServerGroup
CreateGameServerGroup' :: Maybe GameServerGroupAutoScalingPolicy -> Maybe [Tag] -> Maybe BalancingStrategy -> Maybe GameServerProtectionPolicy -> Maybe (NonEmpty Text) -> Text -> Text -> Natural -> Natural -> LaunchTemplateSpecification -> NonEmpty InstanceDefinition -> CreateGameServerGroup

-- | Configuration settings to define a scaling policy for the Auto Scaling
--   group that is optimized for game hosting. The scaling policy uses the
--   metric <tt>"PercentUtilizedGameServers"</tt> to maintain a buffer of
--   idle game servers that can immediately accommodate new games and
--   players. After the Auto Scaling group is created, update this value
--   directly in the Auto Scaling group using the AWS console or APIs.
[$sel:autoScalingPolicy:CreateGameServerGroup'] :: CreateGameServerGroup -> Maybe GameServerGroupAutoScalingPolicy

-- | A list of labels to assign to the new game server group resource. Tags
--   are developer-defined key-value pairs. Tagging AWS resources is useful
--   for resource management, access management, and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags, respectively. The maximum tag limit may be lower than
--   stated. See the AWS General Reference for actual tagging limits.
[$sel:tags:CreateGameServerGroup'] :: CreateGameServerGroup -> Maybe [Tag]

-- | Indicates how GameLift FleetIQ balances the use of Spot Instances and
--   On-Demand Instances in the game server group. Method options include
--   the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
[$sel:balancingStrategy:CreateGameServerGroup'] :: CreateGameServerGroup -> Maybe BalancingStrategy

-- | A flag that indicates whether instances in the game server group are
--   protected from early termination. Unprotected instances that have
--   active game servers running might be terminated during a scale-down
--   event, causing players to be dropped from the game. Protected
--   instances cannot be terminated while there are active game servers
--   running except in the event of a forced game server group deletion
--   (see ). An exception to this is with Spot Instances, which can be
--   terminated by AWS regardless of protection status. This property is
--   set to <tt>NO_PROTECTION</tt> by default.
[$sel:gameServerProtectionPolicy:CreateGameServerGroup'] :: CreateGameServerGroup -> Maybe GameServerProtectionPolicy

-- | A list of virtual private cloud (VPC) subnets to use with instances in
--   the game server group. By default, all GameLift FleetIQ-supported
--   Availability Zones are used. You can use this parameter to specify
--   VPCs that you've set up. This property cannot be updated after the
--   game server group is created, and the corresponding Auto Scaling group
--   will always use the property value that is set with this request, even
--   if the Auto Scaling group is updated directly.
[$sel:vpcSubnets:CreateGameServerGroup'] :: CreateGameServerGroup -> Maybe (NonEmpty Text)

-- | An identifier for the new game server group. This value is used to
--   generate unique ARN identifiers for the EC2 Auto Scaling group and the
--   GameLift FleetIQ game server group. The name must be unique per Region
--   per AWS account.
[$sel:gameServerGroupName:CreateGameServerGroup'] :: CreateGameServerGroup -> Text

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
[$sel:roleArn:CreateGameServerGroup'] :: CreateGameServerGroup -> Text

-- | The minimum number of instances allowed in the EC2 Auto Scaling group.
--   During automatic scaling events, GameLift FleetIQ and EC2 do not scale
--   down the group below this minimum. In production, this value should be
--   set to at least 1. After the Auto Scaling group is created, update
--   this value directly in the Auto Scaling group using the AWS console or
--   APIs.
[$sel:minSize:CreateGameServerGroup'] :: CreateGameServerGroup -> Natural

-- | The maximum number of instances allowed in the EC2 Auto Scaling group.
--   During automatic scaling events, GameLift FleetIQ and EC2 do not scale
--   up the group above this maximum. After the Auto Scaling group is
--   created, update this value directly in the Auto Scaling group using
--   the AWS console or APIs.
[$sel:maxSize:CreateGameServerGroup'] :: CreateGameServerGroup -> Natural

-- | The EC2 launch template that contains configuration settings and game
--   server code to be deployed to all instances in the game server group.
--   You can specify the template using either the template name or ID. For
--   help with creating a launch template, see <a>Creating a Launch
--   Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>. After the Auto Scaling group is created,
--   update this value directly in the Auto Scaling group using the AWS
--   console or APIs.
--   
--   If you specify network interfaces in your launch template, you must
--   explicitly set the property <tt>AssociatePublicIpAddress</tt> to
--   "true". If no network interface is specified in the launch template,
--   GameLift FleetIQ uses your account's default VPC.
[$sel:launchTemplate:CreateGameServerGroup'] :: CreateGameServerGroup -> LaunchTemplateSpecification

-- | The EC2 instance types and sizes to use in the Auto Scaling group. The
--   instance definitions must specify at least two different instance
--   types that are supported by GameLift FleetIQ. For more information on
--   instance types, see <a>EC2 Instance Types</a> in the <i>Amazon EC2
--   User Guide</i>. You can optionally specify capacity weighting for each
--   instance type. If no weight value is specified for an instance type,
--   it is set to the default value "1". For more information about
--   capacity weighting, see <a>Instance Weighting for Amazon EC2 Auto
--   Scaling</a> in the Amazon EC2 Auto Scaling User Guide.
[$sel:instanceDefinitions:CreateGameServerGroup'] :: CreateGameServerGroup -> NonEmpty InstanceDefinition

-- | Create a value of <a>CreateGameServerGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingPolicy:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_autoScalingPolicy</a> - Configuration
--   settings to define a scaling policy for the Auto Scaling group that is
--   optimized for game hosting. The scaling policy uses the metric
--   <tt>"PercentUtilizedGameServers"</tt> to maintain a buffer of idle
--   game servers that can immediately accommodate new games and players.
--   After the Auto Scaling group is created, update this value directly in
--   the Auto Scaling group using the AWS console or APIs.
--   
--   <a>$sel:tags:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_tags</a> - A list of labels to assign to the
--   new game server group resource. Tags are developer-defined key-value
--   pairs. Tagging AWS resources is useful for resource management, access
--   management, and cost allocation. For more information, see <a>Tagging
--   AWS Resources</a> in the <i>AWS General Reference</i>. Once the
--   resource is created, you can use TagResource, UntagResource, and
--   ListTagsForResource to add, remove, and view tags, respectively. The
--   maximum tag limit may be lower than stated. See the AWS General
--   Reference for actual tagging limits.
--   
--   <a>$sel:balancingStrategy:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_balancingStrategy</a> - Indicates how
--   GameLift FleetIQ balances the use of Spot Instances and On-Demand
--   Instances in the game server group. Method options include the
--   following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
--   
--   <a>$sel:gameServerProtectionPolicy:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_gameServerProtectionPolicy</a> - A flag that
--   indicates whether instances in the game server group are protected
--   from early termination. Unprotected instances that have active game
--   servers running might be terminated during a scale-down event, causing
--   players to be dropped from the game. Protected instances cannot be
--   terminated while there are active game servers running except in the
--   event of a forced game server group deletion (see ). An exception to
--   this is with Spot Instances, which can be terminated by AWS regardless
--   of protection status. This property is set to <tt>NO_PROTECTION</tt>
--   by default.
--   
--   <a>$sel:vpcSubnets:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_vpcSubnets</a> - A list of virtual private
--   cloud (VPC) subnets to use with instances in the game server group. By
--   default, all GameLift FleetIQ-supported Availability Zones are used.
--   You can use this parameter to specify VPCs that you've set up. This
--   property cannot be updated after the game server group is created, and
--   the corresponding Auto Scaling group will always use the property
--   value that is set with this request, even if the Auto Scaling group is
--   updated directly.
--   
--   <a>$sel:gameServerGroupName:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_gameServerGroupName</a> - An identifier for
--   the new game server group. This value is used to generate unique ARN
--   identifiers for the EC2 Auto Scaling group and the GameLift FleetIQ
--   game server group. The name must be unique per Region per AWS account.
--   
--   <a>$sel:roleArn:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_roleArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) for an IAM role that allows Amazon GameLift to access
--   your EC2 Auto Scaling groups.
--   
--   <a>$sel:minSize:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_minSize</a> - The minimum number of instances
--   allowed in the EC2 Auto Scaling group. During automatic scaling
--   events, GameLift FleetIQ and EC2 do not scale down the group below
--   this minimum. In production, this value should be set to at least 1.
--   After the Auto Scaling group is created, update this value directly in
--   the Auto Scaling group using the AWS console or APIs.
--   
--   <a>$sel:maxSize:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_maxSize</a> - The maximum number of instances
--   allowed in the EC2 Auto Scaling group. During automatic scaling
--   events, GameLift FleetIQ and EC2 do not scale up the group above this
--   maximum. After the Auto Scaling group is created, update this value
--   directly in the Auto Scaling group using the AWS console or APIs.
--   
--   <a>$sel:launchTemplate:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_launchTemplate</a> - The EC2 launch template
--   that contains configuration settings and game server code to be
--   deployed to all instances in the game server group. You can specify
--   the template using either the template name or ID. For help with
--   creating a launch template, see <a>Creating a Launch Template for an
--   Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>. After the Auto Scaling group is created, update this value
--   directly in the Auto Scaling group using the AWS console or APIs.
--   
--   If you specify network interfaces in your launch template, you must
--   explicitly set the property <tt>AssociatePublicIpAddress</tt> to
--   "true". If no network interface is specified in the launch template,
--   GameLift FleetIQ uses your account's default VPC.
--   
--   <a>$sel:instanceDefinitions:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_instanceDefinitions</a> - The EC2 instance
--   types and sizes to use in the Auto Scaling group. The instance
--   definitions must specify at least two different instance types that
--   are supported by GameLift FleetIQ. For more information on instance
--   types, see <a>EC2 Instance Types</a> in the <i>Amazon EC2 User
--   Guide</i>. You can optionally specify capacity weighting for each
--   instance type. If no weight value is specified for an instance type,
--   it is set to the default value "1". For more information about
--   capacity weighting, see <a>Instance Weighting for Amazon EC2 Auto
--   Scaling</a> in the Amazon EC2 Auto Scaling User Guide.
newCreateGameServerGroup :: Text -> Text -> Natural -> Natural -> LaunchTemplateSpecification -> NonEmpty InstanceDefinition -> CreateGameServerGroup

-- | Configuration settings to define a scaling policy for the Auto Scaling
--   group that is optimized for game hosting. The scaling policy uses the
--   metric <tt>"PercentUtilizedGameServers"</tt> to maintain a buffer of
--   idle game servers that can immediately accommodate new games and
--   players. After the Auto Scaling group is created, update this value
--   directly in the Auto Scaling group using the AWS console or APIs.
createGameServerGroup_autoScalingPolicy :: Lens' CreateGameServerGroup (Maybe GameServerGroupAutoScalingPolicy)

-- | A list of labels to assign to the new game server group resource. Tags
--   are developer-defined key-value pairs. Tagging AWS resources is useful
--   for resource management, access management, and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags, respectively. The maximum tag limit may be lower than
--   stated. See the AWS General Reference for actual tagging limits.
createGameServerGroup_tags :: Lens' CreateGameServerGroup (Maybe [Tag])

-- | Indicates how GameLift FleetIQ balances the use of Spot Instances and
--   On-Demand Instances in the game server group. Method options include
--   the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
createGameServerGroup_balancingStrategy :: Lens' CreateGameServerGroup (Maybe BalancingStrategy)

-- | A flag that indicates whether instances in the game server group are
--   protected from early termination. Unprotected instances that have
--   active game servers running might be terminated during a scale-down
--   event, causing players to be dropped from the game. Protected
--   instances cannot be terminated while there are active game servers
--   running except in the event of a forced game server group deletion
--   (see ). An exception to this is with Spot Instances, which can be
--   terminated by AWS regardless of protection status. This property is
--   set to <tt>NO_PROTECTION</tt> by default.
createGameServerGroup_gameServerProtectionPolicy :: Lens' CreateGameServerGroup (Maybe GameServerProtectionPolicy)

-- | A list of virtual private cloud (VPC) subnets to use with instances in
--   the game server group. By default, all GameLift FleetIQ-supported
--   Availability Zones are used. You can use this parameter to specify
--   VPCs that you've set up. This property cannot be updated after the
--   game server group is created, and the corresponding Auto Scaling group
--   will always use the property value that is set with this request, even
--   if the Auto Scaling group is updated directly.
createGameServerGroup_vpcSubnets :: Lens' CreateGameServerGroup (Maybe (NonEmpty Text))

-- | An identifier for the new game server group. This value is used to
--   generate unique ARN identifiers for the EC2 Auto Scaling group and the
--   GameLift FleetIQ game server group. The name must be unique per Region
--   per AWS account.
createGameServerGroup_gameServerGroupName :: Lens' CreateGameServerGroup Text

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
createGameServerGroup_roleArn :: Lens' CreateGameServerGroup Text

-- | The minimum number of instances allowed in the EC2 Auto Scaling group.
--   During automatic scaling events, GameLift FleetIQ and EC2 do not scale
--   down the group below this minimum. In production, this value should be
--   set to at least 1. After the Auto Scaling group is created, update
--   this value directly in the Auto Scaling group using the AWS console or
--   APIs.
createGameServerGroup_minSize :: Lens' CreateGameServerGroup Natural

-- | The maximum number of instances allowed in the EC2 Auto Scaling group.
--   During automatic scaling events, GameLift FleetIQ and EC2 do not scale
--   up the group above this maximum. After the Auto Scaling group is
--   created, update this value directly in the Auto Scaling group using
--   the AWS console or APIs.
createGameServerGroup_maxSize :: Lens' CreateGameServerGroup Natural

-- | The EC2 launch template that contains configuration settings and game
--   server code to be deployed to all instances in the game server group.
--   You can specify the template using either the template name or ID. For
--   help with creating a launch template, see <a>Creating a Launch
--   Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>. After the Auto Scaling group is created,
--   update this value directly in the Auto Scaling group using the AWS
--   console or APIs.
--   
--   If you specify network interfaces in your launch template, you must
--   explicitly set the property <tt>AssociatePublicIpAddress</tt> to
--   "true". If no network interface is specified in the launch template,
--   GameLift FleetIQ uses your account's default VPC.
createGameServerGroup_launchTemplate :: Lens' CreateGameServerGroup LaunchTemplateSpecification

-- | The EC2 instance types and sizes to use in the Auto Scaling group. The
--   instance definitions must specify at least two different instance
--   types that are supported by GameLift FleetIQ. For more information on
--   instance types, see <a>EC2 Instance Types</a> in the <i>Amazon EC2
--   User Guide</i>. You can optionally specify capacity weighting for each
--   instance type. If no weight value is specified for an instance type,
--   it is set to the default value "1". For more information about
--   capacity weighting, see <a>Instance Weighting for Amazon EC2 Auto
--   Scaling</a> in the Amazon EC2 Auto Scaling User Guide.
createGameServerGroup_instanceDefinitions :: Lens' CreateGameServerGroup (NonEmpty InstanceDefinition)

-- | <i>See:</i> <a>newCreateGameServerGroupResponse</a> smart constructor.
data CreateGameServerGroupResponse
CreateGameServerGroupResponse' :: Maybe GameServerGroup -> Int -> CreateGameServerGroupResponse

-- | The newly created game server group object, including the new ARN
--   value for the GameLift FleetIQ game server group and the object's
--   status. The EC2 Auto Scaling group ARN is initially null, since the
--   group has not yet been created. This value is added once the game
--   server group status reaches <tt>ACTIVE</tt>.
[$sel:gameServerGroup:CreateGameServerGroupResponse'] :: CreateGameServerGroupResponse -> Maybe GameServerGroup

-- | The response's http status code.
[$sel:httpStatus:CreateGameServerGroupResponse'] :: CreateGameServerGroupResponse -> Int

-- | Create a value of <a>CreateGameServerGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroup:CreateGameServerGroupResponse'</a>,
--   <a>createGameServerGroupResponse_gameServerGroup</a> - The newly
--   created game server group object, including the new ARN value for the
--   GameLift FleetIQ game server group and the object's status. The EC2
--   Auto Scaling group ARN is initially null, since the group has not yet
--   been created. This value is added once the game server group status
--   reaches <tt>ACTIVE</tt>.
--   
--   <a>$sel:httpStatus:CreateGameServerGroupResponse'</a>,
--   <a>createGameServerGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateGameServerGroupResponse :: Int -> CreateGameServerGroupResponse

-- | The newly created game server group object, including the new ARN
--   value for the GameLift FleetIQ game server group and the object's
--   status. The EC2 Auto Scaling group ARN is initially null, since the
--   group has not yet been created. This value is added once the game
--   server group status reaches <tt>ACTIVE</tt>.
createGameServerGroupResponse_gameServerGroup :: Lens' CreateGameServerGroupResponse (Maybe GameServerGroup)

-- | The response's http status code.
createGameServerGroupResponse_httpStatus :: Lens' CreateGameServerGroupResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroup
instance GHC.Show.Show Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroup
instance GHC.Read.Read Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroup
instance GHC.Classes.Eq Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroup
instance GHC.Generics.Generic Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroupResponse
instance GHC.Show.Show Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroupResponse
instance GHC.Read.Read Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroupResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreateGameServerGroup.CreateGameServerGroup


-- | Adds remote locations to a fleet and begins populating the new
--   locations with EC2 instances. The new instances conform to the fleet's
--   instance type, auto-scaling, and other configuration settings.
--   
--   This operation cannot be used with fleets that don't support remote
--   locations. Fleets can have multiple locations only if they reside in
--   AWS Regions that support this feature (see CreateFleet for the
--   complete list) and were created after the feature was released in
--   March 2021.
--   
--   To add fleet locations, specify the fleet to be updated and provide a
--   list of one or more locations.
--   
--   If successful, this operation returns the list of added locations with
--   their status set to <tt>NEW</tt>. GameLift initiates the process of
--   starting an instance in each added location. You can track the status
--   of each new location by monitoring location creation events using
--   DescribeFleetEvents. Alternatively, you can poll location status by
--   calling DescribeFleetLocationAttributes. After a location status
--   becomes <tt>ACTIVE</tt>, you can adjust the location's capacity as
--   needed with UpdateFleetCapacity.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up fleets</a>
--   
--   <a>Multi-location fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleetLocations | DescribeFleetLocationAttributes |
--   DescribeFleetLocationCapacity | DescribeFleetLocationUtilization |
--   DescribeFleetAttributes | DescribeFleetCapacity |
--   DescribeFleetUtilization | UpdateFleetCapacity | StopFleetActions |
--   DeleteFleetLocations | <a>All APIs by task</a>
module Network.AWS.GameLift.CreateFleetLocations

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateFleetLocations</a> smart constructor.
data CreateFleetLocations
CreateFleetLocations' :: Text -> NonEmpty LocationConfiguration -> CreateFleetLocations

-- | A unique identifier for the fleet to add locations to. You can use
--   either the fleet ID or ARN value.
[$sel:fleetId:CreateFleetLocations'] :: CreateFleetLocations -> Text

-- | A list of locations to deploy additional instances to and manage as
--   part of the fleet. You can add any GameLift-supported AWS Region as a
--   remote location, in the form of an AWS Region code such as
--   <tt>us-west-2</tt>.
[$sel:locations:CreateFleetLocations'] :: CreateFleetLocations -> NonEmpty LocationConfiguration

-- | Create a value of <a>CreateFleetLocations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:CreateFleetLocations'</a>,
--   <a>createFleetLocations_fleetId</a> - A unique identifier for the
--   fleet to add locations to. You can use either the fleet ID or ARN
--   value.
--   
--   <a>$sel:locations:CreateFleetLocations'</a>,
--   <a>createFleetLocations_locations</a> - A list of locations to deploy
--   additional instances to and manage as part of the fleet. You can add
--   any GameLift-supported AWS Region as a remote location, in the form of
--   an AWS Region code such as <tt>us-west-2</tt>.
newCreateFleetLocations :: Text -> NonEmpty LocationConfiguration -> CreateFleetLocations

-- | A unique identifier for the fleet to add locations to. You can use
--   either the fleet ID or ARN value.
createFleetLocations_fleetId :: Lens' CreateFleetLocations Text

-- | A list of locations to deploy additional instances to and manage as
--   part of the fleet. You can add any GameLift-supported AWS Region as a
--   remote location, in the form of an AWS Region code such as
--   <tt>us-west-2</tt>.
createFleetLocations_locations :: Lens' CreateFleetLocations (NonEmpty LocationConfiguration)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateFleetLocationsResponse</a> smart constructor.
data CreateFleetLocationsResponse
CreateFleetLocationsResponse' :: Maybe [LocationState] -> Maybe Text -> Maybe Text -> Int -> CreateFleetLocationsResponse

-- | The remote locations that are being added to the fleet, and the
--   life-cycle status of each location. For new locations, the status is
--   set to <tt>NEW</tt>. During location creation, GameLift updates each
--   location's status as instances are deployed there and prepared for
--   game hosting. This list does not include the fleet home Region or any
--   remote locations that were already added to the fleet.
[$sel:locationStates:CreateFleetLocationsResponse'] :: CreateFleetLocationsResponse -> Maybe [LocationState]

-- | A unique identifier for the fleet that was updated with new locations.
[$sel:fleetId:CreateFleetLocationsResponse'] :: CreateFleetLocationsResponse -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:CreateFleetLocationsResponse'] :: CreateFleetLocationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateFleetLocationsResponse'] :: CreateFleetLocationsResponse -> Int

-- | Create a value of <a>CreateFleetLocationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationStates:CreateFleetLocationsResponse'</a>,
--   <a>createFleetLocationsResponse_locationStates</a> - The remote
--   locations that are being added to the fleet, and the life-cycle status
--   of each location. For new locations, the status is set to
--   <tt>NEW</tt>. During location creation, GameLift updates each
--   location's status as instances are deployed there and prepared for
--   game hosting. This list does not include the fleet home Region or any
--   remote locations that were already added to the fleet.
--   
--   <a>$sel:fleetId:CreateFleetLocations'</a>,
--   <a>createFleetLocationsResponse_fleetId</a> - A unique identifier for
--   the fleet that was updated with new locations.
--   
--   <a>$sel:fleetArn:CreateFleetLocationsResponse'</a>,
--   <a>createFleetLocationsResponse_fleetArn</a> - The Amazon Resource
--   Name (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:httpStatus:CreateFleetLocationsResponse'</a>,
--   <a>createFleetLocationsResponse_httpStatus</a> - The response's http
--   status code.
newCreateFleetLocationsResponse :: Int -> CreateFleetLocationsResponse

-- | The remote locations that are being added to the fleet, and the
--   life-cycle status of each location. For new locations, the status is
--   set to <tt>NEW</tt>. During location creation, GameLift updates each
--   location's status as instances are deployed there and prepared for
--   game hosting. This list does not include the fleet home Region or any
--   remote locations that were already added to the fleet.
createFleetLocationsResponse_locationStates :: Lens' CreateFleetLocationsResponse (Maybe [LocationState])

-- | A unique identifier for the fleet that was updated with new locations.
createFleetLocationsResponse_fleetId :: Lens' CreateFleetLocationsResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
createFleetLocationsResponse_fleetArn :: Lens' CreateFleetLocationsResponse (Maybe Text)

-- | The response's http status code.
createFleetLocationsResponse_httpStatus :: Lens' CreateFleetLocationsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocations
instance GHC.Show.Show Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocations
instance GHC.Read.Read Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocations
instance GHC.Classes.Eq Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocations
instance GHC.Generics.Generic Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocationsResponse
instance GHC.Show.Show Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocationsResponse
instance GHC.Read.Read Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocationsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocations
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocations
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocations
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocations
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreateFleetLocations.CreateFleetLocations


-- | Creates a fleet of Amazon Elastic Compute Cloud (Amazon EC2) instances
--   to host your custom game server or Realtime Servers. Use this
--   operation to configure the computing resources for your fleet and
--   provide instructions for running game servers on each instance.
--   
--   Most GameLift fleets can deploy instances to multiple locations,
--   including the home Region (where the fleet is created) and an optional
--   set of remote locations. Fleets that are created in the following AWS
--   Regions support multiple locations: us-east-1 (N. Virginia), us-west-2
--   (Oregon), eu-central-1 (Frankfurt), eu-west-1 (Ireland),
--   ap-southeast-2 (Sydney), ap-northeast-1 (Tokyo), and ap-northeast-2
--   (Seoul). Fleets that are created in other GameLift Regions can deploy
--   instances in the fleet's home Region only. All fleet instances use the
--   same configuration regardless of location; however, you can adjust
--   capacity settings and turn auto-scaling on/off for each location.
--   
--   To create a fleet, choose the hardware for your instances, specify a
--   game server build or Realtime script to deploy, and provide a runtime
--   configuration to direct GameLift how to start and run game servers on
--   each instance in the fleet. Set permissions for inbound traffic to
--   your game servers, and enable optional features as needed. When
--   creating a multi-location fleet, provide a list of additional remote
--   locations.
--   
--   If successful, this operation creates a new Fleet resource and places
--   it in <tt>NEW</tt> status, which prompts GameLift to initiate the
--   <a>fleet creation workflow</a>. You can track fleet creation by
--   checking fleet status using DescribeFleetAttributes and
--   DescribeFleetLocationAttributes/, or by monitoring fleet creation
--   events using DescribeFleetEvents. As soon as the fleet status changes
--   to <tt>ACTIVE</tt>, you can enable automatic scaling for the fleet
--   with PutScalingPolicy and set capacity for the home Region with
--   UpdateFleetCapacity. When the status of each remote location reaches
--   <tt>ACTIVE</tt>, you can set capacity by location using
--   UpdateFleetCapacity.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up fleets</a>
--   
--   <a>Debug fleet creation issues</a>
--   
--   <a>Multi-location fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleet | UpdateFleetCapacity | PutScalingPolicy |
--   DescribeEC2InstanceLimits | DescribeFleetAttributes |
--   DescribeFleetLocationAttributes | UpdateFleetAttributes |
--   StopFleetActions | DeleteFleet | <a>All APIs by task</a>
module Network.AWS.GameLift.CreateFleet

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateFleet</a> smart constructor.
data CreateFleet
CreateFleet' :: Maybe Text -> Maybe FleetType -> Maybe Text -> Maybe CertificateConfiguration -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe ProtectionPolicy -> Maybe RuntimeConfiguration -> Maybe [Tag] -> Maybe [IpPermission] -> Maybe (NonEmpty LocationConfiguration) -> Maybe ResourceCreationLimitPolicy -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Text -> EC2InstanceType -> CreateFleet

-- | Used when peering your GameLift fleet with a VPC, the unique
--   identifier for the AWS account that owns the VPC. You can find your
--   account ID in the AWS Management Console under account settings.
[$sel:peerVpcAwsAccountId:CreateFleet'] :: CreateFleet -> Maybe Text

-- | Indicates whether to use On-Demand or Spot instances for this fleet.
--   By default, this property is set to <tt>ON_DEMAND</tt>. Learn more
--   about when to use <a>On-Demand versus Spot Instances</a>. This
--   property cannot be changed after the fleet is created.
[$sel:fleetType:CreateFleet'] :: CreateFleet -> Maybe FleetType

-- | A unique identifier for an AWS IAM role that manages access to your
--   AWS services. With an instance role ARN set, any application that runs
--   on an instance in this fleet can assume the role, including install
--   scripts, server processes, and daemons (background processes). Create
--   a role or look up a role's ARN by using the <a>IAM dashboard</a> in
--   the AWS Management Console. Learn more about using on-box credentials
--   for your game servers at <a>Access external resources from a game
--   server</a>. This property cannot be changed after the fleet is
--   created.
[$sel:instanceRoleArn:CreateFleet'] :: CreateFleet -> Maybe Text

-- | Prompts GameLift to generate a TLS/SSL certificate for the fleet. TLS
--   certificates are used for encrypting traffic between game clients and
--   the game servers that are running on GameLift. By default, the
--   <tt>CertificateConfiguration</tt> is set to <tt>DISABLED</tt>. Learn
--   more at <a>Securing Client/Server Communication</a>. This property
--   cannot be changed after the fleet is created.
--   
--   Note: This feature requires the AWS Certificate Manager (ACM) service,
--   which is not available in all AWS regions. When working in a region
--   that does not support this feature, a fleet creation request with
--   certificate generation fails with a 4xx error.
[$sel:certificateConfiguration:CreateFleet'] :: CreateFleet -> Maybe CertificateConfiguration

-- | <b>This parameter is no longer used.</b> Specify a server launch path
--   using the <tt>RuntimeConfiguration</tt> parameter. Requests that use
--   this parameter instead continue to be valid.
[$sel:serverLaunchPath:CreateFleet'] :: CreateFleet -> Maybe Text

-- | <b>This parameter is no longer used.</b> To specify where GameLift
--   should store log files once a server process shuts down, use the
--   GameLift server API <tt>ProcessReady()</tt> and specify one or more
--   directory paths in <tt>logParameters</tt>. See more information in the
--   <a>Server API Reference</a>.
[$sel:logPaths:CreateFleet'] :: CreateFleet -> Maybe [Text]

-- | <b>This parameter is no longer used.</b> Specify server launch
--   parameters using the <tt>RuntimeConfiguration</tt> parameter. Requests
--   that use this parameter instead continue to be valid.
[$sel:serverLaunchParameters:CreateFleet'] :: CreateFleet -> Maybe Text

-- | The status of termination protection for active game sessions on the
--   fleet. By default, this property is set to <tt>NoProtection</tt>. You
--   can also set game session protection for an individual game session by
--   calling UpdateGameSession.
--   
--   <ul>
--   <li><b>NoProtection</b> - Game sessions can be terminated during
--   active gameplay as a result of a scale-down event.</li>
--   <li><b>FullProtection</b> - Game sessions in <tt>ACTIVE</tt> status
--   cannot be terminated during a scale-down event.</li>
--   </ul>
[$sel:newGameSessionProtectionPolicy':CreateFleet'] :: CreateFleet -> Maybe ProtectionPolicy

-- | Instructions for how to launch and maintain server processes on
--   instances in the fleet. The runtime configuration defines one or more
--   server process configurations, each identifying a build executable or
--   Realtime script file and the number of processes of that type to run
--   concurrently.
--   
--   The <tt>RuntimeConfiguration</tt> parameter is required unless the
--   fleet is being configured using the older parameters
--   <tt>ServerLaunchPath</tt> and <tt>ServerLaunchParameters</tt>, which
--   are still supported for backward compatibility.
[$sel:runtimeConfiguration:CreateFleet'] :: CreateFleet -> Maybe RuntimeConfiguration

-- | A list of labels to assign to the new fleet resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the fleet is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   /AWS General Reference/ for actual tagging limits.
[$sel:tags:CreateFleet'] :: CreateFleet -> Maybe [Tag]

-- | The allowed IP address ranges and port settings that allow inbound
--   traffic to access game sessions on this fleet. If the fleet is hosting
--   a custom game build, this property must be set before players can
--   connect to game sessions. For Realtime Servers fleets, GameLift
--   automatically sets TCP and UDP ranges.
[$sel:eC2InboundPermissions:CreateFleet'] :: CreateFleet -> Maybe [IpPermission]

-- | A set of remote locations to deploy additional instances to and manage
--   as part of the fleet. This parameter can only be used when creating
--   fleets in AWS Regions that support multiple locations. You can add any
--   GameLift-supported AWS Region as a remote location, in the form of an
--   AWS Region code such as <tt>us-west-2</tt>. To create a fleet with
--   instances in the home Region only, omit this parameter.
[$sel:locations:CreateFleet'] :: CreateFleet -> Maybe (NonEmpty LocationConfiguration)

-- | A policy that limits the number of game sessions that an individual
--   player can create on instances in this fleet within a specified span
--   of time.
[$sel:resourceCreationLimitPolicy:CreateFleet'] :: CreateFleet -> Maybe ResourceCreationLimitPolicy

-- | A human-readable description of the fleet.
[$sel:description:CreateFleet'] :: CreateFleet -> Maybe Text

-- | The unique identifier for a custom game server build to be deployed on
--   fleet instances. You can use either the build ID or ARN. The build
--   must be uploaded to GameLift and in <tt>READY</tt> status. This fleet
--   property cannot be changed later.
[$sel:buildId:CreateFleet'] :: CreateFleet -> Maybe Text

-- | The name of an AWS CloudWatch metric group to add this fleet to. A
--   metric group is used to aggregate the metrics for multiple fleets. You
--   can specify an existing metric group name or set a new name to create
--   a new metric group. A fleet can be included in only one metric group
--   at a time.
[$sel:metricGroups:CreateFleet'] :: CreateFleet -> Maybe [Text]

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
[$sel:peerVpcId:CreateFleet'] :: CreateFleet -> Maybe Text

-- | The unique identifier for a Realtime configuration script to be
--   deployed on fleet instances. You can use either the script ID or ARN.
--   Scripts must be uploaded to GameLift prior to creating the fleet. This
--   fleet property cannot be changed later.
[$sel:scriptId:CreateFleet'] :: CreateFleet -> Maybe Text

-- | A descriptive label that is associated with a fleet. Fleet names do
--   not need to be unique.
[$sel:name:CreateFleet'] :: CreateFleet -> Text

-- | The GameLift-supported EC2 instance type to use for all fleet
--   instances. Instance type determines the computing resources that will
--   be used to host your game servers, including CPU, memory, storage, and
--   networking capacity. See <a>Amazon EC2 Instance Types</a> for detailed
--   descriptions of EC2 instance types.
[$sel:eC2InstanceType:CreateFleet'] :: CreateFleet -> EC2InstanceType

-- | Create a value of <a>CreateFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:peerVpcAwsAccountId:CreateFleet'</a>,
--   <a>createFleet_peerVpcAwsAccountId</a> - Used when peering your
--   GameLift fleet with a VPC, the unique identifier for the AWS account
--   that owns the VPC. You can find your account ID in the AWS Management
--   Console under account settings.
--   
--   <a>$sel:fleetType:CreateFleet'</a>, <a>createFleet_fleetType</a> -
--   Indicates whether to use On-Demand or Spot instances for this fleet.
--   By default, this property is set to <tt>ON_DEMAND</tt>. Learn more
--   about when to use <a>On-Demand versus Spot Instances</a>. This
--   property cannot be changed after the fleet is created.
--   
--   <a>$sel:instanceRoleArn:CreateFleet'</a>,
--   <a>createFleet_instanceRoleArn</a> - A unique identifier for an AWS
--   IAM role that manages access to your AWS services. With an instance
--   role ARN set, any application that runs on an instance in this fleet
--   can assume the role, including install scripts, server processes, and
--   daemons (background processes). Create a role or look up a role's ARN
--   by using the <a>IAM dashboard</a> in the AWS Management Console. Learn
--   more about using on-box credentials for your game servers at <a>Access
--   external resources from a game server</a>. This property cannot be
--   changed after the fleet is created.
--   
--   <a>$sel:certificateConfiguration:CreateFleet'</a>,
--   <a>createFleet_certificateConfiguration</a> - Prompts GameLift to
--   generate a TLS/SSL certificate for the fleet. TLS certificates are
--   used for encrypting traffic between game clients and the game servers
--   that are running on GameLift. By default, the
--   <tt>CertificateConfiguration</tt> is set to <tt>DISABLED</tt>. Learn
--   more at <a>Securing Client/Server Communication</a>. This property
--   cannot be changed after the fleet is created.
--   
--   Note: This feature requires the AWS Certificate Manager (ACM) service,
--   which is not available in all AWS regions. When working in a region
--   that does not support this feature, a fleet creation request with
--   certificate generation fails with a 4xx error.
--   
--   <a>$sel:serverLaunchPath:CreateFleet'</a>,
--   <a>createFleet_serverLaunchPath</a> - <b>This parameter is no longer
--   used.</b> Specify a server launch path using the
--   <tt>RuntimeConfiguration</tt> parameter. Requests that use this
--   parameter instead continue to be valid.
--   
--   <a>$sel:logPaths:CreateFleet'</a>, <a>createFleet_logPaths</a> -
--   <b>This parameter is no longer used.</b> To specify where GameLift
--   should store log files once a server process shuts down, use the
--   GameLift server API <tt>ProcessReady()</tt> and specify one or more
--   directory paths in <tt>logParameters</tt>. See more information in the
--   <a>Server API Reference</a>.
--   
--   <a>$sel:serverLaunchParameters:CreateFleet'</a>,
--   <a>createFleet_serverLaunchParameters</a> - <b>This parameter is no
--   longer used.</b> Specify server launch parameters using the
--   <tt>RuntimeConfiguration</tt> parameter. Requests that use this
--   parameter instead continue to be valid.
--   
--   <a>$sel:newGameSessionProtectionPolicy':CreateFleet'</a>,
--   <a>createFleet_newGameSessionProtectionPolicy</a> - The status of
--   termination protection for active game sessions on the fleet. By
--   default, this property is set to <tt>NoProtection</tt>. You can also
--   set game session protection for an individual game session by calling
--   UpdateGameSession.
--   
--   <ul>
--   <li><b>NoProtection</b> - Game sessions can be terminated during
--   active gameplay as a result of a scale-down event.</li>
--   <li><b>FullProtection</b> - Game sessions in <tt>ACTIVE</tt> status
--   cannot be terminated during a scale-down event.</li>
--   </ul>
--   
--   <a>$sel:runtimeConfiguration:CreateFleet'</a>,
--   <a>createFleet_runtimeConfiguration</a> - Instructions for how to
--   launch and maintain server processes on instances in the fleet. The
--   runtime configuration defines one or more server process
--   configurations, each identifying a build executable or Realtime script
--   file and the number of processes of that type to run concurrently.
--   
--   The <tt>RuntimeConfiguration</tt> parameter is required unless the
--   fleet is being configured using the older parameters
--   <tt>ServerLaunchPath</tt> and <tt>ServerLaunchParameters</tt>, which
--   are still supported for backward compatibility.
--   
--   <a>$sel:tags:CreateFleet'</a>, <a>createFleet_tags</a> - A list of
--   labels to assign to the new fleet resource. Tags are developer-defined
--   key-value pairs. Tagging AWS resources are useful for resource
--   management, access management and cost allocation. For more
--   information, see <a>Tagging AWS Resources</a> in the <i>AWS General
--   Reference</i>. Once the fleet is created, you can use TagResource,
--   UntagResource, and ListTagsForResource to add, remove, and view tags.
--   The maximum tag limit may be lower than stated. See the /AWS General
--   Reference/ for actual tagging limits.
--   
--   <a>$sel:eC2InboundPermissions:CreateFleet'</a>,
--   <a>createFleet_eC2InboundPermissions</a> - The allowed IP address
--   ranges and port settings that allow inbound traffic to access game
--   sessions on this fleet. If the fleet is hosting a custom game build,
--   this property must be set before players can connect to game sessions.
--   For Realtime Servers fleets, GameLift automatically sets TCP and UDP
--   ranges.
--   
--   <a>$sel:locations:CreateFleet'</a>, <a>createFleet_locations</a> - A
--   set of remote locations to deploy additional instances to and manage
--   as part of the fleet. This parameter can only be used when creating
--   fleets in AWS Regions that support multiple locations. You can add any
--   GameLift-supported AWS Region as a remote location, in the form of an
--   AWS Region code such as <tt>us-west-2</tt>. To create a fleet with
--   instances in the home Region only, omit this parameter.
--   
--   <a>$sel:resourceCreationLimitPolicy:CreateFleet'</a>,
--   <a>createFleet_resourceCreationLimitPolicy</a> - A policy that limits
--   the number of game sessions that an individual player can create on
--   instances in this fleet within a specified span of time.
--   
--   <a>$sel:description:CreateFleet'</a>, <a>createFleet_description</a> -
--   A human-readable description of the fleet.
--   
--   <a>$sel:buildId:CreateFleet'</a>, <a>createFleet_buildId</a> - The
--   unique identifier for a custom game server build to be deployed on
--   fleet instances. You can use either the build ID or ARN. The build
--   must be uploaded to GameLift and in <tt>READY</tt> status. This fleet
--   property cannot be changed later.
--   
--   <a>$sel:metricGroups:CreateFleet'</a>, <a>createFleet_metricGroups</a>
--   - The name of an AWS CloudWatch metric group to add this fleet to. A
--   metric group is used to aggregate the metrics for multiple fleets. You
--   can specify an existing metric group name or set a new name to create
--   a new metric group. A fleet can be included in only one metric group
--   at a time.
--   
--   <a>$sel:peerVpcId:CreateFleet'</a>, <a>createFleet_peerVpcId</a> - A
--   unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
--   
--   <a>$sel:scriptId:CreateFleet'</a>, <a>createFleet_scriptId</a> - The
--   unique identifier for a Realtime configuration script to be deployed
--   on fleet instances. You can use either the script ID or ARN. Scripts
--   must be uploaded to GameLift prior to creating the fleet. This fleet
--   property cannot be changed later.
--   
--   <a>$sel:name:CreateFleet'</a>, <a>createFleet_name</a> - A descriptive
--   label that is associated with a fleet. Fleet names do not need to be
--   unique.
--   
--   <a>$sel:eC2InstanceType:CreateFleet'</a>,
--   <a>createFleet_eC2InstanceType</a> - The GameLift-supported EC2
--   instance type to use for all fleet instances. Instance type determines
--   the computing resources that will be used to host your game servers,
--   including CPU, memory, storage, and networking capacity. See <a>Amazon
--   EC2 Instance Types</a> for detailed descriptions of EC2 instance
--   types.
newCreateFleet :: Text -> EC2InstanceType -> CreateFleet

-- | Used when peering your GameLift fleet with a VPC, the unique
--   identifier for the AWS account that owns the VPC. You can find your
--   account ID in the AWS Management Console under account settings.
createFleet_peerVpcAwsAccountId :: Lens' CreateFleet (Maybe Text)

-- | Indicates whether to use On-Demand or Spot instances for this fleet.
--   By default, this property is set to <tt>ON_DEMAND</tt>. Learn more
--   about when to use <a>On-Demand versus Spot Instances</a>. This
--   property cannot be changed after the fleet is created.
createFleet_fleetType :: Lens' CreateFleet (Maybe FleetType)

-- | A unique identifier for an AWS IAM role that manages access to your
--   AWS services. With an instance role ARN set, any application that runs
--   on an instance in this fleet can assume the role, including install
--   scripts, server processes, and daemons (background processes). Create
--   a role or look up a role's ARN by using the <a>IAM dashboard</a> in
--   the AWS Management Console. Learn more about using on-box credentials
--   for your game servers at <a>Access external resources from a game
--   server</a>. This property cannot be changed after the fleet is
--   created.
createFleet_instanceRoleArn :: Lens' CreateFleet (Maybe Text)

-- | Prompts GameLift to generate a TLS/SSL certificate for the fleet. TLS
--   certificates are used for encrypting traffic between game clients and
--   the game servers that are running on GameLift. By default, the
--   <tt>CertificateConfiguration</tt> is set to <tt>DISABLED</tt>. Learn
--   more at <a>Securing Client/Server Communication</a>. This property
--   cannot be changed after the fleet is created.
--   
--   Note: This feature requires the AWS Certificate Manager (ACM) service,
--   which is not available in all AWS regions. When working in a region
--   that does not support this feature, a fleet creation request with
--   certificate generation fails with a 4xx error.
createFleet_certificateConfiguration :: Lens' CreateFleet (Maybe CertificateConfiguration)

-- | <b>This parameter is no longer used.</b> Specify a server launch path
--   using the <tt>RuntimeConfiguration</tt> parameter. Requests that use
--   this parameter instead continue to be valid.
createFleet_serverLaunchPath :: Lens' CreateFleet (Maybe Text)

-- | <b>This parameter is no longer used.</b> To specify where GameLift
--   should store log files once a server process shuts down, use the
--   GameLift server API <tt>ProcessReady()</tt> and specify one or more
--   directory paths in <tt>logParameters</tt>. See more information in the
--   <a>Server API Reference</a>.
createFleet_logPaths :: Lens' CreateFleet (Maybe [Text])

-- | <b>This parameter is no longer used.</b> Specify server launch
--   parameters using the <tt>RuntimeConfiguration</tt> parameter. Requests
--   that use this parameter instead continue to be valid.
createFleet_serverLaunchParameters :: Lens' CreateFleet (Maybe Text)

-- | The status of termination protection for active game sessions on the
--   fleet. By default, this property is set to <tt>NoProtection</tt>. You
--   can also set game session protection for an individual game session by
--   calling UpdateGameSession.
--   
--   <ul>
--   <li><b>NoProtection</b> - Game sessions can be terminated during
--   active gameplay as a result of a scale-down event.</li>
--   <li><b>FullProtection</b> - Game sessions in <tt>ACTIVE</tt> status
--   cannot be terminated during a scale-down event.</li>
--   </ul>
createFleet_newGameSessionProtectionPolicy :: Lens' CreateFleet (Maybe ProtectionPolicy)

-- | Instructions for how to launch and maintain server processes on
--   instances in the fleet. The runtime configuration defines one or more
--   server process configurations, each identifying a build executable or
--   Realtime script file and the number of processes of that type to run
--   concurrently.
--   
--   The <tt>RuntimeConfiguration</tt> parameter is required unless the
--   fleet is being configured using the older parameters
--   <tt>ServerLaunchPath</tt> and <tt>ServerLaunchParameters</tt>, which
--   are still supported for backward compatibility.
createFleet_runtimeConfiguration :: Lens' CreateFleet (Maybe RuntimeConfiguration)

-- | A list of labels to assign to the new fleet resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the fleet is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   /AWS General Reference/ for actual tagging limits.
createFleet_tags :: Lens' CreateFleet (Maybe [Tag])

-- | The allowed IP address ranges and port settings that allow inbound
--   traffic to access game sessions on this fleet. If the fleet is hosting
--   a custom game build, this property must be set before players can
--   connect to game sessions. For Realtime Servers fleets, GameLift
--   automatically sets TCP and UDP ranges.
createFleet_eC2InboundPermissions :: Lens' CreateFleet (Maybe [IpPermission])

-- | A set of remote locations to deploy additional instances to and manage
--   as part of the fleet. This parameter can only be used when creating
--   fleets in AWS Regions that support multiple locations. You can add any
--   GameLift-supported AWS Region as a remote location, in the form of an
--   AWS Region code such as <tt>us-west-2</tt>. To create a fleet with
--   instances in the home Region only, omit this parameter.
createFleet_locations :: Lens' CreateFleet (Maybe (NonEmpty LocationConfiguration))

-- | A policy that limits the number of game sessions that an individual
--   player can create on instances in this fleet within a specified span
--   of time.
createFleet_resourceCreationLimitPolicy :: Lens' CreateFleet (Maybe ResourceCreationLimitPolicy)

-- | A human-readable description of the fleet.
createFleet_description :: Lens' CreateFleet (Maybe Text)

-- | The unique identifier for a custom game server build to be deployed on
--   fleet instances. You can use either the build ID or ARN. The build
--   must be uploaded to GameLift and in <tt>READY</tt> status. This fleet
--   property cannot be changed later.
createFleet_buildId :: Lens' CreateFleet (Maybe Text)

-- | The name of an AWS CloudWatch metric group to add this fleet to. A
--   metric group is used to aggregate the metrics for multiple fleets. You
--   can specify an existing metric group name or set a new name to create
--   a new metric group. A fleet can be included in only one metric group
--   at a time.
createFleet_metricGroups :: Lens' CreateFleet (Maybe [Text])

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
createFleet_peerVpcId :: Lens' CreateFleet (Maybe Text)

-- | The unique identifier for a Realtime configuration script to be
--   deployed on fleet instances. You can use either the script ID or ARN.
--   Scripts must be uploaded to GameLift prior to creating the fleet. This
--   fleet property cannot be changed later.
createFleet_scriptId :: Lens' CreateFleet (Maybe Text)

-- | A descriptive label that is associated with a fleet. Fleet names do
--   not need to be unique.
createFleet_name :: Lens' CreateFleet Text

-- | The GameLift-supported EC2 instance type to use for all fleet
--   instances. Instance type determines the computing resources that will
--   be used to host your game servers, including CPU, memory, storage, and
--   networking capacity. See <a>Amazon EC2 Instance Types</a> for detailed
--   descriptions of EC2 instance types.
createFleet_eC2InstanceType :: Lens' CreateFleet EC2InstanceType

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateFleetResponse</a> smart constructor.
data CreateFleetResponse
CreateFleetResponse' :: Maybe [LocationState] -> Maybe FleetAttributes -> Int -> CreateFleetResponse

-- | The fleet's locations and life-cycle status of each location. For new
--   fleets, the status of all locations is set to <tt>NEW</tt>. During
--   fleet creation, GameLift updates each location status as instances are
--   deployed there and prepared for game hosting. This list includes an
--   entry for the fleet's home Region. For fleets with no remote
--   locations, only one entry, representing the home Region, is returned.
[$sel:locationStates:CreateFleetResponse'] :: CreateFleetResponse -> Maybe [LocationState]

-- | The properties for the new fleet, including the current status. All
--   fleets are placed in <tt>NEW</tt> status on creation.
[$sel:fleetAttributes:CreateFleetResponse'] :: CreateFleetResponse -> Maybe FleetAttributes

-- | The response's http status code.
[$sel:httpStatus:CreateFleetResponse'] :: CreateFleetResponse -> Int

-- | Create a value of <a>CreateFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationStates:CreateFleetResponse'</a>,
--   <a>createFleetResponse_locationStates</a> - The fleet's locations and
--   life-cycle status of each location. For new fleets, the status of all
--   locations is set to <tt>NEW</tt>. During fleet creation, GameLift
--   updates each location status as instances are deployed there and
--   prepared for game hosting. This list includes an entry for the fleet's
--   home Region. For fleets with no remote locations, only one entry,
--   representing the home Region, is returned.
--   
--   <a>$sel:fleetAttributes:CreateFleetResponse'</a>,
--   <a>createFleetResponse_fleetAttributes</a> - The properties for the
--   new fleet, including the current status. All fleets are placed in
--   <tt>NEW</tt> status on creation.
--   
--   <a>$sel:httpStatus:CreateFleetResponse'</a>,
--   <a>createFleetResponse_httpStatus</a> - The response's http status
--   code.
newCreateFleetResponse :: Int -> CreateFleetResponse

-- | The fleet's locations and life-cycle status of each location. For new
--   fleets, the status of all locations is set to <tt>NEW</tt>. During
--   fleet creation, GameLift updates each location status as instances are
--   deployed there and prepared for game hosting. This list includes an
--   entry for the fleet's home Region. For fleets with no remote
--   locations, only one entry, representing the home Region, is returned.
createFleetResponse_locationStates :: Lens' CreateFleetResponse (Maybe [LocationState])

-- | The properties for the new fleet, including the current status. All
--   fleets are placed in <tt>NEW</tt> status on creation.
createFleetResponse_fleetAttributes :: Lens' CreateFleetResponse (Maybe FleetAttributes)

-- | The response's http status code.
createFleetResponse_httpStatus :: Lens' CreateFleetResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreateFleet.CreateFleet
instance GHC.Show.Show Network.AWS.GameLift.CreateFleet.CreateFleet
instance GHC.Read.Read Network.AWS.GameLift.CreateFleet.CreateFleet
instance GHC.Classes.Eq Network.AWS.GameLift.CreateFleet.CreateFleet
instance GHC.Generics.Generic Network.AWS.GameLift.CreateFleet.CreateFleetResponse
instance GHC.Show.Show Network.AWS.GameLift.CreateFleet.CreateFleetResponse
instance GHC.Read.Read Network.AWS.GameLift.CreateFleet.CreateFleetResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreateFleet.CreateFleetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreateFleet.CreateFleet
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateFleet.CreateFleetResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreateFleet.CreateFleet
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateFleet.CreateFleet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreateFleet.CreateFleet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreateFleet.CreateFleet
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreateFleet.CreateFleet
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreateFleet.CreateFleet


-- | Creates a new Amazon GameLift build resource for your game server
--   binary files. Game server binaries must be combined into a zip file
--   for use with Amazon GameLift.
--   
--   When setting up a new game build for GameLift, we recommend using the
--   AWS CLI command <b><a>upload-build</a></b> . This helper command
--   combines two tasks: (1) it uploads your build files from a file
--   directory to a GameLift Amazon S3 location, and (2) it creates a new
--   build resource.
--   
--   The <tt>CreateBuild</tt> operation can used in the following
--   scenarios:
--   
--   <ul>
--   <li>To create a new game build with build files that are in an Amazon
--   S3 location under an AWS account that you control. To use this option,
--   you must first give Amazon GameLift access to the Amazon S3 bucket.
--   With permissions in place, call <tt>CreateBuild</tt> and specify a
--   build name, operating system, and the Amazon S3 storage location of
--   your game build.</li>
--   <li>To directly upload your build files to a GameLift Amazon S3
--   location. To use this option, first call <tt>CreateBuild</tt> and
--   specify a build name and operating system. This operation creates a
--   new build resource and also returns an Amazon S3 location with
--   temporary access credentials. Use the credentials to manually upload
--   your build files to the specified Amazon S3 location. For more
--   information, see <a>Uploading Objects</a> in the <i>Amazon S3
--   Developer Guide</i>. Build files can be uploaded to the GameLift
--   Amazon S3 location once only; that can't be updated.</li>
--   </ul>
--   
--   If successful, this operation creates a new build resource with a
--   unique build ID and places it in <tt>INITIALIZED</tt> status. A build
--   must be in <tt>READY</tt> status before you can create fleets with it.
--   
--   <b>Learn more</b>
--   
--   <a>Uploading Your Game</a>
--   
--   <a>Create a Build with Files in Amazon S3</a>
--   
--   <b>Related actions</b>
--   
--   CreateBuild | ListBuilds | DescribeBuild | UpdateBuild | DeleteBuild |
--   <a>All APIs by task</a>
module Network.AWS.GameLift.CreateBuild

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateBuild</a> smart constructor.
data CreateBuild
CreateBuild' :: Maybe Text -> Maybe Text -> Maybe S3Location -> Maybe [Tag] -> Maybe OperatingSystem -> CreateBuild

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique. You can use UpdateBuild to change
--   this value later.
[$sel:version:CreateBuild'] :: CreateBuild -> Maybe Text

-- | A descriptive label that is associated with a build. Build names do
--   not need to be unique. You can use UpdateBuild to change this value
--   later.
[$sel:name:CreateBuild'] :: CreateBuild -> Maybe Text

-- | Information indicating where your game build files are stored. Use
--   this parameter only when creating a build with files stored in an
--   Amazon S3 bucket that you own. The storage location must specify an
--   Amazon S3 bucket name and key. The location must also specify a role
--   ARN that you set up to allow Amazon GameLift to access your Amazon S3
--   bucket. The S3 bucket and your new build must be in the same Region.
[$sel:storageLocation:CreateBuild'] :: CreateBuild -> Maybe S3Location

-- | A list of labels to assign to the new build resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
[$sel:tags:CreateBuild'] :: CreateBuild -> Maybe [Tag]

-- | The operating system that the game server binaries are built to run
--   on. This value determines the type of fleet resources that you can use
--   for this build. If your game build contains multiple executables, they
--   all must run on the same operating system. If an operating system is
--   not specified when creating a build, Amazon GameLift uses the default
--   value (WINDOWS_2012). This value cannot be changed later.
[$sel:operatingSystem:CreateBuild'] :: CreateBuild -> Maybe OperatingSystem

-- | Create a value of <a>CreateBuild</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:version:CreateBuild'</a>, <a>createBuild_version</a> - Version
--   information that is associated with a build or script. Version strings
--   do not need to be unique. You can use UpdateBuild to change this value
--   later.
--   
--   <a>$sel:name:CreateBuild'</a>, <a>createBuild_name</a> - A descriptive
--   label that is associated with a build. Build names do not need to be
--   unique. You can use UpdateBuild to change this value later.
--   
--   <a>$sel:storageLocation:CreateBuild'</a>,
--   <a>createBuild_storageLocation</a> - Information indicating where your
--   game build files are stored. Use this parameter only when creating a
--   build with files stored in an Amazon S3 bucket that you own. The
--   storage location must specify an Amazon S3 bucket name and key. The
--   location must also specify a role ARN that you set up to allow Amazon
--   GameLift to access your Amazon S3 bucket. The S3 bucket and your new
--   build must be in the same Region.
--   
--   <a>$sel:tags:CreateBuild'</a>, <a>createBuild_tags</a> - A list of
--   labels to assign to the new build resource. Tags are developer-defined
--   key-value pairs. Tagging AWS resources are useful for resource
--   management, access management and cost allocation. For more
--   information, see <a>Tagging AWS Resources</a> in the <i>AWS General
--   Reference</i>. Once the resource is created, you can use TagResource,
--   UntagResource, and ListTagsForResource to add, remove, and view tags.
--   The maximum tag limit may be lower than stated. See the AWS General
--   Reference for actual tagging limits.
--   
--   <a>$sel:operatingSystem:CreateBuild'</a>,
--   <a>createBuild_operatingSystem</a> - The operating system that the
--   game server binaries are built to run on. This value determines the
--   type of fleet resources that you can use for this build. If your game
--   build contains multiple executables, they all must run on the same
--   operating system. If an operating system is not specified when
--   creating a build, Amazon GameLift uses the default value
--   (WINDOWS_2012). This value cannot be changed later.
newCreateBuild :: CreateBuild

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique. You can use UpdateBuild to change
--   this value later.
createBuild_version :: Lens' CreateBuild (Maybe Text)

-- | A descriptive label that is associated with a build. Build names do
--   not need to be unique. You can use UpdateBuild to change this value
--   later.
createBuild_name :: Lens' CreateBuild (Maybe Text)

-- | Information indicating where your game build files are stored. Use
--   this parameter only when creating a build with files stored in an
--   Amazon S3 bucket that you own. The storage location must specify an
--   Amazon S3 bucket name and key. The location must also specify a role
--   ARN that you set up to allow Amazon GameLift to access your Amazon S3
--   bucket. The S3 bucket and your new build must be in the same Region.
createBuild_storageLocation :: Lens' CreateBuild (Maybe S3Location)

-- | A list of labels to assign to the new build resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
createBuild_tags :: Lens' CreateBuild (Maybe [Tag])

-- | The operating system that the game server binaries are built to run
--   on. This value determines the type of fleet resources that you can use
--   for this build. If your game build contains multiple executables, they
--   all must run on the same operating system. If an operating system is
--   not specified when creating a build, Amazon GameLift uses the default
--   value (WINDOWS_2012). This value cannot be changed later.
createBuild_operatingSystem :: Lens' CreateBuild (Maybe OperatingSystem)

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateBuildResponse</a> smart constructor.
data CreateBuildResponse
CreateBuildResponse' :: Maybe Build -> Maybe S3Location -> Maybe (Sensitive AwsCredentials) -> Int -> CreateBuildResponse

-- | The newly created build resource, including a unique build IDs and
--   status.
[$sel:build:CreateBuildResponse'] :: CreateBuildResponse -> Maybe Build

-- | Amazon S3 location for your game build file, including bucket name and
--   key.
[$sel:storageLocation:CreateBuildResponse'] :: CreateBuildResponse -> Maybe S3Location

-- | This element is returned only when the operation is called without a
--   storage location. It contains credentials to use when you are
--   uploading a build file to an Amazon S3 bucket that is owned by Amazon
--   GameLift. Credentials have a limited life span. To refresh these
--   credentials, call RequestUploadCredentials.
[$sel:uploadCredentials:CreateBuildResponse'] :: CreateBuildResponse -> Maybe (Sensitive AwsCredentials)

-- | The response's http status code.
[$sel:httpStatus:CreateBuildResponse'] :: CreateBuildResponse -> Int

-- | Create a value of <a>CreateBuildResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:build:CreateBuildResponse'</a>,
--   <a>createBuildResponse_build</a> - The newly created build resource,
--   including a unique build IDs and status.
--   
--   <a>$sel:storageLocation:CreateBuild'</a>,
--   <a>createBuildResponse_storageLocation</a> - Amazon S3 location for
--   your game build file, including bucket name and key.
--   
--   <a>$sel:uploadCredentials:CreateBuildResponse'</a>,
--   <a>createBuildResponse_uploadCredentials</a> - This element is
--   returned only when the operation is called without a storage location.
--   It contains credentials to use when you are uploading a build file to
--   an Amazon S3 bucket that is owned by Amazon GameLift. Credentials have
--   a limited life span. To refresh these credentials, call
--   RequestUploadCredentials.
--   
--   <a>$sel:httpStatus:CreateBuildResponse'</a>,
--   <a>createBuildResponse_httpStatus</a> - The response's http status
--   code.
newCreateBuildResponse :: Int -> CreateBuildResponse

-- | The newly created build resource, including a unique build IDs and
--   status.
createBuildResponse_build :: Lens' CreateBuildResponse (Maybe Build)

-- | Amazon S3 location for your game build file, including bucket name and
--   key.
createBuildResponse_storageLocation :: Lens' CreateBuildResponse (Maybe S3Location)

-- | This element is returned only when the operation is called without a
--   storage location. It contains credentials to use when you are
--   uploading a build file to an Amazon S3 bucket that is owned by Amazon
--   GameLift. Credentials have a limited life span. To refresh these
--   credentials, call RequestUploadCredentials.
createBuildResponse_uploadCredentials :: Lens' CreateBuildResponse (Maybe AwsCredentials)

-- | The response's http status code.
createBuildResponse_httpStatus :: Lens' CreateBuildResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreateBuild.CreateBuild
instance GHC.Show.Show Network.AWS.GameLift.CreateBuild.CreateBuild
instance GHC.Read.Read Network.AWS.GameLift.CreateBuild.CreateBuild
instance GHC.Classes.Eq Network.AWS.GameLift.CreateBuild.CreateBuild
instance GHC.Generics.Generic Network.AWS.GameLift.CreateBuild.CreateBuildResponse
instance GHC.Show.Show Network.AWS.GameLift.CreateBuild.CreateBuildResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreateBuild.CreateBuildResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreateBuild.CreateBuild
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateBuild.CreateBuildResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreateBuild.CreateBuild
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateBuild.CreateBuild
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreateBuild.CreateBuild
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreateBuild.CreateBuild
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreateBuild.CreateBuild
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreateBuild.CreateBuild


-- | Creates an alias for a fleet. In most situations, you can use an alias
--   ID in place of a fleet ID. An alias provides a level of abstraction
--   for a fleet that is useful when redirecting player traffic from one
--   fleet to another, such as when updating your game build.
--   
--   Amazon GameLift supports two types of routing strategies for aliases:
--   simple and terminal. A simple alias points to an active fleet. A
--   terminal alias is used to display messaging or link to a URL instead
--   of routing players to an active fleet. For example, you might use a
--   terminal alias when a game version is no longer supported and you want
--   to direct players to an upgrade site.
--   
--   To create a fleet alias, specify an alias name, routing strategy, and
--   optional description. Each simple alias can point to only one fleet,
--   but a fleet can have multiple aliases. If successful, a new alias
--   record is returned, including an alias ID and an ARN. You can reassign
--   an alias to another fleet by calling <tt>UpdateAlias</tt>.
--   
--   <b>Related actions</b>
--   
--   CreateAlias | ListAliases | DescribeAlias | UpdateAlias | DeleteAlias
--   | ResolveAlias | <a>All APIs by task</a>
module Network.AWS.GameLift.CreateAlias

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateAlias</a> smart constructor.
data CreateAlias
CreateAlias' :: Maybe [Tag] -> Maybe Text -> Text -> RoutingStrategy -> CreateAlias

-- | A list of labels to assign to the new alias resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
[$sel:tags:CreateAlias'] :: CreateAlias -> Maybe [Tag]

-- | A human-readable description of the alias.
[$sel:description:CreateAlias'] :: CreateAlias -> Maybe Text

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
[$sel:name:CreateAlias'] :: CreateAlias -> Text

-- | The routing configuration, including routing type and fleet target,
--   for the alias.
[$sel:routingStrategy:CreateAlias'] :: CreateAlias -> RoutingStrategy

-- | Create a value of <a>CreateAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateAlias'</a>, <a>createAlias_tags</a> - A list of
--   labels to assign to the new alias resource. Tags are developer-defined
--   key-value pairs. Tagging AWS resources are useful for resource
--   management, access management and cost allocation. For more
--   information, see <a>Tagging AWS Resources</a> in the <i>AWS General
--   Reference</i>. Once the resource is created, you can use TagResource,
--   UntagResource, and ListTagsForResource to add, remove, and view tags.
--   The maximum tag limit may be lower than stated. See the AWS General
--   Reference for actual tagging limits.
--   
--   <a>$sel:description:CreateAlias'</a>, <a>createAlias_description</a> -
--   A human-readable description of the alias.
--   
--   <a>$sel:name:CreateAlias'</a>, <a>createAlias_name</a> - A descriptive
--   label that is associated with an alias. Alias names do not need to be
--   unique.
--   
--   <a>$sel:routingStrategy:CreateAlias'</a>,
--   <a>createAlias_routingStrategy</a> - The routing configuration,
--   including routing type and fleet target, for the alias.
newCreateAlias :: Text -> RoutingStrategy -> CreateAlias

-- | A list of labels to assign to the new alias resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
createAlias_tags :: Lens' CreateAlias (Maybe [Tag])

-- | A human-readable description of the alias.
createAlias_description :: Lens' CreateAlias (Maybe Text)

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
createAlias_name :: Lens' CreateAlias Text

-- | The routing configuration, including routing type and fleet target,
--   for the alias.
createAlias_routingStrategy :: Lens' CreateAlias RoutingStrategy

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateAliasResponse</a> smart constructor.
data CreateAliasResponse
CreateAliasResponse' :: Maybe Alias -> Int -> CreateAliasResponse

-- | The newly created alias resource.
[$sel:alias:CreateAliasResponse'] :: CreateAliasResponse -> Maybe Alias

-- | The response's http status code.
[$sel:httpStatus:CreateAliasResponse'] :: CreateAliasResponse -> Int

-- | Create a value of <a>CreateAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alias:CreateAliasResponse'</a>,
--   <a>createAliasResponse_alias</a> - The newly created alias resource.
--   
--   <a>$sel:httpStatus:CreateAliasResponse'</a>,
--   <a>createAliasResponse_httpStatus</a> - The response's http status
--   code.
newCreateAliasResponse :: Int -> CreateAliasResponse

-- | The newly created alias resource.
createAliasResponse_alias :: Lens' CreateAliasResponse (Maybe Alias)

-- | The response's http status code.
createAliasResponse_httpStatus :: Lens' CreateAliasResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.CreateAlias.CreateAlias
instance GHC.Show.Show Network.AWS.GameLift.CreateAlias.CreateAlias
instance GHC.Read.Read Network.AWS.GameLift.CreateAlias.CreateAlias
instance GHC.Classes.Eq Network.AWS.GameLift.CreateAlias.CreateAlias
instance GHC.Generics.Generic Network.AWS.GameLift.CreateAlias.CreateAliasResponse
instance GHC.Show.Show Network.AWS.GameLift.CreateAlias.CreateAliasResponse
instance GHC.Read.Read Network.AWS.GameLift.CreateAlias.CreateAliasResponse
instance GHC.Classes.Eq Network.AWS.GameLift.CreateAlias.CreateAliasResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.CreateAlias.CreateAlias
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateAlias.CreateAliasResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.CreateAlias.CreateAlias
instance Control.DeepSeq.NFData Network.AWS.GameLift.CreateAlias.CreateAlias
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.CreateAlias.CreateAlias
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.CreateAlias.CreateAlias
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.CreateAlias.CreateAlias
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.CreateAlias.CreateAlias


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Locates an available game server and temporarily reserves it to host
--   gameplay and players. This operation is called from a game client or
--   client service (such as a matchmaker) to request hosting resources for
--   a new game session. In response, GameLift FleetIQ locates an available
--   game server, places it in <tt>CLAIMED</tt> status for 60 seconds, and
--   returns connection information that players can use to connect to the
--   game server.
--   
--   To claim a game server, identify a game server group. You can also
--   specify a game server ID, although this approach bypasses GameLift
--   FleetIQ placement optimization. Optionally, include game data to pass
--   to the game server at the start of a game session, such as a game map
--   or player information.
--   
--   When a game server is successfully claimed, connection information is
--   returned. A claimed game server's utilization status remains
--   <tt>AVAILABLE</tt> while the claim status is set to <tt>CLAIMED</tt>
--   for up to 60 seconds. This time period gives the game server time to
--   update its status to <tt>UTILIZED</tt> (using UpdateGameServer) once
--   players join. If the game server's status is not updated within 60
--   seconds, the game server reverts to unclaimed status and is available
--   to be claimed by another request. The claim time period is a fixed
--   value and is not configurable.
--   
--   If you try to claim a specific game server, this request will fail in
--   the following cases:
--   
--   <ul>
--   <li>If the game server utilization status is <tt>UTILIZED</tt>.</li>
--   <li>If the game server claim status is <tt>CLAIMED</tt>.</li>
--   </ul>
--   
--   When claiming a specific game server, this request will succeed even
--   if the game server is running on an instance in <tt>DRAINING</tt>
--   status. To avoid this, first check the instance status by calling
--   DescribeGameServerInstances.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   RegisterGameServer | ListGameServers | ClaimGameServer |
--   DescribeGameServer | UpdateGameServer | DeregisterGameServer | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.ClaimGameServer

-- | <i>See:</i> <a>newClaimGameServer</a> smart constructor.
data ClaimGameServer
ClaimGameServer' :: Maybe Text -> Maybe Text -> Text -> ClaimGameServer

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
[$sel:gameServerData:ClaimGameServer'] :: ClaimGameServer -> Maybe Text

-- | A custom string that uniquely identifies the game server to claim. If
--   this parameter is left empty, GameLift FleetIQ searches for an
--   available game server in the specified game server group.
[$sel:gameServerId:ClaimGameServer'] :: ClaimGameServer -> Maybe Text

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value. If you are
--   not specifying a game server to claim, this value identifies where you
--   want GameLift FleetIQ to look for an available game server to claim.
[$sel:gameServerGroupName:ClaimGameServer'] :: ClaimGameServer -> Text

-- | Create a value of <a>ClaimGameServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerData:ClaimGameServer'</a>,
--   <a>claimGameServer_gameServerData</a> - A set of custom game server
--   properties, formatted as a single string value. This data is passed to
--   a game client or service when it requests information on game servers
--   using ListGameServers or ClaimGameServer.
--   
--   <a>$sel:gameServerId:ClaimGameServer'</a>,
--   <a>claimGameServer_gameServerId</a> - A custom string that uniquely
--   identifies the game server to claim. If this parameter is left empty,
--   GameLift FleetIQ searches for an available game server in the
--   specified game server group.
--   
--   <a>$sel:gameServerGroupName:ClaimGameServer'</a>,
--   <a>claimGameServer_gameServerGroupName</a> - A unique identifier for
--   the game server group where the game server is running. Use either the
--   GameServerGroup name or ARN value. If you are not specifying a game
--   server to claim, this value identifies where you want GameLift FleetIQ
--   to look for an available game server to claim.
newClaimGameServer :: Text -> ClaimGameServer

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
claimGameServer_gameServerData :: Lens' ClaimGameServer (Maybe Text)

-- | A custom string that uniquely identifies the game server to claim. If
--   this parameter is left empty, GameLift FleetIQ searches for an
--   available game server in the specified game server group.
claimGameServer_gameServerId :: Lens' ClaimGameServer (Maybe Text)

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value. If you are
--   not specifying a game server to claim, this value identifies where you
--   want GameLift FleetIQ to look for an available game server to claim.
claimGameServer_gameServerGroupName :: Lens' ClaimGameServer Text

-- | <i>See:</i> <a>newClaimGameServerResponse</a> smart constructor.
data ClaimGameServerResponse
ClaimGameServerResponse' :: Maybe GameServer -> Int -> ClaimGameServerResponse

-- | Object that describes the newly claimed game server.
[$sel:gameServer:ClaimGameServerResponse'] :: ClaimGameServerResponse -> Maybe GameServer

-- | The response's http status code.
[$sel:httpStatus:ClaimGameServerResponse'] :: ClaimGameServerResponse -> Int

-- | Create a value of <a>ClaimGameServerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServer:ClaimGameServerResponse'</a>,
--   <a>claimGameServerResponse_gameServer</a> - Object that describes the
--   newly claimed game server.
--   
--   <a>$sel:httpStatus:ClaimGameServerResponse'</a>,
--   <a>claimGameServerResponse_httpStatus</a> - The response's http status
--   code.
newClaimGameServerResponse :: Int -> ClaimGameServerResponse

-- | Object that describes the newly claimed game server.
claimGameServerResponse_gameServer :: Lens' ClaimGameServerResponse (Maybe GameServer)

-- | The response's http status code.
claimGameServerResponse_httpStatus :: Lens' ClaimGameServerResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.ClaimGameServer.ClaimGameServer
instance GHC.Show.Show Network.AWS.GameLift.ClaimGameServer.ClaimGameServer
instance GHC.Read.Read Network.AWS.GameLift.ClaimGameServer.ClaimGameServer
instance GHC.Classes.Eq Network.AWS.GameLift.ClaimGameServer.ClaimGameServer
instance GHC.Generics.Generic Network.AWS.GameLift.ClaimGameServer.ClaimGameServerResponse
instance GHC.Show.Show Network.AWS.GameLift.ClaimGameServer.ClaimGameServerResponse
instance GHC.Read.Read Network.AWS.GameLift.ClaimGameServer.ClaimGameServerResponse
instance GHC.Classes.Eq Network.AWS.GameLift.ClaimGameServer.ClaimGameServerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.ClaimGameServer.ClaimGameServer
instance Control.DeepSeq.NFData Network.AWS.GameLift.ClaimGameServer.ClaimGameServerResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.ClaimGameServer.ClaimGameServer
instance Control.DeepSeq.NFData Network.AWS.GameLift.ClaimGameServer.ClaimGameServer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.ClaimGameServer.ClaimGameServer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.ClaimGameServer.ClaimGameServer
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.ClaimGameServer.ClaimGameServer
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.ClaimGameServer.ClaimGameServer


-- | Registers a player's acceptance or rejection of a proposed FlexMatch
--   match. A matchmaking configuration may require player acceptance; if
--   so, then matches built with that configuration cannot be completed
--   unless all players accept the proposed match within a specified time
--   limit.
--   
--   When FlexMatch builds a match, all the matchmaking tickets involved in
--   the proposed match are placed into status
--   <tt>REQUIRES_ACCEPTANCE</tt>. This is a trigger for your game to get
--   acceptance from all players in the ticket. Acceptances are only valid
--   for tickets when they are in this status; all other acceptances result
--   in an error.
--   
--   To register acceptance, specify the ticket ID, a response, and one or
--   more players. Once all players have registered acceptance, the
--   matchmaking tickets advance to status <tt>PLACING</tt>, where a new
--   game session is created for the match.
--   
--   If any player rejects the match, or if acceptances are not received
--   before a specified timeout, the proposed match is dropped. The
--   matchmaking tickets are then handled in one of two ways: For tickets
--   where one or more players rejected the match, the ticket status is
--   returned to <tt>SEARCHING</tt> to find a new match. For tickets where
--   one or more players failed to respond, the ticket status is set to
--   <tt>CANCELLED</tt>, and processing is terminated. A new matchmaking
--   request for these players can be submitted as needed.
--   
--   <b>Learn more</b>
--   
--   <a>Add FlexMatch to a game client</a>
--   
--   <a>FlexMatch events</a> (reference)
--   
--   <b>Related actions</b>
--   
--   StartMatchmaking | DescribeMatchmaking | StopMatchmaking | AcceptMatch
--   | StartMatchBackfill | <a>All APIs by task</a>
module Network.AWS.GameLift.AcceptMatch

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newAcceptMatch</a> smart constructor.
data AcceptMatch
AcceptMatch' :: Text -> [Text] -> AcceptanceType -> AcceptMatch

-- | A unique identifier for a matchmaking ticket. The ticket must be in
--   status <tt>REQUIRES_ACCEPTANCE</tt>; otherwise this request will fail.
[$sel:ticketId:AcceptMatch'] :: AcceptMatch -> Text

-- | A unique identifier for a player delivering the response. This
--   parameter can include one or multiple player IDs.
[$sel:playerIds:AcceptMatch'] :: AcceptMatch -> [Text]

-- | Player response to the proposed match.
[$sel:acceptanceType:AcceptMatch'] :: AcceptMatch -> AcceptanceType

-- | Create a value of <a>AcceptMatch</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ticketId:AcceptMatch'</a>, <a>acceptMatch_ticketId</a> - A
--   unique identifier for a matchmaking ticket. The ticket must be in
--   status <tt>REQUIRES_ACCEPTANCE</tt>; otherwise this request will fail.
--   
--   <a>$sel:playerIds:AcceptMatch'</a>, <a>acceptMatch_playerIds</a> - A
--   unique identifier for a player delivering the response. This parameter
--   can include one or multiple player IDs.
--   
--   <a>$sel:acceptanceType:AcceptMatch'</a>,
--   <a>acceptMatch_acceptanceType</a> - Player response to the proposed
--   match.
newAcceptMatch :: Text -> AcceptanceType -> AcceptMatch

-- | A unique identifier for a matchmaking ticket. The ticket must be in
--   status <tt>REQUIRES_ACCEPTANCE</tt>; otherwise this request will fail.
acceptMatch_ticketId :: Lens' AcceptMatch Text

-- | A unique identifier for a player delivering the response. This
--   parameter can include one or multiple player IDs.
acceptMatch_playerIds :: Lens' AcceptMatch [Text]

-- | Player response to the proposed match.
acceptMatch_acceptanceType :: Lens' AcceptMatch AcceptanceType

-- | <i>See:</i> <a>newAcceptMatchResponse</a> smart constructor.
data AcceptMatchResponse
AcceptMatchResponse' :: Int -> AcceptMatchResponse

-- | The response's http status code.
[$sel:httpStatus:AcceptMatchResponse'] :: AcceptMatchResponse -> Int

-- | Create a value of <a>AcceptMatchResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AcceptMatchResponse'</a>,
--   <a>acceptMatchResponse_httpStatus</a> - The response's http status
--   code.
newAcceptMatchResponse :: Int -> AcceptMatchResponse

-- | The response's http status code.
acceptMatchResponse_httpStatus :: Lens' AcceptMatchResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.AcceptMatch.AcceptMatch
instance GHC.Show.Show Network.AWS.GameLift.AcceptMatch.AcceptMatch
instance GHC.Read.Read Network.AWS.GameLift.AcceptMatch.AcceptMatch
instance GHC.Classes.Eq Network.AWS.GameLift.AcceptMatch.AcceptMatch
instance GHC.Generics.Generic Network.AWS.GameLift.AcceptMatch.AcceptMatchResponse
instance GHC.Show.Show Network.AWS.GameLift.AcceptMatch.AcceptMatchResponse
instance GHC.Read.Read Network.AWS.GameLift.AcceptMatch.AcceptMatchResponse
instance GHC.Classes.Eq Network.AWS.GameLift.AcceptMatch.AcceptMatchResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.AcceptMatch.AcceptMatch
instance Control.DeepSeq.NFData Network.AWS.GameLift.AcceptMatch.AcceptMatchResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.AcceptMatch.AcceptMatch
instance Control.DeepSeq.NFData Network.AWS.GameLift.AcceptMatch.AcceptMatch
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.AcceptMatch.AcceptMatch
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.AcceptMatch.AcceptMatch
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.AcceptMatch.AcceptMatch
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.AcceptMatch.AcceptMatch


-- | Removes a tag that is assigned to a GameLift resource. Resource tags
--   are used to organize AWS resources for a range of purposes. This
--   operation handles the permissions necessary to manage tags for the
--   following GameLift resource types:
--   
--   <ul>
--   <li>Build</li>
--   <li>Script</li>
--   <li>Fleet</li>
--   <li>Alias</li>
--   <li>GameSessionQueue</li>
--   <li>MatchmakingConfiguration</li>
--   <li>MatchmakingRuleSet</li>
--   </ul>
--   
--   To remove a tag from a resource, specify the unique ARN value for the
--   resource and provide a string list containing one or more tags to be
--   removed. This operation succeeds even if the list includes tags that
--   are not currently assigned to the specified resource.
--   
--   <b>Learn more</b>
--   
--   <a>Tagging AWS Resources</a> in the <i>AWS General Reference</i>
--   
--   <a>AWS Tagging Strategies</a>
--   
--   <b>Related actions</b>
--   
--   TagResource | UntagResource | ListTagsForResource | <a>All APIs by
--   task</a>
module Network.AWS.GameLift.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to and uniquely
--   identifies the GameLift resource that you want to remove tags from.
--   GameLift resource ARNs are included in the data object for the
--   resource, which can be retrieved by calling a List or Describe
--   operation for the resource type.
[$sel:resourceARN:UntagResource'] :: UntagResource -> Text

-- | A list of one or more tag keys to remove from the specified GameLift
--   resource. An AWS resource can have only one tag with a specific tag
--   key, so specifying the tag key identifies which tag to remove.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to and uniquely identifies the GameLift
--   resource that you want to remove tags from. GameLift resource ARNs are
--   included in the data object for the resource, which can be retrieved
--   by calling a List or Describe operation for the resource type.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of one or more tag keys to remove from the specified GameLift
--   resource. An AWS resource can have only one tag with a specific tag
--   key, so specifying the tag key identifies which tag to remove.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to and uniquely
--   identifies the GameLift resource that you want to remove tags from.
--   GameLift resource ARNs are included in the data object for the
--   resource, which can be retrieved by calling a List or Describe
--   operation for the resource type.
untagResource_resourceARN :: Lens' UntagResource Text

-- | A list of one or more tag keys to remove from the specified GameLift
--   resource. An AWS resource can have only one tag with a specific tag
--   key, so specifying the tag key identifies which tag to remove.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.GameLift.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.GameLift.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.GameLift.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.GameLift.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.GameLift.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.GameLift.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.GameLift.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.GameLift.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UntagResource.UntagResource


-- | Updates properties for an alias. To update properties, specify the
--   alias ID to be updated and provide the information to be changed. To
--   reassign an alias to another fleet, provide an updated routing
--   strategy. If successful, the updated alias record is returned.
--   
--   <b>Related actions</b>
--   
--   CreateAlias | ListAliases | DescribeAlias | UpdateAlias | DeleteAlias
--   | ResolveAlias | <a>All APIs by task</a>
module Network.AWS.GameLift.UpdateAlias

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateAlias</a> smart constructor.
data UpdateAlias
UpdateAlias' :: Maybe RoutingStrategy -> Maybe Text -> Maybe Text -> Text -> UpdateAlias

-- | The routing configuration, including routing type and fleet target,
--   for the alias.
[$sel:routingStrategy:UpdateAlias'] :: UpdateAlias -> Maybe RoutingStrategy

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
[$sel:name:UpdateAlias'] :: UpdateAlias -> Maybe Text

-- | A human-readable description of the alias.
[$sel:description:UpdateAlias'] :: UpdateAlias -> Maybe Text

-- | A unique identifier for the alias that you want to update. You can use
--   either the alias ID or ARN value.
[$sel:aliasId:UpdateAlias'] :: UpdateAlias -> Text

-- | Create a value of <a>UpdateAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingStrategy:UpdateAlias'</a>,
--   <a>updateAlias_routingStrategy</a> - The routing configuration,
--   including routing type and fleet target, for the alias.
--   
--   <a>$sel:name:UpdateAlias'</a>, <a>updateAlias_name</a> - A descriptive
--   label that is associated with an alias. Alias names do not need to be
--   unique.
--   
--   <a>$sel:description:UpdateAlias'</a>, <a>updateAlias_description</a> -
--   A human-readable description of the alias.
--   
--   <a>$sel:aliasId:UpdateAlias'</a>, <a>updateAlias_aliasId</a> - A
--   unique identifier for the alias that you want to update. You can use
--   either the alias ID or ARN value.
newUpdateAlias :: Text -> UpdateAlias

-- | The routing configuration, including routing type and fleet target,
--   for the alias.
updateAlias_routingStrategy :: Lens' UpdateAlias (Maybe RoutingStrategy)

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
updateAlias_name :: Lens' UpdateAlias (Maybe Text)

-- | A human-readable description of the alias.
updateAlias_description :: Lens' UpdateAlias (Maybe Text)

-- | A unique identifier for the alias that you want to update. You can use
--   either the alias ID or ARN value.
updateAlias_aliasId :: Lens' UpdateAlias Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateAliasResponse</a> smart constructor.
data UpdateAliasResponse
UpdateAliasResponse' :: Maybe Alias -> Int -> UpdateAliasResponse

-- | The updated alias resource.
[$sel:alias:UpdateAliasResponse'] :: UpdateAliasResponse -> Maybe Alias

-- | The response's http status code.
[$sel:httpStatus:UpdateAliasResponse'] :: UpdateAliasResponse -> Int

-- | Create a value of <a>UpdateAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alias:UpdateAliasResponse'</a>,
--   <a>updateAliasResponse_alias</a> - The updated alias resource.
--   
--   <a>$sel:httpStatus:UpdateAliasResponse'</a>,
--   <a>updateAliasResponse_httpStatus</a> - The response's http status
--   code.
newUpdateAliasResponse :: Int -> UpdateAliasResponse

-- | The updated alias resource.
updateAliasResponse_alias :: Lens' UpdateAliasResponse (Maybe Alias)

-- | The response's http status code.
updateAliasResponse_httpStatus :: Lens' UpdateAliasResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateAlias.UpdateAlias
instance GHC.Show.Show Network.AWS.GameLift.UpdateAlias.UpdateAlias
instance GHC.Read.Read Network.AWS.GameLift.UpdateAlias.UpdateAlias
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateAlias.UpdateAlias
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateAlias.UpdateAliasResponse
instance GHC.Show.Show Network.AWS.GameLift.UpdateAlias.UpdateAliasResponse
instance GHC.Read.Read Network.AWS.GameLift.UpdateAlias.UpdateAliasResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateAlias.UpdateAliasResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UpdateAlias.UpdateAlias
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateAlias.UpdateAliasResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UpdateAlias.UpdateAlias
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateAlias.UpdateAlias
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UpdateAlias.UpdateAlias
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UpdateAlias.UpdateAlias
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UpdateAlias.UpdateAlias
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UpdateAlias.UpdateAlias


-- | Updates metadata in a build resource, including the build name and
--   version. To update the metadata, specify the build ID to update and
--   provide the new values. If successful, a build object containing the
--   updated metadata is returned.
--   
--   <b>Learn more</b>
--   
--   <a>Upload a Custom Server Build</a>
--   
--   <b>Related actions</b>
--   
--   CreateBuild | ListBuilds | DescribeBuild | UpdateBuild | DeleteBuild |
--   <a>All APIs by task</a>
module Network.AWS.GameLift.UpdateBuild

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateBuild</a> smart constructor.
data UpdateBuild
UpdateBuild' :: Maybe Text -> Maybe Text -> Text -> UpdateBuild

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique.
[$sel:version:UpdateBuild'] :: UpdateBuild -> Maybe Text

-- | A descriptive label that is associated with a build. Build names do
--   not need to be unique.
[$sel:name:UpdateBuild'] :: UpdateBuild -> Maybe Text

-- | A unique identifier for the build to update. You can use either the
--   build ID or ARN value.
[$sel:buildId:UpdateBuild'] :: UpdateBuild -> Text

-- | Create a value of <a>UpdateBuild</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:version:UpdateBuild'</a>, <a>updateBuild_version</a> - Version
--   information that is associated with a build or script. Version strings
--   do not need to be unique.
--   
--   <a>$sel:name:UpdateBuild'</a>, <a>updateBuild_name</a> - A descriptive
--   label that is associated with a build. Build names do not need to be
--   unique.
--   
--   <a>$sel:buildId:UpdateBuild'</a>, <a>updateBuild_buildId</a> - A
--   unique identifier for the build to update. You can use either the
--   build ID or ARN value.
newUpdateBuild :: Text -> UpdateBuild

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique.
updateBuild_version :: Lens' UpdateBuild (Maybe Text)

-- | A descriptive label that is associated with a build. Build names do
--   not need to be unique.
updateBuild_name :: Lens' UpdateBuild (Maybe Text)

-- | A unique identifier for the build to update. You can use either the
--   build ID or ARN value.
updateBuild_buildId :: Lens' UpdateBuild Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateBuildResponse</a> smart constructor.
data UpdateBuildResponse
UpdateBuildResponse' :: Maybe Build -> Int -> UpdateBuildResponse

-- | The updated build resource.
[$sel:build:UpdateBuildResponse'] :: UpdateBuildResponse -> Maybe Build

-- | The response's http status code.
[$sel:httpStatus:UpdateBuildResponse'] :: UpdateBuildResponse -> Int

-- | Create a value of <a>UpdateBuildResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:build:UpdateBuildResponse'</a>,
--   <a>updateBuildResponse_build</a> - The updated build resource.
--   
--   <a>$sel:httpStatus:UpdateBuildResponse'</a>,
--   <a>updateBuildResponse_httpStatus</a> - The response's http status
--   code.
newUpdateBuildResponse :: Int -> UpdateBuildResponse

-- | The updated build resource.
updateBuildResponse_build :: Lens' UpdateBuildResponse (Maybe Build)

-- | The response's http status code.
updateBuildResponse_httpStatus :: Lens' UpdateBuildResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateBuild.UpdateBuild
instance GHC.Show.Show Network.AWS.GameLift.UpdateBuild.UpdateBuild
instance GHC.Read.Read Network.AWS.GameLift.UpdateBuild.UpdateBuild
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateBuild.UpdateBuild
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateBuild.UpdateBuildResponse
instance GHC.Show.Show Network.AWS.GameLift.UpdateBuild.UpdateBuildResponse
instance GHC.Read.Read Network.AWS.GameLift.UpdateBuild.UpdateBuildResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateBuild.UpdateBuildResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UpdateBuild.UpdateBuild
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateBuild.UpdateBuildResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UpdateBuild.UpdateBuild
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateBuild.UpdateBuild
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UpdateBuild.UpdateBuild
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UpdateBuild.UpdateBuild
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UpdateBuild.UpdateBuild
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UpdateBuild.UpdateBuild


-- | Updates a fleet's mutable attributes, including game session
--   protection and resource creation limits.
--   
--   To update fleet attributes, specify the fleet ID and the property
--   values that you want to change.
--   
--   If successful, an updated <tt>FleetAttributes</tt> object is returned.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleetLocations | UpdateFleetAttributes | UpdateFleetCapacity |
--   UpdateFleetPortSettings | UpdateRuntimeConfiguration |
--   StopFleetActions | StartFleetActions | PutScalingPolicy | DeleteFleet
--   | DeleteFleetLocations | DeleteScalingPolicy | <a>All APIs by task</a>
module Network.AWS.GameLift.UpdateFleetAttributes

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateFleetAttributes</a> smart constructor.
data UpdateFleetAttributes
UpdateFleetAttributes' :: Maybe Text -> Maybe ProtectionPolicy -> Maybe ResourceCreationLimitPolicy -> Maybe Text -> Maybe [Text] -> Text -> UpdateFleetAttributes

-- | A descriptive label that is associated with a fleet. Fleet names do
--   not need to be unique.
[$sel:name:UpdateFleetAttributes'] :: UpdateFleetAttributes -> Maybe Text

-- | The game session protection policy to apply to all new instances
--   created in this fleet. Instances that already exist are not affected.
--   You can set protection for individual instances using
--   UpdateGameSession.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
[$sel:newGameSessionProtectionPolicy':UpdateFleetAttributes'] :: UpdateFleetAttributes -> Maybe ProtectionPolicy

-- | Policy settings that limit the number of game sessions an individual
--   player can create over a span of time.
[$sel:resourceCreationLimitPolicy:UpdateFleetAttributes'] :: UpdateFleetAttributes -> Maybe ResourceCreationLimitPolicy

-- | A human-readable description of a fleet.
[$sel:description:UpdateFleetAttributes'] :: UpdateFleetAttributes -> Maybe Text

-- | The name of a metric group to add this fleet to. Use a metric group in
--   Amazon CloudWatch to aggregate the metrics from multiple fleets.
--   Provide an existing metric group name, or create a new metric group by
--   providing a new name. A fleet can only be in one metric group at a
--   time.
[$sel:metricGroups:UpdateFleetAttributes'] :: UpdateFleetAttributes -> Maybe [Text]

-- | A unique identifier for the fleet to update attribute metadata for.
--   You can use either the fleet ID or ARN value.
[$sel:fleetId:UpdateFleetAttributes'] :: UpdateFleetAttributes -> Text

-- | Create a value of <a>UpdateFleetAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributes_name</a> - A descriptive label that is
--   associated with a fleet. Fleet names do not need to be unique.
--   
--   <a>$sel:newGameSessionProtectionPolicy':UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributes_newGameSessionProtectionPolicy</a> - The game
--   session protection policy to apply to all new instances created in
--   this fleet. Instances that already exist are not affected. You can set
--   protection for individual instances using UpdateGameSession.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
--   
--   <a>$sel:resourceCreationLimitPolicy:UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributes_resourceCreationLimitPolicy</a> - Policy
--   settings that limit the number of game sessions an individual player
--   can create over a span of time.
--   
--   <a>$sel:description:UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributes_description</a> - A human-readable
--   description of a fleet.
--   
--   <a>$sel:metricGroups:UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributes_metricGroups</a> - The name of a metric group
--   to add this fleet to. Use a metric group in Amazon CloudWatch to
--   aggregate the metrics from multiple fleets. Provide an existing metric
--   group name, or create a new metric group by providing a new name. A
--   fleet can only be in one metric group at a time.
--   
--   <a>$sel:fleetId:UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributes_fleetId</a> - A unique identifier for the
--   fleet to update attribute metadata for. You can use either the fleet
--   ID or ARN value.
newUpdateFleetAttributes :: Text -> UpdateFleetAttributes

-- | A descriptive label that is associated with a fleet. Fleet names do
--   not need to be unique.
updateFleetAttributes_name :: Lens' UpdateFleetAttributes (Maybe Text)

-- | The game session protection policy to apply to all new instances
--   created in this fleet. Instances that already exist are not affected.
--   You can set protection for individual instances using
--   UpdateGameSession.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
updateFleetAttributes_newGameSessionProtectionPolicy :: Lens' UpdateFleetAttributes (Maybe ProtectionPolicy)

-- | Policy settings that limit the number of game sessions an individual
--   player can create over a span of time.
updateFleetAttributes_resourceCreationLimitPolicy :: Lens' UpdateFleetAttributes (Maybe ResourceCreationLimitPolicy)

-- | A human-readable description of a fleet.
updateFleetAttributes_description :: Lens' UpdateFleetAttributes (Maybe Text)

-- | The name of a metric group to add this fleet to. Use a metric group in
--   Amazon CloudWatch to aggregate the metrics from multiple fleets.
--   Provide an existing metric group name, or create a new metric group by
--   providing a new name. A fleet can only be in one metric group at a
--   time.
updateFleetAttributes_metricGroups :: Lens' UpdateFleetAttributes (Maybe [Text])

-- | A unique identifier for the fleet to update attribute metadata for.
--   You can use either the fleet ID or ARN value.
updateFleetAttributes_fleetId :: Lens' UpdateFleetAttributes Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateFleetAttributesResponse</a> smart constructor.
data UpdateFleetAttributesResponse
UpdateFleetAttributesResponse' :: Maybe Text -> Int -> UpdateFleetAttributesResponse

-- | A unique identifier for the fleet that was updated.
[$sel:fleetId:UpdateFleetAttributesResponse'] :: UpdateFleetAttributesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateFleetAttributesResponse'] :: UpdateFleetAttributesResponse -> Int

-- | Create a value of <a>UpdateFleetAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributesResponse_fleetId</a> - A unique identifier for
--   the fleet that was updated.
--   
--   <a>$sel:httpStatus:UpdateFleetAttributesResponse'</a>,
--   <a>updateFleetAttributesResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFleetAttributesResponse :: Int -> UpdateFleetAttributesResponse

-- | A unique identifier for the fleet that was updated.
updateFleetAttributesResponse_fleetId :: Lens' UpdateFleetAttributesResponse (Maybe Text)

-- | The response's http status code.
updateFleetAttributesResponse_httpStatus :: Lens' UpdateFleetAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributes
instance GHC.Show.Show Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributes
instance GHC.Read.Read Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributes
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributes
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributesResponse
instance GHC.Show.Show Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributesResponse
instance GHC.Read.Read Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributesResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributes
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributes
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UpdateFleetAttributes.UpdateFleetAttributes


-- | Updates capacity settings for a fleet. For fleets with multiple
--   locations, use this operation to manage capacity settings in each
--   location individually. Fleet capacity determines the number of game
--   sessions and players that can be hosted based on the fleet
--   configuration. Use this operation to set the following fleet capacity
--   properties:
--   
--   <ul>
--   <li>Minimum/maximum size: Set hard limits on fleet capacity. GameLift
--   cannot set the fleet's capacity to a value outside of this range,
--   whether the capacity is changed manually or through automatic
--   scaling.</li>
--   <li>Desired capacity: Manually set the number of EC2 instances to be
--   maintained in a fleet location. Before changing a fleet's desired
--   capacity, you may want to call DescribeEC2InstanceLimits to get the
--   maximum capacity of the fleet's EC2 instance type. Alternatively,
--   consider using automatic scaling to adjust capacity based on player
--   demand.</li>
--   </ul>
--   
--   This operation can be used in the following ways:
--   
--   <ul>
--   <li>To update capacity for a fleet's home Region, or if the fleet has
--   no remote locations, omit the <tt>Location</tt> parameter. The fleet
--   must be in <tt>ACTIVE</tt> status.</li>
--   <li>To update capacity for a fleet's remote location, include the
--   <tt>Location</tt> parameter set to the location to be updated. The
--   location must be in <tt>ACTIVE</tt> status.</li>
--   </ul>
--   
--   If successful, capacity settings are updated immediately. In response
--   a change in desired capacity, GameLift initiates steps to start new
--   instances or terminate existing instances in the requested fleet
--   location. This continues until the location's active instance count
--   matches the new desired instance count. You can track a fleet's
--   current capacity by calling DescribeFleetCapacity or
--   DescribeFleetLocationCapacity. If the requested desired instance count
--   is higher than the instance type's limit, the <tt>LimitExceeded</tt>
--   exception occurs.
--   
--   <b>Learn more</b>
--   
--   <a>Scaling fleet capacity</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleetLocations | UpdateFleetAttributes | UpdateFleetCapacity |
--   UpdateFleetPortSettings | UpdateRuntimeConfiguration |
--   StopFleetActions | StartFleetActions | PutScalingPolicy | DeleteFleet
--   | DeleteFleetLocations | DeleteScalingPolicy | <a>All APIs by task</a>
module Network.AWS.GameLift.UpdateFleetCapacity

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateFleetCapacity</a> smart constructor.
data UpdateFleetCapacity
UpdateFleetCapacity' :: Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Natural -> Text -> UpdateFleetCapacity

-- | The minimum number of instances that are allowed in the specified
--   fleet location. If this parameter is not set, the default is 0.
[$sel:minSize:UpdateFleetCapacity'] :: UpdateFleetCapacity -> Maybe Natural

-- | The maximum number of instances that are allowed in the specified
--   fleet location. If this parameter is not set, the default is 1.
[$sel:maxSize:UpdateFleetCapacity'] :: UpdateFleetCapacity -> Maybe Natural

-- | The name of a remote location to update fleet capacity settings for,
--   in the form of an AWS Region code such as <tt>us-west-2</tt>.
[$sel:location:UpdateFleetCapacity'] :: UpdateFleetCapacity -> Maybe Text

-- | The number of EC2 instances you want to maintain in the specified
--   fleet location. This value must fall between the minimum and maximum
--   size limits.
[$sel:desiredInstances:UpdateFleetCapacity'] :: UpdateFleetCapacity -> Maybe Natural

-- | A unique identifier for the fleet to update capacity settings for. You
--   can use either the fleet ID or ARN value.
[$sel:fleetId:UpdateFleetCapacity'] :: UpdateFleetCapacity -> Text

-- | Create a value of <a>UpdateFleetCapacity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacity_minSize</a> - The minimum number of instances
--   that are allowed in the specified fleet location. If this parameter is
--   not set, the default is 0.
--   
--   <a>$sel:maxSize:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacity_maxSize</a> - The maximum number of instances
--   that are allowed in the specified fleet location. If this parameter is
--   not set, the default is 1.
--   
--   <a>$sel:location:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacity_location</a> - The name of a remote location to
--   update fleet capacity settings for, in the form of an AWS Region code
--   such as <tt>us-west-2</tt>.
--   
--   <a>$sel:desiredInstances:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacity_desiredInstances</a> - The number of EC2
--   instances you want to maintain in the specified fleet location. This
--   value must fall between the minimum and maximum size limits.
--   
--   <a>$sel:fleetId:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacity_fleetId</a> - A unique identifier for the fleet
--   to update capacity settings for. You can use either the fleet ID or
--   ARN value.
newUpdateFleetCapacity :: Text -> UpdateFleetCapacity

-- | The minimum number of instances that are allowed in the specified
--   fleet location. If this parameter is not set, the default is 0.
updateFleetCapacity_minSize :: Lens' UpdateFleetCapacity (Maybe Natural)

-- | The maximum number of instances that are allowed in the specified
--   fleet location. If this parameter is not set, the default is 1.
updateFleetCapacity_maxSize :: Lens' UpdateFleetCapacity (Maybe Natural)

-- | The name of a remote location to update fleet capacity settings for,
--   in the form of an AWS Region code such as <tt>us-west-2</tt>.
updateFleetCapacity_location :: Lens' UpdateFleetCapacity (Maybe Text)

-- | The number of EC2 instances you want to maintain in the specified
--   fleet location. This value must fall between the minimum and maximum
--   size limits.
updateFleetCapacity_desiredInstances :: Lens' UpdateFleetCapacity (Maybe Natural)

-- | A unique identifier for the fleet to update capacity settings for. You
--   can use either the fleet ID or ARN value.
updateFleetCapacity_fleetId :: Lens' UpdateFleetCapacity Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateFleetCapacityResponse</a> smart constructor.
data UpdateFleetCapacityResponse
UpdateFleetCapacityResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateFleetCapacityResponse

-- | A unique identifier for the fleet that was updated.
[$sel:fleetId:UpdateFleetCapacityResponse'] :: UpdateFleetCapacityResponse -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
[$sel:fleetArn:UpdateFleetCapacityResponse'] :: UpdateFleetCapacityResponse -> Maybe Text

-- | The remote location being updated, expressed as an AWS Region code,
--   such as <tt>us-west-2</tt>.
[$sel:location:UpdateFleetCapacityResponse'] :: UpdateFleetCapacityResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateFleetCapacityResponse'] :: UpdateFleetCapacityResponse -> Int

-- | Create a value of <a>UpdateFleetCapacityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacityResponse_fleetId</a> - A unique identifier for
--   the fleet that was updated.
--   
--   <a>$sel:fleetArn:UpdateFleetCapacityResponse'</a>,
--   <a>updateFleetCapacityResponse_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:location:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacityResponse_location</a> - The remote location
--   being updated, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
--   
--   <a>$sel:httpStatus:UpdateFleetCapacityResponse'</a>,
--   <a>updateFleetCapacityResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFleetCapacityResponse :: Int -> UpdateFleetCapacityResponse

-- | A unique identifier for the fleet that was updated.
updateFleetCapacityResponse_fleetId :: Lens' UpdateFleetCapacityResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
updateFleetCapacityResponse_fleetArn :: Lens' UpdateFleetCapacityResponse (Maybe Text)

-- | The remote location being updated, expressed as an AWS Region code,
--   such as <tt>us-west-2</tt>.
updateFleetCapacityResponse_location :: Lens' UpdateFleetCapacityResponse (Maybe Text)

-- | The response's http status code.
updateFleetCapacityResponse_httpStatus :: Lens' UpdateFleetCapacityResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacity
instance GHC.Show.Show Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacity
instance GHC.Read.Read Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacity
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacity
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacityResponse
instance GHC.Show.Show Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacityResponse
instance GHC.Read.Read Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacityResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacity
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacityResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacity
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacity
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacity
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UpdateFleetCapacity.UpdateFleetCapacity


-- | Updates permissions that allow inbound traffic to connect to game
--   sessions that are being hosted on instances in the fleet.
--   
--   To update settings, specify the fleet ID to be updated and specify the
--   changes to be made. List the permissions you want to add in
--   <tt>InboundPermissionAuthorizations</tt>, and permissions you want to
--   remove in <tt>InboundPermissionRevocations</tt>. Permissions to be
--   removed must match existing fleet permissions.
--   
--   If successful, the fleet ID for the updated fleet is returned. For
--   fleets with remote locations, port setting updates can take time to
--   propagate across all locations. You can check the status of updates in
--   each location by calling <tt>DescribeFleetPortSettings</tt> with a
--   location name.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleetLocations | UpdateFleetAttributes | UpdateFleetCapacity |
--   UpdateFleetPortSettings | UpdateRuntimeConfiguration |
--   StopFleetActions | StartFleetActions | PutScalingPolicy | DeleteFleet
--   | DeleteFleetLocations | DeleteScalingPolicy | <a>All APIs by task</a>
module Network.AWS.GameLift.UpdateFleetPortSettings

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateFleetPortSettings</a> smart constructor.
data UpdateFleetPortSettings
UpdateFleetPortSettings' :: Maybe [IpPermission] -> Maybe [IpPermission] -> Text -> UpdateFleetPortSettings

-- | A collection of port settings to be added to the fleet resource.
[$sel:inboundPermissionAuthorizations:UpdateFleetPortSettings'] :: UpdateFleetPortSettings -> Maybe [IpPermission]

-- | A collection of port settings to be removed from the fleet resource.
[$sel:inboundPermissionRevocations:UpdateFleetPortSettings'] :: UpdateFleetPortSettings -> Maybe [IpPermission]

-- | A unique identifier for the fleet to update port settings for. You can
--   use either the fleet ID or ARN value.
[$sel:fleetId:UpdateFleetPortSettings'] :: UpdateFleetPortSettings -> Text

-- | Create a value of <a>UpdateFleetPortSettings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inboundPermissionAuthorizations:UpdateFleetPortSettings'</a>,
--   <a>updateFleetPortSettings_inboundPermissionAuthorizations</a> - A
--   collection of port settings to be added to the fleet resource.
--   
--   <a>$sel:inboundPermissionRevocations:UpdateFleetPortSettings'</a>,
--   <a>updateFleetPortSettings_inboundPermissionRevocations</a> - A
--   collection of port settings to be removed from the fleet resource.
--   
--   <a>$sel:fleetId:UpdateFleetPortSettings'</a>,
--   <a>updateFleetPortSettings_fleetId</a> - A unique identifier for the
--   fleet to update port settings for. You can use either the fleet ID or
--   ARN value.
newUpdateFleetPortSettings :: Text -> UpdateFleetPortSettings

-- | A collection of port settings to be added to the fleet resource.
updateFleetPortSettings_inboundPermissionAuthorizations :: Lens' UpdateFleetPortSettings (Maybe [IpPermission])

-- | A collection of port settings to be removed from the fleet resource.
updateFleetPortSettings_inboundPermissionRevocations :: Lens' UpdateFleetPortSettings (Maybe [IpPermission])

-- | A unique identifier for the fleet to update port settings for. You can
--   use either the fleet ID or ARN value.
updateFleetPortSettings_fleetId :: Lens' UpdateFleetPortSettings Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateFleetPortSettingsResponse</a> smart
--   constructor.
data UpdateFleetPortSettingsResponse
UpdateFleetPortSettingsResponse' :: Maybe Text -> Int -> UpdateFleetPortSettingsResponse

-- | A unique identifier for the fleet that was updated.
[$sel:fleetId:UpdateFleetPortSettingsResponse'] :: UpdateFleetPortSettingsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateFleetPortSettingsResponse'] :: UpdateFleetPortSettingsResponse -> Int

-- | Create a value of <a>UpdateFleetPortSettingsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:UpdateFleetPortSettings'</a>,
--   <a>updateFleetPortSettingsResponse_fleetId</a> - A unique identifier
--   for the fleet that was updated.
--   
--   <a>$sel:httpStatus:UpdateFleetPortSettingsResponse'</a>,
--   <a>updateFleetPortSettingsResponse_httpStatus</a> - The response's
--   http status code.
newUpdateFleetPortSettingsResponse :: Int -> UpdateFleetPortSettingsResponse

-- | A unique identifier for the fleet that was updated.
updateFleetPortSettingsResponse_fleetId :: Lens' UpdateFleetPortSettingsResponse (Maybe Text)

-- | The response's http status code.
updateFleetPortSettingsResponse_httpStatus :: Lens' UpdateFleetPortSettingsResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettings
instance GHC.Show.Show Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettings
instance GHC.Read.Read Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettings
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettings
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettingsResponse
instance GHC.Show.Show Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettingsResponse
instance GHC.Read.Read Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettingsResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettings
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettings
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettings
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettings
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UpdateFleetPortSettings.UpdateFleetPortSettings


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Updates information about a registered game server to help GameLift
--   FleetIQ to track game server availability. This operation is called by
--   a game server process that is running on an instance in a game server
--   group.
--   
--   Use this operation to update the following types of game server
--   information. You can make all three types of updates in the same
--   request:
--   
--   <ul>
--   <li>To update the game server's utilization status, identify the game
--   server and game server group and specify the current utilization
--   status. Use this status to identify when game servers are currently
--   hosting games and when they are available to be claimed.</li>
--   <li>To report health status, identify the game server and game server
--   group and set health check to <tt>HEALTHY</tt>. If a game server does
--   not report health status for a certain length of time, the game server
--   is no longer considered healthy. As a result, it will be eventually
--   deregistered from the game server group to avoid affecting utilization
--   metrics. The best practice is to report health every 60 seconds.</li>
--   <li>To change game server metadata, provide updated game server
--   data.</li>
--   </ul>
--   
--   Once a game server is successfully updated, the relevant statuses and
--   timestamps are updated.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   RegisterGameServer | ListGameServers | ClaimGameServer |
--   DescribeGameServer | UpdateGameServer | DeregisterGameServer | <a>All
--   APIs by task</a>
module Network.AWS.GameLift.UpdateGameServer

-- | <i>See:</i> <a>newUpdateGameServer</a> smart constructor.
data UpdateGameServer
UpdateGameServer' :: Maybe GameServerUtilizationStatus -> Maybe Text -> Maybe GameServerHealthCheck -> Text -> Text -> UpdateGameServer

-- | Indicates whether the game server is available or is currently hosting
--   gameplay.
[$sel:utilizationStatus:UpdateGameServer'] :: UpdateGameServer -> Maybe GameServerUtilizationStatus

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
[$sel:gameServerData:UpdateGameServer'] :: UpdateGameServer -> Maybe Text

-- | Indicates health status of the game server. A request that includes
--   this parameter updates the game server's <i>LastHealthCheckTime</i>
--   timestamp.
[$sel:healthCheck:UpdateGameServer'] :: UpdateGameServer -> Maybe GameServerHealthCheck

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
[$sel:gameServerGroupName:UpdateGameServer'] :: UpdateGameServer -> Text

-- | A custom string that uniquely identifies the game server to update.
[$sel:gameServerId:UpdateGameServer'] :: UpdateGameServer -> Text

-- | Create a value of <a>UpdateGameServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:utilizationStatus:UpdateGameServer'</a>,
--   <a>updateGameServer_utilizationStatus</a> - Indicates whether the game
--   server is available or is currently hosting gameplay.
--   
--   <a>$sel:gameServerData:UpdateGameServer'</a>,
--   <a>updateGameServer_gameServerData</a> - A set of custom game server
--   properties, formatted as a single string value. This data is passed to
--   a game client or service when it requests information on game servers
--   using ListGameServers or ClaimGameServer.
--   
--   <a>$sel:healthCheck:UpdateGameServer'</a>,
--   <a>updateGameServer_healthCheck</a> - Indicates health status of the
--   game server. A request that includes this parameter updates the game
--   server's <i>LastHealthCheckTime</i> timestamp.
--   
--   <a>$sel:gameServerGroupName:UpdateGameServer'</a>,
--   <a>updateGameServer_gameServerGroupName</a> - A unique identifier for
--   the game server group where the game server is running. Use either the
--   GameServerGroup name or ARN value.
--   
--   <a>$sel:gameServerId:UpdateGameServer'</a>,
--   <a>updateGameServer_gameServerId</a> - A custom string that uniquely
--   identifies the game server to update.
newUpdateGameServer :: Text -> Text -> UpdateGameServer

-- | Indicates whether the game server is available or is currently hosting
--   gameplay.
updateGameServer_utilizationStatus :: Lens' UpdateGameServer (Maybe GameServerUtilizationStatus)

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
updateGameServer_gameServerData :: Lens' UpdateGameServer (Maybe Text)

-- | Indicates health status of the game server. A request that includes
--   this parameter updates the game server's <i>LastHealthCheckTime</i>
--   timestamp.
updateGameServer_healthCheck :: Lens' UpdateGameServer (Maybe GameServerHealthCheck)

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
updateGameServer_gameServerGroupName :: Lens' UpdateGameServer Text

-- | A custom string that uniquely identifies the game server to update.
updateGameServer_gameServerId :: Lens' UpdateGameServer Text

-- | <i>See:</i> <a>newUpdateGameServerResponse</a> smart constructor.
data UpdateGameServerResponse
UpdateGameServerResponse' :: Maybe GameServer -> Int -> UpdateGameServerResponse

-- | Object that describes the newly updated game server.
[$sel:gameServer:UpdateGameServerResponse'] :: UpdateGameServerResponse -> Maybe GameServer

-- | The response's http status code.
[$sel:httpStatus:UpdateGameServerResponse'] :: UpdateGameServerResponse -> Int

-- | Create a value of <a>UpdateGameServerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServer:UpdateGameServerResponse'</a>,
--   <a>updateGameServerResponse_gameServer</a> - Object that describes the
--   newly updated game server.
--   
--   <a>$sel:httpStatus:UpdateGameServerResponse'</a>,
--   <a>updateGameServerResponse_httpStatus</a> - The response's http
--   status code.
newUpdateGameServerResponse :: Int -> UpdateGameServerResponse

-- | Object that describes the newly updated game server.
updateGameServerResponse_gameServer :: Lens' UpdateGameServerResponse (Maybe GameServer)

-- | The response's http status code.
updateGameServerResponse_httpStatus :: Lens' UpdateGameServerResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateGameServer.UpdateGameServer
instance GHC.Show.Show Network.AWS.GameLift.UpdateGameServer.UpdateGameServer
instance GHC.Read.Read Network.AWS.GameLift.UpdateGameServer.UpdateGameServer
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateGameServer.UpdateGameServer
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateGameServer.UpdateGameServerResponse
instance GHC.Show.Show Network.AWS.GameLift.UpdateGameServer.UpdateGameServerResponse
instance GHC.Read.Read Network.AWS.GameLift.UpdateGameServer.UpdateGameServerResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateGameServer.UpdateGameServerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UpdateGameServer.UpdateGameServer
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateGameServer.UpdateGameServerResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UpdateGameServer.UpdateGameServer
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateGameServer.UpdateGameServer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UpdateGameServer.UpdateGameServer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UpdateGameServer.UpdateGameServer
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UpdateGameServer.UpdateGameServer
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UpdateGameServer.UpdateGameServer


-- | __This operation is used with the GameLift FleetIQ solution and game
--   server groups.__
--   
--   Updates GameLift FleetIQ-specific properties for a game server group.
--   Many Auto Scaling group properties are updated on the Auto Scaling
--   group directly, including the launch template, Auto Scaling policies,
--   and maximum/minimum/desired instance counts.
--   
--   To update the game server group, specify the game server group ID and
--   provide the updated values. Before applying the updates, the new
--   values are validated to ensure that GameLift FleetIQ can continue to
--   perform instance balancing activity. If successful, a GameServerGroup
--   object is returned.
--   
--   <b>Learn more</b>
--   
--   <a>GameLift FleetIQ Guide</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
module Network.AWS.GameLift.UpdateGameServerGroup

-- | <i>See:</i> <a>newUpdateGameServerGroup</a> smart constructor.
data UpdateGameServerGroup
UpdateGameServerGroup' :: Maybe Text -> Maybe (NonEmpty InstanceDefinition) -> Maybe BalancingStrategy -> Maybe GameServerProtectionPolicy -> Text -> UpdateGameServerGroup

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
[$sel:roleArn:UpdateGameServerGroup'] :: UpdateGameServerGroup -> Maybe Text

-- | An updated list of EC2 instance types to use in the Auto Scaling
--   group. The instance definitions must specify at least two different
--   instance types that are supported by GameLift FleetIQ. This updated
--   list replaces the entire current list of instance definitions for the
--   game server group. For more information on instance types, see <a>EC2
--   Instance Types</a> in the <i>Amazon EC2 User Guide</i>. You can
--   optionally specify capacity weighting for each instance type. If no
--   weight value is specified for an instance type, it is set to the
--   default value "1". For more information about capacity weighting, see
--   <a>Instance Weighting for Amazon EC2 Auto Scaling</a> in the Amazon
--   EC2 Auto Scaling User Guide.
[$sel:instanceDefinitions:UpdateGameServerGroup'] :: UpdateGameServerGroup -> Maybe (NonEmpty InstanceDefinition)

-- | Indicates how GameLift FleetIQ balances the use of Spot Instances and
--   On-Demand Instances in the game server group. Method options include
--   the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
[$sel:balancingStrategy:UpdateGameServerGroup'] :: UpdateGameServerGroup -> Maybe BalancingStrategy

-- | A flag that indicates whether instances in the game server group are
--   protected from early termination. Unprotected instances that have
--   active game servers running might be terminated during a scale-down
--   event, causing players to be dropped from the game. Protected
--   instances cannot be terminated while there are active game servers
--   running except in the event of a forced game server group deletion
--   (see ). An exception to this is with Spot Instances, which can be
--   terminated by AWS regardless of protection status. This property is
--   set to <tt>NO_PROTECTION</tt> by default.
[$sel:gameServerProtectionPolicy:UpdateGameServerGroup'] :: UpdateGameServerGroup -> Maybe GameServerProtectionPolicy

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
[$sel:gameServerGroupName:UpdateGameServerGroup'] :: UpdateGameServerGroup -> Text

-- | Create a value of <a>UpdateGameServerGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:UpdateGameServerGroup'</a>,
--   <a>updateGameServerGroup_roleArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) for an IAM role that allows Amazon GameLift to access
--   your EC2 Auto Scaling groups.
--   
--   <a>$sel:instanceDefinitions:UpdateGameServerGroup'</a>,
--   <a>updateGameServerGroup_instanceDefinitions</a> - An updated list of
--   EC2 instance types to use in the Auto Scaling group. The instance
--   definitions must specify at least two different instance types that
--   are supported by GameLift FleetIQ. This updated list replaces the
--   entire current list of instance definitions for the game server group.
--   For more information on instance types, see <a>EC2 Instance Types</a>
--   in the <i>Amazon EC2 User Guide</i>. You can optionally specify
--   capacity weighting for each instance type. If no weight value is
--   specified for an instance type, it is set to the default value "1".
--   For more information about capacity weighting, see <a>Instance
--   Weighting for Amazon EC2 Auto Scaling</a> in the Amazon EC2 Auto
--   Scaling User Guide.
--   
--   <a>$sel:balancingStrategy:UpdateGameServerGroup'</a>,
--   <a>updateGameServerGroup_balancingStrategy</a> - Indicates how
--   GameLift FleetIQ balances the use of Spot Instances and On-Demand
--   Instances in the game server group. Method options include the
--   following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
--   
--   <a>$sel:gameServerProtectionPolicy:UpdateGameServerGroup'</a>,
--   <a>updateGameServerGroup_gameServerProtectionPolicy</a> - A flag that
--   indicates whether instances in the game server group are protected
--   from early termination. Unprotected instances that have active game
--   servers running might be terminated during a scale-down event, causing
--   players to be dropped from the game. Protected instances cannot be
--   terminated while there are active game servers running except in the
--   event of a forced game server group deletion (see ). An exception to
--   this is with Spot Instances, which can be terminated by AWS regardless
--   of protection status. This property is set to <tt>NO_PROTECTION</tt>
--   by default.
--   
--   <a>$sel:gameServerGroupName:UpdateGameServerGroup'</a>,
--   <a>updateGameServerGroup_gameServerGroupName</a> - A unique identifier
--   for the game server group. Use either the GameServerGroup name or ARN
--   value.
newUpdateGameServerGroup :: Text -> UpdateGameServerGroup

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
updateGameServerGroup_roleArn :: Lens' UpdateGameServerGroup (Maybe Text)

-- | An updated list of EC2 instance types to use in the Auto Scaling
--   group. The instance definitions must specify at least two different
--   instance types that are supported by GameLift FleetIQ. This updated
--   list replaces the entire current list of instance definitions for the
--   game server group. For more information on instance types, see <a>EC2
--   Instance Types</a> in the <i>Amazon EC2 User Guide</i>. You can
--   optionally specify capacity weighting for each instance type. If no
--   weight value is specified for an instance type, it is set to the
--   default value "1". For more information about capacity weighting, see
--   <a>Instance Weighting for Amazon EC2 Auto Scaling</a> in the Amazon
--   EC2 Auto Scaling User Guide.
updateGameServerGroup_instanceDefinitions :: Lens' UpdateGameServerGroup (Maybe (NonEmpty InstanceDefinition))

-- | Indicates how GameLift FleetIQ balances the use of Spot Instances and
--   On-Demand Instances in the game server group. Method options include
--   the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
updateGameServerGroup_balancingStrategy :: Lens' UpdateGameServerGroup (Maybe BalancingStrategy)

-- | A flag that indicates whether instances in the game server group are
--   protected from early termination. Unprotected instances that have
--   active game servers running might be terminated during a scale-down
--   event, causing players to be dropped from the game. Protected
--   instances cannot be terminated while there are active game servers
--   running except in the event of a forced game server group deletion
--   (see ). An exception to this is with Spot Instances, which can be
--   terminated by AWS regardless of protection status. This property is
--   set to <tt>NO_PROTECTION</tt> by default.
updateGameServerGroup_gameServerProtectionPolicy :: Lens' UpdateGameServerGroup (Maybe GameServerProtectionPolicy)

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
updateGameServerGroup_gameServerGroupName :: Lens' UpdateGameServerGroup Text

-- | <i>See:</i> <a>newUpdateGameServerGroupResponse</a> smart constructor.
data UpdateGameServerGroupResponse
UpdateGameServerGroupResponse' :: Maybe GameServerGroup -> Int -> UpdateGameServerGroupResponse

-- | An object that describes the game server group resource with updated
--   properties.
[$sel:gameServerGroup:UpdateGameServerGroupResponse'] :: UpdateGameServerGroupResponse -> Maybe GameServerGroup

-- | The response's http status code.
[$sel:httpStatus:UpdateGameServerGroupResponse'] :: UpdateGameServerGroupResponse -> Int

-- | Create a value of <a>UpdateGameServerGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroup:UpdateGameServerGroupResponse'</a>,
--   <a>updateGameServerGroupResponse_gameServerGroup</a> - An object that
--   describes the game server group resource with updated properties.
--   
--   <a>$sel:httpStatus:UpdateGameServerGroupResponse'</a>,
--   <a>updateGameServerGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateGameServerGroupResponse :: Int -> UpdateGameServerGroupResponse

-- | An object that describes the game server group resource with updated
--   properties.
updateGameServerGroupResponse_gameServerGroup :: Lens' UpdateGameServerGroupResponse (Maybe GameServerGroup)

-- | The response's http status code.
updateGameServerGroupResponse_httpStatus :: Lens' UpdateGameServerGroupResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroup
instance GHC.Show.Show Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroup
instance GHC.Read.Read Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroup
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroup
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroupResponse
instance GHC.Show.Show Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroupResponse
instance GHC.Read.Read Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroupResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroup
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UpdateGameServerGroup.UpdateGameServerGroup


-- | Updates the mutable properties of a game session.
--   
--   To update a game session, specify the game session ID and the values
--   you want to change.
--   
--   If successful, the updated <tt>GameSession</tt> object is returned.
--   
--   <b>Related actions</b>
--   
--   CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails
--   | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
module Network.AWS.GameLift.UpdateGameSession

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateGameSession</a> smart constructor.
data UpdateGameSession
UpdateGameSession' :: Maybe PlayerSessionCreationPolicy -> Maybe Natural -> Maybe Text -> Maybe ProtectionPolicy -> Text -> UpdateGameSession

-- | A policy that determines whether the game session is accepting new
--   players.
[$sel:playerSessionCreationPolicy:UpdateGameSession'] :: UpdateGameSession -> Maybe PlayerSessionCreationPolicy

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
[$sel:maximumPlayerSessionCount:UpdateGameSession'] :: UpdateGameSession -> Maybe Natural

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
[$sel:name:UpdateGameSession'] :: UpdateGameSession -> Maybe Text

-- | Game session protection policy to apply to this game session only.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
[$sel:protectionPolicy:UpdateGameSession'] :: UpdateGameSession -> Maybe ProtectionPolicy

-- | A unique identifier for the game session to update.
[$sel:gameSessionId:UpdateGameSession'] :: UpdateGameSession -> Text

-- | Create a value of <a>UpdateGameSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerSessionCreationPolicy:UpdateGameSession'</a>,
--   <a>updateGameSession_playerSessionCreationPolicy</a> - A policy that
--   determines whether the game session is accepting new players.
--   
--   <a>$sel:maximumPlayerSessionCount:UpdateGameSession'</a>,
--   <a>updateGameSession_maximumPlayerSessionCount</a> - The maximum
--   number of players that can be connected simultaneously to the game
--   session.
--   
--   <a>$sel:name:UpdateGameSession'</a>, <a>updateGameSession_name</a> - A
--   descriptive label that is associated with a game session. Session
--   names do not need to be unique.
--   
--   <a>$sel:protectionPolicy:UpdateGameSession'</a>,
--   <a>updateGameSession_protectionPolicy</a> - Game session protection
--   policy to apply to this game session only.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
--   
--   <a>$sel:gameSessionId:UpdateGameSession'</a>,
--   <a>updateGameSession_gameSessionId</a> - A unique identifier for the
--   game session to update.
newUpdateGameSession :: Text -> UpdateGameSession

-- | A policy that determines whether the game session is accepting new
--   players.
updateGameSession_playerSessionCreationPolicy :: Lens' UpdateGameSession (Maybe PlayerSessionCreationPolicy)

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
updateGameSession_maximumPlayerSessionCount :: Lens' UpdateGameSession (Maybe Natural)

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
updateGameSession_name :: Lens' UpdateGameSession (Maybe Text)

-- | Game session protection policy to apply to this game session only.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
updateGameSession_protectionPolicy :: Lens' UpdateGameSession (Maybe ProtectionPolicy)

-- | A unique identifier for the game session to update.
updateGameSession_gameSessionId :: Lens' UpdateGameSession Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateGameSessionResponse</a> smart constructor.
data UpdateGameSessionResponse
UpdateGameSessionResponse' :: Maybe GameSession -> Int -> UpdateGameSessionResponse

-- | The updated game session properties.
[$sel:gameSession:UpdateGameSessionResponse'] :: UpdateGameSessionResponse -> Maybe GameSession

-- | The response's http status code.
[$sel:httpStatus:UpdateGameSessionResponse'] :: UpdateGameSessionResponse -> Int

-- | Create a value of <a>UpdateGameSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSession:UpdateGameSessionResponse'</a>,
--   <a>updateGameSessionResponse_gameSession</a> - The updated game
--   session properties.
--   
--   <a>$sel:httpStatus:UpdateGameSessionResponse'</a>,
--   <a>updateGameSessionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateGameSessionResponse :: Int -> UpdateGameSessionResponse

-- | The updated game session properties.
updateGameSessionResponse_gameSession :: Lens' UpdateGameSessionResponse (Maybe GameSession)

-- | The response's http status code.
updateGameSessionResponse_httpStatus :: Lens' UpdateGameSessionResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateGameSession.UpdateGameSession
instance GHC.Show.Show Network.AWS.GameLift.UpdateGameSession.UpdateGameSession
instance GHC.Read.Read Network.AWS.GameLift.UpdateGameSession.UpdateGameSession
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateGameSession.UpdateGameSession
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateGameSession.UpdateGameSessionResponse
instance GHC.Show.Show Network.AWS.GameLift.UpdateGameSession.UpdateGameSessionResponse
instance GHC.Read.Read Network.AWS.GameLift.UpdateGameSession.UpdateGameSessionResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateGameSession.UpdateGameSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UpdateGameSession.UpdateGameSession
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateGameSession.UpdateGameSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UpdateGameSession.UpdateGameSession
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateGameSession.UpdateGameSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UpdateGameSession.UpdateGameSession
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UpdateGameSession.UpdateGameSession
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UpdateGameSession.UpdateGameSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UpdateGameSession.UpdateGameSession


-- | Updates the configuration of a game session queue, which determines
--   how the queue processes new game session requests. To update settings,
--   specify the queue name to be updated and provide the new settings.
--   When updating destinations, provide a complete list of destinations.
--   
--   <b>Learn more</b>
--   
--   <a>Using Multi-Region Queues</a>
--   
--   <b>Related actions</b>
--   
--   CreateGameSessionQueue | DescribeGameSessionQueues |
--   UpdateGameSessionQueue | DeleteGameSessionQueue | <a>All APIs by
--   task</a>
module Network.AWS.GameLift.UpdateGameSessionQueue

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateGameSessionQueue</a> smart constructor.
data UpdateGameSessionQueue
UpdateGameSessionQueue' :: Maybe Text -> Maybe [PlayerLatencyPolicy] -> Maybe PriorityConfiguration -> Maybe [GameSessionQueueDestination] -> Maybe Natural -> Maybe Text -> Maybe FilterConfiguration -> Text -> UpdateGameSessionQueue

-- | Information to be added to all events that are related to this game
--   session queue.
[$sel:customEventData:UpdateGameSessionQueue'] :: UpdateGameSessionQueue -> Maybe Text

-- | A set of policies that act as a sliding cap on player latency. FleetIQ
--   works to deliver low latency for most players in a game session. These
--   policies ensure that no individual player can be placed into a game
--   with unreasonably high latency. Use multiple policies to gradually
--   relax latency requirements a step at a time. Multiple policies are
--   applied based on their maximum allowed latency, starting with the
--   lowest value. When updating policies, provide a complete collection of
--   policies.
[$sel:playerLatencyPolicies:UpdateGameSessionQueue'] :: UpdateGameSessionQueue -> Maybe [PlayerLatencyPolicy]

-- | Custom settings to use when prioritizing destinations and locations
--   for game session placements. This configuration replaces the FleetIQ
--   default prioritization process. Priority types that are not explicitly
--   named will be automatically applied at the end of the prioritization
--   process. To remove an existing priority configuration, pass in an
--   empty set.
[$sel:priorityConfiguration:UpdateGameSessionQueue'] :: UpdateGameSessionQueue -> Maybe PriorityConfiguration

-- | A list of fleets and/or fleet aliases that can be used to fulfill game
--   session placement requests in the queue. Destinations are identified
--   by either a fleet ARN or a fleet alias ARN, and are listed in order of
--   placement preference. When updating this list, provide a complete list
--   of destinations.
[$sel:destinations:UpdateGameSessionQueue'] :: UpdateGameSessionQueue -> Maybe [GameSessionQueueDestination]

-- | The maximum time, in seconds, that a new game session placement
--   request remains in the queue. When a request exceeds this time, the
--   game session placement changes to a <tt>TIMED_OUT</tt> status.
[$sel:timeoutInSeconds:UpdateGameSessionQueue'] :: UpdateGameSessionQueue -> Maybe Natural

-- | An SNS topic ARN that is set up to receive game session placement
--   notifications. See <a>Setting up notifications for game session
--   placement</a>.
[$sel:notificationTarget:UpdateGameSessionQueue'] :: UpdateGameSessionQueue -> Maybe Text

-- | A list of locations where a queue is allowed to place new game
--   sessions. Locations are specified in the form of AWS Region codes,
--   such as <tt>us-west-2</tt>. If this parameter is not set, game
--   sessions can be placed in any queue location. To remove an existing
--   filter configuration, pass in an empty set.
[$sel:filterConfiguration:UpdateGameSessionQueue'] :: UpdateGameSessionQueue -> Maybe FilterConfiguration

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region. You can use either the queue
--   ID or ARN value.
[$sel:name:UpdateGameSessionQueue'] :: UpdateGameSessionQueue -> Text

-- | Create a value of <a>UpdateGameSessionQueue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customEventData:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_customEventData</a> - Information to be
--   added to all events that are related to this game session queue.
--   
--   <a>$sel:playerLatencyPolicies:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_playerLatencyPolicies</a> - A set of
--   policies that act as a sliding cap on player latency. FleetIQ works to
--   deliver low latency for most players in a game session. These policies
--   ensure that no individual player can be placed into a game with
--   unreasonably high latency. Use multiple policies to gradually relax
--   latency requirements a step at a time. Multiple policies are applied
--   based on their maximum allowed latency, starting with the lowest
--   value. When updating policies, provide a complete collection of
--   policies.
--   
--   <a>$sel:priorityConfiguration:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_priorityConfiguration</a> - Custom settings
--   to use when prioritizing destinations and locations for game session
--   placements. This configuration replaces the FleetIQ default
--   prioritization process. Priority types that are not explicitly named
--   will be automatically applied at the end of the prioritization
--   process. To remove an existing priority configuration, pass in an
--   empty set.
--   
--   <a>$sel:destinations:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_destinations</a> - A list of fleets and/or
--   fleet aliases that can be used to fulfill game session placement
--   requests in the queue. Destinations are identified by either a fleet
--   ARN or a fleet alias ARN, and are listed in order of placement
--   preference. When updating this list, provide a complete list of
--   destinations.
--   
--   <a>$sel:timeoutInSeconds:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_timeoutInSeconds</a> - The maximum time, in
--   seconds, that a new game session placement request remains in the
--   queue. When a request exceeds this time, the game session placement
--   changes to a <tt>TIMED_OUT</tt> status.
--   
--   <a>$sel:notificationTarget:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_notificationTarget</a> - An SNS topic ARN
--   that is set up to receive game session placement notifications. See
--   <a>Setting up notifications for game session placement</a>.
--   
--   <a>$sel:filterConfiguration:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_filterConfiguration</a> - A list of
--   locations where a queue is allowed to place new game sessions.
--   Locations are specified in the form of AWS Region codes, such as
--   <tt>us-west-2</tt>. If this parameter is not set, game sessions can be
--   placed in any queue location. To remove an existing filter
--   configuration, pass in an empty set.
--   
--   <a>$sel:name:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_name</a> - A descriptive label that is
--   associated with game session queue. Queue names must be unique within
--   each Region. You can use either the queue ID or ARN value.
newUpdateGameSessionQueue :: Text -> UpdateGameSessionQueue

-- | Information to be added to all events that are related to this game
--   session queue.
updateGameSessionQueue_customEventData :: Lens' UpdateGameSessionQueue (Maybe Text)

-- | A set of policies that act as a sliding cap on player latency. FleetIQ
--   works to deliver low latency for most players in a game session. These
--   policies ensure that no individual player can be placed into a game
--   with unreasonably high latency. Use multiple policies to gradually
--   relax latency requirements a step at a time. Multiple policies are
--   applied based on their maximum allowed latency, starting with the
--   lowest value. When updating policies, provide a complete collection of
--   policies.
updateGameSessionQueue_playerLatencyPolicies :: Lens' UpdateGameSessionQueue (Maybe [PlayerLatencyPolicy])

-- | Custom settings to use when prioritizing destinations and locations
--   for game session placements. This configuration replaces the FleetIQ
--   default prioritization process. Priority types that are not explicitly
--   named will be automatically applied at the end of the prioritization
--   process. To remove an existing priority configuration, pass in an
--   empty set.
updateGameSessionQueue_priorityConfiguration :: Lens' UpdateGameSessionQueue (Maybe PriorityConfiguration)

-- | A list of fleets and/or fleet aliases that can be used to fulfill game
--   session placement requests in the queue. Destinations are identified
--   by either a fleet ARN or a fleet alias ARN, and are listed in order of
--   placement preference. When updating this list, provide a complete list
--   of destinations.
updateGameSessionQueue_destinations :: Lens' UpdateGameSessionQueue (Maybe [GameSessionQueueDestination])

-- | The maximum time, in seconds, that a new game session placement
--   request remains in the queue. When a request exceeds this time, the
--   game session placement changes to a <tt>TIMED_OUT</tt> status.
updateGameSessionQueue_timeoutInSeconds :: Lens' UpdateGameSessionQueue (Maybe Natural)

-- | An SNS topic ARN that is set up to receive game session placement
--   notifications. See <a>Setting up notifications for game session
--   placement</a>.
updateGameSessionQueue_notificationTarget :: Lens' UpdateGameSessionQueue (Maybe Text)

-- | A list of locations where a queue is allowed to place new game
--   sessions. Locations are specified in the form of AWS Region codes,
--   such as <tt>us-west-2</tt>. If this parameter is not set, game
--   sessions can be placed in any queue location. To remove an existing
--   filter configuration, pass in an empty set.
updateGameSessionQueue_filterConfiguration :: Lens' UpdateGameSessionQueue (Maybe FilterConfiguration)

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region. You can use either the queue
--   ID or ARN value.
updateGameSessionQueue_name :: Lens' UpdateGameSessionQueue Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateGameSessionQueueResponse</a> smart
--   constructor.
data UpdateGameSessionQueueResponse
UpdateGameSessionQueueResponse' :: Maybe GameSessionQueue -> Int -> UpdateGameSessionQueueResponse

-- | An object that describes the newly updated game session queue.
[$sel:gameSessionQueue:UpdateGameSessionQueueResponse'] :: UpdateGameSessionQueueResponse -> Maybe GameSessionQueue

-- | The response's http status code.
[$sel:httpStatus:UpdateGameSessionQueueResponse'] :: UpdateGameSessionQueueResponse -> Int

-- | Create a value of <a>UpdateGameSessionQueueResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionQueue:UpdateGameSessionQueueResponse'</a>,
--   <a>updateGameSessionQueueResponse_gameSessionQueue</a> - An object
--   that describes the newly updated game session queue.
--   
--   <a>$sel:httpStatus:UpdateGameSessionQueueResponse'</a>,
--   <a>updateGameSessionQueueResponse_httpStatus</a> - The response's http
--   status code.
newUpdateGameSessionQueueResponse :: Int -> UpdateGameSessionQueueResponse

-- | An object that describes the newly updated game session queue.
updateGameSessionQueueResponse_gameSessionQueue :: Lens' UpdateGameSessionQueueResponse (Maybe GameSessionQueue)

-- | The response's http status code.
updateGameSessionQueueResponse_httpStatus :: Lens' UpdateGameSessionQueueResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueue
instance GHC.Show.Show Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueue
instance GHC.Read.Read Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueue
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueue
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueueResponse
instance GHC.Show.Show Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueueResponse
instance GHC.Read.Read Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueueResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueue
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueueResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueue
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueue
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueue
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UpdateGameSessionQueue.UpdateGameSessionQueue


-- | Updates settings for a FlexMatch matchmaking configuration. These
--   changes affect all matches and game sessions that are created after
--   the update. To update settings, specify the configuration name to be
--   updated and provide the new settings.
--   
--   <b>Learn more</b>
--   
--   <a>Design a FlexMatch matchmaker</a>
--   
--   <b>Related actions</b>
--   
--   CreateMatchmakingConfiguration | DescribeMatchmakingConfigurations |
--   UpdateMatchmakingConfiguration | DeleteMatchmakingConfiguration |
--   CreateMatchmakingRuleSet | DescribeMatchmakingRuleSets |
--   ValidateMatchmakingRuleSet | DeleteMatchmakingRuleSet | <a>All APIs by
--   task</a>
module Network.AWS.GameLift.UpdateMatchmakingConfiguration

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateMatchmakingConfiguration</a> smart
--   constructor.
data UpdateMatchmakingConfiguration
UpdateMatchmakingConfiguration' :: Maybe FlexMatchMode -> Maybe Text -> Maybe BackfillMode -> Maybe [GameProperty] -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Bool -> Text -> UpdateMatchmakingConfiguration

-- | Indicates whether this matchmaking configuration is being used with
--   GameLift hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
[$sel:flexMatchMode:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe FlexMatchMode

-- | Information to add to all events related to the matchmaking
--   configuration.
[$sel:customEventData:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe Text

-- | The method that is used to backfill game sessions created with this
--   matchmaking configuration. Specify MANUAL when your game manages
--   backfill requests manually or does not use the match backfill feature.
--   Specify AUTOMATIC to have GameLift create a StartMatchBackfill request
--   whenever a game session has one or more open slots. Learn more about
--   manual and automatic backfill in <a>Backfill Existing Games with
--   FlexMatch</a>. Automatic backfill is not available when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:backfillMode:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe BackfillMode

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>). This information is added to the new
--   GameSession object that is created for a successful match. This
--   parameter is not used if <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
[$sel:gameProperties:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe [GameProperty]

-- | The length of time (in seconds) to wait for players to accept a
--   proposed match, if acceptance is required.
[$sel:acceptanceTimeoutSeconds:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe Natural

-- | The number of player slots in a match to keep open for future players.
--   For example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   if <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:additionalPlayerCount:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe Natural

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
[$sel:gameSessionData:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe Text

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. If <tt>FlexMatchMode</tt> is set
--   to <tt>STANDALONE</tt>, do not set this parameter.
[$sel:gameSessionQueueArns:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe [Text]

-- | An SNS topic ARN that is set up to receive matchmaking notifications.
--   See <a>Setting up notifications for matchmaking</a> for more
--   information.
[$sel:notificationTarget:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe Text

-- | The maximum duration, in seconds, that a matchmaking ticket can remain
--   in process before timing out. Requests that fail due to timing out can
--   be resubmitted as needed.
[$sel:requestTimeoutSeconds:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe Natural

-- | A descriptive label that is associated with matchmaking configuration.
[$sel:description:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe Text

-- | A unique identifier for the matchmaking rule set to use with this
--   configuration. You can use either the rule set name or ARN value. A
--   matchmaking configuration can only use rule sets that are defined in
--   the same Region.
[$sel:ruleSetName:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe Text

-- | A flag that indicates whether a match that was created with this
--   configuration must be accepted by the matched players. To require
--   acceptance, set to TRUE. With this option enabled, matchmaking tickets
--   use the status <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a
--   completed potential match is waiting for player acceptance.
[$sel:acceptanceRequired:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Maybe Bool

-- | A unique identifier for the matchmaking configuration to update. You
--   can use either the configuration name or ARN value.
[$sel:name:UpdateMatchmakingConfiguration'] :: UpdateMatchmakingConfiguration -> Text

-- | Create a value of <a>UpdateMatchmakingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flexMatchMode:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_flexMatchMode</a> - Indicates
--   whether this matchmaking configuration is being used with GameLift
--   hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
--   
--   <a>$sel:customEventData:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_customEventData</a> - Information to
--   add to all events related to the matchmaking configuration.
--   
--   <a>$sel:backfillMode:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_backfillMode</a> - The method that
--   is used to backfill game sessions created with this matchmaking
--   configuration. Specify MANUAL when your game manages backfill requests
--   manually or does not use the match backfill feature. Specify AUTOMATIC
--   to have GameLift create a StartMatchBackfill request whenever a game
--   session has one or more open slots. Learn more about manual and
--   automatic backfill in <a>Backfill Existing Games with FlexMatch</a>.
--   Automatic backfill is not available when <tt>FlexMatchMode</tt> is set
--   to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameProperties:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_gameProperties</a> - A set of custom
--   properties for a game session, formatted as key:value pairs. These
--   properties are passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:acceptanceTimeoutSeconds:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_acceptanceTimeoutSeconds</a> - The
--   length of time (in seconds) to wait for players to accept a proposed
--   match, if acceptance is required.
--   
--   <a>$sel:additionalPlayerCount:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_additionalPlayerCount</a> - The
--   number of player slots in a match to keep open for future players. For
--   example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   if <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameSessionData:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_gameSessionData</a> - A set of
--   custom game session properties, formatted as a single string value.
--   This data is passed to a game server process in the GameSession object
--   with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameSessionQueueArns:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_gameSessionQueueArns</a> - The
--   Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift game
--   session queue resource and uniquely identifies it. ARNs are unique
--   across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. If <tt>FlexMatchMode</tt> is set
--   to <tt>STANDALONE</tt>, do not set this parameter.
--   
--   <a>$sel:notificationTarget:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_notificationTarget</a> - An SNS
--   topic ARN that is set up to receive matchmaking notifications. See
--   <a>Setting up notifications for matchmaking</a> for more information.
--   
--   <a>$sel:requestTimeoutSeconds:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_requestTimeoutSeconds</a> - The
--   maximum duration, in seconds, that a matchmaking ticket can remain in
--   process before timing out. Requests that fail due to timing out can be
--   resubmitted as needed.
--   
--   <a>$sel:description:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_description</a> - A descriptive
--   label that is associated with matchmaking configuration.
--   
--   <a>$sel:ruleSetName:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_ruleSetName</a> - A unique
--   identifier for the matchmaking rule set to use with this
--   configuration. You can use either the rule set name or ARN value. A
--   matchmaking configuration can only use rule sets that are defined in
--   the same Region.
--   
--   <a>$sel:acceptanceRequired:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_acceptanceRequired</a> - A flag that
--   indicates whether a match that was created with this configuration
--   must be accepted by the matched players. To require acceptance, set to
--   TRUE. With this option enabled, matchmaking tickets use the status
--   <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a completed potential
--   match is waiting for player acceptance.
--   
--   <a>$sel:name:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_name</a> - A unique identifier for
--   the matchmaking configuration to update. You can use either the
--   configuration name or ARN value.
newUpdateMatchmakingConfiguration :: Text -> UpdateMatchmakingConfiguration

-- | Indicates whether this matchmaking configuration is being used with
--   GameLift hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
updateMatchmakingConfiguration_flexMatchMode :: Lens' UpdateMatchmakingConfiguration (Maybe FlexMatchMode)

-- | Information to add to all events related to the matchmaking
--   configuration.
updateMatchmakingConfiguration_customEventData :: Lens' UpdateMatchmakingConfiguration (Maybe Text)

-- | The method that is used to backfill game sessions created with this
--   matchmaking configuration. Specify MANUAL when your game manages
--   backfill requests manually or does not use the match backfill feature.
--   Specify AUTOMATIC to have GameLift create a StartMatchBackfill request
--   whenever a game session has one or more open slots. Learn more about
--   manual and automatic backfill in <a>Backfill Existing Games with
--   FlexMatch</a>. Automatic backfill is not available when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
updateMatchmakingConfiguration_backfillMode :: Lens' UpdateMatchmakingConfiguration (Maybe BackfillMode)

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>). This information is added to the new
--   GameSession object that is created for a successful match. This
--   parameter is not used if <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
updateMatchmakingConfiguration_gameProperties :: Lens' UpdateMatchmakingConfiguration (Maybe [GameProperty])

-- | The length of time (in seconds) to wait for players to accept a
--   proposed match, if acceptance is required.
updateMatchmakingConfiguration_acceptanceTimeoutSeconds :: Lens' UpdateMatchmakingConfiguration (Maybe Natural)

-- | The number of player slots in a match to keep open for future players.
--   For example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   if <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
updateMatchmakingConfiguration_additionalPlayerCount :: Lens' UpdateMatchmakingConfiguration (Maybe Natural)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
updateMatchmakingConfiguration_gameSessionData :: Lens' UpdateMatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. If <tt>FlexMatchMode</tt> is set
--   to <tt>STANDALONE</tt>, do not set this parameter.
updateMatchmakingConfiguration_gameSessionQueueArns :: Lens' UpdateMatchmakingConfiguration (Maybe [Text])

-- | An SNS topic ARN that is set up to receive matchmaking notifications.
--   See <a>Setting up notifications for matchmaking</a> for more
--   information.
updateMatchmakingConfiguration_notificationTarget :: Lens' UpdateMatchmakingConfiguration (Maybe Text)

-- | The maximum duration, in seconds, that a matchmaking ticket can remain
--   in process before timing out. Requests that fail due to timing out can
--   be resubmitted as needed.
updateMatchmakingConfiguration_requestTimeoutSeconds :: Lens' UpdateMatchmakingConfiguration (Maybe Natural)

-- | A descriptive label that is associated with matchmaking configuration.
updateMatchmakingConfiguration_description :: Lens' UpdateMatchmakingConfiguration (Maybe Text)

-- | A unique identifier for the matchmaking rule set to use with this
--   configuration. You can use either the rule set name or ARN value. A
--   matchmaking configuration can only use rule sets that are defined in
--   the same Region.
updateMatchmakingConfiguration_ruleSetName :: Lens' UpdateMatchmakingConfiguration (Maybe Text)

-- | A flag that indicates whether a match that was created with this
--   configuration must be accepted by the matched players. To require
--   acceptance, set to TRUE. With this option enabled, matchmaking tickets
--   use the status <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a
--   completed potential match is waiting for player acceptance.
updateMatchmakingConfiguration_acceptanceRequired :: Lens' UpdateMatchmakingConfiguration (Maybe Bool)

-- | A unique identifier for the matchmaking configuration to update. You
--   can use either the configuration name or ARN value.
updateMatchmakingConfiguration_name :: Lens' UpdateMatchmakingConfiguration Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateMatchmakingConfigurationResponse</a> smart
--   constructor.
data UpdateMatchmakingConfigurationResponse
UpdateMatchmakingConfigurationResponse' :: Maybe MatchmakingConfiguration -> Int -> UpdateMatchmakingConfigurationResponse

-- | The updated matchmaking configuration.
[$sel:configuration:UpdateMatchmakingConfigurationResponse'] :: UpdateMatchmakingConfigurationResponse -> Maybe MatchmakingConfiguration

-- | The response's http status code.
[$sel:httpStatus:UpdateMatchmakingConfigurationResponse'] :: UpdateMatchmakingConfigurationResponse -> Int

-- | Create a value of <a>UpdateMatchmakingConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:UpdateMatchmakingConfigurationResponse'</a>,
--   <a>updateMatchmakingConfigurationResponse_configuration</a> - The
--   updated matchmaking configuration.
--   
--   <a>$sel:httpStatus:UpdateMatchmakingConfigurationResponse'</a>,
--   <a>updateMatchmakingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateMatchmakingConfigurationResponse :: Int -> UpdateMatchmakingConfigurationResponse

-- | The updated matchmaking configuration.
updateMatchmakingConfigurationResponse_configuration :: Lens' UpdateMatchmakingConfigurationResponse (Maybe MatchmakingConfiguration)

-- | The response's http status code.
updateMatchmakingConfigurationResponse_httpStatus :: Lens' UpdateMatchmakingConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfiguration
instance GHC.Show.Show Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfiguration
instance GHC.Read.Read Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfiguration
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfigurationResponse
instance GHC.Show.Show Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfigurationResponse
instance GHC.Read.Read Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfigurationResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UpdateMatchmakingConfiguration.UpdateMatchmakingConfiguration


-- | Updates the current runtime configuration for the specified fleet,
--   which tells GameLift how to launch server processes on all instances
--   in the fleet. You can update a fleet's runtime configuration at any
--   time after the fleet is created; it does not need to be in
--   <tt>ACTIVE</tt> status.
--   
--   To update runtime configuration, specify the fleet ID and provide a
--   <tt>RuntimeConfiguration</tt> with an updated set of server process
--   configurations.
--   
--   If successful, the fleet's runtime configuration settings are updated.
--   Each instance in the fleet regularly checks for and retrieves updated
--   runtime configurations. Instances immediately begin complying with the
--   new configuration by launching new server processes or not replacing
--   existing processes when they shut down. Updating a fleet's runtime
--   configuration never affects existing server processes.
--   
--   <b>Learn more</b>
--   
--   <a>Setting up GameLift fleets</a>
--   
--   <b>Related actions</b>
--   
--   CreateFleetLocations | UpdateFleetAttributes | UpdateFleetCapacity |
--   UpdateFleetPortSettings | UpdateRuntimeConfiguration |
--   StopFleetActions | StartFleetActions | PutScalingPolicy | DeleteFleet
--   | DeleteFleetLocations | DeleteScalingPolicy | <a>All APIs by task</a>
module Network.AWS.GameLift.UpdateRuntimeConfiguration

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateRuntimeConfiguration</a> smart constructor.
data UpdateRuntimeConfiguration
UpdateRuntimeConfiguration' :: Text -> RuntimeConfiguration -> UpdateRuntimeConfiguration

-- | A unique identifier for the fleet to update runtime configuration for.
--   You can use either the fleet ID or ARN value.
[$sel:fleetId:UpdateRuntimeConfiguration'] :: UpdateRuntimeConfiguration -> Text

-- | Instructions for launching server processes on each instance in the
--   fleet. Server processes run either a custom game build executable or a
--   Realtime Servers script. The runtime configuration lists the types of
--   server processes to run on an instance, how to launch them, and the
--   number of processes to run concurrently.
[$sel:runtimeConfiguration:UpdateRuntimeConfiguration'] :: UpdateRuntimeConfiguration -> RuntimeConfiguration

-- | Create a value of <a>UpdateRuntimeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:UpdateRuntimeConfiguration'</a>,
--   <a>updateRuntimeConfiguration_fleetId</a> - A unique identifier for
--   the fleet to update runtime configuration for. You can use either the
--   fleet ID or ARN value.
--   
--   <a>$sel:runtimeConfiguration:UpdateRuntimeConfiguration'</a>,
--   <a>updateRuntimeConfiguration_runtimeConfiguration</a> - Instructions
--   for launching server processes on each instance in the fleet. Server
--   processes run either a custom game build executable or a Realtime
--   Servers script. The runtime configuration lists the types of server
--   processes to run on an instance, how to launch them, and the number of
--   processes to run concurrently.
newUpdateRuntimeConfiguration :: Text -> RuntimeConfiguration -> UpdateRuntimeConfiguration

-- | A unique identifier for the fleet to update runtime configuration for.
--   You can use either the fleet ID or ARN value.
updateRuntimeConfiguration_fleetId :: Lens' UpdateRuntimeConfiguration Text

-- | Instructions for launching server processes on each instance in the
--   fleet. Server processes run either a custom game build executable or a
--   Realtime Servers script. The runtime configuration lists the types of
--   server processes to run on an instance, how to launch them, and the
--   number of processes to run concurrently.
updateRuntimeConfiguration_runtimeConfiguration :: Lens' UpdateRuntimeConfiguration RuntimeConfiguration

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateRuntimeConfigurationResponse</a> smart
--   constructor.
data UpdateRuntimeConfigurationResponse
UpdateRuntimeConfigurationResponse' :: Maybe RuntimeConfiguration -> Int -> UpdateRuntimeConfigurationResponse

-- | The runtime configuration currently in use by all instances in the
--   fleet. If the update was successful, all property changes are shown.
[$sel:runtimeConfiguration:UpdateRuntimeConfigurationResponse'] :: UpdateRuntimeConfigurationResponse -> Maybe RuntimeConfiguration

-- | The response's http status code.
[$sel:httpStatus:UpdateRuntimeConfigurationResponse'] :: UpdateRuntimeConfigurationResponse -> Int

-- | Create a value of <a>UpdateRuntimeConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runtimeConfiguration:UpdateRuntimeConfiguration'</a>,
--   <a>updateRuntimeConfigurationResponse_runtimeConfiguration</a> - The
--   runtime configuration currently in use by all instances in the fleet.
--   If the update was successful, all property changes are shown.
--   
--   <a>$sel:httpStatus:UpdateRuntimeConfigurationResponse'</a>,
--   <a>updateRuntimeConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newUpdateRuntimeConfigurationResponse :: Int -> UpdateRuntimeConfigurationResponse

-- | The runtime configuration currently in use by all instances in the
--   fleet. If the update was successful, all property changes are shown.
updateRuntimeConfigurationResponse_runtimeConfiguration :: Lens' UpdateRuntimeConfigurationResponse (Maybe RuntimeConfiguration)

-- | The response's http status code.
updateRuntimeConfigurationResponse_httpStatus :: Lens' UpdateRuntimeConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfiguration
instance GHC.Show.Show Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfiguration
instance GHC.Read.Read Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfiguration
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfiguration
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfigurationResponse
instance GHC.Show.Show Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfigurationResponse
instance GHC.Read.Read Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfigurationResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfiguration
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UpdateRuntimeConfiguration.UpdateRuntimeConfiguration


-- | Updates Realtime script metadata and content.
--   
--   To update script metadata, specify the script ID and provide updated
--   name and/or version values.
--   
--   To update script content, provide an updated zip file by pointing to
--   either a local file or an Amazon S3 bucket location. You can use
--   either method regardless of how the original script was uploaded. Use
--   the <i>Version</i> parameter to track updates to the script.
--   
--   If the call is successful, the updated metadata is stored in the
--   script record and a revised script is uploaded to the Amazon GameLift
--   service. Once the script is updated and acquired by a fleet instance,
--   the new version is used for all new game sessions.
--   
--   <b>Learn more</b>
--   
--   <a>Amazon GameLift Realtime Servers</a>
--   
--   <b>Related actions</b>
--   
--   CreateScript | ListScripts | DescribeScript | UpdateScript |
--   DeleteScript | <a>All APIs by task</a>
module Network.AWS.GameLift.UpdateScript

-- | <i>See:</i> <a>newUpdateScript</a> smart constructor.
data UpdateScript
UpdateScript' :: Maybe Base64 -> Maybe Text -> Maybe Text -> Maybe S3Location -> Text -> UpdateScript

-- | A data object containing your Realtime scripts and dependencies as a
--   zip file. The zip file can have one or multiple files. Maximum size of
--   a zip file is 5 MB.
--   
--   When using the AWS CLI tool to create a script, this parameter is set
--   to the zip file name. It must be prepended with the string "fileb://"
--   to indicate that the file data is a binary object. For example:
--   <tt>--zip-file fileb://myRealtimeScript.zip</tt>.
[$sel:zipFile:UpdateScript'] :: UpdateScript -> Maybe Base64

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique.
[$sel:version:UpdateScript'] :: UpdateScript -> Maybe Text

-- | A descriptive label that is associated with a script. Script names do
--   not need to be unique.
[$sel:name:UpdateScript'] :: UpdateScript -> Maybe Text

-- | The location of the Amazon S3 bucket where a zipped file containing
--   your Realtime scripts is stored. The storage location must specify the
--   Amazon S3 bucket name, the zip file name (the "key"), and a role ARN
--   that allows Amazon GameLift to access the Amazon S3 storage location.
--   The S3 bucket must be in the same Region where you want to create a
--   new script. By default, Amazon GameLift uploads the latest version of
--   the zip file; if you have S3 object versioning turned on, you can use
--   the <tt>ObjectVersion</tt> parameter to specify an earlier version.
[$sel:storageLocation:UpdateScript'] :: UpdateScript -> Maybe S3Location

-- | A unique identifier for the Realtime script to update. You can use
--   either the script ID or ARN value.
[$sel:scriptId:UpdateScript'] :: UpdateScript -> Text

-- | Create a value of <a>UpdateScript</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:zipFile:UpdateScript'</a>, <a>updateScript_zipFile</a> - A
--   data object containing your Realtime scripts and dependencies as a zip
--   file. The zip file can have one or multiple files. Maximum size of a
--   zip file is 5 MB.
--   
--   When using the AWS CLI tool to create a script, this parameter is set
--   to the zip file name. It must be prepended with the string "fileb://"
--   to indicate that the file data is a binary object. For example:
--   <tt>--zip-file fileb://myRealtimeScript.zip</tt>.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:version:UpdateScript'</a>, <a>updateScript_version</a> -
--   Version information that is associated with a build or script. Version
--   strings do not need to be unique.
--   
--   <a>$sel:name:UpdateScript'</a>, <a>updateScript_name</a> - A
--   descriptive label that is associated with a script. Script names do
--   not need to be unique.
--   
--   <a>$sel:storageLocation:UpdateScript'</a>,
--   <a>updateScript_storageLocation</a> - The location of the Amazon S3
--   bucket where a zipped file containing your Realtime scripts is stored.
--   The storage location must specify the Amazon S3 bucket name, the zip
--   file name (the "key"), and a role ARN that allows Amazon GameLift to
--   access the Amazon S3 storage location. The S3 bucket must be in the
--   same Region where you want to create a new script. By default, Amazon
--   GameLift uploads the latest version of the zip file; if you have S3
--   object versioning turned on, you can use the <tt>ObjectVersion</tt>
--   parameter to specify an earlier version.
--   
--   <a>$sel:scriptId:UpdateScript'</a>, <a>updateScript_scriptId</a> - A
--   unique identifier for the Realtime script to update. You can use
--   either the script ID or ARN value.
newUpdateScript :: Text -> UpdateScript

-- | A data object containing your Realtime scripts and dependencies as a
--   zip file. The zip file can have one or multiple files. Maximum size of
--   a zip file is 5 MB.
--   
--   When using the AWS CLI tool to create a script, this parameter is set
--   to the zip file name. It must be prepended with the string "fileb://"
--   to indicate that the file data is a binary object. For example:
--   <tt>--zip-file fileb://myRealtimeScript.zip</tt>.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
updateScript_zipFile :: Lens' UpdateScript (Maybe ByteString)

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique.
updateScript_version :: Lens' UpdateScript (Maybe Text)

-- | A descriptive label that is associated with a script. Script names do
--   not need to be unique.
updateScript_name :: Lens' UpdateScript (Maybe Text)

-- | The location of the Amazon S3 bucket where a zipped file containing
--   your Realtime scripts is stored. The storage location must specify the
--   Amazon S3 bucket name, the zip file name (the "key"), and a role ARN
--   that allows Amazon GameLift to access the Amazon S3 storage location.
--   The S3 bucket must be in the same Region where you want to create a
--   new script. By default, Amazon GameLift uploads the latest version of
--   the zip file; if you have S3 object versioning turned on, you can use
--   the <tt>ObjectVersion</tt> parameter to specify an earlier version.
updateScript_storageLocation :: Lens' UpdateScript (Maybe S3Location)

-- | A unique identifier for the Realtime script to update. You can use
--   either the script ID or ARN value.
updateScript_scriptId :: Lens' UpdateScript Text

-- | <i>See:</i> <a>newUpdateScriptResponse</a> smart constructor.
data UpdateScriptResponse
UpdateScriptResponse' :: Maybe Script -> Int -> UpdateScriptResponse

-- | The newly created script record with a unique script ID. The new
--   script's storage location reflects an Amazon S3 location: (1) If the
--   script was uploaded from an S3 bucket under your account, the storage
--   location reflects the information that was provided in the
--   <i>CreateScript</i> request; (2) If the script file was uploaded from
--   a local zip file, the storage location reflects an S3 location
--   controls by the Amazon GameLift service.
[$sel:script:UpdateScriptResponse'] :: UpdateScriptResponse -> Maybe Script

-- | The response's http status code.
[$sel:httpStatus:UpdateScriptResponse'] :: UpdateScriptResponse -> Int

-- | Create a value of <a>UpdateScriptResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:script:UpdateScriptResponse'</a>,
--   <a>updateScriptResponse_script</a> - The newly created script record
--   with a unique script ID. The new script's storage location reflects an
--   Amazon S3 location: (1) If the script was uploaded from an S3 bucket
--   under your account, the storage location reflects the information that
--   was provided in the <i>CreateScript</i> request; (2) If the script
--   file was uploaded from a local zip file, the storage location reflects
--   an S3 location controls by the Amazon GameLift service.
--   
--   <a>$sel:httpStatus:UpdateScriptResponse'</a>,
--   <a>updateScriptResponse_httpStatus</a> - The response's http status
--   code.
newUpdateScriptResponse :: Int -> UpdateScriptResponse

-- | The newly created script record with a unique script ID. The new
--   script's storage location reflects an Amazon S3 location: (1) If the
--   script was uploaded from an S3 bucket under your account, the storage
--   location reflects the information that was provided in the
--   <i>CreateScript</i> request; (2) If the script file was uploaded from
--   a local zip file, the storage location reflects an S3 location
--   controls by the Amazon GameLift service.
updateScriptResponse_script :: Lens' UpdateScriptResponse (Maybe Script)

-- | The response's http status code.
updateScriptResponse_httpStatus :: Lens' UpdateScriptResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateScript.UpdateScript
instance GHC.Show.Show Network.AWS.GameLift.UpdateScript.UpdateScript
instance GHC.Read.Read Network.AWS.GameLift.UpdateScript.UpdateScript
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateScript.UpdateScript
instance GHC.Generics.Generic Network.AWS.GameLift.UpdateScript.UpdateScriptResponse
instance GHC.Show.Show Network.AWS.GameLift.UpdateScript.UpdateScriptResponse
instance GHC.Read.Read Network.AWS.GameLift.UpdateScript.UpdateScriptResponse
instance GHC.Classes.Eq Network.AWS.GameLift.UpdateScript.UpdateScriptResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.UpdateScript.UpdateScript
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateScript.UpdateScriptResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.UpdateScript.UpdateScript
instance Control.DeepSeq.NFData Network.AWS.GameLift.UpdateScript.UpdateScript
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.UpdateScript.UpdateScript
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.UpdateScript.UpdateScript
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.UpdateScript.UpdateScript
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.UpdateScript.UpdateScript


-- | Validates the syntax of a matchmaking rule or rule set. This operation
--   checks that the rule set is using syntactically correct JSON and that
--   it conforms to allowed property expressions. To validate syntax,
--   provide a rule set JSON string.
--   
--   <b>Learn more</b>
--   
--   <ul>
--   <li><a>Build a rule set</a></li>
--   </ul>
--   
--   <b>Related actions</b>
--   
--   CreateMatchmakingConfiguration | DescribeMatchmakingConfigurations |
--   UpdateMatchmakingConfiguration | DeleteMatchmakingConfiguration |
--   CreateMatchmakingRuleSet | DescribeMatchmakingRuleSets |
--   ValidateMatchmakingRuleSet | DeleteMatchmakingRuleSet | <a>All APIs by
--   task</a>
module Network.AWS.GameLift.ValidateMatchmakingRuleSet

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newValidateMatchmakingRuleSet</a> smart constructor.
data ValidateMatchmakingRuleSet
ValidateMatchmakingRuleSet' :: Text -> ValidateMatchmakingRuleSet

-- | A collection of matchmaking rules to validate, formatted as a JSON
--   string.
[$sel:ruleSetBody:ValidateMatchmakingRuleSet'] :: ValidateMatchmakingRuleSet -> Text

-- | Create a value of <a>ValidateMatchmakingRuleSet</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleSetBody:ValidateMatchmakingRuleSet'</a>,
--   <a>validateMatchmakingRuleSet_ruleSetBody</a> - A collection of
--   matchmaking rules to validate, formatted as a JSON string.
newValidateMatchmakingRuleSet :: Text -> ValidateMatchmakingRuleSet

-- | A collection of matchmaking rules to validate, formatted as a JSON
--   string.
validateMatchmakingRuleSet_ruleSetBody :: Lens' ValidateMatchmakingRuleSet Text

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newValidateMatchmakingRuleSetResponse</a> smart
--   constructor.
data ValidateMatchmakingRuleSetResponse
ValidateMatchmakingRuleSetResponse' :: Maybe Bool -> Int -> ValidateMatchmakingRuleSetResponse

-- | A response indicating whether the rule set is valid.
[$sel:valid:ValidateMatchmakingRuleSetResponse'] :: ValidateMatchmakingRuleSetResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:ValidateMatchmakingRuleSetResponse'] :: ValidateMatchmakingRuleSetResponse -> Int

-- | Create a value of <a>ValidateMatchmakingRuleSetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:valid:ValidateMatchmakingRuleSetResponse'</a>,
--   <a>validateMatchmakingRuleSetResponse_valid</a> - A response
--   indicating whether the rule set is valid.
--   
--   <a>$sel:httpStatus:ValidateMatchmakingRuleSetResponse'</a>,
--   <a>validateMatchmakingRuleSetResponse_httpStatus</a> - The response's
--   http status code.
newValidateMatchmakingRuleSetResponse :: Int -> ValidateMatchmakingRuleSetResponse

-- | A response indicating whether the rule set is valid.
validateMatchmakingRuleSetResponse_valid :: Lens' ValidateMatchmakingRuleSetResponse (Maybe Bool)

-- | The response's http status code.
validateMatchmakingRuleSetResponse_httpStatus :: Lens' ValidateMatchmakingRuleSetResponse Int
instance GHC.Generics.Generic Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSet
instance GHC.Show.Show Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSet
instance GHC.Read.Read Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSet
instance GHC.Classes.Eq Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSet
instance GHC.Generics.Generic Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSetResponse
instance GHC.Show.Show Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSetResponse
instance GHC.Read.Read Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSetResponse
instance GHC.Classes.Eq Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSet
instance Control.DeepSeq.NFData Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSetResponse
instance Data.Hashable.Class.Hashable Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSet
instance Control.DeepSeq.NFData Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSet
instance Network.AWS.Data.Path.ToPath Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSet
instance Network.AWS.Data.Query.ToQuery Network.AWS.GameLift.ValidateMatchmakingRuleSet.ValidateMatchmakingRuleSet


module Network.AWS.GameLift.Lens

-- | A unique identifier for the fleet. You can use either the fleet ID or
--   ARN value.
describeVpcPeeringConnections_fleetId :: Lens' DescribeVpcPeeringConnections (Maybe Text)

-- | A collection of VPC peering connection records that match the request.
describeVpcPeeringConnectionsResponse_vpcPeeringConnections :: Lens' DescribeVpcPeeringConnectionsResponse (Maybe [VpcPeeringConnection])

-- | The response's http status code.
describeVpcPeeringConnectionsResponse_httpStatus :: Lens' DescribeVpcPeeringConnectionsResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value. This parameter is ignored when the request specifies one or a
--   list of fleet IDs.
describeFleetCapacity_nextToken :: Lens' DescribeFleetCapacity (Maybe Text)

-- | A unique identifier for the fleet(s) to retrieve capacity information
--   for. You can use either the fleet ID or ARN value. Leave this
--   parameter empty to retrieve capacity information for all fleets.
describeFleetCapacity_fleetIds :: Lens' DescribeFleetCapacity (Maybe (NonEmpty Text))

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   parameter is ignored when the request specifies one or a list of fleet
--   IDs.
describeFleetCapacity_limit :: Lens' DescribeFleetCapacity (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeFleetCapacityResponse_nextToken :: Lens' DescribeFleetCapacityResponse (Maybe Text)

-- | A collection of objects that contains capacity information for each
--   requested fleet ID. Capacity objects are returned only for fleets that
--   currently exist.
describeFleetCapacityResponse_fleetCapacity :: Lens' DescribeFleetCapacityResponse (Maybe [FleetCapacity])

-- | The response's http status code.
describeFleetCapacityResponse_httpStatus :: Lens' DescribeFleetCapacityResponse Int

-- | Build status to filter results by. To retrieve all builds, leave this
--   parameter empty.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
listBuilds_status :: Lens' ListBuilds (Maybe BuildStatus)

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
listBuilds_nextToken :: Lens' ListBuilds (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
listBuilds_limit :: Lens' ListBuilds (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
listBuildsResponse_nextToken :: Lens' ListBuildsResponse (Maybe Text)

-- | A collection of build resources that match the request.
listBuildsResponse_builds :: Lens' ListBuildsResponse (Maybe [Build])

-- | The response's http status code.
listBuildsResponse_httpStatus :: Lens' ListBuildsResponse Int

-- | A unique identifier for the build to delete. You can use either the
--   build ID or ARN value.
deleteBuild_buildId :: Lens' DeleteBuild Text

-- | A list of queue names to retrieve information for. You can use either
--   the queue ID or ARN value. To request settings for all queues, leave
--   this parameter empty.
describeGameSessionQueues_names :: Lens' DescribeGameSessionQueues (Maybe [Text])

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeGameSessionQueues_nextToken :: Lens' DescribeGameSessionQueues (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. You
--   can request up to 50 results.
describeGameSessionQueues_limit :: Lens' DescribeGameSessionQueues (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeGameSessionQueuesResponse_nextToken :: Lens' DescribeGameSessionQueuesResponse (Maybe Text)

-- | A collection of objects that describe the requested game session
--   queues.
describeGameSessionQueuesResponse_gameSessionQueues :: Lens' DescribeGameSessionQueuesResponse (Maybe [GameSessionQueue])

-- | The response's http status code.
describeGameSessionQueuesResponse_httpStatus :: Lens' DescribeGameSessionQueuesResponse Int

-- | A unique identifier of the alias that you want to delete. You can use
--   either the alias ID or ARN value.
deleteAlias_aliasId :: Lens' DeleteAlias Text

-- | A remote location to check for status of port setting updates. Use the
--   AWS Region code format, such as <tt>us-west-2</tt>.
describeFleetPortSettings_location :: Lens' DescribeFleetPortSettings (Maybe Text)

-- | A unique identifier for the fleet to retrieve port settings for. You
--   can use either the fleet ID or ARN value.
describeFleetPortSettings_fleetId :: Lens' DescribeFleetPortSettings Text

-- | A unique identifier for the fleet that was requested.
describeFleetPortSettingsResponse_fleetId :: Lens' DescribeFleetPortSettingsResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
describeFleetPortSettingsResponse_fleetArn :: Lens' DescribeFleetPortSettingsResponse (Maybe Text)

-- | The current status of updates to the fleet's port settings in the
--   requested fleet location. A status of <tt>PENDING_UPDATE</tt>
--   indicates that an update was requested for the fleet but has not yet
--   been completed for the location.
describeFleetPortSettingsResponse_updateStatus :: Lens' DescribeFleetPortSettingsResponse (Maybe LocationUpdateStatus)

-- | The port settings for the requested fleet ID.
describeFleetPortSettingsResponse_inboundPermissions :: Lens' DescribeFleetPortSettingsResponse (Maybe [IpPermission])

-- | The requested fleet location, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
describeFleetPortSettingsResponse_location :: Lens' DescribeFleetPortSettingsResponse (Maybe Text)

-- | The response's http status code.
describeFleetPortSettingsResponse_httpStatus :: Lens' DescribeFleetPortSettingsResponse Int

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique.
updateBuild_version :: Lens' UpdateBuild (Maybe Text)

-- | A descriptive label that is associated with a build. Build names do
--   not need to be unique.
updateBuild_name :: Lens' UpdateBuild (Maybe Text)

-- | A unique identifier for the build to update. You can use either the
--   build ID or ARN value.
updateBuild_buildId :: Lens' UpdateBuild Text

-- | The updated build resource.
updateBuildResponse_build :: Lens' UpdateBuildResponse (Maybe Build)

-- | The response's http status code.
updateBuildResponse_httpStatus :: Lens' UpdateBuildResponse Int

-- | A unique identifier for an instance to retrieve. Specify an instance
--   ID or leave blank to retrieve all instances in the fleet.
describeInstances_instanceId :: Lens' DescribeInstances (Maybe Text)

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeInstances_nextToken :: Lens' DescribeInstances (Maybe Text)

-- | The name of a location to retrieve instance information for, in the
--   form of an AWS Region code such as <tt>us-west-2</tt>.
describeInstances_location :: Lens' DescribeInstances (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeInstances_limit :: Lens' DescribeInstances (Maybe Natural)

-- | A unique identifier for the fleet to retrieve instance information
--   for. You can use either the fleet ID or ARN value.
describeInstances_fleetId :: Lens' DescribeInstances Text

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeInstancesResponse_nextToken :: Lens' DescribeInstancesResponse (Maybe Text)

-- | A collection of objects containing properties for each instance
--   returned.
describeInstancesResponse_instances :: Lens' DescribeInstancesResponse (Maybe [Instance])

-- | The response's http status code.
describeInstancesResponse_httpStatus :: Lens' DescribeInstancesResponse Int

-- | The routing configuration, including routing type and fleet target,
--   for the alias.
updateAlias_routingStrategy :: Lens' UpdateAlias (Maybe RoutingStrategy)

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
updateAlias_name :: Lens' UpdateAlias (Maybe Text)

-- | A human-readable description of the alias.
updateAlias_description :: Lens' UpdateAlias (Maybe Text)

-- | A unique identifier for the alias that you want to update. You can use
--   either the alias ID or ARN value.
updateAlias_aliasId :: Lens' UpdateAlias Text

-- | The updated alias resource.
updateAliasResponse_alias :: Lens' UpdateAliasResponse (Maybe Alias)

-- | The response's http status code.
updateAliasResponse_httpStatus :: Lens' UpdateAliasResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value. This parameter is ignored when the request specifies one or a
--   list of fleet IDs.
describeFleetAttributes_nextToken :: Lens' DescribeFleetAttributes (Maybe Text)

-- | A list of unique fleet identifiers to retrieve attributes for. You can
--   use either the fleet ID or ARN value. To retrieve attributes for all
--   current fleets, do not include this parameter.
describeFleetAttributes_fleetIds :: Lens' DescribeFleetAttributes (Maybe (NonEmpty Text))

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   parameter is ignored when the request specifies one or a list of fleet
--   IDs.
describeFleetAttributes_limit :: Lens' DescribeFleetAttributes (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeFleetAttributesResponse_nextToken :: Lens' DescribeFleetAttributesResponse (Maybe Text)

-- | A collection of objects containing attribute metadata for each
--   requested fleet ID. Attribute objects are returned only for fleets
--   that currently exist.
describeFleetAttributesResponse_fleetAttributes :: Lens' DescribeFleetAttributesResponse (Maybe [FleetAttributes])

-- | The response's http status code.
describeFleetAttributesResponse_httpStatus :: Lens' DescribeFleetAttributesResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeFleetEvents_nextToken :: Lens' DescribeFleetEvents (Maybe Text)

-- | The earliest date to retrieve event logs for. If no start time is
--   specified, this call returns entries starting from when the fleet was
--   created to the specified end time. Format is a number expressed in
--   Unix time as milliseconds (ex: "1469498468.057").
describeFleetEvents_startTime :: Lens' DescribeFleetEvents (Maybe UTCTime)

-- | The most recent date to retrieve event logs for. If no end time is
--   specified, this call returns entries from the specified start time up
--   to the present. Format is a number expressed in Unix time as
--   milliseconds (ex: "1469498468.057").
describeFleetEvents_endTime :: Lens' DescribeFleetEvents (Maybe UTCTime)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeFleetEvents_limit :: Lens' DescribeFleetEvents (Maybe Natural)

-- | A unique identifier for the fleet to get event logs for. You can use
--   either the fleet ID or ARN value.
describeFleetEvents_fleetId :: Lens' DescribeFleetEvents Text

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeFleetEventsResponse_nextToken :: Lens' DescribeFleetEventsResponse (Maybe Text)

-- | A collection of objects containing event log entries for the specified
--   fleet.
describeFleetEventsResponse_events :: Lens' DescribeFleetEventsResponse (Maybe [Event])

-- | The response's http status code.
describeFleetEventsResponse_httpStatus :: Lens' DescribeFleetEventsResponse Int

-- | Metric value used to trigger a scaling event.
putScalingPolicy_threshold :: Lens' PutScalingPolicy (Maybe Double)

-- | An object that contains settings for a target-based scaling policy.
putScalingPolicy_targetConfiguration :: Lens' PutScalingPolicy (Maybe TargetConfiguration)

-- | Comparison operator to use when measuring the metric against the
--   threshold value.
putScalingPolicy_comparisonOperator :: Lens' PutScalingPolicy (Maybe ComparisonOperatorType)

-- | The type of scaling policy to create. For a target-based policy, set
--   the parameter <i>MetricName</i> to 'PercentAvailableGameSessions' and
--   specify a <i>TargetConfiguration</i>. For a rule-based policy set the
--   following parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
putScalingPolicy_policyType :: Lens' PutScalingPolicy (Maybe PolicyType)

-- | Amount of adjustment to make, based on the scaling adjustment type.
putScalingPolicy_scalingAdjustment :: Lens' PutScalingPolicy (Maybe Int)

-- | Length of time (in minutes) the metric must be at or beyond the
--   threshold before a scaling event is triggered.
putScalingPolicy_evaluationPeriods :: Lens' PutScalingPolicy (Maybe Natural)

-- | The type of adjustment to make to a fleet's instance count (see
--   FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down; for
--   example, a value of "-10" scales the fleet down by 10%.</li>
--   </ul>
putScalingPolicy_scalingAdjustmentType :: Lens' PutScalingPolicy (Maybe ScalingAdjustmentType)

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique. A fleet can have only one
--   scaling policy with the same name.
putScalingPolicy_name :: Lens' PutScalingPolicy Text

-- | A unique identifier for the fleet to apply this policy to. You can use
--   either the fleet ID or ARN value. The fleet cannot be in any of the
--   following statuses: ERROR or DELETING.
putScalingPolicy_fleetId :: Lens' PutScalingPolicy Text

-- | Name of the Amazon GameLift-defined metric that is used to trigger a
--   scaling adjustment. For detailed descriptions of fleet metrics, see
--   <a>Monitor Amazon GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
putScalingPolicy_metricName :: Lens' PutScalingPolicy MetricName

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
putScalingPolicyResponse_name :: Lens' PutScalingPolicyResponse (Maybe Text)

-- | The response's http status code.
putScalingPolicyResponse_httpStatus :: Lens' PutScalingPolicyResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value. This parameter is ignored when the request specifies one or a
--   list of fleet IDs.
describeFleetUtilization_nextToken :: Lens' DescribeFleetUtilization (Maybe Text)

-- | A unique identifier for the fleet(s) to retrieve utilization data for.
--   You can use either the fleet ID or ARN value. To retrieve attributes
--   for all current fleets, do not include this parameter.
describeFleetUtilization_fleetIds :: Lens' DescribeFleetUtilization (Maybe (NonEmpty Text))

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   parameter is ignored when the request specifies one or a list of fleet
--   IDs.
describeFleetUtilization_limit :: Lens' DescribeFleetUtilization (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeFleetUtilizationResponse_nextToken :: Lens' DescribeFleetUtilizationResponse (Maybe Text)

-- | A collection of objects containing utilization information for each
--   requested fleet ID. Utilization objects are returned only for fleets
--   that currently exist.
describeFleetUtilizationResponse_fleetUtilization :: Lens' DescribeFleetUtilizationResponse (Maybe [FleetUtilization])

-- | The response's http status code.
describeFleetUtilizationResponse_httpStatus :: Lens' DescribeFleetUtilizationResponse Int

-- | A unique identifier for the fleet to get the runtime configuration
--   for. You can use either the fleet ID or ARN value.
describeRuntimeConfiguration_fleetId :: Lens' DescribeRuntimeConfiguration Text

-- | Instructions that describe how server processes should be launched and
--   maintained on each instance in the fleet.
describeRuntimeConfigurationResponse_runtimeConfiguration :: Lens' DescribeRuntimeConfigurationResponse (Maybe RuntimeConfiguration)

-- | The response's http status code.
describeRuntimeConfigurationResponse_httpStatus :: Lens' DescribeRuntimeConfigurationResponse Int

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
claimGameServer_gameServerData :: Lens' ClaimGameServer (Maybe Text)

-- | A custom string that uniquely identifies the game server to claim. If
--   this parameter is left empty, GameLift FleetIQ searches for an
--   available game server in the specified game server group.
claimGameServer_gameServerId :: Lens' ClaimGameServer (Maybe Text)

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value. If you are
--   not specifying a game server to claim, this value identifies where you
--   want GameLift FleetIQ to look for an available game server to claim.
claimGameServer_gameServerGroupName :: Lens' ClaimGameServer Text

-- | Object that describes the newly claimed game server.
claimGameServerResponse_gameServer :: Lens' ClaimGameServerResponse (Maybe GameServer)

-- | The response's http status code.
claimGameServerResponse_httpStatus :: Lens' ClaimGameServerResponse Int

-- | A policy that determines whether the game session is accepting new
--   players.
updateGameSession_playerSessionCreationPolicy :: Lens' UpdateGameSession (Maybe PlayerSessionCreationPolicy)

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
updateGameSession_maximumPlayerSessionCount :: Lens' UpdateGameSession (Maybe Natural)

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
updateGameSession_name :: Lens' UpdateGameSession (Maybe Text)

-- | Game session protection policy to apply to this game session only.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
updateGameSession_protectionPolicy :: Lens' UpdateGameSession (Maybe ProtectionPolicy)

-- | A unique identifier for the game session to update.
updateGameSession_gameSessionId :: Lens' UpdateGameSession Text

-- | The updated game session properties.
updateGameSessionResponse_gameSession :: Lens' UpdateGameSessionResponse (Maybe GameSession)

-- | The response's http status code.
updateGameSessionResponse_httpStatus :: Lens' UpdateGameSessionResponse Int

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
describeGameServerGroup_gameServerGroupName :: Lens' DescribeGameServerGroup Text

-- | An object with the property settings for the requested game server
--   group resource.
describeGameServerGroupResponse_gameServerGroup :: Lens' DescribeGameServerGroupResponse (Maybe GameServerGroup)

-- | The response's http status code.
describeGameServerGroupResponse_httpStatus :: Lens' DescribeGameServerGroupResponse Int

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
createPlayerSession_playerData :: Lens' CreatePlayerSession (Maybe Text)

-- | A unique identifier for the game session to add a player to.
createPlayerSession_gameSessionId :: Lens' CreatePlayerSession Text

-- | A unique identifier for a player. Player IDs are developer-defined.
createPlayerSession_playerId :: Lens' CreatePlayerSession Text

-- | Object that describes the newly created player session record.
createPlayerSessionResponse_playerSession :: Lens' CreatePlayerSessionResponse (Maybe PlayerSession)

-- | The response's http status code.
createPlayerSessionResponse_httpStatus :: Lens' CreatePlayerSessionResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeFleetLocationAttributes_nextToken :: Lens' DescribeFleetLocationAttributes (Maybe Text)

-- | A list of fleet locations to retrieve information for. Specify
--   locations in the form of an AWS Region code, such as
--   <tt>us-west-2</tt>.
describeFleetLocationAttributes_locations :: Lens' DescribeFleetLocationAttributes (Maybe (NonEmpty Text))

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   limit is not currently enforced.
describeFleetLocationAttributes_limit :: Lens' DescribeFleetLocationAttributes (Maybe Natural)

-- | A unique identifier for the fleet to retrieve remote locations for.
--   You can use either the fleet ID or ARN value.
describeFleetLocationAttributes_fleetId :: Lens' DescribeFleetLocationAttributes Text

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeFleetLocationAttributesResponse_nextToken :: Lens' DescribeFleetLocationAttributesResponse (Maybe Text)

-- | A unique identifier for the fleet that location attributes were
--   requested for.
describeFleetLocationAttributesResponse_fleetId :: Lens' DescribeFleetLocationAttributesResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
describeFleetLocationAttributesResponse_fleetArn :: Lens' DescribeFleetLocationAttributesResponse (Maybe Text)

-- | Location-specific information on the requested fleet's remote
--   locations.
describeFleetLocationAttributesResponse_locationAttributes :: Lens' DescribeFleetLocationAttributesResponse (Maybe [LocationAttributes])

-- | The response's http status code.
describeFleetLocationAttributesResponse_httpStatus :: Lens' DescribeFleetLocationAttributesResponse Int

-- | A unique identifier for a matchmaking ticket. You can include up to 10
--   ID values.
describeMatchmaking_ticketIds :: Lens' DescribeMatchmaking [Text]

-- | A collection of existing matchmaking ticket objects matching the
--   request.
describeMatchmakingResponse_ticketList :: Lens' DescribeMatchmakingResponse (Maybe [MatchmakingTicket])

-- | The response's http status code.
describeMatchmakingResponse_httpStatus :: Lens' DescribeMatchmakingResponse Int

-- | A unique identifier for the game session to get logs for.
getGameSessionLogUrl_gameSessionId :: Lens' GetGameSessionLogUrl Text

-- | Location of the requested game session logs, available for download.
--   This URL is valid for 15 minutes, after which S3 will reject any
--   download request using this URL. You can request a new URL any time
--   within the 14-day period that the logs are retained.
getGameSessionLogUrlResponse_preSignedUrl :: Lens' GetGameSessionLogUrlResponse (Maybe Text)

-- | The response's http status code.
getGameSessionLogUrlResponse_httpStatus :: Lens' GetGameSessionLogUrlResponse Int

-- | A list of one or more matchmaking rule set names to retrieve details
--   for. (Note: The rule set name is different from the optional "name"
--   field in the rule set body.) You can use either the rule set name or
--   ARN value.
describeMatchmakingRuleSets_names :: Lens' DescribeMatchmakingRuleSets (Maybe (NonEmpty Text))

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeMatchmakingRuleSets_nextToken :: Lens' DescribeMatchmakingRuleSets (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeMatchmakingRuleSets_limit :: Lens' DescribeMatchmakingRuleSets (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeMatchmakingRuleSetsResponse_nextToken :: Lens' DescribeMatchmakingRuleSetsResponse (Maybe Text)

-- | The response's http status code.
describeMatchmakingRuleSetsResponse_httpStatus :: Lens' DescribeMatchmakingRuleSetsResponse Int

-- | A collection of requested matchmaking rule set objects.
describeMatchmakingRuleSetsResponse_ruleSets :: Lens' DescribeMatchmakingRuleSetsResponse [MatchmakingRuleSet]

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
suspendGameServerGroup_gameServerGroupName :: Lens' SuspendGameServerGroup Text

-- | The activity to suspend for this game server group.
suspendGameServerGroup_suspendActions :: Lens' SuspendGameServerGroup (NonEmpty GameServerGroupAction)

-- | An object that describes the game server group resource, with the
--   <tt>SuspendedActions</tt> property updated to reflect the suspended
--   activity.
suspendGameServerGroupResponse_gameServerGroup :: Lens' SuspendGameServerGroupResponse (Maybe GameServerGroup)

-- | The response's http status code.
suspendGameServerGroupResponse_httpStatus :: Lens' SuspendGameServerGroupResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeScalingPolicies_nextToken :: Lens' DescribeScalingPolicies (Maybe Text)

-- | Scaling policy status to filter results on. A scaling policy is only
--   in force when in an <tt>ACTIVE</tt> status.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy is currently in force.</li>
--   <li><b>UPDATEREQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETEREQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
describeScalingPolicies_statusFilter :: Lens' DescribeScalingPolicies (Maybe ScalingStatusType)

-- | CONTENT TODO
describeScalingPolicies_location :: Lens' DescribeScalingPolicies (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeScalingPolicies_limit :: Lens' DescribeScalingPolicies (Maybe Natural)

-- | A unique identifier for the fleet to retrieve scaling policies for.
--   You can use either the fleet ID or ARN value.
describeScalingPolicies_fleetId :: Lens' DescribeScalingPolicies Text

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeScalingPoliciesResponse_nextToken :: Lens' DescribeScalingPoliciesResponse (Maybe Text)

-- | A collection of objects containing the scaling policies matching the
--   request.
describeScalingPoliciesResponse_scalingPolicies :: Lens' DescribeScalingPoliciesResponse (Maybe [ScalingPolicy])

-- | The response's http status code.
describeScalingPoliciesResponse_httpStatus :: Lens' DescribeScalingPoliciesResponse Int

-- | A collection of matchmaking rules to validate, formatted as a JSON
--   string.
validateMatchmakingRuleSet_ruleSetBody :: Lens' ValidateMatchmakingRuleSet Text

-- | A response indicating whether the rule set is valid.
validateMatchmakingRuleSetResponse_valid :: Lens' ValidateMatchmakingRuleSetResponse (Maybe Bool)

-- | The response's http status code.
validateMatchmakingRuleSetResponse_httpStatus :: Lens' ValidateMatchmakingRuleSetResponse Int

-- | A unique identifier for the build to retrieve properties for. You can
--   use either the build ID or ARN value.
describeBuild_buildId :: Lens' DescribeBuild Text

-- | Set of properties describing the requested build.
describeBuildResponse_build :: Lens' DescribeBuildResponse (Maybe Build)

-- | The response's http status code.
describeBuildResponse_httpStatus :: Lens' DescribeBuildResponse Int

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
deregisterGameServer_gameServerGroupName :: Lens' DeregisterGameServer Text

-- | A custom string that uniquely identifies the game server to
--   deregister.
deregisterGameServer_gameServerId :: Lens' DeregisterGameServer Text

-- | A collection of port settings to be added to the fleet resource.
updateFleetPortSettings_inboundPermissionAuthorizations :: Lens' UpdateFleetPortSettings (Maybe [IpPermission])

-- | A collection of port settings to be removed from the fleet resource.
updateFleetPortSettings_inboundPermissionRevocations :: Lens' UpdateFleetPortSettings (Maybe [IpPermission])

-- | A unique identifier for the fleet to update port settings for. You can
--   use either the fleet ID or ARN value.
updateFleetPortSettings_fleetId :: Lens' UpdateFleetPortSettings Text

-- | A unique identifier for the fleet that was updated.
updateFleetPortSettingsResponse_fleetId :: Lens' UpdateFleetPortSettingsResponse (Maybe Text)

-- | The response's http status code.
updateFleetPortSettingsResponse_httpStatus :: Lens' UpdateFleetPortSettingsResponse Int

-- | A unique identifier for a matchmaking ticket. The ticket must be in
--   status <tt>REQUIRES_ACCEPTANCE</tt>; otherwise this request will fail.
acceptMatch_ticketId :: Lens' AcceptMatch Text

-- | A unique identifier for a player delivering the response. This
--   parameter can include one or multiple player IDs.
acceptMatch_playerIds :: Lens' AcceptMatch [Text]

-- | Player response to the proposed match.
acceptMatch_acceptanceType :: Lens' AcceptMatch AcceptanceType

-- | The response's http status code.
acceptMatchResponse_httpStatus :: Lens' AcceptMatchResponse Int

-- | The minimum number of instances that are allowed in the specified
--   fleet location. If this parameter is not set, the default is 0.
updateFleetCapacity_minSize :: Lens' UpdateFleetCapacity (Maybe Natural)

-- | The maximum number of instances that are allowed in the specified
--   fleet location. If this parameter is not set, the default is 1.
updateFleetCapacity_maxSize :: Lens' UpdateFleetCapacity (Maybe Natural)

-- | The name of a remote location to update fleet capacity settings for,
--   in the form of an AWS Region code such as <tt>us-west-2</tt>.
updateFleetCapacity_location :: Lens' UpdateFleetCapacity (Maybe Text)

-- | The number of EC2 instances you want to maintain in the specified
--   fleet location. This value must fall between the minimum and maximum
--   size limits.
updateFleetCapacity_desiredInstances :: Lens' UpdateFleetCapacity (Maybe Natural)

-- | A unique identifier for the fleet to update capacity settings for. You
--   can use either the fleet ID or ARN value.
updateFleetCapacity_fleetId :: Lens' UpdateFleetCapacity Text

-- | A unique identifier for the fleet that was updated.
updateFleetCapacityResponse_fleetId :: Lens' UpdateFleetCapacityResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
updateFleetCapacityResponse_fleetArn :: Lens' UpdateFleetCapacityResponse (Maybe Text)

-- | The remote location being updated, expressed as an AWS Region code,
--   such as <tt>us-west-2</tt>.
updateFleetCapacityResponse_location :: Lens' UpdateFleetCapacityResponse (Maybe Text)

-- | The response's http status code.
updateFleetCapacityResponse_httpStatus :: Lens' UpdateFleetCapacityResponse Int

-- | The unique identifier for the fleet alias that you want to retrieve.
--   You can use either the alias ID or ARN value.
describeAlias_aliasId :: Lens' DescribeAlias Text

-- | The requested alias resource.
describeAliasResponse_alias :: Lens' DescribeAliasResponse (Maybe Alias)

-- | The response's http status code.
describeAliasResponse_httpStatus :: Lens' DescribeAliasResponse Int

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to and uniquely
--   identifies the GameLift resource that you want to remove tags from.
--   GameLift resource ARNs are included in the data object for the
--   resource, which can be retrieved by calling a List or Describe
--   operation for the resource type.
untagResource_resourceARN :: Lens' UntagResource Text

-- | A list of one or more tag keys to remove from the specified GameLift
--   resource. An AWS resource can have only one tag with a specific tag
--   key, so specifying the tag key identifies which tag to remove.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | A descriptive label that is associated with a fleet. Fleet names do
--   not need to be unique.
updateFleetAttributes_name :: Lens' UpdateFleetAttributes (Maybe Text)

-- | The game session protection policy to apply to all new instances
--   created in this fleet. Instances that already exist are not affected.
--   You can set protection for individual instances using
--   UpdateGameSession.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
updateFleetAttributes_newGameSessionProtectionPolicy :: Lens' UpdateFleetAttributes (Maybe ProtectionPolicy)

-- | Policy settings that limit the number of game sessions an individual
--   player can create over a span of time.
updateFleetAttributes_resourceCreationLimitPolicy :: Lens' UpdateFleetAttributes (Maybe ResourceCreationLimitPolicy)

-- | A human-readable description of a fleet.
updateFleetAttributes_description :: Lens' UpdateFleetAttributes (Maybe Text)

-- | The name of a metric group to add this fleet to. Use a metric group in
--   Amazon CloudWatch to aggregate the metrics from multiple fleets.
--   Provide an existing metric group name, or create a new metric group by
--   providing a new name. A fleet can only be in one metric group at a
--   time.
updateFleetAttributes_metricGroups :: Lens' UpdateFleetAttributes (Maybe [Text])

-- | A unique identifier for the fleet to update attribute metadata for.
--   You can use either the fleet ID or ARN value.
updateFleetAttributes_fleetId :: Lens' UpdateFleetAttributes Text

-- | A unique identifier for the fleet that was updated.
updateFleetAttributesResponse_fleetId :: Lens' UpdateFleetAttributesResponse (Maybe Text)

-- | The response's http status code.
updateFleetAttributesResponse_httpStatus :: Lens' UpdateFleetAttributesResponse Int

-- | Information to be added to all events that are related to this game
--   session queue.
updateGameSessionQueue_customEventData :: Lens' UpdateGameSessionQueue (Maybe Text)

-- | A set of policies that act as a sliding cap on player latency. FleetIQ
--   works to deliver low latency for most players in a game session. These
--   policies ensure that no individual player can be placed into a game
--   with unreasonably high latency. Use multiple policies to gradually
--   relax latency requirements a step at a time. Multiple policies are
--   applied based on their maximum allowed latency, starting with the
--   lowest value. When updating policies, provide a complete collection of
--   policies.
updateGameSessionQueue_playerLatencyPolicies :: Lens' UpdateGameSessionQueue (Maybe [PlayerLatencyPolicy])

-- | Custom settings to use when prioritizing destinations and locations
--   for game session placements. This configuration replaces the FleetIQ
--   default prioritization process. Priority types that are not explicitly
--   named will be automatically applied at the end of the prioritization
--   process. To remove an existing priority configuration, pass in an
--   empty set.
updateGameSessionQueue_priorityConfiguration :: Lens' UpdateGameSessionQueue (Maybe PriorityConfiguration)

-- | A list of fleets and/or fleet aliases that can be used to fulfill game
--   session placement requests in the queue. Destinations are identified
--   by either a fleet ARN or a fleet alias ARN, and are listed in order of
--   placement preference. When updating this list, provide a complete list
--   of destinations.
updateGameSessionQueue_destinations :: Lens' UpdateGameSessionQueue (Maybe [GameSessionQueueDestination])

-- | The maximum time, in seconds, that a new game session placement
--   request remains in the queue. When a request exceeds this time, the
--   game session placement changes to a <tt>TIMED_OUT</tt> status.
updateGameSessionQueue_timeoutInSeconds :: Lens' UpdateGameSessionQueue (Maybe Natural)

-- | An SNS topic ARN that is set up to receive game session placement
--   notifications. See <a>Setting up notifications for game session
--   placement</a>.
updateGameSessionQueue_notificationTarget :: Lens' UpdateGameSessionQueue (Maybe Text)

-- | A list of locations where a queue is allowed to place new game
--   sessions. Locations are specified in the form of AWS Region codes,
--   such as <tt>us-west-2</tt>. If this parameter is not set, game
--   sessions can be placed in any queue location. To remove an existing
--   filter configuration, pass in an empty set.
updateGameSessionQueue_filterConfiguration :: Lens' UpdateGameSessionQueue (Maybe FilterConfiguration)

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region. You can use either the queue
--   ID or ARN value.
updateGameSessionQueue_name :: Lens' UpdateGameSessionQueue Text

-- | An object that describes the newly updated game session queue.
updateGameSessionQueueResponse_gameSessionQueue :: Lens' UpdateGameSessionQueueResponse (Maybe GameSessionQueue)

-- | The response's http status code.
updateGameSessionQueueResponse_httpStatus :: Lens' UpdateGameSessionQueueResponse Int

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to and uniquely
--   identifies the GameLift resource that you want to assign tags to.
--   GameLift resource ARNs are included in the data object for the
--   resource, which can be retrieved by calling a List or Describe
--   operation for the resource type.
tagResource_resourceARN :: Lens' TagResource Text

-- | A list of one or more tags to assign to the specified GameLift
--   resource. Tags are developer-defined and structured as key-value
--   pairs. The maximum tag limit may be lower than stated. See <a>Tagging
--   AWS Resources</a> for actual tagging limits.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | A unique identifier for the fleet. This fleet specified must match the
--   fleet referenced in the VPC peering connection record. You can use
--   either the fleet ID or ARN value.
deleteVpcPeeringConnection_fleetId :: Lens' DeleteVpcPeeringConnection Text

-- | A unique identifier for a VPC peering connection. This value is
--   included in the VpcPeeringConnection object, which can be retrieved by
--   calling DescribeVpcPeeringConnections.
deleteVpcPeeringConnection_vpcPeeringConnectionId :: Lens' DeleteVpcPeeringConnection Text

-- | The response's http status code.
deleteVpcPeeringConnectionResponse_httpStatus :: Lens' DeleteVpcPeeringConnectionResponse Int

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region. You can use either the queue
--   ID or ARN value.
deleteGameSessionQueue_name :: Lens' DeleteGameSessionQueue Text

-- | The response's http status code.
deleteGameSessionQueueResponse_httpStatus :: Lens' DeleteGameSessionQueueResponse Int

-- | A unique identifier for the matchmaking configuration. You can use
--   either the configuration name or ARN value.
deleteMatchmakingConfiguration_name :: Lens' DeleteMatchmakingConfiguration Text

-- | The response's http status code.
deleteMatchmakingConfigurationResponse_httpStatus :: Lens' DeleteMatchmakingConfigurationResponse Int

-- | Indicates whether this matchmaking configuration is being used with
--   GameLift hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
updateMatchmakingConfiguration_flexMatchMode :: Lens' UpdateMatchmakingConfiguration (Maybe FlexMatchMode)

-- | Information to add to all events related to the matchmaking
--   configuration.
updateMatchmakingConfiguration_customEventData :: Lens' UpdateMatchmakingConfiguration (Maybe Text)

-- | The method that is used to backfill game sessions created with this
--   matchmaking configuration. Specify MANUAL when your game manages
--   backfill requests manually or does not use the match backfill feature.
--   Specify AUTOMATIC to have GameLift create a StartMatchBackfill request
--   whenever a game session has one or more open slots. Learn more about
--   manual and automatic backfill in <a>Backfill Existing Games with
--   FlexMatch</a>. Automatic backfill is not available when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
updateMatchmakingConfiguration_backfillMode :: Lens' UpdateMatchmakingConfiguration (Maybe BackfillMode)

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>). This information is added to the new
--   GameSession object that is created for a successful match. This
--   parameter is not used if <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
updateMatchmakingConfiguration_gameProperties :: Lens' UpdateMatchmakingConfiguration (Maybe [GameProperty])

-- | The length of time (in seconds) to wait for players to accept a
--   proposed match, if acceptance is required.
updateMatchmakingConfiguration_acceptanceTimeoutSeconds :: Lens' UpdateMatchmakingConfiguration (Maybe Natural)

-- | The number of player slots in a match to keep open for future players.
--   For example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   if <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
updateMatchmakingConfiguration_additionalPlayerCount :: Lens' UpdateMatchmakingConfiguration (Maybe Natural)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
updateMatchmakingConfiguration_gameSessionData :: Lens' UpdateMatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. If <tt>FlexMatchMode</tt> is set
--   to <tt>STANDALONE</tt>, do not set this parameter.
updateMatchmakingConfiguration_gameSessionQueueArns :: Lens' UpdateMatchmakingConfiguration (Maybe [Text])

-- | An SNS topic ARN that is set up to receive matchmaking notifications.
--   See <a>Setting up notifications for matchmaking</a> for more
--   information.
updateMatchmakingConfiguration_notificationTarget :: Lens' UpdateMatchmakingConfiguration (Maybe Text)

-- | The maximum duration, in seconds, that a matchmaking ticket can remain
--   in process before timing out. Requests that fail due to timing out can
--   be resubmitted as needed.
updateMatchmakingConfiguration_requestTimeoutSeconds :: Lens' UpdateMatchmakingConfiguration (Maybe Natural)

-- | A descriptive label that is associated with matchmaking configuration.
updateMatchmakingConfiguration_description :: Lens' UpdateMatchmakingConfiguration (Maybe Text)

-- | A unique identifier for the matchmaking rule set to use with this
--   configuration. You can use either the rule set name or ARN value. A
--   matchmaking configuration can only use rule sets that are defined in
--   the same Region.
updateMatchmakingConfiguration_ruleSetName :: Lens' UpdateMatchmakingConfiguration (Maybe Text)

-- | A flag that indicates whether a match that was created with this
--   configuration must be accepted by the matched players. To require
--   acceptance, set to TRUE. With this option enabled, matchmaking tickets
--   use the status <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a
--   completed potential match is waiting for player acceptance.
updateMatchmakingConfiguration_acceptanceRequired :: Lens' UpdateMatchmakingConfiguration (Maybe Bool)

-- | A unique identifier for the matchmaking configuration to update. You
--   can use either the configuration name or ARN value.
updateMatchmakingConfiguration_name :: Lens' UpdateMatchmakingConfiguration Text

-- | The updated matchmaking configuration.
updateMatchmakingConfigurationResponse_configuration :: Lens' UpdateMatchmakingConfigurationResponse (Maybe MatchmakingConfiguration)

-- | The response's http status code.
updateMatchmakingConfigurationResponse_httpStatus :: Lens' UpdateMatchmakingConfigurationResponse Int

-- | A unique identifier for the build to get credentials for. You can use
--   either the build ID or ARN value.
requestUploadCredentials_buildId :: Lens' RequestUploadCredentials Text

-- | Amazon S3 path and key, identifying where the game build files are
--   stored.
requestUploadCredentialsResponse_storageLocation :: Lens' RequestUploadCredentialsResponse (Maybe S3Location)

-- | AWS credentials required when uploading a game build to the storage
--   location. These credentials have a limited lifespan and are valid only
--   for the build they were issued for.
requestUploadCredentialsResponse_uploadCredentials :: Lens' RequestUploadCredentialsResponse (Maybe AwsCredentials)

-- | The response's http status code.
requestUploadCredentialsResponse_httpStatus :: Lens' RequestUploadCredentialsResponse Int

-- | A unique identifier for the fleet to request location capacity for.
--   You can use either the fleet ID or ARN value.
describeFleetLocationCapacity_fleetId :: Lens' DescribeFleetLocationCapacity Text

-- | The fleet location to retrieve capacity information for. Specify a
--   location in the form of an AWS Region code, such as
--   <tt>us-west-2</tt>.
describeFleetLocationCapacity_location :: Lens' DescribeFleetLocationCapacity Text

-- | Resource capacity information for the requested fleet location.
--   Capacity objects are returned only for fleets and locations that
--   currently exist.
describeFleetLocationCapacityResponse_fleetCapacity :: Lens' DescribeFleetLocationCapacityResponse (Maybe FleetCapacity)

-- | The response's http status code.
describeFleetLocationCapacityResponse_httpStatus :: Lens' DescribeFleetLocationCapacityResponse Int

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
registerGameServer_gameServerData :: Lens' RegisterGameServer (Maybe Text)

-- | Information that is needed to make inbound client connections to the
--   game server. This might include the IP address and port, DNS name, and
--   other information.
registerGameServer_connectionInfo :: Lens' RegisterGameServer (Maybe Text)

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
registerGameServer_gameServerGroupName :: Lens' RegisterGameServer Text

-- | A custom string that uniquely identifies the game server to register.
--   Game server IDs are developer-defined and must be unique across all
--   game server groups in your AWS account.
registerGameServer_gameServerId :: Lens' RegisterGameServer Text

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
registerGameServer_instanceId :: Lens' RegisterGameServer Text

-- | Object that describes the newly registered game server.
registerGameServerResponse_gameServer :: Lens' RegisterGameServerResponse (Maybe GameServer)

-- | The response's http status code.
registerGameServerResponse_httpStatus :: Lens' RegisterGameServerResponse Int

-- | Used when peering your GameLift fleet with a VPC, the unique
--   identifier for the AWS account that owns the VPC. You can find your
--   account ID in the AWS Management Console under account settings.
createFleet_peerVpcAwsAccountId :: Lens' CreateFleet (Maybe Text)

-- | Indicates whether to use On-Demand or Spot instances for this fleet.
--   By default, this property is set to <tt>ON_DEMAND</tt>. Learn more
--   about when to use <a>On-Demand versus Spot Instances</a>. This
--   property cannot be changed after the fleet is created.
createFleet_fleetType :: Lens' CreateFleet (Maybe FleetType)

-- | A unique identifier for an AWS IAM role that manages access to your
--   AWS services. With an instance role ARN set, any application that runs
--   on an instance in this fleet can assume the role, including install
--   scripts, server processes, and daemons (background processes). Create
--   a role or look up a role's ARN by using the <a>IAM dashboard</a> in
--   the AWS Management Console. Learn more about using on-box credentials
--   for your game servers at <a>Access external resources from a game
--   server</a>. This property cannot be changed after the fleet is
--   created.
createFleet_instanceRoleArn :: Lens' CreateFleet (Maybe Text)

-- | Prompts GameLift to generate a TLS/SSL certificate for the fleet. TLS
--   certificates are used for encrypting traffic between game clients and
--   the game servers that are running on GameLift. By default, the
--   <tt>CertificateConfiguration</tt> is set to <tt>DISABLED</tt>. Learn
--   more at <a>Securing Client/Server Communication</a>. This property
--   cannot be changed after the fleet is created.
--   
--   Note: This feature requires the AWS Certificate Manager (ACM) service,
--   which is not available in all AWS regions. When working in a region
--   that does not support this feature, a fleet creation request with
--   certificate generation fails with a 4xx error.
createFleet_certificateConfiguration :: Lens' CreateFleet (Maybe CertificateConfiguration)

-- | <b>This parameter is no longer used.</b> Specify a server launch path
--   using the <tt>RuntimeConfiguration</tt> parameter. Requests that use
--   this parameter instead continue to be valid.
createFleet_serverLaunchPath :: Lens' CreateFleet (Maybe Text)

-- | <b>This parameter is no longer used.</b> To specify where GameLift
--   should store log files once a server process shuts down, use the
--   GameLift server API <tt>ProcessReady()</tt> and specify one or more
--   directory paths in <tt>logParameters</tt>. See more information in the
--   <a>Server API Reference</a>.
createFleet_logPaths :: Lens' CreateFleet (Maybe [Text])

-- | <b>This parameter is no longer used.</b> Specify server launch
--   parameters using the <tt>RuntimeConfiguration</tt> parameter. Requests
--   that use this parameter instead continue to be valid.
createFleet_serverLaunchParameters :: Lens' CreateFleet (Maybe Text)

-- | The status of termination protection for active game sessions on the
--   fleet. By default, this property is set to <tt>NoProtection</tt>. You
--   can also set game session protection for an individual game session by
--   calling UpdateGameSession.
--   
--   <ul>
--   <li><b>NoProtection</b> - Game sessions can be terminated during
--   active gameplay as a result of a scale-down event.</li>
--   <li><b>FullProtection</b> - Game sessions in <tt>ACTIVE</tt> status
--   cannot be terminated during a scale-down event.</li>
--   </ul>
createFleet_newGameSessionProtectionPolicy :: Lens' CreateFleet (Maybe ProtectionPolicy)

-- | Instructions for how to launch and maintain server processes on
--   instances in the fleet. The runtime configuration defines one or more
--   server process configurations, each identifying a build executable or
--   Realtime script file and the number of processes of that type to run
--   concurrently.
--   
--   The <tt>RuntimeConfiguration</tt> parameter is required unless the
--   fleet is being configured using the older parameters
--   <tt>ServerLaunchPath</tt> and <tt>ServerLaunchParameters</tt>, which
--   are still supported for backward compatibility.
createFleet_runtimeConfiguration :: Lens' CreateFleet (Maybe RuntimeConfiguration)

-- | A list of labels to assign to the new fleet resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the fleet is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   /AWS General Reference/ for actual tagging limits.
createFleet_tags :: Lens' CreateFleet (Maybe [Tag])

-- | The allowed IP address ranges and port settings that allow inbound
--   traffic to access game sessions on this fleet. If the fleet is hosting
--   a custom game build, this property must be set before players can
--   connect to game sessions. For Realtime Servers fleets, GameLift
--   automatically sets TCP and UDP ranges.
createFleet_eC2InboundPermissions :: Lens' CreateFleet (Maybe [IpPermission])

-- | A set of remote locations to deploy additional instances to and manage
--   as part of the fleet. This parameter can only be used when creating
--   fleets in AWS Regions that support multiple locations. You can add any
--   GameLift-supported AWS Region as a remote location, in the form of an
--   AWS Region code such as <tt>us-west-2</tt>. To create a fleet with
--   instances in the home Region only, omit this parameter.
createFleet_locations :: Lens' CreateFleet (Maybe (NonEmpty LocationConfiguration))

-- | A policy that limits the number of game sessions that an individual
--   player can create on instances in this fleet within a specified span
--   of time.
createFleet_resourceCreationLimitPolicy :: Lens' CreateFleet (Maybe ResourceCreationLimitPolicy)

-- | A human-readable description of the fleet.
createFleet_description :: Lens' CreateFleet (Maybe Text)

-- | The unique identifier for a custom game server build to be deployed on
--   fleet instances. You can use either the build ID or ARN. The build
--   must be uploaded to GameLift and in <tt>READY</tt> status. This fleet
--   property cannot be changed later.
createFleet_buildId :: Lens' CreateFleet (Maybe Text)

-- | The name of an AWS CloudWatch metric group to add this fleet to. A
--   metric group is used to aggregate the metrics for multiple fleets. You
--   can specify an existing metric group name or set a new name to create
--   a new metric group. A fleet can be included in only one metric group
--   at a time.
createFleet_metricGroups :: Lens' CreateFleet (Maybe [Text])

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
createFleet_peerVpcId :: Lens' CreateFleet (Maybe Text)

-- | The unique identifier for a Realtime configuration script to be
--   deployed on fleet instances. You can use either the script ID or ARN.
--   Scripts must be uploaded to GameLift prior to creating the fleet. This
--   fleet property cannot be changed later.
createFleet_scriptId :: Lens' CreateFleet (Maybe Text)

-- | A descriptive label that is associated with a fleet. Fleet names do
--   not need to be unique.
createFleet_name :: Lens' CreateFleet Text

-- | The GameLift-supported EC2 instance type to use for all fleet
--   instances. Instance type determines the computing resources that will
--   be used to host your game servers, including CPU, memory, storage, and
--   networking capacity. See <a>Amazon EC2 Instance Types</a> for detailed
--   descriptions of EC2 instance types.
createFleet_eC2InstanceType :: Lens' CreateFleet EC2InstanceType

-- | The fleet's locations and life-cycle status of each location. For new
--   fleets, the status of all locations is set to <tt>NEW</tt>. During
--   fleet creation, GameLift updates each location status as instances are
--   deployed there and prepared for game hosting. This list includes an
--   entry for the fleet's home Region. For fleets with no remote
--   locations, only one entry, representing the home Region, is returned.
createFleetResponse_locationStates :: Lens' CreateFleetResponse (Maybe [LocationState])

-- | The properties for the new fleet, including the current status. All
--   fleets are placed in <tt>NEW</tt> status on creation.
createFleetResponse_fleetAttributes :: Lens' CreateFleetResponse (Maybe FleetAttributes)

-- | The response's http status code.
createFleetResponse_httpStatus :: Lens' CreateFleetResponse Int

-- | A unique identifier for the matchmaking configuration(s) to retrieve.
--   You can use either the configuration name or ARN value. To request all
--   existing configurations, leave this parameter empty.
describeMatchmakingConfigurations_names :: Lens' DescribeMatchmakingConfigurations (Maybe [Text])

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeMatchmakingConfigurations_nextToken :: Lens' DescribeMatchmakingConfigurations (Maybe Text)

-- | A unique identifier for the matchmaking rule set. You can use either
--   the rule set name or ARN value. Use this parameter to retrieve all
--   matchmaking configurations that use this rule set.
describeMatchmakingConfigurations_ruleSetName :: Lens' DescribeMatchmakingConfigurations (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. This
--   parameter is limited to 10.
describeMatchmakingConfigurations_limit :: Lens' DescribeMatchmakingConfigurations (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeMatchmakingConfigurationsResponse_nextToken :: Lens' DescribeMatchmakingConfigurationsResponse (Maybe Text)

-- | A collection of requested matchmaking configurations.
describeMatchmakingConfigurationsResponse_configurations :: Lens' DescribeMatchmakingConfigurationsResponse (Maybe [MatchmakingConfiguration])

-- | The response's http status code.
describeMatchmakingConfigurationsResponse_httpStatus :: Lens' DescribeMatchmakingConfigurationsResponse Int

-- | The unique identifier of the alias that you want to retrieve a fleet
--   ID for. You can use either the alias ID or ARN value.
resolveAlias_aliasId :: Lens' ResolveAlias Text

-- | The fleet identifier that the alias is pointing to.
resolveAliasResponse_fleetId :: Lens' ResolveAliasResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet resource that this alias points to.
resolveAliasResponse_fleetArn :: Lens' ResolveAliasResponse (Maybe Text)

-- | The response's http status code.
resolveAliasResponse_httpStatus :: Lens' ResolveAliasResponse Int

-- | A unique identifier for the fleet to be deleted. You can use either
--   the fleet ID or ARN value.
deleteFleet_fleetId :: Lens' DeleteFleet Text

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeGameSessionDetails_nextToken :: Lens' DescribeGameSessionDetails (Maybe Text)

-- | A unique identifier for the fleet to retrieve all game sessions active
--   on the fleet. You can use either the fleet ID or ARN value.
describeGameSessionDetails_fleetId :: Lens' DescribeGameSessionDetails (Maybe Text)

-- | A unique identifier for the game session to retrieve.
describeGameSessionDetails_gameSessionId :: Lens' DescribeGameSessionDetails (Maybe Text)

-- | Game session status to filter results on. Possible game session
--   statuses include <tt>ACTIVE</tt>, <tt>TERMINATED</tt>,
--   <tt>ACTIVATING</tt> and <tt>TERMINATING</tt> (the last two are
--   transitory).
describeGameSessionDetails_statusFilter :: Lens' DescribeGameSessionDetails (Maybe Text)

-- | A unique identifier for the alias associated with the fleet to
--   retrieve all game sessions for. You can use either the alias ID or ARN
--   value.
describeGameSessionDetails_aliasId :: Lens' DescribeGameSessionDetails (Maybe Text)

-- | A fleet location to get game sessions for. You can specify a fleet's
--   home Region or a remote location. Use the AWS Region code format, such
--   as <tt>us-west-2</tt>.
describeGameSessionDetails_location :: Lens' DescribeGameSessionDetails (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeGameSessionDetails_limit :: Lens' DescribeGameSessionDetails (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeGameSessionDetailsResponse_nextToken :: Lens' DescribeGameSessionDetailsResponse (Maybe Text)

-- | A collection of properties for each game session that matches the
--   request.
describeGameSessionDetailsResponse_gameSessionDetails :: Lens' DescribeGameSessionDetailsResponse (Maybe [GameSessionDetail])

-- | The response's http status code.
describeGameSessionDetailsResponse_httpStatus :: Lens' DescribeGameSessionDetailsResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
listFleets_nextToken :: Lens' ListFleets (Maybe Text)

-- | A unique identifier for the build to request fleets for. Use this
--   parameter to return only fleets using a specified build. Use either
--   the build ID or ARN value.
listFleets_buildId :: Lens' ListFleets (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
listFleets_limit :: Lens' ListFleets (Maybe Natural)

-- | A unique identifier for the Realtime script to request fleets for. Use
--   this parameter to return only fleets using a specified script. Use
--   either the script ID or ARN value.
listFleets_scriptId :: Lens' ListFleets (Maybe Text)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
listFleetsResponse_nextToken :: Lens' ListFleetsResponse (Maybe Text)

-- | A set of fleet IDs that match the list request. You can retrieve
--   additional information about all returned fleets by passing this
--   result set to a DescribeFleetAttributes, DescribeFleetCapacity, or
--   DescribeFleetUtilization call.
listFleetsResponse_fleetIds :: Lens' ListFleetsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
listFleetsResponse_httpStatus :: Lens' ListFleetsResponse Int

-- | A unique identifier for a matchmaking ticket. If no ticket ID is
--   specified here, Amazon GameLift will generate one in the form of a
--   UUID. Use this identifier to track the match backfill ticket status
--   and retrieve match results.
startMatchBackfill_ticketId :: Lens' StartMatchBackfill (Maybe Text)

-- | A unique identifier for the game session. Use the game session ID.
--   When using FlexMatch as a standalone matchmaking solution, this
--   parameter is not needed.
startMatchBackfill_gameSessionArn :: Lens' StartMatchBackfill (Maybe Text)

-- | Name of the matchmaker to use for this request. You can use either the
--   configuration name or ARN value. The ARN of the matchmaker that was
--   used with the original game session is listed in the GameSession
--   object, <tt>MatchmakerData</tt> property.
startMatchBackfill_configurationName :: Lens' StartMatchBackfill Text

-- | Match information on all players that are currently assigned to the
--   game session. This information is used by the matchmaker to find new
--   players and add them to the existing game.
--   
--   <ul>
--   <li>PlayerID, PlayerAttributes, Team -- This information is maintained
--   in the GameSession object, <tt>MatchmakerData</tt> property, for all
--   players who are currently assigned to the game session. The matchmaker
--   data is in JSON syntax, formatted as a string. For more details, see
--   <a>Match Data</a>.</li>
--   <li>LatencyInMs -- If the matchmaker uses player latency, include a
--   latency value, in milliseconds, for the Region that the game session
--   is currently in. Do not include latency values for any other
--   Region.</li>
--   </ul>
startMatchBackfill_players :: Lens' StartMatchBackfill [Player]

-- | Ticket representing the backfill matchmaking request. This object
--   includes the information in the request, ticket status, and match
--   results as generated during the matchmaking process.
startMatchBackfillResponse_matchmakingTicket :: Lens' StartMatchBackfillResponse (Maybe MatchmakingTicket)

-- | The response's http status code.
startMatchBackfillResponse_httpStatus :: Lens' StartMatchBackfillResponse Int

-- | A unique identifier for a matchmaking ticket.
stopMatchmaking_ticketId :: Lens' StopMatchmaking Text

-- | The response's http status code.
stopMatchmakingResponse_httpStatus :: Lens' StopMatchmakingResponse Int

-- | A unique identifier for the fleet to add locations to. You can use
--   either the fleet ID or ARN value.
createFleetLocations_fleetId :: Lens' CreateFleetLocations Text

-- | A list of locations to deploy additional instances to and manage as
--   part of the fleet. You can add any GameLift-supported AWS Region as a
--   remote location, in the form of an AWS Region code such as
--   <tt>us-west-2</tt>.
createFleetLocations_locations :: Lens' CreateFleetLocations (NonEmpty LocationConfiguration)

-- | The remote locations that are being added to the fleet, and the
--   life-cycle status of each location. For new locations, the status is
--   set to <tt>NEW</tt>. During location creation, GameLift updates each
--   location's status as instances are deployed there and prepared for
--   game hosting. This list does not include the fleet home Region or any
--   remote locations that were already added to the fleet.
createFleetLocationsResponse_locationStates :: Lens' CreateFleetLocationsResponse (Maybe [LocationState])

-- | A unique identifier for the fleet that was updated with new locations.
createFleetLocationsResponse_fleetId :: Lens' CreateFleetLocationsResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
createFleetLocationsResponse_fleetArn :: Lens' CreateFleetLocationsResponse (Maybe Text)

-- | The response's http status code.
createFleetLocationsResponse_httpStatus :: Lens' CreateFleetLocationsResponse Int

-- | A list of labels to assign to the new matchmaking rule set resource.
--   Tags are developer-defined key-value pairs. Tagging AWS resources are
--   useful for resource management, access management and cost allocation.
--   For more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
createMatchmakingRuleSet_tags :: Lens' CreateMatchmakingRuleSet (Maybe [Tag])

-- | A unique identifier for the matchmaking rule set. A matchmaking
--   configuration identifies the rule set it uses by this name value. Note
--   that the rule set name is different from the optional <tt>name</tt>
--   field in the rule set body.
createMatchmakingRuleSet_name :: Lens' CreateMatchmakingRuleSet Text

-- | A collection of matchmaking rules, formatted as a JSON string.
--   Comments are not allowed in JSON, but most elements support a
--   description field.
createMatchmakingRuleSet_ruleSetBody :: Lens' CreateMatchmakingRuleSet Text

-- | The response's http status code.
createMatchmakingRuleSetResponse_httpStatus :: Lens' CreateMatchmakingRuleSetResponse Int

-- | The newly created matchmaking rule set.
createMatchmakingRuleSetResponse_ruleSet :: Lens' CreateMatchmakingRuleSetResponse MatchmakingRuleSet

-- | A unique identifier for a game session placement to retrieve.
describeGameSessionPlacement_placementId :: Lens' DescribeGameSessionPlacement Text

-- | Object that describes the requested game session placement.
describeGameSessionPlacementResponse_gameSessionPlacement :: Lens' DescribeGameSessionPlacementResponse (Maybe GameSessionPlacement)

-- | The response's http status code.
describeGameSessionPlacementResponse_httpStatus :: Lens' DescribeGameSessionPlacementResponse Int

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session.
createGameSession_gameProperties :: Lens' CreateGameSession (Maybe [GameProperty])

-- | Custom string that uniquely identifies the new game session request.
--   This is useful for ensuring that game session requests with the same
--   idempotency token are processed only once. Subsequent requests with
--   the same string return the original <tt>GameSession</tt> object, with
--   an updated status. Maximum token length is 48 characters. If provided,
--   this string is included in the new game session's ID. A game session
--   ARN has the following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>. Idempotency
--   tokens remain in use for 30 days after a game session has ended; game
--   session objects are retained for this time period and then deleted.
createGameSession_idempotencyToken :: Lens' CreateGameSession (Maybe Text)

-- | A unique identifier for a player or entity creating the game session.
--   This parameter is required when requesting a new game session on a
--   fleet with a resource creation limit policy. This type of policy
--   limits the number of concurrent active game sessions that one player
--   can create within a certain time span. GameLift uses the CreatorId to
--   evaluate the new request against the policy.
createGameSession_creatorId :: Lens' CreateGameSession (Maybe Text)

-- | A unique identifier for the fleet to create a game session in. You can
--   use either the fleet ID or ARN value. Each request must reference
--   either a fleet ID or alias ID, but not both.
createGameSession_fleetId :: Lens' CreateGameSession (Maybe Text)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session.
createGameSession_gameSessionData :: Lens' CreateGameSession (Maybe Text)

-- | /This parameter is no longer preferred. Please use
--   <tt>IdempotencyToken</tt> instead./ Custom string that uniquely
--   identifies a request for a new game session. Maximum token length is
--   48 characters. If provided, this string is included in the new game
--   session's ID.
createGameSession_gameSessionId :: Lens' CreateGameSession (Maybe Text)

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
createGameSession_name :: Lens' CreateGameSession (Maybe Text)

-- | A unique identifier for the alias associated with the fleet to create
--   a game session in. You can use either the alias ID or ARN value. Each
--   request must reference either a fleet ID or alias ID, but not both.
createGameSession_aliasId :: Lens' CreateGameSession (Maybe Text)

-- | A fleet's remote location to place the new game session in. If this
--   parameter is not set, the new game session is placed in the fleet's
--   home Region. Specify a remote location with an AWS Region code such as
--   <tt>us-west-2</tt>.
createGameSession_location :: Lens' CreateGameSession (Maybe Text)

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
createGameSession_maximumPlayerSessionCount :: Lens' CreateGameSession Natural

-- | Object that describes the newly created game session record.
createGameSessionResponse_gameSession :: Lens' CreateGameSessionResponse (Maybe GameSession)

-- | The response's http status code.
createGameSessionResponse_httpStatus :: Lens' CreateGameSessionResponse Int

-- | A unique identifier for a matchmaking ticket. If no ticket ID is
--   specified here, Amazon GameLift will generate one in the form of a
--   UUID. Use this identifier to track the matchmaking ticket status and
--   retrieve match results.
startMatchmaking_ticketId :: Lens' StartMatchmaking (Maybe Text)

-- | Name of the matchmaking configuration to use for this request.
--   Matchmaking configurations must exist in the same Region as this
--   request. You can use either the configuration name or ARN value.
startMatchmaking_configurationName :: Lens' StartMatchmaking Text

-- | Information on each player to be matched. This information must
--   include a player ID, and may contain player attributes and latency
--   data to be used in the matchmaking process. After a successful match,
--   <tt>Player</tt> objects contain the name of the team the player is
--   assigned to.
startMatchmaking_players :: Lens' StartMatchmaking [Player]

-- | Ticket representing the matchmaking request. This object include the
--   information included in the request, ticket status, and match results
--   as generated during the matchmaking process.
startMatchmakingResponse_matchmakingTicket :: Lens' StartMatchmakingResponse (Maybe MatchmakingTicket)

-- | The response's http status code.
startMatchmakingResponse_httpStatus :: Lens' StartMatchmakingResponse Int

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
deleteScalingPolicy_name :: Lens' DeleteScalingPolicy Text

-- | A unique identifier for the fleet to be deleted. You can use either
--   the fleet ID or ARN value.
deleteScalingPolicy_fleetId :: Lens' DeleteScalingPolicy Text

-- | A unique identifier for the fleet to request location utilization for.
--   You can use either the fleet ID or ARN value.
describeFleetLocationUtilization_fleetId :: Lens' DescribeFleetLocationUtilization Text

-- | The fleet location to retrieve utilization information for. Specify a
--   location in the form of an AWS Region code, such as
--   <tt>us-west-2</tt>.
describeFleetLocationUtilization_location :: Lens' DescribeFleetLocationUtilization Text

-- | Utilization information for the requested fleet location. Utilization
--   objects are returned only for fleets and locations that currently
--   exist.
describeFleetLocationUtilizationResponse_fleetUtilization :: Lens' DescribeFleetLocationUtilizationResponse (Maybe FleetUtilization)

-- | The response's http status code.
describeFleetLocationUtilizationResponse_httpStatus :: Lens' DescribeFleetLocationUtilizationResponse Int

-- | The EC2 instance IDs that you want to retrieve status on. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>. To retrieve all instances in the game
--   server group, leave this parameter empty.
describeGameServerInstances_instanceIds :: Lens' DescribeGameServerInstances (Maybe (NonEmpty Text))

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeGameServerInstances_nextToken :: Lens' DescribeGameServerInstances (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeGameServerInstances_limit :: Lens' DescribeGameServerInstances (Maybe Natural)

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
describeGameServerInstances_gameServerGroupName :: Lens' DescribeGameServerInstances Text

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeGameServerInstancesResponse_nextToken :: Lens' DescribeGameServerInstancesResponse (Maybe Text)

-- | The collection of requested game server instances.
describeGameServerInstancesResponse_gameServerInstances :: Lens' DescribeGameServerInstancesResponse (Maybe [GameServerInstance])

-- | The response's http status code.
describeGameServerInstancesResponse_httpStatus :: Lens' DescribeGameServerInstancesResponse Int

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>).
startGameSessionPlacement_gameProperties :: Lens' StartGameSessionPlacement (Maybe [GameProperty])

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
startGameSessionPlacement_gameSessionData :: Lens' StartGameSessionPlacement (Maybe Text)

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
startGameSessionPlacement_gameSessionName :: Lens' StartGameSessionPlacement (Maybe Text)

-- | Set of information on each player to create a player session for.
startGameSessionPlacement_desiredPlayerSessions :: Lens' StartGameSessionPlacement (Maybe [DesiredPlayerSession])

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions.
--   This information is used to try to place the new game session where it
--   can offer the best possible gameplay experience for the players.
startGameSessionPlacement_playerLatencies :: Lens' StartGameSessionPlacement (Maybe [PlayerLatency])

-- | A unique identifier to assign to the new game session placement. This
--   value is developer-defined. The value must be unique across all
--   Regions and cannot be reused unless you are resubmitting a canceled or
--   timed-out placement request.
startGameSessionPlacement_placementId :: Lens' StartGameSessionPlacement Text

-- | Name of the queue to use to place the new game session. You can use
--   either the queue name or ARN value.
startGameSessionPlacement_gameSessionQueueName :: Lens' StartGameSessionPlacement Text

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
startGameSessionPlacement_maximumPlayerSessionCount :: Lens' StartGameSessionPlacement Natural

-- | Object that describes the newly created game session placement. This
--   object includes all the information provided in the request, as well
--   as start/end time stamps and placement status.
startGameSessionPlacementResponse_gameSessionPlacement :: Lens' StartGameSessionPlacementResponse (Maybe GameSessionPlacement)

-- | The response's http status code.
startGameSessionPlacementResponse_httpStatus :: Lens' StartGameSessionPlacementResponse Int

-- | A unique identifier for the matchmaking rule set to be deleted. (Note:
--   The rule set name is different from the optional "name" field in the
--   rule set body.) You can use either the rule set name or ARN value.
deleteMatchmakingRuleSet_name :: Lens' DeleteMatchmakingRuleSet Text

-- | The response's http status code.
deleteMatchmakingRuleSetResponse_httpStatus :: Lens' DeleteMatchmakingRuleSetResponse Int

-- | A unique identifier for the fleet to delete locations for. You can use
--   either the fleet ID or ARN value.
deleteFleetLocations_fleetId :: Lens' DeleteFleetLocations Text

-- | The list of fleet locations to delete. Specify locations in the form
--   of an AWS Region code, such as <tt>us-west-2</tt>.
deleteFleetLocations_locations :: Lens' DeleteFleetLocations (NonEmpty Text)

-- | The remote locations that are being deleted, with each location status
--   set to <tt>DELETING</tt>.
deleteFleetLocationsResponse_locationStates :: Lens' DeleteFleetLocationsResponse (Maybe [LocationState])

-- | A unique identifier for the fleet that location attributes are being
--   deleted for.
deleteFleetLocationsResponse_fleetId :: Lens' DeleteFleetLocationsResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
deleteFleetLocationsResponse_fleetArn :: Lens' DeleteFleetLocationsResponse (Maybe Text)

-- | The response's http status code.
deleteFleetLocationsResponse_httpStatus :: Lens' DeleteFleetLocationsResponse Int

-- | A unique identifier for a game session placement to cancel.
stopGameSessionPlacement_placementId :: Lens' StopGameSessionPlacement Text

-- | Object that describes the canceled game session placement, with
--   <tt>CANCELLED</tt> status and an end time stamp.
stopGameSessionPlacementResponse_gameSessionPlacement :: Lens' StopGameSessionPlacementResponse (Maybe GameSessionPlacement)

-- | The response's http status code.
stopGameSessionPlacementResponse_httpStatus :: Lens' StopGameSessionPlacementResponse Int

-- | A data object containing your Realtime scripts and dependencies as a
--   zip file. The zip file can have one or multiple files. Maximum size of
--   a zip file is 5 MB.
--   
--   When using the AWS CLI tool to create a script, this parameter is set
--   to the zip file name. It must be prepended with the string "fileb://"
--   to indicate that the file data is a binary object. For example:
--   <tt>--zip-file fileb://myRealtimeScript.zip</tt>.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
updateScript_zipFile :: Lens' UpdateScript (Maybe ByteString)

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique.
updateScript_version :: Lens' UpdateScript (Maybe Text)

-- | A descriptive label that is associated with a script. Script names do
--   not need to be unique.
updateScript_name :: Lens' UpdateScript (Maybe Text)

-- | The location of the Amazon S3 bucket where a zipped file containing
--   your Realtime scripts is stored. The storage location must specify the
--   Amazon S3 bucket name, the zip file name (the "key"), and a role ARN
--   that allows Amazon GameLift to access the Amazon S3 storage location.
--   The S3 bucket must be in the same Region where you want to create a
--   new script. By default, Amazon GameLift uploads the latest version of
--   the zip file; if you have S3 object versioning turned on, you can use
--   the <tt>ObjectVersion</tt> parameter to specify an earlier version.
updateScript_storageLocation :: Lens' UpdateScript (Maybe S3Location)

-- | A unique identifier for the Realtime script to update. You can use
--   either the script ID or ARN value.
updateScript_scriptId :: Lens' UpdateScript Text

-- | The newly created script record with a unique script ID. The new
--   script's storage location reflects an Amazon S3 location: (1) If the
--   script was uploaded from an S3 bucket under your account, the storage
--   location reflects the information that was provided in the
--   <i>CreateScript</i> request; (2) If the script file was uploaded from
--   a local zip file, the storage location reflects an S3 location
--   controls by the Amazon GameLift service.
updateScriptResponse_script :: Lens' UpdateScriptResponse (Maybe Script)

-- | The response's http status code.
updateScriptResponse_httpStatus :: Lens' UpdateScriptResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
describeGameSessions_nextToken :: Lens' DescribeGameSessions (Maybe Text)

-- | A unique identifier for the fleet to retrieve game sessions for. You
--   can use either the fleet ID or ARN value.
describeGameSessions_fleetId :: Lens' DescribeGameSessions (Maybe Text)

-- | A unique identifier for the game session to retrieve.
describeGameSessions_gameSessionId :: Lens' DescribeGameSessions (Maybe Text)

-- | Game session status to filter results on. You can filter on the
--   following states: <tt>ACTIVE</tt>, <tt>TERMINATED</tt>,
--   <tt>ACTIVATING</tt>, and <tt>TERMINATING</tt>. The last two are
--   transitory and used for only very brief periods of time.
describeGameSessions_statusFilter :: Lens' DescribeGameSessions (Maybe Text)

-- | A unique identifier for the alias associated with the fleet to
--   retrieve game sessions for. You can use either the alias ID or ARN
--   value.
describeGameSessions_aliasId :: Lens' DescribeGameSessions (Maybe Text)

-- | A fleet location to get game session details for. You can specify a
--   fleet's home Region or a remote location. Use the AWS Region code
--   format, such as <tt>us-west-2</tt>.
describeGameSessions_location :: Lens' DescribeGameSessions (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
describeGameSessions_limit :: Lens' DescribeGameSessions (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describeGameSessionsResponse_nextToken :: Lens' DescribeGameSessionsResponse (Maybe Text)

-- | A collection of properties for each game session that matches the
--   request.
describeGameSessionsResponse_gameSessions :: Lens' DescribeGameSessionsResponse (Maybe [GameSession])

-- | The response's http status code.
describeGameSessionsResponse_httpStatus :: Lens' DescribeGameSessionsResponse Int

-- | A unique identifier for the Realtime script to delete. You can use
--   either the script ID or ARN value.
deleteScript_scriptId :: Lens' DeleteScript Text

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
describeGameServer_gameServerGroupName :: Lens' DescribeGameServer Text

-- | A custom string that uniquely identifies the game server information
--   to be retrieved.
describeGameServer_gameServerId :: Lens' DescribeGameServer Text

-- | Object that describes the requested game server.
describeGameServerResponse_gameServer :: Lens' DescribeGameServerResponse (Maybe GameServer)

-- | The response's http status code.
describeGameServerResponse_httpStatus :: Lens' DescribeGameServerResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
listScripts_nextToken :: Lens' ListScripts (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
listScripts_limit :: Lens' ListScripts (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
listScriptsResponse_nextToken :: Lens' ListScriptsResponse (Maybe Text)

-- | A set of properties describing the requested script.
listScriptsResponse_scripts :: Lens' ListScriptsResponse (Maybe [Script])

-- | The response's http status code.
listScriptsResponse_httpStatus :: Lens' ListScriptsResponse Int

-- | Name of an EC2 instance type that is supported in GameLift. A fleet
--   instance type determines the computing resources of each instance in
--   the fleet, including CPU, memory, storage, and networking capacity. Do
--   not specify a value for this parameter to retrieve limits for all
--   instance types.
describeEC2InstanceLimits_eC2InstanceType :: Lens' DescribeEC2InstanceLimits (Maybe EC2InstanceType)

-- | The name of a remote location to request instance limits for, in the
--   form of an AWS Region code such as <tt>us-west-2</tt>.
describeEC2InstanceLimits_location :: Lens' DescribeEC2InstanceLimits (Maybe Text)

-- | The maximum number of instances for the specified instance type.
describeEC2InstanceLimitsResponse_eC2InstanceLimits :: Lens' DescribeEC2InstanceLimitsResponse (Maybe [EC2InstanceLimit])

-- | The response's http status code.
describeEC2InstanceLimitsResponse_httpStatus :: Lens' DescribeEC2InstanceLimitsResponse Int

-- | A data object containing your Realtime scripts and dependencies as a
--   zip file. The zip file can have one or multiple files. Maximum size of
--   a zip file is 5 MB.
--   
--   When using the AWS CLI tool to create a script, this parameter is set
--   to the zip file name. It must be prepended with the string "fileb://"
--   to indicate that the file data is a binary object. For example:
--   <tt>--zip-file fileb://myRealtimeScript.zip</tt>.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
createScript_zipFile :: Lens' CreateScript (Maybe ByteString)

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique. You can use UpdateScript to change
--   this value later.
createScript_version :: Lens' CreateScript (Maybe Text)

-- | A descriptive label that is associated with a script. Script names do
--   not need to be unique. You can use UpdateScript to change this value
--   later.
createScript_name :: Lens' CreateScript (Maybe Text)

-- | The location of the Amazon S3 bucket where a zipped file containing
--   your Realtime scripts is stored. The storage location must specify the
--   Amazon S3 bucket name, the zip file name (the "key"), and a role ARN
--   that allows Amazon GameLift to access the Amazon S3 storage location.
--   The S3 bucket must be in the same Region where you want to create a
--   new script. By default, Amazon GameLift uploads the latest version of
--   the zip file; if you have S3 object versioning turned on, you can use
--   the <tt>ObjectVersion</tt> parameter to specify an earlier version.
createScript_storageLocation :: Lens' CreateScript (Maybe S3Location)

-- | A list of labels to assign to the new script resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
createScript_tags :: Lens' CreateScript (Maybe [Tag])

-- | The newly created script record with a unique script ID and ARN. The
--   new script's storage location reflects an Amazon S3 location: (1) If
--   the script was uploaded from an S3 bucket under your account, the
--   storage location reflects the information that was provided in the
--   <i>CreateScript</i> request; (2) If the script file was uploaded from
--   a local zip file, the storage location reflects an S3 location
--   controls by the Amazon GameLift service.
createScriptResponse_script :: Lens' CreateScriptResponse (Maybe Script)

-- | The response's http status code.
createScriptResponse_httpStatus :: Lens' CreateScriptResponse Int

-- | The fleet location to restart fleet actions for. Specify a location in
--   the form of an AWS Region code, such as <tt>us-west-2</tt>.
startFleetActions_location :: Lens' StartFleetActions (Maybe Text)

-- | A unique identifier for the fleet to restart actions on. You can use
--   either the fleet ID or ARN value.
startFleetActions_fleetId :: Lens' StartFleetActions Text

-- | List of actions to restart on the fleet.
startFleetActions_actions :: Lens' StartFleetActions (NonEmpty FleetAction)

-- | A unique identifier for the fleet to restart actions on.
startFleetActionsResponse_fleetId :: Lens' StartFleetActionsResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
startFleetActionsResponse_fleetArn :: Lens' StartFleetActionsResponse (Maybe Text)

-- | The response's http status code.
startFleetActionsResponse_httpStatus :: Lens' StartFleetActionsResponse Int

-- | A unique identifier for the fleet that contains the instance you want
--   access to. You can use either the fleet ID or ARN value. The fleet can
--   be in any of the following statuses: <tt>ACTIVATING</tt>,
--   <tt>ACTIVE</tt>, or <tt>ERROR</tt>. Fleets with an <tt>ERROR</tt>
--   status may be accessible for a short time before they are deleted.
getInstanceAccess_fleetId :: Lens' GetInstanceAccess Text

-- | A unique identifier for the instance you want to get access to. You
--   can access an instance in any status.
getInstanceAccess_instanceId :: Lens' GetInstanceAccess Text

-- | The connection information for a fleet instance, including IP address
--   and access credentials.
getInstanceAccessResponse_instanceAccess :: Lens' GetInstanceAccessResponse (Maybe InstanceAccess)

-- | The response's http status code.
getInstanceAccessResponse_httpStatus :: Lens' GetInstanceAccessResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value. If a player session ID is specified, this parameter is
--   ignored.
describePlayerSessions_nextToken :: Lens' DescribePlayerSessions (Maybe Text)

-- | Player session status to filter results on.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
describePlayerSessions_playerSessionStatusFilter :: Lens' DescribePlayerSessions (Maybe Text)

-- | A unique identifier for a player to retrieve player sessions for.
describePlayerSessions_playerId :: Lens' DescribePlayerSessions (Maybe Text)

-- | A unique identifier for a player session to retrieve.
describePlayerSessions_playerSessionId :: Lens' DescribePlayerSessions (Maybe Text)

-- | A unique identifier for the game session to retrieve player sessions
--   for.
describePlayerSessions_gameSessionId :: Lens' DescribePlayerSessions (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. If a
--   player session ID is specified, this parameter is ignored.
describePlayerSessions_limit :: Lens' DescribePlayerSessions (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
describePlayerSessionsResponse_nextToken :: Lens' DescribePlayerSessionsResponse (Maybe Text)

-- | A collection of objects containing properties for each player session
--   that matches the request.
describePlayerSessionsResponse_playerSessions :: Lens' DescribePlayerSessionsResponse (Maybe [PlayerSession])

-- | The response's http status code.
describePlayerSessionsResponse_httpStatus :: Lens' DescribePlayerSessionsResponse Int

-- | The fleet location to stop fleet actions for. Specify a location in
--   the form of an AWS Region code, such as <tt>us-west-2</tt>.
stopFleetActions_location :: Lens' StopFleetActions (Maybe Text)

-- | A unique identifier for the fleet to stop actions on. You can use
--   either the fleet ID or ARN value.
stopFleetActions_fleetId :: Lens' StopFleetActions Text

-- | List of actions to suspend on the fleet.
stopFleetActions_actions :: Lens' StopFleetActions (NonEmpty FleetAction)

-- | A unique identifier for the fleet to stop actions on.
stopFleetActionsResponse_fleetId :: Lens' StopFleetActionsResponse (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
stopFleetActionsResponse_fleetArn :: Lens' StopFleetActionsResponse (Maybe Text)

-- | The response's http status code.
stopFleetActionsResponse_httpStatus :: Lens' StopFleetActionsResponse Int

-- | Indicates whether this matchmaking configuration is being used with
--   GameLift hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
createMatchmakingConfiguration_flexMatchMode :: Lens' CreateMatchmakingConfiguration (Maybe FlexMatchMode)

-- | Information to be added to all events related to this matchmaking
--   configuration.
createMatchmakingConfiguration_customEventData :: Lens' CreateMatchmakingConfiguration (Maybe Text)

-- | The method used to backfill game sessions that are created with this
--   matchmaking configuration. Specify <tt>MANUAL</tt> when your game
--   manages backfill requests manually or does not use the match backfill
--   feature. Specify <tt>AUTOMATIC</tt> to have GameLift create a
--   StartMatchBackfill request whenever a game session has one or more
--   open slots. Learn more about manual and automatic backfill in
--   <a>Backfill Existing Games with FlexMatch</a>. Automatic backfill is
--   not available when <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
createMatchmakingConfiguration_backfillMode :: Lens' CreateMatchmakingConfiguration (Maybe BackfillMode)

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>). This information is added to the new
--   GameSession object that is created for a successful match. This
--   parameter is not used if <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
createMatchmakingConfiguration_gameProperties :: Lens' CreateMatchmakingConfiguration (Maybe [GameProperty])

-- | The length of time (in seconds) to wait for players to accept a
--   proposed match, if acceptance is required.
createMatchmakingConfiguration_acceptanceTimeoutSeconds :: Lens' CreateMatchmakingConfiguration (Maybe Natural)

-- | The number of player slots in a match to keep open for future players.
--   For example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   if <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
createMatchmakingConfiguration_additionalPlayerCount :: Lens' CreateMatchmakingConfiguration (Maybe Natural)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
createMatchmakingConfiguration_gameSessionData :: Lens' CreateMatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. If <tt>FlexMatchMode</tt> is set
--   to <tt>STANDALONE</tt>, do not set this parameter.
createMatchmakingConfiguration_gameSessionQueueArns :: Lens' CreateMatchmakingConfiguration (Maybe [Text])

-- | An SNS topic ARN that is set up to receive matchmaking notifications.
--   See <a>Setting up notifications for matchmaking</a> for more
--   information.
createMatchmakingConfiguration_notificationTarget :: Lens' CreateMatchmakingConfiguration (Maybe Text)

-- | A list of labels to assign to the new matchmaking configuration
--   resource. Tags are developer-defined key-value pairs. Tagging AWS
--   resources are useful for resource management, access management and
--   cost allocation. For more information, see <a>Tagging AWS
--   Resources</a> in the <i>AWS General Reference</i>. Once the resource
--   is created, you can use TagResource, UntagResource, and
--   ListTagsForResource to add, remove, and view tags. The maximum tag
--   limit may be lower than stated. See the AWS General Reference for
--   actual tagging limits.
createMatchmakingConfiguration_tags :: Lens' CreateMatchmakingConfiguration (Maybe [Tag])

-- | A human-readable description of the matchmaking configuration.
createMatchmakingConfiguration_description :: Lens' CreateMatchmakingConfiguration (Maybe Text)

-- | A unique identifier for the matchmaking configuration. This name is
--   used to identify the configuration associated with a matchmaking
--   request or ticket.
createMatchmakingConfiguration_name :: Lens' CreateMatchmakingConfiguration Text

-- | The maximum duration, in seconds, that a matchmaking ticket can remain
--   in process before timing out. Requests that fail due to timing out can
--   be resubmitted as needed.
createMatchmakingConfiguration_requestTimeoutSeconds :: Lens' CreateMatchmakingConfiguration Natural

-- | A flag that determines whether a match that was created with this
--   configuration must be accepted by the matched players. To require
--   acceptance, set to <tt>TRUE</tt>. With this option enabled,
--   matchmaking tickets use the status <tt>REQUIRES_ACCEPTANCE</tt> to
--   indicate when a completed potential match is waiting for player
--   acceptance.
createMatchmakingConfiguration_acceptanceRequired :: Lens' CreateMatchmakingConfiguration Bool

-- | A unique identifier for the matchmaking rule set to use with this
--   configuration. You can use either the rule set name or ARN value. A
--   matchmaking configuration can only use rule sets that are defined in
--   the same Region.
createMatchmakingConfiguration_ruleSetName :: Lens' CreateMatchmakingConfiguration Text

-- | Object that describes the newly created matchmaking configuration.
createMatchmakingConfigurationResponse_configuration :: Lens' CreateMatchmakingConfigurationResponse (Maybe MatchmakingConfiguration)

-- | The response's http status code.
createMatchmakingConfigurationResponse_httpStatus :: Lens' CreateMatchmakingConfigurationResponse Int

-- | Configuration settings to define a scaling policy for the Auto Scaling
--   group that is optimized for game hosting. The scaling policy uses the
--   metric <tt>"PercentUtilizedGameServers"</tt> to maintain a buffer of
--   idle game servers that can immediately accommodate new games and
--   players. After the Auto Scaling group is created, update this value
--   directly in the Auto Scaling group using the AWS console or APIs.
createGameServerGroup_autoScalingPolicy :: Lens' CreateGameServerGroup (Maybe GameServerGroupAutoScalingPolicy)

-- | A list of labels to assign to the new game server group resource. Tags
--   are developer-defined key-value pairs. Tagging AWS resources is useful
--   for resource management, access management, and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags, respectively. The maximum tag limit may be lower than
--   stated. See the AWS General Reference for actual tagging limits.
createGameServerGroup_tags :: Lens' CreateGameServerGroup (Maybe [Tag])

-- | Indicates how GameLift FleetIQ balances the use of Spot Instances and
--   On-Demand Instances in the game server group. Method options include
--   the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
createGameServerGroup_balancingStrategy :: Lens' CreateGameServerGroup (Maybe BalancingStrategy)

-- | A flag that indicates whether instances in the game server group are
--   protected from early termination. Unprotected instances that have
--   active game servers running might be terminated during a scale-down
--   event, causing players to be dropped from the game. Protected
--   instances cannot be terminated while there are active game servers
--   running except in the event of a forced game server group deletion
--   (see ). An exception to this is with Spot Instances, which can be
--   terminated by AWS regardless of protection status. This property is
--   set to <tt>NO_PROTECTION</tt> by default.
createGameServerGroup_gameServerProtectionPolicy :: Lens' CreateGameServerGroup (Maybe GameServerProtectionPolicy)

-- | A list of virtual private cloud (VPC) subnets to use with instances in
--   the game server group. By default, all GameLift FleetIQ-supported
--   Availability Zones are used. You can use this parameter to specify
--   VPCs that you've set up. This property cannot be updated after the
--   game server group is created, and the corresponding Auto Scaling group
--   will always use the property value that is set with this request, even
--   if the Auto Scaling group is updated directly.
createGameServerGroup_vpcSubnets :: Lens' CreateGameServerGroup (Maybe (NonEmpty Text))

-- | An identifier for the new game server group. This value is used to
--   generate unique ARN identifiers for the EC2 Auto Scaling group and the
--   GameLift FleetIQ game server group. The name must be unique per Region
--   per AWS account.
createGameServerGroup_gameServerGroupName :: Lens' CreateGameServerGroup Text

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
createGameServerGroup_roleArn :: Lens' CreateGameServerGroup Text

-- | The minimum number of instances allowed in the EC2 Auto Scaling group.
--   During automatic scaling events, GameLift FleetIQ and EC2 do not scale
--   down the group below this minimum. In production, this value should be
--   set to at least 1. After the Auto Scaling group is created, update
--   this value directly in the Auto Scaling group using the AWS console or
--   APIs.
createGameServerGroup_minSize :: Lens' CreateGameServerGroup Natural

-- | The maximum number of instances allowed in the EC2 Auto Scaling group.
--   During automatic scaling events, GameLift FleetIQ and EC2 do not scale
--   up the group above this maximum. After the Auto Scaling group is
--   created, update this value directly in the Auto Scaling group using
--   the AWS console or APIs.
createGameServerGroup_maxSize :: Lens' CreateGameServerGroup Natural

-- | The EC2 launch template that contains configuration settings and game
--   server code to be deployed to all instances in the game server group.
--   You can specify the template using either the template name or ID. For
--   help with creating a launch template, see <a>Creating a Launch
--   Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>. After the Auto Scaling group is created,
--   update this value directly in the Auto Scaling group using the AWS
--   console or APIs.
--   
--   If you specify network interfaces in your launch template, you must
--   explicitly set the property <tt>AssociatePublicIpAddress</tt> to
--   "true". If no network interface is specified in the launch template,
--   GameLift FleetIQ uses your account's default VPC.
createGameServerGroup_launchTemplate :: Lens' CreateGameServerGroup LaunchTemplateSpecification

-- | The EC2 instance types and sizes to use in the Auto Scaling group. The
--   instance definitions must specify at least two different instance
--   types that are supported by GameLift FleetIQ. For more information on
--   instance types, see <a>EC2 Instance Types</a> in the <i>Amazon EC2
--   User Guide</i>. You can optionally specify capacity weighting for each
--   instance type. If no weight value is specified for an instance type,
--   it is set to the default value "1". For more information about
--   capacity weighting, see <a>Instance Weighting for Amazon EC2 Auto
--   Scaling</a> in the Amazon EC2 Auto Scaling User Guide.
createGameServerGroup_instanceDefinitions :: Lens' CreateGameServerGroup (NonEmpty InstanceDefinition)

-- | The newly created game server group object, including the new ARN
--   value for the GameLift FleetIQ game server group and the object's
--   status. The EC2 Auto Scaling group ARN is initially null, since the
--   group has not yet been created. This value is added once the game
--   server group status reaches <tt>ACTIVE</tt>.
createGameServerGroupResponse_gameServerGroup :: Lens' CreateGameServerGroupResponse (Maybe GameServerGroup)

-- | The response's http status code.
createGameServerGroupResponse_httpStatus :: Lens' CreateGameServerGroupResponse Int

-- | A unique identifier for the AWS account that you use to manage your
--   GameLift fleet. You can find your Account ID in the AWS Management
--   Console under account settings.
createVpcPeeringAuthorization_gameLiftAwsAccountId :: Lens' CreateVpcPeeringAuthorization Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
createVpcPeeringAuthorization_peerVpcId :: Lens' CreateVpcPeeringAuthorization Text

-- | Details on the requested VPC peering authorization, including
--   expiration.
createVpcPeeringAuthorizationResponse_vpcPeeringAuthorization :: Lens' CreateVpcPeeringAuthorizationResponse (Maybe VpcPeeringAuthorization)

-- | The response's http status code.
createVpcPeeringAuthorizationResponse_httpStatus :: Lens' CreateVpcPeeringAuthorizationResponse Int

-- | A unique identifier for the fleet. You can use either the fleet ID or
--   ARN value. This tells Amazon GameLift which GameLift VPC to peer with.
createVpcPeeringConnection_fleetId :: Lens' CreateVpcPeeringConnection Text

-- | A unique identifier for the AWS account with the VPC that you want to
--   peer your Amazon GameLift fleet with. You can find your Account ID in
--   the AWS Management Console under account settings.
createVpcPeeringConnection_peerVpcAwsAccountId :: Lens' CreateVpcPeeringConnection Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
createVpcPeeringConnection_peerVpcId :: Lens' CreateVpcPeeringConnection Text

-- | The response's http status code.
createVpcPeeringConnectionResponse_httpStatus :: Lens' CreateVpcPeeringConnectionResponse Int

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
resumeGameServerGroup_gameServerGroupName :: Lens' ResumeGameServerGroup Text

-- | The activity to resume for this game server group.
resumeGameServerGroup_resumeActions :: Lens' ResumeGameServerGroup (NonEmpty GameServerGroupAction)

-- | An object that describes the game server group resource, with the
--   <tt>SuspendedActions</tt> property updated to reflect the resumed
--   activity.
resumeGameServerGroupResponse_gameServerGroup :: Lens' ResumeGameServerGroupResponse (Maybe GameServerGroup)

-- | The response's http status code.
resumeGameServerGroupResponse_httpStatus :: Lens' ResumeGameServerGroupResponse Int

-- | The type of delete to perform. Options include the following:
--   
--   <ul>
--   <li><tt>SAFE_DELETE</tt> – (default) Terminates the game server group
--   and EC2 Auto Scaling group only when it has no game servers that are
--   in <tt>UTILIZED</tt> status.</li>
--   <li><tt>FORCE_DELETE</tt> – Terminates the game server group,
--   including all active game servers regardless of their utilization
--   status, and the EC2 Auto Scaling group.</li>
--   <li><tt>RETAIN</tt> – Does a safe delete of the game server group but
--   retains the EC2 Auto Scaling group as is.</li>
--   </ul>
deleteGameServerGroup_deleteOption :: Lens' DeleteGameServerGroup (Maybe GameServerGroupDeleteOption)

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
deleteGameServerGroup_gameServerGroupName :: Lens' DeleteGameServerGroup Text

-- | An object that describes the deleted game server group resource, with
--   status updated to <tt>DELETE_SCHEDULED</tt>.
deleteGameServerGroupResponse_gameServerGroup :: Lens' DeleteGameServerGroupResponse (Maybe GameServerGroup)

-- | The response's http status code.
deleteGameServerGroupResponse_httpStatus :: Lens' DeleteGameServerGroupResponse Int

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
updateGameServerGroup_roleArn :: Lens' UpdateGameServerGroup (Maybe Text)

-- | An updated list of EC2 instance types to use in the Auto Scaling
--   group. The instance definitions must specify at least two different
--   instance types that are supported by GameLift FleetIQ. This updated
--   list replaces the entire current list of instance definitions for the
--   game server group. For more information on instance types, see <a>EC2
--   Instance Types</a> in the <i>Amazon EC2 User Guide</i>. You can
--   optionally specify capacity weighting for each instance type. If no
--   weight value is specified for an instance type, it is set to the
--   default value "1". For more information about capacity weighting, see
--   <a>Instance Weighting for Amazon EC2 Auto Scaling</a> in the Amazon
--   EC2 Auto Scaling User Guide.
updateGameServerGroup_instanceDefinitions :: Lens' UpdateGameServerGroup (Maybe (NonEmpty InstanceDefinition))

-- | Indicates how GameLift FleetIQ balances the use of Spot Instances and
--   On-Demand Instances in the game server group. Method options include
--   the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
updateGameServerGroup_balancingStrategy :: Lens' UpdateGameServerGroup (Maybe BalancingStrategy)

-- | A flag that indicates whether instances in the game server group are
--   protected from early termination. Unprotected instances that have
--   active game servers running might be terminated during a scale-down
--   event, causing players to be dropped from the game. Protected
--   instances cannot be terminated while there are active game servers
--   running except in the event of a forced game server group deletion
--   (see ). An exception to this is with Spot Instances, which can be
--   terminated by AWS regardless of protection status. This property is
--   set to <tt>NO_PROTECTION</tt> by default.
updateGameServerGroup_gameServerProtectionPolicy :: Lens' UpdateGameServerGroup (Maybe GameServerProtectionPolicy)

-- | A unique identifier for the game server group. Use either the
--   GameServerGroup name or ARN value.
updateGameServerGroup_gameServerGroupName :: Lens' UpdateGameServerGroup Text

-- | An object that describes the game server group resource with updated
--   properties.
updateGameServerGroupResponse_gameServerGroup :: Lens' UpdateGameServerGroupResponse (Maybe GameServerGroup)

-- | The response's http status code.
updateGameServerGroupResponse_httpStatus :: Lens' UpdateGameServerGroupResponse Int

-- | A unique identifier for the fleet to update runtime configuration for.
--   You can use either the fleet ID or ARN value.
updateRuntimeConfiguration_fleetId :: Lens' UpdateRuntimeConfiguration Text

-- | Instructions for launching server processes on each instance in the
--   fleet. Server processes run either a custom game build executable or a
--   Realtime Servers script. The runtime configuration lists the types of
--   server processes to run on an instance, how to launch them, and the
--   number of processes to run concurrently.
updateRuntimeConfiguration_runtimeConfiguration :: Lens' UpdateRuntimeConfiguration RuntimeConfiguration

-- | The runtime configuration currently in use by all instances in the
--   fleet. If the update was successful, all property changes are shown.
updateRuntimeConfigurationResponse_runtimeConfiguration :: Lens' UpdateRuntimeConfigurationResponse (Maybe RuntimeConfiguration)

-- | The response's http status code.
updateRuntimeConfigurationResponse_httpStatus :: Lens' UpdateRuntimeConfigurationResponse Int

-- | A unique identifier for the AWS account that you use to manage your
--   GameLift fleet. You can find your Account ID in the AWS Management
--   Console under account settings.
deleteVpcPeeringAuthorization_gameLiftAwsAccountId :: Lens' DeleteVpcPeeringAuthorization Text

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
deleteVpcPeeringAuthorization_peerVpcId :: Lens' DeleteVpcPeeringAuthorization Text

-- | The response's http status code.
deleteVpcPeeringAuthorizationResponse_httpStatus :: Lens' DeleteVpcPeeringAuthorizationResponse Int

-- | Information to be added to all events that are related to this game
--   session queue.
createGameSessionQueue_customEventData :: Lens' CreateGameSessionQueue (Maybe Text)

-- | A set of policies that act as a sliding cap on player latency. FleetIQ
--   works to deliver low latency for most players in a game session. These
--   policies ensure that no individual player can be placed into a game
--   with unreasonably high latency. Use multiple policies to gradually
--   relax latency requirements a step at a time. Multiple policies are
--   applied based on their maximum allowed latency, starting with the
--   lowest value.
createGameSessionQueue_playerLatencyPolicies :: Lens' CreateGameSessionQueue (Maybe [PlayerLatencyPolicy])

-- | Custom settings to use when prioritizing destinations and locations
--   for game session placements. This configuration replaces the FleetIQ
--   default prioritization process. Priority types that are not explicitly
--   named will be automatically applied at the end of the prioritization
--   process.
createGameSessionQueue_priorityConfiguration :: Lens' CreateGameSessionQueue (Maybe PriorityConfiguration)

-- | A list of fleets and/or fleet aliases that can be used to fulfill game
--   session placement requests in the queue. Destinations are identified
--   by either a fleet ARN or a fleet alias ARN, and are listed in order of
--   placement preference.
createGameSessionQueue_destinations :: Lens' CreateGameSessionQueue (Maybe [GameSessionQueueDestination])

-- | The maximum time, in seconds, that a new game session placement
--   request remains in the queue. When a request exceeds this time, the
--   game session placement changes to a <tt>TIMED_OUT</tt> status.
createGameSessionQueue_timeoutInSeconds :: Lens' CreateGameSessionQueue (Maybe Natural)

-- | An SNS topic ARN that is set up to receive game session placement
--   notifications. See <a>Setting up notifications for game session
--   placement</a>.
createGameSessionQueue_notificationTarget :: Lens' CreateGameSessionQueue (Maybe Text)

-- | A list of labels to assign to the new game session queue resource.
--   Tags are developer-defined key-value pairs. Tagging AWS resources are
--   useful for resource management, access management and cost allocation.
--   For more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
createGameSessionQueue_tags :: Lens' CreateGameSessionQueue (Maybe [Tag])

-- | A list of locations where a queue is allowed to place new game
--   sessions. Locations are specified in the form of AWS Region codes,
--   such as <tt>us-west-2</tt>. If this parameter is not set, game
--   sessions can be placed in any queue location.
createGameSessionQueue_filterConfiguration :: Lens' CreateGameSessionQueue (Maybe FilterConfiguration)

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
createGameSessionQueue_name :: Lens' CreateGameSessionQueue Text

-- | An object that describes the newly created game session queue.
createGameSessionQueueResponse_gameSessionQueue :: Lens' CreateGameSessionQueueResponse (Maybe GameSessionQueue)

-- | The response's http status code.
createGameSessionQueueResponse_httpStatus :: Lens' CreateGameSessionQueueResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
searchGameSessions_nextToken :: Lens' SearchGameSessions (Maybe Text)

-- | A unique identifier for the fleet to search for active game sessions.
--   You can use either the fleet ID or ARN value. Each request must
--   reference either a fleet ID or alias ID, but not both.
searchGameSessions_fleetId :: Lens' SearchGameSessions (Maybe Text)

-- | Instructions on how to sort the search results. If no sort expression
--   is included, the request returns results in random order. A sort
--   expression consists of the following elements:
--   
--   <ul>
--   <li><b>Operand</b> -- Name of a game session attribute. Valid values
--   are <tt>gameSessionName</tt>, <tt>gameSessionId</tt>,
--   <tt>gameSessionProperties</tt>, <tt>maximumSessions</tt>,
--   <tt>creationTimeMillis</tt>, <tt>playerSessionCount</tt>,
--   <tt>hasAvailablePlayerSessions</tt>.</li>
--   <li><b>Order</b> -- Valid sort orders are <tt>ASC</tt> (ascending) and
--   <tt>DESC</tt> (descending).</li>
--   </ul>
--   
--   For example, this sort expression returns the oldest active sessions
--   first: <tt>"SortExpression": "creationTimeMillis ASC"</tt>. Results
--   with a null value for the sort operand are returned at the end of the
--   list.
searchGameSessions_sortExpression :: Lens' SearchGameSessions (Maybe Text)

-- | String containing the search criteria for the session search. If no
--   filter expression is included, the request returns results for all
--   game sessions in the fleet that are in <tt>ACTIVE</tt> status.
--   
--   A filter expression can contain one or multiple conditions. Each
--   condition consists of the following:
--   
--   <ul>
--   <li><b>Operand</b> -- Name of a game session attribute. Valid values
--   are <tt>gameSessionName</tt>, <tt>gameSessionId</tt>,
--   <tt>gameSessionProperties</tt>, <tt>maximumSessions</tt>,
--   <tt>creationTimeMillis</tt>, <tt>playerSessionCount</tt>,
--   <tt>hasAvailablePlayerSessions</tt>.</li>
--   <li><b>Comparator</b> -- Valid comparators are: <tt>=</tt>,
--   <tt>&lt;&gt;</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>, <tt>&lt;=</tt>,
--   <tt>&gt;=</tt>.</li>
--   <li><b>Value</b> -- Value to be searched for. Values may be numbers,
--   boolean values (true/false) or strings depending on the operand.
--   String values are case sensitive and must be enclosed in single
--   quotes. Special characters must be escaped. Boolean and string values
--   can only be used with the comparators <tt>=</tt> and
--   <tt>&lt;&gt;</tt>. For example, the following filter expression
--   searches on <tt>gameSessionName</tt>: "<tt>FilterExpression":
--   "gameSessionName = 'Matt\\'s Awesome Game 1'"</tt>.</li>
--   </ul>
--   
--   To chain multiple conditions in a single expression, use the logical
--   keywords <tt>AND</tt>, <tt>OR</tt>, and <tt>NOT</tt> and parentheses
--   as needed. For example: <tt>x AND y AND NOT z</tt>, <tt>NOT (x OR
--   y)</tt>.
--   
--   Session search evaluates conditions from left to right using the
--   following precedence rules:
--   
--   <ol>
--   <li><tt>=</tt>, <tt>&lt;&gt;</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>,
--   <tt>&lt;=</tt>, <tt>&gt;=</tt></li>
--   <li>Parentheses</li>
--   <li>NOT</li>
--   <li>AND</li>
--   <li>OR</li>
--   </ol>
--   
--   For example, this filter expression retrieves game sessions hosting at
--   least ten players that have an open player slot:
--   <tt>"maximumSessions&gt;=10 AND hasAvailablePlayerSessions=true"</tt>.
searchGameSessions_filterExpression :: Lens' SearchGameSessions (Maybe Text)

-- | A unique identifier for the alias associated with the fleet to search
--   for active game sessions. You can use either the alias ID or ARN
--   value. Each request must reference either a fleet ID or alias ID, but
--   not both.
searchGameSessions_aliasId :: Lens' SearchGameSessions (Maybe Text)

-- | A fleet location to search for game sessions. You can specify a
--   fleet's home Region or a remote location. Use the AWS Region code
--   format, such as <tt>us-west-2</tt>.
searchGameSessions_location :: Lens' SearchGameSessions (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. The
--   maximum number of results returned is 20, even if this value is not
--   set or is set higher than 20.
searchGameSessions_limit :: Lens' SearchGameSessions (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
searchGameSessionsResponse_nextToken :: Lens' SearchGameSessionsResponse (Maybe Text)

-- | A collection of objects containing game session properties for each
--   session that matches the request.
searchGameSessionsResponse_gameSessions :: Lens' SearchGameSessionsResponse (Maybe [GameSession])

-- | The response's http status code.
searchGameSessionsResponse_httpStatus :: Lens' SearchGameSessionsResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
listGameServerGroups_nextToken :: Lens' ListGameServerGroups (Maybe Text)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
listGameServerGroups_limit :: Lens' ListGameServerGroups (Maybe Natural)

-- | A collection of game server group objects that match the request.
listGameServerGroupsResponse_gameServerGroups :: Lens' ListGameServerGroupsResponse (Maybe [GameServerGroup])

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
listGameServerGroupsResponse_nextToken :: Lens' ListGameServerGroupsResponse (Maybe Text)

-- | The response's http status code.
listGameServerGroupsResponse_httpStatus :: Lens' ListGameServerGroupsResponse Int

-- | Map of string pairs, each specifying a player ID and a set of
--   developer-defined information related to the player. Amazon GameLift
--   does not use this data, so it can be formatted as needed for use in
--   the game. Any player data strings for player IDs that are not included
--   in the <tt>PlayerIds</tt> parameter are ignored.
createPlayerSessions_playerDataMap :: Lens' CreatePlayerSessions (Maybe (HashMap Text Text))

-- | A unique identifier for the game session to add players to.
createPlayerSessions_gameSessionId :: Lens' CreatePlayerSessions Text

-- | List of unique identifiers for the players to be added.
createPlayerSessions_playerIds :: Lens' CreatePlayerSessions (NonEmpty Text)

-- | A collection of player session objects created for the added players.
createPlayerSessionsResponse_playerSessions :: Lens' CreatePlayerSessionsResponse (Maybe [PlayerSession])

-- | The response's http status code.
createPlayerSessionsResponse_httpStatus :: Lens' CreatePlayerSessionsResponse Int

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique. You can use UpdateBuild to change
--   this value later.
createBuild_version :: Lens' CreateBuild (Maybe Text)

-- | A descriptive label that is associated with a build. Build names do
--   not need to be unique. You can use UpdateBuild to change this value
--   later.
createBuild_name :: Lens' CreateBuild (Maybe Text)

-- | Information indicating where your game build files are stored. Use
--   this parameter only when creating a build with files stored in an
--   Amazon S3 bucket that you own. The storage location must specify an
--   Amazon S3 bucket name and key. The location must also specify a role
--   ARN that you set up to allow Amazon GameLift to access your Amazon S3
--   bucket. The S3 bucket and your new build must be in the same Region.
createBuild_storageLocation :: Lens' CreateBuild (Maybe S3Location)

-- | A list of labels to assign to the new build resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
createBuild_tags :: Lens' CreateBuild (Maybe [Tag])

-- | The operating system that the game server binaries are built to run
--   on. This value determines the type of fleet resources that you can use
--   for this build. If your game build contains multiple executables, they
--   all must run on the same operating system. If an operating system is
--   not specified when creating a build, Amazon GameLift uses the default
--   value (WINDOWS_2012). This value cannot be changed later.
createBuild_operatingSystem :: Lens' CreateBuild (Maybe OperatingSystem)

-- | The newly created build resource, including a unique build IDs and
--   status.
createBuildResponse_build :: Lens' CreateBuildResponse (Maybe Build)

-- | Amazon S3 location for your game build file, including bucket name and
--   key.
createBuildResponse_storageLocation :: Lens' CreateBuildResponse (Maybe S3Location)

-- | This element is returned only when the operation is called without a
--   storage location. It contains credentials to use when you are
--   uploading a build file to an Amazon S3 bucket that is owned by Amazon
--   GameLift. Credentials have a limited life span. To refresh these
--   credentials, call RequestUploadCredentials.
createBuildResponse_uploadCredentials :: Lens' CreateBuildResponse (Maybe AwsCredentials)

-- | The response's http status code.
createBuildResponse_httpStatus :: Lens' CreateBuildResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
listAliases_nextToken :: Lens' ListAliases (Maybe Text)

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
listAliases_name :: Lens' ListAliases (Maybe Text)

-- | The routing type to filter results on. Use this parameter to retrieve
--   only aliases with a certain routing type. To retrieve all aliases,
--   leave this parameter empty.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> -- The alias resolves to one specific fleet. Use
--   this type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> -- The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
listAliases_routingStrategyType :: Lens' ListAliases (Maybe RoutingStrategyType)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
listAliases_limit :: Lens' ListAliases (Maybe Natural)

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
listAliasesResponse_nextToken :: Lens' ListAliasesResponse (Maybe Text)

-- | A collection of alias resources that match the request parameters.
listAliasesResponse_aliases :: Lens' ListAliasesResponse (Maybe [Alias])

-- | The response's http status code.
listAliasesResponse_httpStatus :: Lens' ListAliasesResponse Int

-- | A unique identifier for the Realtime script to retrieve properties
--   for. You can use either the script ID or ARN value.
describeScript_scriptId :: Lens' DescribeScript Text

-- | A set of properties describing the requested script.
describeScriptResponse_script :: Lens' DescribeScriptResponse (Maybe Script)

-- | The response's http status code.
describeScriptResponse_httpStatus :: Lens' DescribeScriptResponse Int

-- | A collection of objects that describe all valid VPC peering operations
--   for the current AWS account.
describeVpcPeeringAuthorizationsResponse_vpcPeeringAuthorizations :: Lens' DescribeVpcPeeringAuthorizationsResponse (Maybe [VpcPeeringAuthorization])

-- | The response's http status code.
describeVpcPeeringAuthorizationsResponse_httpStatus :: Lens' DescribeVpcPeeringAuthorizationsResponse Int

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to and uniquely
--   identifies the GameLift resource that you want to retrieve tags for.
--   GameLift resource ARNs are included in the data object for the
--   resource, which can be retrieved by calling a List or Describe
--   operation for the resource type.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | The collection of tags that have been assigned to the specified
--   resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | A list of labels to assign to the new alias resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
createAlias_tags :: Lens' CreateAlias (Maybe [Tag])

-- | A human-readable description of the alias.
createAlias_description :: Lens' CreateAlias (Maybe Text)

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
createAlias_name :: Lens' CreateAlias Text

-- | The routing configuration, including routing type and fleet target,
--   for the alias.
createAlias_routingStrategy :: Lens' CreateAlias RoutingStrategy

-- | The newly created alias resource.
createAliasResponse_alias :: Lens' CreateAliasResponse (Maybe Alias)

-- | The response's http status code.
createAliasResponse_httpStatus :: Lens' CreateAliasResponse Int

-- | A token that indicates the start of the next sequential page of
--   results. Use the token that is returned with a previous call to this
--   operation. To start at the beginning of the result set, do not specify
--   a value.
listGameServers_nextToken :: Lens' ListGameServers (Maybe Text)

-- | Indicates how to sort the returned data based on game server
--   registration timestamp. Use <tt>ASCENDING</tt> to retrieve oldest game
--   servers first, or use <tt>DESCENDING</tt> to retrieve newest game
--   servers first. If this parameter is left empty, game servers are
--   returned in no particular order.
listGameServers_sortOrder :: Lens' ListGameServers (Maybe SortOrder)

-- | The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
listGameServers_limit :: Lens' ListGameServers (Maybe Natural)

-- | An identifier for the game server group to retrieve a list of game
--   servers from. Use either the GameServerGroup name or ARN value.
listGameServers_gameServerGroupName :: Lens' ListGameServers Text

-- | A token that indicates where to resume retrieving results on the next
--   call to this operation. If no token is returned, these results
--   represent the end of the list.
listGameServersResponse_nextToken :: Lens' ListGameServersResponse (Maybe Text)

-- | A collection of game server objects that match the request.
listGameServersResponse_gameServers :: Lens' ListGameServersResponse (Maybe [GameServer])

-- | The response's http status code.
listGameServersResponse_httpStatus :: Lens' ListGameServersResponse Int

-- | Indicates whether the game server is available or is currently hosting
--   gameplay.
updateGameServer_utilizationStatus :: Lens' UpdateGameServer (Maybe GameServerUtilizationStatus)

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
updateGameServer_gameServerData :: Lens' UpdateGameServer (Maybe Text)

-- | Indicates health status of the game server. A request that includes
--   this parameter updates the game server's <i>LastHealthCheckTime</i>
--   timestamp.
updateGameServer_healthCheck :: Lens' UpdateGameServer (Maybe GameServerHealthCheck)

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
updateGameServer_gameServerGroupName :: Lens' UpdateGameServer Text

-- | A custom string that uniquely identifies the game server to update.
updateGameServer_gameServerId :: Lens' UpdateGameServer Text

-- | Object that describes the newly updated game server.
updateGameServerResponse_gameServer :: Lens' UpdateGameServerResponse (Maybe GameServer)

-- | The response's http status code.
updateGameServerResponse_httpStatus :: Lens' UpdateGameServerResponse Int

-- | The routing configuration, including routing type and fleet target,
--   for the alias.
alias_routingStrategy :: Lens' Alias (Maybe RoutingStrategy)

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
alias_creationTime :: Lens' Alias (Maybe UTCTime)

-- | A descriptive label that is associated with an alias. Alias names do
--   not need to be unique.
alias_name :: Lens' Alias (Maybe Text)

-- | A human-readable description of an alias.
alias_description :: Lens' Alias (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   alias resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::alias/alias-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift alias ARN, the resource ID matches the alias ID value.
alias_aliasArn :: Lens' Alias (Maybe Text)

-- | A unique identifier for the alias. Alias IDs are unique within a
--   Region.
alias_aliasId :: Lens' Alias (Maybe Text)

-- | The time that this data object was last modified. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
alias_lastUpdatedTime :: Lens' Alias (Maybe UTCTime)

-- | For a list of up to 10 strings. Maximum length for each string is 100
--   characters. Duplicate values are not recognized; all occurrences of
--   the repeated value after the first of a repeated value are ignored.
attributeValue_sl :: Lens' AttributeValue (Maybe [Text])

-- | For number values, expressed as double.
attributeValue_n :: Lens' AttributeValue (Maybe Double)

-- | For single string values. Maximum string length is 100 characters.
attributeValue_s :: Lens' AttributeValue (Maybe Text)

-- | For a map of up to 10 data type:value pairs. Maximum length for each
--   string value is 100 characters.
attributeValue_sdm :: Lens' AttributeValue (Maybe (HashMap Text Double))

-- | Temporary secret key allowing access to the Amazon GameLift S3
--   account.
awsCredentials_secretAccessKey :: Lens' AwsCredentials (Maybe Text)

-- | Temporary key allowing access to the Amazon GameLift S3 account.
awsCredentials_accessKeyId :: Lens' AwsCredentials (Maybe Text)

-- | Token used to associate a specific build ID with the files uploaded
--   using these credentials.
awsCredentials_sessionToken :: Lens' AwsCredentials (Maybe Text)

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
build_creationTime :: Lens' Build (Maybe UTCTime)

-- | Current status of the build.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
build_status :: Lens' Build (Maybe BuildStatus)

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique. This value can be set using
--   CreateBuild or UpdateBuild.
build_version :: Lens' Build (Maybe Text)

-- | A descriptive label that is associated with a build. Build names do
--   not need to be unique. It can be set using CreateBuild or UpdateBuild.
build_name :: Lens' Build (Maybe Text)

-- | File size of the uploaded game build, expressed in bytes. When the
--   build status is <tt>INITIALIZED</tt>, this value is 0.
build_sizeOnDisk :: Lens' Build (Maybe Natural)

-- | A unique identifier for the build.
build_buildId :: Lens' Build (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   build resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::build/build-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift build ARN, the resource ID matches the <i>BuildId</i>
--   value.
build_buildArn :: Lens' Build (Maybe Text)

-- | Operating system that the game server binaries are built to run on.
--   This value determines the type of fleet resources that you can use for
--   this build.
build_operatingSystem :: Lens' Build (Maybe OperatingSystem)

-- | Indicates whether a TLS/SSL certificate is generated for a fleet.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b>GENERATED</b> - Generate a TLS/SSL certificate for this
--   fleet.</li>
--   <li><b>DISABLED</b> - (default) Do not generate a TLS/SSL certificate
--   for this fleet.</li>
--   </ul>
certificateConfiguration_certificateType :: Lens' CertificateConfiguration CertificateType

-- | A unique identifier for a player to associate with the player session.
desiredPlayerSession_playerId :: Lens' DesiredPlayerSession (Maybe Text)

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
desiredPlayerSession_playerData :: Lens' DesiredPlayerSession (Maybe Text)

-- | Number of active instances that are not currently hosting a game
--   session.
eC2InstanceCounts_idle :: Lens' EC2InstanceCounts (Maybe Natural)

-- | The minimum instance count value allowed.
eC2InstanceCounts_minimum :: Lens' EC2InstanceCounts (Maybe Natural)

-- | Number of instances that are starting but not yet active.
eC2InstanceCounts_pending :: Lens' EC2InstanceCounts (Maybe Natural)

-- | Number of instances that are no longer active but haven't yet been
--   terminated.
eC2InstanceCounts_terminating :: Lens' EC2InstanceCounts (Maybe Natural)

-- | Actual number of instances that are ready to host game sessions.
eC2InstanceCounts_active :: Lens' EC2InstanceCounts (Maybe Natural)

-- | The maximum instance count value allowed.
eC2InstanceCounts_maximum :: Lens' EC2InstanceCounts (Maybe Natural)

-- | Ideal number of active instances. GameLift will always try to maintain
--   the desired number of instances. Capacity is scaled up or down by
--   changing the desired instances.
eC2InstanceCounts_desired :: Lens' EC2InstanceCounts (Maybe Natural)

-- | The number of instances that is allowed for the specified instance
--   type and location.
eC2InstanceLimit_instanceLimit :: Lens' EC2InstanceLimit (Maybe Natural)

-- | The number of instances for the specified type and location that are
--   currently being used by the AWS account.
eC2InstanceLimit_currentInstances :: Lens' EC2InstanceLimit (Maybe Natural)

-- | The name of an EC2 instance type. See <a>Amazon EC2 Instance Types</a>
--   for detailed descriptions.
eC2InstanceLimit_eC2InstanceType :: Lens' EC2InstanceLimit (Maybe EC2InstanceType)

-- | An AWS Region code, such as <tt>us-west-2</tt>.
eC2InstanceLimit_location :: Lens' EC2InstanceLimit (Maybe Text)

-- | A unique identifier for an event resource, such as a fleet ID.
event_resourceId :: Lens' Event (Maybe Text)

-- | The type of event being logged.
--   
--   <b>Fleet creation events (ordered by fleet creation activity):</b>
--   
--   <ul>
--   <li>FLEET_CREATED -- A fleet resource was successfully created with a
--   status of <tt>NEW</tt>. Event messaging includes the fleet ID.</li>
--   <li>FLEET_STATE_DOWNLOADING -- Fleet status changed from <tt>NEW</tt>
--   to <tt>DOWNLOADING</tt>. The compressed build has started downloading
--   to a fleet instance for installation.</li>
--   <li>FLEET_BINARY_DOWNLOAD_FAILED -- The build failed to download to
--   the fleet instance.</li>
--   <li>FLEET_CREATION_EXTRACTING_BUILD – The game server build was
--   successfully downloaded to an instance, and the build files are now
--   being extracted from the uploaded build and saved to an instance.
--   Failure at this stage prevents a fleet from moving to <tt>ACTIVE</tt>
--   status. Logs for this stage display a list of the files that are
--   extracted and saved on the instance. Access the logs by using the URL
--   in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_RUNNING_INSTALLER – The game server build files
--   were successfully extracted, and the GameLift is now running the
--   build's install script (if one is included). Failure in this stage
--   prevents a fleet from moving to <tt>ACTIVE</tt> status. Logs for this
--   stage list the installation steps and whether or not the install
--   completed successfully. Access the logs by using the URL in
--   <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_VALIDATING_RUNTIME_CONFIG -- The build process was
--   successful, and the GameLift is now verifying that the game server
--   launch paths, which are specified in the fleet's runtime
--   configuration, exist. If any listed launch path exists, GameLift tries
--   to launch a game server process and waits for the process to report
--   ready. Failures in this stage prevent a fleet from moving to
--   <tt>ACTIVE</tt> status. Logs for this stage list the launch paths in
--   the runtime configuration and indicate whether each is found. Access
--   the logs by using the URL in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_STATE_VALIDATING -- Fleet status changed from
--   <tt>DOWNLOADING</tt> to <tt>VALIDATING</tt>.</li>
--   <li>FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path does not exist on the instance.</li>
--   <li>FLEET_STATE_BUILDING -- Fleet status changed from
--   <tt>VALIDATING</tt> to <tt>BUILDING</tt>.</li>
--   <li>FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path failed to run on the fleet instance.</li>
--   <li>FLEET_STATE_ACTIVATING -- Fleet status changed from
--   <tt>BUILDING</tt> to <tt>ACTIVATING</tt>.</li>
--   <li>FLEET_ACTIVATION_FAILED - The fleet failed to successfully
--   complete one of the steps in the fleet activation process. This event
--   code indicates that the game build was successfully downloaded to a
--   fleet instance, built, and validated, but was not able to start a
--   server process. Learn more at <a>Debug Fleet Creation Issues</a></li>
--   <li>FLEET_STATE_ACTIVE -- The fleet's status changed from
--   <tt>ACTIVATING</tt> to <tt>ACTIVE</tt>. The fleet is now ready to host
--   game sessions.</li>
--   </ul>
--   
--   <b>VPC peering events:</b>
--   
--   <ul>
--   <li>FLEET_VPC_PEERING_SUCCEEDED -- A VPC peering connection has been
--   established between the VPC for an GameLift fleet and a VPC in your
--   AWS account.</li>
--   <li>FLEET_VPC_PEERING_FAILED -- A requested VPC peering connection has
--   failed. Event details and status information (see
--   DescribeVpcPeeringConnections) provide additional detail. A common
--   reason for peering failure is that the two VPCs have overlapping CIDR
--   blocks of IPv4 addresses. To resolve this, change the CIDR block for
--   the VPC in your AWS account. For more information on VPC peering
--   failures, see
--   <a>https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/invalid-peering-configurations.html</a></li>
--   <li>FLEET_VPC_PEERING_DELETED -- A VPC peering connection has been
--   successfully deleted.</li>
--   </ul>
--   
--   <b>Spot instance events:</b>
--   
--   <ul>
--   <li>INSTANCE_INTERRUPTED -- A spot instance was interrupted by EC2
--   with a two-minute notification.</li>
--   </ul>
--   
--   <b>Other fleet events:</b>
--   
--   <ul>
--   <li>FLEET_SCALING_EVENT -- A change was made to the fleet's capacity
--   settings (desired instances, minimum/maximum scaling limits). Event
--   messaging includes the new capacity settings.</li>
--   <li>FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED -- A change was
--   made to the fleet's game session protection policy setting. Event
--   messaging includes both the old and new policy setting.</li>
--   <li>FLEET_DELETED -- A request to delete a fleet was initiated.</li>
--   <li>GENERIC_EVENT -- An unspecified event has occurred.</li>
--   </ul>
event_eventCode :: Lens' Event (Maybe EventCode)

-- | A unique identifier for a fleet event.
event_eventId :: Lens' Event (Maybe Text)

-- | Additional information related to the event.
event_message :: Lens' Event (Maybe Text)

-- | Time stamp indicating when this event occurred. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
event_eventTime :: Lens' Event (Maybe UTCTime)

-- | Location of stored logs with additional detail that is related to the
--   event. This is useful for debugging issues. The URL is valid for 15
--   minutes. You can also access fleet creation logs through the GameLift
--   console.
event_preSignedLogUrl :: Lens' Event (Maybe Text)

-- | A list of locations to allow game session placement in, in the form of
--   AWS Region codes such as <tt>us-west-2</tt>.
filterConfiguration_allowedLocations :: Lens' FilterConfiguration (Maybe (NonEmpty Text))

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
fleetAttributes_creationTime :: Lens' FleetAttributes (Maybe UTCTime)

-- | Current status of the fleet. Possible fleet statuses include the
--   following:
--   
--   <ul>
--   <li><b>NEW</b> -- A new fleet has been defined and desired instances
--   is set to 1.</li>
--   <li><b>DOWNLOADING/VALIDATING/BUILDING/ACTIVATING</b> -- GameLift is
--   setting up the new fleet, creating new instances with the game build
--   or Realtime script and starting server processes.</li>
--   <li><b>ACTIVE</b> -- Hosts can now accept game sessions.</li>
--   <li><b>ERROR</b> -- An error occurred when downloading, validating,
--   building, or activating the fleet.</li>
--   <li><b>DELETING</b> -- Hosts are responding to a delete fleet
--   request.</li>
--   <li><b>TERMINATED</b> -- The fleet no longer exists.</li>
--   </ul>
fleetAttributes_status :: Lens' FleetAttributes (Maybe FleetStatus)

-- | The EC2 instance type that determines the computing resources of each
--   instance in the fleet. Instance type defines the CPU, memory, storage,
--   and networking capacity. See <a>Amazon EC2 Instance Types</a> for
--   detailed descriptions.
fleetAttributes_instanceType :: Lens' FleetAttributes (Maybe EC2InstanceType)

-- | The kind of instances, On-Demand or Spot, that this fleet uses.
fleetAttributes_fleetType :: Lens' FleetAttributes (Maybe FleetType)

-- | A unique identifier for the fleet.
fleetAttributes_fleetId :: Lens' FleetAttributes (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift fleet ARN, the resource ID matches the <tt>FleetId</tt>
--   value.
fleetAttributes_fleetArn :: Lens' FleetAttributes (Maybe Text)

-- | A unique identifier for an AWS IAM role that manages access to your
--   AWS services. With an instance role ARN set, any application that runs
--   on an instance in this fleet can assume the role, including install
--   scripts, server processes, and daemons (background processes). Create
--   a role or look up a role's ARN by using the <a>IAM dashboard</a> in
--   the AWS Management Console. Learn more about using on-box credentials
--   for your game servers at <a>Access external resources from a game
--   server</a>.
fleetAttributes_instanceRoleArn :: Lens' FleetAttributes (Maybe Text)

-- | Indicates whether a TLS/SSL certificate was generated for the fleet.
fleetAttributes_certificateConfiguration :: Lens' FleetAttributes (Maybe CertificateConfiguration)

-- | <b>This parameter is no longer used.</b> Server launch paths are now
--   defined using the fleet's RuntimeConfiguration parameter. Requests
--   that use this parameter instead continue to be valid.
fleetAttributes_serverLaunchPath :: Lens' FleetAttributes (Maybe Text)

-- | <b>This parameter is no longer used.</b> Game session log paths are
--   now defined using the GameLift server API <tt>ProcessReady()</tt>
--   <tt>logParameters</tt>. See more information in the <a>Server API
--   Reference</a>.
fleetAttributes_logPaths :: Lens' FleetAttributes (Maybe [Text])

-- | <b>This parameter is no longer used.</b> Server launch parameters are
--   now defined using the fleet's RuntimeConfiguration parameter. Requests
--   that use this parameter instead continue to be valid.
fleetAttributes_serverLaunchParameters :: Lens' FleetAttributes (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   script resource that is deployed on instances in this fleet. In a
--   GameLift script ARN, the resource ID matches the <tt>ScriptId</tt>
--   value.
fleetAttributes_scriptArn :: Lens' FleetAttributes (Maybe Text)

-- | A descriptive label that is associated with a fleet. Fleet names do
--   not need to be unique.
fleetAttributes_name :: Lens' FleetAttributes (Maybe Text)

-- | The type of game session protection to set on all new instances that
--   are started in the fleet.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
fleetAttributes_newGameSessionProtectionPolicy :: Lens' FleetAttributes (Maybe ProtectionPolicy)

-- | A list of fleet activity that has been suspended using
--   StopFleetActions. This includes fleet auto-scaling.
fleetAttributes_stoppedActions :: Lens' FleetAttributes (Maybe (NonEmpty FleetAction))

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
fleetAttributes_terminationTime :: Lens' FleetAttributes (Maybe UTCTime)

-- | The fleet policy that limits the number of game sessions an individual
--   player can create over a span of time.
fleetAttributes_resourceCreationLimitPolicy :: Lens' FleetAttributes (Maybe ResourceCreationLimitPolicy)

-- | A human-readable description of the fleet.
fleetAttributes_description :: Lens' FleetAttributes (Maybe Text)

-- | A unique identifier for the build resource that is deployed on
--   instances in this fleet.
fleetAttributes_buildId :: Lens' FleetAttributes (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   build resource that is deployed on instances in this fleet. In a
--   GameLift build ARN, the resource ID matches the <tt>BuildId</tt>
--   value.
fleetAttributes_buildArn :: Lens' FleetAttributes (Maybe Text)

-- | Name of a metric group that metrics for this fleet are added to. In
--   Amazon CloudWatch, you can view aggregated metrics for fleets that are
--   in a metric group. A fleet can be included in only one metric group at
--   a time.
fleetAttributes_metricGroups :: Lens' FleetAttributes (Maybe [Text])

-- | The operating system of the fleet's computing resources. A fleet's
--   operating system is determined by the OS of the build or script that
--   is deployed on this fleet.
fleetAttributes_operatingSystem :: Lens' FleetAttributes (Maybe OperatingSystem)

-- | A unique identifier for the Realtime script resource that is deployed
--   on instances in this fleet.
fleetAttributes_scriptId :: Lens' FleetAttributes (Maybe Text)

-- | The EC2 instance type that is used for all instances in a fleet. The
--   instance type determines the computing resources in use, including
--   CPU, memory, storage, and networking capacity. See <a>Amazon EC2
--   Instance Types</a> for detailed descriptions.
fleetCapacity_instanceType :: Lens' FleetCapacity (Maybe EC2InstanceType)

-- | A unique identifier for the fleet associated with the location.
fleetCapacity_fleetId :: Lens' FleetCapacity (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
fleetCapacity_fleetArn :: Lens' FleetCapacity (Maybe Text)

-- | The current instance count and capacity settings for the fleet
--   location.
fleetCapacity_instanceCounts :: Lens' FleetCapacity (Maybe EC2InstanceCounts)

-- | The fleet location for the instance count information, expressed as an
--   AWS Region code, such as <tt>us-west-2</tt>.
fleetCapacity_location :: Lens' FleetCapacity (Maybe Text)

-- | The number of active game sessions that are currently being hosted
--   across all instances in the fleet location.
fleetUtilization_activeGameSessionCount :: Lens' FleetUtilization (Maybe Natural)

-- | The number of active player sessions that are currently being hosted
--   across all instances in the fleet location.
fleetUtilization_currentPlayerSessionCount :: Lens' FleetUtilization (Maybe Natural)

-- | The maximum number of players allowed across all game sessions that
--   are currently being hosted across all instances in the fleet location.
fleetUtilization_maximumPlayerSessionCount :: Lens' FleetUtilization (Maybe Natural)

-- | A unique identifier for the fleet associated with the location.
fleetUtilization_fleetId :: Lens' FleetUtilization (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
fleetUtilization_fleetArn :: Lens' FleetUtilization (Maybe Text)

-- | The number of server processes in <tt>ACTIVE</tt> status that are
--   currently running across all instances in the fleet location.
fleetUtilization_activeServerProcessCount :: Lens' FleetUtilization (Maybe Natural)

-- | The fleet location for the fleet utilization information, expressed as
--   an AWS Region code, such as <tt>us-west-2</tt>.
fleetUtilization_location :: Lens' FleetUtilization (Maybe Text)

-- | The game property identifier.
gameProperty_key :: Lens' GameProperty Text

-- | The game property value.
gameProperty_value :: Lens' GameProperty Text

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
gameServer_instanceId :: Lens' GameServer (Maybe Text)

-- | Indicates whether the game server is currently available for new games
--   or is busy. Possible statuses include:
--   
--   <ul>
--   <li><tt>AVAILABLE</tt> - The game server is available to be claimed. A
--   game server that has been claimed remains in this status until it
--   reports game hosting activity.</li>
--   <li><tt>UTILIZED</tt> - The game server is currently hosting a game
--   session with players.</li>
--   </ul>
gameServer_utilizationStatus :: Lens' GameServer (Maybe GameServerUtilizationStatus)

-- | Indicates when an available game server has been reserved for gameplay
--   but has not yet started hosting a game. Once it is claimed, the game
--   server remains in <tt>CLAIMED</tt> status for a maximum of one minute.
--   During this time, game clients connect to the game server to start the
--   game and trigger the game server to update its utilization status.
--   After one minute, the game server claim status reverts to null.
gameServer_claimStatus :: Lens' GameServer (Maybe GameServerClaimStatus)

-- | A set of custom game server properties, formatted as a single string
--   value. This data is passed to a game client or service when it
--   requests information on game servers using ListGameServers or
--   ClaimGameServer.
gameServer_gameServerData :: Lens' GameServer (Maybe Text)

-- | Timestamp that indicates the last time the game server was claimed
--   with a ClaimGameServer request. The format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   This value is used to calculate when a claimed game server's status
--   should revert to null.
gameServer_lastClaimTime :: Lens' GameServer (Maybe UTCTime)

-- | Timestamp that indicates when the game server was created with a
--   RegisterGameServer request. The format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
gameServer_registrationTime :: Lens' GameServer (Maybe UTCTime)

-- | The ARN identifier for the game server group where the game server is
--   located.
gameServer_gameServerGroupArn :: Lens' GameServer (Maybe Text)

-- | A custom string that uniquely identifies the game server. Game server
--   IDs are developer-defined and are unique across all game server groups
--   in an AWS account.
gameServer_gameServerId :: Lens' GameServer (Maybe Text)

-- | A unique identifier for the game server group where the game server is
--   running. Use either the GameServerGroup name or ARN value.
gameServer_gameServerGroupName :: Lens' GameServer (Maybe Text)

-- | The port and IP address that must be used to establish a client
--   connection to the game server.
gameServer_connectionInfo :: Lens' GameServer (Maybe Text)

-- | Timestamp that indicates the last time the game server was updated
--   with health status using an UpdateGameServer request. The format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>). After game server registration, this
--   property is only changed when a game server update specifies a health
--   check value.
gameServer_lastHealthCheckTime :: Lens' GameServer (Maybe UTCTime)

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
gameServerGroup_creationTime :: Lens' GameServerGroup (Maybe UTCTime)

-- | The current status of the game server group. Possible statuses
--   include:
--   
--   <ul>
--   <li><tt>NEW</tt> - GameLift FleetIQ has validated the
--   <tt>CreateGameServerGroup()</tt> request.</li>
--   <li><tt>ACTIVATING</tt> - GameLift FleetIQ is setting up a game server
--   group, which includes creating an Auto Scaling group in your AWS
--   account.</li>
--   <li><tt>ACTIVE</tt> - The game server group has been successfully
--   created.</li>
--   <li><tt>DELETE_SCHEDULED</tt> - A request to delete the game server
--   group has been received.</li>
--   <li><tt>DELETING</tt> - GameLift FleetIQ has received a valid
--   <tt>DeleteGameServerGroup()</tt> request and is processing it.
--   GameLift FleetIQ must first complete and release hosts before it
--   deletes the Auto Scaling group and the game server group.</li>
--   <li><tt>DELETED</tt> - The game server group has been successfully
--   deleted.</li>
--   <li><tt>ERROR</tt> - The asynchronous processes of activating or
--   deleting a game server group has failed, resulting in an error
--   state.</li>
--   </ul>
gameServerGroup_status :: Lens' GameServerGroup (Maybe GameServerGroupStatus)

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
gameServerGroup_roleArn :: Lens' GameServerGroup (Maybe Text)

-- | A generated unique ID for the EC2 Auto Scaling group that is
--   associated with this game server group.
gameServerGroup_autoScalingGroupArn :: Lens' GameServerGroup (Maybe Text)

-- | The set of EC2 instance types that GameLift FleetIQ can use when
--   balancing and automatically scaling instances in the corresponding
--   Auto Scaling group.
gameServerGroup_instanceDefinitions :: Lens' GameServerGroup (Maybe (NonEmpty InstanceDefinition))

-- | A generated unique ID for the game server group.
gameServerGroup_gameServerGroupArn :: Lens' GameServerGroup (Maybe Text)

-- | A list of activities that are currently suspended for this game server
--   group. If this property is empty, all activities are occurring.
gameServerGroup_suspendedActions :: Lens' GameServerGroup (Maybe (NonEmpty GameServerGroupAction))

-- | A developer-defined identifier for the game server group. The name is
--   unique for each Region in each AWS account.
gameServerGroup_gameServerGroupName :: Lens' GameServerGroup (Maybe Text)

-- | Indicates how GameLift FleetIQ balances the use of Spot Instances and
--   On-Demand Instances in the game server group. Method options include
--   the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
gameServerGroup_balancingStrategy :: Lens' GameServerGroup (Maybe BalancingStrategy)

-- | Additional information about the current game server group status.
--   This information might provide additional insight on groups that are
--   in <tt>ERROR</tt> status.
gameServerGroup_statusReason :: Lens' GameServerGroup (Maybe Text)

-- | A flag that indicates whether instances in the game server group are
--   protected from early termination. Unprotected instances that have
--   active game servers running might be terminated during a scale-down
--   event, causing players to be dropped from the game. Protected
--   instances cannot be terminated while there are active game servers
--   running except in the event of a forced game server group deletion
--   (see ). An exception to this is with Spot Instances, which can be
--   terminated by AWS regardless of protection status.
gameServerGroup_gameServerProtectionPolicy :: Lens' GameServerGroup (Maybe GameServerProtectionPolicy)

-- | A timestamp that indicates when this game server group was last
--   updated.
gameServerGroup_lastUpdatedTime :: Lens' GameServerGroup (Maybe UTCTime)

-- | Length of time, in seconds, it takes for a new instance to start new
--   game server processes and register with GameLift FleetIQ. Specifying a
--   warm-up time can be useful, particularly with game servers that take a
--   long time to start up, because it avoids prematurely starting new
--   instances.
gameServerGroupAutoScalingPolicy_estimatedInstanceWarmup :: Lens' GameServerGroupAutoScalingPolicy (Maybe Natural)

-- | Settings for a target-based scaling policy applied to Auto Scaling
--   group. These settings are used to create a target-based policy that
--   tracks the GameLift FleetIQ metric
--   <tt>"PercentUtilizedGameServers"</tt> and specifies a target value for
--   the metric. As player usage changes, the policy triggers to adjust the
--   game server group capacity so that the metric returns to the target
--   value.
gameServerGroupAutoScalingPolicy_targetTrackingConfiguration :: Lens' GameServerGroupAutoScalingPolicy TargetTrackingConfiguration

-- | The unique identifier for the instance where the game server is
--   running. This ID is available in the instance metadata. EC2 instance
--   IDs use a 17-character format, for example:
--   <tt>i-1234567890abcdef0</tt>.
gameServerInstance_instanceId :: Lens' GameServerInstance (Maybe Text)

-- | Current status of the game server instance.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The instance is viable for hosting game
--   servers.</li>
--   <li><b>DRAINING</b> -- The instance is not viable for hosting game
--   servers. Existing game servers are in the process of ending, and new
--   game servers are not started on this instance unless no other
--   resources are available. When the instance is put in DRAINING, a new
--   instance is started up to replace it. Once the instance has no
--   UTILIZED game servers, it will be terminated in favor of the new
--   instance.</li>
--   <li><b>SPOT_TERMINATING</b> -- The instance is in the process of
--   shutting down due to a Spot instance interruption. No new game servers
--   are started on this instance.</li>
--   </ul>
gameServerInstance_instanceStatus :: Lens' GameServerInstance (Maybe GameServerInstanceStatus)

-- | A generated unique identifier for the game server group that includes
--   the game server instance.
gameServerInstance_gameServerGroupArn :: Lens' GameServerInstance (Maybe Text)

-- | A developer-defined identifier for the game server group that includes
--   the game server instance. The name is unique for each Region in each
--   AWS account.
gameServerInstance_gameServerGroupName :: Lens' GameServerInstance (Maybe Text)

-- | Number of players currently in the game session.
gameSession_currentPlayerSessionCount :: Lens' GameSession (Maybe Natural)

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session. You can
--   search for active game sessions based on this custom data with
--   SearchGameSessions.
gameSession_gameProperties :: Lens' GameSession (Maybe [GameProperty])

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
gameSession_creationTime :: Lens' GameSession (Maybe UTCTime)

-- | Current status of the game session. A game session must have an
--   <tt>ACTIVE</tt> status to have player sessions.
gameSession_status :: Lens' GameSession (Maybe GameSessionStatus)

-- | Indicates whether or not the game session is accepting new players.
gameSession_playerSessionCreationPolicy :: Lens' GameSession (Maybe PlayerSessionCreationPolicy)

-- | A unique identifier for a player. This ID is used to enforce a
--   resource protection policy (if one exists), that limits the number of
--   game sessions a player can create.
gameSession_creatorId :: Lens' GameSession (Maybe Text)

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
gameSession_maximumPlayerSessionCount :: Lens' GameSession (Maybe Natural)

-- | Information about the matchmaking process that was used to create the
--   game session. It is in JSON syntax, formatted as a string. In addition
--   the matchmaking configuration used, it contains data on all players
--   assigned to the match, including player attributes and team
--   assignments. For more details on matchmaker data, see <a>Match
--   Data</a>. Matchmaker data is useful when requesting match backfills,
--   and is updated whenever new players are added during a successful
--   backfill (see StartMatchBackfill).
gameSession_matchmakerData :: Lens' GameSession (Maybe Text)

-- | A unique identifier for the fleet that the game session is running on.
gameSession_fleetId :: Lens' GameSession (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that this game session is running on.
gameSession_fleetArn :: Lens' GameSession (Maybe Text)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session.
gameSession_gameSessionData :: Lens' GameSession (Maybe Text)

-- | A unique identifier for the game session. A game session ARN has the
--   following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>.
gameSession_gameSessionId :: Lens' GameSession (Maybe Text)

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
gameSession_name :: Lens' GameSession (Maybe Text)

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
gameSession_ipAddress :: Lens' GameSession (Maybe Text)

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
gameSession_terminationTime :: Lens' GameSession (Maybe UTCTime)

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
gameSession_port :: Lens' GameSession (Maybe Natural)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
gameSession_dnsName :: Lens' GameSession (Maybe Text)

-- | Provides additional information about game session status.
--   <tt>INTERRUPTED</tt> indicates that the game session was hosted on a
--   spot instance that was reclaimed, causing the active game session to
--   be terminated.
gameSession_statusReason :: Lens' GameSession (Maybe GameSessionStatusReason)

-- | The fleet location where the game session is running. This value might
--   specify the fleet's home Region or a remote location. Location is
--   expressed as an AWS Region code such as <tt>us-west-2</tt>.
gameSession_location :: Lens' GameSession (Maybe Text)

-- | A unique identifier for the game session. Use the game session ID.
gameSessionConnectionInfo_gameSessionArn :: Lens' GameSessionConnectionInfo (Maybe Text)

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
gameSessionConnectionInfo_ipAddress :: Lens' GameSessionConnectionInfo (Maybe Text)

-- | A collection of player session IDs, one for each player ID that was
--   included in the original matchmaking request.
gameSessionConnectionInfo_matchedPlayerSessions :: Lens' GameSessionConnectionInfo (Maybe [MatchedPlayerSession])

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
gameSessionConnectionInfo_port :: Lens' GameSessionConnectionInfo (Maybe Natural)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
gameSessionConnectionInfo_dnsName :: Lens' GameSessionConnectionInfo (Maybe Text)

-- | Object that describes a game session.
gameSessionDetail_gameSession :: Lens' GameSessionDetail (Maybe GameSession)

-- | Current status of protection for the game session.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
gameSessionDetail_protectionPolicy :: Lens' GameSessionDetail (Maybe ProtectionPolicy)

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>).
gameSessionPlacement_gameProperties :: Lens' GameSessionPlacement (Maybe [GameProperty])

-- | Current status of the game session placement request.
--   
--   <ul>
--   <li><b>PENDING</b> -- The placement request is currently in the queue
--   waiting to be processed.</li>
--   <li><b>FULFILLED</b> -- A new game session and player sessions (if
--   requested) have been successfully created. Values for
--   <i>GameSessionArn</i> and <i>GameSessionRegion</i> are available.</li>
--   <li><b>CANCELLED</b> -- The placement request was canceled with a call
--   to StopGameSessionPlacement.</li>
--   <li><b>TIMED_OUT</b> -- A new game session was not successfully
--   created before the time limit expired. You can resubmit the placement
--   request as needed.</li>
--   <li><b>FAILED</b> -- GameLift is not able to complete the process of
--   placing the game session. Common reasons are the game session
--   terminated before the placement process was completed, or an
--   unexpected internal error.</li>
--   </ul>
gameSessionPlacement_status :: Lens' GameSessionPlacement (Maybe GameSessionPlacementState)

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
gameSessionPlacement_gameSessionQueueName :: Lens' GameSessionPlacement (Maybe Text)

-- | The maximum number of players that can be connected simultaneously to
--   the game session.
gameSessionPlacement_maximumPlayerSessionCount :: Lens' GameSessionPlacement (Maybe Natural)

-- | Information on the matchmaking process for this game. Data is in JSON
--   syntax, formatted as a string. It identifies the matchmaking
--   configuration used to create the match, and contains data on all
--   players assigned to the match, including player attributes and team
--   assignments. For more details on matchmaker data, see <a>Match
--   Data</a>.
gameSessionPlacement_matchmakerData :: Lens' GameSessionPlacement (Maybe Text)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
gameSessionPlacement_gameSessionData :: Lens' GameSessionPlacement (Maybe Text)

-- | A unique identifier for the game session. This value is set once the
--   new game session is placed (placement status is <tt>FULFILLED</tt>).
gameSessionPlacement_gameSessionId :: Lens' GameSessionPlacement (Maybe Text)

-- | Time stamp indicating when this request was placed in the queue.
--   Format is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
gameSessionPlacement_startTime :: Lens' GameSessionPlacement (Maybe UTCTime)

-- | Identifier for the game session created by this placement request.
--   This value is set once the new game session is placed (placement
--   status is <tt>FULFILLED</tt>). This identifier is unique across all
--   Regions. You can use this value as a <tt>GameSessionId</tt> value as
--   needed.
gameSessionPlacement_gameSessionArn :: Lens' GameSessionPlacement (Maybe Text)

-- | Time stamp indicating when this request was completed, canceled, or
--   timed out.
gameSessionPlacement_endTime :: Lens' GameSessionPlacement (Maybe UTCTime)

-- | A descriptive label that is associated with a game session. Session
--   names do not need to be unique.
gameSessionPlacement_gameSessionName :: Lens' GameSessionPlacement (Maybe Text)

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number. This value
--   is set once the new game session is placed (placement status is
--   <tt>FULFILLED</tt>).
gameSessionPlacement_ipAddress :: Lens' GameSessionPlacement (Maybe Text)

-- | A unique identifier for a game session placement.
gameSessionPlacement_placementId :: Lens' GameSessionPlacement (Maybe Text)

-- | A collection of information on player sessions created in response to
--   the game session placement request. These player sessions are created
--   only once a new game session is successfully placed (placement status
--   is <tt>FULFILLED</tt>). This information includes the player ID (as
--   provided in the placement request) and the corresponding player
--   session ID. Retrieve full player sessions by calling
--   DescribePlayerSessions with the player session ID.
gameSessionPlacement_placedPlayerSessions :: Lens' GameSessionPlacement (Maybe [PlacedPlayerSession])

-- | The port number for the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number. This value
--   is set once the new game session is placed (placement status is
--   <tt>FULFILLED</tt>).
gameSessionPlacement_port :: Lens' GameSessionPlacement (Maybe Natural)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
gameSessionPlacement_dnsName :: Lens' GameSessionPlacement (Maybe Text)

-- | Name of the Region where the game session created by this placement
--   request is running. This value is set once the new game session is
--   placed (placement status is <tt>FULFILLED</tt>).
gameSessionPlacement_gameSessionRegion :: Lens' GameSessionPlacement (Maybe Text)

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions.
gameSessionPlacement_playerLatencies :: Lens' GameSessionPlacement (Maybe [PlayerLatency])

-- | Information that is added to all events that are related to this game
--   session queue.
gameSessionQueue_customEventData :: Lens' GameSessionQueue (Maybe Text)

-- | A set of policies that act as a sliding cap on player latency. FleetIQ
--   works to deliver low latency for most players in a game session. These
--   policies ensure that no individual player can be placed into a game
--   with unreasonably high latency. Use multiple policies to gradually
--   relax latency requirements a step at a time. Multiple policies are
--   applied based on their maximum allowed latency, starting with the
--   lowest value.
gameSessionQueue_playerLatencyPolicies :: Lens' GameSessionQueue (Maybe [PlayerLatencyPolicy])

-- | Custom settings to use when prioritizing destinations and locations
--   for game session placements. This configuration replaces the FleetIQ
--   default prioritization process. Priority types that are not explicitly
--   named will be automatically applied at the end of the prioritization
--   process.
gameSessionQueue_priorityConfiguration :: Lens' GameSessionQueue (Maybe PriorityConfiguration)

-- | A descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
gameSessionQueue_name :: Lens' GameSessionQueue (Maybe Text)

-- | A list of fleets and/or fleet aliases that can be used to fulfill game
--   session placement requests in the queue. Destinations are identified
--   by either a fleet ARN or a fleet alias ARN, and are listed in order of
--   placement preference.
gameSessionQueue_destinations :: Lens' GameSessionQueue (Maybe [GameSessionQueueDestination])

-- | The maximum time, in seconds, that a new game session placement
--   request remains in the queue. When a request exceeds this time, the
--   game session placement changes to a <tt>TIMED_OUT</tt> status.
gameSessionQueue_timeoutInSeconds :: Lens' GameSessionQueue (Maybe Natural)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. In a GameLift game session queue ARN, the resource ID
--   matches the <i>Name</i> value.
gameSessionQueue_gameSessionQueueArn :: Lens' GameSessionQueue (Maybe Text)

-- | An SNS topic ARN that is set up to receive game session placement
--   notifications. See <a>Setting up notifications for game session
--   placement</a>.
gameSessionQueue_notificationTarget :: Lens' GameSessionQueue (Maybe Text)

-- | A list of locations where a queue is allowed to place new game
--   sessions. Locations are specified in the form of AWS Region codes,
--   such as <tt>us-west-2</tt>. If this parameter is not set, game
--   sessions can be placed in any queue location.
gameSessionQueue_filterConfiguration :: Lens' GameSessionQueue (Maybe FilterConfiguration)

-- | The Amazon Resource Name (ARN) that is assigned to fleet or fleet
--   alias. ARNs, which include a fleet ID or alias ID and a Region name,
--   provide a unique identifier across all Regions.
gameSessionQueueDestination_destinationArn :: Lens' GameSessionQueueDestination (Maybe Text)

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
instance_creationTime :: Lens' Instance (Maybe UTCTime)

-- | Current status of the instance. Possible statuses include the
--   following:
--   
--   <ul>
--   <li><b>PENDING</b> -- The instance is in the process of being created
--   and launching server processes as defined in the fleet's run-time
--   configuration.</li>
--   <li><b>ACTIVE</b> -- The instance has been successfully created and at
--   least one server process has successfully launched and reported back
--   to GameLift that it is ready to host a game session. The instance is
--   now considered ready to host game sessions.</li>
--   <li><b>TERMINATING</b> -- The instance is in the process of shutting
--   down. This may happen to reduce capacity during a scaling down event
--   or to recycle resources in the event of a problem.</li>
--   </ul>
instance_status :: Lens' Instance (Maybe InstanceStatus)

-- | A unique identifier for the instance.
instance_instanceId :: Lens' Instance (Maybe Text)

-- | A unique identifier for the fleet that the instance is in.
instance_fleetId :: Lens' Instance (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
instance_fleetArn :: Lens' Instance (Maybe Text)

-- | IP address that is assigned to the instance.
instance_ipAddress :: Lens' Instance (Maybe Text)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
instance_dnsName :: Lens' Instance (Maybe Text)

-- | Operating system that is running on this instance.
instance_operatingSystem :: Lens' Instance (Maybe OperatingSystem)

-- | EC2 instance type that defines the computing resources of this
--   instance.
instance_type :: Lens' Instance (Maybe EC2InstanceType)

-- | The fleet location of the instance, expressed as an AWS Region code,
--   such as <tt>us-west-2</tt>.
instance_location :: Lens' Instance (Maybe Text)

-- | A unique identifier for the instance being accessed.
instanceAccess_instanceId :: Lens' InstanceAccess (Maybe Text)

-- | A unique identifier for the fleet containing the instance being
--   accessed.
instanceAccess_fleetId :: Lens' InstanceAccess (Maybe Text)

-- | IP address that is assigned to the instance.
instanceAccess_ipAddress :: Lens' InstanceAccess (Maybe Text)

-- | Operating system that is running on the instance.
instanceAccess_operatingSystem :: Lens' InstanceAccess (Maybe OperatingSystem)

-- | Credentials required to access the instance.
instanceAccess_credentials :: Lens' InstanceAccess (Maybe InstanceCredentials)

-- | User login string.
instanceCredentials_userName :: Lens' InstanceCredentials (Maybe Text)

-- | Secret string. For Windows instances, the secret is a password for use
--   with Windows Remote Desktop. For Linux instances, it is a private key
--   (which must be saved as a <tt>.pem</tt> file) for use with SSH.
instanceCredentials_secret :: Lens' InstanceCredentials (Maybe Text)

-- | Instance weighting that indicates how much this instance type
--   contributes to the total capacity of a game server group. Instance
--   weights are used by GameLift FleetIQ to calculate the instance type's
--   cost per unit hour and better identify the most cost-effective
--   options. For detailed information on weighting instance capacity, see
--   <a>Instance Weighting</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>. Default value is "1".
instanceDefinition_weightedCapacity :: Lens' InstanceDefinition (Maybe Text)

-- | An EC2 instance type designation.
instanceDefinition_instanceType :: Lens' InstanceDefinition GameServerGroupInstanceType

-- | A starting value for a range of allowed port numbers.
ipPermission_fromPort :: Lens' IpPermission Natural

-- | An ending value for a range of allowed port numbers. Port numbers are
--   end-inclusive. This value must be higher than <tt>FromPort</tt>.
ipPermission_toPort :: Lens' IpPermission Natural

-- | A range of allowed IP addresses. This value must be expressed in CIDR
--   notation. Example: "<tt>000.000.000.000/[subnet mask]</tt>" or
--   optionally the shortened version "<tt>0.0.0.0/[subnet mask]</tt>".
ipPermission_ipRange :: Lens' IpPermission Text

-- | The network communication protocol used by the fleet.
ipPermission_protocol :: Lens' IpPermission IpProtocol

-- | A unique identifier for an existing EC2 launch template.
launchTemplateSpecification_launchTemplateId :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The version of the EC2 launch template to use. If no version is
--   specified, the default version will be used. With Amazon EC2, you can
--   specify a default version for a launch template. If none is set, the
--   default is the first version created.
launchTemplateSpecification_version :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | A readable identifier for an existing EC2 launch template.
launchTemplateSpecification_launchTemplateName :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The status of fleet activity updates to the location. The status
--   <tt>PENDING_UPDATE</tt> indicates that StopFleetActions or
--   StartFleetActions has been requested but the update has not yet been
--   completed for the location.
locationAttributes_updateStatus :: Lens' LocationAttributes (Maybe LocationUpdateStatus)

-- | A fleet location and its current life-cycle state.
locationAttributes_locationState :: Lens' LocationAttributes (Maybe LocationState)

-- | A list of fleet actions that have been suspended in the fleet
--   location.
locationAttributes_stoppedActions :: Lens' LocationAttributes (Maybe (NonEmpty FleetAction))

-- | An AWS Region code, such as <tt>us-west-2</tt>.
locationConfiguration_location :: Lens' LocationConfiguration (Maybe Text)

-- | The life-cycle status of a fleet location.
locationState_status :: Lens' LocationState (Maybe FleetStatus)

-- | The fleet location, expressed as an AWS Region code such as
--   <tt>us-west-2</tt>.
locationState_location :: Lens' LocationState (Maybe Text)

-- | A unique identifier for a player
matchedPlayerSession_playerId :: Lens' MatchedPlayerSession (Maybe Text)

-- | A unique identifier for a player session
matchedPlayerSession_playerSessionId :: Lens' MatchedPlayerSession (Maybe Text)

-- | Indicates whether this matchmaking configuration is being used with
--   GameLift hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
matchmakingConfiguration_flexMatchMode :: Lens' MatchmakingConfiguration (Maybe FlexMatchMode)

-- | Information to attach to all events related to the matchmaking
--   configuration.
matchmakingConfiguration_customEventData :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The method used to backfill game sessions created with this
--   matchmaking configuration. MANUAL indicates that the game makes
--   backfill requests or does not use the match backfill feature.
--   AUTOMATIC indicates that GameLift creates StartMatchBackfill requests
--   whenever a game session has one or more open slots. Learn more about
--   manual and automatic backfill in <a>Backfill existing games with
--   FlexMatch</a>. Automatic backfill is not available when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
matchmakingConfiguration_backfillMode :: Lens' MatchmakingConfiguration (Maybe BackfillMode)

-- | A set of custom properties for a game session, formatted as key:value
--   pairs. These properties are passed to a game server process in the
--   GameSession object with a request to start a new game session (see
--   <a>Start a Game Session</a>). This information is added to the new
--   GameSession object that is created for a successful match. This
--   parameter is not used when <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
matchmakingConfiguration_gameProperties :: Lens' MatchmakingConfiguration (Maybe [GameProperty])

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
matchmakingConfiguration_creationTime :: Lens' MatchmakingConfiguration (Maybe UTCTime)

-- | The length of time (in seconds) to wait for players to accept a
--   proposed match, if acceptance is required. If any player rejects the
--   match or fails to accept before the timeout, the ticket continues to
--   look for an acceptable match.
matchmakingConfiguration_acceptanceTimeoutSeconds :: Lens' MatchmakingConfiguration (Maybe Natural)

-- | The number of player slots in a match to keep open for future players.
--   For example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
matchmakingConfiguration_additionalPlayerCount :: Lens' MatchmakingConfiguration (Maybe Natural)

-- | A set of custom game session properties, formatted as a single string
--   value. This data is passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
matchmakingConfiguration_gameSessionData :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   matchmaking configuration resource and uniquely identifies it. ARNs
--   are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingconfiguration/&lt;matchmaking
--   configuration name&gt;</tt>. In a GameLift configuration ARN, the
--   resource ID matches the <i>Name</i> value.
matchmakingConfiguration_configurationArn :: Lens' MatchmakingConfiguration (Maybe Text)

-- | A unique identifier for the matchmaking configuration. This name is
--   used to identify the configuration associated with a matchmaking
--   request or ticket.
matchmakingConfiguration_name :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   game session queue resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. This property is not set when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
matchmakingConfiguration_gameSessionQueueArns :: Lens' MatchmakingConfiguration (Maybe [Text])

-- | An SNS topic ARN that is set up to receive matchmaking notifications.
matchmakingConfiguration_notificationTarget :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   matchmaking rule set resource that this configuration uses.
matchmakingConfiguration_ruleSetArn :: Lens' MatchmakingConfiguration (Maybe Text)

-- | The maximum duration, in seconds, that a matchmaking ticket can remain
--   in process before timing out. Requests that fail due to timing out can
--   be resubmitted as needed.
matchmakingConfiguration_requestTimeoutSeconds :: Lens' MatchmakingConfiguration (Maybe Natural)

-- | A descriptive label that is associated with matchmaking configuration.
matchmakingConfiguration_description :: Lens' MatchmakingConfiguration (Maybe Text)

-- | A unique identifier for the matchmaking rule set to use with this
--   configuration. A matchmaking configuration can only use rule sets that
--   are defined in the same Region.
matchmakingConfiguration_ruleSetName :: Lens' MatchmakingConfiguration (Maybe Text)

-- | A flag that indicates whether a match that was created with this
--   configuration must be accepted by the matched players. To require
--   acceptance, set to TRUE. When this option is enabled, matchmaking
--   tickets use the status <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a
--   completed potential match is waiting for player acceptance.
matchmakingConfiguration_acceptanceRequired :: Lens' MatchmakingConfiguration (Maybe Bool)

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
matchmakingRuleSet_creationTime :: Lens' MatchmakingRuleSet (Maybe UTCTime)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   matchmaking rule set resource and uniquely identifies it. ARNs are
--   unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingruleset/&lt;ruleset
--   name&gt;</tt>. In a GameLift rule set ARN, the resource ID matches the
--   <i>RuleSetName</i> value.
matchmakingRuleSet_ruleSetArn :: Lens' MatchmakingRuleSet (Maybe Text)

-- | A unique identifier for the matchmaking rule set
matchmakingRuleSet_ruleSetName :: Lens' MatchmakingRuleSet (Maybe Text)

-- | A collection of matchmaking rules, formatted as a JSON string.
--   Comments are not allowed in JSON, but most elements support a
--   description field.
matchmakingRuleSet_ruleSetBody :: Lens' MatchmakingRuleSet Text

-- | Additional information about the current status.
matchmakingTicket_statusMessage :: Lens' MatchmakingTicket (Maybe Text)

-- | Current status of the matchmaking request.
--   
--   <ul>
--   <li><b>QUEUED</b> -- The matchmaking request has been received and is
--   currently waiting to be processed.</li>
--   <li><b>SEARCHING</b> -- The matchmaking request is currently being
--   processed.</li>
--   <li><b>REQUIRES_ACCEPTANCE</b> -- A match has been proposed and the
--   players must accept the match (see AcceptMatch). This status is used
--   only with requests that use a matchmaking configuration with a player
--   acceptance requirement.</li>
--   <li><b>PLACING</b> -- The FlexMatch engine has matched players and is
--   in the process of placing a new game session for the match.</li>
--   <li><b>COMPLETED</b> -- Players have been matched and a game session
--   is ready to host the players. A ticket in this state contains the
--   necessary connection information for players.</li>
--   <li><b>FAILED</b> -- The matchmaking request was not completed.</li>
--   <li><b>CANCELLED</b> -- The matchmaking request was canceled. This may
--   be the result of a call to StopMatchmaking or a proposed match that
--   one or more players failed to accept.</li>
--   <li><b>TIMED_OUT</b> -- The matchmaking request was not successful
--   within the duration specified in the matchmaking configuration.</li>
--   </ul>
--   
--   Matchmaking requests that fail to successfully complete (statuses
--   FAILED, CANCELLED, TIMED_OUT) can be resubmitted as new requests with
--   new ticket IDs.
matchmakingTicket_status :: Lens' MatchmakingTicket (Maybe MatchmakingConfigurationStatus)

-- | Average amount of time (in seconds) that players are currently waiting
--   for a match. If there is not enough recent data, this property may be
--   empty.
matchmakingTicket_estimatedWaitTime :: Lens' MatchmakingTicket (Maybe Natural)

-- | A unique identifier for a matchmaking ticket.
matchmakingTicket_ticketId :: Lens' MatchmakingTicket (Maybe Text)

-- | A set of <tt>Player</tt> objects, each representing a player to find
--   matches for. Players are identified by a unique player ID and may
--   include latency data for use during matchmaking. If the ticket is in
--   status <tt>COMPLETED</tt>, the <tt>Player</tt> objects include the
--   team the players were assigned to in the resulting match.
matchmakingTicket_players :: Lens' MatchmakingTicket (Maybe [Player])

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   matchmaking configuration resource that is used with this ticket.
matchmakingTicket_configurationArn :: Lens' MatchmakingTicket (Maybe Text)

-- | Time stamp indicating when this matchmaking request was received.
--   Format is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
matchmakingTicket_startTime :: Lens' MatchmakingTicket (Maybe UTCTime)

-- | Time stamp indicating when this matchmaking request stopped being
--   processed due to success, failure, or cancellation. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
matchmakingTicket_endTime :: Lens' MatchmakingTicket (Maybe UTCTime)

-- | Name of the MatchmakingConfiguration that is used with this ticket.
--   Matchmaking configurations determine how players are grouped into a
--   match and how a new game session is created for the match.
matchmakingTicket_configurationName :: Lens' MatchmakingTicket (Maybe Text)

-- | Identifier and connection information of the game session created for
--   the match. This information is added to the ticket only after the
--   matchmaking request has been successfully completed. This parameter is
--   not set when FlexMatch is being used without GameLift hosting.
matchmakingTicket_gameSessionConnectionInfo :: Lens' MatchmakingTicket (Maybe GameSessionConnectionInfo)

-- | Code to explain the current status. For example, a status reason may
--   indicate when a ticket has returned to <tt>SEARCHING</tt> status after
--   a proposed match fails to receive player acceptances.
matchmakingTicket_statusReason :: Lens' MatchmakingTicket (Maybe Text)

-- | A unique identifier for a player that is associated with this player
--   session.
placedPlayerSession_playerId :: Lens' PlacedPlayerSession (Maybe Text)

-- | A unique identifier for a player session.
placedPlayerSession_playerSessionId :: Lens' PlacedPlayerSession (Maybe Text)

-- | A collection of key:value pairs containing player information for use
--   in matchmaking. Player attribute keys must match the
--   <i>playerAttributes</i> used in a matchmaking rule set. Example:
--   <tt>"PlayerAttributes": {"skill": {"N": "23"}, "gameMode": {"S":
--   "deathmatch"}}</tt>.
player_playerAttributes :: Lens' Player (Maybe (HashMap Text AttributeValue))

-- | A set of values, expressed in milliseconds, that indicates the amount
--   of latency that a player experiences when connected to AWS Regions. If
--   this property is present, FlexMatch considers placing the match only
--   in Regions for which latency is reported.
--   
--   If a matchmaker has a rule that evaluates player latency, players must
--   report latency in order to be matched. If no latency is reported in
--   this scenario, FlexMatch assumes that no Regions are available to the
--   player and the ticket is not matchable.
player_latencyInMs :: Lens' Player (Maybe (HashMap Text Natural))

-- | A unique identifier for a player
player_playerId :: Lens' Player (Maybe Text)

-- | Name of the team that the player is assigned to in a match. Team names
--   are defined in a matchmaking rule set.
player_team :: Lens' Player (Maybe Text)

-- | A unique identifier for a player associated with the latency data.
playerLatency_playerId :: Lens' PlayerLatency (Maybe Text)

-- | Amount of time that represents the time lag experienced by the player
--   when connected to the specified Region.
playerLatency_latencyInMilliseconds :: Lens' PlayerLatency (Maybe Double)

-- | Name of the Region that is associated with the latency value.
playerLatency_regionIdentifier :: Lens' PlayerLatency (Maybe Text)

-- | The length of time, in seconds, that the policy is enforced while
--   placing a new game session. A null value for this property means that
--   the policy is enforced until the queue times out.
playerLatencyPolicy_policyDurationSeconds :: Lens' PlayerLatencyPolicy (Maybe Natural)

-- | The maximum latency value that is allowed for any player, in
--   milliseconds. All policies must have a value set for this property.
playerLatencyPolicy_maximumIndividualPlayerLatencyMilliseconds :: Lens' PlayerLatencyPolicy (Maybe Natural)

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
playerSession_creationTime :: Lens' PlayerSession (Maybe UTCTime)

-- | Current status of the player session.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
playerSession_status :: Lens' PlayerSession (Maybe PlayerSessionStatus)

-- | A unique identifier for a player that is associated with this player
--   session.
playerSession_playerId :: Lens' PlayerSession (Maybe Text)

-- | A unique identifier for the fleet that the player's game session is
--   running on.
playerSession_fleetId :: Lens' PlayerSession (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that the player's game session is running on.
playerSession_fleetArn :: Lens' PlayerSession (Maybe Text)

-- | A unique identifier for a player session.
playerSession_playerSessionId :: Lens' PlayerSession (Maybe Text)

-- | A unique identifier for the game session that the player session is
--   connected to.
playerSession_gameSessionId :: Lens' PlayerSession (Maybe Text)

-- | The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
playerSession_ipAddress :: Lens' PlayerSession (Maybe Text)

-- | A time stamp indicating when this data object was terminated. Format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
playerSession_terminationTime :: Lens' PlayerSession (Maybe UTCTime)

-- | Port number for the game session. To connect to a Amazon GameLift
--   server process, an app needs both the IP address and port number.
playerSession_port :: Lens' PlayerSession (Maybe Natural)

-- | The DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
playerSession_dnsName :: Lens' PlayerSession (Maybe Text)

-- | Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
playerSession_playerData :: Lens' PlayerSession (Maybe Text)

-- | The prioritization order to use for fleet locations, when the
--   <tt>PriorityOrder</tt> property includes <tt>LOCATION</tt>. Locations
--   are identified by AWS Region codes such as <tt>us-west-2</tt>. Each
--   location can only be listed once.
priorityConfiguration_locationOrder :: Lens' PriorityConfiguration (Maybe (NonEmpty Text))

-- | The recommended sequence to use when prioritizing where to place new
--   game sessions. Each type can only be listed once.
--   
--   <ul>
--   <li><tt>LATENCY</tt> -- FleetIQ prioritizes locations where the
--   average player latency (provided in each game session request) is
--   lowest.</li>
--   <li><tt>COST</tt> -- FleetIQ prioritizes destinations with the lowest
--   current hosting costs. Cost is evaluated based on the location,
--   instance type, and fleet type (Spot or On-Demand) for each destination
--   in the queue.</li>
--   <li><tt>DESTINATION</tt> -- FleetIQ prioritizes based on the order
--   that destinations are listed in the queue configuration.</li>
--   <li><tt>LOCATION</tt> -- FleetIQ prioritizes based on the provided
--   order of locations, as defined in <tt>LocationOrder</tt>.</li>
--   </ul>
priorityConfiguration_priorityOrder :: Lens' PriorityConfiguration (Maybe (NonEmpty PriorityType))

-- | The time span used in evaluating the resource creation limit policy.
resourceCreationLimitPolicy_policyPeriodInMinutes :: Lens' ResourceCreationLimitPolicy (Maybe Natural)

-- | The maximum number of game sessions that an individual can create
--   during the policy period.
resourceCreationLimitPolicy_newGameSessionsPerCreator :: Lens' ResourceCreationLimitPolicy (Maybe Natural)

-- | A unique identifier for the fleet that the alias points to. This value
--   is the fleet ID, not the fleet ARN.
routingStrategy_fleetId :: Lens' RoutingStrategy (Maybe Text)

-- | The message text to be used with a terminal routing strategy.
routingStrategy_message :: Lens' RoutingStrategy (Maybe Text)

-- | The type of routing strategy for the alias.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> - The alias resolves to one specific fleet. Use this
--   type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> - The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
routingStrategy_type :: Lens' RoutingStrategy (Maybe RoutingStrategyType)

-- | The maximum amount of time (in seconds) allowed to launch a new game
--   session and have it report ready to host players. During this time,
--   the game session is in status <tt>ACTIVATING</tt>. If the game session
--   does not become active before the timeout, it is ended and the game
--   session status is changed to <tt>TERMINATED</tt>.
runtimeConfiguration_gameSessionActivationTimeoutSeconds :: Lens' RuntimeConfiguration (Maybe Natural)

-- | The number of game sessions in status <tt>ACTIVATING</tt> to allow on
--   an instance. This setting limits the instance resources that can be
--   used for new game activations at any one time.
runtimeConfiguration_maxConcurrentGameSessionActivations :: Lens' RuntimeConfiguration (Maybe Natural)

-- | A collection of server process configurations that identify what
--   server processes to run on each instance in a fleet.
runtimeConfiguration_serverProcesses :: Lens' RuntimeConfiguration (Maybe (NonEmpty ServerProcess))

-- | The name of the zip file that contains the build files or script
--   files.
s3Location_key :: Lens' S3Location (Maybe Text)

-- | The version of the file, if object versioning is turned on for the
--   bucket. Amazon GameLift uses this information when retrieving files
--   from an S3 bucket that you own. Use this parameter to specify a
--   specific version of the file. If not set, the latest version of the
--   file is retrieved.
s3Location_objectVersion :: Lens' S3Location (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access the S3 bucket.
s3Location_roleArn :: Lens' S3Location (Maybe Text)

-- | An Amazon S3 bucket identifier. This is the name of the S3 bucket.
--   
--   GameLift currently does not support uploading from Amazon S3 buckets
--   with names that contain a dot (.).
s3Location_bucket :: Lens' S3Location (Maybe Text)

-- | Metric value used to trigger a scaling event.
scalingPolicy_threshold :: Lens' ScalingPolicy (Maybe Double)

-- | Current status of the scaling policy. The scaling policy can be in
--   force only when in an <tt>ACTIVE</tt> status. Scaling policies can be
--   suspended for individual fleets (see StopFleetActions; if suspended
--   for a fleet, the policy status does not change. View a fleet's stopped
--   actions by calling DescribeFleetCapacity.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy can be used for auto-scaling a
--   fleet.</li>
--   <li><b>UPDATE_REQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETE_REQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
scalingPolicy_status :: Lens' ScalingPolicy (Maybe ScalingStatusType)

-- | An object that contains settings for a target-based scaling policy.
scalingPolicy_targetConfiguration :: Lens' ScalingPolicy (Maybe TargetConfiguration)

-- | Comparison operator to use when measuring a metric against the
--   threshold value.
scalingPolicy_comparisonOperator :: Lens' ScalingPolicy (Maybe ComparisonOperatorType)

-- | Name of the Amazon GameLift-defined metric that is used to trigger a
--   scaling adjustment. For detailed descriptions of fleet metrics, see
--   <a>Monitor Amazon GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
scalingPolicy_metricName :: Lens' ScalingPolicy (Maybe MetricName)

-- | A unique identifier for the fleet that is associated with this scaling
--   policy.
scalingPolicy_fleetId :: Lens' ScalingPolicy (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
scalingPolicy_fleetArn :: Lens' ScalingPolicy (Maybe Text)

-- | The type of scaling policy to create. For a target-based policy, set
--   the parameter <i>MetricName</i> to 'PercentAvailableGameSessions' and
--   specify a <i>TargetConfiguration</i>. For a rule-based policy set the
--   following parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
scalingPolicy_policyType :: Lens' ScalingPolicy (Maybe PolicyType)

-- | The current status of the fleet's scaling policies in a requested
--   fleet location. The status <tt>PENDING_UPDATE</tt> indicates that an
--   update was requested for the fleet but has not yet been completed for
--   the location.
scalingPolicy_updateStatus :: Lens' ScalingPolicy (Maybe LocationUpdateStatus)

-- | Amount of adjustment to make, based on the scaling adjustment type.
scalingPolicy_scalingAdjustment :: Lens' ScalingPolicy (Maybe Int)

-- | A descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
scalingPolicy_name :: Lens' ScalingPolicy (Maybe Text)

-- | Length of time (in minutes) the metric must be at or beyond the
--   threshold before a scaling event is triggered.
scalingPolicy_evaluationPeriods :: Lens' ScalingPolicy (Maybe Natural)

scalingPolicy_location :: Lens' ScalingPolicy (Maybe Text)

-- | The type of adjustment to make to a fleet's instance count (see
--   FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down.</li>
--   </ul>
scalingPolicy_scalingAdjustmentType :: Lens' ScalingPolicy (Maybe ScalingAdjustmentType)

-- | A time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
script_creationTime :: Lens' Script (Maybe UTCTime)

-- | Version information that is associated with a build or script. Version
--   strings do not need to be unique.
script_version :: Lens' Script (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   script resource and uniquely identifies it. ARNs are unique across all
--   Regions. In a GameLift script ARN, the resource ID matches the
--   <i>ScriptId</i> value.
script_scriptArn :: Lens' Script (Maybe Text)

-- | A descriptive label that is associated with a script. Script names do
--   not need to be unique.
script_name :: Lens' Script (Maybe Text)

-- | Undocumented member.
script_storageLocation :: Lens' Script (Maybe S3Location)

-- | The file size of the uploaded Realtime script, expressed in bytes.
--   When files are uploaded from an S3 location, this value remains at
--   "0".
script_sizeOnDisk :: Lens' Script (Maybe Natural)

-- | A unique identifier for the Realtime script
script_scriptId :: Lens' Script (Maybe Text)

-- | An optional list of parameters to pass to the server executable or
--   Realtime script on launch.
serverProcess_parameters :: Lens' ServerProcess (Maybe Text)

-- | The location of a game build executable or the Realtime script file
--   that contains the <tt>Init()</tt> function. Game builds and Realtime
--   scripts are installed on instances at the root:
--   
--   <ul>
--   <li>Windows (custom game builds only): <tt>C:\game</tt>. Example:
--   "<tt>C:\game\MyGame\server.exe</tt>"</li>
--   <li>Linux: <tt>/local/game</tt>. Examples:
--   "<tt>/local/game/MyGame/server.exe</tt>" or
--   "<tt>/local/game/MyRealtimeScript.js</tt>"</li>
--   </ul>
serverProcess_launchPath :: Lens' ServerProcess Text

-- | The number of server processes using this configuration that run
--   concurrently on each instance.
serverProcess_concurrentExecutions :: Lens' ServerProcess Natural

-- | The key for a developer-defined key:value pair for tagging an AWS
--   resource.
tag_key :: Lens' Tag Text

-- | The value for a developer-defined key:value pair for tagging an AWS
--   resource.
tag_value :: Lens' Tag Text

-- | Desired value to use with a target-based scaling policy. The value
--   must be relevant for whatever metric the scaling policy is using. For
--   example, in a policy using the metric PercentAvailableGameSessions,
--   the target value should be the preferred size of the fleet's buffer
--   (the percent of capacity that should be idle and ready for new game
--   sessions).
targetConfiguration_targetValue :: Lens' TargetConfiguration Double

-- | Desired value to use with a game server group target-based scaling
--   policy.
targetTrackingConfiguration_targetValue :: Lens' TargetTrackingConfiguration Double

-- | Time stamp indicating when this authorization was issued. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
vpcPeeringAuthorization_creationTime :: Lens' VpcPeeringAuthorization (Maybe UTCTime)

vpcPeeringAuthorization_peerVpcAwsAccountId :: Lens' VpcPeeringAuthorization (Maybe Text)

-- | Time stamp indicating when this authorization expires (24 hours after
--   issuance). Format is a number expressed in Unix time as milliseconds
--   (for example <tt>"1469498468.057"</tt>).
vpcPeeringAuthorization_expirationTime :: Lens' VpcPeeringAuthorization (Maybe UTCTime)

-- | A unique identifier for the AWS account that you use to manage your
--   GameLift fleet. You can find your Account ID in the AWS Management
--   Console under account settings.
vpcPeeringAuthorization_gameLiftAwsAccountId :: Lens' VpcPeeringAuthorization (Maybe Text)

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
vpcPeeringAuthorization_peerVpcId :: Lens' VpcPeeringAuthorization (Maybe Text)

-- | The status information about the connection. Status indicates if a
--   connection is pending, successful, or failed.
vpcPeeringConnection_status :: Lens' VpcPeeringConnection (Maybe VpcPeeringConnectionStatus)

-- | A unique identifier that is automatically assigned to the connection
--   record. This ID is referenced in VPC peering connection events, and is
--   used when deleting a connection with DeleteVpcPeeringConnection.
vpcPeeringConnection_vpcPeeringConnectionId :: Lens' VpcPeeringConnection (Maybe Text)

-- | CIDR block of IPv4 addresses assigned to the VPC peering connection
--   for the GameLift VPC. The peered VPC also has an IPv4 CIDR block
--   associated with it; these blocks cannot overlap or the peering
--   connection cannot be created.
vpcPeeringConnection_ipV4CidrBlock :: Lens' VpcPeeringConnection (Maybe Text)

-- | A unique identifier for the fleet. This ID determines the ID of the
--   Amazon GameLift VPC for your fleet.
vpcPeeringConnection_fleetId :: Lens' VpcPeeringConnection (Maybe Text)

-- | The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet resource for this connection.
vpcPeeringConnection_fleetArn :: Lens' VpcPeeringConnection (Maybe Text)

-- | A unique identifier for the VPC that contains the Amazon GameLift
--   fleet for this connection. This VPC is managed by Amazon GameLift and
--   does not appear in your AWS account.
vpcPeeringConnection_gameLiftVpcId :: Lens' VpcPeeringConnection (Maybe Text)

-- | A unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
vpcPeeringConnection_peerVpcId :: Lens' VpcPeeringConnection (Maybe Text)

-- | Additional messaging associated with the connection status.
vpcPeeringConnectionStatus_message :: Lens' VpcPeeringConnectionStatus (Maybe Text)

-- | Code indicating the status of a VPC peering connection.
vpcPeeringConnectionStatus_code :: Lens' VpcPeeringConnectionStatus (Maybe Text)


module Network.AWS.GameLift.Waiters


-- | Derived from API version <tt>2015-10-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon GameLift Service
--   
--   GameLift provides solutions for hosting session-based multiplayer game
--   servers in the cloud, including tools for deploying, operating, and
--   scaling game servers. Built on AWS global computing infrastructure,
--   GameLift helps you deliver high-performance, high-reliability,
--   low-cost game servers while dynamically scaling your resource usage to
--   meet player demand.
--   
--   <b>About GameLift solutions</b>
--   
--   Get more information on these GameLift solutions in the <a>GameLift
--   Developer Guide</a>.
--   
--   <ul>
--   <li>GameLift managed hosting -- GameLift offers a fully managed
--   service to set up and maintain computing machines for hosting, manage
--   game session and player session life cycle, and handle security,
--   storage, and performance tracking. You can use automatic scaling tools
--   to balance player demand and hosting costs, configure your game
--   session management to minimize player latency, and add FlexMatch for
--   matchmaking.</li>
--   <li>Managed hosting with Realtime Servers -- With GameLift Realtime
--   Servers, you can quickly configure and set up ready-to-go game servers
--   for your game. Realtime Servers provides a game server framework with
--   core GameLift infrastructure already built in. Then use the full range
--   of GameLift managed hosting features, including FlexMatch, for your
--   game.</li>
--   <li>GameLift FleetIQ -- Use GameLift FleetIQ as a standalone service
--   while hosting your games using EC2 instances and Auto Scaling groups.
--   GameLift FleetIQ provides optimizations for game hosting, including
--   boosting the viability of low-cost Spot Instances gaming. For a
--   complete solution, pair the GameLift FleetIQ and FlexMatch standalone
--   services.</li>
--   <li>GameLift FlexMatch -- Add matchmaking to your game hosting
--   solution. FlexMatch is a customizable matchmaking service for
--   multiplayer games. Use FlexMatch as integrated with GameLift managed
--   hosting or incorporate FlexMatch as a standalone service into your own
--   hosting solution.</li>
--   </ul>
--   
--   <b>About this API Reference</b>
--   
--   This reference guide describes the low-level service API for Amazon
--   GameLift. With each topic in this guide, you can find links to
--   language-specific SDK guides and the AWS CLI reference. Useful links:
--   
--   <ul>
--   <li><a>GameLift API operations listed by tasks</a></li>
--   <li><a>GameLift tools and resources</a></li>
--   </ul>
module Network.AWS.GameLift

-- | API version <tt>2015-10-01</tt> of the Amazon GameLift SDK
--   configuration.
defaultService :: Service

-- | The specified game server group has no available game servers to
--   fulfill a <tt>ClaimGameServer</tt> request. Clients can retry such
--   requests immediately or after a waiting period.
_OutOfCapacityException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A service resource associated with the request could not be found.
--   Clients should not retry such requests.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested tagging operation did not succeed. This may be due to
--   invalid tag format or the maximum tag limit may have been exceeded.
--   Resolve the issue before retrying.
_TaggingFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified fleet has no available instances to fulfill a
--   <tt>CreateGameSession</tt> request. Clients can retry such requests
--   immediately or after a waiting period.
_FleetCapacityExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The client failed authentication. Clients should not retry such
--   requests.
_UnauthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service encountered an unrecoverable internal failure while
--   processing the request. Clients can retry such requests immediately or
--   after a waiting period.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation would cause a conflict with the current state
--   of a resource associated with the request and/or the game instance.
--   Resolve the conflict before retrying.
_InvalidGameSessionStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameter values in the request are invalid. Correct the
--   invalid parameter values before retrying.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is unable to resolve the routing for a particular alias
--   because it has a terminal RoutingStrategy associated with it. The
--   message returned in this exception is the message defined in the
--   routing strategy itself. Such requests should only be retried if the
--   routing strategy for the specified alias is modified.
_TerminalRoutingStrategyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The game instance is currently full and cannot allow the requested
--   player(s) to join. Clients can retry such requests immediately or
--   after a waiting period.
_GameSessionFullException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation would cause a conflict with the current state
--   of a resource associated with the request and/or the fleet. Resolve
--   the conflict before retrying.
_InvalidFleetStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation would cause a conflict with the current state
--   of a service resource associated with the request. Resolve the
--   conflict before retrying this request.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation would cause the resource to exceed the allowed
--   service limit. Resolve the issue before retrying.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A game session with this custom ID string already exists in this
--   fleet. Resolve this conflict before retrying this request.
_IdempotentParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation is not supported in the Region specified.
_UnsupportedRegionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeVpcPeeringConnections</a> smart constructor.
data DescribeVpcPeeringConnections
DescribeVpcPeeringConnections' :: Maybe Text -> DescribeVpcPeeringConnections

-- | Create a value of <a>DescribeVpcPeeringConnections</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DescribeVpcPeeringConnections'</a>,
--   <a>describeVpcPeeringConnections_fleetId</a> - A unique identifier for
--   the fleet. You can use either the fleet ID or ARN value.
newDescribeVpcPeeringConnections :: DescribeVpcPeeringConnections

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeVpcPeeringConnectionsResponse</a> smart
--   constructor.
data DescribeVpcPeeringConnectionsResponse
DescribeVpcPeeringConnectionsResponse' :: Maybe [VpcPeeringConnection] -> Int -> DescribeVpcPeeringConnectionsResponse

-- | Create a value of <a>DescribeVpcPeeringConnectionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:vpcPeeringConnections:DescribeVpcPeeringConnectionsResponse'</a>,
--   <a>describeVpcPeeringConnectionsResponse_vpcPeeringConnections</a> - A
--   collection of VPC peering connection records that match the request.
--   
--   <a>$sel:httpStatus:DescribeVpcPeeringConnectionsResponse'</a>,
--   <a>describeVpcPeeringConnectionsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeVpcPeeringConnectionsResponse :: Int -> DescribeVpcPeeringConnectionsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetCapacity</a> smart constructor.
data DescribeFleetCapacity
DescribeFleetCapacity' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> DescribeFleetCapacity

-- | Create a value of <a>DescribeFleetCapacity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetCapacity'</a>,
--   <a>describeFleetCapacity_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value. This parameter is
--   ignored when the request specifies one or a list of fleet IDs.
--   
--   <a>$sel:fleetIds:DescribeFleetCapacity'</a>,
--   <a>describeFleetCapacity_fleetIds</a> - A unique identifier for the
--   fleet(s) to retrieve capacity information for. You can use either the
--   fleet ID or ARN value. Leave this parameter empty to retrieve capacity
--   information for all fleets.
--   
--   <a>$sel:limit:DescribeFleetCapacity'</a>,
--   <a>describeFleetCapacity_limit</a> - The maximum number of results to
--   return. Use this parameter with <tt>NextToken</tt> to get results as a
--   set of sequential pages. This parameter is ignored when the request
--   specifies one or a list of fleet IDs.
newDescribeFleetCapacity :: DescribeFleetCapacity

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetCapacityResponse</a> smart constructor.
data DescribeFleetCapacityResponse
DescribeFleetCapacityResponse' :: Maybe Text -> Maybe [FleetCapacity] -> Int -> DescribeFleetCapacityResponse

-- | Create a value of <a>DescribeFleetCapacityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetCapacity'</a>,
--   <a>describeFleetCapacityResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:fleetCapacity:DescribeFleetCapacityResponse'</a>,
--   <a>describeFleetCapacityResponse_fleetCapacity</a> - A collection of
--   objects that contains capacity information for each requested fleet
--   ID. Capacity objects are returned only for fleets that currently
--   exist.
--   
--   <a>$sel:httpStatus:DescribeFleetCapacityResponse'</a>,
--   <a>describeFleetCapacityResponse_httpStatus</a> - The response's http
--   status code.
newDescribeFleetCapacityResponse :: Int -> DescribeFleetCapacityResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newListBuilds</a> smart constructor.
data ListBuilds
ListBuilds' :: Maybe BuildStatus -> Maybe Text -> Maybe Natural -> ListBuilds

-- | Create a value of <a>ListBuilds</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListBuilds'</a>, <a>listBuilds_status</a> - Build
--   status to filter results by. To retrieve all builds, leave this
--   parameter empty.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListBuilds'</a>, <a>listBuilds_nextToken</a> - A
--   token that indicates the start of the next sequential page of results.
--   Use the token that is returned with a previous call to this operation.
--   To start at the beginning of the result set, do not specify a value.
--   
--   <a>$sel:limit:ListBuilds'</a>, <a>listBuilds_limit</a> - The maximum
--   number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
newListBuilds :: ListBuilds

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newListBuildsResponse</a> smart constructor.
data ListBuildsResponse
ListBuildsResponse' :: Maybe Text -> Maybe [Build] -> Int -> ListBuildsResponse

-- | Create a value of <a>ListBuildsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBuilds'</a>, <a>listBuildsResponse_nextToken</a>
--   - A token that indicates where to resume retrieving results on the
--   next call to this operation. If no token is returned, these results
--   represent the end of the list.
--   
--   <a>$sel:builds:ListBuildsResponse'</a>,
--   <a>listBuildsResponse_builds</a> - A collection of build resources
--   that match the request.
--   
--   <a>$sel:httpStatus:ListBuildsResponse'</a>,
--   <a>listBuildsResponse_httpStatus</a> - The response's http status
--   code.
newListBuildsResponse :: Int -> ListBuildsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteBuild</a> smart constructor.
data DeleteBuild
DeleteBuild' :: Text -> DeleteBuild

-- | Create a value of <a>DeleteBuild</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildId:DeleteBuild'</a>, <a>deleteBuild_buildId</a> - A
--   unique identifier for the build to delete. You can use either the
--   build ID or ARN value.
newDeleteBuild :: Text -> DeleteBuild

-- | <i>See:</i> <a>newDeleteBuildResponse</a> smart constructor.
data DeleteBuildResponse
DeleteBuildResponse' :: DeleteBuildResponse

-- | Create a value of <a>DeleteBuildResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteBuildResponse :: DeleteBuildResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionQueues</a> smart constructor.
data DescribeGameSessionQueues
DescribeGameSessionQueues' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeGameSessionQueues

-- | Create a value of <a>DescribeGameSessionQueues</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeGameSessionQueues'</a>,
--   <a>describeGameSessionQueues_names</a> - A list of queue names to
--   retrieve information for. You can use either the queue ID or ARN
--   value. To request settings for all queues, leave this parameter empty.
--   
--   <a>$sel:nextToken:DescribeGameSessionQueues'</a>,
--   <a>describeGameSessionQueues_nextToken</a> - A token that indicates
--   the start of the next sequential page of results. Use the token that
--   is returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:limit:DescribeGameSessionQueues'</a>,
--   <a>describeGameSessionQueues_limit</a> - The maximum number of results
--   to return. Use this parameter with <tt>NextToken</tt> to get results
--   as a set of sequential pages. You can request up to 50 results.
newDescribeGameSessionQueues :: DescribeGameSessionQueues

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionQueuesResponse</a> smart
--   constructor.
data DescribeGameSessionQueuesResponse
DescribeGameSessionQueuesResponse' :: Maybe Text -> Maybe [GameSessionQueue] -> Int -> DescribeGameSessionQueuesResponse

-- | Create a value of <a>DescribeGameSessionQueuesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeGameSessionQueues'</a>,
--   <a>describeGameSessionQueuesResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:gameSessionQueues:DescribeGameSessionQueuesResponse'</a>,
--   <a>describeGameSessionQueuesResponse_gameSessionQueues</a> - A
--   collection of objects that describe the requested game session queues.
--   
--   <a>$sel:httpStatus:DescribeGameSessionQueuesResponse'</a>,
--   <a>describeGameSessionQueuesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeGameSessionQueuesResponse :: Int -> DescribeGameSessionQueuesResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteAlias</a> smart constructor.
data DeleteAlias
DeleteAlias' :: Text -> DeleteAlias

-- | Create a value of <a>DeleteAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aliasId:DeleteAlias'</a>, <a>deleteAlias_aliasId</a> - A
--   unique identifier of the alias that you want to delete. You can use
--   either the alias ID or ARN value.
newDeleteAlias :: Text -> DeleteAlias

-- | <i>See:</i> <a>newDeleteAliasResponse</a> smart constructor.
data DeleteAliasResponse
DeleteAliasResponse' :: DeleteAliasResponse

-- | Create a value of <a>DeleteAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAliasResponse :: DeleteAliasResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetPortSettings</a> smart constructor.
data DescribeFleetPortSettings
DescribeFleetPortSettings' :: Maybe Text -> Text -> DescribeFleetPortSettings

-- | Create a value of <a>DescribeFleetPortSettings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:DescribeFleetPortSettings'</a>,
--   <a>describeFleetPortSettings_location</a> - A remote location to check
--   for status of port setting updates. Use the AWS Region code format,
--   such as <tt>us-west-2</tt>.
--   
--   <a>$sel:fleetId:DescribeFleetPortSettings'</a>,
--   <a>describeFleetPortSettings_fleetId</a> - A unique identifier for the
--   fleet to retrieve port settings for. You can use either the fleet ID
--   or ARN value.
newDescribeFleetPortSettings :: Text -> DescribeFleetPortSettings

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetPortSettingsResponse</a> smart
--   constructor.
data DescribeFleetPortSettingsResponse
DescribeFleetPortSettingsResponse' :: Maybe Text -> Maybe Text -> Maybe LocationUpdateStatus -> Maybe [IpPermission] -> Maybe Text -> Int -> DescribeFleetPortSettingsResponse

-- | Create a value of <a>DescribeFleetPortSettingsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DescribeFleetPortSettings'</a>,
--   <a>describeFleetPortSettingsResponse_fleetId</a> - A unique identifier
--   for the fleet that was requested.
--   
--   <a>$sel:fleetArn:DescribeFleetPortSettingsResponse'</a>,
--   <a>describeFleetPortSettingsResponse_fleetArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift fleet
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:updateStatus:DescribeFleetPortSettingsResponse'</a>,
--   <a>describeFleetPortSettingsResponse_updateStatus</a> - The current
--   status of updates to the fleet's port settings in the requested fleet
--   location. A status of <tt>PENDING_UPDATE</tt> indicates that an update
--   was requested for the fleet but has not yet been completed for the
--   location.
--   
--   <a>$sel:inboundPermissions:DescribeFleetPortSettingsResponse'</a>,
--   <a>describeFleetPortSettingsResponse_inboundPermissions</a> - The port
--   settings for the requested fleet ID.
--   
--   <a>$sel:location:DescribeFleetPortSettings'</a>,
--   <a>describeFleetPortSettingsResponse_location</a> - The requested
--   fleet location, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
--   
--   <a>$sel:httpStatus:DescribeFleetPortSettingsResponse'</a>,
--   <a>describeFleetPortSettingsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeFleetPortSettingsResponse :: Int -> DescribeFleetPortSettingsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateBuild</a> smart constructor.
data UpdateBuild
UpdateBuild' :: Maybe Text -> Maybe Text -> Text -> UpdateBuild

-- | Create a value of <a>UpdateBuild</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:version:UpdateBuild'</a>, <a>updateBuild_version</a> - Version
--   information that is associated with a build or script. Version strings
--   do not need to be unique.
--   
--   <a>$sel:name:UpdateBuild'</a>, <a>updateBuild_name</a> - A descriptive
--   label that is associated with a build. Build names do not need to be
--   unique.
--   
--   <a>$sel:buildId:UpdateBuild'</a>, <a>updateBuild_buildId</a> - A
--   unique identifier for the build to update. You can use either the
--   build ID or ARN value.
newUpdateBuild :: Text -> UpdateBuild

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateBuildResponse</a> smart constructor.
data UpdateBuildResponse
UpdateBuildResponse' :: Maybe Build -> Int -> UpdateBuildResponse

-- | Create a value of <a>UpdateBuildResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:build:UpdateBuildResponse'</a>,
--   <a>updateBuildResponse_build</a> - The updated build resource.
--   
--   <a>$sel:httpStatus:UpdateBuildResponse'</a>,
--   <a>updateBuildResponse_httpStatus</a> - The response's http status
--   code.
newUpdateBuildResponse :: Int -> UpdateBuildResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeInstances</a> smart constructor.
data DescribeInstances
DescribeInstances' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> DescribeInstances

-- | Create a value of <a>DescribeInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:DescribeInstances'</a>,
--   <a>describeInstances_instanceId</a> - A unique identifier for an
--   instance to retrieve. Specify an instance ID or leave blank to
--   retrieve all instances in the fleet.
--   
--   <a>$sel:nextToken:DescribeInstances'</a>,
--   <a>describeInstances_nextToken</a> - A token that indicates the start
--   of the next sequential page of results. Use the token that is returned
--   with a previous call to this operation. To start at the beginning of
--   the result set, do not specify a value.
--   
--   <a>$sel:location:DescribeInstances'</a>,
--   <a>describeInstances_location</a> - The name of a location to retrieve
--   instance information for, in the form of an AWS Region code such as
--   <tt>us-west-2</tt>.
--   
--   <a>$sel:limit:DescribeInstances'</a>, <a>describeInstances_limit</a> -
--   The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
--   
--   <a>$sel:fleetId:DescribeInstances'</a>,
--   <a>describeInstances_fleetId</a> - A unique identifier for the fleet
--   to retrieve instance information for. You can use either the fleet ID
--   or ARN value.
newDescribeInstances :: Text -> DescribeInstances

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeInstancesResponse</a> smart constructor.
data DescribeInstancesResponse
DescribeInstancesResponse' :: Maybe Text -> Maybe [Instance] -> Int -> DescribeInstancesResponse

-- | Create a value of <a>DescribeInstancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeInstances'</a>,
--   <a>describeInstancesResponse_nextToken</a> - A token that indicates
--   where to resume retrieving results on the next call to this operation.
--   If no token is returned, these results represent the end of the list.
--   
--   <a>$sel:instances:DescribeInstancesResponse'</a>,
--   <a>describeInstancesResponse_instances</a> - A collection of objects
--   containing properties for each instance returned.
--   
--   <a>$sel:httpStatus:DescribeInstancesResponse'</a>,
--   <a>describeInstancesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeInstancesResponse :: Int -> DescribeInstancesResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateAlias</a> smart constructor.
data UpdateAlias
UpdateAlias' :: Maybe RoutingStrategy -> Maybe Text -> Maybe Text -> Text -> UpdateAlias

-- | Create a value of <a>UpdateAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingStrategy:UpdateAlias'</a>,
--   <a>updateAlias_routingStrategy</a> - The routing configuration,
--   including routing type and fleet target, for the alias.
--   
--   <a>$sel:name:UpdateAlias'</a>, <a>updateAlias_name</a> - A descriptive
--   label that is associated with an alias. Alias names do not need to be
--   unique.
--   
--   <a>$sel:description:UpdateAlias'</a>, <a>updateAlias_description</a> -
--   A human-readable description of the alias.
--   
--   <a>$sel:aliasId:UpdateAlias'</a>, <a>updateAlias_aliasId</a> - A
--   unique identifier for the alias that you want to update. You can use
--   either the alias ID or ARN value.
newUpdateAlias :: Text -> UpdateAlias

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateAliasResponse</a> smart constructor.
data UpdateAliasResponse
UpdateAliasResponse' :: Maybe Alias -> Int -> UpdateAliasResponse

-- | Create a value of <a>UpdateAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alias:UpdateAliasResponse'</a>,
--   <a>updateAliasResponse_alias</a> - The updated alias resource.
--   
--   <a>$sel:httpStatus:UpdateAliasResponse'</a>,
--   <a>updateAliasResponse_httpStatus</a> - The response's http status
--   code.
newUpdateAliasResponse :: Int -> UpdateAliasResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetAttributes</a> smart constructor.
data DescribeFleetAttributes
DescribeFleetAttributes' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> DescribeFleetAttributes

-- | Create a value of <a>DescribeFleetAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetAttributes'</a>,
--   <a>describeFleetAttributes_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value. This parameter is
--   ignored when the request specifies one or a list of fleet IDs.
--   
--   <a>$sel:fleetIds:DescribeFleetAttributes'</a>,
--   <a>describeFleetAttributes_fleetIds</a> - A list of unique fleet
--   identifiers to retrieve attributes for. You can use either the fleet
--   ID or ARN value. To retrieve attributes for all current fleets, do not
--   include this parameter.
--   
--   <a>$sel:limit:DescribeFleetAttributes'</a>,
--   <a>describeFleetAttributes_limit</a> - The maximum number of results
--   to return. Use this parameter with <tt>NextToken</tt> to get results
--   as a set of sequential pages. This parameter is ignored when the
--   request specifies one or a list of fleet IDs.
newDescribeFleetAttributes :: DescribeFleetAttributes

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetAttributesResponse</a> smart
--   constructor.
data DescribeFleetAttributesResponse
DescribeFleetAttributesResponse' :: Maybe Text -> Maybe [FleetAttributes] -> Int -> DescribeFleetAttributesResponse

-- | Create a value of <a>DescribeFleetAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetAttributes'</a>,
--   <a>describeFleetAttributesResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:fleetAttributes:DescribeFleetAttributesResponse'</a>,
--   <a>describeFleetAttributesResponse_fleetAttributes</a> - A collection
--   of objects containing attribute metadata for each requested fleet ID.
--   Attribute objects are returned only for fleets that currently exist.
--   
--   <a>$sel:httpStatus:DescribeFleetAttributesResponse'</a>,
--   <a>describeFleetAttributesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeFleetAttributesResponse :: Int -> DescribeFleetAttributesResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetEvents</a> smart constructor.
data DescribeFleetEvents
DescribeFleetEvents' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Natural -> Text -> DescribeFleetEvents

-- | Create a value of <a>DescribeFleetEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetEvents'</a>,
--   <a>describeFleetEvents_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:startTime:DescribeFleetEvents'</a>,
--   <a>describeFleetEvents_startTime</a> - The earliest date to retrieve
--   event logs for. If no start time is specified, this call returns
--   entries starting from when the fleet was created to the specified end
--   time. Format is a number expressed in Unix time as milliseconds (ex:
--   "1469498468.057").
--   
--   <a>$sel:endTime:DescribeFleetEvents'</a>,
--   <a>describeFleetEvents_endTime</a> - The most recent date to retrieve
--   event logs for. If no end time is specified, this call returns entries
--   from the specified start time up to the present. Format is a number
--   expressed in Unix time as milliseconds (ex: "1469498468.057").
--   
--   <a>$sel:limit:DescribeFleetEvents'</a>,
--   <a>describeFleetEvents_limit</a> - The maximum number of results to
--   return. Use this parameter with <tt>NextToken</tt> to get results as a
--   set of sequential pages.
--   
--   <a>$sel:fleetId:DescribeFleetEvents'</a>,
--   <a>describeFleetEvents_fleetId</a> - A unique identifier for the fleet
--   to get event logs for. You can use either the fleet ID or ARN value.
newDescribeFleetEvents :: Text -> DescribeFleetEvents

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetEventsResponse</a> smart constructor.
data DescribeFleetEventsResponse
DescribeFleetEventsResponse' :: Maybe Text -> Maybe [Event] -> Int -> DescribeFleetEventsResponse

-- | Create a value of <a>DescribeFleetEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetEvents'</a>,
--   <a>describeFleetEventsResponse_nextToken</a> - A token that indicates
--   where to resume retrieving results on the next call to this operation.
--   If no token is returned, these results represent the end of the list.
--   
--   <a>$sel:events:DescribeFleetEventsResponse'</a>,
--   <a>describeFleetEventsResponse_events</a> - A collection of objects
--   containing event log entries for the specified fleet.
--   
--   <a>$sel:httpStatus:DescribeFleetEventsResponse'</a>,
--   <a>describeFleetEventsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeFleetEventsResponse :: Int -> DescribeFleetEventsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newPutScalingPolicy</a> smart constructor.
data PutScalingPolicy
PutScalingPolicy' :: Maybe Double -> Maybe TargetConfiguration -> Maybe ComparisonOperatorType -> Maybe PolicyType -> Maybe Int -> Maybe Natural -> Maybe ScalingAdjustmentType -> Text -> Text -> MetricName -> PutScalingPolicy

-- | Create a value of <a>PutScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:threshold:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_threshold</a> - Metric value used to trigger a
--   scaling event.
--   
--   <a>$sel:targetConfiguration:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_targetConfiguration</a> - An object that contains
--   settings for a target-based scaling policy.
--   
--   <a>$sel:comparisonOperator:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_comparisonOperator</a> - Comparison operator to
--   use when measuring the metric against the threshold value.
--   
--   <a>$sel:policyType:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_policyType</a> - The type of scaling policy to
--   create. For a target-based policy, set the parameter <i>MetricName</i>
--   to 'PercentAvailableGameSessions' and specify a
--   <i>TargetConfiguration</i>. For a rule-based policy set the following
--   parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
--   
--   <a>$sel:scalingAdjustment:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_scalingAdjustment</a> - Amount of adjustment to
--   make, based on the scaling adjustment type.
--   
--   <a>$sel:evaluationPeriods:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_evaluationPeriods</a> - Length of time (in
--   minutes) the metric must be at or beyond the threshold before a
--   scaling event is triggered.
--   
--   <a>$sel:scalingAdjustmentType:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_scalingAdjustmentType</a> - The type of adjustment
--   to make to a fleet's instance count (see FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down; for
--   example, a value of "-10" scales the fleet down by 10%.</li>
--   </ul>
--   
--   <a>$sel:name:PutScalingPolicy'</a>, <a>putScalingPolicy_name</a> - A
--   descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique. A fleet can have only one
--   scaling policy with the same name.
--   
--   <a>$sel:fleetId:PutScalingPolicy'</a>, <a>putScalingPolicy_fleetId</a>
--   - A unique identifier for the fleet to apply this policy to. You can
--   use either the fleet ID or ARN value. The fleet cannot be in any of
--   the following statuses: ERROR or DELETING.
--   
--   <a>$sel:metricName:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_metricName</a> - Name of the Amazon
--   GameLift-defined metric that is used to trigger a scaling adjustment.
--   For detailed descriptions of fleet metrics, see <a>Monitor Amazon
--   GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
newPutScalingPolicy :: Text -> Text -> MetricName -> PutScalingPolicy

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newPutScalingPolicyResponse</a> smart constructor.
data PutScalingPolicyResponse
PutScalingPolicyResponse' :: Maybe Text -> Int -> PutScalingPolicyResponse

-- | Create a value of <a>PutScalingPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:PutScalingPolicy'</a>,
--   <a>putScalingPolicyResponse_name</a> - A descriptive label that is
--   associated with a fleet's scaling policy. Policy names do not need to
--   be unique.
--   
--   <a>$sel:httpStatus:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutScalingPolicyResponse :: Int -> PutScalingPolicyResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetUtilization</a> smart constructor.
data DescribeFleetUtilization
DescribeFleetUtilization' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> DescribeFleetUtilization

-- | Create a value of <a>DescribeFleetUtilization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetUtilization'</a>,
--   <a>describeFleetUtilization_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value. This parameter is
--   ignored when the request specifies one or a list of fleet IDs.
--   
--   <a>$sel:fleetIds:DescribeFleetUtilization'</a>,
--   <a>describeFleetUtilization_fleetIds</a> - A unique identifier for the
--   fleet(s) to retrieve utilization data for. You can use either the
--   fleet ID or ARN value. To retrieve attributes for all current fleets,
--   do not include this parameter.
--   
--   <a>$sel:limit:DescribeFleetUtilization'</a>,
--   <a>describeFleetUtilization_limit</a> - The maximum number of results
--   to return. Use this parameter with <tt>NextToken</tt> to get results
--   as a set of sequential pages. This parameter is ignored when the
--   request specifies one or a list of fleet IDs.
newDescribeFleetUtilization :: DescribeFleetUtilization

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetUtilizationResponse</a> smart
--   constructor.
data DescribeFleetUtilizationResponse
DescribeFleetUtilizationResponse' :: Maybe Text -> Maybe [FleetUtilization] -> Int -> DescribeFleetUtilizationResponse

-- | Create a value of <a>DescribeFleetUtilizationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetUtilization'</a>,
--   <a>describeFleetUtilizationResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:fleetUtilization:DescribeFleetUtilizationResponse'</a>,
--   <a>describeFleetUtilizationResponse_fleetUtilization</a> - A
--   collection of objects containing utilization information for each
--   requested fleet ID. Utilization objects are returned only for fleets
--   that currently exist.
--   
--   <a>$sel:httpStatus:DescribeFleetUtilizationResponse'</a>,
--   <a>describeFleetUtilizationResponse_httpStatus</a> - The response's
--   http status code.
newDescribeFleetUtilizationResponse :: Int -> DescribeFleetUtilizationResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeRuntimeConfiguration</a> smart constructor.
data DescribeRuntimeConfiguration
DescribeRuntimeConfiguration' :: Text -> DescribeRuntimeConfiguration

-- | Create a value of <a>DescribeRuntimeConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DescribeRuntimeConfiguration'</a>,
--   <a>describeRuntimeConfiguration_fleetId</a> - A unique identifier for
--   the fleet to get the runtime configuration for. You can use either the
--   fleet ID or ARN value.
newDescribeRuntimeConfiguration :: Text -> DescribeRuntimeConfiguration

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeRuntimeConfigurationResponse</a> smart
--   constructor.
data DescribeRuntimeConfigurationResponse
DescribeRuntimeConfigurationResponse' :: Maybe RuntimeConfiguration -> Int -> DescribeRuntimeConfigurationResponse

-- | Create a value of <a>DescribeRuntimeConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:runtimeConfiguration:DescribeRuntimeConfigurationResponse'</a>,
--   <a>describeRuntimeConfigurationResponse_runtimeConfiguration</a> -
--   Instructions that describe how server processes should be launched and
--   maintained on each instance in the fleet.
--   
--   <a>$sel:httpStatus:DescribeRuntimeConfigurationResponse'</a>,
--   <a>describeRuntimeConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRuntimeConfigurationResponse :: Int -> DescribeRuntimeConfigurationResponse

-- | <i>See:</i> <a>newClaimGameServer</a> smart constructor.
data ClaimGameServer
ClaimGameServer' :: Maybe Text -> Maybe Text -> Text -> ClaimGameServer

-- | Create a value of <a>ClaimGameServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerData:ClaimGameServer'</a>,
--   <a>claimGameServer_gameServerData</a> - A set of custom game server
--   properties, formatted as a single string value. This data is passed to
--   a game client or service when it requests information on game servers
--   using ListGameServers or ClaimGameServer.
--   
--   <a>$sel:gameServerId:ClaimGameServer'</a>,
--   <a>claimGameServer_gameServerId</a> - A custom string that uniquely
--   identifies the game server to claim. If this parameter is left empty,
--   GameLift FleetIQ searches for an available game server in the
--   specified game server group.
--   
--   <a>$sel:gameServerGroupName:ClaimGameServer'</a>,
--   <a>claimGameServer_gameServerGroupName</a> - A unique identifier for
--   the game server group where the game server is running. Use either the
--   GameServerGroup name or ARN value. If you are not specifying a game
--   server to claim, this value identifies where you want GameLift FleetIQ
--   to look for an available game server to claim.
newClaimGameServer :: Text -> ClaimGameServer

-- | <i>See:</i> <a>newClaimGameServerResponse</a> smart constructor.
data ClaimGameServerResponse
ClaimGameServerResponse' :: Maybe GameServer -> Int -> ClaimGameServerResponse

-- | Create a value of <a>ClaimGameServerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServer:ClaimGameServerResponse'</a>,
--   <a>claimGameServerResponse_gameServer</a> - Object that describes the
--   newly claimed game server.
--   
--   <a>$sel:httpStatus:ClaimGameServerResponse'</a>,
--   <a>claimGameServerResponse_httpStatus</a> - The response's http status
--   code.
newClaimGameServerResponse :: Int -> ClaimGameServerResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateGameSession</a> smart constructor.
data UpdateGameSession
UpdateGameSession' :: Maybe PlayerSessionCreationPolicy -> Maybe Natural -> Maybe Text -> Maybe ProtectionPolicy -> Text -> UpdateGameSession

-- | Create a value of <a>UpdateGameSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerSessionCreationPolicy:UpdateGameSession'</a>,
--   <a>updateGameSession_playerSessionCreationPolicy</a> - A policy that
--   determines whether the game session is accepting new players.
--   
--   <a>$sel:maximumPlayerSessionCount:UpdateGameSession'</a>,
--   <a>updateGameSession_maximumPlayerSessionCount</a> - The maximum
--   number of players that can be connected simultaneously to the game
--   session.
--   
--   <a>$sel:name:UpdateGameSession'</a>, <a>updateGameSession_name</a> - A
--   descriptive label that is associated with a game session. Session
--   names do not need to be unique.
--   
--   <a>$sel:protectionPolicy:UpdateGameSession'</a>,
--   <a>updateGameSession_protectionPolicy</a> - Game session protection
--   policy to apply to this game session only.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
--   
--   <a>$sel:gameSessionId:UpdateGameSession'</a>,
--   <a>updateGameSession_gameSessionId</a> - A unique identifier for the
--   game session to update.
newUpdateGameSession :: Text -> UpdateGameSession

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateGameSessionResponse</a> smart constructor.
data UpdateGameSessionResponse
UpdateGameSessionResponse' :: Maybe GameSession -> Int -> UpdateGameSessionResponse

-- | Create a value of <a>UpdateGameSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSession:UpdateGameSessionResponse'</a>,
--   <a>updateGameSessionResponse_gameSession</a> - The updated game
--   session properties.
--   
--   <a>$sel:httpStatus:UpdateGameSessionResponse'</a>,
--   <a>updateGameSessionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateGameSessionResponse :: Int -> UpdateGameSessionResponse

-- | <i>See:</i> <a>newDescribeGameServerGroup</a> smart constructor.
data DescribeGameServerGroup
DescribeGameServerGroup' :: Text -> DescribeGameServerGroup

-- | Create a value of <a>DescribeGameServerGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroupName:DescribeGameServerGroup'</a>,
--   <a>describeGameServerGroup_gameServerGroupName</a> - A unique
--   identifier for the game server group. Use either the GameServerGroup
--   name or ARN value.
newDescribeGameServerGroup :: Text -> DescribeGameServerGroup

-- | <i>See:</i> <a>newDescribeGameServerGroupResponse</a> smart
--   constructor.
data DescribeGameServerGroupResponse
DescribeGameServerGroupResponse' :: Maybe GameServerGroup -> Int -> DescribeGameServerGroupResponse

-- | Create a value of <a>DescribeGameServerGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroup:DescribeGameServerGroupResponse'</a>,
--   <a>describeGameServerGroupResponse_gameServerGroup</a> - An object
--   with the property settings for the requested game server group
--   resource.
--   
--   <a>$sel:httpStatus:DescribeGameServerGroupResponse'</a>,
--   <a>describeGameServerGroupResponse_httpStatus</a> - The response's
--   http status code.
newDescribeGameServerGroupResponse :: Int -> DescribeGameServerGroupResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreatePlayerSession</a> smart constructor.
data CreatePlayerSession
CreatePlayerSession' :: Maybe Text -> Text -> Text -> CreatePlayerSession

-- | Create a value of <a>CreatePlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerData:CreatePlayerSession'</a>,
--   <a>createPlayerSession_playerData</a> - Developer-defined information
--   related to a player. GameLift does not use this data, so it can be
--   formatted as needed for use in the game.
--   
--   <a>$sel:gameSessionId:CreatePlayerSession'</a>,
--   <a>createPlayerSession_gameSessionId</a> - A unique identifier for the
--   game session to add a player to.
--   
--   <a>$sel:playerId:CreatePlayerSession'</a>,
--   <a>createPlayerSession_playerId</a> - A unique identifier for a
--   player. Player IDs are developer-defined.
newCreatePlayerSession :: Text -> Text -> CreatePlayerSession

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreatePlayerSessionResponse</a> smart constructor.
data CreatePlayerSessionResponse
CreatePlayerSessionResponse' :: Maybe PlayerSession -> Int -> CreatePlayerSessionResponse

-- | Create a value of <a>CreatePlayerSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerSession:CreatePlayerSessionResponse'</a>,
--   <a>createPlayerSessionResponse_playerSession</a> - Object that
--   describes the newly created player session record.
--   
--   <a>$sel:httpStatus:CreatePlayerSessionResponse'</a>,
--   <a>createPlayerSessionResponse_httpStatus</a> - The response's http
--   status code.
newCreatePlayerSessionResponse :: Int -> CreatePlayerSessionResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetLocationAttributes</a> smart
--   constructor.
data DescribeFleetLocationAttributes
DescribeFleetLocationAttributes' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> Text -> DescribeFleetLocationAttributes

-- | Create a value of <a>DescribeFleetLocationAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetLocationAttributes'</a>,
--   <a>describeFleetLocationAttributes_nextToken</a> - A token that
--   indicates the start of the next sequential page of results. Use the
--   token that is returned with a previous call to this operation. To
--   start at the beginning of the result set, do not specify a value.
--   
--   <a>$sel:locations:DescribeFleetLocationAttributes'</a>,
--   <a>describeFleetLocationAttributes_locations</a> - A list of fleet
--   locations to retrieve information for. Specify locations in the form
--   of an AWS Region code, such as <tt>us-west-2</tt>.
--   
--   <a>$sel:limit:DescribeFleetLocationAttributes'</a>,
--   <a>describeFleetLocationAttributes_limit</a> - The maximum number of
--   results to return. Use this parameter with <tt>NextToken</tt> to get
--   results as a set of sequential pages. This limit is not currently
--   enforced.
--   
--   <a>$sel:fleetId:DescribeFleetLocationAttributes'</a>,
--   <a>describeFleetLocationAttributes_fleetId</a> - A unique identifier
--   for the fleet to retrieve remote locations for. You can use either the
--   fleet ID or ARN value.
newDescribeFleetLocationAttributes :: Text -> DescribeFleetLocationAttributes

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetLocationAttributesResponse</a> smart
--   constructor.
data DescribeFleetLocationAttributesResponse
DescribeFleetLocationAttributesResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [LocationAttributes] -> Int -> DescribeFleetLocationAttributesResponse

-- | Create a value of <a>DescribeFleetLocationAttributesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeFleetLocationAttributes'</a>,
--   <a>describeFleetLocationAttributesResponse_nextToken</a> - A token
--   that indicates where to resume retrieving results on the next call to
--   this operation. If no token is returned, these results represent the
--   end of the list.
--   
--   <a>$sel:fleetId:DescribeFleetLocationAttributes'</a>,
--   <a>describeFleetLocationAttributesResponse_fleetId</a> - A unique
--   identifier for the fleet that location attributes were requested for.
--   
--   <a>$sel:fleetArn:DescribeFleetLocationAttributesResponse'</a>,
--   <a>describeFleetLocationAttributesResponse_fleetArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift fleet
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   
--   <a>$sel:locationAttributes:DescribeFleetLocationAttributesResponse'</a>,
--   <a>describeFleetLocationAttributesResponse_locationAttributes</a> -
--   Location-specific information on the requested fleet's remote
--   locations.
--   
--   <a>$sel:httpStatus:DescribeFleetLocationAttributesResponse'</a>,
--   <a>describeFleetLocationAttributesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeFleetLocationAttributesResponse :: Int -> DescribeFleetLocationAttributesResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeMatchmaking</a> smart constructor.
data DescribeMatchmaking
DescribeMatchmaking' :: [Text] -> DescribeMatchmaking

-- | Create a value of <a>DescribeMatchmaking</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ticketIds:DescribeMatchmaking'</a>,
--   <a>describeMatchmaking_ticketIds</a> - A unique identifier for a
--   matchmaking ticket. You can include up to 10 ID values.
newDescribeMatchmaking :: DescribeMatchmaking

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeMatchmakingResponse</a> smart constructor.
data DescribeMatchmakingResponse
DescribeMatchmakingResponse' :: Maybe [MatchmakingTicket] -> Int -> DescribeMatchmakingResponse

-- | Create a value of <a>DescribeMatchmakingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ticketList:DescribeMatchmakingResponse'</a>,
--   <a>describeMatchmakingResponse_ticketList</a> - A collection of
--   existing matchmaking ticket objects matching the request.
--   
--   <a>$sel:httpStatus:DescribeMatchmakingResponse'</a>,
--   <a>describeMatchmakingResponse_httpStatus</a> - The response's http
--   status code.
newDescribeMatchmakingResponse :: Int -> DescribeMatchmakingResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newGetGameSessionLogUrl</a> smart constructor.
data GetGameSessionLogUrl
GetGameSessionLogUrl' :: Text -> GetGameSessionLogUrl

-- | Create a value of <a>GetGameSessionLogUrl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionId:GetGameSessionLogUrl'</a>,
--   <a>getGameSessionLogUrl_gameSessionId</a> - A unique identifier for
--   the game session to get logs for.
newGetGameSessionLogUrl :: Text -> GetGameSessionLogUrl

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newGetGameSessionLogUrlResponse</a> smart constructor.
data GetGameSessionLogUrlResponse
GetGameSessionLogUrlResponse' :: Maybe Text -> Int -> GetGameSessionLogUrlResponse

-- | Create a value of <a>GetGameSessionLogUrlResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preSignedUrl:GetGameSessionLogUrlResponse'</a>,
--   <a>getGameSessionLogUrlResponse_preSignedUrl</a> - Location of the
--   requested game session logs, available for download. This URL is valid
--   for 15 minutes, after which S3 will reject any download request using
--   this URL. You can request a new URL any time within the 14-day period
--   that the logs are retained.
--   
--   <a>$sel:httpStatus:GetGameSessionLogUrlResponse'</a>,
--   <a>getGameSessionLogUrlResponse_httpStatus</a> - The response's http
--   status code.
newGetGameSessionLogUrlResponse :: Int -> GetGameSessionLogUrlResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeMatchmakingRuleSets</a> smart constructor.
data DescribeMatchmakingRuleSets
DescribeMatchmakingRuleSets' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe Natural -> DescribeMatchmakingRuleSets

-- | Create a value of <a>DescribeMatchmakingRuleSets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeMatchmakingRuleSets'</a>,
--   <a>describeMatchmakingRuleSets_names</a> - A list of one or more
--   matchmaking rule set names to retrieve details for. (Note: The rule
--   set name is different from the optional "name" field in the rule set
--   body.) You can use either the rule set name or ARN value.
--   
--   <a>$sel:nextToken:DescribeMatchmakingRuleSets'</a>,
--   <a>describeMatchmakingRuleSets_nextToken</a> - A token that indicates
--   the start of the next sequential page of results. Use the token that
--   is returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:limit:DescribeMatchmakingRuleSets'</a>,
--   <a>describeMatchmakingRuleSets_limit</a> - The maximum number of
--   results to return. Use this parameter with <tt>NextToken</tt> to get
--   results as a set of sequential pages.
newDescribeMatchmakingRuleSets :: DescribeMatchmakingRuleSets

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeMatchmakingRuleSetsResponse</a> smart
--   constructor.
data DescribeMatchmakingRuleSetsResponse
DescribeMatchmakingRuleSetsResponse' :: Maybe Text -> Int -> [MatchmakingRuleSet] -> DescribeMatchmakingRuleSetsResponse

-- | Create a value of <a>DescribeMatchmakingRuleSetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeMatchmakingRuleSets'</a>,
--   <a>describeMatchmakingRuleSetsResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:httpStatus:DescribeMatchmakingRuleSetsResponse'</a>,
--   <a>describeMatchmakingRuleSetsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:ruleSets:DescribeMatchmakingRuleSetsResponse'</a>,
--   <a>describeMatchmakingRuleSetsResponse_ruleSets</a> - A collection of
--   requested matchmaking rule set objects.
newDescribeMatchmakingRuleSetsResponse :: Int -> DescribeMatchmakingRuleSetsResponse

-- | <i>See:</i> <a>newSuspendGameServerGroup</a> smart constructor.
data SuspendGameServerGroup
SuspendGameServerGroup' :: Text -> NonEmpty GameServerGroupAction -> SuspendGameServerGroup

-- | Create a value of <a>SuspendGameServerGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroupName:SuspendGameServerGroup'</a>,
--   <a>suspendGameServerGroup_gameServerGroupName</a> - A unique
--   identifier for the game server group. Use either the GameServerGroup
--   name or ARN value.
--   
--   <a>$sel:suspendActions:SuspendGameServerGroup'</a>,
--   <a>suspendGameServerGroup_suspendActions</a> - The activity to suspend
--   for this game server group.
newSuspendGameServerGroup :: Text -> NonEmpty GameServerGroupAction -> SuspendGameServerGroup

-- | <i>See:</i> <a>newSuspendGameServerGroupResponse</a> smart
--   constructor.
data SuspendGameServerGroupResponse
SuspendGameServerGroupResponse' :: Maybe GameServerGroup -> Int -> SuspendGameServerGroupResponse

-- | Create a value of <a>SuspendGameServerGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroup:SuspendGameServerGroupResponse'</a>,
--   <a>suspendGameServerGroupResponse_gameServerGroup</a> - An object that
--   describes the game server group resource, with the
--   <tt>SuspendedActions</tt> property updated to reflect the suspended
--   activity.
--   
--   <a>$sel:httpStatus:SuspendGameServerGroupResponse'</a>,
--   <a>suspendGameServerGroupResponse_httpStatus</a> - The response's http
--   status code.
newSuspendGameServerGroupResponse :: Int -> SuspendGameServerGroupResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeScalingPolicies</a> smart constructor.
data DescribeScalingPolicies
DescribeScalingPolicies' :: Maybe Text -> Maybe ScalingStatusType -> Maybe Text -> Maybe Natural -> Text -> DescribeScalingPolicies

-- | Create a value of <a>DescribeScalingPolicies</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:statusFilter:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_statusFilter</a> - Scaling policy status to
--   filter results on. A scaling policy is only in force when in an
--   <tt>ACTIVE</tt> status.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy is currently in force.</li>
--   <li><b>UPDATEREQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETEREQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
--   
--   <a>$sel:location:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_location</a> - CONTENT TODO
--   
--   <a>$sel:limit:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_limit</a> - The maximum number of results
--   to return. Use this parameter with <tt>NextToken</tt> to get results
--   as a set of sequential pages.
--   
--   <a>$sel:fleetId:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_fleetId</a> - A unique identifier for the
--   fleet to retrieve scaling policies for. You can use either the fleet
--   ID or ARN value.
newDescribeScalingPolicies :: Text -> DescribeScalingPolicies

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeScalingPoliciesResponse</a> smart
--   constructor.
data DescribeScalingPoliciesResponse
DescribeScalingPoliciesResponse' :: Maybe Text -> Maybe [ScalingPolicy] -> Int -> DescribeScalingPoliciesResponse

-- | Create a value of <a>DescribeScalingPoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingPolicies'</a>,
--   <a>describeScalingPoliciesResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:scalingPolicies:DescribeScalingPoliciesResponse'</a>,
--   <a>describeScalingPoliciesResponse_scalingPolicies</a> - A collection
--   of objects containing the scaling policies matching the request.
--   
--   <a>$sel:httpStatus:DescribeScalingPoliciesResponse'</a>,
--   <a>describeScalingPoliciesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScalingPoliciesResponse :: Int -> DescribeScalingPoliciesResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newValidateMatchmakingRuleSet</a> smart constructor.
data ValidateMatchmakingRuleSet
ValidateMatchmakingRuleSet' :: Text -> ValidateMatchmakingRuleSet

-- | Create a value of <a>ValidateMatchmakingRuleSet</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleSetBody:ValidateMatchmakingRuleSet'</a>,
--   <a>validateMatchmakingRuleSet_ruleSetBody</a> - A collection of
--   matchmaking rules to validate, formatted as a JSON string.
newValidateMatchmakingRuleSet :: Text -> ValidateMatchmakingRuleSet

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newValidateMatchmakingRuleSetResponse</a> smart
--   constructor.
data ValidateMatchmakingRuleSetResponse
ValidateMatchmakingRuleSetResponse' :: Maybe Bool -> Int -> ValidateMatchmakingRuleSetResponse

-- | Create a value of <a>ValidateMatchmakingRuleSetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:valid:ValidateMatchmakingRuleSetResponse'</a>,
--   <a>validateMatchmakingRuleSetResponse_valid</a> - A response
--   indicating whether the rule set is valid.
--   
--   <a>$sel:httpStatus:ValidateMatchmakingRuleSetResponse'</a>,
--   <a>validateMatchmakingRuleSetResponse_httpStatus</a> - The response's
--   http status code.
newValidateMatchmakingRuleSetResponse :: Int -> ValidateMatchmakingRuleSetResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeBuild</a> smart constructor.
data DescribeBuild
DescribeBuild' :: Text -> DescribeBuild

-- | Create a value of <a>DescribeBuild</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildId:DescribeBuild'</a>, <a>describeBuild_buildId</a> - A
--   unique identifier for the build to retrieve properties for. You can
--   use either the build ID or ARN value.
newDescribeBuild :: Text -> DescribeBuild

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeBuildResponse</a> smart constructor.
data DescribeBuildResponse
DescribeBuildResponse' :: Maybe Build -> Int -> DescribeBuildResponse

-- | Create a value of <a>DescribeBuildResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:build:DescribeBuildResponse'</a>,
--   <a>describeBuildResponse_build</a> - Set of properties describing the
--   requested build.
--   
--   <a>$sel:httpStatus:DescribeBuildResponse'</a>,
--   <a>describeBuildResponse_httpStatus</a> - The response's http status
--   code.
newDescribeBuildResponse :: Int -> DescribeBuildResponse

-- | <i>See:</i> <a>newDeregisterGameServer</a> smart constructor.
data DeregisterGameServer
DeregisterGameServer' :: Text -> Text -> DeregisterGameServer

-- | Create a value of <a>DeregisterGameServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroupName:DeregisterGameServer'</a>,
--   <a>deregisterGameServer_gameServerGroupName</a> - A unique identifier
--   for the game server group where the game server is running. Use either
--   the GameServerGroup name or ARN value.
--   
--   <a>$sel:gameServerId:DeregisterGameServer'</a>,
--   <a>deregisterGameServer_gameServerId</a> - A custom string that
--   uniquely identifies the game server to deregister.
newDeregisterGameServer :: Text -> Text -> DeregisterGameServer

-- | <i>See:</i> <a>newDeregisterGameServerResponse</a> smart constructor.
data DeregisterGameServerResponse
DeregisterGameServerResponse' :: DeregisterGameServerResponse

-- | Create a value of <a>DeregisterGameServerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeregisterGameServerResponse :: DeregisterGameServerResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateFleetPortSettings</a> smart constructor.
data UpdateFleetPortSettings
UpdateFleetPortSettings' :: Maybe [IpPermission] -> Maybe [IpPermission] -> Text -> UpdateFleetPortSettings

-- | Create a value of <a>UpdateFleetPortSettings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inboundPermissionAuthorizations:UpdateFleetPortSettings'</a>,
--   <a>updateFleetPortSettings_inboundPermissionAuthorizations</a> - A
--   collection of port settings to be added to the fleet resource.
--   
--   <a>$sel:inboundPermissionRevocations:UpdateFleetPortSettings'</a>,
--   <a>updateFleetPortSettings_inboundPermissionRevocations</a> - A
--   collection of port settings to be removed from the fleet resource.
--   
--   <a>$sel:fleetId:UpdateFleetPortSettings'</a>,
--   <a>updateFleetPortSettings_fleetId</a> - A unique identifier for the
--   fleet to update port settings for. You can use either the fleet ID or
--   ARN value.
newUpdateFleetPortSettings :: Text -> UpdateFleetPortSettings

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateFleetPortSettingsResponse</a> smart
--   constructor.
data UpdateFleetPortSettingsResponse
UpdateFleetPortSettingsResponse' :: Maybe Text -> Int -> UpdateFleetPortSettingsResponse

-- | Create a value of <a>UpdateFleetPortSettingsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:UpdateFleetPortSettings'</a>,
--   <a>updateFleetPortSettingsResponse_fleetId</a> - A unique identifier
--   for the fleet that was updated.
--   
--   <a>$sel:httpStatus:UpdateFleetPortSettingsResponse'</a>,
--   <a>updateFleetPortSettingsResponse_httpStatus</a> - The response's
--   http status code.
newUpdateFleetPortSettingsResponse :: Int -> UpdateFleetPortSettingsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newAcceptMatch</a> smart constructor.
data AcceptMatch
AcceptMatch' :: Text -> [Text] -> AcceptanceType -> AcceptMatch

-- | Create a value of <a>AcceptMatch</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ticketId:AcceptMatch'</a>, <a>acceptMatch_ticketId</a> - A
--   unique identifier for a matchmaking ticket. The ticket must be in
--   status <tt>REQUIRES_ACCEPTANCE</tt>; otherwise this request will fail.
--   
--   <a>$sel:playerIds:AcceptMatch'</a>, <a>acceptMatch_playerIds</a> - A
--   unique identifier for a player delivering the response. This parameter
--   can include one or multiple player IDs.
--   
--   <a>$sel:acceptanceType:AcceptMatch'</a>,
--   <a>acceptMatch_acceptanceType</a> - Player response to the proposed
--   match.
newAcceptMatch :: Text -> AcceptanceType -> AcceptMatch

-- | <i>See:</i> <a>newAcceptMatchResponse</a> smart constructor.
data AcceptMatchResponse
AcceptMatchResponse' :: Int -> AcceptMatchResponse

-- | Create a value of <a>AcceptMatchResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AcceptMatchResponse'</a>,
--   <a>acceptMatchResponse_httpStatus</a> - The response's http status
--   code.
newAcceptMatchResponse :: Int -> AcceptMatchResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateFleetCapacity</a> smart constructor.
data UpdateFleetCapacity
UpdateFleetCapacity' :: Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Natural -> Text -> UpdateFleetCapacity

-- | Create a value of <a>UpdateFleetCapacity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacity_minSize</a> - The minimum number of instances
--   that are allowed in the specified fleet location. If this parameter is
--   not set, the default is 0.
--   
--   <a>$sel:maxSize:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacity_maxSize</a> - The maximum number of instances
--   that are allowed in the specified fleet location. If this parameter is
--   not set, the default is 1.
--   
--   <a>$sel:location:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacity_location</a> - The name of a remote location to
--   update fleet capacity settings for, in the form of an AWS Region code
--   such as <tt>us-west-2</tt>.
--   
--   <a>$sel:desiredInstances:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacity_desiredInstances</a> - The number of EC2
--   instances you want to maintain in the specified fleet location. This
--   value must fall between the minimum and maximum size limits.
--   
--   <a>$sel:fleetId:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacity_fleetId</a> - A unique identifier for the fleet
--   to update capacity settings for. You can use either the fleet ID or
--   ARN value.
newUpdateFleetCapacity :: Text -> UpdateFleetCapacity

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateFleetCapacityResponse</a> smart constructor.
data UpdateFleetCapacityResponse
UpdateFleetCapacityResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateFleetCapacityResponse

-- | Create a value of <a>UpdateFleetCapacityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacityResponse_fleetId</a> - A unique identifier for
--   the fleet that was updated.
--   
--   <a>$sel:fleetArn:UpdateFleetCapacityResponse'</a>,
--   <a>updateFleetCapacityResponse_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:location:UpdateFleetCapacity'</a>,
--   <a>updateFleetCapacityResponse_location</a> - The remote location
--   being updated, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
--   
--   <a>$sel:httpStatus:UpdateFleetCapacityResponse'</a>,
--   <a>updateFleetCapacityResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFleetCapacityResponse :: Int -> UpdateFleetCapacityResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeAlias</a> smart constructor.
data DescribeAlias
DescribeAlias' :: Text -> DescribeAlias

-- | Create a value of <a>DescribeAlias</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aliasId:DescribeAlias'</a>, <a>describeAlias_aliasId</a> - The
--   unique identifier for the fleet alias that you want to retrieve. You
--   can use either the alias ID or ARN value.
newDescribeAlias :: Text -> DescribeAlias

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeAliasResponse</a> smart constructor.
data DescribeAliasResponse
DescribeAliasResponse' :: Maybe Alias -> Int -> DescribeAliasResponse

-- | Create a value of <a>DescribeAliasResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alias:DescribeAliasResponse'</a>,
--   <a>describeAliasResponse_alias</a> - The requested alias resource.
--   
--   <a>$sel:httpStatus:DescribeAliasResponse'</a>,
--   <a>describeAliasResponse_httpStatus</a> - The response's http status
--   code.
newDescribeAliasResponse :: Int -> DescribeAliasResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to and uniquely identifies the GameLift
--   resource that you want to remove tags from. GameLift resource ARNs are
--   included in the data object for the resource, which can be retrieved
--   by calling a List or Describe operation for the resource type.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of one or more tag keys to remove from the specified GameLift
--   resource. An AWS resource can have only one tag with a specific tag
--   key, so specifying the tag key identifies which tag to remove.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateFleetAttributes</a> smart constructor.
data UpdateFleetAttributes
UpdateFleetAttributes' :: Maybe Text -> Maybe ProtectionPolicy -> Maybe ResourceCreationLimitPolicy -> Maybe Text -> Maybe [Text] -> Text -> UpdateFleetAttributes

-- | Create a value of <a>UpdateFleetAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributes_name</a> - A descriptive label that is
--   associated with a fleet. Fleet names do not need to be unique.
--   
--   <a>$sel:newGameSessionProtectionPolicy':UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributes_newGameSessionProtectionPolicy</a> - The game
--   session protection policy to apply to all new instances created in
--   this fleet. Instances that already exist are not affected. You can set
--   protection for individual instances using UpdateGameSession.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
--   
--   <a>$sel:resourceCreationLimitPolicy:UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributes_resourceCreationLimitPolicy</a> - Policy
--   settings that limit the number of game sessions an individual player
--   can create over a span of time.
--   
--   <a>$sel:description:UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributes_description</a> - A human-readable
--   description of a fleet.
--   
--   <a>$sel:metricGroups:UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributes_metricGroups</a> - The name of a metric group
--   to add this fleet to. Use a metric group in Amazon CloudWatch to
--   aggregate the metrics from multiple fleets. Provide an existing metric
--   group name, or create a new metric group by providing a new name. A
--   fleet can only be in one metric group at a time.
--   
--   <a>$sel:fleetId:UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributes_fleetId</a> - A unique identifier for the
--   fleet to update attribute metadata for. You can use either the fleet
--   ID or ARN value.
newUpdateFleetAttributes :: Text -> UpdateFleetAttributes

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateFleetAttributesResponse</a> smart constructor.
data UpdateFleetAttributesResponse
UpdateFleetAttributesResponse' :: Maybe Text -> Int -> UpdateFleetAttributesResponse

-- | Create a value of <a>UpdateFleetAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:UpdateFleetAttributes'</a>,
--   <a>updateFleetAttributesResponse_fleetId</a> - A unique identifier for
--   the fleet that was updated.
--   
--   <a>$sel:httpStatus:UpdateFleetAttributesResponse'</a>,
--   <a>updateFleetAttributesResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFleetAttributesResponse :: Int -> UpdateFleetAttributesResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateGameSessionQueue</a> smart constructor.
data UpdateGameSessionQueue
UpdateGameSessionQueue' :: Maybe Text -> Maybe [PlayerLatencyPolicy] -> Maybe PriorityConfiguration -> Maybe [GameSessionQueueDestination] -> Maybe Natural -> Maybe Text -> Maybe FilterConfiguration -> Text -> UpdateGameSessionQueue

-- | Create a value of <a>UpdateGameSessionQueue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customEventData:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_customEventData</a> - Information to be
--   added to all events that are related to this game session queue.
--   
--   <a>$sel:playerLatencyPolicies:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_playerLatencyPolicies</a> - A set of
--   policies that act as a sliding cap on player latency. FleetIQ works to
--   deliver low latency for most players in a game session. These policies
--   ensure that no individual player can be placed into a game with
--   unreasonably high latency. Use multiple policies to gradually relax
--   latency requirements a step at a time. Multiple policies are applied
--   based on their maximum allowed latency, starting with the lowest
--   value. When updating policies, provide a complete collection of
--   policies.
--   
--   <a>$sel:priorityConfiguration:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_priorityConfiguration</a> - Custom settings
--   to use when prioritizing destinations and locations for game session
--   placements. This configuration replaces the FleetIQ default
--   prioritization process. Priority types that are not explicitly named
--   will be automatically applied at the end of the prioritization
--   process. To remove an existing priority configuration, pass in an
--   empty set.
--   
--   <a>$sel:destinations:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_destinations</a> - A list of fleets and/or
--   fleet aliases that can be used to fulfill game session placement
--   requests in the queue. Destinations are identified by either a fleet
--   ARN or a fleet alias ARN, and are listed in order of placement
--   preference. When updating this list, provide a complete list of
--   destinations.
--   
--   <a>$sel:timeoutInSeconds:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_timeoutInSeconds</a> - The maximum time, in
--   seconds, that a new game session placement request remains in the
--   queue. When a request exceeds this time, the game session placement
--   changes to a <tt>TIMED_OUT</tt> status.
--   
--   <a>$sel:notificationTarget:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_notificationTarget</a> - An SNS topic ARN
--   that is set up to receive game session placement notifications. See
--   <a>Setting up notifications for game session placement</a>.
--   
--   <a>$sel:filterConfiguration:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_filterConfiguration</a> - A list of
--   locations where a queue is allowed to place new game sessions.
--   Locations are specified in the form of AWS Region codes, such as
--   <tt>us-west-2</tt>. If this parameter is not set, game sessions can be
--   placed in any queue location. To remove an existing filter
--   configuration, pass in an empty set.
--   
--   <a>$sel:name:UpdateGameSessionQueue'</a>,
--   <a>updateGameSessionQueue_name</a> - A descriptive label that is
--   associated with game session queue. Queue names must be unique within
--   each Region. You can use either the queue ID or ARN value.
newUpdateGameSessionQueue :: Text -> UpdateGameSessionQueue

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateGameSessionQueueResponse</a> smart
--   constructor.
data UpdateGameSessionQueueResponse
UpdateGameSessionQueueResponse' :: Maybe GameSessionQueue -> Int -> UpdateGameSessionQueueResponse

-- | Create a value of <a>UpdateGameSessionQueueResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionQueue:UpdateGameSessionQueueResponse'</a>,
--   <a>updateGameSessionQueueResponse_gameSessionQueue</a> - An object
--   that describes the newly updated game session queue.
--   
--   <a>$sel:httpStatus:UpdateGameSessionQueueResponse'</a>,
--   <a>updateGameSessionQueueResponse_httpStatus</a> - The response's http
--   status code.
newUpdateGameSessionQueueResponse :: Int -> UpdateGameSessionQueueResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The Amazon Resource Name (<a>ARN</a>) that is assigned to and uniquely
--   identifies the GameLift resource that you want to assign tags to.
--   GameLift resource ARNs are included in the data object for the
--   resource, which can be retrieved by calling a List or Describe
--   operation for the resource type.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of one
--   or more tags to assign to the specified GameLift resource. Tags are
--   developer-defined and structured as key-value pairs. The maximum tag
--   limit may be lower than stated. See <a>Tagging AWS Resources</a> for
--   actual tagging limits.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteVpcPeeringConnection</a> smart constructor.
data DeleteVpcPeeringConnection
DeleteVpcPeeringConnection' :: Text -> Text -> DeleteVpcPeeringConnection

-- | Create a value of <a>DeleteVpcPeeringConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DeleteVpcPeeringConnection'</a>,
--   <a>deleteVpcPeeringConnection_fleetId</a> - A unique identifier for
--   the fleet. This fleet specified must match the fleet referenced in the
--   VPC peering connection record. You can use either the fleet ID or ARN
--   value.
--   
--   <a>$sel:vpcPeeringConnectionId:DeleteVpcPeeringConnection'</a>,
--   <a>deleteVpcPeeringConnection_vpcPeeringConnectionId</a> - A unique
--   identifier for a VPC peering connection. This value is included in the
--   VpcPeeringConnection object, which can be retrieved by calling
--   DescribeVpcPeeringConnections.
newDeleteVpcPeeringConnection :: Text -> Text -> DeleteVpcPeeringConnection

-- | <i>See:</i> <a>newDeleteVpcPeeringConnectionResponse</a> smart
--   constructor.
data DeleteVpcPeeringConnectionResponse
DeleteVpcPeeringConnectionResponse' :: Int -> DeleteVpcPeeringConnectionResponse

-- | Create a value of <a>DeleteVpcPeeringConnectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVpcPeeringConnectionResponse'</a>,
--   <a>deleteVpcPeeringConnectionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteVpcPeeringConnectionResponse :: Int -> DeleteVpcPeeringConnectionResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteGameSessionQueue</a> smart constructor.
data DeleteGameSessionQueue
DeleteGameSessionQueue' :: Text -> DeleteGameSessionQueue

-- | Create a value of <a>DeleteGameSessionQueue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteGameSessionQueue'</a>,
--   <a>deleteGameSessionQueue_name</a> - A descriptive label that is
--   associated with game session queue. Queue names must be unique within
--   each Region. You can use either the queue ID or ARN value.
newDeleteGameSessionQueue :: Text -> DeleteGameSessionQueue

-- | <i>See:</i> <a>newDeleteGameSessionQueueResponse</a> smart
--   constructor.
data DeleteGameSessionQueueResponse
DeleteGameSessionQueueResponse' :: Int -> DeleteGameSessionQueueResponse

-- | Create a value of <a>DeleteGameSessionQueueResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteGameSessionQueueResponse'</a>,
--   <a>deleteGameSessionQueueResponse_httpStatus</a> - The response's http
--   status code.
newDeleteGameSessionQueueResponse :: Int -> DeleteGameSessionQueueResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteMatchmakingConfiguration</a> smart
--   constructor.
data DeleteMatchmakingConfiguration
DeleteMatchmakingConfiguration' :: Text -> DeleteMatchmakingConfiguration

-- | Create a value of <a>DeleteMatchmakingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteMatchmakingConfiguration'</a>,
--   <a>deleteMatchmakingConfiguration_name</a> - A unique identifier for
--   the matchmaking configuration. You can use either the configuration
--   name or ARN value.
newDeleteMatchmakingConfiguration :: Text -> DeleteMatchmakingConfiguration

-- | <i>See:</i> <a>newDeleteMatchmakingConfigurationResponse</a> smart
--   constructor.
data DeleteMatchmakingConfigurationResponse
DeleteMatchmakingConfigurationResponse' :: Int -> DeleteMatchmakingConfigurationResponse

-- | Create a value of <a>DeleteMatchmakingConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMatchmakingConfigurationResponse'</a>,
--   <a>deleteMatchmakingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteMatchmakingConfigurationResponse :: Int -> DeleteMatchmakingConfigurationResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateMatchmakingConfiguration</a> smart
--   constructor.
data UpdateMatchmakingConfiguration
UpdateMatchmakingConfiguration' :: Maybe FlexMatchMode -> Maybe Text -> Maybe BackfillMode -> Maybe [GameProperty] -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Bool -> Text -> UpdateMatchmakingConfiguration

-- | Create a value of <a>UpdateMatchmakingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flexMatchMode:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_flexMatchMode</a> - Indicates
--   whether this matchmaking configuration is being used with GameLift
--   hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
--   
--   <a>$sel:customEventData:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_customEventData</a> - Information to
--   add to all events related to the matchmaking configuration.
--   
--   <a>$sel:backfillMode:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_backfillMode</a> - The method that
--   is used to backfill game sessions created with this matchmaking
--   configuration. Specify MANUAL when your game manages backfill requests
--   manually or does not use the match backfill feature. Specify AUTOMATIC
--   to have GameLift create a StartMatchBackfill request whenever a game
--   session has one or more open slots. Learn more about manual and
--   automatic backfill in <a>Backfill Existing Games with FlexMatch</a>.
--   Automatic backfill is not available when <tt>FlexMatchMode</tt> is set
--   to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameProperties:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_gameProperties</a> - A set of custom
--   properties for a game session, formatted as key:value pairs. These
--   properties are passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:acceptanceTimeoutSeconds:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_acceptanceTimeoutSeconds</a> - The
--   length of time (in seconds) to wait for players to accept a proposed
--   match, if acceptance is required.
--   
--   <a>$sel:additionalPlayerCount:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_additionalPlayerCount</a> - The
--   number of player slots in a match to keep open for future players. For
--   example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   if <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameSessionData:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_gameSessionData</a> - A set of
--   custom game session properties, formatted as a single string value.
--   This data is passed to a game server process in the GameSession object
--   with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameSessionQueueArns:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_gameSessionQueueArns</a> - The
--   Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift game
--   session queue resource and uniquely identifies it. ARNs are unique
--   across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. If <tt>FlexMatchMode</tt> is set
--   to <tt>STANDALONE</tt>, do not set this parameter.
--   
--   <a>$sel:notificationTarget:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_notificationTarget</a> - An SNS
--   topic ARN that is set up to receive matchmaking notifications. See
--   <a>Setting up notifications for matchmaking</a> for more information.
--   
--   <a>$sel:requestTimeoutSeconds:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_requestTimeoutSeconds</a> - The
--   maximum duration, in seconds, that a matchmaking ticket can remain in
--   process before timing out. Requests that fail due to timing out can be
--   resubmitted as needed.
--   
--   <a>$sel:description:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_description</a> - A descriptive
--   label that is associated with matchmaking configuration.
--   
--   <a>$sel:ruleSetName:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_ruleSetName</a> - A unique
--   identifier for the matchmaking rule set to use with this
--   configuration. You can use either the rule set name or ARN value. A
--   matchmaking configuration can only use rule sets that are defined in
--   the same Region.
--   
--   <a>$sel:acceptanceRequired:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_acceptanceRequired</a> - A flag that
--   indicates whether a match that was created with this configuration
--   must be accepted by the matched players. To require acceptance, set to
--   TRUE. With this option enabled, matchmaking tickets use the status
--   <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a completed potential
--   match is waiting for player acceptance.
--   
--   <a>$sel:name:UpdateMatchmakingConfiguration'</a>,
--   <a>updateMatchmakingConfiguration_name</a> - A unique identifier for
--   the matchmaking configuration to update. You can use either the
--   configuration name or ARN value.
newUpdateMatchmakingConfiguration :: Text -> UpdateMatchmakingConfiguration

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateMatchmakingConfigurationResponse</a> smart
--   constructor.
data UpdateMatchmakingConfigurationResponse
UpdateMatchmakingConfigurationResponse' :: Maybe MatchmakingConfiguration -> Int -> UpdateMatchmakingConfigurationResponse

-- | Create a value of <a>UpdateMatchmakingConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:UpdateMatchmakingConfigurationResponse'</a>,
--   <a>updateMatchmakingConfigurationResponse_configuration</a> - The
--   updated matchmaking configuration.
--   
--   <a>$sel:httpStatus:UpdateMatchmakingConfigurationResponse'</a>,
--   <a>updateMatchmakingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateMatchmakingConfigurationResponse :: Int -> UpdateMatchmakingConfigurationResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newRequestUploadCredentials</a> smart constructor.
data RequestUploadCredentials
RequestUploadCredentials' :: Text -> RequestUploadCredentials

-- | Create a value of <a>RequestUploadCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildId:RequestUploadCredentials'</a>,
--   <a>requestUploadCredentials_buildId</a> - A unique identifier for the
--   build to get credentials for. You can use either the build ID or ARN
--   value.
newRequestUploadCredentials :: Text -> RequestUploadCredentials

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newRequestUploadCredentialsResponse</a> smart
--   constructor.
data RequestUploadCredentialsResponse
RequestUploadCredentialsResponse' :: Maybe S3Location -> Maybe (Sensitive AwsCredentials) -> Int -> RequestUploadCredentialsResponse

-- | Create a value of <a>RequestUploadCredentialsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storageLocation:RequestUploadCredentialsResponse'</a>,
--   <a>requestUploadCredentialsResponse_storageLocation</a> - Amazon S3
--   path and key, identifying where the game build files are stored.
--   
--   <a>$sel:uploadCredentials:RequestUploadCredentialsResponse'</a>,
--   <a>requestUploadCredentialsResponse_uploadCredentials</a> - AWS
--   credentials required when uploading a game build to the storage
--   location. These credentials have a limited lifespan and are valid only
--   for the build they were issued for.
--   
--   <a>$sel:httpStatus:RequestUploadCredentialsResponse'</a>,
--   <a>requestUploadCredentialsResponse_httpStatus</a> - The response's
--   http status code.
newRequestUploadCredentialsResponse :: Int -> RequestUploadCredentialsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetLocationCapacity</a> smart constructor.
data DescribeFleetLocationCapacity
DescribeFleetLocationCapacity' :: Text -> Text -> DescribeFleetLocationCapacity

-- | Create a value of <a>DescribeFleetLocationCapacity</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DescribeFleetLocationCapacity'</a>,
--   <a>describeFleetLocationCapacity_fleetId</a> - A unique identifier for
--   the fleet to request location capacity for. You can use either the
--   fleet ID or ARN value.
--   
--   <a>$sel:location:DescribeFleetLocationCapacity'</a>,
--   <a>describeFleetLocationCapacity_location</a> - The fleet location to
--   retrieve capacity information for. Specify a location in the form of
--   an AWS Region code, such as <tt>us-west-2</tt>.
newDescribeFleetLocationCapacity :: Text -> Text -> DescribeFleetLocationCapacity

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetLocationCapacityResponse</a> smart
--   constructor.
data DescribeFleetLocationCapacityResponse
DescribeFleetLocationCapacityResponse' :: Maybe FleetCapacity -> Int -> DescribeFleetLocationCapacityResponse

-- | Create a value of <a>DescribeFleetLocationCapacityResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetCapacity:DescribeFleetLocationCapacityResponse'</a>,
--   <a>describeFleetLocationCapacityResponse_fleetCapacity</a> - Resource
--   capacity information for the requested fleet location. Capacity
--   objects are returned only for fleets and locations that currently
--   exist.
--   
--   <a>$sel:httpStatus:DescribeFleetLocationCapacityResponse'</a>,
--   <a>describeFleetLocationCapacityResponse_httpStatus</a> - The
--   response's http status code.
newDescribeFleetLocationCapacityResponse :: Int -> DescribeFleetLocationCapacityResponse

-- | <i>See:</i> <a>newRegisterGameServer</a> smart constructor.
data RegisterGameServer
RegisterGameServer' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> RegisterGameServer

-- | Create a value of <a>RegisterGameServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerData:RegisterGameServer'</a>,
--   <a>registerGameServer_gameServerData</a> - A set of custom game server
--   properties, formatted as a single string value. This data is passed to
--   a game client or service when it requests information on game servers
--   using ListGameServers or ClaimGameServer.
--   
--   <a>$sel:connectionInfo:RegisterGameServer'</a>,
--   <a>registerGameServer_connectionInfo</a> - Information that is needed
--   to make inbound client connections to the game server. This might
--   include the IP address and port, DNS name, and other information.
--   
--   <a>$sel:gameServerGroupName:RegisterGameServer'</a>,
--   <a>registerGameServer_gameServerGroupName</a> - A unique identifier
--   for the game server group where the game server is running. Use either
--   the GameServerGroup name or ARN value.
--   
--   <a>$sel:gameServerId:RegisterGameServer'</a>,
--   <a>registerGameServer_gameServerId</a> - A custom string that uniquely
--   identifies the game server to register. Game server IDs are
--   developer-defined and must be unique across all game server groups in
--   your AWS account.
--   
--   <a>$sel:instanceId:RegisterGameServer'</a>,
--   <a>registerGameServer_instanceId</a> - The unique identifier for the
--   instance where the game server is running. This ID is available in the
--   instance metadata. EC2 instance IDs use a 17-character format, for
--   example: <tt>i-1234567890abcdef0</tt>.
newRegisterGameServer :: Text -> Text -> Text -> RegisterGameServer

-- | <i>See:</i> <a>newRegisterGameServerResponse</a> smart constructor.
data RegisterGameServerResponse
RegisterGameServerResponse' :: Maybe GameServer -> Int -> RegisterGameServerResponse

-- | Create a value of <a>RegisterGameServerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServer:RegisterGameServerResponse'</a>,
--   <a>registerGameServerResponse_gameServer</a> - Object that describes
--   the newly registered game server.
--   
--   <a>$sel:httpStatus:RegisterGameServerResponse'</a>,
--   <a>registerGameServerResponse_httpStatus</a> - The response's http
--   status code.
newRegisterGameServerResponse :: Int -> RegisterGameServerResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateFleet</a> smart constructor.
data CreateFleet
CreateFleet' :: Maybe Text -> Maybe FleetType -> Maybe Text -> Maybe CertificateConfiguration -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe ProtectionPolicy -> Maybe RuntimeConfiguration -> Maybe [Tag] -> Maybe [IpPermission] -> Maybe (NonEmpty LocationConfiguration) -> Maybe ResourceCreationLimitPolicy -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Text -> EC2InstanceType -> CreateFleet

-- | Create a value of <a>CreateFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:peerVpcAwsAccountId:CreateFleet'</a>,
--   <a>createFleet_peerVpcAwsAccountId</a> - Used when peering your
--   GameLift fleet with a VPC, the unique identifier for the AWS account
--   that owns the VPC. You can find your account ID in the AWS Management
--   Console under account settings.
--   
--   <a>$sel:fleetType:CreateFleet'</a>, <a>createFleet_fleetType</a> -
--   Indicates whether to use On-Demand or Spot instances for this fleet.
--   By default, this property is set to <tt>ON_DEMAND</tt>. Learn more
--   about when to use <a>On-Demand versus Spot Instances</a>. This
--   property cannot be changed after the fleet is created.
--   
--   <a>$sel:instanceRoleArn:CreateFleet'</a>,
--   <a>createFleet_instanceRoleArn</a> - A unique identifier for an AWS
--   IAM role that manages access to your AWS services. With an instance
--   role ARN set, any application that runs on an instance in this fleet
--   can assume the role, including install scripts, server processes, and
--   daemons (background processes). Create a role or look up a role's ARN
--   by using the <a>IAM dashboard</a> in the AWS Management Console. Learn
--   more about using on-box credentials for your game servers at <a>Access
--   external resources from a game server</a>. This property cannot be
--   changed after the fleet is created.
--   
--   <a>$sel:certificateConfiguration:CreateFleet'</a>,
--   <a>createFleet_certificateConfiguration</a> - Prompts GameLift to
--   generate a TLS/SSL certificate for the fleet. TLS certificates are
--   used for encrypting traffic between game clients and the game servers
--   that are running on GameLift. By default, the
--   <tt>CertificateConfiguration</tt> is set to <tt>DISABLED</tt>. Learn
--   more at <a>Securing Client/Server Communication</a>. This property
--   cannot be changed after the fleet is created.
--   
--   Note: This feature requires the AWS Certificate Manager (ACM) service,
--   which is not available in all AWS regions. When working in a region
--   that does not support this feature, a fleet creation request with
--   certificate generation fails with a 4xx error.
--   
--   <a>$sel:serverLaunchPath:CreateFleet'</a>,
--   <a>createFleet_serverLaunchPath</a> - <b>This parameter is no longer
--   used.</b> Specify a server launch path using the
--   <tt>RuntimeConfiguration</tt> parameter. Requests that use this
--   parameter instead continue to be valid.
--   
--   <a>$sel:logPaths:CreateFleet'</a>, <a>createFleet_logPaths</a> -
--   <b>This parameter is no longer used.</b> To specify where GameLift
--   should store log files once a server process shuts down, use the
--   GameLift server API <tt>ProcessReady()</tt> and specify one or more
--   directory paths in <tt>logParameters</tt>. See more information in the
--   <a>Server API Reference</a>.
--   
--   <a>$sel:serverLaunchParameters:CreateFleet'</a>,
--   <a>createFleet_serverLaunchParameters</a> - <b>This parameter is no
--   longer used.</b> Specify server launch parameters using the
--   <tt>RuntimeConfiguration</tt> parameter. Requests that use this
--   parameter instead continue to be valid.
--   
--   <a>$sel:newGameSessionProtectionPolicy':CreateFleet'</a>,
--   <a>createFleet_newGameSessionProtectionPolicy</a> - The status of
--   termination protection for active game sessions on the fleet. By
--   default, this property is set to <tt>NoProtection</tt>. You can also
--   set game session protection for an individual game session by calling
--   UpdateGameSession.
--   
--   <ul>
--   <li><b>NoProtection</b> - Game sessions can be terminated during
--   active gameplay as a result of a scale-down event.</li>
--   <li><b>FullProtection</b> - Game sessions in <tt>ACTIVE</tt> status
--   cannot be terminated during a scale-down event.</li>
--   </ul>
--   
--   <a>$sel:runtimeConfiguration:CreateFleet'</a>,
--   <a>createFleet_runtimeConfiguration</a> - Instructions for how to
--   launch and maintain server processes on instances in the fleet. The
--   runtime configuration defines one or more server process
--   configurations, each identifying a build executable or Realtime script
--   file and the number of processes of that type to run concurrently.
--   
--   The <tt>RuntimeConfiguration</tt> parameter is required unless the
--   fleet is being configured using the older parameters
--   <tt>ServerLaunchPath</tt> and <tt>ServerLaunchParameters</tt>, which
--   are still supported for backward compatibility.
--   
--   <a>$sel:tags:CreateFleet'</a>, <a>createFleet_tags</a> - A list of
--   labels to assign to the new fleet resource. Tags are developer-defined
--   key-value pairs. Tagging AWS resources are useful for resource
--   management, access management and cost allocation. For more
--   information, see <a>Tagging AWS Resources</a> in the <i>AWS General
--   Reference</i>. Once the fleet is created, you can use TagResource,
--   UntagResource, and ListTagsForResource to add, remove, and view tags.
--   The maximum tag limit may be lower than stated. See the /AWS General
--   Reference/ for actual tagging limits.
--   
--   <a>$sel:eC2InboundPermissions:CreateFleet'</a>,
--   <a>createFleet_eC2InboundPermissions</a> - The allowed IP address
--   ranges and port settings that allow inbound traffic to access game
--   sessions on this fleet. If the fleet is hosting a custom game build,
--   this property must be set before players can connect to game sessions.
--   For Realtime Servers fleets, GameLift automatically sets TCP and UDP
--   ranges.
--   
--   <a>$sel:locations:CreateFleet'</a>, <a>createFleet_locations</a> - A
--   set of remote locations to deploy additional instances to and manage
--   as part of the fleet. This parameter can only be used when creating
--   fleets in AWS Regions that support multiple locations. You can add any
--   GameLift-supported AWS Region as a remote location, in the form of an
--   AWS Region code such as <tt>us-west-2</tt>. To create a fleet with
--   instances in the home Region only, omit this parameter.
--   
--   <a>$sel:resourceCreationLimitPolicy:CreateFleet'</a>,
--   <a>createFleet_resourceCreationLimitPolicy</a> - A policy that limits
--   the number of game sessions that an individual player can create on
--   instances in this fleet within a specified span of time.
--   
--   <a>$sel:description:CreateFleet'</a>, <a>createFleet_description</a> -
--   A human-readable description of the fleet.
--   
--   <a>$sel:buildId:CreateFleet'</a>, <a>createFleet_buildId</a> - The
--   unique identifier for a custom game server build to be deployed on
--   fleet instances. You can use either the build ID or ARN. The build
--   must be uploaded to GameLift and in <tt>READY</tt> status. This fleet
--   property cannot be changed later.
--   
--   <a>$sel:metricGroups:CreateFleet'</a>, <a>createFleet_metricGroups</a>
--   - The name of an AWS CloudWatch metric group to add this fleet to. A
--   metric group is used to aggregate the metrics for multiple fleets. You
--   can specify an existing metric group name or set a new name to create
--   a new metric group. A fleet can be included in only one metric group
--   at a time.
--   
--   <a>$sel:peerVpcId:CreateFleet'</a>, <a>createFleet_peerVpcId</a> - A
--   unique identifier for a VPC with resources to be accessed by your
--   GameLift fleet. The VPC must be in the same Region as your fleet. To
--   look up a VPC ID, use the <a>VPC Dashboard</a> in the AWS Management
--   Console. Learn more about VPC peering in <a>VPC Peering with GameLift
--   Fleets</a>.
--   
--   <a>$sel:scriptId:CreateFleet'</a>, <a>createFleet_scriptId</a> - The
--   unique identifier for a Realtime configuration script to be deployed
--   on fleet instances. You can use either the script ID or ARN. Scripts
--   must be uploaded to GameLift prior to creating the fleet. This fleet
--   property cannot be changed later.
--   
--   <a>$sel:name:CreateFleet'</a>, <a>createFleet_name</a> - A descriptive
--   label that is associated with a fleet. Fleet names do not need to be
--   unique.
--   
--   <a>$sel:eC2InstanceType:CreateFleet'</a>,
--   <a>createFleet_eC2InstanceType</a> - The GameLift-supported EC2
--   instance type to use for all fleet instances. Instance type determines
--   the computing resources that will be used to host your game servers,
--   including CPU, memory, storage, and networking capacity. See <a>Amazon
--   EC2 Instance Types</a> for detailed descriptions of EC2 instance
--   types.
newCreateFleet :: Text -> EC2InstanceType -> CreateFleet

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateFleetResponse</a> smart constructor.
data CreateFleetResponse
CreateFleetResponse' :: Maybe [LocationState] -> Maybe FleetAttributes -> Int -> CreateFleetResponse

-- | Create a value of <a>CreateFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationStates:CreateFleetResponse'</a>,
--   <a>createFleetResponse_locationStates</a> - The fleet's locations and
--   life-cycle status of each location. For new fleets, the status of all
--   locations is set to <tt>NEW</tt>. During fleet creation, GameLift
--   updates each location status as instances are deployed there and
--   prepared for game hosting. This list includes an entry for the fleet's
--   home Region. For fleets with no remote locations, only one entry,
--   representing the home Region, is returned.
--   
--   <a>$sel:fleetAttributes:CreateFleetResponse'</a>,
--   <a>createFleetResponse_fleetAttributes</a> - The properties for the
--   new fleet, including the current status. All fleets are placed in
--   <tt>NEW</tt> status on creation.
--   
--   <a>$sel:httpStatus:CreateFleetResponse'</a>,
--   <a>createFleetResponse_httpStatus</a> - The response's http status
--   code.
newCreateFleetResponse :: Int -> CreateFleetResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeMatchmakingConfigurations</a> smart
--   constructor.
data DescribeMatchmakingConfigurations
DescribeMatchmakingConfigurations' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeMatchmakingConfigurations

-- | Create a value of <a>DescribeMatchmakingConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:DescribeMatchmakingConfigurations'</a>,
--   <a>describeMatchmakingConfigurations_names</a> - A unique identifier
--   for the matchmaking configuration(s) to retrieve. You can use either
--   the configuration name or ARN value. To request all existing
--   configurations, leave this parameter empty.
--   
--   <a>$sel:nextToken:DescribeMatchmakingConfigurations'</a>,
--   <a>describeMatchmakingConfigurations_nextToken</a> - A token that
--   indicates the start of the next sequential page of results. Use the
--   token that is returned with a previous call to this operation. To
--   start at the beginning of the result set, do not specify a value.
--   
--   <a>$sel:ruleSetName:DescribeMatchmakingConfigurations'</a>,
--   <a>describeMatchmakingConfigurations_ruleSetName</a> - A unique
--   identifier for the matchmaking rule set. You can use either the rule
--   set name or ARN value. Use this parameter to retrieve all matchmaking
--   configurations that use this rule set.
--   
--   <a>$sel:limit:DescribeMatchmakingConfigurations'</a>,
--   <a>describeMatchmakingConfigurations_limit</a> - The maximum number of
--   results to return. Use this parameter with <tt>NextToken</tt> to get
--   results as a set of sequential pages. This parameter is limited to 10.
newDescribeMatchmakingConfigurations :: DescribeMatchmakingConfigurations

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeMatchmakingConfigurationsResponse</a> smart
--   constructor.
data DescribeMatchmakingConfigurationsResponse
DescribeMatchmakingConfigurationsResponse' :: Maybe Text -> Maybe [MatchmakingConfiguration] -> Int -> DescribeMatchmakingConfigurationsResponse

-- | Create a value of <a>DescribeMatchmakingConfigurationsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeMatchmakingConfigurations'</a>,
--   <a>describeMatchmakingConfigurationsResponse_nextToken</a> - A token
--   that indicates where to resume retrieving results on the next call to
--   this operation. If no token is returned, these results represent the
--   end of the list.
--   
--   <a>$sel:configurations:DescribeMatchmakingConfigurationsResponse'</a>,
--   <a>describeMatchmakingConfigurationsResponse_configurations</a> - A
--   collection of requested matchmaking configurations.
--   
--   <a>$sel:httpStatus:DescribeMatchmakingConfigurationsResponse'</a>,
--   <a>describeMatchmakingConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeMatchmakingConfigurationsResponse :: Int -> DescribeMatchmakingConfigurationsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newResolveAlias</a> smart constructor.
data ResolveAlias
ResolveAlias' :: Text -> ResolveAlias

-- | Create a value of <a>ResolveAlias</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aliasId:ResolveAlias'</a>, <a>resolveAlias_aliasId</a> - The
--   unique identifier of the alias that you want to retrieve a fleet ID
--   for. You can use either the alias ID or ARN value.
newResolveAlias :: Text -> ResolveAlias

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newResolveAliasResponse</a> smart constructor.
data ResolveAliasResponse
ResolveAliasResponse' :: Maybe Text -> Maybe Text -> Int -> ResolveAliasResponse

-- | Create a value of <a>ResolveAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:ResolveAliasResponse'</a>,
--   <a>resolveAliasResponse_fleetId</a> - The fleet identifier that the
--   alias is pointing to.
--   
--   <a>$sel:fleetArn:ResolveAliasResponse'</a>,
--   <a>resolveAliasResponse_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift fleet resource that this
--   alias points to.
--   
--   <a>$sel:httpStatus:ResolveAliasResponse'</a>,
--   <a>resolveAliasResponse_httpStatus</a> - The response's http status
--   code.
newResolveAliasResponse :: Int -> ResolveAliasResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteFleet</a> smart constructor.
data DeleteFleet
DeleteFleet' :: Text -> DeleteFleet

-- | Create a value of <a>DeleteFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DeleteFleet'</a>, <a>deleteFleet_fleetId</a> - A
--   unique identifier for the fleet to be deleted. You can use either the
--   fleet ID or ARN value.
newDeleteFleet :: Text -> DeleteFleet

-- | <i>See:</i> <a>newDeleteFleetResponse</a> smart constructor.
data DeleteFleetResponse
DeleteFleetResponse' :: DeleteFleetResponse

-- | Create a value of <a>DeleteFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFleetResponse :: DeleteFleetResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionDetails</a> smart constructor.
data DescribeGameSessionDetails
DescribeGameSessionDetails' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeGameSessionDetails

-- | Create a value of <a>DescribeGameSessionDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_nextToken</a> - A token that indicates
--   the start of the next sequential page of results. Use the token that
--   is returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:fleetId:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_fleetId</a> - A unique identifier for
--   the fleet to retrieve all game sessions active on the fleet. You can
--   use either the fleet ID or ARN value.
--   
--   <a>$sel:gameSessionId:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_gameSessionId</a> - A unique identifier
--   for the game session to retrieve.
--   
--   <a>$sel:statusFilter:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_statusFilter</a> - Game session status
--   to filter results on. Possible game session statuses include
--   <tt>ACTIVE</tt>, <tt>TERMINATED</tt>, <tt>ACTIVATING</tt> and
--   <tt>TERMINATING</tt> (the last two are transitory).
--   
--   <a>$sel:aliasId:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_aliasId</a> - A unique identifier for
--   the alias associated with the fleet to retrieve all game sessions for.
--   You can use either the alias ID or ARN value.
--   
--   <a>$sel:location:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_location</a> - A fleet location to get
--   game sessions for. You can specify a fleet's home Region or a remote
--   location. Use the AWS Region code format, such as <tt>us-west-2</tt>.
--   
--   <a>$sel:limit:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetails_limit</a> - The maximum number of
--   results to return. Use this parameter with <tt>NextToken</tt> to get
--   results as a set of sequential pages.
newDescribeGameSessionDetails :: DescribeGameSessionDetails

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionDetailsResponse</a> smart
--   constructor.
data DescribeGameSessionDetailsResponse
DescribeGameSessionDetailsResponse' :: Maybe Text -> Maybe [GameSessionDetail] -> Int -> DescribeGameSessionDetailsResponse

-- | Create a value of <a>DescribeGameSessionDetailsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeGameSessionDetails'</a>,
--   <a>describeGameSessionDetailsResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:gameSessionDetails:DescribeGameSessionDetailsResponse'</a>,
--   <a>describeGameSessionDetailsResponse_gameSessionDetails</a> - A
--   collection of properties for each game session that matches the
--   request.
--   
--   <a>$sel:httpStatus:DescribeGameSessionDetailsResponse'</a>,
--   <a>describeGameSessionDetailsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeGameSessionDetailsResponse :: Int -> DescribeGameSessionDetailsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newListFleets</a> smart constructor.
data ListFleets
ListFleets' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> ListFleets

-- | Create a value of <a>ListFleets</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFleets'</a>, <a>listFleets_nextToken</a> - A
--   token that indicates the start of the next sequential page of results.
--   Use the token that is returned with a previous call to this operation.
--   To start at the beginning of the result set, do not specify a value.
--   
--   <a>$sel:buildId:ListFleets'</a>, <a>listFleets_buildId</a> - A unique
--   identifier for the build to request fleets for. Use this parameter to
--   return only fleets using a specified build. Use either the build ID or
--   ARN value.
--   
--   <a>$sel:limit:ListFleets'</a>, <a>listFleets_limit</a> - The maximum
--   number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
--   
--   <a>$sel:scriptId:ListFleets'</a>, <a>listFleets_scriptId</a> - A
--   unique identifier for the Realtime script to request fleets for. Use
--   this parameter to return only fleets using a specified script. Use
--   either the script ID or ARN value.
newListFleets :: ListFleets

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newListFleetsResponse</a> smart constructor.
data ListFleetsResponse
ListFleetsResponse' :: Maybe Text -> Maybe (NonEmpty Text) -> Int -> ListFleetsResponse

-- | Create a value of <a>ListFleetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFleets'</a>, <a>listFleetsResponse_nextToken</a>
--   - A token that indicates where to resume retrieving results on the
--   next call to this operation. If no token is returned, these results
--   represent the end of the list.
--   
--   <a>$sel:fleetIds:ListFleetsResponse'</a>,
--   <a>listFleetsResponse_fleetIds</a> - A set of fleet IDs that match the
--   list request. You can retrieve additional information about all
--   returned fleets by passing this result set to a
--   DescribeFleetAttributes, DescribeFleetCapacity, or
--   DescribeFleetUtilization call.
--   
--   <a>$sel:httpStatus:ListFleetsResponse'</a>,
--   <a>listFleetsResponse_httpStatus</a> - The response's http status
--   code.
newListFleetsResponse :: Int -> ListFleetsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStartMatchBackfill</a> smart constructor.
data StartMatchBackfill
StartMatchBackfill' :: Maybe Text -> Maybe Text -> Text -> [Player] -> StartMatchBackfill

-- | Create a value of <a>StartMatchBackfill</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ticketId:StartMatchBackfill'</a>,
--   <a>startMatchBackfill_ticketId</a> - A unique identifier for a
--   matchmaking ticket. If no ticket ID is specified here, Amazon GameLift
--   will generate one in the form of a UUID. Use this identifier to track
--   the match backfill ticket status and retrieve match results.
--   
--   <a>$sel:gameSessionArn:StartMatchBackfill'</a>,
--   <a>startMatchBackfill_gameSessionArn</a> - A unique identifier for the
--   game session. Use the game session ID. When using FlexMatch as a
--   standalone matchmaking solution, this parameter is not needed.
--   
--   <a>$sel:configurationName:StartMatchBackfill'</a>,
--   <a>startMatchBackfill_configurationName</a> - Name of the matchmaker
--   to use for this request. You can use either the configuration name or
--   ARN value. The ARN of the matchmaker that was used with the original
--   game session is listed in the GameSession object,
--   <tt>MatchmakerData</tt> property.
--   
--   <a>$sel:players:StartMatchBackfill'</a>,
--   <a>startMatchBackfill_players</a> - Match information on all players
--   that are currently assigned to the game session. This information is
--   used by the matchmaker to find new players and add them to the
--   existing game.
--   
--   <ul>
--   <li>PlayerID, PlayerAttributes, Team -- This information is maintained
--   in the GameSession object, <tt>MatchmakerData</tt> property, for all
--   players who are currently assigned to the game session. The matchmaker
--   data is in JSON syntax, formatted as a string. For more details, see
--   <a>Match Data</a>.</li>
--   <li>LatencyInMs -- If the matchmaker uses player latency, include a
--   latency value, in milliseconds, for the Region that the game session
--   is currently in. Do not include latency values for any other
--   Region.</li>
--   </ul>
newStartMatchBackfill :: Text -> StartMatchBackfill

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newStartMatchBackfillResponse</a> smart constructor.
data StartMatchBackfillResponse
StartMatchBackfillResponse' :: Maybe MatchmakingTicket -> Int -> StartMatchBackfillResponse

-- | Create a value of <a>StartMatchBackfillResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchmakingTicket:StartMatchBackfillResponse'</a>,
--   <a>startMatchBackfillResponse_matchmakingTicket</a> - Ticket
--   representing the backfill matchmaking request. This object includes
--   the information in the request, ticket status, and match results as
--   generated during the matchmaking process.
--   
--   <a>$sel:httpStatus:StartMatchBackfillResponse'</a>,
--   <a>startMatchBackfillResponse_httpStatus</a> - The response's http
--   status code.
newStartMatchBackfillResponse :: Int -> StartMatchBackfillResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStopMatchmaking</a> smart constructor.
data StopMatchmaking
StopMatchmaking' :: Text -> StopMatchmaking

-- | Create a value of <a>StopMatchmaking</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ticketId:StopMatchmaking'</a>, <a>stopMatchmaking_ticketId</a>
--   - A unique identifier for a matchmaking ticket.
newStopMatchmaking :: Text -> StopMatchmaking

-- | <i>See:</i> <a>newStopMatchmakingResponse</a> smart constructor.
data StopMatchmakingResponse
StopMatchmakingResponse' :: Int -> StopMatchmakingResponse

-- | Create a value of <a>StopMatchmakingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopMatchmakingResponse'</a>,
--   <a>stopMatchmakingResponse_httpStatus</a> - The response's http status
--   code.
newStopMatchmakingResponse :: Int -> StopMatchmakingResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateFleetLocations</a> smart constructor.
data CreateFleetLocations
CreateFleetLocations' :: Text -> NonEmpty LocationConfiguration -> CreateFleetLocations

-- | Create a value of <a>CreateFleetLocations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:CreateFleetLocations'</a>,
--   <a>createFleetLocations_fleetId</a> - A unique identifier for the
--   fleet to add locations to. You can use either the fleet ID or ARN
--   value.
--   
--   <a>$sel:locations:CreateFleetLocations'</a>,
--   <a>createFleetLocations_locations</a> - A list of locations to deploy
--   additional instances to and manage as part of the fleet. You can add
--   any GameLift-supported AWS Region as a remote location, in the form of
--   an AWS Region code such as <tt>us-west-2</tt>.
newCreateFleetLocations :: Text -> NonEmpty LocationConfiguration -> CreateFleetLocations

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateFleetLocationsResponse</a> smart constructor.
data CreateFleetLocationsResponse
CreateFleetLocationsResponse' :: Maybe [LocationState] -> Maybe Text -> Maybe Text -> Int -> CreateFleetLocationsResponse

-- | Create a value of <a>CreateFleetLocationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationStates:CreateFleetLocationsResponse'</a>,
--   <a>createFleetLocationsResponse_locationStates</a> - The remote
--   locations that are being added to the fleet, and the life-cycle status
--   of each location. For new locations, the status is set to
--   <tt>NEW</tt>. During location creation, GameLift updates each
--   location's status as instances are deployed there and prepared for
--   game hosting. This list does not include the fleet home Region or any
--   remote locations that were already added to the fleet.
--   
--   <a>$sel:fleetId:CreateFleetLocations'</a>,
--   <a>createFleetLocationsResponse_fleetId</a> - A unique identifier for
--   the fleet that was updated with new locations.
--   
--   <a>$sel:fleetArn:CreateFleetLocationsResponse'</a>,
--   <a>createFleetLocationsResponse_fleetArn</a> - The Amazon Resource
--   Name (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:httpStatus:CreateFleetLocationsResponse'</a>,
--   <a>createFleetLocationsResponse_httpStatus</a> - The response's http
--   status code.
newCreateFleetLocationsResponse :: Int -> CreateFleetLocationsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateMatchmakingRuleSet</a> smart constructor.
data CreateMatchmakingRuleSet
CreateMatchmakingRuleSet' :: Maybe [Tag] -> Text -> Text -> CreateMatchmakingRuleSet

-- | Create a value of <a>CreateMatchmakingRuleSet</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateMatchmakingRuleSet'</a>,
--   <a>createMatchmakingRuleSet_tags</a> - A list of labels to assign to
--   the new matchmaking rule set resource. Tags are developer-defined
--   key-value pairs. Tagging AWS resources are useful for resource
--   management, access management and cost allocation. For more
--   information, see <a>Tagging AWS Resources</a> in the <i>AWS General
--   Reference</i>. Once the resource is created, you can use TagResource,
--   UntagResource, and ListTagsForResource to add, remove, and view tags.
--   The maximum tag limit may be lower than stated. See the AWS General
--   Reference for actual tagging limits.
--   
--   <a>$sel:name:CreateMatchmakingRuleSet'</a>,
--   <a>createMatchmakingRuleSet_name</a> - A unique identifier for the
--   matchmaking rule set. A matchmaking configuration identifies the rule
--   set it uses by this name value. Note that the rule set name is
--   different from the optional <tt>name</tt> field in the rule set body.
--   
--   <a>$sel:ruleSetBody:CreateMatchmakingRuleSet'</a>,
--   <a>createMatchmakingRuleSet_ruleSetBody</a> - A collection of
--   matchmaking rules, formatted as a JSON string. Comments are not
--   allowed in JSON, but most elements support a description field.
newCreateMatchmakingRuleSet :: Text -> Text -> CreateMatchmakingRuleSet

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateMatchmakingRuleSetResponse</a> smart
--   constructor.
data CreateMatchmakingRuleSetResponse
CreateMatchmakingRuleSetResponse' :: Int -> MatchmakingRuleSet -> CreateMatchmakingRuleSetResponse

-- | Create a value of <a>CreateMatchmakingRuleSetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateMatchmakingRuleSetResponse'</a>,
--   <a>createMatchmakingRuleSetResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:ruleSet:CreateMatchmakingRuleSetResponse'</a>,
--   <a>createMatchmakingRuleSetResponse_ruleSet</a> - The newly created
--   matchmaking rule set.
newCreateMatchmakingRuleSetResponse :: Int -> MatchmakingRuleSet -> CreateMatchmakingRuleSetResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionPlacement</a> smart constructor.
data DescribeGameSessionPlacement
DescribeGameSessionPlacement' :: Text -> DescribeGameSessionPlacement

-- | Create a value of <a>DescribeGameSessionPlacement</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:placementId:DescribeGameSessionPlacement'</a>,
--   <a>describeGameSessionPlacement_placementId</a> - A unique identifier
--   for a game session placement to retrieve.
newDescribeGameSessionPlacement :: Text -> DescribeGameSessionPlacement

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionPlacementResponse</a> smart
--   constructor.
data DescribeGameSessionPlacementResponse
DescribeGameSessionPlacementResponse' :: Maybe GameSessionPlacement -> Int -> DescribeGameSessionPlacementResponse

-- | Create a value of <a>DescribeGameSessionPlacementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:gameSessionPlacement:DescribeGameSessionPlacementResponse'</a>,
--   <a>describeGameSessionPlacementResponse_gameSessionPlacement</a> -
--   Object that describes the requested game session placement.
--   
--   <a>$sel:httpStatus:DescribeGameSessionPlacementResponse'</a>,
--   <a>describeGameSessionPlacementResponse_httpStatus</a> - The
--   response's http status code.
newDescribeGameSessionPlacementResponse :: Int -> DescribeGameSessionPlacementResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateGameSession</a> smart constructor.
data CreateGameSession
CreateGameSession' :: Maybe [GameProperty] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Natural -> CreateGameSession

-- | Create a value of <a>CreateGameSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameProperties:CreateGameSession'</a>,
--   <a>createGameSession_gameProperties</a> - A set of custom properties
--   for a game session, formatted as key:value pairs. These properties are
--   passed to a game server process in the GameSession object with a
--   request to start a new game session.
--   
--   <a>$sel:idempotencyToken:CreateGameSession'</a>,
--   <a>createGameSession_idempotencyToken</a> - Custom string that
--   uniquely identifies the new game session request. This is useful for
--   ensuring that game session requests with the same idempotency token
--   are processed only once. Subsequent requests with the same string
--   return the original <tt>GameSession</tt> object, with an updated
--   status. Maximum token length is 48 characters. If provided, this
--   string is included in the new game session's ID. A game session ARN
--   has the following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>. Idempotency
--   tokens remain in use for 30 days after a game session has ended; game
--   session objects are retained for this time period and then deleted.
--   
--   <a>$sel:creatorId:CreateGameSession'</a>,
--   <a>createGameSession_creatorId</a> - A unique identifier for a player
--   or entity creating the game session. This parameter is required when
--   requesting a new game session on a fleet with a resource creation
--   limit policy. This type of policy limits the number of concurrent
--   active game sessions that one player can create within a certain time
--   span. GameLift uses the CreatorId to evaluate the new request against
--   the policy.
--   
--   <a>$sel:fleetId:CreateGameSession'</a>,
--   <a>createGameSession_fleetId</a> - A unique identifier for the fleet
--   to create a game session in. You can use either the fleet ID or ARN
--   value. Each request must reference either a fleet ID or alias ID, but
--   not both.
--   
--   <a>$sel:gameSessionData:CreateGameSession'</a>,
--   <a>createGameSession_gameSessionData</a> - A set of custom game
--   session properties, formatted as a single string value. This data is
--   passed to a game server process in the GameSession object with a
--   request to start a new game session.
--   
--   <a>$sel:gameSessionId:CreateGameSession'</a>,
--   <a>createGameSession_gameSessionId</a> - /This parameter is no longer
--   preferred. Please use <tt>IdempotencyToken</tt> instead./ Custom
--   string that uniquely identifies a request for a new game session.
--   Maximum token length is 48 characters. If provided, this string is
--   included in the new game session's ID.
--   
--   <a>$sel:name:CreateGameSession'</a>, <a>createGameSession_name</a> - A
--   descriptive label that is associated with a game session. Session
--   names do not need to be unique.
--   
--   <a>$sel:aliasId:CreateGameSession'</a>,
--   <a>createGameSession_aliasId</a> - A unique identifier for the alias
--   associated with the fleet to create a game session in. You can use
--   either the alias ID or ARN value. Each request must reference either a
--   fleet ID or alias ID, but not both.
--   
--   <a>$sel:location:CreateGameSession'</a>,
--   <a>createGameSession_location</a> - A fleet's remote location to place
--   the new game session in. If this parameter is not set, the new game
--   session is placed in the fleet's home Region. Specify a remote
--   location with an AWS Region code such as <tt>us-west-2</tt>.
--   
--   <a>$sel:maximumPlayerSessionCount:CreateGameSession'</a>,
--   <a>createGameSession_maximumPlayerSessionCount</a> - The maximum
--   number of players that can be connected simultaneously to the game
--   session.
newCreateGameSession :: Natural -> CreateGameSession

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateGameSessionResponse</a> smart constructor.
data CreateGameSessionResponse
CreateGameSessionResponse' :: Maybe GameSession -> Int -> CreateGameSessionResponse

-- | Create a value of <a>CreateGameSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSession:CreateGameSessionResponse'</a>,
--   <a>createGameSessionResponse_gameSession</a> - Object that describes
--   the newly created game session record.
--   
--   <a>$sel:httpStatus:CreateGameSessionResponse'</a>,
--   <a>createGameSessionResponse_httpStatus</a> - The response's http
--   status code.
newCreateGameSessionResponse :: Int -> CreateGameSessionResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStartMatchmaking</a> smart constructor.
data StartMatchmaking
StartMatchmaking' :: Maybe Text -> Text -> [Player] -> StartMatchmaking

-- | Create a value of <a>StartMatchmaking</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ticketId:StartMatchmaking'</a>,
--   <a>startMatchmaking_ticketId</a> - A unique identifier for a
--   matchmaking ticket. If no ticket ID is specified here, Amazon GameLift
--   will generate one in the form of a UUID. Use this identifier to track
--   the matchmaking ticket status and retrieve match results.
--   
--   <a>$sel:configurationName:StartMatchmaking'</a>,
--   <a>startMatchmaking_configurationName</a> - Name of the matchmaking
--   configuration to use for this request. Matchmaking configurations must
--   exist in the same Region as this request. You can use either the
--   configuration name or ARN value.
--   
--   <a>$sel:players:StartMatchmaking'</a>, <a>startMatchmaking_players</a>
--   - Information on each player to be matched. This information must
--   include a player ID, and may contain player attributes and latency
--   data to be used in the matchmaking process. After a successful match,
--   <tt>Player</tt> objects contain the name of the team the player is
--   assigned to.
newStartMatchmaking :: Text -> StartMatchmaking

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newStartMatchmakingResponse</a> smart constructor.
data StartMatchmakingResponse
StartMatchmakingResponse' :: Maybe MatchmakingTicket -> Int -> StartMatchmakingResponse

-- | Create a value of <a>StartMatchmakingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchmakingTicket:StartMatchmakingResponse'</a>,
--   <a>startMatchmakingResponse_matchmakingTicket</a> - Ticket
--   representing the matchmaking request. This object include the
--   information included in the request, ticket status, and match results
--   as generated during the matchmaking process.
--   
--   <a>$sel:httpStatus:StartMatchmakingResponse'</a>,
--   <a>startMatchmakingResponse_httpStatus</a> - The response's http
--   status code.
newStartMatchmakingResponse :: Int -> StartMatchmakingResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteScalingPolicy</a> smart constructor.
data DeleteScalingPolicy
DeleteScalingPolicy' :: Text -> Text -> DeleteScalingPolicy

-- | Create a value of <a>DeleteScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteScalingPolicy'</a>, <a>deleteScalingPolicy_name</a>
--   - A descriptive label that is associated with a fleet's scaling
--   policy. Policy names do not need to be unique.
--   
--   <a>$sel:fleetId:DeleteScalingPolicy'</a>,
--   <a>deleteScalingPolicy_fleetId</a> - A unique identifier for the fleet
--   to be deleted. You can use either the fleet ID or ARN value.
newDeleteScalingPolicy :: Text -> Text -> DeleteScalingPolicy

-- | <i>See:</i> <a>newDeleteScalingPolicyResponse</a> smart constructor.
data DeleteScalingPolicyResponse
DeleteScalingPolicyResponse' :: DeleteScalingPolicyResponse

-- | Create a value of <a>DeleteScalingPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteScalingPolicyResponse :: DeleteScalingPolicyResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetLocationUtilization</a> smart
--   constructor.
data DescribeFleetLocationUtilization
DescribeFleetLocationUtilization' :: Text -> Text -> DescribeFleetLocationUtilization

-- | Create a value of <a>DescribeFleetLocationUtilization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DescribeFleetLocationUtilization'</a>,
--   <a>describeFleetLocationUtilization_fleetId</a> - A unique identifier
--   for the fleet to request location utilization for. You can use either
--   the fleet ID or ARN value.
--   
--   <a>$sel:location:DescribeFleetLocationUtilization'</a>,
--   <a>describeFleetLocationUtilization_location</a> - The fleet location
--   to retrieve utilization information for. Specify a location in the
--   form of an AWS Region code, such as <tt>us-west-2</tt>.
newDescribeFleetLocationUtilization :: Text -> Text -> DescribeFleetLocationUtilization

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeFleetLocationUtilizationResponse</a> smart
--   constructor.
data DescribeFleetLocationUtilizationResponse
DescribeFleetLocationUtilizationResponse' :: Maybe FleetUtilization -> Int -> DescribeFleetLocationUtilizationResponse

-- | Create a value of <a>DescribeFleetLocationUtilizationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:fleetUtilization:DescribeFleetLocationUtilizationResponse'</a>,
--   <a>describeFleetLocationUtilizationResponse_fleetUtilization</a> -
--   Utilization information for the requested fleet location. Utilization
--   objects are returned only for fleets and locations that currently
--   exist.
--   
--   <a>$sel:httpStatus:DescribeFleetLocationUtilizationResponse'</a>,
--   <a>describeFleetLocationUtilizationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeFleetLocationUtilizationResponse :: Int -> DescribeFleetLocationUtilizationResponse

-- | <i>See:</i> <a>newDescribeGameServerInstances</a> smart constructor.
data DescribeGameServerInstances
DescribeGameServerInstances' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe Natural -> Text -> DescribeGameServerInstances

-- | Create a value of <a>DescribeGameServerInstances</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:DescribeGameServerInstances'</a>,
--   <a>describeGameServerInstances_instanceIds</a> - The EC2 instance IDs
--   that you want to retrieve status on. EC2 instance IDs use a
--   17-character format, for example: <tt>i-1234567890abcdef0</tt>. To
--   retrieve all instances in the game server group, leave this parameter
--   empty.
--   
--   <a>$sel:nextToken:DescribeGameServerInstances'</a>,
--   <a>describeGameServerInstances_nextToken</a> - A token that indicates
--   the start of the next sequential page of results. Use the token that
--   is returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:limit:DescribeGameServerInstances'</a>,
--   <a>describeGameServerInstances_limit</a> - The maximum number of
--   results to return. Use this parameter with <tt>NextToken</tt> to get
--   results as a set of sequential pages.
--   
--   <a>$sel:gameServerGroupName:DescribeGameServerInstances'</a>,
--   <a>describeGameServerInstances_gameServerGroupName</a> - A unique
--   identifier for the game server group. Use either the GameServerGroup
--   name or ARN value.
newDescribeGameServerInstances :: Text -> DescribeGameServerInstances

-- | <i>See:</i> <a>newDescribeGameServerInstancesResponse</a> smart
--   constructor.
data DescribeGameServerInstancesResponse
DescribeGameServerInstancesResponse' :: Maybe Text -> Maybe [GameServerInstance] -> Int -> DescribeGameServerInstancesResponse

-- | Create a value of <a>DescribeGameServerInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeGameServerInstances'</a>,
--   <a>describeGameServerInstancesResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:gameServerInstances:DescribeGameServerInstancesResponse'</a>,
--   <a>describeGameServerInstancesResponse_gameServerInstances</a> - The
--   collection of requested game server instances.
--   
--   <a>$sel:httpStatus:DescribeGameServerInstancesResponse'</a>,
--   <a>describeGameServerInstancesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeGameServerInstancesResponse :: Int -> DescribeGameServerInstancesResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStartGameSessionPlacement</a> smart constructor.
data StartGameSessionPlacement
StartGameSessionPlacement' :: Maybe [GameProperty] -> Maybe Text -> Maybe Text -> Maybe [DesiredPlayerSession] -> Maybe [PlayerLatency] -> Text -> Text -> Natural -> StartGameSessionPlacement

-- | Create a value of <a>StartGameSessionPlacement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameProperties:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_gameProperties</a> - A set of custom
--   properties for a game session, formatted as key:value pairs. These
--   properties are passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
--   
--   <a>$sel:gameSessionData:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_gameSessionData</a> - A set of custom
--   game session properties, formatted as a single string value. This data
--   is passed to a game server process in the GameSession object with a
--   request to start a new game session (see <a>Start a Game Session</a>).
--   
--   <a>$sel:gameSessionName:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_gameSessionName</a> - A descriptive label
--   that is associated with a game session. Session names do not need to
--   be unique.
--   
--   <a>$sel:desiredPlayerSessions:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_desiredPlayerSessions</a> - Set of
--   information on each player to create a player session for.
--   
--   <a>$sel:playerLatencies:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_playerLatencies</a> - A set of values,
--   expressed in milliseconds, that indicates the amount of latency that a
--   player experiences when connected to AWS Regions. This information is
--   used to try to place the new game session where it can offer the best
--   possible gameplay experience for the players.
--   
--   <a>$sel:placementId:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_placementId</a> - A unique identifier to
--   assign to the new game session placement. This value is
--   developer-defined. The value must be unique across all Regions and
--   cannot be reused unless you are resubmitting a canceled or timed-out
--   placement request.
--   
--   <a>$sel:gameSessionQueueName:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_gameSessionQueueName</a> - Name of the
--   queue to use to place the new game session. You can use either the
--   queue name or ARN value.
--   
--   <a>$sel:maximumPlayerSessionCount:StartGameSessionPlacement'</a>,
--   <a>startGameSessionPlacement_maximumPlayerSessionCount</a> - The
--   maximum number of players that can be connected simultaneously to the
--   game session.
newStartGameSessionPlacement :: Text -> Text -> Natural -> StartGameSessionPlacement

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newStartGameSessionPlacementResponse</a> smart
--   constructor.
data StartGameSessionPlacementResponse
StartGameSessionPlacementResponse' :: Maybe GameSessionPlacement -> Int -> StartGameSessionPlacementResponse

-- | Create a value of <a>StartGameSessionPlacementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionPlacement:StartGameSessionPlacementResponse'</a>,
--   <a>startGameSessionPlacementResponse_gameSessionPlacement</a> - Object
--   that describes the newly created game session placement. This object
--   includes all the information provided in the request, as well as
--   start/end time stamps and placement status.
--   
--   <a>$sel:httpStatus:StartGameSessionPlacementResponse'</a>,
--   <a>startGameSessionPlacementResponse_httpStatus</a> - The response's
--   http status code.
newStartGameSessionPlacementResponse :: Int -> StartGameSessionPlacementResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteMatchmakingRuleSet</a> smart constructor.
data DeleteMatchmakingRuleSet
DeleteMatchmakingRuleSet' :: Text -> DeleteMatchmakingRuleSet

-- | Create a value of <a>DeleteMatchmakingRuleSet</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteMatchmakingRuleSet'</a>,
--   <a>deleteMatchmakingRuleSet_name</a> - A unique identifier for the
--   matchmaking rule set to be deleted. (Note: The rule set name is
--   different from the optional "name" field in the rule set body.) You
--   can use either the rule set name or ARN value.
newDeleteMatchmakingRuleSet :: Text -> DeleteMatchmakingRuleSet

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDeleteMatchmakingRuleSetResponse</a> smart
--   constructor.
data DeleteMatchmakingRuleSetResponse
DeleteMatchmakingRuleSetResponse' :: Int -> DeleteMatchmakingRuleSetResponse

-- | Create a value of <a>DeleteMatchmakingRuleSetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMatchmakingRuleSetResponse'</a>,
--   <a>deleteMatchmakingRuleSetResponse_httpStatus</a> - The response's
--   http status code.
newDeleteMatchmakingRuleSetResponse :: Int -> DeleteMatchmakingRuleSetResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteFleetLocations</a> smart constructor.
data DeleteFleetLocations
DeleteFleetLocations' :: Text -> NonEmpty Text -> DeleteFleetLocations

-- | Create a value of <a>DeleteFleetLocations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:DeleteFleetLocations'</a>,
--   <a>deleteFleetLocations_fleetId</a> - A unique identifier for the
--   fleet to delete locations for. You can use either the fleet ID or ARN
--   value.
--   
--   <a>$sel:locations:DeleteFleetLocations'</a>,
--   <a>deleteFleetLocations_locations</a> - The list of fleet locations to
--   delete. Specify locations in the form of an AWS Region code, such as
--   <tt>us-west-2</tt>.
newDeleteFleetLocations :: Text -> NonEmpty Text -> DeleteFleetLocations

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDeleteFleetLocationsResponse</a> smart constructor.
data DeleteFleetLocationsResponse
DeleteFleetLocationsResponse' :: Maybe [LocationState] -> Maybe Text -> Maybe Text -> Int -> DeleteFleetLocationsResponse

-- | Create a value of <a>DeleteFleetLocationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationStates:DeleteFleetLocationsResponse'</a>,
--   <a>deleteFleetLocationsResponse_locationStates</a> - The remote
--   locations that are being deleted, with each location status set to
--   <tt>DELETING</tt>.
--   
--   <a>$sel:fleetId:DeleteFleetLocations'</a>,
--   <a>deleteFleetLocationsResponse_fleetId</a> - A unique identifier for
--   the fleet that location attributes are being deleted for.
--   
--   <a>$sel:fleetArn:DeleteFleetLocationsResponse'</a>,
--   <a>deleteFleetLocationsResponse_fleetArn</a> - The Amazon Resource
--   Name (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:httpStatus:DeleteFleetLocationsResponse'</a>,
--   <a>deleteFleetLocationsResponse_httpStatus</a> - The response's http
--   status code.
newDeleteFleetLocationsResponse :: Int -> DeleteFleetLocationsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStopGameSessionPlacement</a> smart constructor.
data StopGameSessionPlacement
StopGameSessionPlacement' :: Text -> StopGameSessionPlacement

-- | Create a value of <a>StopGameSessionPlacement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:placementId:StopGameSessionPlacement'</a>,
--   <a>stopGameSessionPlacement_placementId</a> - A unique identifier for
--   a game session placement to cancel.
newStopGameSessionPlacement :: Text -> StopGameSessionPlacement

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newStopGameSessionPlacementResponse</a> smart
--   constructor.
data StopGameSessionPlacementResponse
StopGameSessionPlacementResponse' :: Maybe GameSessionPlacement -> Int -> StopGameSessionPlacementResponse

-- | Create a value of <a>StopGameSessionPlacementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionPlacement:StopGameSessionPlacementResponse'</a>,
--   <a>stopGameSessionPlacementResponse_gameSessionPlacement</a> - Object
--   that describes the canceled game session placement, with
--   <tt>CANCELLED</tt> status and an end time stamp.
--   
--   <a>$sel:httpStatus:StopGameSessionPlacementResponse'</a>,
--   <a>stopGameSessionPlacementResponse_httpStatus</a> - The response's
--   http status code.
newStopGameSessionPlacementResponse :: Int -> StopGameSessionPlacementResponse

-- | <i>See:</i> <a>newUpdateScript</a> smart constructor.
data UpdateScript
UpdateScript' :: Maybe Base64 -> Maybe Text -> Maybe Text -> Maybe S3Location -> Text -> UpdateScript

-- | Create a value of <a>UpdateScript</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:zipFile:UpdateScript'</a>, <a>updateScript_zipFile</a> - A
--   data object containing your Realtime scripts and dependencies as a zip
--   file. The zip file can have one or multiple files. Maximum size of a
--   zip file is 5 MB.
--   
--   When using the AWS CLI tool to create a script, this parameter is set
--   to the zip file name. It must be prepended with the string "fileb://"
--   to indicate that the file data is a binary object. For example:
--   <tt>--zip-file fileb://myRealtimeScript.zip</tt>.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:version:UpdateScript'</a>, <a>updateScript_version</a> -
--   Version information that is associated with a build or script. Version
--   strings do not need to be unique.
--   
--   <a>$sel:name:UpdateScript'</a>, <a>updateScript_name</a> - A
--   descriptive label that is associated with a script. Script names do
--   not need to be unique.
--   
--   <a>$sel:storageLocation:UpdateScript'</a>,
--   <a>updateScript_storageLocation</a> - The location of the Amazon S3
--   bucket where a zipped file containing your Realtime scripts is stored.
--   The storage location must specify the Amazon S3 bucket name, the zip
--   file name (the "key"), and a role ARN that allows Amazon GameLift to
--   access the Amazon S3 storage location. The S3 bucket must be in the
--   same Region where you want to create a new script. By default, Amazon
--   GameLift uploads the latest version of the zip file; if you have S3
--   object versioning turned on, you can use the <tt>ObjectVersion</tt>
--   parameter to specify an earlier version.
--   
--   <a>$sel:scriptId:UpdateScript'</a>, <a>updateScript_scriptId</a> - A
--   unique identifier for the Realtime script to update. You can use
--   either the script ID or ARN value.
newUpdateScript :: Text -> UpdateScript

-- | <i>See:</i> <a>newUpdateScriptResponse</a> smart constructor.
data UpdateScriptResponse
UpdateScriptResponse' :: Maybe Script -> Int -> UpdateScriptResponse

-- | Create a value of <a>UpdateScriptResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:script:UpdateScriptResponse'</a>,
--   <a>updateScriptResponse_script</a> - The newly created script record
--   with a unique script ID. The new script's storage location reflects an
--   Amazon S3 location: (1) If the script was uploaded from an S3 bucket
--   under your account, the storage location reflects the information that
--   was provided in the <i>CreateScript</i> request; (2) If the script
--   file was uploaded from a local zip file, the storage location reflects
--   an S3 location controls by the Amazon GameLift service.
--   
--   <a>$sel:httpStatus:UpdateScriptResponse'</a>,
--   <a>updateScriptResponse_httpStatus</a> - The response's http status
--   code.
newUpdateScriptResponse :: Int -> UpdateScriptResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessions</a> smart constructor.
data DescribeGameSessions
DescribeGameSessions' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeGameSessions

-- | Create a value of <a>DescribeGameSessions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeGameSessions'</a>,
--   <a>describeGameSessions_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:fleetId:DescribeGameSessions'</a>,
--   <a>describeGameSessions_fleetId</a> - A unique identifier for the
--   fleet to retrieve game sessions for. You can use either the fleet ID
--   or ARN value.
--   
--   <a>$sel:gameSessionId:DescribeGameSessions'</a>,
--   <a>describeGameSessions_gameSessionId</a> - A unique identifier for
--   the game session to retrieve.
--   
--   <a>$sel:statusFilter:DescribeGameSessions'</a>,
--   <a>describeGameSessions_statusFilter</a> - Game session status to
--   filter results on. You can filter on the following states:
--   <tt>ACTIVE</tt>, <tt>TERMINATED</tt>, <tt>ACTIVATING</tt>, and
--   <tt>TERMINATING</tt>. The last two are transitory and used for only
--   very brief periods of time.
--   
--   <a>$sel:aliasId:DescribeGameSessions'</a>,
--   <a>describeGameSessions_aliasId</a> - A unique identifier for the
--   alias associated with the fleet to retrieve game sessions for. You can
--   use either the alias ID or ARN value.
--   
--   <a>$sel:location:DescribeGameSessions'</a>,
--   <a>describeGameSessions_location</a> - A fleet location to get game
--   session details for. You can specify a fleet's home Region or a remote
--   location. Use the AWS Region code format, such as <tt>us-west-2</tt>.
--   
--   <a>$sel:limit:DescribeGameSessions'</a>,
--   <a>describeGameSessions_limit</a> - The maximum number of results to
--   return. Use this parameter with <tt>NextToken</tt> to get results as a
--   set of sequential pages.
newDescribeGameSessions :: DescribeGameSessions

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeGameSessionsResponse</a> smart constructor.
data DescribeGameSessionsResponse
DescribeGameSessionsResponse' :: Maybe Text -> Maybe [GameSession] -> Int -> DescribeGameSessionsResponse

-- | Create a value of <a>DescribeGameSessionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeGameSessions'</a>,
--   <a>describeGameSessionsResponse_nextToken</a> - A token that indicates
--   where to resume retrieving results on the next call to this operation.
--   If no token is returned, these results represent the end of the list.
--   
--   <a>$sel:gameSessions:DescribeGameSessionsResponse'</a>,
--   <a>describeGameSessionsResponse_gameSessions</a> - A collection of
--   properties for each game session that matches the request.
--   
--   <a>$sel:httpStatus:DescribeGameSessionsResponse'</a>,
--   <a>describeGameSessionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeGameSessionsResponse :: Int -> DescribeGameSessionsResponse

-- | <i>See:</i> <a>newDeleteScript</a> smart constructor.
data DeleteScript
DeleteScript' :: Text -> DeleteScript

-- | Create a value of <a>DeleteScript</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scriptId:DeleteScript'</a>, <a>deleteScript_scriptId</a> - A
--   unique identifier for the Realtime script to delete. You can use
--   either the script ID or ARN value.
newDeleteScript :: Text -> DeleteScript

-- | <i>See:</i> <a>newDeleteScriptResponse</a> smart constructor.
data DeleteScriptResponse
DeleteScriptResponse' :: DeleteScriptResponse

-- | Create a value of <a>DeleteScriptResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteScriptResponse :: DeleteScriptResponse

-- | <i>See:</i> <a>newDescribeGameServer</a> smart constructor.
data DescribeGameServer
DescribeGameServer' :: Text -> Text -> DescribeGameServer

-- | Create a value of <a>DescribeGameServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroupName:DescribeGameServer'</a>,
--   <a>describeGameServer_gameServerGroupName</a> - A unique identifier
--   for the game server group where the game server is running. Use either
--   the GameServerGroup name or ARN value.
--   
--   <a>$sel:gameServerId:DescribeGameServer'</a>,
--   <a>describeGameServer_gameServerId</a> - A custom string that uniquely
--   identifies the game server information to be retrieved.
newDescribeGameServer :: Text -> Text -> DescribeGameServer

-- | <i>See:</i> <a>newDescribeGameServerResponse</a> smart constructor.
data DescribeGameServerResponse
DescribeGameServerResponse' :: Maybe GameServer -> Int -> DescribeGameServerResponse

-- | Create a value of <a>DescribeGameServerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServer:DescribeGameServerResponse'</a>,
--   <a>describeGameServerResponse_gameServer</a> - Object that describes
--   the requested game server.
--   
--   <a>$sel:httpStatus:DescribeGameServerResponse'</a>,
--   <a>describeGameServerResponse_httpStatus</a> - The response's http
--   status code.
newDescribeGameServerResponse :: Int -> DescribeGameServerResponse

-- | <i>See:</i> <a>newListScripts</a> smart constructor.
data ListScripts
ListScripts' :: Maybe Text -> Maybe Natural -> ListScripts

-- | Create a value of <a>ListScripts</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListScripts'</a>, <a>listScripts_nextToken</a> - A
--   token that indicates the start of the next sequential page of results.
--   Use the token that is returned with a previous call to this operation.
--   To start at the beginning of the result set, do not specify a value.
--   
--   <a>$sel:limit:ListScripts'</a>, <a>listScripts_limit</a> - The maximum
--   number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
newListScripts :: ListScripts

-- | <i>See:</i> <a>newListScriptsResponse</a> smart constructor.
data ListScriptsResponse
ListScriptsResponse' :: Maybe Text -> Maybe [Script] -> Int -> ListScriptsResponse

-- | Create a value of <a>ListScriptsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListScripts'</a>,
--   <a>listScriptsResponse_nextToken</a> - A token that indicates where to
--   resume retrieving results on the next call to this operation. If no
--   token is returned, these results represent the end of the list.
--   
--   <a>$sel:scripts:ListScriptsResponse'</a>,
--   <a>listScriptsResponse_scripts</a> - A set of properties describing
--   the requested script.
--   
--   <a>$sel:httpStatus:ListScriptsResponse'</a>,
--   <a>listScriptsResponse_httpStatus</a> - The response's http status
--   code.
newListScriptsResponse :: Int -> ListScriptsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribeEC2InstanceLimits</a> smart constructor.
data DescribeEC2InstanceLimits
DescribeEC2InstanceLimits' :: Maybe EC2InstanceType -> Maybe Text -> DescribeEC2InstanceLimits

-- | Create a value of <a>DescribeEC2InstanceLimits</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eC2InstanceType:DescribeEC2InstanceLimits'</a>,
--   <a>describeEC2InstanceLimits_eC2InstanceType</a> - Name of an EC2
--   instance type that is supported in GameLift. A fleet instance type
--   determines the computing resources of each instance in the fleet,
--   including CPU, memory, storage, and networking capacity. Do not
--   specify a value for this parameter to retrieve limits for all instance
--   types.
--   
--   <a>$sel:location:DescribeEC2InstanceLimits'</a>,
--   <a>describeEC2InstanceLimits_location</a> - The name of a remote
--   location to request instance limits for, in the form of an AWS Region
--   code such as <tt>us-west-2</tt>.
newDescribeEC2InstanceLimits :: DescribeEC2InstanceLimits

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribeEC2InstanceLimitsResponse</a> smart
--   constructor.
data DescribeEC2InstanceLimitsResponse
DescribeEC2InstanceLimitsResponse' :: Maybe [EC2InstanceLimit] -> Int -> DescribeEC2InstanceLimitsResponse

-- | Create a value of <a>DescribeEC2InstanceLimitsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eC2InstanceLimits:DescribeEC2InstanceLimitsResponse'</a>,
--   <a>describeEC2InstanceLimitsResponse_eC2InstanceLimits</a> - The
--   maximum number of instances for the specified instance type.
--   
--   <a>$sel:httpStatus:DescribeEC2InstanceLimitsResponse'</a>,
--   <a>describeEC2InstanceLimitsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeEC2InstanceLimitsResponse :: Int -> DescribeEC2InstanceLimitsResponse

-- | <i>See:</i> <a>newCreateScript</a> smart constructor.
data CreateScript
CreateScript' :: Maybe Base64 -> Maybe Text -> Maybe Text -> Maybe S3Location -> Maybe [Tag] -> CreateScript

-- | Create a value of <a>CreateScript</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:zipFile:CreateScript'</a>, <a>createScript_zipFile</a> - A
--   data object containing your Realtime scripts and dependencies as a zip
--   file. The zip file can have one or multiple files. Maximum size of a
--   zip file is 5 MB.
--   
--   When using the AWS CLI tool to create a script, this parameter is set
--   to the zip file name. It must be prepended with the string "fileb://"
--   to indicate that the file data is a binary object. For example:
--   <tt>--zip-file fileb://myRealtimeScript.zip</tt>.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:version:CreateScript'</a>, <a>createScript_version</a> -
--   Version information that is associated with a build or script. Version
--   strings do not need to be unique. You can use UpdateScript to change
--   this value later.
--   
--   <a>$sel:name:CreateScript'</a>, <a>createScript_name</a> - A
--   descriptive label that is associated with a script. Script names do
--   not need to be unique. You can use UpdateScript to change this value
--   later.
--   
--   <a>$sel:storageLocation:CreateScript'</a>,
--   <a>createScript_storageLocation</a> - The location of the Amazon S3
--   bucket where a zipped file containing your Realtime scripts is stored.
--   The storage location must specify the Amazon S3 bucket name, the zip
--   file name (the "key"), and a role ARN that allows Amazon GameLift to
--   access the Amazon S3 storage location. The S3 bucket must be in the
--   same Region where you want to create a new script. By default, Amazon
--   GameLift uploads the latest version of the zip file; if you have S3
--   object versioning turned on, you can use the <tt>ObjectVersion</tt>
--   parameter to specify an earlier version.
--   
--   <a>$sel:tags:CreateScript'</a>, <a>createScript_tags</a> - A list of
--   labels to assign to the new script resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
newCreateScript :: CreateScript

-- | <i>See:</i> <a>newCreateScriptResponse</a> smart constructor.
data CreateScriptResponse
CreateScriptResponse' :: Maybe Script -> Int -> CreateScriptResponse

-- | Create a value of <a>CreateScriptResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:script:CreateScriptResponse'</a>,
--   <a>createScriptResponse_script</a> - The newly created script record
--   with a unique script ID and ARN. The new script's storage location
--   reflects an Amazon S3 location: (1) If the script was uploaded from an
--   S3 bucket under your account, the storage location reflects the
--   information that was provided in the <i>CreateScript</i> request; (2)
--   If the script file was uploaded from a local zip file, the storage
--   location reflects an S3 location controls by the Amazon GameLift
--   service.
--   
--   <a>$sel:httpStatus:CreateScriptResponse'</a>,
--   <a>createScriptResponse_httpStatus</a> - The response's http status
--   code.
newCreateScriptResponse :: Int -> CreateScriptResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStartFleetActions</a> smart constructor.
data StartFleetActions
StartFleetActions' :: Maybe Text -> Text -> NonEmpty FleetAction -> StartFleetActions

-- | Create a value of <a>StartFleetActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:StartFleetActions'</a>,
--   <a>startFleetActions_location</a> - The fleet location to restart
--   fleet actions for. Specify a location in the form of an AWS Region
--   code, such as <tt>us-west-2</tt>.
--   
--   <a>$sel:fleetId:StartFleetActions'</a>,
--   <a>startFleetActions_fleetId</a> - A unique identifier for the fleet
--   to restart actions on. You can use either the fleet ID or ARN value.
--   
--   <a>$sel:actions:StartFleetActions'</a>,
--   <a>startFleetActions_actions</a> - List of actions to restart on the
--   fleet.
newStartFleetActions :: Text -> NonEmpty FleetAction -> StartFleetActions

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newStartFleetActionsResponse</a> smart constructor.
data StartFleetActionsResponse
StartFleetActionsResponse' :: Maybe Text -> Maybe Text -> Int -> StartFleetActionsResponse

-- | Create a value of <a>StartFleetActionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:StartFleetActions'</a>,
--   <a>startFleetActionsResponse_fleetId</a> - A unique identifier for the
--   fleet to restart actions on.
--   
--   <a>$sel:fleetArn:StartFleetActionsResponse'</a>,
--   <a>startFleetActionsResponse_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:httpStatus:StartFleetActionsResponse'</a>,
--   <a>startFleetActionsResponse_httpStatus</a> - The response's http
--   status code.
newStartFleetActionsResponse :: Int -> StartFleetActionsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newGetInstanceAccess</a> smart constructor.
data GetInstanceAccess
GetInstanceAccess' :: Text -> Text -> GetInstanceAccess

-- | Create a value of <a>GetInstanceAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:GetInstanceAccess'</a>,
--   <a>getInstanceAccess_fleetId</a> - A unique identifier for the fleet
--   that contains the instance you want access to. You can use either the
--   fleet ID or ARN value. The fleet can be in any of the following
--   statuses: <tt>ACTIVATING</tt>, <tt>ACTIVE</tt>, or <tt>ERROR</tt>.
--   Fleets with an <tt>ERROR</tt> status may be accessible for a short
--   time before they are deleted.
--   
--   <a>$sel:instanceId:GetInstanceAccess'</a>,
--   <a>getInstanceAccess_instanceId</a> - A unique identifier for the
--   instance you want to get access to. You can access an instance in any
--   status.
newGetInstanceAccess :: Text -> Text -> GetInstanceAccess

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newGetInstanceAccessResponse</a> smart constructor.
data GetInstanceAccessResponse
GetInstanceAccessResponse' :: Maybe InstanceAccess -> Int -> GetInstanceAccessResponse

-- | Create a value of <a>GetInstanceAccessResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceAccess:GetInstanceAccessResponse'</a>,
--   <a>getInstanceAccessResponse_instanceAccess</a> - The connection
--   information for a fleet instance, including IP address and access
--   credentials.
--   
--   <a>$sel:httpStatus:GetInstanceAccessResponse'</a>,
--   <a>getInstanceAccessResponse_httpStatus</a> - The response's http
--   status code.
newGetInstanceAccessResponse :: Int -> GetInstanceAccessResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDescribePlayerSessions</a> smart constructor.
data DescribePlayerSessions
DescribePlayerSessions' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribePlayerSessions

-- | Create a value of <a>DescribePlayerSessions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePlayerSessions'</a>,
--   <a>describePlayerSessions_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value. If a player
--   session ID is specified, this parameter is ignored.
--   
--   <a>$sel:playerSessionStatusFilter:DescribePlayerSessions'</a>,
--   <a>describePlayerSessions_playerSessionStatusFilter</a> - Player
--   session status to filter results on.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
--   
--   <a>$sel:playerId:DescribePlayerSessions'</a>,
--   <a>describePlayerSessions_playerId</a> - A unique identifier for a
--   player to retrieve player sessions for.
--   
--   <a>$sel:playerSessionId:DescribePlayerSessions'</a>,
--   <a>describePlayerSessions_playerSessionId</a> - A unique identifier
--   for a player session to retrieve.
--   
--   <a>$sel:gameSessionId:DescribePlayerSessions'</a>,
--   <a>describePlayerSessions_gameSessionId</a> - A unique identifier for
--   the game session to retrieve player sessions for.
--   
--   <a>$sel:limit:DescribePlayerSessions'</a>,
--   <a>describePlayerSessions_limit</a> - The maximum number of results to
--   return. Use this parameter with <tt>NextToken</tt> to get results as a
--   set of sequential pages. If a player session ID is specified, this
--   parameter is ignored.
newDescribePlayerSessions :: DescribePlayerSessions

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newDescribePlayerSessionsResponse</a> smart
--   constructor.
data DescribePlayerSessionsResponse
DescribePlayerSessionsResponse' :: Maybe Text -> Maybe [PlayerSession] -> Int -> DescribePlayerSessionsResponse

-- | Create a value of <a>DescribePlayerSessionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePlayerSessions'</a>,
--   <a>describePlayerSessionsResponse_nextToken</a> - A token that
--   indicates where to resume retrieving results on the next call to this
--   operation. If no token is returned, these results represent the end of
--   the list.
--   
--   <a>$sel:playerSessions:DescribePlayerSessionsResponse'</a>,
--   <a>describePlayerSessionsResponse_playerSessions</a> - A collection of
--   objects containing properties for each player session that matches the
--   request.
--   
--   <a>$sel:httpStatus:DescribePlayerSessionsResponse'</a>,
--   <a>describePlayerSessionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribePlayerSessionsResponse :: Int -> DescribePlayerSessionsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStopFleetActions</a> smart constructor.
data StopFleetActions
StopFleetActions' :: Maybe Text -> Text -> NonEmpty FleetAction -> StopFleetActions

-- | Create a value of <a>StopFleetActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:StopFleetActions'</a>,
--   <a>stopFleetActions_location</a> - The fleet location to stop fleet
--   actions for. Specify a location in the form of an AWS Region code,
--   such as <tt>us-west-2</tt>.
--   
--   <a>$sel:fleetId:StopFleetActions'</a>, <a>stopFleetActions_fleetId</a>
--   - A unique identifier for the fleet to stop actions on. You can use
--   either the fleet ID or ARN value.
--   
--   <a>$sel:actions:StopFleetActions'</a>, <a>stopFleetActions_actions</a>
--   - List of actions to suspend on the fleet.
newStopFleetActions :: Text -> NonEmpty FleetAction -> StopFleetActions

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newStopFleetActionsResponse</a> smart constructor.
data StopFleetActionsResponse
StopFleetActionsResponse' :: Maybe Text -> Maybe Text -> Int -> StopFleetActionsResponse

-- | Create a value of <a>StopFleetActionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:StopFleetActions'</a>,
--   <a>stopFleetActionsResponse_fleetId</a> - A unique identifier for the
--   fleet to stop actions on.
--   
--   <a>$sel:fleetArn:StopFleetActionsResponse'</a>,
--   <a>stopFleetActionsResponse_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:httpStatus:StopFleetActionsResponse'</a>,
--   <a>stopFleetActionsResponse_httpStatus</a> - The response's http
--   status code.
newStopFleetActionsResponse :: Int -> StopFleetActionsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateMatchmakingConfiguration</a> smart
--   constructor.
data CreateMatchmakingConfiguration
CreateMatchmakingConfiguration' :: Maybe FlexMatchMode -> Maybe Text -> Maybe BackfillMode -> Maybe [GameProperty] -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Text -> Natural -> Bool -> Text -> CreateMatchmakingConfiguration

-- | Create a value of <a>CreateMatchmakingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flexMatchMode:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_flexMatchMode</a> - Indicates
--   whether this matchmaking configuration is being used with GameLift
--   hosting or as a standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
--   
--   <a>$sel:customEventData:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_customEventData</a> - Information to
--   be added to all events related to this matchmaking configuration.
--   
--   <a>$sel:backfillMode:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_backfillMode</a> - The method used
--   to backfill game sessions that are created with this matchmaking
--   configuration. Specify <tt>MANUAL</tt> when your game manages backfill
--   requests manually or does not use the match backfill feature. Specify
--   <tt>AUTOMATIC</tt> to have GameLift create a StartMatchBackfill
--   request whenever a game session has one or more open slots. Learn more
--   about manual and automatic backfill in <a>Backfill Existing Games with
--   FlexMatch</a>. Automatic backfill is not available when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameProperties:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_gameProperties</a> - A set of custom
--   properties for a game session, formatted as key:value pairs. These
--   properties are passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:acceptanceTimeoutSeconds:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_acceptanceTimeoutSeconds</a> - The
--   length of time (in seconds) to wait for players to accept a proposed
--   match, if acceptance is required.
--   
--   <a>$sel:additionalPlayerCount:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_additionalPlayerCount</a> - The
--   number of player slots in a match to keep open for future players. For
--   example, if the configuration's rule set specifies a match for a
--   single 12-person team, and the additional player count is set to 2,
--   only 10 players are selected for the match. This parameter is not used
--   if <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameSessionData:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_gameSessionData</a> - A set of
--   custom game session properties, formatted as a single string value.
--   This data is passed to a game server process in the GameSession object
--   with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used if
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameSessionQueueArns:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_gameSessionQueueArns</a> - The
--   Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift game
--   session queue resource and uniquely identifies it. ARNs are unique
--   across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. If <tt>FlexMatchMode</tt> is set
--   to <tt>STANDALONE</tt>, do not set this parameter.
--   
--   <a>$sel:notificationTarget:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_notificationTarget</a> - An SNS
--   topic ARN that is set up to receive matchmaking notifications. See
--   <a>Setting up notifications for matchmaking</a> for more information.
--   
--   <a>$sel:tags:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_tags</a> - A list of labels to
--   assign to the new matchmaking configuration resource. Tags are
--   developer-defined key-value pairs. Tagging AWS resources are useful
--   for resource management, access management and cost allocation. For
--   more information, see <a>Tagging AWS Resources</a> in the <i>AWS
--   General Reference</i>. Once the resource is created, you can use
--   TagResource, UntagResource, and ListTagsForResource to add, remove,
--   and view tags. The maximum tag limit may be lower than stated. See the
--   AWS General Reference for actual tagging limits.
--   
--   <a>$sel:description:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_description</a> - A human-readable
--   description of the matchmaking configuration.
--   
--   <a>$sel:name:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_name</a> - A unique identifier for
--   the matchmaking configuration. This name is used to identify the
--   configuration associated with a matchmaking request or ticket.
--   
--   <a>$sel:requestTimeoutSeconds:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_requestTimeoutSeconds</a> - The
--   maximum duration, in seconds, that a matchmaking ticket can remain in
--   process before timing out. Requests that fail due to timing out can be
--   resubmitted as needed.
--   
--   <a>$sel:acceptanceRequired:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_acceptanceRequired</a> - A flag that
--   determines whether a match that was created with this configuration
--   must be accepted by the matched players. To require acceptance, set to
--   <tt>TRUE</tt>. With this option enabled, matchmaking tickets use the
--   status <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a completed
--   potential match is waiting for player acceptance.
--   
--   <a>$sel:ruleSetName:CreateMatchmakingConfiguration'</a>,
--   <a>createMatchmakingConfiguration_ruleSetName</a> - A unique
--   identifier for the matchmaking rule set to use with this
--   configuration. You can use either the rule set name or ARN value. A
--   matchmaking configuration can only use rule sets that are defined in
--   the same Region.
newCreateMatchmakingConfiguration :: Text -> Natural -> Bool -> Text -> CreateMatchmakingConfiguration

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateMatchmakingConfigurationResponse</a> smart
--   constructor.
data CreateMatchmakingConfigurationResponse
CreateMatchmakingConfigurationResponse' :: Maybe MatchmakingConfiguration -> Int -> CreateMatchmakingConfigurationResponse

-- | Create a value of <a>CreateMatchmakingConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:CreateMatchmakingConfigurationResponse'</a>,
--   <a>createMatchmakingConfigurationResponse_configuration</a> - Object
--   that describes the newly created matchmaking configuration.
--   
--   <a>$sel:httpStatus:CreateMatchmakingConfigurationResponse'</a>,
--   <a>createMatchmakingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newCreateMatchmakingConfigurationResponse :: Int -> CreateMatchmakingConfigurationResponse

-- | <i>See:</i> <a>newCreateGameServerGroup</a> smart constructor.
data CreateGameServerGroup
CreateGameServerGroup' :: Maybe GameServerGroupAutoScalingPolicy -> Maybe [Tag] -> Maybe BalancingStrategy -> Maybe GameServerProtectionPolicy -> Maybe (NonEmpty Text) -> Text -> Text -> Natural -> Natural -> LaunchTemplateSpecification -> NonEmpty InstanceDefinition -> CreateGameServerGroup

-- | Create a value of <a>CreateGameServerGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingPolicy:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_autoScalingPolicy</a> - Configuration
--   settings to define a scaling policy for the Auto Scaling group that is
--   optimized for game hosting. The scaling policy uses the metric
--   <tt>"PercentUtilizedGameServers"</tt> to maintain a buffer of idle
--   game servers that can immediately accommodate new games and players.
--   After the Auto Scaling group is created, update this value directly in
--   the Auto Scaling group using the AWS console or APIs.
--   
--   <a>$sel:tags:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_tags</a> - A list of labels to assign to the
--   new game server group resource. Tags are developer-defined key-value
--   pairs. Tagging AWS resources is useful for resource management, access
--   management, and cost allocation. For more information, see <a>Tagging
--   AWS Resources</a> in the <i>AWS General Reference</i>. Once the
--   resource is created, you can use TagResource, UntagResource, and
--   ListTagsForResource to add, remove, and view tags, respectively. The
--   maximum tag limit may be lower than stated. See the AWS General
--   Reference for actual tagging limits.
--   
--   <a>$sel:balancingStrategy:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_balancingStrategy</a> - Indicates how
--   GameLift FleetIQ balances the use of Spot Instances and On-Demand
--   Instances in the game server group. Method options include the
--   following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
--   
--   <a>$sel:gameServerProtectionPolicy:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_gameServerProtectionPolicy</a> - A flag that
--   indicates whether instances in the game server group are protected
--   from early termination. Unprotected instances that have active game
--   servers running might be terminated during a scale-down event, causing
--   players to be dropped from the game. Protected instances cannot be
--   terminated while there are active game servers running except in the
--   event of a forced game server group deletion (see ). An exception to
--   this is with Spot Instances, which can be terminated by AWS regardless
--   of protection status. This property is set to <tt>NO_PROTECTION</tt>
--   by default.
--   
--   <a>$sel:vpcSubnets:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_vpcSubnets</a> - A list of virtual private
--   cloud (VPC) subnets to use with instances in the game server group. By
--   default, all GameLift FleetIQ-supported Availability Zones are used.
--   You can use this parameter to specify VPCs that you've set up. This
--   property cannot be updated after the game server group is created, and
--   the corresponding Auto Scaling group will always use the property
--   value that is set with this request, even if the Auto Scaling group is
--   updated directly.
--   
--   <a>$sel:gameServerGroupName:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_gameServerGroupName</a> - An identifier for
--   the new game server group. This value is used to generate unique ARN
--   identifiers for the EC2 Auto Scaling group and the GameLift FleetIQ
--   game server group. The name must be unique per Region per AWS account.
--   
--   <a>$sel:roleArn:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_roleArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) for an IAM role that allows Amazon GameLift to access
--   your EC2 Auto Scaling groups.
--   
--   <a>$sel:minSize:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_minSize</a> - The minimum number of instances
--   allowed in the EC2 Auto Scaling group. During automatic scaling
--   events, GameLift FleetIQ and EC2 do not scale down the group below
--   this minimum. In production, this value should be set to at least 1.
--   After the Auto Scaling group is created, update this value directly in
--   the Auto Scaling group using the AWS console or APIs.
--   
--   <a>$sel:maxSize:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_maxSize</a> - The maximum number of instances
--   allowed in the EC2 Auto Scaling group. During automatic scaling
--   events, GameLift FleetIQ and EC2 do not scale up the group above this
--   maximum. After the Auto Scaling group is created, update this value
--   directly in the Auto Scaling group using the AWS console or APIs.
--   
--   <a>$sel:launchTemplate:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_launchTemplate</a> - The EC2 launch template
--   that contains configuration settings and game server code to be
--   deployed to all instances in the game server group. You can specify
--   the template using either the template name or ID. For help with
--   creating a launch template, see <a>Creating a Launch Template for an
--   Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>. After the Auto Scaling group is created, update this value
--   directly in the Auto Scaling group using the AWS console or APIs.
--   
--   If you specify network interfaces in your launch template, you must
--   explicitly set the property <tt>AssociatePublicIpAddress</tt> to
--   "true". If no network interface is specified in the launch template,
--   GameLift FleetIQ uses your account's default VPC.
--   
--   <a>$sel:instanceDefinitions:CreateGameServerGroup'</a>,
--   <a>createGameServerGroup_instanceDefinitions</a> - The EC2 instance
--   types and sizes to use in the Auto Scaling group. The instance
--   definitions must specify at least two different instance types that
--   are supported by GameLift FleetIQ. For more information on instance
--   types, see <a>EC2 Instance Types</a> in the <i>Amazon EC2 User
--   Guide</i>. You can optionally specify capacity weighting for each
--   instance type. If no weight value is specified for an instance type,
--   it is set to the default value "1". For more information about
--   capacity weighting, see <a>Instance Weighting for Amazon EC2 Auto
--   Scaling</a> in the Amazon EC2 Auto Scaling User Guide.
newCreateGameServerGroup :: Text -> Text -> Natural -> Natural -> LaunchTemplateSpecification -> NonEmpty InstanceDefinition -> CreateGameServerGroup

-- | <i>See:</i> <a>newCreateGameServerGroupResponse</a> smart constructor.
data CreateGameServerGroupResponse
CreateGameServerGroupResponse' :: Maybe GameServerGroup -> Int -> CreateGameServerGroupResponse

-- | Create a value of <a>CreateGameServerGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroup:CreateGameServerGroupResponse'</a>,
--   <a>createGameServerGroupResponse_gameServerGroup</a> - The newly
--   created game server group object, including the new ARN value for the
--   GameLift FleetIQ game server group and the object's status. The EC2
--   Auto Scaling group ARN is initially null, since the group has not yet
--   been created. This value is added once the game server group status
--   reaches <tt>ACTIVE</tt>.
--   
--   <a>$sel:httpStatus:CreateGameServerGroupResponse'</a>,
--   <a>createGameServerGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateGameServerGroupResponse :: Int -> CreateGameServerGroupResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateVpcPeeringAuthorization</a> smart constructor.
data CreateVpcPeeringAuthorization
CreateVpcPeeringAuthorization' :: Text -> Text -> CreateVpcPeeringAuthorization

-- | Create a value of <a>CreateVpcPeeringAuthorization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameLiftAwsAccountId:CreateVpcPeeringAuthorization'</a>,
--   <a>createVpcPeeringAuthorization_gameLiftAwsAccountId</a> - A unique
--   identifier for the AWS account that you use to manage your GameLift
--   fleet. You can find your Account ID in the AWS Management Console
--   under account settings.
--   
--   <a>$sel:peerVpcId:CreateVpcPeeringAuthorization'</a>,
--   <a>createVpcPeeringAuthorization_peerVpcId</a> - A unique identifier
--   for a VPC with resources to be accessed by your GameLift fleet. The
--   VPC must be in the same Region as your fleet. To look up a VPC ID, use
--   the <a>VPC Dashboard</a> in the AWS Management Console. Learn more
--   about VPC peering in <a>VPC Peering with GameLift Fleets</a>.
newCreateVpcPeeringAuthorization :: Text -> Text -> CreateVpcPeeringAuthorization

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateVpcPeeringAuthorizationResponse</a> smart
--   constructor.
data CreateVpcPeeringAuthorizationResponse
CreateVpcPeeringAuthorizationResponse' :: Maybe VpcPeeringAuthorization -> Int -> CreateVpcPeeringAuthorizationResponse

-- | Create a value of <a>CreateVpcPeeringAuthorizationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:vpcPeeringAuthorization:CreateVpcPeeringAuthorizationResponse'</a>,
--   <a>createVpcPeeringAuthorizationResponse_vpcPeeringAuthorization</a> -
--   Details on the requested VPC peering authorization, including
--   expiration.
--   
--   <a>$sel:httpStatus:CreateVpcPeeringAuthorizationResponse'</a>,
--   <a>createVpcPeeringAuthorizationResponse_httpStatus</a> - The
--   response's http status code.
newCreateVpcPeeringAuthorizationResponse :: Int -> CreateVpcPeeringAuthorizationResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateVpcPeeringConnection</a> smart constructor.
data CreateVpcPeeringConnection
CreateVpcPeeringConnection' :: Text -> Text -> Text -> CreateVpcPeeringConnection

-- | Create a value of <a>CreateVpcPeeringConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:CreateVpcPeeringConnection'</a>,
--   <a>createVpcPeeringConnection_fleetId</a> - A unique identifier for
--   the fleet. You can use either the fleet ID or ARN value. This tells
--   Amazon GameLift which GameLift VPC to peer with.
--   
--   <a>$sel:peerVpcAwsAccountId:CreateVpcPeeringConnection'</a>,
--   <a>createVpcPeeringConnection_peerVpcAwsAccountId</a> - A unique
--   identifier for the AWS account with the VPC that you want to peer your
--   Amazon GameLift fleet with. You can find your Account ID in the AWS
--   Management Console under account settings.
--   
--   <a>$sel:peerVpcId:CreateVpcPeeringConnection'</a>,
--   <a>createVpcPeeringConnection_peerVpcId</a> - A unique identifier for
--   a VPC with resources to be accessed by your GameLift fleet. The VPC
--   must be in the same Region as your fleet. To look up a VPC ID, use the
--   <a>VPC Dashboard</a> in the AWS Management Console. Learn more about
--   VPC peering in <a>VPC Peering with GameLift Fleets</a>.
newCreateVpcPeeringConnection :: Text -> Text -> Text -> CreateVpcPeeringConnection

-- | <i>See:</i> <a>newCreateVpcPeeringConnectionResponse</a> smart
--   constructor.
data CreateVpcPeeringConnectionResponse
CreateVpcPeeringConnectionResponse' :: Int -> CreateVpcPeeringConnectionResponse

-- | Create a value of <a>CreateVpcPeeringConnectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVpcPeeringConnectionResponse'</a>,
--   <a>createVpcPeeringConnectionResponse_httpStatus</a> - The response's
--   http status code.
newCreateVpcPeeringConnectionResponse :: Int -> CreateVpcPeeringConnectionResponse

-- | <i>See:</i> <a>newResumeGameServerGroup</a> smart constructor.
data ResumeGameServerGroup
ResumeGameServerGroup' :: Text -> NonEmpty GameServerGroupAction -> ResumeGameServerGroup

-- | Create a value of <a>ResumeGameServerGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroupName:ResumeGameServerGroup'</a>,
--   <a>resumeGameServerGroup_gameServerGroupName</a> - A unique identifier
--   for the game server group. Use either the GameServerGroup name or ARN
--   value.
--   
--   <a>$sel:resumeActions:ResumeGameServerGroup'</a>,
--   <a>resumeGameServerGroup_resumeActions</a> - The activity to resume
--   for this game server group.
newResumeGameServerGroup :: Text -> NonEmpty GameServerGroupAction -> ResumeGameServerGroup

-- | <i>See:</i> <a>newResumeGameServerGroupResponse</a> smart constructor.
data ResumeGameServerGroupResponse
ResumeGameServerGroupResponse' :: Maybe GameServerGroup -> Int -> ResumeGameServerGroupResponse

-- | Create a value of <a>ResumeGameServerGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroup:ResumeGameServerGroupResponse'</a>,
--   <a>resumeGameServerGroupResponse_gameServerGroup</a> - An object that
--   describes the game server group resource, with the
--   <tt>SuspendedActions</tt> property updated to reflect the resumed
--   activity.
--   
--   <a>$sel:httpStatus:ResumeGameServerGroupResponse'</a>,
--   <a>resumeGameServerGroupResponse_httpStatus</a> - The response's http
--   status code.
newResumeGameServerGroupResponse :: Int -> ResumeGameServerGroupResponse

-- | <i>See:</i> <a>newDeleteGameServerGroup</a> smart constructor.
data DeleteGameServerGroup
DeleteGameServerGroup' :: Maybe GameServerGroupDeleteOption -> Text -> DeleteGameServerGroup

-- | Create a value of <a>DeleteGameServerGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteOption:DeleteGameServerGroup'</a>,
--   <a>deleteGameServerGroup_deleteOption</a> - The type of delete to
--   perform. Options include the following:
--   
--   <ul>
--   <li><tt>SAFE_DELETE</tt> – (default) Terminates the game server group
--   and EC2 Auto Scaling group only when it has no game servers that are
--   in <tt>UTILIZED</tt> status.</li>
--   <li><tt>FORCE_DELETE</tt> – Terminates the game server group,
--   including all active game servers regardless of their utilization
--   status, and the EC2 Auto Scaling group.</li>
--   <li><tt>RETAIN</tt> – Does a safe delete of the game server group but
--   retains the EC2 Auto Scaling group as is.</li>
--   </ul>
--   
--   <a>$sel:gameServerGroupName:DeleteGameServerGroup'</a>,
--   <a>deleteGameServerGroup_gameServerGroupName</a> - A unique identifier
--   for the game server group. Use either the GameServerGroup name or ARN
--   value.
newDeleteGameServerGroup :: Text -> DeleteGameServerGroup

-- | <i>See:</i> <a>newDeleteGameServerGroupResponse</a> smart constructor.
data DeleteGameServerGroupResponse
DeleteGameServerGroupResponse' :: Maybe GameServerGroup -> Int -> DeleteGameServerGroupResponse

-- | Create a value of <a>DeleteGameServerGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroup:DeleteGameServerGroupResponse'</a>,
--   <a>deleteGameServerGroupResponse_gameServerGroup</a> - An object that
--   describes the deleted game server group resource, with status updated
--   to <tt>DELETE_SCHEDULED</tt>.
--   
--   <a>$sel:httpStatus:DeleteGameServerGroupResponse'</a>,
--   <a>deleteGameServerGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteGameServerGroupResponse :: Int -> DeleteGameServerGroupResponse

-- | <i>See:</i> <a>newUpdateGameServerGroup</a> smart constructor.
data UpdateGameServerGroup
UpdateGameServerGroup' :: Maybe Text -> Maybe (NonEmpty InstanceDefinition) -> Maybe BalancingStrategy -> Maybe GameServerProtectionPolicy -> Text -> UpdateGameServerGroup

-- | Create a value of <a>UpdateGameServerGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:UpdateGameServerGroup'</a>,
--   <a>updateGameServerGroup_roleArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) for an IAM role that allows Amazon GameLift to access
--   your EC2 Auto Scaling groups.
--   
--   <a>$sel:instanceDefinitions:UpdateGameServerGroup'</a>,
--   <a>updateGameServerGroup_instanceDefinitions</a> - An updated list of
--   EC2 instance types to use in the Auto Scaling group. The instance
--   definitions must specify at least two different instance types that
--   are supported by GameLift FleetIQ. This updated list replaces the
--   entire current list of instance definitions for the game server group.
--   For more information on instance types, see <a>EC2 Instance Types</a>
--   in the <i>Amazon EC2 User Guide</i>. You can optionally specify
--   capacity weighting for each instance type. If no weight value is
--   specified for an instance type, it is set to the default value "1".
--   For more information about capacity weighting, see <a>Instance
--   Weighting for Amazon EC2 Auto Scaling</a> in the Amazon EC2 Auto
--   Scaling User Guide.
--   
--   <a>$sel:balancingStrategy:UpdateGameServerGroup'</a>,
--   <a>updateGameServerGroup_balancingStrategy</a> - Indicates how
--   GameLift FleetIQ balances the use of Spot Instances and On-Demand
--   Instances in the game server group. Method options include the
--   following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
--   
--   <a>$sel:gameServerProtectionPolicy:UpdateGameServerGroup'</a>,
--   <a>updateGameServerGroup_gameServerProtectionPolicy</a> - A flag that
--   indicates whether instances in the game server group are protected
--   from early termination. Unprotected instances that have active game
--   servers running might be terminated during a scale-down event, causing
--   players to be dropped from the game. Protected instances cannot be
--   terminated while there are active game servers running except in the
--   event of a forced game server group deletion (see ). An exception to
--   this is with Spot Instances, which can be terminated by AWS regardless
--   of protection status. This property is set to <tt>NO_PROTECTION</tt>
--   by default.
--   
--   <a>$sel:gameServerGroupName:UpdateGameServerGroup'</a>,
--   <a>updateGameServerGroup_gameServerGroupName</a> - A unique identifier
--   for the game server group. Use either the GameServerGroup name or ARN
--   value.
newUpdateGameServerGroup :: Text -> UpdateGameServerGroup

-- | <i>See:</i> <a>newUpdateGameServerGroupResponse</a> smart constructor.
data UpdateGameServerGroupResponse
UpdateGameServerGroupResponse' :: Maybe GameServerGroup -> Int -> UpdateGameServerGroupResponse

-- | Create a value of <a>UpdateGameServerGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroup:UpdateGameServerGroupResponse'</a>,
--   <a>updateGameServerGroupResponse_gameServerGroup</a> - An object that
--   describes the game server group resource with updated properties.
--   
--   <a>$sel:httpStatus:UpdateGameServerGroupResponse'</a>,
--   <a>updateGameServerGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateGameServerGroupResponse :: Int -> UpdateGameServerGroupResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newUpdateRuntimeConfiguration</a> smart constructor.
data UpdateRuntimeConfiguration
UpdateRuntimeConfiguration' :: Text -> RuntimeConfiguration -> UpdateRuntimeConfiguration

-- | Create a value of <a>UpdateRuntimeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:UpdateRuntimeConfiguration'</a>,
--   <a>updateRuntimeConfiguration_fleetId</a> - A unique identifier for
--   the fleet to update runtime configuration for. You can use either the
--   fleet ID or ARN value.
--   
--   <a>$sel:runtimeConfiguration:UpdateRuntimeConfiguration'</a>,
--   <a>updateRuntimeConfiguration_runtimeConfiguration</a> - Instructions
--   for launching server processes on each instance in the fleet. Server
--   processes run either a custom game build executable or a Realtime
--   Servers script. The runtime configuration lists the types of server
--   processes to run on an instance, how to launch them, and the number of
--   processes to run concurrently.
newUpdateRuntimeConfiguration :: Text -> RuntimeConfiguration -> UpdateRuntimeConfiguration

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newUpdateRuntimeConfigurationResponse</a> smart
--   constructor.
data UpdateRuntimeConfigurationResponse
UpdateRuntimeConfigurationResponse' :: Maybe RuntimeConfiguration -> Int -> UpdateRuntimeConfigurationResponse

-- | Create a value of <a>UpdateRuntimeConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runtimeConfiguration:UpdateRuntimeConfiguration'</a>,
--   <a>updateRuntimeConfigurationResponse_runtimeConfiguration</a> - The
--   runtime configuration currently in use by all instances in the fleet.
--   If the update was successful, all property changes are shown.
--   
--   <a>$sel:httpStatus:UpdateRuntimeConfigurationResponse'</a>,
--   <a>updateRuntimeConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newUpdateRuntimeConfigurationResponse :: Int -> UpdateRuntimeConfigurationResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newDeleteVpcPeeringAuthorization</a> smart constructor.
data DeleteVpcPeeringAuthorization
DeleteVpcPeeringAuthorization' :: Text -> Text -> DeleteVpcPeeringAuthorization

-- | Create a value of <a>DeleteVpcPeeringAuthorization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameLiftAwsAccountId:DeleteVpcPeeringAuthorization'</a>,
--   <a>deleteVpcPeeringAuthorization_gameLiftAwsAccountId</a> - A unique
--   identifier for the AWS account that you use to manage your GameLift
--   fleet. You can find your Account ID in the AWS Management Console
--   under account settings.
--   
--   <a>$sel:peerVpcId:DeleteVpcPeeringAuthorization'</a>,
--   <a>deleteVpcPeeringAuthorization_peerVpcId</a> - A unique identifier
--   for a VPC with resources to be accessed by your GameLift fleet. The
--   VPC must be in the same Region as your fleet. To look up a VPC ID, use
--   the <a>VPC Dashboard</a> in the AWS Management Console. Learn more
--   about VPC peering in <a>VPC Peering with GameLift Fleets</a>.
newDeleteVpcPeeringAuthorization :: Text -> Text -> DeleteVpcPeeringAuthorization

-- | <i>See:</i> <a>newDeleteVpcPeeringAuthorizationResponse</a> smart
--   constructor.
data DeleteVpcPeeringAuthorizationResponse
DeleteVpcPeeringAuthorizationResponse' :: Int -> DeleteVpcPeeringAuthorizationResponse

-- | Create a value of <a>DeleteVpcPeeringAuthorizationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVpcPeeringAuthorizationResponse'</a>,
--   <a>deleteVpcPeeringAuthorizationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteVpcPeeringAuthorizationResponse :: Int -> DeleteVpcPeeringAuthorizationResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateGameSessionQueue</a> smart constructor.
data CreateGameSessionQueue
CreateGameSessionQueue' :: Maybe Text -> Maybe [PlayerLatencyPolicy] -> Maybe PriorityConfiguration -> Maybe [GameSessionQueueDestination] -> Maybe Natural -> Maybe Text -> Maybe [Tag] -> Maybe FilterConfiguration -> Text -> CreateGameSessionQueue

-- | Create a value of <a>CreateGameSessionQueue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customEventData:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_customEventData</a> - Information to be
--   added to all events that are related to this game session queue.
--   
--   <a>$sel:playerLatencyPolicies:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_playerLatencyPolicies</a> - A set of
--   policies that act as a sliding cap on player latency. FleetIQ works to
--   deliver low latency for most players in a game session. These policies
--   ensure that no individual player can be placed into a game with
--   unreasonably high latency. Use multiple policies to gradually relax
--   latency requirements a step at a time. Multiple policies are applied
--   based on their maximum allowed latency, starting with the lowest
--   value.
--   
--   <a>$sel:priorityConfiguration:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_priorityConfiguration</a> - Custom settings
--   to use when prioritizing destinations and locations for game session
--   placements. This configuration replaces the FleetIQ default
--   prioritization process. Priority types that are not explicitly named
--   will be automatically applied at the end of the prioritization
--   process.
--   
--   <a>$sel:destinations:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_destinations</a> - A list of fleets and/or
--   fleet aliases that can be used to fulfill game session placement
--   requests in the queue. Destinations are identified by either a fleet
--   ARN or a fleet alias ARN, and are listed in order of placement
--   preference.
--   
--   <a>$sel:timeoutInSeconds:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_timeoutInSeconds</a> - The maximum time, in
--   seconds, that a new game session placement request remains in the
--   queue. When a request exceeds this time, the game session placement
--   changes to a <tt>TIMED_OUT</tt> status.
--   
--   <a>$sel:notificationTarget:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_notificationTarget</a> - An SNS topic ARN
--   that is set up to receive game session placement notifications. See
--   <a>Setting up notifications for game session placement</a>.
--   
--   <a>$sel:tags:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_tags</a> - A list of labels to assign to the
--   new game session queue resource. Tags are developer-defined key-value
--   pairs. Tagging AWS resources are useful for resource management,
--   access management and cost allocation. For more information, see
--   <a>Tagging AWS Resources</a> in the <i>AWS General Reference</i>. Once
--   the resource is created, you can use TagResource, UntagResource, and
--   ListTagsForResource to add, remove, and view tags. The maximum tag
--   limit may be lower than stated. See the AWS General Reference for
--   actual tagging limits.
--   
--   <a>$sel:filterConfiguration:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_filterConfiguration</a> - A list of
--   locations where a queue is allowed to place new game sessions.
--   Locations are specified in the form of AWS Region codes, such as
--   <tt>us-west-2</tt>. If this parameter is not set, game sessions can be
--   placed in any queue location.
--   
--   <a>$sel:name:CreateGameSessionQueue'</a>,
--   <a>createGameSessionQueue_name</a> - A descriptive label that is
--   associated with game session queue. Queue names must be unique within
--   each Region.
newCreateGameSessionQueue :: Text -> CreateGameSessionQueue

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateGameSessionQueueResponse</a> smart
--   constructor.
data CreateGameSessionQueueResponse
CreateGameSessionQueueResponse' :: Maybe GameSessionQueue -> Int -> CreateGameSessionQueueResponse

-- | Create a value of <a>CreateGameSessionQueueResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionQueue:CreateGameSessionQueueResponse'</a>,
--   <a>createGameSessionQueueResponse_gameSessionQueue</a> - An object
--   that describes the newly created game session queue.
--   
--   <a>$sel:httpStatus:CreateGameSessionQueueResponse'</a>,
--   <a>createGameSessionQueueResponse_httpStatus</a> - The response's http
--   status code.
newCreateGameSessionQueueResponse :: Int -> CreateGameSessionQueueResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newSearchGameSessions</a> smart constructor.
data SearchGameSessions
SearchGameSessions' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> SearchGameSessions

-- | Create a value of <a>SearchGameSessions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchGameSessions'</a>,
--   <a>searchGameSessions_nextToken</a> - A token that indicates the start
--   of the next sequential page of results. Use the token that is returned
--   with a previous call to this operation. To start at the beginning of
--   the result set, do not specify a value.
--   
--   <a>$sel:fleetId:SearchGameSessions'</a>,
--   <a>searchGameSessions_fleetId</a> - A unique identifier for the fleet
--   to search for active game sessions. You can use either the fleet ID or
--   ARN value. Each request must reference either a fleet ID or alias ID,
--   but not both.
--   
--   <a>$sel:sortExpression:SearchGameSessions'</a>,
--   <a>searchGameSessions_sortExpression</a> - Instructions on how to sort
--   the search results. If no sort expression is included, the request
--   returns results in random order. A sort expression consists of the
--   following elements:
--   
--   <ul>
--   <li><b>Operand</b> -- Name of a game session attribute. Valid values
--   are <tt>gameSessionName</tt>, <tt>gameSessionId</tt>,
--   <tt>gameSessionProperties</tt>, <tt>maximumSessions</tt>,
--   <tt>creationTimeMillis</tt>, <tt>playerSessionCount</tt>,
--   <tt>hasAvailablePlayerSessions</tt>.</li>
--   <li><b>Order</b> -- Valid sort orders are <tt>ASC</tt> (ascending) and
--   <tt>DESC</tt> (descending).</li>
--   </ul>
--   
--   For example, this sort expression returns the oldest active sessions
--   first: <tt>"SortExpression": "creationTimeMillis ASC"</tt>. Results
--   with a null value for the sort operand are returned at the end of the
--   list.
--   
--   <a>$sel:filterExpression:SearchGameSessions'</a>,
--   <a>searchGameSessions_filterExpression</a> - String containing the
--   search criteria for the session search. If no filter expression is
--   included, the request returns results for all game sessions in the
--   fleet that are in <tt>ACTIVE</tt> status.
--   
--   A filter expression can contain one or multiple conditions. Each
--   condition consists of the following:
--   
--   <ul>
--   <li><b>Operand</b> -- Name of a game session attribute. Valid values
--   are <tt>gameSessionName</tt>, <tt>gameSessionId</tt>,
--   <tt>gameSessionProperties</tt>, <tt>maximumSessions</tt>,
--   <tt>creationTimeMillis</tt>, <tt>playerSessionCount</tt>,
--   <tt>hasAvailablePlayerSessions</tt>.</li>
--   <li><b>Comparator</b> -- Valid comparators are: <tt>=</tt>,
--   <tt>&lt;&gt;</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>, <tt>&lt;=</tt>,
--   <tt>&gt;=</tt>.</li>
--   <li><b>Value</b> -- Value to be searched for. Values may be numbers,
--   boolean values (true/false) or strings depending on the operand.
--   String values are case sensitive and must be enclosed in single
--   quotes. Special characters must be escaped. Boolean and string values
--   can only be used with the comparators <tt>=</tt> and
--   <tt>&lt;&gt;</tt>. For example, the following filter expression
--   searches on <tt>gameSessionName</tt>: "<tt>FilterExpression":
--   "gameSessionName = 'Matt\\'s Awesome Game 1'"</tt>.</li>
--   </ul>
--   
--   To chain multiple conditions in a single expression, use the logical
--   keywords <tt>AND</tt>, <tt>OR</tt>, and <tt>NOT</tt> and parentheses
--   as needed. For example: <tt>x AND y AND NOT z</tt>, <tt>NOT (x OR
--   y)</tt>.
--   
--   Session search evaluates conditions from left to right using the
--   following precedence rules:
--   
--   <ol>
--   <li><tt>=</tt>, <tt>&lt;&gt;</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>,
--   <tt>&lt;=</tt>, <tt>&gt;=</tt></li>
--   <li>Parentheses</li>
--   <li>NOT</li>
--   <li>AND</li>
--   <li>OR</li>
--   </ol>
--   
--   For example, this filter expression retrieves game sessions hosting at
--   least ten players that have an open player slot:
--   <tt>"maximumSessions&gt;=10 AND hasAvailablePlayerSessions=true"</tt>.
--   
--   <a>$sel:aliasId:SearchGameSessions'</a>,
--   <a>searchGameSessions_aliasId</a> - A unique identifier for the alias
--   associated with the fleet to search for active game sessions. You can
--   use either the alias ID or ARN value. Each request must reference
--   either a fleet ID or alias ID, but not both.
--   
--   <a>$sel:location:SearchGameSessions'</a>,
--   <a>searchGameSessions_location</a> - A fleet location to search for
--   game sessions. You can specify a fleet's home Region or a remote
--   location. Use the AWS Region code format, such as <tt>us-west-2</tt>.
--   
--   <a>$sel:limit:SearchGameSessions'</a>, <a>searchGameSessions_limit</a>
--   - The maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages. The
--   maximum number of results returned is 20, even if this value is not
--   set or is set higher than 20.
newSearchGameSessions :: SearchGameSessions

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newSearchGameSessionsResponse</a> smart constructor.
data SearchGameSessionsResponse
SearchGameSessionsResponse' :: Maybe Text -> Maybe [GameSession] -> Int -> SearchGameSessionsResponse

-- | Create a value of <a>SearchGameSessionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchGameSessions'</a>,
--   <a>searchGameSessionsResponse_nextToken</a> - A token that indicates
--   where to resume retrieving results on the next call to this operation.
--   If no token is returned, these results represent the end of the list.
--   
--   <a>$sel:gameSessions:SearchGameSessionsResponse'</a>,
--   <a>searchGameSessionsResponse_gameSessions</a> - A collection of
--   objects containing game session properties for each session that
--   matches the request.
--   
--   <a>$sel:httpStatus:SearchGameSessionsResponse'</a>,
--   <a>searchGameSessionsResponse_httpStatus</a> - The response's http
--   status code.
newSearchGameSessionsResponse :: Int -> SearchGameSessionsResponse

-- | <i>See:</i> <a>newListGameServerGroups</a> smart constructor.
data ListGameServerGroups
ListGameServerGroups' :: Maybe Text -> Maybe Natural -> ListGameServerGroups

-- | Create a value of <a>ListGameServerGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGameServerGroups'</a>,
--   <a>listGameServerGroups_nextToken</a> - A token that indicates the
--   start of the next sequential page of results. Use the token that is
--   returned with a previous call to this operation. To start at the
--   beginning of the result set, do not specify a value.
--   
--   <a>$sel:limit:ListGameServerGroups'</a>,
--   <a>listGameServerGroups_limit</a> - The maximum number of results to
--   return. Use this parameter with <tt>NextToken</tt> to get results as a
--   set of sequential pages.
newListGameServerGroups :: ListGameServerGroups

-- | <i>See:</i> <a>newListGameServerGroupsResponse</a> smart constructor.
data ListGameServerGroupsResponse
ListGameServerGroupsResponse' :: Maybe [GameServerGroup] -> Maybe Text -> Int -> ListGameServerGroupsResponse

-- | Create a value of <a>ListGameServerGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServerGroups:ListGameServerGroupsResponse'</a>,
--   <a>listGameServerGroupsResponse_gameServerGroups</a> - A collection of
--   game server group objects that match the request.
--   
--   <a>$sel:nextToken:ListGameServerGroups'</a>,
--   <a>listGameServerGroupsResponse_nextToken</a> - A token that indicates
--   where to resume retrieving results on the next call to this operation.
--   If no token is returned, these results represent the end of the list.
--   
--   <a>$sel:httpStatus:ListGameServerGroupsResponse'</a>,
--   <a>listGameServerGroupsResponse_httpStatus</a> - The response's http
--   status code.
newListGameServerGroupsResponse :: Int -> ListGameServerGroupsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreatePlayerSessions</a> smart constructor.
data CreatePlayerSessions
CreatePlayerSessions' :: Maybe (HashMap Text Text) -> Text -> NonEmpty Text -> CreatePlayerSessions

-- | Create a value of <a>CreatePlayerSessions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerDataMap:CreatePlayerSessions'</a>,
--   <a>createPlayerSessions_playerDataMap</a> - Map of string pairs, each
--   specifying a player ID and a set of developer-defined information
--   related to the player. Amazon GameLift does not use this data, so it
--   can be formatted as needed for use in the game. Any player data
--   strings for player IDs that are not included in the <tt>PlayerIds</tt>
--   parameter are ignored.
--   
--   <a>$sel:gameSessionId:CreatePlayerSessions'</a>,
--   <a>createPlayerSessions_gameSessionId</a> - A unique identifier for
--   the game session to add players to.
--   
--   <a>$sel:playerIds:CreatePlayerSessions'</a>,
--   <a>createPlayerSessions_playerIds</a> - List of unique identifiers for
--   the players to be added.
newCreatePlayerSessions :: Text -> NonEmpty Text -> CreatePlayerSessions

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreatePlayerSessionsResponse</a> smart constructor.
data CreatePlayerSessionsResponse
CreatePlayerSessionsResponse' :: Maybe [PlayerSession] -> Int -> CreatePlayerSessionsResponse

-- | Create a value of <a>CreatePlayerSessionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerSessions:CreatePlayerSessionsResponse'</a>,
--   <a>createPlayerSessionsResponse_playerSessions</a> - A collection of
--   player session objects created for the added players.
--   
--   <a>$sel:httpStatus:CreatePlayerSessionsResponse'</a>,
--   <a>createPlayerSessionsResponse_httpStatus</a> - The response's http
--   status code.
newCreatePlayerSessionsResponse :: Int -> CreatePlayerSessionsResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateBuild</a> smart constructor.
data CreateBuild
CreateBuild' :: Maybe Text -> Maybe Text -> Maybe S3Location -> Maybe [Tag] -> Maybe OperatingSystem -> CreateBuild

-- | Create a value of <a>CreateBuild</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:version:CreateBuild'</a>, <a>createBuild_version</a> - Version
--   information that is associated with a build or script. Version strings
--   do not need to be unique. You can use UpdateBuild to change this value
--   later.
--   
--   <a>$sel:name:CreateBuild'</a>, <a>createBuild_name</a> - A descriptive
--   label that is associated with a build. Build names do not need to be
--   unique. You can use UpdateBuild to change this value later.
--   
--   <a>$sel:storageLocation:CreateBuild'</a>,
--   <a>createBuild_storageLocation</a> - Information indicating where your
--   game build files are stored. Use this parameter only when creating a
--   build with files stored in an Amazon S3 bucket that you own. The
--   storage location must specify an Amazon S3 bucket name and key. The
--   location must also specify a role ARN that you set up to allow Amazon
--   GameLift to access your Amazon S3 bucket. The S3 bucket and your new
--   build must be in the same Region.
--   
--   <a>$sel:tags:CreateBuild'</a>, <a>createBuild_tags</a> - A list of
--   labels to assign to the new build resource. Tags are developer-defined
--   key-value pairs. Tagging AWS resources are useful for resource
--   management, access management and cost allocation. For more
--   information, see <a>Tagging AWS Resources</a> in the <i>AWS General
--   Reference</i>. Once the resource is created, you can use TagResource,
--   UntagResource, and ListTagsForResource to add, remove, and view tags.
--   The maximum tag limit may be lower than stated. See the AWS General
--   Reference for actual tagging limits.
--   
--   <a>$sel:operatingSystem:CreateBuild'</a>,
--   <a>createBuild_operatingSystem</a> - The operating system that the
--   game server binaries are built to run on. This value determines the
--   type of fleet resources that you can use for this build. If your game
--   build contains multiple executables, they all must run on the same
--   operating system. If an operating system is not specified when
--   creating a build, Amazon GameLift uses the default value
--   (WINDOWS_2012). This value cannot be changed later.
newCreateBuild :: CreateBuild

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateBuildResponse</a> smart constructor.
data CreateBuildResponse
CreateBuildResponse' :: Maybe Build -> Maybe S3Location -> Maybe (Sensitive AwsCredentials) -> Int -> CreateBuildResponse

-- | Create a value of <a>CreateBuildResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:build:CreateBuildResponse'</a>,
--   <a>createBuildResponse_build</a> - The newly created build resource,
--   including a unique build IDs and status.
--   
--   <a>$sel:storageLocation:CreateBuild'</a>,
--   <a>createBuildResponse_storageLocation</a> - Amazon S3 location for
--   your game build file, including bucket name and key.
--   
--   <a>$sel:uploadCredentials:CreateBuildResponse'</a>,
--   <a>createBuildResponse_uploadCredentials</a> - This element is
--   returned only when the operation is called without a storage location.
--   It contains credentials to use when you are uploading a build file to
--   an Amazon S3 bucket that is owned by Amazon GameLift. Credentials have
--   a limited life span. To refresh these credentials, call
--   RequestUploadCredentials.
--   
--   <a>$sel:httpStatus:CreateBuildResponse'</a>,
--   <a>createBuildResponse_httpStatus</a> - The response's http status
--   code.
newCreateBuildResponse :: Int -> CreateBuildResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newListAliases</a> smart constructor.
data ListAliases
ListAliases' :: Maybe Text -> Maybe Text -> Maybe RoutingStrategyType -> Maybe Natural -> ListAliases

-- | Create a value of <a>ListAliases</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAliases'</a>, <a>listAliases_nextToken</a> - A
--   token that indicates the start of the next sequential page of results.
--   Use the token that is returned with a previous call to this operation.
--   To start at the beginning of the result set, do not specify a value.
--   
--   <a>$sel:name:ListAliases'</a>, <a>listAliases_name</a> - A descriptive
--   label that is associated with an alias. Alias names do not need to be
--   unique.
--   
--   <a>$sel:routingStrategyType:ListAliases'</a>,
--   <a>listAliases_routingStrategyType</a> - The routing type to filter
--   results on. Use this parameter to retrieve only aliases with a certain
--   routing type. To retrieve all aliases, leave this parameter empty.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> -- The alias resolves to one specific fleet. Use
--   this type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> -- The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
--   
--   <a>$sel:limit:ListAliases'</a>, <a>listAliases_limit</a> - The maximum
--   number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
newListAliases :: ListAliases

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newListAliasesResponse</a> smart constructor.
data ListAliasesResponse
ListAliasesResponse' :: Maybe Text -> Maybe [Alias] -> Int -> ListAliasesResponse

-- | Create a value of <a>ListAliasesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAliases'</a>,
--   <a>listAliasesResponse_nextToken</a> - A token that indicates where to
--   resume retrieving results on the next call to this operation. If no
--   token is returned, these results represent the end of the list.
--   
--   <a>$sel:aliases:ListAliasesResponse'</a>,
--   <a>listAliasesResponse_aliases</a> - A collection of alias resources
--   that match the request parameters.
--   
--   <a>$sel:httpStatus:ListAliasesResponse'</a>,
--   <a>listAliasesResponse_httpStatus</a> - The response's http status
--   code.
newListAliasesResponse :: Int -> ListAliasesResponse

-- | <i>See:</i> <a>newDescribeScript</a> smart constructor.
data DescribeScript
DescribeScript' :: Text -> DescribeScript

-- | Create a value of <a>DescribeScript</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scriptId:DescribeScript'</a>, <a>describeScript_scriptId</a> -
--   A unique identifier for the Realtime script to retrieve properties
--   for. You can use either the script ID or ARN value.
newDescribeScript :: Text -> DescribeScript

-- | <i>See:</i> <a>newDescribeScriptResponse</a> smart constructor.
data DescribeScriptResponse
DescribeScriptResponse' :: Maybe Script -> Int -> DescribeScriptResponse

-- | Create a value of <a>DescribeScriptResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:script:DescribeScriptResponse'</a>,
--   <a>describeScriptResponse_script</a> - A set of properties describing
--   the requested script.
--   
--   <a>$sel:httpStatus:DescribeScriptResponse'</a>,
--   <a>describeScriptResponse_httpStatus</a> - The response's http status
--   code.
newDescribeScriptResponse :: Int -> DescribeScriptResponse

-- | <i>See:</i> <a>newDescribeVpcPeeringAuthorizations</a> smart
--   constructor.
data DescribeVpcPeeringAuthorizations
DescribeVpcPeeringAuthorizations' :: DescribeVpcPeeringAuthorizations

-- | Create a value of <a>DescribeVpcPeeringAuthorizations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeVpcPeeringAuthorizations :: DescribeVpcPeeringAuthorizations

-- | <i>See:</i> <a>newDescribeVpcPeeringAuthorizationsResponse</a> smart
--   constructor.
data DescribeVpcPeeringAuthorizationsResponse
DescribeVpcPeeringAuthorizationsResponse' :: Maybe [VpcPeeringAuthorization] -> Int -> DescribeVpcPeeringAuthorizationsResponse

-- | Create a value of <a>DescribeVpcPeeringAuthorizationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:vpcPeeringAuthorizations:DescribeVpcPeeringAuthorizationsResponse'</a>,
--   <a>describeVpcPeeringAuthorizationsResponse_vpcPeeringAuthorizations</a>
--   - A collection of objects that describe all valid VPC peering
--   operations for the current AWS account.
--   
--   <a>$sel:httpStatus:DescribeVpcPeeringAuthorizationsResponse'</a>,
--   <a>describeVpcPeeringAuthorizationsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeVpcPeeringAuthorizationsResponse :: Int -> DescribeVpcPeeringAuthorizationsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to and uniquely identifies the GameLift
--   resource that you want to retrieve tags for. GameLift resource ARNs
--   are included in the data object for the resource, which can be
--   retrieved by calling a List or Describe operation for the resource
--   type.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The collection of tags that
--   have been assigned to the specified resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | Represents the input for a request operation.
--   
--   <i>See:</i> <a>newCreateAlias</a> smart constructor.
data CreateAlias
CreateAlias' :: Maybe [Tag] -> Maybe Text -> Text -> RoutingStrategy -> CreateAlias

-- | Create a value of <a>CreateAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateAlias'</a>, <a>createAlias_tags</a> - A list of
--   labels to assign to the new alias resource. Tags are developer-defined
--   key-value pairs. Tagging AWS resources are useful for resource
--   management, access management and cost allocation. For more
--   information, see <a>Tagging AWS Resources</a> in the <i>AWS General
--   Reference</i>. Once the resource is created, you can use TagResource,
--   UntagResource, and ListTagsForResource to add, remove, and view tags.
--   The maximum tag limit may be lower than stated. See the AWS General
--   Reference for actual tagging limits.
--   
--   <a>$sel:description:CreateAlias'</a>, <a>createAlias_description</a> -
--   A human-readable description of the alias.
--   
--   <a>$sel:name:CreateAlias'</a>, <a>createAlias_name</a> - A descriptive
--   label that is associated with an alias. Alias names do not need to be
--   unique.
--   
--   <a>$sel:routingStrategy:CreateAlias'</a>,
--   <a>createAlias_routingStrategy</a> - The routing configuration,
--   including routing type and fleet target, for the alias.
newCreateAlias :: Text -> RoutingStrategy -> CreateAlias

-- | Represents the returned data in response to a request operation.
--   
--   <i>See:</i> <a>newCreateAliasResponse</a> smart constructor.
data CreateAliasResponse
CreateAliasResponse' :: Maybe Alias -> Int -> CreateAliasResponse

-- | Create a value of <a>CreateAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alias:CreateAliasResponse'</a>,
--   <a>createAliasResponse_alias</a> - The newly created alias resource.
--   
--   <a>$sel:httpStatus:CreateAliasResponse'</a>,
--   <a>createAliasResponse_httpStatus</a> - The response's http status
--   code.
newCreateAliasResponse :: Int -> CreateAliasResponse

-- | <i>See:</i> <a>newListGameServers</a> smart constructor.
data ListGameServers
ListGameServers' :: Maybe Text -> Maybe SortOrder -> Maybe Natural -> Text -> ListGameServers

-- | Create a value of <a>ListGameServers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGameServers'</a>,
--   <a>listGameServers_nextToken</a> - A token that indicates the start of
--   the next sequential page of results. Use the token that is returned
--   with a previous call to this operation. To start at the beginning of
--   the result set, do not specify a value.
--   
--   <a>$sel:sortOrder:ListGameServers'</a>,
--   <a>listGameServers_sortOrder</a> - Indicates how to sort the returned
--   data based on game server registration timestamp. Use
--   <tt>ASCENDING</tt> to retrieve oldest game servers first, or use
--   <tt>DESCENDING</tt> to retrieve newest game servers first. If this
--   parameter is left empty, game servers are returned in no particular
--   order.
--   
--   <a>$sel:limit:ListGameServers'</a>, <a>listGameServers_limit</a> - The
--   maximum number of results to return. Use this parameter with
--   <tt>NextToken</tt> to get results as a set of sequential pages.
--   
--   <a>$sel:gameServerGroupName:ListGameServers'</a>,
--   <a>listGameServers_gameServerGroupName</a> - An identifier for the
--   game server group to retrieve a list of game servers from. Use either
--   the GameServerGroup name or ARN value.
newListGameServers :: Text -> ListGameServers

-- | <i>See:</i> <a>newListGameServersResponse</a> smart constructor.
data ListGameServersResponse
ListGameServersResponse' :: Maybe Text -> Maybe [GameServer] -> Int -> ListGameServersResponse

-- | Create a value of <a>ListGameServersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGameServers'</a>,
--   <a>listGameServersResponse_nextToken</a> - A token that indicates
--   where to resume retrieving results on the next call to this operation.
--   If no token is returned, these results represent the end of the list.
--   
--   <a>$sel:gameServers:ListGameServersResponse'</a>,
--   <a>listGameServersResponse_gameServers</a> - A collection of game
--   server objects that match the request.
--   
--   <a>$sel:httpStatus:ListGameServersResponse'</a>,
--   <a>listGameServersResponse_httpStatus</a> - The response's http status
--   code.
newListGameServersResponse :: Int -> ListGameServersResponse

-- | <i>See:</i> <a>newUpdateGameServer</a> smart constructor.
data UpdateGameServer
UpdateGameServer' :: Maybe GameServerUtilizationStatus -> Maybe Text -> Maybe GameServerHealthCheck -> Text -> Text -> UpdateGameServer

-- | Create a value of <a>UpdateGameServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:utilizationStatus:UpdateGameServer'</a>,
--   <a>updateGameServer_utilizationStatus</a> - Indicates whether the game
--   server is available or is currently hosting gameplay.
--   
--   <a>$sel:gameServerData:UpdateGameServer'</a>,
--   <a>updateGameServer_gameServerData</a> - A set of custom game server
--   properties, formatted as a single string value. This data is passed to
--   a game client or service when it requests information on game servers
--   using ListGameServers or ClaimGameServer.
--   
--   <a>$sel:healthCheck:UpdateGameServer'</a>,
--   <a>updateGameServer_healthCheck</a> - Indicates health status of the
--   game server. A request that includes this parameter updates the game
--   server's <i>LastHealthCheckTime</i> timestamp.
--   
--   <a>$sel:gameServerGroupName:UpdateGameServer'</a>,
--   <a>updateGameServer_gameServerGroupName</a> - A unique identifier for
--   the game server group where the game server is running. Use either the
--   GameServerGroup name or ARN value.
--   
--   <a>$sel:gameServerId:UpdateGameServer'</a>,
--   <a>updateGameServer_gameServerId</a> - A custom string that uniquely
--   identifies the game server to update.
newUpdateGameServer :: Text -> Text -> UpdateGameServer

-- | <i>See:</i> <a>newUpdateGameServerResponse</a> smart constructor.
data UpdateGameServerResponse
UpdateGameServerResponse' :: Maybe GameServer -> Int -> UpdateGameServerResponse

-- | Create a value of <a>UpdateGameServerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameServer:UpdateGameServerResponse'</a>,
--   <a>updateGameServerResponse_gameServer</a> - Object that describes the
--   newly updated game server.
--   
--   <a>$sel:httpStatus:UpdateGameServerResponse'</a>,
--   <a>updateGameServerResponse_httpStatus</a> - The response's http
--   status code.
newUpdateGameServerResponse :: Int -> UpdateGameServerResponse
newtype AcceptanceType
AcceptanceType' :: Text -> AcceptanceType
[fromAcceptanceType] :: AcceptanceType -> Text
pattern AcceptanceType_ACCEPT :: AcceptanceType
pattern AcceptanceType_REJECT :: AcceptanceType
newtype BackfillMode
BackfillMode' :: Text -> BackfillMode
[fromBackfillMode] :: BackfillMode -> Text
pattern BackfillMode_AUTOMATIC :: BackfillMode
pattern BackfillMode_MANUAL :: BackfillMode
newtype BalancingStrategy
BalancingStrategy' :: Text -> BalancingStrategy
[fromBalancingStrategy] :: BalancingStrategy -> Text
pattern BalancingStrategy_ON_DEMAND_ONLY :: BalancingStrategy
pattern BalancingStrategy_SPOT_ONLY :: BalancingStrategy
pattern BalancingStrategy_SPOT_PREFERRED :: BalancingStrategy
newtype BuildStatus
BuildStatus' :: Text -> BuildStatus
[fromBuildStatus] :: BuildStatus -> Text
pattern BuildStatus_FAILED :: BuildStatus
pattern BuildStatus_INITIALIZED :: BuildStatus
pattern BuildStatus_READY :: BuildStatus
newtype CertificateType
CertificateType' :: Text -> CertificateType
[fromCertificateType] :: CertificateType -> Text
pattern CertificateType_DISABLED :: CertificateType
pattern CertificateType_GENERATED :: CertificateType
newtype ComparisonOperatorType
ComparisonOperatorType' :: Text -> ComparisonOperatorType
[fromComparisonOperatorType] :: ComparisonOperatorType -> Text
pattern ComparisonOperatorType_GreaterThanOrEqualToThreshold :: ComparisonOperatorType
pattern ComparisonOperatorType_GreaterThanThreshold :: ComparisonOperatorType
pattern ComparisonOperatorType_LessThanOrEqualToThreshold :: ComparisonOperatorType
pattern ComparisonOperatorType_LessThanThreshold :: ComparisonOperatorType
newtype EC2InstanceType
EC2InstanceType' :: Text -> EC2InstanceType
[fromEC2InstanceType] :: EC2InstanceType -> Text
pattern EC2InstanceType_C3_2xlarge :: EC2InstanceType
pattern EC2InstanceType_C3_4xlarge :: EC2InstanceType
pattern EC2InstanceType_C3_8xlarge :: EC2InstanceType
pattern EC2InstanceType_C3_large :: EC2InstanceType
pattern EC2InstanceType_C3_xlarge :: EC2InstanceType
pattern EC2InstanceType_C4_2xlarge :: EC2InstanceType
pattern EC2InstanceType_C4_4xlarge :: EC2InstanceType
pattern EC2InstanceType_C4_8xlarge :: EC2InstanceType
pattern EC2InstanceType_C4_large :: EC2InstanceType
pattern EC2InstanceType_C4_xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_12xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_18xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_24xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_2xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_4xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_9xlarge :: EC2InstanceType
pattern EC2InstanceType_C5_large :: EC2InstanceType
pattern EC2InstanceType_C5_xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_12xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_16xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_24xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_2xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_4xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_8xlarge :: EC2InstanceType
pattern EC2InstanceType_C5a_large :: EC2InstanceType
pattern EC2InstanceType_C5a_xlarge :: EC2InstanceType
pattern EC2InstanceType_M3_2xlarge :: EC2InstanceType
pattern EC2InstanceType_M3_large :: EC2InstanceType
pattern EC2InstanceType_M3_medium :: EC2InstanceType
pattern EC2InstanceType_M3_xlarge :: EC2InstanceType
pattern EC2InstanceType_M4_10xlarge :: EC2InstanceType
pattern EC2InstanceType_M4_2xlarge :: EC2InstanceType
pattern EC2InstanceType_M4_4xlarge :: EC2InstanceType
pattern EC2InstanceType_M4_large :: EC2InstanceType
pattern EC2InstanceType_M4_xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_12xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_16xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_24xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_2xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_4xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_8xlarge :: EC2InstanceType
pattern EC2InstanceType_M5_large :: EC2InstanceType
pattern EC2InstanceType_M5_xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_12xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_16xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_24xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_2xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_4xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_8xlarge :: EC2InstanceType
pattern EC2InstanceType_M5a_large :: EC2InstanceType
pattern EC2InstanceType_M5a_xlarge :: EC2InstanceType
pattern EC2InstanceType_R3_2xlarge :: EC2InstanceType
pattern EC2InstanceType_R3_4xlarge :: EC2InstanceType
pattern EC2InstanceType_R3_8xlarge :: EC2InstanceType
pattern EC2InstanceType_R3_large :: EC2InstanceType
pattern EC2InstanceType_R3_xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_16xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_2xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_4xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_8xlarge :: EC2InstanceType
pattern EC2InstanceType_R4_large :: EC2InstanceType
pattern EC2InstanceType_R4_xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_12xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_16xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_24xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_2xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_4xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_8xlarge :: EC2InstanceType
pattern EC2InstanceType_R5_large :: EC2InstanceType
pattern EC2InstanceType_R5_xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_12xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_16xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_24xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_2xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_4xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_8xlarge :: EC2InstanceType
pattern EC2InstanceType_R5a_large :: EC2InstanceType
pattern EC2InstanceType_R5a_xlarge :: EC2InstanceType
pattern EC2InstanceType_T2_large :: EC2InstanceType
pattern EC2InstanceType_T2_medium :: EC2InstanceType
pattern EC2InstanceType_T2_micro :: EC2InstanceType
pattern EC2InstanceType_T2_small :: EC2InstanceType
newtype EventCode
EventCode' :: Text -> EventCode
[fromEventCode] :: EventCode -> Text
pattern EventCode_FLEET_ACTIVATION_FAILED :: EventCode
pattern EventCode_FLEET_ACTIVATION_FAILED_NO_INSTANCES :: EventCode
pattern EventCode_FLEET_BINARY_DOWNLOAD_FAILED :: EventCode
pattern EventCode_FLEET_CREATED :: EventCode
pattern EventCode_FLEET_CREATION_EXTRACTING_BUILD :: EventCode
pattern EventCode_FLEET_CREATION_RUNNING_INSTALLER :: EventCode
pattern EventCode_FLEET_CREATION_VALIDATING_RUNTIME_CONFIG :: EventCode
pattern EventCode_FLEET_DELETED :: EventCode
pattern EventCode_FLEET_INITIALIZATION_FAILED :: EventCode
pattern EventCode_FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED :: EventCode
pattern EventCode_FLEET_SCALING_EVENT :: EventCode
pattern EventCode_FLEET_STATE_ACTIVATING :: EventCode
pattern EventCode_FLEET_STATE_ACTIVE :: EventCode
pattern EventCode_FLEET_STATE_BUILDING :: EventCode
pattern EventCode_FLEET_STATE_DOWNLOADING :: EventCode
pattern EventCode_FLEET_STATE_ERROR :: EventCode
pattern EventCode_FLEET_STATE_VALIDATING :: EventCode
pattern EventCode_FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE :: EventCode
pattern EventCode_FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND :: EventCode
pattern EventCode_FLEET_VALIDATION_TIMED_OUT :: EventCode
pattern EventCode_FLEET_VPC_PEERING_DELETED :: EventCode
pattern EventCode_FLEET_VPC_PEERING_FAILED :: EventCode
pattern EventCode_FLEET_VPC_PEERING_SUCCEEDED :: EventCode
pattern EventCode_GAME_SESSION_ACTIVATION_TIMEOUT :: EventCode
pattern EventCode_GENERIC_EVENT :: EventCode
pattern EventCode_INSTANCE_INTERRUPTED :: EventCode
pattern EventCode_SERVER_PROCESS_CRASHED :: EventCode
pattern EventCode_SERVER_PROCESS_FORCE_TERMINATED :: EventCode
pattern EventCode_SERVER_PROCESS_INVALID_PATH :: EventCode
pattern EventCode_SERVER_PROCESS_PROCESS_EXIT_TIMEOUT :: EventCode
pattern EventCode_SERVER_PROCESS_PROCESS_READY_TIMEOUT :: EventCode
pattern EventCode_SERVER_PROCESS_SDK_INITIALIZATION_TIMEOUT :: EventCode
pattern EventCode_SERVER_PROCESS_TERMINATED_UNHEALTHY :: EventCode
newtype FleetAction
FleetAction' :: Text -> FleetAction
[fromFleetAction] :: FleetAction -> Text
pattern FleetAction_AUTO_SCALING :: FleetAction
newtype FleetStatus
FleetStatus' :: Text -> FleetStatus
[fromFleetStatus] :: FleetStatus -> Text
pattern FleetStatus_ACTIVATING :: FleetStatus
pattern FleetStatus_ACTIVE :: FleetStatus
pattern FleetStatus_BUILDING :: FleetStatus
pattern FleetStatus_DELETING :: FleetStatus
pattern FleetStatus_DOWNLOADING :: FleetStatus
pattern FleetStatus_ERROR :: FleetStatus
pattern FleetStatus_NEW :: FleetStatus
pattern FleetStatus_TERMINATED :: FleetStatus
pattern FleetStatus_VALIDATING :: FleetStatus
newtype FleetType
FleetType' :: Text -> FleetType
[fromFleetType] :: FleetType -> Text
pattern FleetType_ON_DEMAND :: FleetType
pattern FleetType_SPOT :: FleetType
newtype FlexMatchMode
FlexMatchMode' :: Text -> FlexMatchMode
[fromFlexMatchMode] :: FlexMatchMode -> Text
pattern FlexMatchMode_STANDALONE :: FlexMatchMode
pattern FlexMatchMode_WITH_QUEUE :: FlexMatchMode
newtype GameServerClaimStatus
GameServerClaimStatus' :: Text -> GameServerClaimStatus
[fromGameServerClaimStatus] :: GameServerClaimStatus -> Text
pattern GameServerClaimStatus_CLAIMED :: GameServerClaimStatus
newtype GameServerGroupAction
GameServerGroupAction' :: Text -> GameServerGroupAction
[fromGameServerGroupAction] :: GameServerGroupAction -> Text
pattern GameServerGroupAction_REPLACE_INSTANCE_TYPES :: GameServerGroupAction
newtype GameServerGroupDeleteOption
GameServerGroupDeleteOption' :: Text -> GameServerGroupDeleteOption
[fromGameServerGroupDeleteOption] :: GameServerGroupDeleteOption -> Text
pattern GameServerGroupDeleteOption_FORCE_DELETE :: GameServerGroupDeleteOption
pattern GameServerGroupDeleteOption_RETAIN :: GameServerGroupDeleteOption
pattern GameServerGroupDeleteOption_SAFE_DELETE :: GameServerGroupDeleteOption
newtype GameServerGroupInstanceType
GameServerGroupInstanceType' :: Text -> GameServerGroupInstanceType
[fromGameServerGroupInstanceType] :: GameServerGroupInstanceType -> Text
pattern GameServerGroupInstanceType_C4_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C4_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C4_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C4_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C4_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_18xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_9xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_C5a_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_10xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M4_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_M5a_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R4_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5_xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_12xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_16xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_24xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_2xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_4xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_8xlarge :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_large :: GameServerGroupInstanceType
pattern GameServerGroupInstanceType_R5a_xlarge :: GameServerGroupInstanceType
newtype GameServerGroupStatus
GameServerGroupStatus' :: Text -> GameServerGroupStatus
[fromGameServerGroupStatus] :: GameServerGroupStatus -> Text
pattern GameServerGroupStatus_ACTIVATING :: GameServerGroupStatus
pattern GameServerGroupStatus_ACTIVE :: GameServerGroupStatus
pattern GameServerGroupStatus_DELETED :: GameServerGroupStatus
pattern GameServerGroupStatus_DELETE_SCHEDULED :: GameServerGroupStatus
pattern GameServerGroupStatus_DELETING :: GameServerGroupStatus
pattern GameServerGroupStatus_ERROR :: GameServerGroupStatus
pattern GameServerGroupStatus_NEW :: GameServerGroupStatus
newtype GameServerHealthCheck
GameServerHealthCheck' :: Text -> GameServerHealthCheck
[fromGameServerHealthCheck] :: GameServerHealthCheck -> Text
pattern GameServerHealthCheck_HEALTHY :: GameServerHealthCheck
newtype GameServerInstanceStatus
GameServerInstanceStatus' :: Text -> GameServerInstanceStatus
[fromGameServerInstanceStatus] :: GameServerInstanceStatus -> Text
pattern GameServerInstanceStatus_ACTIVE :: GameServerInstanceStatus
pattern GameServerInstanceStatus_DRAINING :: GameServerInstanceStatus
pattern GameServerInstanceStatus_SPOT_TERMINATING :: GameServerInstanceStatus
newtype GameServerProtectionPolicy
GameServerProtectionPolicy' :: Text -> GameServerProtectionPolicy
[fromGameServerProtectionPolicy] :: GameServerProtectionPolicy -> Text
pattern GameServerProtectionPolicy_FULL_PROTECTION :: GameServerProtectionPolicy
pattern GameServerProtectionPolicy_NO_PROTECTION :: GameServerProtectionPolicy
newtype GameServerUtilizationStatus
GameServerUtilizationStatus' :: Text -> GameServerUtilizationStatus
[fromGameServerUtilizationStatus] :: GameServerUtilizationStatus -> Text
pattern GameServerUtilizationStatus_AVAILABLE :: GameServerUtilizationStatus
pattern GameServerUtilizationStatus_UTILIZED :: GameServerUtilizationStatus
newtype GameSessionPlacementState
GameSessionPlacementState' :: Text -> GameSessionPlacementState
[fromGameSessionPlacementState] :: GameSessionPlacementState -> Text
pattern GameSessionPlacementState_CANCELLED :: GameSessionPlacementState
pattern GameSessionPlacementState_FAILED :: GameSessionPlacementState
pattern GameSessionPlacementState_FULFILLED :: GameSessionPlacementState
pattern GameSessionPlacementState_PENDING :: GameSessionPlacementState
pattern GameSessionPlacementState_TIMED_OUT :: GameSessionPlacementState
newtype GameSessionStatus
GameSessionStatus' :: Text -> GameSessionStatus
[fromGameSessionStatus] :: GameSessionStatus -> Text
pattern GameSessionStatus_ACTIVATING :: GameSessionStatus
pattern GameSessionStatus_ACTIVE :: GameSessionStatus
pattern GameSessionStatus_ERROR :: GameSessionStatus
pattern GameSessionStatus_TERMINATED :: GameSessionStatus
pattern GameSessionStatus_TERMINATING :: GameSessionStatus
newtype GameSessionStatusReason
GameSessionStatusReason' :: Text -> GameSessionStatusReason
[fromGameSessionStatusReason] :: GameSessionStatusReason -> Text
pattern GameSessionStatusReason_INTERRUPTED :: GameSessionStatusReason
newtype InstanceStatus
InstanceStatus' :: Text -> InstanceStatus
[fromInstanceStatus] :: InstanceStatus -> Text
pattern InstanceStatus_ACTIVE :: InstanceStatus
pattern InstanceStatus_PENDING :: InstanceStatus
pattern InstanceStatus_TERMINATING :: InstanceStatus
newtype IpProtocol
IpProtocol' :: Text -> IpProtocol
[fromIpProtocol] :: IpProtocol -> Text
pattern IpProtocol_TCP :: IpProtocol
pattern IpProtocol_UDP :: IpProtocol
newtype LocationUpdateStatus
LocationUpdateStatus' :: Text -> LocationUpdateStatus
[fromLocationUpdateStatus] :: LocationUpdateStatus -> Text
pattern LocationUpdateStatus_PENDING_UPDATE :: LocationUpdateStatus
newtype MatchmakingConfigurationStatus
MatchmakingConfigurationStatus' :: Text -> MatchmakingConfigurationStatus
[fromMatchmakingConfigurationStatus] :: MatchmakingConfigurationStatus -> Text
pattern MatchmakingConfigurationStatus_CANCELLED :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_COMPLETED :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_FAILED :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_PLACING :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_QUEUED :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_REQUIRES_ACCEPTANCE :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_SEARCHING :: MatchmakingConfigurationStatus
pattern MatchmakingConfigurationStatus_TIMED_OUT :: MatchmakingConfigurationStatus
newtype MetricName
MetricName' :: Text -> MetricName
[fromMetricName] :: MetricName -> Text
pattern MetricName_ActivatingGameSessions :: MetricName
pattern MetricName_ActiveGameSessions :: MetricName
pattern MetricName_ActiveInstances :: MetricName
pattern MetricName_AvailableGameSessions :: MetricName
pattern MetricName_AvailablePlayerSessions :: MetricName
pattern MetricName_CurrentPlayerSessions :: MetricName
pattern MetricName_IdleInstances :: MetricName
pattern MetricName_PercentAvailableGameSessions :: MetricName
pattern MetricName_PercentIdleInstances :: MetricName
pattern MetricName_QueueDepth :: MetricName
pattern MetricName_WaitTime :: MetricName
newtype OperatingSystem
OperatingSystem' :: Text -> OperatingSystem
[fromOperatingSystem] :: OperatingSystem -> Text
pattern OperatingSystem_AMAZON_LINUX :: OperatingSystem
pattern OperatingSystem_AMAZON_LINUX_2 :: OperatingSystem
pattern OperatingSystem_WINDOWS_2012 :: OperatingSystem
newtype PlayerSessionCreationPolicy
PlayerSessionCreationPolicy' :: Text -> PlayerSessionCreationPolicy
[fromPlayerSessionCreationPolicy] :: PlayerSessionCreationPolicy -> Text
pattern PlayerSessionCreationPolicy_ACCEPT_ALL :: PlayerSessionCreationPolicy
pattern PlayerSessionCreationPolicy_DENY_ALL :: PlayerSessionCreationPolicy
newtype PlayerSessionStatus
PlayerSessionStatus' :: Text -> PlayerSessionStatus
[fromPlayerSessionStatus] :: PlayerSessionStatus -> Text
pattern PlayerSessionStatus_ACTIVE :: PlayerSessionStatus
pattern PlayerSessionStatus_COMPLETED :: PlayerSessionStatus
pattern PlayerSessionStatus_RESERVED :: PlayerSessionStatus
pattern PlayerSessionStatus_TIMEDOUT :: PlayerSessionStatus
newtype PolicyType
PolicyType' :: Text -> PolicyType
[fromPolicyType] :: PolicyType -> Text
pattern PolicyType_RuleBased :: PolicyType
pattern PolicyType_TargetBased :: PolicyType
newtype PriorityType
PriorityType' :: Text -> PriorityType
[fromPriorityType] :: PriorityType -> Text
pattern PriorityType_COST :: PriorityType
pattern PriorityType_DESTINATION :: PriorityType
pattern PriorityType_LATENCY :: PriorityType
pattern PriorityType_LOCATION :: PriorityType
newtype ProtectionPolicy
ProtectionPolicy' :: Text -> ProtectionPolicy
[fromProtectionPolicy] :: ProtectionPolicy -> Text
pattern ProtectionPolicy_FullProtection :: ProtectionPolicy
pattern ProtectionPolicy_NoProtection :: ProtectionPolicy
newtype RoutingStrategyType
RoutingStrategyType' :: Text -> RoutingStrategyType
[fromRoutingStrategyType] :: RoutingStrategyType -> Text
pattern RoutingStrategyType_SIMPLE :: RoutingStrategyType
pattern RoutingStrategyType_TERMINAL :: RoutingStrategyType
newtype ScalingAdjustmentType
ScalingAdjustmentType' :: Text -> ScalingAdjustmentType
[fromScalingAdjustmentType] :: ScalingAdjustmentType -> Text
pattern ScalingAdjustmentType_ChangeInCapacity :: ScalingAdjustmentType
pattern ScalingAdjustmentType_ExactCapacity :: ScalingAdjustmentType
pattern ScalingAdjustmentType_PercentChangeInCapacity :: ScalingAdjustmentType
newtype ScalingStatusType
ScalingStatusType' :: Text -> ScalingStatusType
[fromScalingStatusType] :: ScalingStatusType -> Text
pattern ScalingStatusType_ACTIVE :: ScalingStatusType
pattern ScalingStatusType_DELETED :: ScalingStatusType
pattern ScalingStatusType_DELETE_REQUESTED :: ScalingStatusType
pattern ScalingStatusType_DELETING :: ScalingStatusType
pattern ScalingStatusType_ERROR :: ScalingStatusType
pattern ScalingStatusType_UPDATE_REQUESTED :: ScalingStatusType
pattern ScalingStatusType_UPDATING :: ScalingStatusType
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder

-- | Properties that describe an alias resource.
--   
--   <b>Related actions</b>
--   
--   CreateAlias | ListAliases | DescribeAlias | UpdateAlias | DeleteAlias
--   | ResolveAlias | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newAlias</a> smart constructor.
data Alias
Alias' :: Maybe RoutingStrategy -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Alias

-- | Create a value of <a>Alias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingStrategy:Alias'</a>, <a>alias_routingStrategy</a> - The
--   routing configuration, including routing type and fleet target, for
--   the alias.
--   
--   <a>$sel:creationTime:Alias'</a>, <a>alias_creationTime</a> - A time
--   stamp indicating when this data object was created. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:name:Alias'</a>, <a>alias_name</a> - A descriptive label that
--   is associated with an alias. Alias names do not need to be unique.
--   
--   <a>$sel:description:Alias'</a>, <a>alias_description</a> - A
--   human-readable description of an alias.
--   
--   <a>$sel:aliasArn:Alias'</a>, <a>alias_aliasArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift alias
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::alias/alias-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift alias ARN, the resource ID matches the alias ID value.
--   
--   <a>$sel:aliasId:Alias'</a>, <a>alias_aliasId</a> - A unique identifier
--   for the alias. Alias IDs are unique within a Region.
--   
--   <a>$sel:lastUpdatedTime:Alias'</a>, <a>alias_lastUpdatedTime</a> - The
--   time that this data object was last modified. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
newAlias :: Alias

-- | Values for use in Player attribute key-value pairs. This object lets
--   you specify an attribute value using any of the valid data types:
--   string, number, string array, or data map. Each
--   <tt>AttributeValue</tt> object can use only one of the available
--   properties.
--   
--   <i>See:</i> <a>newAttributeValue</a> smart constructor.
data AttributeValue
AttributeValue' :: Maybe [Text] -> Maybe Double -> Maybe Text -> Maybe (HashMap Text Double) -> AttributeValue

-- | Create a value of <a>AttributeValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sl:AttributeValue'</a>, <a>attributeValue_sl</a> - For a list
--   of up to 10 strings. Maximum length for each string is 100 characters.
--   Duplicate values are not recognized; all occurrences of the repeated
--   value after the first of a repeated value are ignored.
--   
--   <a>$sel:n:AttributeValue'</a>, <a>attributeValue_n</a> - For number
--   values, expressed as double.
--   
--   <a>$sel:s:AttributeValue'</a>, <a>attributeValue_s</a> - For single
--   string values. Maximum string length is 100 characters.
--   
--   <a>$sel:sdm:AttributeValue'</a>, <a>attributeValue_sdm</a> - For a map
--   of up to 10 data type:value pairs. Maximum length for each string
--   value is 100 characters.
newAttributeValue :: AttributeValue

-- | Temporary access credentials used for uploading game build files to
--   Amazon GameLift. They are valid for a limited time. If they expire
--   before you upload your game build, get a new set by calling
--   RequestUploadCredentials.
--   
--   <i>See:</i> <a>newAwsCredentials</a> smart constructor.
data AwsCredentials
AwsCredentials' :: Maybe Text -> Maybe Text -> Maybe Text -> AwsCredentials

-- | Create a value of <a>AwsCredentials</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretAccessKey:AwsCredentials'</a>,
--   <a>awsCredentials_secretAccessKey</a> - Temporary secret key allowing
--   access to the Amazon GameLift S3 account.
--   
--   <a>$sel:accessKeyId:AwsCredentials'</a>,
--   <a>awsCredentials_accessKeyId</a> - Temporary key allowing access to
--   the Amazon GameLift S3 account.
--   
--   <a>$sel:sessionToken:AwsCredentials'</a>,
--   <a>awsCredentials_sessionToken</a> - Token used to associate a
--   specific build ID with the files uploaded using these credentials.
newAwsCredentials :: AwsCredentials

-- | Properties describing a custom game build.
--   
--   <b>Related actions</b>
--   
--   CreateBuild | ListBuilds | DescribeBuild | UpdateBuild | DeleteBuild |
--   <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newBuild</a> smart constructor.
data Build
Build' :: Maybe POSIX -> Maybe BuildStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe OperatingSystem -> Build

-- | Create a value of <a>Build</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Build'</a>, <a>build_creationTime</a> - A time
--   stamp indicating when this data object was created. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:Build'</a>, <a>build_status</a> - Current status of the
--   build.
--   
--   Possible build statuses include the following:
--   
--   <ul>
--   <li><b>INITIALIZED</b> -- A new build has been defined, but no files
--   have been uploaded. You cannot create fleets for builds that are in
--   this status. When a build is successfully created, the build status is
--   set to this value.</li>
--   <li><b>READY</b> -- The game build has been successfully uploaded. You
--   can now create new fleets for this build.</li>
--   <li><b>FAILED</b> -- The game build upload failed. You cannot create
--   new fleets for this build.</li>
--   </ul>
--   
--   <a>$sel:version:Build'</a>, <a>build_version</a> - Version information
--   that is associated with a build or script. Version strings do not need
--   to be unique. This value can be set using CreateBuild or UpdateBuild.
--   
--   <a>$sel:name:Build'</a>, <a>build_name</a> - A descriptive label that
--   is associated with a build. Build names do not need to be unique. It
--   can be set using CreateBuild or UpdateBuild.
--   
--   <a>$sel:sizeOnDisk:Build'</a>, <a>build_sizeOnDisk</a> - File size of
--   the uploaded game build, expressed in bytes. When the build status is
--   <tt>INITIALIZED</tt>, this value is 0.
--   
--   <a>$sel:buildId:Build'</a>, <a>build_buildId</a> - A unique identifier
--   for the build.
--   
--   <a>$sel:buildArn:Build'</a>, <a>build_buildArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift build
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::build/build-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift build ARN, the resource ID matches the <i>BuildId</i>
--   value.
--   
--   <a>$sel:operatingSystem:Build'</a>, <a>build_operatingSystem</a> -
--   Operating system that the game server binaries are built to run on.
--   This value determines the type of fleet resources that you can use for
--   this build.
newBuild :: Build

-- | Determines whether a TLS/SSL certificate is generated for a fleet.
--   This feature must be enabled when creating the fleet. All instances in
--   a fleet share the same certificate. The certificate can be retrieved
--   by calling the <a>GameLift Server SDK</a> operation
--   <tt>GetInstanceCertificate</tt>.
--   
--   A fleet's certificate configuration is part of FleetAttributes.
--   
--   <i>See:</i> <a>newCertificateConfiguration</a> smart constructor.
data CertificateConfiguration
CertificateConfiguration' :: CertificateType -> CertificateConfiguration

-- | Create a value of <a>CertificateConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateType:CertificateConfiguration'</a>,
--   <a>certificateConfiguration_certificateType</a> - Indicates whether a
--   TLS/SSL certificate is generated for a fleet.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b>GENERATED</b> - Generate a TLS/SSL certificate for this
--   fleet.</li>
--   <li><b>DISABLED</b> - (default) Do not generate a TLS/SSL certificate
--   for this fleet.</li>
--   </ul>
newCertificateConfiguration :: CertificateType -> CertificateConfiguration

-- | Player information for use when creating player sessions using a game
--   session placement request with StartGameSessionPlacement.
--   
--   <i>See:</i> <a>newDesiredPlayerSession</a> smart constructor.
data DesiredPlayerSession
DesiredPlayerSession' :: Maybe Text -> Maybe Text -> DesiredPlayerSession

-- | Create a value of <a>DesiredPlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerId:DesiredPlayerSession'</a>,
--   <a>desiredPlayerSession_playerId</a> - A unique identifier for a
--   player to associate with the player session.
--   
--   <a>$sel:playerData:DesiredPlayerSession'</a>,
--   <a>desiredPlayerSession_playerData</a> - Developer-defined information
--   related to a player. GameLift does not use this data, so it can be
--   formatted as needed for use in the game.
newDesiredPlayerSession :: DesiredPlayerSession

-- | Resource capacity settings. Fleet capacity is measured in EC2
--   instances. Pending and terminating counts are non-zero when the fleet
--   capacity is adjusting to a scaling event or if access to resources is
--   temporarily affected.
--   
--   EC2 instance counts are part of FleetCapacity.
--   
--   <i>See:</i> <a>newEC2InstanceCounts</a> smart constructor.
data EC2InstanceCounts
EC2InstanceCounts' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> EC2InstanceCounts

-- | Create a value of <a>EC2InstanceCounts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idle:EC2InstanceCounts'</a>, <a>eC2InstanceCounts_idle</a> -
--   Number of active instances that are not currently hosting a game
--   session.
--   
--   <a>$sel:minimum:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_minimum</a> - The minimum instance count value
--   allowed.
--   
--   <a>$sel:pending:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_pending</a> - Number of instances that are
--   starting but not yet active.
--   
--   <a>$sel:terminating:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_terminating</a> - Number of instances that are no
--   longer active but haven't yet been terminated.
--   
--   <a>$sel:active:EC2InstanceCounts'</a>, <a>eC2InstanceCounts_active</a>
--   - Actual number of instances that are ready to host game sessions.
--   
--   <a>$sel:maximum:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_maximum</a> - The maximum instance count value
--   allowed.
--   
--   <a>$sel:desired:EC2InstanceCounts'</a>,
--   <a>eC2InstanceCounts_desired</a> - Ideal number of active instances.
--   GameLift will always try to maintain the desired number of instances.
--   Capacity is scaled up or down by changing the desired instances.
newEC2InstanceCounts :: EC2InstanceCounts

-- | The GameLift service limits for an EC2 instance type and current
--   utilization. GameLift allows AWS accounts a maximum number of
--   instances, per instance type, per AWS Region or location, for use with
--   GameLift. You can request an limit increase for your account by using
--   the <b>Service limits</b> page in the GameLift console.
--   
--   <b>Related actions</b>
--   
--   DescribeEC2InstanceLimits
--   
--   <i>See:</i> <a>newEC2InstanceLimit</a> smart constructor.
data EC2InstanceLimit
EC2InstanceLimit' :: Maybe Natural -> Maybe Natural -> Maybe EC2InstanceType -> Maybe Text -> EC2InstanceLimit

-- | Create a value of <a>EC2InstanceLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceLimit:EC2InstanceLimit'</a>,
--   <a>eC2InstanceLimit_instanceLimit</a> - The number of instances that
--   is allowed for the specified instance type and location.
--   
--   <a>$sel:currentInstances:EC2InstanceLimit'</a>,
--   <a>eC2InstanceLimit_currentInstances</a> - The number of instances for
--   the specified type and location that are currently being used by the
--   AWS account.
--   
--   <a>$sel:eC2InstanceType:EC2InstanceLimit'</a>,
--   <a>eC2InstanceLimit_eC2InstanceType</a> - The name of an EC2 instance
--   type. See <a>Amazon EC2 Instance Types</a> for detailed descriptions.
--   
--   <a>$sel:location:EC2InstanceLimit'</a>,
--   <a>eC2InstanceLimit_location</a> - An AWS Region code, such as
--   <tt>us-west-2</tt>.
newEC2InstanceLimit :: EC2InstanceLimit

-- | Log entry describing an event that involves GameLift resources (such
--   as a fleet). In addition to tracking activity, event codes and
--   messages can provide additional information for troubleshooting and
--   debugging problems.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetEvents
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe Text -> Maybe EventCode -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Event

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:Event'</a>, <a>event_resourceId</a> - A unique
--   identifier for an event resource, such as a fleet ID.
--   
--   <a>$sel:eventCode:Event'</a>, <a>event_eventCode</a> - The type of
--   event being logged.
--   
--   <b>Fleet creation events (ordered by fleet creation activity):</b>
--   
--   <ul>
--   <li>FLEET_CREATED -- A fleet resource was successfully created with a
--   status of <tt>NEW</tt>. Event messaging includes the fleet ID.</li>
--   <li>FLEET_STATE_DOWNLOADING -- Fleet status changed from <tt>NEW</tt>
--   to <tt>DOWNLOADING</tt>. The compressed build has started downloading
--   to a fleet instance for installation.</li>
--   <li>FLEET_BINARY_DOWNLOAD_FAILED -- The build failed to download to
--   the fleet instance.</li>
--   <li>FLEET_CREATION_EXTRACTING_BUILD – The game server build was
--   successfully downloaded to an instance, and the build files are now
--   being extracted from the uploaded build and saved to an instance.
--   Failure at this stage prevents a fleet from moving to <tt>ACTIVE</tt>
--   status. Logs for this stage display a list of the files that are
--   extracted and saved on the instance. Access the logs by using the URL
--   in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_RUNNING_INSTALLER – The game server build files
--   were successfully extracted, and the GameLift is now running the
--   build's install script (if one is included). Failure in this stage
--   prevents a fleet from moving to <tt>ACTIVE</tt> status. Logs for this
--   stage list the installation steps and whether or not the install
--   completed successfully. Access the logs by using the URL in
--   <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_CREATION_VALIDATING_RUNTIME_CONFIG -- The build process was
--   successful, and the GameLift is now verifying that the game server
--   launch paths, which are specified in the fleet's runtime
--   configuration, exist. If any listed launch path exists, GameLift tries
--   to launch a game server process and waits for the process to report
--   ready. Failures in this stage prevent a fleet from moving to
--   <tt>ACTIVE</tt> status. Logs for this stage list the launch paths in
--   the runtime configuration and indicate whether each is found. Access
--   the logs by using the URL in <i>PreSignedLogUrl</i>.</li>
--   <li>FLEET_STATE_VALIDATING -- Fleet status changed from
--   <tt>DOWNLOADING</tt> to <tt>VALIDATING</tt>.</li>
--   <li>FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path does not exist on the instance.</li>
--   <li>FLEET_STATE_BUILDING -- Fleet status changed from
--   <tt>VALIDATING</tt> to <tt>BUILDING</tt>.</li>
--   <li>FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE -- Validation of the
--   runtime configuration failed because the executable specified in a
--   launch path failed to run on the fleet instance.</li>
--   <li>FLEET_STATE_ACTIVATING -- Fleet status changed from
--   <tt>BUILDING</tt> to <tt>ACTIVATING</tt>.</li>
--   <li>FLEET_ACTIVATION_FAILED - The fleet failed to successfully
--   complete one of the steps in the fleet activation process. This event
--   code indicates that the game build was successfully downloaded to a
--   fleet instance, built, and validated, but was not able to start a
--   server process. Learn more at <a>Debug Fleet Creation Issues</a></li>
--   <li>FLEET_STATE_ACTIVE -- The fleet's status changed from
--   <tt>ACTIVATING</tt> to <tt>ACTIVE</tt>. The fleet is now ready to host
--   game sessions.</li>
--   </ul>
--   
--   <b>VPC peering events:</b>
--   
--   <ul>
--   <li>FLEET_VPC_PEERING_SUCCEEDED -- A VPC peering connection has been
--   established between the VPC for an GameLift fleet and a VPC in your
--   AWS account.</li>
--   <li>FLEET_VPC_PEERING_FAILED -- A requested VPC peering connection has
--   failed. Event details and status information (see
--   DescribeVpcPeeringConnections) provide additional detail. A common
--   reason for peering failure is that the two VPCs have overlapping CIDR
--   blocks of IPv4 addresses. To resolve this, change the CIDR block for
--   the VPC in your AWS account. For more information on VPC peering
--   failures, see
--   <a>https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/invalid-peering-configurations.html</a></li>
--   <li>FLEET_VPC_PEERING_DELETED -- A VPC peering connection has been
--   successfully deleted.</li>
--   </ul>
--   
--   <b>Spot instance events:</b>
--   
--   <ul>
--   <li>INSTANCE_INTERRUPTED -- A spot instance was interrupted by EC2
--   with a two-minute notification.</li>
--   </ul>
--   
--   <b>Other fleet events:</b>
--   
--   <ul>
--   <li>FLEET_SCALING_EVENT -- A change was made to the fleet's capacity
--   settings (desired instances, minimum/maximum scaling limits). Event
--   messaging includes the new capacity settings.</li>
--   <li>FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED -- A change was
--   made to the fleet's game session protection policy setting. Event
--   messaging includes both the old and new policy setting.</li>
--   <li>FLEET_DELETED -- A request to delete a fleet was initiated.</li>
--   <li>GENERIC_EVENT -- An unspecified event has occurred.</li>
--   </ul>
--   
--   <a>$sel:eventId:Event'</a>, <a>event_eventId</a> - A unique identifier
--   for a fleet event.
--   
--   <a>$sel:message:Event'</a>, <a>event_message</a> - Additional
--   information related to the event.
--   
--   <a>$sel:eventTime:Event'</a>, <a>event_eventTime</a> - Time stamp
--   indicating when this event occurred. Format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:preSignedLogUrl:Event'</a>, <a>event_preSignedLogUrl</a> -
--   Location of stored logs with additional detail that is related to the
--   event. This is useful for debugging issues. The URL is valid for 15
--   minutes. You can also access fleet creation logs through the GameLift
--   console.
newEvent :: Event

-- | A list of fleet locations where a game session queue can place new
--   game sessions. You can use a filter to temporarily turn off placements
--   for specific locations. For queues that have multi-location fleets,
--   you can use a filter configuration allow placement with some, but not
--   all of these locations.
--   
--   Filter configurations are part of a GameSessionQueue.
--   
--   <i>See:</i> <a>newFilterConfiguration</a> smart constructor.
data FilterConfiguration
FilterConfiguration' :: Maybe (NonEmpty Text) -> FilterConfiguration

-- | Create a value of <a>FilterConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowedLocations:FilterConfiguration'</a>,
--   <a>filterConfiguration_allowedLocations</a> - A list of locations to
--   allow game session placement in, in the form of AWS Region codes such
--   as <tt>us-west-2</tt>.
newFilterConfiguration :: FilterConfiguration

-- | Describes a GameLift fleet of game hosting resources.
--   
--   <b>Related actions</b>
--   
--   CreateFleet | DescribeFleetAttributes
--   
--   <i>See:</i> <a>newFleetAttributes</a> smart constructor.
data FleetAttributes
FleetAttributes' :: Maybe POSIX -> Maybe FleetStatus -> Maybe EC2InstanceType -> Maybe FleetType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CertificateConfiguration -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ProtectionPolicy -> Maybe (NonEmpty FleetAction) -> Maybe POSIX -> Maybe ResourceCreationLimitPolicy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe OperatingSystem -> Maybe Text -> FleetAttributes

-- | Create a value of <a>FleetAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FleetAttributes'</a>,
--   <a>fleetAttributes_creationTime</a> - A time stamp indicating when
--   this data object was created. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:FleetAttributes'</a>, <a>fleetAttributes_status</a> -
--   Current status of the fleet. Possible fleet statuses include the
--   following:
--   
--   <ul>
--   <li><b>NEW</b> -- A new fleet has been defined and desired instances
--   is set to 1.</li>
--   <li><b>DOWNLOADING/VALIDATING/BUILDING/ACTIVATING</b> -- GameLift is
--   setting up the new fleet, creating new instances with the game build
--   or Realtime script and starting server processes.</li>
--   <li><b>ACTIVE</b> -- Hosts can now accept game sessions.</li>
--   <li><b>ERROR</b> -- An error occurred when downloading, validating,
--   building, or activating the fleet.</li>
--   <li><b>DELETING</b> -- Hosts are responding to a delete fleet
--   request.</li>
--   <li><b>TERMINATED</b> -- The fleet no longer exists.</li>
--   </ul>
--   
--   <a>$sel:instanceType:FleetAttributes'</a>,
--   <a>fleetAttributes_instanceType</a> - The EC2 instance type that
--   determines the computing resources of each instance in the fleet.
--   Instance type defines the CPU, memory, storage, and networking
--   capacity. See <a>Amazon EC2 Instance Types</a> for detailed
--   descriptions.
--   
--   <a>$sel:fleetType:FleetAttributes'</a>,
--   <a>fleetAttributes_fleetType</a> - The kind of instances, On-Demand or
--   Spot, that this fleet uses.
--   
--   <a>$sel:fleetId:FleetAttributes'</a>, <a>fleetAttributes_fleetId</a> -
--   A unique identifier for the fleet.
--   
--   <a>$sel:fleetArn:FleetAttributes'</a>, <a>fleetAttributes_fleetArn</a>
--   - The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   In a GameLift fleet ARN, the resource ID matches the <tt>FleetId</tt>
--   value.
--   
--   <a>$sel:instanceRoleArn:FleetAttributes'</a>,
--   <a>fleetAttributes_instanceRoleArn</a> - A unique identifier for an
--   AWS IAM role that manages access to your AWS services. With an
--   instance role ARN set, any application that runs on an instance in
--   this fleet can assume the role, including install scripts, server
--   processes, and daemons (background processes). Create a role or look
--   up a role's ARN by using the <a>IAM dashboard</a> in the AWS
--   Management Console. Learn more about using on-box credentials for your
--   game servers at <a>Access external resources from a game server</a>.
--   
--   <a>$sel:certificateConfiguration:FleetAttributes'</a>,
--   <a>fleetAttributes_certificateConfiguration</a> - Indicates whether a
--   TLS/SSL certificate was generated for the fleet.
--   
--   <a>$sel:serverLaunchPath:FleetAttributes'</a>,
--   <a>fleetAttributes_serverLaunchPath</a> - <b>This parameter is no
--   longer used.</b> Server launch paths are now defined using the fleet's
--   RuntimeConfiguration parameter. Requests that use this parameter
--   instead continue to be valid.
--   
--   <a>$sel:logPaths:FleetAttributes'</a>, <a>fleetAttributes_logPaths</a>
--   - <b>This parameter is no longer used.</b> Game session log paths are
--   now defined using the GameLift server API <tt>ProcessReady()</tt>
--   <tt>logParameters</tt>. See more information in the <a>Server API
--   Reference</a>.
--   
--   <a>$sel:serverLaunchParameters:FleetAttributes'</a>,
--   <a>fleetAttributes_serverLaunchParameters</a> - <b>This parameter is
--   no longer used.</b> Server launch parameters are now defined using the
--   fleet's RuntimeConfiguration parameter. Requests that use this
--   parameter instead continue to be valid.
--   
--   <a>$sel:scriptArn:FleetAttributes'</a>,
--   <a>fleetAttributes_scriptArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift script resource that is
--   deployed on instances in this fleet. In a GameLift script ARN, the
--   resource ID matches the <tt>ScriptId</tt> value.
--   
--   <a>$sel:name:FleetAttributes'</a>, <a>fleetAttributes_name</a> - A
--   descriptive label that is associated with a fleet. Fleet names do not
--   need to be unique.
--   
--   <a>$sel:newGameSessionProtectionPolicy':FleetAttributes'</a>,
--   <a>fleetAttributes_newGameSessionProtectionPolicy</a> - The type of
--   game session protection to set on all new instances that are started
--   in the fleet.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
--   
--   <a>$sel:stoppedActions:FleetAttributes'</a>,
--   <a>fleetAttributes_stoppedActions</a> - A list of fleet activity that
--   has been suspended using StopFleetActions. This includes fleet
--   auto-scaling.
--   
--   <a>$sel:terminationTime:FleetAttributes'</a>,
--   <a>fleetAttributes_terminationTime</a> - A time stamp indicating when
--   this data object was terminated. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:resourceCreationLimitPolicy:FleetAttributes'</a>,
--   <a>fleetAttributes_resourceCreationLimitPolicy</a> - The fleet policy
--   that limits the number of game sessions an individual player can
--   create over a span of time.
--   
--   <a>$sel:description:FleetAttributes'</a>,
--   <a>fleetAttributes_description</a> - A human-readable description of
--   the fleet.
--   
--   <a>$sel:buildId:FleetAttributes'</a>, <a>fleetAttributes_buildId</a> -
--   A unique identifier for the build resource that is deployed on
--   instances in this fleet.
--   
--   <a>$sel:buildArn:FleetAttributes'</a>, <a>fleetAttributes_buildArn</a>
--   - The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   build resource that is deployed on instances in this fleet. In a
--   GameLift build ARN, the resource ID matches the <tt>BuildId</tt>
--   value.
--   
--   <a>$sel:metricGroups:FleetAttributes'</a>,
--   <a>fleetAttributes_metricGroups</a> - Name of a metric group that
--   metrics for this fleet are added to. In Amazon CloudWatch, you can
--   view aggregated metrics for fleets that are in a metric group. A fleet
--   can be included in only one metric group at a time.
--   
--   <a>$sel:operatingSystem:FleetAttributes'</a>,
--   <a>fleetAttributes_operatingSystem</a> - The operating system of the
--   fleet's computing resources. A fleet's operating system is determined
--   by the OS of the build or script that is deployed on this fleet.
--   
--   <a>$sel:scriptId:FleetAttributes'</a>, <a>fleetAttributes_scriptId</a>
--   - A unique identifier for the Realtime script resource that is
--   deployed on instances in this fleet.
newFleetAttributes :: FleetAttributes

-- | Current resource capacity settings in a specified fleet or location.
--   The location value might refer to a fleet's remote location or its
--   home Region.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetCapacity | DescribeFleetLocationCapacity |
--   UpdateFleetCapacity
--   
--   <i>See:</i> <a>newFleetCapacity</a> smart constructor.
data FleetCapacity
FleetCapacity' :: Maybe EC2InstanceType -> Maybe Text -> Maybe Text -> Maybe EC2InstanceCounts -> Maybe Text -> FleetCapacity

-- | Create a value of <a>FleetCapacity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceType:FleetCapacity'</a>,
--   <a>fleetCapacity_instanceType</a> - The EC2 instance type that is used
--   for all instances in a fleet. The instance type determines the
--   computing resources in use, including CPU, memory, storage, and
--   networking capacity. See <a>Amazon EC2 Instance Types</a> for detailed
--   descriptions.
--   
--   <a>$sel:fleetId:FleetCapacity'</a>, <a>fleetCapacity_fleetId</a> - A
--   unique identifier for the fleet associated with the location.
--   
--   <a>$sel:fleetArn:FleetCapacity'</a>, <a>fleetCapacity_fleetArn</a> -
--   The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:instanceCounts:FleetCapacity'</a>,
--   <a>fleetCapacity_instanceCounts</a> - The current instance count and
--   capacity settings for the fleet location.
--   
--   <a>$sel:location:FleetCapacity'</a>, <a>fleetCapacity_location</a> -
--   The fleet location for the instance count information, expressed as an
--   AWS Region code, such as <tt>us-west-2</tt>.
newFleetCapacity :: FleetCapacity

-- | Current resource utilization statistics in a specified fleet or
--   location. The location value might refer to a fleet's remote location
--   or its home Region.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetUtilization | DescribeFleetLocationUtilization
--   
--   <i>See:</i> <a>newFleetUtilization</a> smart constructor.
data FleetUtilization
FleetUtilization' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> FleetUtilization

-- | Create a value of <a>FleetUtilization</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activeGameSessionCount:FleetUtilization'</a>,
--   <a>fleetUtilization_activeGameSessionCount</a> - The number of active
--   game sessions that are currently being hosted across all instances in
--   the fleet location.
--   
--   <a>$sel:currentPlayerSessionCount:FleetUtilization'</a>,
--   <a>fleetUtilization_currentPlayerSessionCount</a> - The number of
--   active player sessions that are currently being hosted across all
--   instances in the fleet location.
--   
--   <a>$sel:maximumPlayerSessionCount:FleetUtilization'</a>,
--   <a>fleetUtilization_maximumPlayerSessionCount</a> - The maximum number
--   of players allowed across all game sessions that are currently being
--   hosted across all instances in the fleet location.
--   
--   <a>$sel:fleetId:FleetUtilization'</a>, <a>fleetUtilization_fleetId</a>
--   - A unique identifier for the fleet associated with the location.
--   
--   <a>$sel:fleetArn:FleetUtilization'</a>,
--   <a>fleetUtilization_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift fleet resource and
--   uniquely identifies it. ARNs are unique across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:activeServerProcessCount:FleetUtilization'</a>,
--   <a>fleetUtilization_activeServerProcessCount</a> - The number of
--   server processes in <tt>ACTIVE</tt> status that are currently running
--   across all instances in the fleet location.
--   
--   <a>$sel:location:FleetUtilization'</a>,
--   <a>fleetUtilization_location</a> - The fleet location for the fleet
--   utilization information, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
newFleetUtilization :: FleetUtilization

-- | Set of key-value pairs that contain information about a game session.
--   When included in a game session request, these properties communicate
--   details to be used when setting up the new game session. For example,
--   a game property might specify a game mode, level, or map. Game
--   properties are passed to the game server process when initiating a new
--   game session. For more information, see the <a>GameLift Developer
--   Guide</a>.
--   
--   <i>See:</i> <a>newGameProperty</a> smart constructor.
data GameProperty
GameProperty' :: Text -> Text -> GameProperty

-- | Create a value of <a>GameProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:GameProperty'</a>, <a>gameProperty_key</a> - The game
--   property identifier.
--   
--   <a>$sel:value:GameProperty'</a>, <a>gameProperty_value</a> - The game
--   property value.
newGameProperty :: Text -> Text -> GameProperty

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Properties describing a game server that is running on an instance in
--   a GameServerGroup.
--   
--   A game server is created by a successful call to
--   <tt>RegisterGameServer</tt> and deleted by calling
--   <tt>DeregisterGameServer</tt>. A game server is claimed to host a game
--   session by calling <tt>ClaimGameServer</tt>.
--   
--   <b>Related actions</b>
--   
--   RegisterGameServer | ListGameServers | ClaimGameServer |
--   DescribeGameServer | UpdateGameServer | DeregisterGameServer | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newGameServer</a> smart constructor.
data GameServer
GameServer' :: Maybe Text -> Maybe GameServerUtilizationStatus -> Maybe GameServerClaimStatus -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> GameServer

-- | Create a value of <a>GameServer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:GameServer'</a>, <a>gameServer_instanceId</a> - The
--   unique identifier for the instance where the game server is running.
--   This ID is available in the instance metadata. EC2 instance IDs use a
--   17-character format, for example: <tt>i-1234567890abcdef0</tt>.
--   
--   <a>$sel:utilizationStatus:GameServer'</a>,
--   <a>gameServer_utilizationStatus</a> - Indicates whether the game
--   server is currently available for new games or is busy. Possible
--   statuses include:
--   
--   <ul>
--   <li><tt>AVAILABLE</tt> - The game server is available to be claimed. A
--   game server that has been claimed remains in this status until it
--   reports game hosting activity.</li>
--   <li><tt>UTILIZED</tt> - The game server is currently hosting a game
--   session with players.</li>
--   </ul>
--   
--   <a>$sel:claimStatus:GameServer'</a>, <a>gameServer_claimStatus</a> -
--   Indicates when an available game server has been reserved for gameplay
--   but has not yet started hosting a game. Once it is claimed, the game
--   server remains in <tt>CLAIMED</tt> status for a maximum of one minute.
--   During this time, game clients connect to the game server to start the
--   game and trigger the game server to update its utilization status.
--   After one minute, the game server claim status reverts to null.
--   
--   <a>$sel:gameServerData:GameServer'</a>,
--   <a>gameServer_gameServerData</a> - A set of custom game server
--   properties, formatted as a single string value. This data is passed to
--   a game client or service when it requests information on game servers
--   using ListGameServers or ClaimGameServer.
--   
--   <a>$sel:lastClaimTime:GameServer'</a>, <a>gameServer_lastClaimTime</a>
--   - Timestamp that indicates the last time the game server was claimed
--   with a ClaimGameServer request. The format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   This value is used to calculate when a claimed game server's status
--   should revert to null.
--   
--   <a>$sel:registrationTime:GameServer'</a>,
--   <a>gameServer_registrationTime</a> - Timestamp that indicates when the
--   game server was created with a RegisterGameServer request. The format
--   is a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:gameServerGroupArn:GameServer'</a>,
--   <a>gameServer_gameServerGroupArn</a> - The ARN identifier for the game
--   server group where the game server is located.
--   
--   <a>$sel:gameServerId:GameServer'</a>, <a>gameServer_gameServerId</a> -
--   A custom string that uniquely identifies the game server. Game server
--   IDs are developer-defined and are unique across all game server groups
--   in an AWS account.
--   
--   <a>$sel:gameServerGroupName:GameServer'</a>,
--   <a>gameServer_gameServerGroupName</a> - A unique identifier for the
--   game server group where the game server is running. Use either the
--   GameServerGroup name or ARN value.
--   
--   <a>$sel:connectionInfo:GameServer'</a>,
--   <a>gameServer_connectionInfo</a> - The port and IP address that must
--   be used to establish a client connection to the game server.
--   
--   <a>$sel:lastHealthCheckTime:GameServer'</a>,
--   <a>gameServer_lastHealthCheckTime</a> - Timestamp that indicates the
--   last time the game server was updated with health status using an
--   UpdateGameServer request. The format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>). After
--   game server registration, this property is only changed when a game
--   server update specifies a health check value.
newGameServer :: GameServer

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Properties that describe a game server group resource. A game server
--   group manages certain properties related to a corresponding EC2 Auto
--   Scaling group.
--   
--   A game server group is created by a successful call to
--   <tt>CreateGameServerGroup</tt> and deleted by calling
--   <tt>DeleteGameServerGroup</tt>. Game server group activity can be
--   temporarily suspended and resumed by calling
--   <tt>SuspendGameServerGroup</tt> and <tt>ResumeGameServerGroup</tt>,
--   respectively.
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newGameServerGroup</a> smart constructor.
data GameServerGroup
GameServerGroup' :: Maybe POSIX -> Maybe GameServerGroupStatus -> Maybe Text -> Maybe Text -> Maybe (NonEmpty InstanceDefinition) -> Maybe Text -> Maybe (NonEmpty GameServerGroupAction) -> Maybe Text -> Maybe BalancingStrategy -> Maybe Text -> Maybe GameServerProtectionPolicy -> Maybe POSIX -> GameServerGroup

-- | Create a value of <a>GameServerGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:GameServerGroup'</a>,
--   <a>gameServerGroup_creationTime</a> - A time stamp indicating when
--   this data object was created. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:GameServerGroup'</a>, <a>gameServerGroup_status</a> -
--   The current status of the game server group. Possible statuses
--   include:
--   
--   <ul>
--   <li><tt>NEW</tt> - GameLift FleetIQ has validated the
--   <tt>CreateGameServerGroup()</tt> request.</li>
--   <li><tt>ACTIVATING</tt> - GameLift FleetIQ is setting up a game server
--   group, which includes creating an Auto Scaling group in your AWS
--   account.</li>
--   <li><tt>ACTIVE</tt> - The game server group has been successfully
--   created.</li>
--   <li><tt>DELETE_SCHEDULED</tt> - A request to delete the game server
--   group has been received.</li>
--   <li><tt>DELETING</tt> - GameLift FleetIQ has received a valid
--   <tt>DeleteGameServerGroup()</tt> request and is processing it.
--   GameLift FleetIQ must first complete and release hosts before it
--   deletes the Auto Scaling group and the game server group.</li>
--   <li><tt>DELETED</tt> - The game server group has been successfully
--   deleted.</li>
--   <li><tt>ERROR</tt> - The asynchronous processes of activating or
--   deleting a game server group has failed, resulting in an error
--   state.</li>
--   </ul>
--   
--   <a>$sel:roleArn:GameServerGroup'</a>, <a>gameServerGroup_roleArn</a> -
--   The Amazon Resource Name (<a>ARN</a>) for an IAM role that allows
--   Amazon GameLift to access your EC2 Auto Scaling groups.
--   
--   <a>$sel:autoScalingGroupArn:GameServerGroup'</a>,
--   <a>gameServerGroup_autoScalingGroupArn</a> - A generated unique ID for
--   the EC2 Auto Scaling group that is associated with this game server
--   group.
--   
--   <a>$sel:instanceDefinitions:GameServerGroup'</a>,
--   <a>gameServerGroup_instanceDefinitions</a> - The set of EC2 instance
--   types that GameLift FleetIQ can use when balancing and automatically
--   scaling instances in the corresponding Auto Scaling group.
--   
--   <a>$sel:gameServerGroupArn:GameServerGroup'</a>,
--   <a>gameServerGroup_gameServerGroupArn</a> - A generated unique ID for
--   the game server group.
--   
--   <a>$sel:suspendedActions:GameServerGroup'</a>,
--   <a>gameServerGroup_suspendedActions</a> - A list of activities that
--   are currently suspended for this game server group. If this property
--   is empty, all activities are occurring.
--   
--   <a>$sel:gameServerGroupName:GameServerGroup'</a>,
--   <a>gameServerGroup_gameServerGroupName</a> - A developer-defined
--   identifier for the game server group. The name is unique for each
--   Region in each AWS account.
--   
--   <a>$sel:balancingStrategy:GameServerGroup'</a>,
--   <a>gameServerGroup_balancingStrategy</a> - Indicates how GameLift
--   FleetIQ balances the use of Spot Instances and On-Demand Instances in
--   the game server group. Method options include the following:
--   
--   <ul>
--   <li><tt>SPOT_ONLY</tt> - Only Spot Instances are used in the game
--   server group. If Spot Instances are unavailable or not viable for game
--   hosting, the game server group provides no hosting capacity until Spot
--   Instances can again be used. Until then, no new instances are started,
--   and the existing nonviable Spot Instances are terminated (after
--   current gameplay ends) and are not replaced.</li>
--   <li><tt>SPOT_PREFERRED</tt> - (default value) Spot Instances are used
--   whenever available in the game server group. If Spot Instances are
--   unavailable, the game server group continues to provide hosting
--   capacity by falling back to On-Demand Instances. Existing nonviable
--   Spot Instances are terminated (after current gameplay ends) and are
--   replaced with new On-Demand Instances.</li>
--   <li><tt>ON_DEMAND_ONLY</tt> - Only On-Demand Instances are used in the
--   game server group. No Spot Instances are used, even when available,
--   while this balancing strategy is in force.</li>
--   </ul>
--   
--   <a>$sel:statusReason:GameServerGroup'</a>,
--   <a>gameServerGroup_statusReason</a> - Additional information about the
--   current game server group status. This information might provide
--   additional insight on groups that are in <tt>ERROR</tt> status.
--   
--   <a>$sel:gameServerProtectionPolicy:GameServerGroup'</a>,
--   <a>gameServerGroup_gameServerProtectionPolicy</a> - A flag that
--   indicates whether instances in the game server group are protected
--   from early termination. Unprotected instances that have active game
--   servers running might be terminated during a scale-down event, causing
--   players to be dropped from the game. Protected instances cannot be
--   terminated while there are active game servers running except in the
--   event of a forced game server group deletion (see ). An exception to
--   this is with Spot Instances, which can be terminated by AWS regardless
--   of protection status.
--   
--   <a>$sel:lastUpdatedTime:GameServerGroup'</a>,
--   <a>gameServerGroup_lastUpdatedTime</a> - A timestamp that indicates
--   when this game server group was last updated.
newGameServerGroup :: GameServerGroup

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Configuration settings for intelligent automatic scaling that uses
--   target tracking. These settings are used to add an Auto Scaling policy
--   when creating the corresponding Auto Scaling group with
--   CreateGameServerGroup. After the Auto Scaling group is created, all
--   updates to Auto Scaling policies, including changing this policy and
--   adding or removing other policies, is done directly on the Auto
--   Scaling group.
--   
--   <i>See:</i> <a>newGameServerGroupAutoScalingPolicy</a> smart
--   constructor.
data GameServerGroupAutoScalingPolicy
GameServerGroupAutoScalingPolicy' :: Maybe Natural -> TargetTrackingConfiguration -> GameServerGroupAutoScalingPolicy

-- | Create a value of <a>GameServerGroupAutoScalingPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:estimatedInstanceWarmup:GameServerGroupAutoScalingPolicy'</a>,
--   <a>gameServerGroupAutoScalingPolicy_estimatedInstanceWarmup</a> -
--   Length of time, in seconds, it takes for a new instance to start new
--   game server processes and register with GameLift FleetIQ. Specifying a
--   warm-up time can be useful, particularly with game servers that take a
--   long time to start up, because it avoids prematurely starting new
--   instances.
--   
--   
--   <a>$sel:targetTrackingConfiguration:GameServerGroupAutoScalingPolicy'</a>,
--   <a>gameServerGroupAutoScalingPolicy_targetTrackingConfiguration</a> -
--   Settings for a target-based scaling policy applied to Auto Scaling
--   group. These settings are used to create a target-based policy that
--   tracks the GameLift FleetIQ metric
--   <tt>"PercentUtilizedGameServers"</tt> and specifies a target value for
--   the metric. As player usage changes, the policy triggers to adjust the
--   game server group capacity so that the metric returns to the target
--   value.
newGameServerGroupAutoScalingPolicy :: TargetTrackingConfiguration -> GameServerGroupAutoScalingPolicy

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Additional properties, including status, that describe an EC2 instance
--   in a game server group. Instance configurations are set with game
--   server group properties (see <tt>DescribeGameServerGroup</tt> and with
--   the EC2 launch template that was used when creating the game server
--   group.
--   
--   Retrieve game server instances for a game server group by calling
--   <tt>DescribeGameServerInstances</tt>.
--   
--   <b>Related actions</b>
--   
--   CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup
--   | UpdateGameServerGroup | DeleteGameServerGroup |
--   ResumeGameServerGroup | SuspendGameServerGroup |
--   DescribeGameServerInstances | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newGameServerInstance</a> smart constructor.
data GameServerInstance
GameServerInstance' :: Maybe Text -> Maybe GameServerInstanceStatus -> Maybe Text -> Maybe Text -> GameServerInstance

-- | Create a value of <a>GameServerInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:GameServerInstance'</a>,
--   <a>gameServerInstance_instanceId</a> - The unique identifier for the
--   instance where the game server is running. This ID is available in the
--   instance metadata. EC2 instance IDs use a 17-character format, for
--   example: <tt>i-1234567890abcdef0</tt>.
--   
--   <a>$sel:instanceStatus:GameServerInstance'</a>,
--   <a>gameServerInstance_instanceStatus</a> - Current status of the game
--   server instance.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The instance is viable for hosting game
--   servers.</li>
--   <li><b>DRAINING</b> -- The instance is not viable for hosting game
--   servers. Existing game servers are in the process of ending, and new
--   game servers are not started on this instance unless no other
--   resources are available. When the instance is put in DRAINING, a new
--   instance is started up to replace it. Once the instance has no
--   UTILIZED game servers, it will be terminated in favor of the new
--   instance.</li>
--   <li><b>SPOT_TERMINATING</b> -- The instance is in the process of
--   shutting down due to a Spot instance interruption. No new game servers
--   are started on this instance.</li>
--   </ul>
--   
--   <a>$sel:gameServerGroupArn:GameServerInstance'</a>,
--   <a>gameServerInstance_gameServerGroupArn</a> - A generated unique
--   identifier for the game server group that includes the game server
--   instance.
--   
--   <a>$sel:gameServerGroupName:GameServerInstance'</a>,
--   <a>gameServerInstance_gameServerGroupName</a> - A developer-defined
--   identifier for the game server group that includes the game server
--   instance. The name is unique for each Region in each AWS account.
newGameServerInstance :: GameServerInstance

-- | Properties describing a game session.
--   
--   A game session in ACTIVE status can host players. When a game session
--   ends, its status is set to <tt>TERMINATED</tt>.
--   
--   Once the session ends, the game session object is retained for 30
--   days. This means you can reuse idempotency token values after this
--   time. Game session logs are retained for 14 days.
--   
--   <b>Related actions</b>
--   
--   CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails
--   | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newGameSession</a> smart constructor.
data GameSession
GameSession' :: Maybe Natural -> Maybe [GameProperty] -> Maybe POSIX -> Maybe GameSessionStatus -> Maybe PlayerSessionCreationPolicy -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe GameSessionStatusReason -> Maybe Text -> GameSession

-- | Create a value of <a>GameSession</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentPlayerSessionCount:GameSession'</a>,
--   <a>gameSession_currentPlayerSessionCount</a> - Number of players
--   currently in the game session.
--   
--   <a>$sel:gameProperties:GameSession'</a>,
--   <a>gameSession_gameProperties</a> - A set of custom properties for a
--   game session, formatted as key:value pairs. These properties are
--   passed to a game server process in the GameSession object with a
--   request to start a new game session. You can search for active game
--   sessions based on this custom data with SearchGameSessions.
--   
--   <a>$sel:creationTime:GameSession'</a>, <a>gameSession_creationTime</a>
--   - A time stamp indicating when this data object was created. Format is
--   a number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:GameSession'</a>, <a>gameSession_status</a> - Current
--   status of the game session. A game session must have an
--   <tt>ACTIVE</tt> status to have player sessions.
--   
--   <a>$sel:playerSessionCreationPolicy:GameSession'</a>,
--   <a>gameSession_playerSessionCreationPolicy</a> - Indicates whether or
--   not the game session is accepting new players.
--   
--   <a>$sel:creatorId:GameSession'</a>, <a>gameSession_creatorId</a> - A
--   unique identifier for a player. This ID is used to enforce a resource
--   protection policy (if one exists), that limits the number of game
--   sessions a player can create.
--   
--   <a>$sel:maximumPlayerSessionCount:GameSession'</a>,
--   <a>gameSession_maximumPlayerSessionCount</a> - The maximum number of
--   players that can be connected simultaneously to the game session.
--   
--   <a>$sel:matchmakerData:GameSession'</a>,
--   <a>gameSession_matchmakerData</a> - Information about the matchmaking
--   process that was used to create the game session. It is in JSON
--   syntax, formatted as a string. In addition the matchmaking
--   configuration used, it contains data on all players assigned to the
--   match, including player attributes and team assignments. For more
--   details on matchmaker data, see <a>Match Data</a>. Matchmaker data is
--   useful when requesting match backfills, and is updated whenever new
--   players are added during a successful backfill (see
--   StartMatchBackfill).
--   
--   <a>$sel:fleetId:GameSession'</a>, <a>gameSession_fleetId</a> - A
--   unique identifier for the fleet that the game session is running on.
--   
--   <a>$sel:fleetArn:GameSession'</a>, <a>gameSession_fleetArn</a> - The
--   Amazon Resource Name (<a>ARN</a>) associated with the GameLift fleet
--   that this game session is running on.
--   
--   <a>$sel:gameSessionData:GameSession'</a>,
--   <a>gameSession_gameSessionData</a> - A set of custom game session
--   properties, formatted as a single string value. This data is passed to
--   a game server process in the GameSession object with a request to
--   start a new game session.
--   
--   <a>$sel:gameSessionId:GameSession'</a>,
--   <a>gameSession_gameSessionId</a> - A unique identifier for the game
--   session. A game session ARN has the following format:
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet
--   ID&gt;/&lt;custom ID string or idempotency token&gt;</tt>.
--   
--   <a>$sel:name:GameSession'</a>, <a>gameSession_name</a> - A descriptive
--   label that is associated with a game session. Session names do not
--   need to be unique.
--   
--   <a>$sel:ipAddress:GameSession'</a>, <a>gameSession_ipAddress</a> - The
--   IP address of the game session. To connect to a GameLift game server,
--   an app needs both the IP address and port number.
--   
--   <a>$sel:terminationTime:GameSession'</a>,
--   <a>gameSession_terminationTime</a> - A time stamp indicating when this
--   data object was terminated. Format is a number expressed in Unix time
--   as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:port:GameSession'</a>, <a>gameSession_port</a> - The port
--   number for the game session. To connect to a GameLift game server, an
--   app needs both the IP address and port number.
--   
--   <a>$sel:dnsName:GameSession'</a>, <a>gameSession_dnsName</a> - The DNS
--   identifier assigned to the instance that is running the game session.
--   Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
--   
--   <a>$sel:statusReason:GameSession'</a>, <a>gameSession_statusReason</a>
--   - Provides additional information about game session status.
--   <tt>INTERRUPTED</tt> indicates that the game session was hosted on a
--   spot instance that was reclaimed, causing the active game session to
--   be terminated.
--   
--   <a>$sel:location:GameSession'</a>, <a>gameSession_location</a> - The
--   fleet location where the game session is running. This value might
--   specify the fleet's home Region or a remote location. Location is
--   expressed as an AWS Region code such as <tt>us-west-2</tt>.
newGameSession :: GameSession

-- | Connection information for a new game session that is created in
--   response to a StartMatchmaking request. Once a match is made, the
--   FlexMatch engine creates a new game session for it. This information,
--   including the game session endpoint and player sessions for each
--   player in the original matchmaking request, is added to the
--   MatchmakingTicket, which can be retrieved by calling
--   DescribeMatchmaking.
--   
--   <i>See:</i> <a>newGameSessionConnectionInfo</a> smart constructor.
data GameSessionConnectionInfo
GameSessionConnectionInfo' :: Maybe Text -> Maybe Text -> Maybe [MatchedPlayerSession] -> Maybe Natural -> Maybe Text -> GameSessionConnectionInfo

-- | Create a value of <a>GameSessionConnectionInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionArn:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_gameSessionArn</a> - A unique identifier
--   for the game session. Use the game session ID.
--   
--   <a>$sel:ipAddress:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_ipAddress</a> - The IP address of the
--   game session. To connect to a GameLift game server, an app needs both
--   the IP address and port number.
--   
--   <a>$sel:matchedPlayerSessions:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_matchedPlayerSessions</a> - A collection
--   of player session IDs, one for each player ID that was included in the
--   original matchmaking request.
--   
--   <a>$sel:port:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_port</a> - The port number for the game
--   session. To connect to a GameLift game server, an app needs both the
--   IP address and port number.
--   
--   <a>$sel:dnsName:GameSessionConnectionInfo'</a>,
--   <a>gameSessionConnectionInfo_dnsName</a> - The DNS identifier assigned
--   to the instance that is running the game session. Values have the
--   following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
newGameSessionConnectionInfo :: GameSessionConnectionInfo

-- | A game session's properties plus the protection policy currently in
--   force.
--   
--   <i>See:</i> <a>newGameSessionDetail</a> smart constructor.
data GameSessionDetail
GameSessionDetail' :: Maybe GameSession -> Maybe ProtectionPolicy -> GameSessionDetail

-- | Create a value of <a>GameSessionDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSession:GameSessionDetail'</a>,
--   <a>gameSessionDetail_gameSession</a> - Object that describes a game
--   session.
--   
--   <a>$sel:protectionPolicy:GameSessionDetail'</a>,
--   <a>gameSessionDetail_protectionPolicy</a> - Current status of
--   protection for the game session.
--   
--   <ul>
--   <li><b>NoProtection</b> -- The game session can be terminated during a
--   scale-down event.</li>
--   <li><b>FullProtection</b> -- If the game session is in an
--   <tt>ACTIVE</tt> status, it cannot be terminated during a scale-down
--   event.</li>
--   </ul>
newGameSessionDetail :: GameSessionDetail

-- | Object that describes a StartGameSessionPlacement request. This object
--   includes the full details of the original request plus the current
--   status and start/end time stamps.
--   
--   Game session placement-related operations include:
--   
--   <ul>
--   <li>StartGameSessionPlacement</li>
--   <li>DescribeGameSessionPlacement</li>
--   <li>StopGameSessionPlacement</li>
--   </ul>
--   
--   <i>See:</i> <a>newGameSessionPlacement</a> smart constructor.
data GameSessionPlacement
GameSessionPlacement' :: Maybe [GameProperty] -> Maybe GameSessionPlacementState -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [PlacedPlayerSession] -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe [PlayerLatency] -> GameSessionPlacement

-- | Create a value of <a>GameSessionPlacement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameProperties:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameProperties</a> - A set of custom
--   properties for a game session, formatted as key:value pairs. These
--   properties are passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>).
--   
--   <a>$sel:status:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_status</a> - Current status of the game
--   session placement request.
--   
--   <ul>
--   <li><b>PENDING</b> -- The placement request is currently in the queue
--   waiting to be processed.</li>
--   <li><b>FULFILLED</b> -- A new game session and player sessions (if
--   requested) have been successfully created. Values for
--   <i>GameSessionArn</i> and <i>GameSessionRegion</i> are available.</li>
--   <li><b>CANCELLED</b> -- The placement request was canceled with a call
--   to StopGameSessionPlacement.</li>
--   <li><b>TIMED_OUT</b> -- A new game session was not successfully
--   created before the time limit expired. You can resubmit the placement
--   request as needed.</li>
--   <li><b>FAILED</b> -- GameLift is not able to complete the process of
--   placing the game session. Common reasons are the game session
--   terminated before the placement process was completed, or an
--   unexpected internal error.</li>
--   </ul>
--   
--   <a>$sel:gameSessionQueueName:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionQueueName</a> - A descriptive label
--   that is associated with game session queue. Queue names must be unique
--   within each Region.
--   
--   <a>$sel:maximumPlayerSessionCount:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_maximumPlayerSessionCount</a> - The maximum
--   number of players that can be connected simultaneously to the game
--   session.
--   
--   <a>$sel:matchmakerData:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_matchmakerData</a> - Information on the
--   matchmaking process for this game. Data is in JSON syntax, formatted
--   as a string. It identifies the matchmaking configuration used to
--   create the match, and contains data on all players assigned to the
--   match, including player attributes and team assignments. For more
--   details on matchmaker data, see <a>Match Data</a>.
--   
--   <a>$sel:gameSessionData:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionData</a> - A set of custom game
--   session properties, formatted as a single string value. This data is
--   passed to a game server process in the GameSession object with a
--   request to start a new game session (see <a>Start a Game Session</a>).
--   
--   <a>$sel:gameSessionId:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionId</a> - A unique identifier for
--   the game session. This value is set once the new game session is
--   placed (placement status is <tt>FULFILLED</tt>).
--   
--   <a>$sel:startTime:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_startTime</a> - Time stamp indicating when
--   this request was placed in the queue. Format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:gameSessionArn:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionArn</a> - Identifier for the game
--   session created by this placement request. This value is set once the
--   new game session is placed (placement status is <tt>FULFILLED</tt>).
--   This identifier is unique across all Regions. You can use this value
--   as a <tt>GameSessionId</tt> value as needed.
--   
--   <a>$sel:endTime:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_endTime</a> - Time stamp indicating when this
--   request was completed, canceled, or timed out.
--   
--   <a>$sel:gameSessionName:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionName</a> - A descriptive label that
--   is associated with a game session. Session names do not need to be
--   unique.
--   
--   <a>$sel:ipAddress:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_ipAddress</a> - The IP address of the game
--   session. To connect to a GameLift game server, an app needs both the
--   IP address and port number. This value is set once the new game
--   session is placed (placement status is <tt>FULFILLED</tt>).
--   
--   <a>$sel:placementId:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_placementId</a> - A unique identifier for a
--   game session placement.
--   
--   <a>$sel:placedPlayerSessions:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_placedPlayerSessions</a> - A collection of
--   information on player sessions created in response to the game session
--   placement request. These player sessions are created only once a new
--   game session is successfully placed (placement status is
--   <tt>FULFILLED</tt>). This information includes the player ID (as
--   provided in the placement request) and the corresponding player
--   session ID. Retrieve full player sessions by calling
--   DescribePlayerSessions with the player session ID.
--   
--   <a>$sel:port:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_port</a> - The port number for the game
--   session. To connect to a GameLift game server, an app needs both the
--   IP address and port number. This value is set once the new game
--   session is placed (placement status is <tt>FULFILLED</tt>).
--   
--   <a>$sel:dnsName:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_dnsName</a> - The DNS identifier assigned to
--   the instance that is running the game session. Values have the
--   following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
--   
--   <a>$sel:gameSessionRegion:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_gameSessionRegion</a> - Name of the Region
--   where the game session created by this placement request is running.
--   This value is set once the new game session is placed (placement
--   status is <tt>FULFILLED</tt>).
--   
--   <a>$sel:playerLatencies:GameSessionPlacement'</a>,
--   <a>gameSessionPlacement_playerLatencies</a> - A set of values,
--   expressed in milliseconds, that indicates the amount of latency that a
--   player experiences when connected to AWS Regions.
newGameSessionPlacement :: GameSessionPlacement

-- | Configuration for a game session placement mechanism that processes
--   requests for new game sessions. A queue can be used on its own or as
--   part of a matchmaking solution.
--   
--   <b>Related actions</b>
--   
--   CreateGameSessionQueue | DescribeGameSessionQueues |
--   UpdateGameSessionQueue
--   
--   <i>See:</i> <a>newGameSessionQueue</a> smart constructor.
data GameSessionQueue
GameSessionQueue' :: Maybe Text -> Maybe [PlayerLatencyPolicy] -> Maybe PriorityConfiguration -> Maybe Text -> Maybe [GameSessionQueueDestination] -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe FilterConfiguration -> GameSessionQueue

-- | Create a value of <a>GameSessionQueue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customEventData:GameSessionQueue'</a>,
--   <a>gameSessionQueue_customEventData</a> - Information that is added to
--   all events that are related to this game session queue.
--   
--   <a>$sel:playerLatencyPolicies:GameSessionQueue'</a>,
--   <a>gameSessionQueue_playerLatencyPolicies</a> - A set of policies that
--   act as a sliding cap on player latency. FleetIQ works to deliver low
--   latency for most players in a game session. These policies ensure that
--   no individual player can be placed into a game with unreasonably high
--   latency. Use multiple policies to gradually relax latency requirements
--   a step at a time. Multiple policies are applied based on their maximum
--   allowed latency, starting with the lowest value.
--   
--   <a>$sel:priorityConfiguration:GameSessionQueue'</a>,
--   <a>gameSessionQueue_priorityConfiguration</a> - Custom settings to use
--   when prioritizing destinations and locations for game session
--   placements. This configuration replaces the FleetIQ default
--   prioritization process. Priority types that are not explicitly named
--   will be automatically applied at the end of the prioritization
--   process.
--   
--   <a>$sel:name:GameSessionQueue'</a>, <a>gameSessionQueue_name</a> - A
--   descriptive label that is associated with game session queue. Queue
--   names must be unique within each Region.
--   
--   <a>$sel:destinations:GameSessionQueue'</a>,
--   <a>gameSessionQueue_destinations</a> - A list of fleets and/or fleet
--   aliases that can be used to fulfill game session placement requests in
--   the queue. Destinations are identified by either a fleet ARN or a
--   fleet alias ARN, and are listed in order of placement preference.
--   
--   <a>$sel:timeoutInSeconds:GameSessionQueue'</a>,
--   <a>gameSessionQueue_timeoutInSeconds</a> - The maximum time, in
--   seconds, that a new game session placement request remains in the
--   queue. When a request exceeds this time, the game session placement
--   changes to a <tt>TIMED_OUT</tt> status.
--   
--   <a>$sel:gameSessionQueueArn:GameSessionQueue'</a>,
--   <a>gameSessionQueue_gameSessionQueueArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift game session queue
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. In a GameLift game session queue ARN, the resource ID
--   matches the <i>Name</i> value.
--   
--   <a>$sel:notificationTarget:GameSessionQueue'</a>,
--   <a>gameSessionQueue_notificationTarget</a> - An SNS topic ARN that is
--   set up to receive game session placement notifications. See <a>Setting
--   up notifications for game session placement</a>.
--   
--   <a>$sel:filterConfiguration:GameSessionQueue'</a>,
--   <a>gameSessionQueue_filterConfiguration</a> - A list of locations
--   where a queue is allowed to place new game sessions. Locations are
--   specified in the form of AWS Region codes, such as <tt>us-west-2</tt>.
--   If this parameter is not set, game sessions can be placed in any queue
--   location.
newGameSessionQueue :: GameSessionQueue

-- | A fleet or alias designated in a game session queue. Queues fulfill
--   requests for new game sessions by placing a new game session on any of
--   the queue's destinations.
--   
--   Destinations are part of a GameSessionQueue.
--   
--   <i>See:</i> <a>newGameSessionQueueDestination</a> smart constructor.
data GameSessionQueueDestination
GameSessionQueueDestination' :: Maybe Text -> GameSessionQueueDestination

-- | Create a value of <a>GameSessionQueueDestination</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationArn:GameSessionQueueDestination'</a>,
--   <a>gameSessionQueueDestination_destinationArn</a> - The Amazon
--   Resource Name (ARN) that is assigned to fleet or fleet alias. ARNs,
--   which include a fleet ID or alias ID and a Region name, provide a
--   unique identifier across all Regions.
newGameSessionQueueDestination :: GameSessionQueueDestination

-- | Represents an EC2 instance of virtual computing resources that hosts
--   one or more game servers. In GameLift, a fleet can contain zero or
--   more instances.
--   
--   <b>Related actions</b>
--   
--   DescribeInstances
--   
--   <i>See:</i> <a>newInstance</a> smart constructor.
data Instance
Instance' :: Maybe POSIX -> Maybe InstanceStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe OperatingSystem -> Maybe EC2InstanceType -> Maybe Text -> Instance

-- | Create a value of <a>Instance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Instance'</a>, <a>instance_creationTime</a> - A
--   time stamp indicating when this data object was created. Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:Instance'</a>, <a>instance_status</a> - Current status
--   of the instance. Possible statuses include the following:
--   
--   <ul>
--   <li><b>PENDING</b> -- The instance is in the process of being created
--   and launching server processes as defined in the fleet's run-time
--   configuration.</li>
--   <li><b>ACTIVE</b> -- The instance has been successfully created and at
--   least one server process has successfully launched and reported back
--   to GameLift that it is ready to host a game session. The instance is
--   now considered ready to host game sessions.</li>
--   <li><b>TERMINATING</b> -- The instance is in the process of shutting
--   down. This may happen to reduce capacity during a scaling down event
--   or to recycle resources in the event of a problem.</li>
--   </ul>
--   
--   <a>$sel:instanceId:Instance'</a>, <a>instance_instanceId</a> - A
--   unique identifier for the instance.
--   
--   <a>$sel:fleetId:Instance'</a>, <a>instance_fleetId</a> - A unique
--   identifier for the fleet that the instance is in.
--   
--   <a>$sel:fleetArn:Instance'</a>, <a>instance_fleetArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift fleet
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:ipAddress:Instance'</a>, <a>instance_ipAddress</a> - IP
--   address that is assigned to the instance.
--   
--   <a>$sel:dnsName:Instance'</a>, <a>instance_dnsName</a> - The DNS
--   identifier assigned to the instance that is running the game session.
--   Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
--   
--   <a>$sel:operatingSystem:Instance'</a>, <a>instance_operatingSystem</a>
--   - Operating system that is running on this instance.
--   
--   <a>$sel:type':Instance'</a>, <a>instance_type</a> - EC2 instance type
--   that defines the computing resources of this instance.
--   
--   <a>$sel:location:Instance'</a>, <a>instance_location</a> - The fleet
--   location of the instance, expressed as an AWS Region code, such as
--   <tt>us-west-2</tt>.
newInstance :: Instance

-- | Information required to remotely connect to a fleet instance. Access
--   is requested by calling GetInstanceAccess.
--   
--   <i>See:</i> <a>newInstanceAccess</a> smart constructor.
data InstanceAccess
InstanceAccess' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe OperatingSystem -> Maybe (Sensitive InstanceCredentials) -> InstanceAccess

-- | Create a value of <a>InstanceAccess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:InstanceAccess'</a>,
--   <a>instanceAccess_instanceId</a> - A unique identifier for the
--   instance being accessed.
--   
--   <a>$sel:fleetId:InstanceAccess'</a>, <a>instanceAccess_fleetId</a> - A
--   unique identifier for the fleet containing the instance being
--   accessed.
--   
--   <a>$sel:ipAddress:InstanceAccess'</a>, <a>instanceAccess_ipAddress</a>
--   - IP address that is assigned to the instance.
--   
--   <a>$sel:operatingSystem:InstanceAccess'</a>,
--   <a>instanceAccess_operatingSystem</a> - Operating system that is
--   running on the instance.
--   
--   <a>$sel:credentials:InstanceAccess'</a>,
--   <a>instanceAccess_credentials</a> - Credentials required to access the
--   instance.
newInstanceAccess :: InstanceAccess

-- | Set of credentials required to remotely access a fleet instance.
--   Access credentials are requested by calling GetInstanceAccess and
--   returned in an InstanceAccess object.
--   
--   <i>See:</i> <a>newInstanceCredentials</a> smart constructor.
data InstanceCredentials
InstanceCredentials' :: Maybe Text -> Maybe Text -> InstanceCredentials

-- | Create a value of <a>InstanceCredentials</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:InstanceCredentials'</a>,
--   <a>instanceCredentials_userName</a> - User login string.
--   
--   <a>$sel:secret:InstanceCredentials'</a>,
--   <a>instanceCredentials_secret</a> - Secret string. For Windows
--   instances, the secret is a password for use with Windows Remote
--   Desktop. For Linux instances, it is a private key (which must be saved
--   as a <tt>.pem</tt> file) for use with SSH.
newInstanceCredentials :: InstanceCredentials

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   An allowed instance type for a GameServerGroup. All game server groups
--   must have at least two instance types defined for it. GameLift FleetIQ
--   periodically evaluates each defined instance type for viability. It
--   then updates the Auto Scaling group with the list of viable instance
--   types.
--   
--   <i>See:</i> <a>newInstanceDefinition</a> smart constructor.
data InstanceDefinition
InstanceDefinition' :: Maybe Text -> GameServerGroupInstanceType -> InstanceDefinition

-- | Create a value of <a>InstanceDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weightedCapacity:InstanceDefinition'</a>,
--   <a>instanceDefinition_weightedCapacity</a> - Instance weighting that
--   indicates how much this instance type contributes to the total
--   capacity of a game server group. Instance weights are used by GameLift
--   FleetIQ to calculate the instance type's cost per unit hour and better
--   identify the most cost-effective options. For detailed information on
--   weighting instance capacity, see <a>Instance Weighting</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>. Default value is "1".
--   
--   <a>$sel:instanceType:InstanceDefinition'</a>,
--   <a>instanceDefinition_instanceType</a> - An EC2 instance type
--   designation.
newInstanceDefinition :: GameServerGroupInstanceType -> InstanceDefinition

-- | A range of IP addresses and port settings that allow inbound traffic
--   to connect to server processes on an instance in a fleet. New game
--   sessions are assigned an IP address/port number combination, which
--   must fall into the fleet's allowed ranges. Fleets with custom game
--   builds must have permissions explicitly set. For Realtime Servers
--   fleets, GameLift automatically opens two port ranges, one for TCP
--   messaging and one for UDP.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetPortSettings
--   
--   <i>See:</i> <a>newIpPermission</a> smart constructor.
data IpPermission
IpPermission' :: Natural -> Natural -> Text -> IpProtocol -> IpPermission

-- | Create a value of <a>IpPermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fromPort:IpPermission'</a>, <a>ipPermission_fromPort</a> - A
--   starting value for a range of allowed port numbers.
--   
--   <a>$sel:toPort:IpPermission'</a>, <a>ipPermission_toPort</a> - An
--   ending value for a range of allowed port numbers. Port numbers are
--   end-inclusive. This value must be higher than <tt>FromPort</tt>.
--   
--   <a>$sel:ipRange:IpPermission'</a>, <a>ipPermission_ipRange</a> - A
--   range of allowed IP addresses. This value must be expressed in CIDR
--   notation. Example: "<tt>000.000.000.000/[subnet mask]</tt>" or
--   optionally the shortened version "<tt>0.0.0.0/[subnet mask]</tt>".
--   
--   <a>$sel:protocol:IpPermission'</a>, <a>ipPermission_protocol</a> - The
--   network communication protocol used by the fleet.
newIpPermission :: Natural -> Natural -> Text -> IpProtocol -> IpPermission

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   An EC2 launch template that contains configuration settings and game
--   server code to be deployed to all instances in a game server group.
--   The launch template is specified when creating a new game server group
--   with CreateGameServerGroup.
--   
--   <i>See:</i> <a>newLaunchTemplateSpecification</a> smart constructor.
data LaunchTemplateSpecification
LaunchTemplateSpecification' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchTemplateSpecification

-- | Create a value of <a>LaunchTemplateSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplateId:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateId</a> - A unique
--   identifier for an existing EC2 launch template.
--   
--   <a>$sel:version:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_version</a> - The version of the EC2
--   launch template to use. If no version is specified, the default
--   version will be used. With Amazon EC2, you can specify a default
--   version for a launch template. If none is set, the default is the
--   first version created.
--   
--   <a>$sel:launchTemplateName:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateName</a> - A readable
--   identifier for an existing EC2 launch template.
newLaunchTemplateSpecification :: LaunchTemplateSpecification

-- | Represents a location in a multi-location fleet.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetLocationAttributes
--   
--   <i>See:</i> <a>newLocationAttributes</a> smart constructor.
data LocationAttributes
LocationAttributes' :: Maybe LocationUpdateStatus -> Maybe LocationState -> Maybe (NonEmpty FleetAction) -> LocationAttributes

-- | Create a value of <a>LocationAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updateStatus:LocationAttributes'</a>,
--   <a>locationAttributes_updateStatus</a> - The status of fleet activity
--   updates to the location. The status <tt>PENDING_UPDATE</tt> indicates
--   that StopFleetActions or StartFleetActions has been requested but the
--   update has not yet been completed for the location.
--   
--   <a>$sel:locationState:LocationAttributes'</a>,
--   <a>locationAttributes_locationState</a> - A fleet location and its
--   current life-cycle state.
--   
--   <a>$sel:stoppedActions:LocationAttributes'</a>,
--   <a>locationAttributes_stoppedActions</a> - A list of fleet actions
--   that have been suspended in the fleet location.
newLocationAttributes :: LocationAttributes

-- | A remote location where a multi-location fleet can deploy EC2
--   instances for game hosting.
--   
--   <b>Related actions</b>
--   
--   CreateFleet
--   
--   <i>See:</i> <a>newLocationConfiguration</a> smart constructor.
data LocationConfiguration
LocationConfiguration' :: Maybe Text -> LocationConfiguration

-- | Create a value of <a>LocationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:LocationConfiguration'</a>,
--   <a>locationConfiguration_location</a> - An AWS Region code, such as
--   <tt>us-west-2</tt>.
newLocationConfiguration :: LocationConfiguration

-- | A fleet location and its life-cycle state. A location state object
--   might be used to describe a fleet's remote location or home Region.
--   Life-cycle state tracks the progress of launching the first instance
--   in a new location and preparing it for game hosting, and then removing
--   all instances and deleting the location from the fleet.
--   
--   <b>Related actions</b>
--   
--   CreateFleet | CreateFleetLocations | DeleteFleetLocations
--   
--   <i>See:</i> <a>newLocationState</a> smart constructor.
data LocationState
LocationState' :: Maybe FleetStatus -> Maybe Text -> LocationState

-- | Create a value of <a>LocationState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:LocationState'</a>, <a>locationState_status</a> - The
--   life-cycle status of a fleet location.
--   
--   <a>$sel:location:LocationState'</a>, <a>locationState_location</a> -
--   The fleet location, expressed as an AWS Region code such as
--   <tt>us-west-2</tt>.
newLocationState :: LocationState

-- | Represents a new player session that is created as a result of a
--   successful FlexMatch match. A successful match automatically creates
--   new player sessions for every player ID in the original matchmaking
--   request.
--   
--   When players connect to the match's game session, they must include
--   both player ID and player session ID in order to claim their assigned
--   player slot.
--   
--   <i>See:</i> <a>newMatchedPlayerSession</a> smart constructor.
data MatchedPlayerSession
MatchedPlayerSession' :: Maybe Text -> Maybe Text -> MatchedPlayerSession

-- | Create a value of <a>MatchedPlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerId:MatchedPlayerSession'</a>,
--   <a>matchedPlayerSession_playerId</a> - A unique identifier for a
--   player
--   
--   <a>$sel:playerSessionId:MatchedPlayerSession'</a>,
--   <a>matchedPlayerSession_playerSessionId</a> - A unique identifier for
--   a player session
newMatchedPlayerSession :: MatchedPlayerSession

-- | Guidelines for use with FlexMatch to match players into games. All
--   matchmaking requests must specify a matchmaking configuration.
--   
--   <i>See:</i> <a>newMatchmakingConfiguration</a> smart constructor.
data MatchmakingConfiguration
MatchmakingConfiguration' :: Maybe FlexMatchMode -> Maybe Text -> Maybe BackfillMode -> Maybe [GameProperty] -> Maybe POSIX -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Bool -> MatchmakingConfiguration

-- | Create a value of <a>MatchmakingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:flexMatchMode:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_flexMatchMode</a> - Indicates whether this
--   matchmaking configuration is being used with GameLift hosting or as a
--   standalone matchmaking solution.
--   
--   <ul>
--   <li><b>STANDALONE</b> - FlexMatch forms matches and returns match
--   information, including players and team assignments, in a
--   <a>MatchmakingSucceeded</a> event.</li>
--   <li><b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified
--   GameLift queue to start a game session for the match.</li>
--   </ul>
--   
--   <a>$sel:customEventData:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_customEventData</a> - Information to
--   attach to all events related to the matchmaking configuration.
--   
--   <a>$sel:backfillMode:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_backfillMode</a> - The method used to
--   backfill game sessions created with this matchmaking configuration.
--   MANUAL indicates that the game makes backfill requests or does not use
--   the match backfill feature. AUTOMATIC indicates that GameLift creates
--   StartMatchBackfill requests whenever a game session has one or more
--   open slots. Learn more about manual and automatic backfill in
--   <a>Backfill existing games with FlexMatch</a>. Automatic backfill is
--   not available when <tt>FlexMatchMode</tt> is set to
--   <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameProperties:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_gameProperties</a> - A set of custom
--   properties for a game session, formatted as key:value pairs. These
--   properties are passed to a game server process in the GameSession
--   object with a request to start a new game session (see <a>Start a Game
--   Session</a>). This information is added to the new GameSession object
--   that is created for a successful match. This parameter is not used
--   when <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:creationTime:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_creationTime</a> - A time stamp indicating
--   when this data object was created. Format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:acceptanceTimeoutSeconds:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_acceptanceTimeoutSeconds</a> - The length
--   of time (in seconds) to wait for players to accept a proposed match,
--   if acceptance is required. If any player rejects the match or fails to
--   accept before the timeout, the ticket continues to look for an
--   acceptable match.
--   
--   <a>$sel:additionalPlayerCount:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_additionalPlayerCount</a> - The number of
--   player slots in a match to keep open for future players. For example,
--   if the configuration's rule set specifies a match for a single
--   12-person team, and the additional player count is set to 2, only 10
--   players are selected for the match. This parameter is not used when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:gameSessionData:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_gameSessionData</a> - A set of custom game
--   session properties, formatted as a single string value. This data is
--   passed to a game server process in the GameSession object with a
--   request to start a new game session (see <a>Start a Game Session</a>).
--   This information is added to the new GameSession object that is
--   created for a successful match. This parameter is not used when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:configurationArn:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_configurationArn</a> - The Amazon Resource
--   Name (<a>ARN</a>) that is assigned to a GameLift matchmaking
--   configuration resource and uniquely identifies it. ARNs are unique
--   across all Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingconfiguration/&lt;matchmaking
--   configuration name&gt;</tt>. In a GameLift configuration ARN, the
--   resource ID matches the <i>Name</i> value.
--   
--   <a>$sel:name:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_name</a> - A unique identifier for the
--   matchmaking configuration. This name is used to identify the
--   configuration associated with a matchmaking request or ticket.
--   
--   <a>$sel:gameSessionQueueArns:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_gameSessionQueueArns</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift game session
--   queue resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue
--   name&gt;</tt>. Queues can be located in any Region. Queues are used to
--   start new GameLift-hosted game sessions for matches that are created
--   with this matchmaking configuration. This property is not set when
--   <tt>FlexMatchMode</tt> is set to <tt>STANDALONE</tt>.
--   
--   <a>$sel:notificationTarget:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_notificationTarget</a> - An SNS topic ARN
--   that is set up to receive matchmaking notifications.
--   
--   <a>$sel:ruleSetArn:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_ruleSetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift matchmaking rule set
--   resource that this configuration uses.
--   
--   <a>$sel:requestTimeoutSeconds:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_requestTimeoutSeconds</a> - The maximum
--   duration, in seconds, that a matchmaking ticket can remain in process
--   before timing out. Requests that fail due to timing out can be
--   resubmitted as needed.
--   
--   <a>$sel:description:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_description</a> - A descriptive label that
--   is associated with matchmaking configuration.
--   
--   <a>$sel:ruleSetName:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_ruleSetName</a> - A unique identifier for
--   the matchmaking rule set to use with this configuration. A matchmaking
--   configuration can only use rule sets that are defined in the same
--   Region.
--   
--   <a>$sel:acceptanceRequired:MatchmakingConfiguration'</a>,
--   <a>matchmakingConfiguration_acceptanceRequired</a> - A flag that
--   indicates whether a match that was created with this configuration
--   must be accepted by the matched players. To require acceptance, set to
--   TRUE. When this option is enabled, matchmaking tickets use the status
--   <tt>REQUIRES_ACCEPTANCE</tt> to indicate when a completed potential
--   match is waiting for player acceptance.
newMatchmakingConfiguration :: MatchmakingConfiguration

-- | Set of rule statements, used with FlexMatch, that determine how to
--   build your player matches. Each rule set describes a type of group to
--   be created and defines the parameters for acceptable player matches.
--   Rule sets are used in MatchmakingConfiguration objects.
--   
--   A rule set may define the following elements for a match. For detailed
--   information and examples showing how to construct a rule set, see
--   <a>Build a FlexMatch rule set</a>.
--   
--   <ul>
--   <li>Teams -- Required. A rule set must define one or multiple teams
--   for the match and set minimum and maximum team sizes. For example, a
--   rule set might describe a 4x4 match that requires all eight slots to
--   be filled.</li>
--   <li>Player attributes -- Optional. These attributes specify a set of
--   player characteristics to evaluate when looking for a match.
--   Matchmaking requests that use a rule set with player attributes must
--   provide the corresponding attribute values. For example, an attribute
--   might specify a player's skill or level.</li>
--   <li>Rules -- Optional. Rules define how to evaluate potential players
--   for a match based on player attributes. A rule might specify minimum
--   requirements for individual players, teams, or entire matches. For
--   example, a rule might require each player to meet a certain skill
--   level, each team to have at least one player in a certain role, or the
--   match to have a minimum average skill level. or may describe an entire
--   group--such as all teams must be evenly matched or have at least one
--   player in a certain role.</li>
--   <li>Expansions -- Optional. Expansions allow you to relax the rules
--   after a period of time when no acceptable matches are found. This
--   feature lets you balance getting players into games in a reasonable
--   amount of time instead of making them wait indefinitely for the best
--   possible match. For example, you might use an expansion to increase
--   the maximum skill variance between players after 30 seconds.</li>
--   </ul>
--   
--   <i>See:</i> <a>newMatchmakingRuleSet</a> smart constructor.
data MatchmakingRuleSet
MatchmakingRuleSet' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Text -> MatchmakingRuleSet

-- | Create a value of <a>MatchmakingRuleSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:MatchmakingRuleSet'</a>,
--   <a>matchmakingRuleSet_creationTime</a> - A time stamp indicating when
--   this data object was created. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:ruleSetArn:MatchmakingRuleSet'</a>,
--   <a>matchmakingRuleSet_ruleSetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) that is assigned to a GameLift matchmaking rule set
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::matchmakingruleset/&lt;ruleset
--   name&gt;</tt>. In a GameLift rule set ARN, the resource ID matches the
--   <i>RuleSetName</i> value.
--   
--   <a>$sel:ruleSetName:MatchmakingRuleSet'</a>,
--   <a>matchmakingRuleSet_ruleSetName</a> - A unique identifier for the
--   matchmaking rule set
--   
--   <a>$sel:ruleSetBody:MatchmakingRuleSet'</a>,
--   <a>matchmakingRuleSet_ruleSetBody</a> - A collection of matchmaking
--   rules, formatted as a JSON string. Comments are not allowed in JSON,
--   but most elements support a description field.
newMatchmakingRuleSet :: Text -> MatchmakingRuleSet

-- | Ticket generated to track the progress of a matchmaking request. Each
--   ticket is uniquely identified by a ticket ID, supplied by the
--   requester, when creating a matchmaking request with StartMatchmaking.
--   Tickets can be retrieved by calling DescribeMatchmaking with the
--   ticket ID.
--   
--   <i>See:</i> <a>newMatchmakingTicket</a> smart constructor.
data MatchmakingTicket
MatchmakingTicket' :: Maybe Text -> Maybe MatchmakingConfigurationStatus -> Maybe Natural -> Maybe Text -> Maybe [Player] -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe GameSessionConnectionInfo -> Maybe Text -> MatchmakingTicket

-- | Create a value of <a>MatchmakingTicket</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_statusMessage</a> - Additional information about
--   the current status.
--   
--   <a>$sel:status:MatchmakingTicket'</a>, <a>matchmakingTicket_status</a>
--   - Current status of the matchmaking request.
--   
--   <ul>
--   <li><b>QUEUED</b> -- The matchmaking request has been received and is
--   currently waiting to be processed.</li>
--   <li><b>SEARCHING</b> -- The matchmaking request is currently being
--   processed.</li>
--   <li><b>REQUIRES_ACCEPTANCE</b> -- A match has been proposed and the
--   players must accept the match (see AcceptMatch). This status is used
--   only with requests that use a matchmaking configuration with a player
--   acceptance requirement.</li>
--   <li><b>PLACING</b> -- The FlexMatch engine has matched players and is
--   in the process of placing a new game session for the match.</li>
--   <li><b>COMPLETED</b> -- Players have been matched and a game session
--   is ready to host the players. A ticket in this state contains the
--   necessary connection information for players.</li>
--   <li><b>FAILED</b> -- The matchmaking request was not completed.</li>
--   <li><b>CANCELLED</b> -- The matchmaking request was canceled. This may
--   be the result of a call to StopMatchmaking or a proposed match that
--   one or more players failed to accept.</li>
--   <li><b>TIMED_OUT</b> -- The matchmaking request was not successful
--   within the duration specified in the matchmaking configuration.</li>
--   </ul>
--   
--   Matchmaking requests that fail to successfully complete (statuses
--   FAILED, CANCELLED, TIMED_OUT) can be resubmitted as new requests with
--   new ticket IDs.
--   
--   <a>$sel:estimatedWaitTime:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_estimatedWaitTime</a> - Average amount of time
--   (in seconds) that players are currently waiting for a match. If there
--   is not enough recent data, this property may be empty.
--   
--   <a>$sel:ticketId:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_ticketId</a> - A unique identifier for a
--   matchmaking ticket.
--   
--   <a>$sel:players:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_players</a> - A set of <tt>Player</tt> objects,
--   each representing a player to find matches for. Players are identified
--   by a unique player ID and may include latency data for use during
--   matchmaking. If the ticket is in status <tt>COMPLETED</tt>, the
--   <tt>Player</tt> objects include the team the players were assigned to
--   in the resulting match.
--   
--   <a>$sel:configurationArn:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_configurationArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift matchmaking configuration
--   resource that is used with this ticket.
--   
--   <a>$sel:startTime:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_startTime</a> - Time stamp indicating when this
--   matchmaking request was received. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:endTime:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_endTime</a> - Time stamp indicating when this
--   matchmaking request stopped being processed due to success, failure,
--   or cancellation. Format is a number expressed in Unix time as
--   milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:configurationName:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_configurationName</a> - Name of the
--   MatchmakingConfiguration that is used with this ticket. Matchmaking
--   configurations determine how players are grouped into a match and how
--   a new game session is created for the match.
--   
--   <a>$sel:gameSessionConnectionInfo:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_gameSessionConnectionInfo</a> - Identifier and
--   connection information of the game session created for the match. This
--   information is added to the ticket only after the matchmaking request
--   has been successfully completed. This parameter is not set when
--   FlexMatch is being used without GameLift hosting.
--   
--   <a>$sel:statusReason:MatchmakingTicket'</a>,
--   <a>matchmakingTicket_statusReason</a> - Code to explain the current
--   status. For example, a status reason may indicate when a ticket has
--   returned to <tt>SEARCHING</tt> status after a proposed match fails to
--   receive player acceptances.
newMatchmakingTicket :: MatchmakingTicket

-- | Information about a player session that was created as part of a
--   StartGameSessionPlacement request. This object contains only the
--   player ID and player session ID. To retrieve full details on a player
--   session, call DescribePlayerSessions with the player session ID.
--   
--   <b>Related actions</b>
--   
--   CreatePlayerSession | CreatePlayerSessions | DescribePlayerSessions |
--   StartGameSessionPlacement | DescribeGameSessionPlacement |
--   StopGameSessionPlacement | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newPlacedPlayerSession</a> smart constructor.
data PlacedPlayerSession
PlacedPlayerSession' :: Maybe Text -> Maybe Text -> PlacedPlayerSession

-- | Create a value of <a>PlacedPlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerId:PlacedPlayerSession'</a>,
--   <a>placedPlayerSession_playerId</a> - A unique identifier for a player
--   that is associated with this player session.
--   
--   <a>$sel:playerSessionId:PlacedPlayerSession'</a>,
--   <a>placedPlayerSession_playerSessionId</a> - A unique identifier for a
--   player session.
newPlacedPlayerSession :: PlacedPlayerSession

-- | Represents a player in matchmaking. When starting a matchmaking
--   request, a player has a player ID, attributes, and may have latency
--   data. Team information is added after a match has been successfully
--   completed.
--   
--   <i>See:</i> <a>newPlayer</a> smart constructor.
data Player
Player' :: Maybe (HashMap Text AttributeValue) -> Maybe (HashMap Text Natural) -> Maybe Text -> Maybe Text -> Player

-- | Create a value of <a>Player</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerAttributes:Player'</a>, <a>player_playerAttributes</a> -
--   A collection of key:value pairs containing player information for use
--   in matchmaking. Player attribute keys must match the
--   <i>playerAttributes</i> used in a matchmaking rule set. Example:
--   <tt>"PlayerAttributes": {"skill": {"N": "23"}, "gameMode": {"S":
--   "deathmatch"}}</tt>.
--   
--   <a>$sel:latencyInMs:Player'</a>, <a>player_latencyInMs</a> - A set of
--   values, expressed in milliseconds, that indicates the amount of
--   latency that a player experiences when connected to AWS Regions. If
--   this property is present, FlexMatch considers placing the match only
--   in Regions for which latency is reported.
--   
--   If a matchmaker has a rule that evaluates player latency, players must
--   report latency in order to be matched. If no latency is reported in
--   this scenario, FlexMatch assumes that no Regions are available to the
--   player and the ticket is not matchable.
--   
--   <a>$sel:playerId:Player'</a>, <a>player_playerId</a> - A unique
--   identifier for a player
--   
--   <a>$sel:team:Player'</a>, <a>player_team</a> - Name of the team that
--   the player is assigned to in a match. Team names are defined in a
--   matchmaking rule set.
newPlayer :: Player

-- | Regional latency information for a player, used when requesting a new
--   game session with StartGameSessionPlacement. This value indicates the
--   amount of time lag that exists when the player is connected to a fleet
--   in the specified Region. The relative difference between a player's
--   latency values for multiple Regions are used to determine which fleets
--   are best suited to place a new game session for the player.
--   
--   <i>See:</i> <a>newPlayerLatency</a> smart constructor.
data PlayerLatency
PlayerLatency' :: Maybe Text -> Maybe Double -> Maybe Text -> PlayerLatency

-- | Create a value of <a>PlayerLatency</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playerId:PlayerLatency'</a>, <a>playerLatency_playerId</a> - A
--   unique identifier for a player associated with the latency data.
--   
--   <a>$sel:latencyInMilliseconds:PlayerLatency'</a>,
--   <a>playerLatency_latencyInMilliseconds</a> - Amount of time that
--   represents the time lag experienced by the player when connected to
--   the specified Region.
--   
--   <a>$sel:regionIdentifier:PlayerLatency'</a>,
--   <a>playerLatency_regionIdentifier</a> - Name of the Region that is
--   associated with the latency value.
newPlayerLatency :: PlayerLatency

-- | Sets a latency cap for individual players when placing a game session.
--   With a latency policy in force, a game session cannot be placed in a
--   fleet location where a player reports latency higher than the cap.
--   Latency policies are used only with placement request that provide
--   player latency information. Player latency policies can be stacked to
--   gradually relax latency requirements over time.
--   
--   Latency policies are part of a GameSessionQueue.
--   
--   <i>See:</i> <a>newPlayerLatencyPolicy</a> smart constructor.
data PlayerLatencyPolicy
PlayerLatencyPolicy' :: Maybe Natural -> Maybe Natural -> PlayerLatencyPolicy

-- | Create a value of <a>PlayerLatencyPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyDurationSeconds:PlayerLatencyPolicy'</a>,
--   <a>playerLatencyPolicy_policyDurationSeconds</a> - The length of time,
--   in seconds, that the policy is enforced while placing a new game
--   session. A null value for this property means that the policy is
--   enforced until the queue times out.
--   
--   
--   <a>$sel:maximumIndividualPlayerLatencyMilliseconds:PlayerLatencyPolicy'</a>,
--   <a>playerLatencyPolicy_maximumIndividualPlayerLatencyMilliseconds</a>
--   - The maximum latency value that is allowed for any player, in
--   milliseconds. All policies must have a value set for this property.
newPlayerLatencyPolicy :: PlayerLatencyPolicy

-- | Represents a player session. Player sessions are created either for a
--   specific game session, or as part of a game session placement or
--   matchmaking request. A player session can represents a reserved player
--   slot in a game session (when status is <tt>RESERVED</tt>) or actual
--   player activity in a game session (when status is <tt>ACTIVE</tt>). A
--   player session object, including player data, is automatically passed
--   to a game session when the player connects to the game session and is
--   validated. After the game session ends, player sessions information is
--   retained for 30 days and then removed.
--   
--   <b>Related actions</b>
--   
--   CreatePlayerSession | CreatePlayerSessions | DescribePlayerSessions |
--   StartGameSessionPlacement | DescribeGameSessionPlacement | <a>All APIs
--   by task</a>
--   
--   <i>See:</i> <a>newPlayerSession</a> smart constructor.
data PlayerSession
PlayerSession' :: Maybe POSIX -> Maybe PlayerSessionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe Text -> PlayerSession

-- | Create a value of <a>PlayerSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:PlayerSession'</a>,
--   <a>playerSession_creationTime</a> - A time stamp indicating when this
--   data object was created. Format is a number expressed in Unix time as
--   milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:status:PlayerSession'</a>, <a>playerSession_status</a> -
--   Current status of the player session.
--   
--   Possible player session statuses include the following:
--   
--   <ul>
--   <li><b>RESERVED</b> -- The player session request has been received,
--   but the player has not yet connected to the server process and/or been
--   validated.</li>
--   <li><b>ACTIVE</b> -- The player has been validated by the server
--   process and is currently connected.</li>
--   <li><b>COMPLETED</b> -- The player connection has been dropped.</li>
--   <li><b>TIMEDOUT</b> -- A player session request was received, but the
--   player did not connect and/or was not validated within the timeout
--   limit (60 seconds).</li>
--   </ul>
--   
--   <a>$sel:playerId:PlayerSession'</a>, <a>playerSession_playerId</a> - A
--   unique identifier for a player that is associated with this player
--   session.
--   
--   <a>$sel:fleetId:PlayerSession'</a>, <a>playerSession_fleetId</a> - A
--   unique identifier for the fleet that the player's game session is
--   running on.
--   
--   <a>$sel:fleetArn:PlayerSession'</a>, <a>playerSession_fleetArn</a> -
--   The Amazon Resource Name (<a>ARN</a>) associated with the GameLift
--   fleet that the player's game session is running on.
--   
--   <a>$sel:playerSessionId:PlayerSession'</a>,
--   <a>playerSession_playerSessionId</a> - A unique identifier for a
--   player session.
--   
--   <a>$sel:gameSessionId:PlayerSession'</a>,
--   <a>playerSession_gameSessionId</a> - A unique identifier for the game
--   session that the player session is connected to.
--   
--   <a>$sel:ipAddress:PlayerSession'</a>, <a>playerSession_ipAddress</a> -
--   The IP address of the game session. To connect to a GameLift game
--   server, an app needs both the IP address and port number.
--   
--   <a>$sel:terminationTime:PlayerSession'</a>,
--   <a>playerSession_terminationTime</a> - A time stamp indicating when
--   this data object was terminated. Format is a number expressed in Unix
--   time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:port:PlayerSession'</a>, <a>playerSession_port</a> - Port
--   number for the game session. To connect to a Amazon GameLift server
--   process, an app needs both the IP address and port number.
--   
--   <a>$sel:dnsName:PlayerSession'</a>, <a>playerSession_dnsName</a> - The
--   DNS identifier assigned to the instance that is running the game
--   session. Values have the following format:
--   
--   <ul>
--   <li>TLS-enabled fleets: <tt>&lt;unique identifier&gt;.&lt;region
--   identifier&gt;.amazongamelift.com</tt>.</li>
--   <li>Non-TLS-enabled fleets: <tt>ec2-&lt;unique
--   identifier&gt;.compute.amazonaws.com</tt>. (See <a>Amazon EC2 Instance
--   IP Addressing</a>.)</li>
--   </ul>
--   
--   When connecting to a game session that is running on a TLS-enabled
--   fleet, you must use the DNS name, not the IP address.
--   
--   <a>$sel:playerData:PlayerSession'</a>, <a>playerSession_playerData</a>
--   - Developer-defined information related to a player. GameLift does not
--   use this data, so it can be formatted as needed for use in the game.
newPlayerSession :: PlayerSession

-- | Custom prioritization settings for use by a game session queue when
--   placing new game sessions with available game servers. When defined,
--   this configuration replaces the default FleetIQ prioritization
--   process, which is as follows:
--   
--   <ul>
--   <li>If player latency data is included in a game session request,
--   destinations and locations are prioritized first based on lowest
--   average latency (1), then on lowest hosting cost (2), then on
--   destination list order (3), and finally on location (alphabetical)
--   (4). This approach ensures that the queue's top priority is to place
--   game sessions where average player latency is lowest, and--if latency
--   is the same--where the hosting cost is less, etc.</li>
--   <li>If player latency data is not included, destinations and locations
--   are prioritized first on destination list order (1), and then on
--   location (alphabetical) (2). This approach ensures that the queue's
--   top priority is to place game sessions on the first destination fleet
--   listed. If that fleet has multiple locations, the game session is
--   placed on the first location (when listed alphabetically).</li>
--   </ul>
--   
--   Changing the priority order will affect how game sessions are placed.
--   
--   Priority configurations are part of a GameSessionQueue.
--   
--   <i>See:</i> <a>newPriorityConfiguration</a> smart constructor.
data PriorityConfiguration
PriorityConfiguration' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty PriorityType) -> PriorityConfiguration

-- | Create a value of <a>PriorityConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationOrder:PriorityConfiguration'</a>,
--   <a>priorityConfiguration_locationOrder</a> - The prioritization order
--   to use for fleet locations, when the <tt>PriorityOrder</tt> property
--   includes <tt>LOCATION</tt>. Locations are identified by AWS Region
--   codes such as <tt>us-west-2</tt>. Each location can only be listed
--   once.
--   
--   <a>$sel:priorityOrder:PriorityConfiguration'</a>,
--   <a>priorityConfiguration_priorityOrder</a> - The recommended sequence
--   to use when prioritizing where to place new game sessions. Each type
--   can only be listed once.
--   
--   <ul>
--   <li><tt>LATENCY</tt> -- FleetIQ prioritizes locations where the
--   average player latency (provided in each game session request) is
--   lowest.</li>
--   <li><tt>COST</tt> -- FleetIQ prioritizes destinations with the lowest
--   current hosting costs. Cost is evaluated based on the location,
--   instance type, and fleet type (Spot or On-Demand) for each destination
--   in the queue.</li>
--   <li><tt>DESTINATION</tt> -- FleetIQ prioritizes based on the order
--   that destinations are listed in the queue configuration.</li>
--   <li><tt>LOCATION</tt> -- FleetIQ prioritizes based on the provided
--   order of locations, as defined in <tt>LocationOrder</tt>.</li>
--   </ul>
newPriorityConfiguration :: PriorityConfiguration

-- | A policy that puts limits on the number of game sessions that a player
--   can create within a specified span of time. With this policy, you can
--   control players' ability to consume available resources.
--   
--   The policy is evaluated when a player tries to create a new game
--   session. On receiving a <tt>CreateGameSession</tt> request, GameLift
--   checks that the player (identified by <tt>CreatorId</tt>) has created
--   fewer than game session limit in the specified time period.
--   
--   The resource creation limit policy is included in FleetAttributes.
--   
--   <i>See:</i> <a>newResourceCreationLimitPolicy</a> smart constructor.
data ResourceCreationLimitPolicy
ResourceCreationLimitPolicy' :: Maybe Natural -> Maybe Natural -> ResourceCreationLimitPolicy

-- | Create a value of <a>ResourceCreationLimitPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyPeriodInMinutes:ResourceCreationLimitPolicy'</a>,
--   <a>resourceCreationLimitPolicy_policyPeriodInMinutes</a> - The time
--   span used in evaluating the resource creation limit policy.
--   
--   <a>$sel:newGameSessionsPerCreator':ResourceCreationLimitPolicy'</a>,
--   <a>resourceCreationLimitPolicy_newGameSessionsPerCreator</a> - The
--   maximum number of game sessions that an individual can create during
--   the policy period.
newResourceCreationLimitPolicy :: ResourceCreationLimitPolicy

-- | The routing configuration for a fleet alias.
--   
--   <b>Related actions</b>
--   
--   CreateAlias | ListAliases | DescribeAlias | UpdateAlias | DeleteAlias
--   | ResolveAlias | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newRoutingStrategy</a> smart constructor.
data RoutingStrategy
RoutingStrategy' :: Maybe Text -> Maybe Text -> Maybe RoutingStrategyType -> RoutingStrategy

-- | Create a value of <a>RoutingStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetId:RoutingStrategy'</a>, <a>routingStrategy_fleetId</a> -
--   A unique identifier for the fleet that the alias points to. This value
--   is the fleet ID, not the fleet ARN.
--   
--   <a>$sel:message:RoutingStrategy'</a>, <a>routingStrategy_message</a> -
--   The message text to be used with a terminal routing strategy.
--   
--   <a>$sel:type':RoutingStrategy'</a>, <a>routingStrategy_type</a> - The
--   type of routing strategy for the alias.
--   
--   Possible routing types include the following:
--   
--   <ul>
--   <li><b>SIMPLE</b> - The alias resolves to one specific fleet. Use this
--   type when routing to active fleets.</li>
--   <li><b>TERMINAL</b> - The alias does not resolve to a fleet but
--   instead can be used to display a message to the user. A terminal alias
--   throws a TerminalRoutingStrategyException with the RoutingStrategy
--   message embedded.</li>
--   </ul>
newRoutingStrategy :: RoutingStrategy

-- | A collection of server process configurations that describe the set of
--   processes to run on each instance in a fleet. Server processes run
--   either an executable in a custom game build or a Realtime Servers
--   script. GameLift launches the configured processes, manages their life
--   cycle, and replaces them as needed. Each instance checks regularly for
--   an updated runtime configuration.
--   
--   A GameLift instance is limited to 50 processes running concurrently.
--   To calculate the total number of processes in a runtime configuration,
--   add the values of the <tt>ConcurrentExecutions</tt> parameter for each
--   ServerProcess. Learn more about <a>Running Multiple Processes on a
--   Fleet</a>.
--   
--   <b>Related actions</b>
--   
--   DescribeRuntimeConfiguration | UpdateRuntimeConfiguration
--   
--   <i>See:</i> <a>newRuntimeConfiguration</a> smart constructor.
data RuntimeConfiguration
RuntimeConfiguration' :: Maybe Natural -> Maybe Natural -> Maybe (NonEmpty ServerProcess) -> RuntimeConfiguration

-- | Create a value of <a>RuntimeConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gameSessionActivationTimeoutSeconds:RuntimeConfiguration'</a>,
--   <a>runtimeConfiguration_gameSessionActivationTimeoutSeconds</a> - The
--   maximum amount of time (in seconds) allowed to launch a new game
--   session and have it report ready to host players. During this time,
--   the game session is in status <tt>ACTIVATING</tt>. If the game session
--   does not become active before the timeout, it is ended and the game
--   session status is changed to <tt>TERMINATED</tt>.
--   
--   <a>$sel:maxConcurrentGameSessionActivations:RuntimeConfiguration'</a>,
--   <a>runtimeConfiguration_maxConcurrentGameSessionActivations</a> - The
--   number of game sessions in status <tt>ACTIVATING</tt> to allow on an
--   instance. This setting limits the instance resources that can be used
--   for new game activations at any one time.
--   
--   <a>$sel:serverProcesses:RuntimeConfiguration'</a>,
--   <a>runtimeConfiguration_serverProcesses</a> - A collection of server
--   process configurations that identify what server processes to run on
--   each instance in a fleet.
newRuntimeConfiguration :: RuntimeConfiguration

-- | The location in Amazon S3 where build or script files are stored for
--   access by Amazon GameLift. This location is specified in CreateBuild,
--   CreateScript, and UpdateScript requests.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> S3Location

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:S3Location'</a>, <a>s3Location_key</a> - The name of the
--   zip file that contains the build files or script files.
--   
--   <a>$sel:objectVersion:S3Location'</a>, <a>s3Location_objectVersion</a>
--   - The version of the file, if object versioning is turned on for the
--   bucket. Amazon GameLift uses this information when retrieving files
--   from an S3 bucket that you own. Use this parameter to specify a
--   specific version of the file. If not set, the latest version of the
--   file is retrieved.
--   
--   <a>$sel:roleArn:S3Location'</a>, <a>s3Location_roleArn</a> - The
--   Amazon Resource Name (<a>ARN</a>) for an IAM role that allows Amazon
--   GameLift to access the S3 bucket.
--   
--   <a>$sel:bucket:S3Location'</a>, <a>s3Location_bucket</a> - An Amazon
--   S3 bucket identifier. This is the name of the S3 bucket.
--   
--   GameLift currently does not support uploading from Amazon S3 buckets
--   with names that contain a dot (.).
newS3Location :: S3Location

-- | Rule that controls how a fleet is scaled. Scaling policies are
--   uniquely identified by the combination of name and fleet ID.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetCapacity | UpdateFleetCapacity |
--   DescribeEC2InstanceLimits | PutScalingPolicy | DescribeScalingPolicies
--   | DeleteScalingPolicy | StopFleetActions | StartFleetActions | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newScalingPolicy</a> smart constructor.
data ScalingPolicy
ScalingPolicy' :: Maybe Double -> Maybe ScalingStatusType -> Maybe TargetConfiguration -> Maybe ComparisonOperatorType -> Maybe MetricName -> Maybe Text -> Maybe Text -> Maybe PolicyType -> Maybe LocationUpdateStatus -> Maybe Int -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe ScalingAdjustmentType -> ScalingPolicy

-- | Create a value of <a>ScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:threshold:ScalingPolicy'</a>, <a>scalingPolicy_threshold</a> -
--   Metric value used to trigger a scaling event.
--   
--   <a>$sel:status:ScalingPolicy'</a>, <a>scalingPolicy_status</a> -
--   Current status of the scaling policy. The scaling policy can be in
--   force only when in an <tt>ACTIVE</tt> status. Scaling policies can be
--   suspended for individual fleets (see StopFleetActions; if suspended
--   for a fleet, the policy status does not change. View a fleet's stopped
--   actions by calling DescribeFleetCapacity.
--   
--   <ul>
--   <li><b>ACTIVE</b> -- The scaling policy can be used for auto-scaling a
--   fleet.</li>
--   <li><b>UPDATE_REQUESTED</b> -- A request to update the scaling policy
--   has been received.</li>
--   <li><b>UPDATING</b> -- A change is being made to the scaling
--   policy.</li>
--   <li><b>DELETE_REQUESTED</b> -- A request to delete the scaling policy
--   has been received.</li>
--   <li><b>DELETING</b> -- The scaling policy is being deleted.</li>
--   <li><b>DELETED</b> -- The scaling policy has been deleted.</li>
--   <li><b>ERROR</b> -- An error occurred in creating the policy. It
--   should be removed and recreated.</li>
--   </ul>
--   
--   <a>$sel:targetConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_targetConfiguration</a> - An object that contains
--   settings for a target-based scaling policy.
--   
--   <a>$sel:comparisonOperator:ScalingPolicy'</a>,
--   <a>scalingPolicy_comparisonOperator</a> - Comparison operator to use
--   when measuring a metric against the threshold value.
--   
--   <a>$sel:metricName:ScalingPolicy'</a>, <a>scalingPolicy_metricName</a>
--   - Name of the Amazon GameLift-defined metric that is used to trigger a
--   scaling adjustment. For detailed descriptions of fleet metrics, see
--   <a>Monitor Amazon GameLift with Amazon CloudWatch</a>.
--   
--   <ul>
--   <li><b>ActivatingGameSessions</b> -- Game sessions in the process of
--   being created.</li>
--   <li><b>ActiveGameSessions</b> -- Game sessions that are currently
--   running.</li>
--   <li><b>ActiveInstances</b> -- Fleet instances that are currently
--   running at least one game session.</li>
--   <li><b>AvailableGameSessions</b> -- Additional game sessions that
--   fleet could host simultaneously, given current capacity.</li>
--   <li><b>AvailablePlayerSessions</b> -- Empty player slots in currently
--   active game sessions. This includes game sessions that are not
--   currently accepting players. Reserved player slots are not
--   included.</li>
--   <li><b>CurrentPlayerSessions</b> -- Player slots in active game
--   sessions that are being used by a player or are reserved for a
--   player.</li>
--   <li><b>IdleInstances</b> -- Active instances that are currently
--   hosting zero game sessions.</li>
--   <li><b>PercentAvailableGameSessions</b> -- Unused percentage of the
--   total number of game sessions that a fleet could host simultaneously,
--   given current capacity. Use this metric for a target-based scaling
--   policy.</li>
--   <li><b>PercentIdleInstances</b> -- Percentage of the total number of
--   active instances that are hosting zero game sessions.</li>
--   <li><b>QueueDepth</b> -- Pending game session placement requests, in
--   any queue, where the current fleet is the top-priority
--   destination.</li>
--   <li><b>WaitTime</b> -- Current wait time for pending game session
--   placement requests, in any queue, where the current fleet is the
--   top-priority destination.</li>
--   </ul>
--   
--   <a>$sel:fleetId:ScalingPolicy'</a>, <a>scalingPolicy_fleetId</a> - A
--   unique identifier for the fleet that is associated with this scaling
--   policy.
--   
--   <a>$sel:fleetArn:ScalingPolicy'</a>, <a>scalingPolicy_fleetArn</a> -
--   The Amazon Resource Name (<a>ARN</a>) that is assigned to a GameLift
--   fleet resource and uniquely identifies it. ARNs are unique across all
--   Regions. Format is
--   <tt>arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</tt>.
--   
--   <a>$sel:policyType:ScalingPolicy'</a>, <a>scalingPolicy_policyType</a>
--   - The type of scaling policy to create. For a target-based policy, set
--   the parameter <i>MetricName</i> to 'PercentAvailableGameSessions' and
--   specify a <i>TargetConfiguration</i>. For a rule-based policy set the
--   following parameters: <i>MetricName</i>, <i>ComparisonOperator</i>,
--   <i>Threshold</i>, <i>EvaluationPeriods</i>,
--   <i>ScalingAdjustmentType</i>, and <i>ScalingAdjustment</i>.
--   
--   <a>$sel:updateStatus:ScalingPolicy'</a>,
--   <a>scalingPolicy_updateStatus</a> - The current status of the fleet's
--   scaling policies in a requested fleet location. The status
--   <tt>PENDING_UPDATE</tt> indicates that an update was requested for the
--   fleet but has not yet been completed for the location.
--   
--   <a>$sel:scalingAdjustment:ScalingPolicy'</a>,
--   <a>scalingPolicy_scalingAdjustment</a> - Amount of adjustment to make,
--   based on the scaling adjustment type.
--   
--   <a>$sel:name:ScalingPolicy'</a>, <a>scalingPolicy_name</a> - A
--   descriptive label that is associated with a fleet's scaling policy.
--   Policy names do not need to be unique.
--   
--   <a>$sel:evaluationPeriods:ScalingPolicy'</a>,
--   <a>scalingPolicy_evaluationPeriods</a> - Length of time (in minutes)
--   the metric must be at or beyond the threshold before a scaling event
--   is triggered.
--   
--   <a>$sel:location:ScalingPolicy'</a>, <a>scalingPolicy_location</a> -
--   
--   <a>$sel:scalingAdjustmentType:ScalingPolicy'</a>,
--   <a>scalingPolicy_scalingAdjustmentType</a> - The type of adjustment to
--   make to a fleet's instance count (see FleetCapacity):
--   
--   <ul>
--   <li><b>ChangeInCapacity</b> -- add (or subtract) the scaling
--   adjustment value from the current instance count. Positive values
--   scale up while negative values scale down.</li>
--   <li><b>ExactCapacity</b> -- set the instance count to the scaling
--   adjustment value.</li>
--   <li><b>PercentChangeInCapacity</b> -- increase or reduce the current
--   instance count by the scaling adjustment, read as a percentage.
--   Positive values scale up while negative values scale down.</li>
--   </ul>
newScalingPolicy :: ScalingPolicy

-- | Properties describing a Realtime script.
--   
--   <b>Related actions</b>
--   
--   CreateScript | ListScripts | DescribeScript | UpdateScript |
--   DeleteScript | <a>All APIs by task</a>
--   
--   <i>See:</i> <a>newScript</a> smart constructor.
data Script
Script' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe S3Location -> Maybe Natural -> Maybe Text -> Script

-- | Create a value of <a>Script</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Script'</a>, <a>script_creationTime</a> - A time
--   stamp indicating when this data object was created. Format is a number
--   expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:version:Script'</a>, <a>script_version</a> - Version
--   information that is associated with a build or script. Version strings
--   do not need to be unique.
--   
--   <a>$sel:scriptArn:Script'</a>, <a>script_scriptArn</a> - The Amazon
--   Resource Name (<a>ARN</a>) that is assigned to a GameLift script
--   resource and uniquely identifies it. ARNs are unique across all
--   Regions. In a GameLift script ARN, the resource ID matches the
--   <i>ScriptId</i> value.
--   
--   <a>$sel:name:Script'</a>, <a>script_name</a> - A descriptive label
--   that is associated with a script. Script names do not need to be
--   unique.
--   
--   <a>$sel:storageLocation:Script'</a>, <a>script_storageLocation</a> -
--   Undocumented member.
--   
--   <a>$sel:sizeOnDisk:Script'</a>, <a>script_sizeOnDisk</a> - The file
--   size of the uploaded Realtime script, expressed in bytes. When files
--   are uploaded from an S3 location, this value remains at "0".
--   
--   <a>$sel:scriptId:Script'</a>, <a>script_scriptId</a> - A unique
--   identifier for the Realtime script
newScript :: Script

-- | A set of instructions for launching server processes on each instance
--   in a fleet. Server processes run either an executable in a custom game
--   build or a Realtime Servers script. Server process configurations are
--   part of a fleet's RuntimeConfiguration.
--   
--   <i>See:</i> <a>newServerProcess</a> smart constructor.
data ServerProcess
ServerProcess' :: Maybe Text -> Text -> Natural -> ServerProcess

-- | Create a value of <a>ServerProcess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:ServerProcess'</a>, <a>serverProcess_parameters</a>
--   - An optional list of parameters to pass to the server executable or
--   Realtime script on launch.
--   
--   <a>$sel:launchPath:ServerProcess'</a>, <a>serverProcess_launchPath</a>
--   - The location of a game build executable or the Realtime script file
--   that contains the <tt>Init()</tt> function. Game builds and Realtime
--   scripts are installed on instances at the root:
--   
--   <ul>
--   <li>Windows (custom game builds only): <tt>C:\game</tt>. Example:
--   "<tt>C:\game\MyGame\server.exe</tt>"</li>
--   <li>Linux: <tt>/local/game</tt>. Examples:
--   "<tt>/local/game/MyGame/server.exe</tt>" or
--   "<tt>/local/game/MyRealtimeScript.js</tt>"</li>
--   </ul>
--   
--   <a>$sel:concurrentExecutions:ServerProcess'</a>,
--   <a>serverProcess_concurrentExecutions</a> - The number of server
--   processes using this configuration that run concurrently on each
--   instance.
newServerProcess :: Text -> Natural -> ServerProcess

-- | A label that can be assigned to a GameLift resource.
--   
--   <b>Learn more</b>
--   
--   <a>Tagging AWS Resources</a> in the <i>AWS General Reference</i>
--   
--   <a>AWS Tagging Strategies</a>
--   
--   <b>Related actions</b>
--   
--   TagResource | UntagResource | ListTagsForResource | <a>All APIs by
--   task</a>
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for a developer-defined
--   key:value pair for tagging an AWS resource.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for a
--   developer-defined key:value pair for tagging an AWS resource.
newTag :: Text -> Text -> Tag

-- | Settings for a target-based scaling policy (see ScalingPolicy. A
--   target-based policy tracks a particular fleet metric specifies a
--   target value for the metric. As player usage changes, the policy
--   triggers Amazon GameLift to adjust capacity so that the metric returns
--   to the target value. The target configuration specifies settings as
--   needed for the target based policy, including the target value.
--   
--   <b>Related actions</b>
--   
--   DescribeFleetCapacity | UpdateFleetCapacity |
--   DescribeEC2InstanceLimits | PutScalingPolicy | DescribeScalingPolicies
--   | DeleteScalingPolicy | StopFleetActions | StartFleetActions | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newTargetConfiguration</a> smart constructor.
data TargetConfiguration
TargetConfiguration' :: Double -> TargetConfiguration

-- | Create a value of <a>TargetConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetValue:TargetConfiguration'</a>,
--   <a>targetConfiguration_targetValue</a> - Desired value to use with a
--   target-based scaling policy. The value must be relevant for whatever
--   metric the scaling policy is using. For example, in a policy using the
--   metric PercentAvailableGameSessions, the target value should be the
--   preferred size of the fleet's buffer (the percent of capacity that
--   should be idle and ready for new game sessions).
newTargetConfiguration :: Double -> TargetConfiguration

-- | __This data type is used with the GameLift FleetIQ and game server
--   groups.__
--   
--   Settings for a target-based scaling policy as part of a
--   GameServerGroupAutoScalingPolicy. These settings are used to create a
--   target-based policy that tracks the GameLift FleetIQ metric
--   <tt>"PercentUtilizedGameServers"</tt> and specifies a target value for
--   the metric. As player usage changes, the policy triggers to adjust the
--   game server group capacity so that the metric returns to the target
--   value.
--   
--   <i>See:</i> <a>newTargetTrackingConfiguration</a> smart constructor.
data TargetTrackingConfiguration
TargetTrackingConfiguration' :: Double -> TargetTrackingConfiguration

-- | Create a value of <a>TargetTrackingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetValue:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_targetValue</a> - Desired value to use
--   with a game server group target-based scaling policy.
newTargetTrackingConfiguration :: Double -> TargetTrackingConfiguration

-- | Represents an authorization for a VPC peering connection between the
--   VPC for an Amazon GameLift fleet and another VPC on an account you
--   have access to. This authorization must exist and be valid for the
--   peering connection to be established. Authorizations are valid for 24
--   hours after they are issued.
--   
--   <b>Related actions</b>
--   
--   CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations |
--   DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection |
--   DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newVpcPeeringAuthorization</a> smart constructor.
data VpcPeeringAuthorization
VpcPeeringAuthorization' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> VpcPeeringAuthorization

-- | Create a value of <a>VpcPeeringAuthorization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_creationTime</a> - Time stamp indicating
--   when this authorization was issued. Format is a number expressed in
--   Unix time as milliseconds (for example <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:peerVpcAwsAccountId:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_peerVpcAwsAccountId</a> -
--   
--   <a>$sel:expirationTime:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_expirationTime</a> - Time stamp indicating
--   when this authorization expires (24 hours after issuance). Format is a
--   number expressed in Unix time as milliseconds (for example
--   <tt>"1469498468.057"</tt>).
--   
--   <a>$sel:gameLiftAwsAccountId:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_gameLiftAwsAccountId</a> - A unique
--   identifier for the AWS account that you use to manage your GameLift
--   fleet. You can find your Account ID in the AWS Management Console
--   under account settings.
--   
--   <a>$sel:peerVpcId:VpcPeeringAuthorization'</a>,
--   <a>vpcPeeringAuthorization_peerVpcId</a> - A unique identifier for a
--   VPC with resources to be accessed by your GameLift fleet. The VPC must
--   be in the same Region as your fleet. To look up a VPC ID, use the
--   <a>VPC Dashboard</a> in the AWS Management Console. Learn more about
--   VPC peering in <a>VPC Peering with GameLift Fleets</a>.
newVpcPeeringAuthorization :: VpcPeeringAuthorization

-- | Represents a peering connection between a VPC on one of your AWS
--   accounts and the VPC for your Amazon GameLift fleets. This record may
--   be for an active peering connection or a pending connection that has
--   not yet been established.
--   
--   <b>Related actions</b>
--   
--   CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations |
--   DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection |
--   DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | <a>All
--   APIs by task</a>
--   
--   <i>See:</i> <a>newVpcPeeringConnection</a> smart constructor.
data VpcPeeringConnection
VpcPeeringConnection' :: Maybe VpcPeeringConnectionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VpcPeeringConnection

-- | Create a value of <a>VpcPeeringConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_status</a> - The status information about the
--   connection. Status indicates if a connection is pending, successful,
--   or failed.
--   
--   <a>$sel:vpcPeeringConnectionId:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_vpcPeeringConnectionId</a> - A unique
--   identifier that is automatically assigned to the connection record.
--   This ID is referenced in VPC peering connection events, and is used
--   when deleting a connection with DeleteVpcPeeringConnection.
--   
--   <a>$sel:ipV4CidrBlock:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_ipV4CidrBlock</a> - CIDR block of IPv4
--   addresses assigned to the VPC peering connection for the GameLift VPC.
--   The peered VPC also has an IPv4 CIDR block associated with it; these
--   blocks cannot overlap or the peering connection cannot be created.
--   
--   <a>$sel:fleetId:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_fleetId</a> - A unique identifier for the
--   fleet. This ID determines the ID of the Amazon GameLift VPC for your
--   fleet.
--   
--   <a>$sel:fleetArn:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_fleetArn</a> - The Amazon Resource Name
--   (<a>ARN</a>) associated with the GameLift fleet resource for this
--   connection.
--   
--   <a>$sel:gameLiftVpcId:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_gameLiftVpcId</a> - A unique identifier for
--   the VPC that contains the Amazon GameLift fleet for this connection.
--   This VPC is managed by Amazon GameLift and does not appear in your AWS
--   account.
--   
--   <a>$sel:peerVpcId:VpcPeeringConnection'</a>,
--   <a>vpcPeeringConnection_peerVpcId</a> - A unique identifier for a VPC
--   with resources to be accessed by your GameLift fleet. The VPC must be
--   in the same Region as your fleet. To look up a VPC ID, use the <a>VPC
--   Dashboard</a> in the AWS Management Console. Learn more about VPC
--   peering in <a>VPC Peering with GameLift Fleets</a>.
newVpcPeeringConnection :: VpcPeeringConnection

-- | Represents status information for a VPC peering connection. Status is
--   associated with a VpcPeeringConnection object. Status codes and
--   messages are provided from EC2 (see
--   <a>VpcPeeringConnectionStateReason</a>). Connection status information
--   is also communicated as a fleet Event.
--   
--   <i>See:</i> <a>newVpcPeeringConnectionStatus</a> smart constructor.
data VpcPeeringConnectionStatus
VpcPeeringConnectionStatus' :: Maybe Text -> Maybe Text -> VpcPeeringConnectionStatus

-- | Create a value of <a>VpcPeeringConnectionStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:VpcPeeringConnectionStatus'</a>,
--   <a>vpcPeeringConnectionStatus_message</a> - Additional messaging
--   associated with the connection status.
--   
--   <a>$sel:code:VpcPeeringConnectionStatus'</a>,
--   <a>vpcPeeringConnectionStatus_code</a> - Code indicating the status of
--   a VPC peering connection.
newVpcPeeringConnectionStatus :: VpcPeeringConnectionStatus
