-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-xrayZSamazonka-xray
@version 2.0


module Amazonka.XRay.Types.Alias

-- | An alias for an edge.
--   
--   <i>See:</i> <a>newAlias</a> smart constructor.
data Alias
Alias' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Alias

-- | A list of names for the alias, including the canonical name.
[$sel:names:Alias'] :: Alias -> Maybe [Text]

-- | The canonical name of the alias.
[$sel:name:Alias'] :: Alias -> Maybe Text

-- | The type of the alias.
[$sel:type':Alias'] :: Alias -> Maybe Text

-- | Create a value of <a>Alias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:Alias'</a>, <a>alias_names</a> - A list of names for the
--   alias, including the canonical name.
--   
--   <a>$sel:name:Alias'</a>, <a>alias_name</a> - The canonical name of the
--   alias.
--   
--   <a>$sel:type':Alias'</a>, <a>alias_type</a> - The type of the alias.
newAlias :: Alias

-- | A list of names for the alias, including the canonical name.
alias_names :: Lens' Alias (Maybe [Text])

-- | The canonical name of the alias.
alias_name :: Lens' Alias (Maybe Text)

-- | The type of the alias.
alias_type :: Lens' Alias (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.Alias.Alias
instance GHC.Show.Show Amazonka.XRay.Types.Alias.Alias
instance GHC.Read.Read Amazonka.XRay.Types.Alias.Alias
instance GHC.Classes.Eq Amazonka.XRay.Types.Alias.Alias
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.Alias.Alias
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.Alias.Alias
instance Control.DeepSeq.NFData Amazonka.XRay.Types.Alias.Alias


module Amazonka.XRay.Types.AnnotationValue

-- | Value of a segment annotation. Has one of three value types: Number,
--   Boolean, or String.
--   
--   <i>See:</i> <a>newAnnotationValue</a> smart constructor.
data AnnotationValue
AnnotationValue' :: Maybe Double -> Maybe Text -> Maybe Bool -> AnnotationValue

-- | Value for a Number annotation.
[$sel:numberValue:AnnotationValue'] :: AnnotationValue -> Maybe Double

-- | Value for a String annotation.
[$sel:stringValue:AnnotationValue'] :: AnnotationValue -> Maybe Text

-- | Value for a Boolean annotation.
[$sel:booleanValue:AnnotationValue'] :: AnnotationValue -> Maybe Bool

-- | Create a value of <a>AnnotationValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberValue:AnnotationValue'</a>,
--   <a>annotationValue_numberValue</a> - Value for a Number annotation.
--   
--   <a>$sel:stringValue:AnnotationValue'</a>,
--   <a>annotationValue_stringValue</a> - Value for a String annotation.
--   
--   <a>$sel:booleanValue:AnnotationValue'</a>,
--   <a>annotationValue_booleanValue</a> - Value for a Boolean annotation.
newAnnotationValue :: AnnotationValue

-- | Value for a Number annotation.
annotationValue_numberValue :: Lens' AnnotationValue (Maybe Double)

-- | Value for a String annotation.
annotationValue_stringValue :: Lens' AnnotationValue (Maybe Text)

-- | Value for a Boolean annotation.
annotationValue_booleanValue :: Lens' AnnotationValue (Maybe Bool)
instance GHC.Generics.Generic Amazonka.XRay.Types.AnnotationValue.AnnotationValue
instance GHC.Show.Show Amazonka.XRay.Types.AnnotationValue.AnnotationValue
instance GHC.Read.Read Amazonka.XRay.Types.AnnotationValue.AnnotationValue
instance GHC.Classes.Eq Amazonka.XRay.Types.AnnotationValue.AnnotationValue
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.AnnotationValue.AnnotationValue
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.AnnotationValue.AnnotationValue
instance Control.DeepSeq.NFData Amazonka.XRay.Types.AnnotationValue.AnnotationValue


module Amazonka.XRay.Types.AvailabilityZoneDetail

-- | A list of Availability Zones corresponding to the segments in a trace.
--   
--   <i>See:</i> <a>newAvailabilityZoneDetail</a> smart constructor.
data AvailabilityZoneDetail
AvailabilityZoneDetail' :: Maybe Text -> AvailabilityZoneDetail

-- | The name of a corresponding Availability Zone.
[$sel:name:AvailabilityZoneDetail'] :: AvailabilityZoneDetail -> Maybe Text

-- | Create a value of <a>AvailabilityZoneDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AvailabilityZoneDetail'</a>,
--   <a>availabilityZoneDetail_name</a> - The name of a corresponding
--   Availability Zone.
newAvailabilityZoneDetail :: AvailabilityZoneDetail

-- | The name of a corresponding Availability Zone.
availabilityZoneDetail_name :: Lens' AvailabilityZoneDetail (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.AvailabilityZoneDetail.AvailabilityZoneDetail
instance GHC.Show.Show Amazonka.XRay.Types.AvailabilityZoneDetail.AvailabilityZoneDetail
instance GHC.Read.Read Amazonka.XRay.Types.AvailabilityZoneDetail.AvailabilityZoneDetail
instance GHC.Classes.Eq Amazonka.XRay.Types.AvailabilityZoneDetail.AvailabilityZoneDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.AvailabilityZoneDetail.AvailabilityZoneDetail
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.AvailabilityZoneDetail.AvailabilityZoneDetail
instance Control.DeepSeq.NFData Amazonka.XRay.Types.AvailabilityZoneDetail.AvailabilityZoneDetail


module Amazonka.XRay.Types.BackendConnectionErrors

-- | <i>See:</i> <a>newBackendConnectionErrors</a> smart constructor.
data BackendConnectionErrors
BackendConnectionErrors' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> BackendConnectionErrors
[$sel:otherCount:BackendConnectionErrors'] :: BackendConnectionErrors -> Maybe Int
[$sel:timeoutCount:BackendConnectionErrors'] :: BackendConnectionErrors -> Maybe Int
[$sel:hTTPCode5XXCount:BackendConnectionErrors'] :: BackendConnectionErrors -> Maybe Int
[$sel:connectionRefusedCount:BackendConnectionErrors'] :: BackendConnectionErrors -> Maybe Int
[$sel:hTTPCode4XXCount:BackendConnectionErrors'] :: BackendConnectionErrors -> Maybe Int
[$sel:unknownHostCount:BackendConnectionErrors'] :: BackendConnectionErrors -> Maybe Int

-- | Create a value of <a>BackendConnectionErrors</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:otherCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_otherCount</a> -
--   
--   <a>$sel:timeoutCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_timeoutCount</a> -
--   
--   <a>$sel:hTTPCode5XXCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_hTTPCode5XXCount</a> -
--   
--   <a>$sel:connectionRefusedCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_connectionRefusedCount</a> -
--   
--   <a>$sel:hTTPCode4XXCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_hTTPCode4XXCount</a> -
--   
--   <a>$sel:unknownHostCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_unknownHostCount</a> -
newBackendConnectionErrors :: BackendConnectionErrors

backendConnectionErrors_otherCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_timeoutCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_hTTPCode5XXCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_connectionRefusedCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_hTTPCode4XXCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_unknownHostCount :: Lens' BackendConnectionErrors (Maybe Int)
instance GHC.Generics.Generic Amazonka.XRay.Types.BackendConnectionErrors.BackendConnectionErrors
instance GHC.Show.Show Amazonka.XRay.Types.BackendConnectionErrors.BackendConnectionErrors
instance GHC.Read.Read Amazonka.XRay.Types.BackendConnectionErrors.BackendConnectionErrors
instance GHC.Classes.Eq Amazonka.XRay.Types.BackendConnectionErrors.BackendConnectionErrors
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.BackendConnectionErrors.BackendConnectionErrors
instance Control.DeepSeq.NFData Amazonka.XRay.Types.BackendConnectionErrors.BackendConnectionErrors
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.BackendConnectionErrors.BackendConnectionErrors


module Amazonka.XRay.Types.EncryptionStatus
newtype EncryptionStatus
EncryptionStatus' :: Text -> EncryptionStatus
[fromEncryptionStatus] :: EncryptionStatus -> Text
pattern EncryptionStatus_ACTIVE :: EncryptionStatus
pattern EncryptionStatus_UPDATING :: EncryptionStatus
instance Amazonka.Data.XML.ToXML Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Amazonka.Data.XML.FromXML Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Amazonka.Data.Log.ToLog Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Amazonka.Data.Text.ToText Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Amazonka.Data.Text.FromText Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Control.DeepSeq.NFData Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance GHC.Generics.Generic Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance GHC.Classes.Ord Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance GHC.Classes.Eq Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance GHC.Read.Read Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus
instance GHC.Show.Show Amazonka.XRay.Types.EncryptionStatus.EncryptionStatus


module Amazonka.XRay.Types.EncryptionType
newtype EncryptionType
EncryptionType' :: Text -> EncryptionType
[fromEncryptionType] :: EncryptionType -> Text
pattern EncryptionType_KMS :: EncryptionType
pattern EncryptionType_NONE :: EncryptionType
instance Amazonka.Data.XML.ToXML Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Amazonka.Data.XML.FromXML Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Amazonka.Data.Headers.ToHeader Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Amazonka.Data.Log.ToLog Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Amazonka.Data.ByteString.ToByteString Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Amazonka.Data.Text.ToText Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Amazonka.Data.Text.FromText Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Control.DeepSeq.NFData Amazonka.XRay.Types.EncryptionType.EncryptionType
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.EncryptionType.EncryptionType
instance GHC.Generics.Generic Amazonka.XRay.Types.EncryptionType.EncryptionType
instance GHC.Classes.Ord Amazonka.XRay.Types.EncryptionType.EncryptionType
instance GHC.Classes.Eq Amazonka.XRay.Types.EncryptionType.EncryptionType
instance GHC.Read.Read Amazonka.XRay.Types.EncryptionType.EncryptionType
instance GHC.Show.Show Amazonka.XRay.Types.EncryptionType.EncryptionType


module Amazonka.XRay.Types.EncryptionConfig

-- | A configuration document that specifies encryption configuration
--   settings.
--   
--   <i>See:</i> <a>newEncryptionConfig</a> smart constructor.
data EncryptionConfig
EncryptionConfig' :: Maybe EncryptionStatus -> Maybe Text -> Maybe EncryptionType -> EncryptionConfig

-- | The encryption status. While the status is <tt>UPDATING</tt>, X-Ray
--   may encrypt data with a combination of the new and old settings.
[$sel:status:EncryptionConfig'] :: EncryptionConfig -> Maybe EncryptionStatus

-- | The ID of the KMS key used for encryption, if applicable.
[$sel:keyId:EncryptionConfig'] :: EncryptionConfig -> Maybe Text

-- | The type of encryption. Set to <tt>KMS</tt> for encryption with KMS
--   keys. Set to <tt>NONE</tt> for default encryption.
[$sel:type':EncryptionConfig'] :: EncryptionConfig -> Maybe EncryptionType

-- | Create a value of <a>EncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:EncryptionConfig'</a>, <a>encryptionConfig_status</a> -
--   The encryption status. While the status is <tt>UPDATING</tt>, X-Ray
--   may encrypt data with a combination of the new and old settings.
--   
--   <a>$sel:keyId:EncryptionConfig'</a>, <a>encryptionConfig_keyId</a> -
--   The ID of the KMS key used for encryption, if applicable.
--   
--   <a>$sel:type':EncryptionConfig'</a>, <a>encryptionConfig_type</a> -
--   The type of encryption. Set to <tt>KMS</tt> for encryption with KMS
--   keys. Set to <tt>NONE</tt> for default encryption.
newEncryptionConfig :: EncryptionConfig

-- | The encryption status. While the status is <tt>UPDATING</tt>, X-Ray
--   may encrypt data with a combination of the new and old settings.
encryptionConfig_status :: Lens' EncryptionConfig (Maybe EncryptionStatus)

-- | The ID of the KMS key used for encryption, if applicable.
encryptionConfig_keyId :: Lens' EncryptionConfig (Maybe Text)

-- | The type of encryption. Set to <tt>KMS</tt> for encryption with KMS
--   keys. Set to <tt>NONE</tt> for default encryption.
encryptionConfig_type :: Lens' EncryptionConfig (Maybe EncryptionType)
instance GHC.Generics.Generic Amazonka.XRay.Types.EncryptionConfig.EncryptionConfig
instance GHC.Show.Show Amazonka.XRay.Types.EncryptionConfig.EncryptionConfig
instance GHC.Read.Read Amazonka.XRay.Types.EncryptionConfig.EncryptionConfig
instance GHC.Classes.Eq Amazonka.XRay.Types.EncryptionConfig.EncryptionConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.EncryptionConfig.EncryptionConfig
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.EncryptionConfig.EncryptionConfig
instance Control.DeepSeq.NFData Amazonka.XRay.Types.EncryptionConfig.EncryptionConfig


module Amazonka.XRay.Types.ErrorStatistics

-- | Information about requests that failed with a 4xx Client Error status
--   code.
--   
--   <i>See:</i> <a>newErrorStatistics</a> smart constructor.
data ErrorStatistics
ErrorStatistics' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> ErrorStatistics

-- | The number of requests that failed with untracked 4xx Client Error
--   status codes.
[$sel:otherCount:ErrorStatistics'] :: ErrorStatistics -> Maybe Integer

-- | The number of requests that failed with a 419 throttling status code.
[$sel:throttleCount:ErrorStatistics'] :: ErrorStatistics -> Maybe Integer

-- | The total number of requests that failed with a 4xx Client Error
--   status code.
[$sel:totalCount:ErrorStatistics'] :: ErrorStatistics -> Maybe Integer

-- | Create a value of <a>ErrorStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:otherCount:ErrorStatistics'</a>,
--   <a>errorStatistics_otherCount</a> - The number of requests that failed
--   with untracked 4xx Client Error status codes.
--   
--   <a>$sel:throttleCount:ErrorStatistics'</a>,
--   <a>errorStatistics_throttleCount</a> - The number of requests that
--   failed with a 419 throttling status code.
--   
--   <a>$sel:totalCount:ErrorStatistics'</a>,
--   <a>errorStatistics_totalCount</a> - The total number of requests that
--   failed with a 4xx Client Error status code.
newErrorStatistics :: ErrorStatistics

-- | The number of requests that failed with untracked 4xx Client Error
--   status codes.
errorStatistics_otherCount :: Lens' ErrorStatistics (Maybe Integer)

-- | The number of requests that failed with a 419 throttling status code.
errorStatistics_throttleCount :: Lens' ErrorStatistics (Maybe Integer)

-- | The total number of requests that failed with a 4xx Client Error
--   status code.
errorStatistics_totalCount :: Lens' ErrorStatistics (Maybe Integer)
instance GHC.Generics.Generic Amazonka.XRay.Types.ErrorStatistics.ErrorStatistics
instance GHC.Show.Show Amazonka.XRay.Types.ErrorStatistics.ErrorStatistics
instance GHC.Read.Read Amazonka.XRay.Types.ErrorStatistics.ErrorStatistics
instance GHC.Classes.Eq Amazonka.XRay.Types.ErrorStatistics.ErrorStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ErrorStatistics.ErrorStatistics
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ErrorStatistics.ErrorStatistics
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ErrorStatistics.ErrorStatistics


module Amazonka.XRay.Types.FaultStatistics

-- | Information about requests that failed with a 5xx Server Error status
--   code.
--   
--   <i>See:</i> <a>newFaultStatistics</a> smart constructor.
data FaultStatistics
FaultStatistics' :: Maybe Integer -> Maybe Integer -> FaultStatistics

-- | The number of requests that failed with untracked 5xx Server Error
--   status codes.
[$sel:otherCount:FaultStatistics'] :: FaultStatistics -> Maybe Integer

-- | The total number of requests that failed with a 5xx Server Error
--   status code.
[$sel:totalCount:FaultStatistics'] :: FaultStatistics -> Maybe Integer

-- | Create a value of <a>FaultStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:otherCount:FaultStatistics'</a>,
--   <a>faultStatistics_otherCount</a> - The number of requests that failed
--   with untracked 5xx Server Error status codes.
--   
--   <a>$sel:totalCount:FaultStatistics'</a>,
--   <a>faultStatistics_totalCount</a> - The total number of requests that
--   failed with a 5xx Server Error status code.
newFaultStatistics :: FaultStatistics

-- | The number of requests that failed with untracked 5xx Server Error
--   status codes.
faultStatistics_otherCount :: Lens' FaultStatistics (Maybe Integer)

-- | The total number of requests that failed with a 5xx Server Error
--   status code.
faultStatistics_totalCount :: Lens' FaultStatistics (Maybe Integer)
instance GHC.Generics.Generic Amazonka.XRay.Types.FaultStatistics.FaultStatistics
instance GHC.Show.Show Amazonka.XRay.Types.FaultStatistics.FaultStatistics
instance GHC.Read.Read Amazonka.XRay.Types.FaultStatistics.FaultStatistics
instance GHC.Classes.Eq Amazonka.XRay.Types.FaultStatistics.FaultStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.FaultStatistics.FaultStatistics
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.FaultStatistics.FaultStatistics
instance Control.DeepSeq.NFData Amazonka.XRay.Types.FaultStatistics.FaultStatistics


module Amazonka.XRay.Types.EdgeStatistics

-- | Response statistics for an edge.
--   
--   <i>See:</i> <a>newEdgeStatistics</a> smart constructor.
data EdgeStatistics
EdgeStatistics' :: Maybe FaultStatistics -> Maybe Integer -> Maybe Double -> Maybe ErrorStatistics -> Maybe Integer -> EdgeStatistics

-- | Information about requests that failed with a 5xx Server Error status
--   code.
[$sel:faultStatistics:EdgeStatistics'] :: EdgeStatistics -> Maybe FaultStatistics

-- | The number of requests that completed with a 2xx Success status code.
[$sel:okCount:EdgeStatistics'] :: EdgeStatistics -> Maybe Integer

-- | The aggregate response time of completed requests.
[$sel:totalResponseTime:EdgeStatistics'] :: EdgeStatistics -> Maybe Double

-- | Information about requests that failed with a 4xx Client Error status
--   code.
[$sel:errorStatistics:EdgeStatistics'] :: EdgeStatistics -> Maybe ErrorStatistics

-- | The total number of completed requests.
[$sel:totalCount:EdgeStatistics'] :: EdgeStatistics -> Maybe Integer

-- | Create a value of <a>EdgeStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:faultStatistics:EdgeStatistics'</a>,
--   <a>edgeStatistics_faultStatistics</a> - Information about requests
--   that failed with a 5xx Server Error status code.
--   
--   <a>$sel:okCount:EdgeStatistics'</a>, <a>edgeStatistics_okCount</a> -
--   The number of requests that completed with a 2xx Success status code.
--   
--   <a>$sel:totalResponseTime:EdgeStatistics'</a>,
--   <a>edgeStatistics_totalResponseTime</a> - The aggregate response time
--   of completed requests.
--   
--   <a>$sel:errorStatistics:EdgeStatistics'</a>,
--   <a>edgeStatistics_errorStatistics</a> - Information about requests
--   that failed with a 4xx Client Error status code.
--   
--   <a>$sel:totalCount:EdgeStatistics'</a>,
--   <a>edgeStatistics_totalCount</a> - The total number of completed
--   requests.
newEdgeStatistics :: EdgeStatistics

-- | Information about requests that failed with a 5xx Server Error status
--   code.
edgeStatistics_faultStatistics :: Lens' EdgeStatistics (Maybe FaultStatistics)

-- | The number of requests that completed with a 2xx Success status code.
edgeStatistics_okCount :: Lens' EdgeStatistics (Maybe Integer)

-- | The aggregate response time of completed requests.
edgeStatistics_totalResponseTime :: Lens' EdgeStatistics (Maybe Double)

-- | Information about requests that failed with a 4xx Client Error status
--   code.
edgeStatistics_errorStatistics :: Lens' EdgeStatistics (Maybe ErrorStatistics)

-- | The total number of completed requests.
edgeStatistics_totalCount :: Lens' EdgeStatistics (Maybe Integer)
instance GHC.Generics.Generic Amazonka.XRay.Types.EdgeStatistics.EdgeStatistics
instance GHC.Show.Show Amazonka.XRay.Types.EdgeStatistics.EdgeStatistics
instance GHC.Read.Read Amazonka.XRay.Types.EdgeStatistics.EdgeStatistics
instance GHC.Classes.Eq Amazonka.XRay.Types.EdgeStatistics.EdgeStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.EdgeStatistics.EdgeStatistics
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.EdgeStatistics.EdgeStatistics
instance Control.DeepSeq.NFData Amazonka.XRay.Types.EdgeStatistics.EdgeStatistics


module Amazonka.XRay.Types.ForecastStatistics

-- | The predicted high and low fault count. This is used to determine if a
--   service has become anomalous and if an insight should be created.
--   
--   <i>See:</i> <a>newForecastStatistics</a> smart constructor.
data ForecastStatistics
ForecastStatistics' :: Maybe Integer -> Maybe Integer -> ForecastStatistics

-- | The lower limit of fault counts for a service.
[$sel:faultCountLow:ForecastStatistics'] :: ForecastStatistics -> Maybe Integer

-- | The upper limit of fault counts for a service.
[$sel:faultCountHigh:ForecastStatistics'] :: ForecastStatistics -> Maybe Integer

-- | Create a value of <a>ForecastStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:faultCountLow:ForecastStatistics'</a>,
--   <a>forecastStatistics_faultCountLow</a> - The lower limit of fault
--   counts for a service.
--   
--   <a>$sel:faultCountHigh:ForecastStatistics'</a>,
--   <a>forecastStatistics_faultCountHigh</a> - The upper limit of fault
--   counts for a service.
newForecastStatistics :: ForecastStatistics

-- | The lower limit of fault counts for a service.
forecastStatistics_faultCountLow :: Lens' ForecastStatistics (Maybe Integer)

-- | The upper limit of fault counts for a service.
forecastStatistics_faultCountHigh :: Lens' ForecastStatistics (Maybe Integer)
instance GHC.Generics.Generic Amazonka.XRay.Types.ForecastStatistics.ForecastStatistics
instance GHC.Show.Show Amazonka.XRay.Types.ForecastStatistics.ForecastStatistics
instance GHC.Read.Read Amazonka.XRay.Types.ForecastStatistics.ForecastStatistics
instance GHC.Classes.Eq Amazonka.XRay.Types.ForecastStatistics.ForecastStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ForecastStatistics.ForecastStatistics
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ForecastStatistics.ForecastStatistics
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ForecastStatistics.ForecastStatistics


module Amazonka.XRay.Types.HistogramEntry

-- | An entry in a histogram for a statistic. A histogram maps the range of
--   observed values on the X axis, and the prevalence of each value on the
--   Y axis.
--   
--   <i>See:</i> <a>newHistogramEntry</a> smart constructor.
data HistogramEntry
HistogramEntry' :: Maybe Int -> Maybe Double -> HistogramEntry

-- | The prevalence of the entry.
[$sel:count:HistogramEntry'] :: HistogramEntry -> Maybe Int

-- | The value of the entry.
[$sel:value:HistogramEntry'] :: HistogramEntry -> Maybe Double

-- | Create a value of <a>HistogramEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:HistogramEntry'</a>, <a>histogramEntry_count</a> - The
--   prevalence of the entry.
--   
--   <a>$sel:value:HistogramEntry'</a>, <a>histogramEntry_value</a> - The
--   value of the entry.
newHistogramEntry :: HistogramEntry

-- | The prevalence of the entry.
histogramEntry_count :: Lens' HistogramEntry (Maybe Int)

-- | The value of the entry.
histogramEntry_value :: Lens' HistogramEntry (Maybe Double)
instance GHC.Generics.Generic Amazonka.XRay.Types.HistogramEntry.HistogramEntry
instance GHC.Show.Show Amazonka.XRay.Types.HistogramEntry.HistogramEntry
instance GHC.Read.Read Amazonka.XRay.Types.HistogramEntry.HistogramEntry
instance GHC.Classes.Eq Amazonka.XRay.Types.HistogramEntry.HistogramEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.HistogramEntry.HistogramEntry
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.HistogramEntry.HistogramEntry
instance Control.DeepSeq.NFData Amazonka.XRay.Types.HistogramEntry.HistogramEntry


module Amazonka.XRay.Types.Edge

-- | Information about a connection between two services.
--   
--   <i>See:</i> <a>newEdge</a> smart constructor.
data Edge
Edge' :: Maybe POSIX -> Maybe [Alias] -> Maybe [HistogramEntry] -> Maybe Int -> Maybe POSIX -> Maybe EdgeStatistics -> Edge

-- | The start time of the first segment on the edge.
[$sel:startTime:Edge'] :: Edge -> Maybe POSIX

-- | Aliases for the edge.
[$sel:aliases:Edge'] :: Edge -> Maybe [Alias]

-- | A histogram that maps the spread of client response times on an edge.
[$sel:responseTimeHistogram:Edge'] :: Edge -> Maybe [HistogramEntry]

-- | Identifier of the edge. Unique within a service map.
[$sel:referenceId:Edge'] :: Edge -> Maybe Int

-- | The end time of the last segment on the edge.
[$sel:endTime:Edge'] :: Edge -> Maybe POSIX

-- | Response statistics for segments on the edge.
[$sel:summaryStatistics:Edge'] :: Edge -> Maybe EdgeStatistics

-- | Create a value of <a>Edge</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:Edge'</a>, <a>edge_startTime</a> - The start time of
--   the first segment on the edge.
--   
--   <a>$sel:aliases:Edge'</a>, <a>edge_aliases</a> - Aliases for the edge.
--   
--   <a>$sel:responseTimeHistogram:Edge'</a>,
--   <a>edge_responseTimeHistogram</a> - A histogram that maps the spread
--   of client response times on an edge.
--   
--   <a>$sel:referenceId:Edge'</a>, <a>edge_referenceId</a> - Identifier of
--   the edge. Unique within a service map.
--   
--   <a>$sel:endTime:Edge'</a>, <a>edge_endTime</a> - The end time of the
--   last segment on the edge.
--   
--   <a>$sel:summaryStatistics:Edge'</a>, <a>edge_summaryStatistics</a> -
--   Response statistics for segments on the edge.
newEdge :: Edge

-- | The start time of the first segment on the edge.
edge_startTime :: Lens' Edge (Maybe UTCTime)

-- | Aliases for the edge.
edge_aliases :: Lens' Edge (Maybe [Alias])

-- | A histogram that maps the spread of client response times on an edge.
edge_responseTimeHistogram :: Lens' Edge (Maybe [HistogramEntry])

-- | Identifier of the edge. Unique within a service map.
edge_referenceId :: Lens' Edge (Maybe Int)

-- | The end time of the last segment on the edge.
edge_endTime :: Lens' Edge (Maybe UTCTime)

-- | Response statistics for segments on the edge.
edge_summaryStatistics :: Lens' Edge (Maybe EdgeStatistics)
instance GHC.Generics.Generic Amazonka.XRay.Types.Edge.Edge
instance GHC.Show.Show Amazonka.XRay.Types.Edge.Edge
instance GHC.Read.Read Amazonka.XRay.Types.Edge.Edge
instance GHC.Classes.Eq Amazonka.XRay.Types.Edge.Edge
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.Edge.Edge
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.Edge.Edge
instance Control.DeepSeq.NFData Amazonka.XRay.Types.Edge.Edge


module Amazonka.XRay.Types.Http

-- | Information about an HTTP request.
--   
--   <i>See:</i> <a>newHttp</a> smart constructor.
data Http
Http' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Http

-- | The request method.
[$sel:httpMethod:Http'] :: Http -> Maybe Text

-- | The response status.
[$sel:httpStatus:Http'] :: Http -> Maybe Int

-- | The IP address of the requestor.
[$sel:clientIp:Http'] :: Http -> Maybe Text

-- | The request's user agent string.
[$sel:userAgent:Http'] :: Http -> Maybe Text

-- | The request URL.
[$sel:httpURL:Http'] :: Http -> Maybe Text

-- | Create a value of <a>Http</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:Http'</a>, <a>http_httpMethod</a> - The request
--   method.
--   
--   <a>$sel:httpStatus:Http'</a>, <a>http_httpStatus</a> - The response
--   status.
--   
--   <a>$sel:clientIp:Http'</a>, <a>http_clientIp</a> - The IP address of
--   the requestor.
--   
--   <a>$sel:userAgent:Http'</a>, <a>http_userAgent</a> - The request's
--   user agent string.
--   
--   <a>$sel:httpURL:Http'</a>, <a>http_httpURL</a> - The request URL.
newHttp :: Http

-- | The request method.
http_httpMethod :: Lens' Http (Maybe Text)

-- | The response status.
http_httpStatus :: Lens' Http (Maybe Int)

-- | The IP address of the requestor.
http_clientIp :: Lens' Http (Maybe Text)

-- | The request's user agent string.
http_userAgent :: Lens' Http (Maybe Text)

-- | The request URL.
http_httpURL :: Lens' Http (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.Http.Http
instance GHC.Show.Show Amazonka.XRay.Types.Http.Http
instance GHC.Read.Read Amazonka.XRay.Types.Http.Http
instance GHC.Classes.Eq Amazonka.XRay.Types.Http.Http
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.Http.Http
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.Http.Http
instance Control.DeepSeq.NFData Amazonka.XRay.Types.Http.Http


module Amazonka.XRay.Types.InsightCategory
newtype InsightCategory
InsightCategory' :: Text -> InsightCategory
[fromInsightCategory] :: InsightCategory -> Text
pattern InsightCategory_FAULT :: InsightCategory
instance Amazonka.Data.XML.ToXML Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Amazonka.Data.XML.FromXML Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Amazonka.Data.Headers.ToHeader Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Amazonka.Data.Log.ToLog Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Amazonka.Data.ByteString.ToByteString Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Amazonka.Data.Text.ToText Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Amazonka.Data.Text.FromText Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Control.DeepSeq.NFData Amazonka.XRay.Types.InsightCategory.InsightCategory
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.InsightCategory.InsightCategory
instance GHC.Generics.Generic Amazonka.XRay.Types.InsightCategory.InsightCategory
instance GHC.Classes.Ord Amazonka.XRay.Types.InsightCategory.InsightCategory
instance GHC.Classes.Eq Amazonka.XRay.Types.InsightCategory.InsightCategory
instance GHC.Read.Read Amazonka.XRay.Types.InsightCategory.InsightCategory
instance GHC.Show.Show Amazonka.XRay.Types.InsightCategory.InsightCategory


module Amazonka.XRay.Types.InsightImpactGraphEdge

-- | The connection between two service in an insight impact graph.
--   
--   <i>See:</i> <a>newInsightImpactGraphEdge</a> smart constructor.
data InsightImpactGraphEdge
InsightImpactGraphEdge' :: Maybe Int -> InsightImpactGraphEdge

-- | Identifier of the edge. Unique within a service map.
[$sel:referenceId:InsightImpactGraphEdge'] :: InsightImpactGraphEdge -> Maybe Int

-- | Create a value of <a>InsightImpactGraphEdge</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:referenceId:InsightImpactGraphEdge'</a>,
--   <a>insightImpactGraphEdge_referenceId</a> - Identifier of the edge.
--   Unique within a service map.
newInsightImpactGraphEdge :: InsightImpactGraphEdge

-- | Identifier of the edge. Unique within a service map.
insightImpactGraphEdge_referenceId :: Lens' InsightImpactGraphEdge (Maybe Int)
instance GHC.Generics.Generic Amazonka.XRay.Types.InsightImpactGraphEdge.InsightImpactGraphEdge
instance GHC.Show.Show Amazonka.XRay.Types.InsightImpactGraphEdge.InsightImpactGraphEdge
instance GHC.Read.Read Amazonka.XRay.Types.InsightImpactGraphEdge.InsightImpactGraphEdge
instance GHC.Classes.Eq Amazonka.XRay.Types.InsightImpactGraphEdge.InsightImpactGraphEdge
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.InsightImpactGraphEdge.InsightImpactGraphEdge
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.InsightImpactGraphEdge.InsightImpactGraphEdge
instance Control.DeepSeq.NFData Amazonka.XRay.Types.InsightImpactGraphEdge.InsightImpactGraphEdge


module Amazonka.XRay.Types.InsightImpactGraphService

-- | Information about an application that processed requests, users that
--   made requests, or downstream services, resources, and applications
--   that an application used.
--   
--   <i>See:</i> <a>newInsightImpactGraphService</a> smart constructor.
data InsightImpactGraphService
InsightImpactGraphService' :: Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [InsightImpactGraphEdge] -> InsightImpactGraphService

-- | Identifier for the service. Unique within the service map.
[$sel:referenceId:InsightImpactGraphService'] :: InsightImpactGraphService -> Maybe Int

-- | Identifier of the Amazon Web Services account in which the service
--   runs.
[$sel:accountId:InsightImpactGraphService'] :: InsightImpactGraphService -> Maybe Text

-- | A list of names for the service, including the canonical name.
[$sel:names:InsightImpactGraphService'] :: InsightImpactGraphService -> Maybe [Text]

-- | The canonical name of the service.
[$sel:name:InsightImpactGraphService'] :: InsightImpactGraphService -> Maybe Text

-- | Identifier for the service. Unique within the service map.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, AWS::EC2::Instance for an application running
--   on Amazon EC2 or AWS::DynamoDB::Table for an Amazon DynamoDB table
--   that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>remote - A downstream service of indeterminate type.</li>
--   </ul>
[$sel:type':InsightImpactGraphService'] :: InsightImpactGraphService -> Maybe Text

-- | Connections to downstream services.
[$sel:edges:InsightImpactGraphService'] :: InsightImpactGraphService -> Maybe [InsightImpactGraphEdge]

-- | Create a value of <a>InsightImpactGraphService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:referenceId:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_referenceId</a> - Identifier for the
--   service. Unique within the service map.
--   
--   <a>$sel:accountId:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_accountId</a> - Identifier of the Amazon
--   Web Services account in which the service runs.
--   
--   <a>$sel:names:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_names</a> - A list of names for the
--   service, including the canonical name.
--   
--   <a>$sel:name:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_name</a> - The canonical name of the
--   service.
--   
--   <a>$sel:type':InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_type</a> - Identifier for the service.
--   Unique within the service map.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, AWS::EC2::Instance for an application running
--   on Amazon EC2 or AWS::DynamoDB::Table for an Amazon DynamoDB table
--   that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>remote - A downstream service of indeterminate type.</li>
--   </ul>
--   
--   <a>$sel:edges:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_edges</a> - Connections to downstream
--   services.
newInsightImpactGraphService :: InsightImpactGraphService

-- | Identifier for the service. Unique within the service map.
insightImpactGraphService_referenceId :: Lens' InsightImpactGraphService (Maybe Int)

-- | Identifier of the Amazon Web Services account in which the service
--   runs.
insightImpactGraphService_accountId :: Lens' InsightImpactGraphService (Maybe Text)

-- | A list of names for the service, including the canonical name.
insightImpactGraphService_names :: Lens' InsightImpactGraphService (Maybe [Text])

-- | The canonical name of the service.
insightImpactGraphService_name :: Lens' InsightImpactGraphService (Maybe Text)

-- | Identifier for the service. Unique within the service map.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, AWS::EC2::Instance for an application running
--   on Amazon EC2 or AWS::DynamoDB::Table for an Amazon DynamoDB table
--   that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>remote - A downstream service of indeterminate type.</li>
--   </ul>
insightImpactGraphService_type :: Lens' InsightImpactGraphService (Maybe Text)

-- | Connections to downstream services.
insightImpactGraphService_edges :: Lens' InsightImpactGraphService (Maybe [InsightImpactGraphEdge])
instance GHC.Generics.Generic Amazonka.XRay.Types.InsightImpactGraphService.InsightImpactGraphService
instance GHC.Show.Show Amazonka.XRay.Types.InsightImpactGraphService.InsightImpactGraphService
instance GHC.Read.Read Amazonka.XRay.Types.InsightImpactGraphService.InsightImpactGraphService
instance GHC.Classes.Eq Amazonka.XRay.Types.InsightImpactGraphService.InsightImpactGraphService
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.InsightImpactGraphService.InsightImpactGraphService
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.InsightImpactGraphService.InsightImpactGraphService
instance Control.DeepSeq.NFData Amazonka.XRay.Types.InsightImpactGraphService.InsightImpactGraphService


module Amazonka.XRay.Types.InsightState
newtype InsightState
InsightState' :: Text -> InsightState
[fromInsightState] :: InsightState -> Text
pattern InsightState_ACTIVE :: InsightState
pattern InsightState_CLOSED :: InsightState
instance Amazonka.Data.XML.ToXML Amazonka.XRay.Types.InsightState.InsightState
instance Amazonka.Data.XML.FromXML Amazonka.XRay.Types.InsightState.InsightState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.XRay.Types.InsightState.InsightState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.InsightState.InsightState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.XRay.Types.InsightState.InsightState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.InsightState.InsightState
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.Types.InsightState.InsightState
instance Amazonka.Data.Headers.ToHeader Amazonka.XRay.Types.InsightState.InsightState
instance Amazonka.Data.Log.ToLog Amazonka.XRay.Types.InsightState.InsightState
instance Amazonka.Data.ByteString.ToByteString Amazonka.XRay.Types.InsightState.InsightState
instance Amazonka.Data.Text.ToText Amazonka.XRay.Types.InsightState.InsightState
instance Amazonka.Data.Text.FromText Amazonka.XRay.Types.InsightState.InsightState
instance Control.DeepSeq.NFData Amazonka.XRay.Types.InsightState.InsightState
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.InsightState.InsightState
instance GHC.Generics.Generic Amazonka.XRay.Types.InsightState.InsightState
instance GHC.Classes.Ord Amazonka.XRay.Types.InsightState.InsightState
instance GHC.Classes.Eq Amazonka.XRay.Types.InsightState.InsightState
instance GHC.Read.Read Amazonka.XRay.Types.InsightState.InsightState
instance GHC.Show.Show Amazonka.XRay.Types.InsightState.InsightState


module Amazonka.XRay.Types.InsightsConfiguration

-- | The structure containing configurations related to insights.
--   
--   <i>See:</i> <a>newInsightsConfiguration</a> smart constructor.
data InsightsConfiguration
InsightsConfiguration' :: Maybe Bool -> Maybe Bool -> InsightsConfiguration

-- | Set the NotificationsEnabled value to true to enable insights
--   notifications. Notifications can only be enabled on a group with
--   InsightsEnabled set to true.
[$sel:notificationsEnabled:InsightsConfiguration'] :: InsightsConfiguration -> Maybe Bool

-- | Set the InsightsEnabled value to true to enable insights or false to
--   disable insights.
[$sel:insightsEnabled:InsightsConfiguration'] :: InsightsConfiguration -> Maybe Bool

-- | Create a value of <a>InsightsConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationsEnabled:InsightsConfiguration'</a>,
--   <a>insightsConfiguration_notificationsEnabled</a> - Set the
--   NotificationsEnabled value to true to enable insights notifications.
--   Notifications can only be enabled on a group with InsightsEnabled set
--   to true.
--   
--   <a>$sel:insightsEnabled:InsightsConfiguration'</a>,
--   <a>insightsConfiguration_insightsEnabled</a> - Set the InsightsEnabled
--   value to true to enable insights or false to disable insights.
newInsightsConfiguration :: InsightsConfiguration

-- | Set the NotificationsEnabled value to true to enable insights
--   notifications. Notifications can only be enabled on a group with
--   InsightsEnabled set to true.
insightsConfiguration_notificationsEnabled :: Lens' InsightsConfiguration (Maybe Bool)

-- | Set the InsightsEnabled value to true to enable insights or false to
--   disable insights.
insightsConfiguration_insightsEnabled :: Lens' InsightsConfiguration (Maybe Bool)
instance GHC.Generics.Generic Amazonka.XRay.Types.InsightsConfiguration.InsightsConfiguration
instance GHC.Show.Show Amazonka.XRay.Types.InsightsConfiguration.InsightsConfiguration
instance GHC.Read.Read Amazonka.XRay.Types.InsightsConfiguration.InsightsConfiguration
instance GHC.Classes.Eq Amazonka.XRay.Types.InsightsConfiguration.InsightsConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.InsightsConfiguration.InsightsConfiguration
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.InsightsConfiguration.InsightsConfiguration
instance Control.DeepSeq.NFData Amazonka.XRay.Types.InsightsConfiguration.InsightsConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.InsightsConfiguration.InsightsConfiguration


module Amazonka.XRay.Types.GroupSummary

-- | Details for a group without metadata.
--   
--   <i>See:</i> <a>newGroupSummary</a> smart constructor.
data GroupSummary
GroupSummary' :: Maybe Text -> Maybe InsightsConfiguration -> Maybe Text -> Maybe Text -> GroupSummary

-- | The filter expression defining the parameters to include traces.
[$sel:filterExpression:GroupSummary'] :: GroupSummary -> Maybe Text

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications. Notifications can only be enabled on a group
--   with InsightsEnabled set to true.</li>
--   </ul>
[$sel:insightsConfiguration:GroupSummary'] :: GroupSummary -> Maybe InsightsConfiguration

-- | The ARN of the group generated based on the GroupName.
[$sel:groupARN:GroupSummary'] :: GroupSummary -> Maybe Text

-- | The unique case-sensitive name of the group.
[$sel:groupName:GroupSummary'] :: GroupSummary -> Maybe Text

-- | Create a value of <a>GroupSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterExpression:GroupSummary'</a>,
--   <a>groupSummary_filterExpression</a> - The filter expression defining
--   the parameters to include traces.
--   
--   <a>$sel:insightsConfiguration:GroupSummary'</a>,
--   <a>groupSummary_insightsConfiguration</a> - The structure containing
--   configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications. Notifications can only be enabled on a group
--   with InsightsEnabled set to true.</li>
--   </ul>
--   
--   <a>$sel:groupARN:GroupSummary'</a>, <a>groupSummary_groupARN</a> - The
--   ARN of the group generated based on the GroupName.
--   
--   <a>$sel:groupName:GroupSummary'</a>, <a>groupSummary_groupName</a> -
--   The unique case-sensitive name of the group.
newGroupSummary :: GroupSummary

-- | The filter expression defining the parameters to include traces.
groupSummary_filterExpression :: Lens' GroupSummary (Maybe Text)

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications. Notifications can only be enabled on a group
--   with InsightsEnabled set to true.</li>
--   </ul>
groupSummary_insightsConfiguration :: Lens' GroupSummary (Maybe InsightsConfiguration)

-- | The ARN of the group generated based on the GroupName.
groupSummary_groupARN :: Lens' GroupSummary (Maybe Text)

-- | The unique case-sensitive name of the group.
groupSummary_groupName :: Lens' GroupSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.GroupSummary.GroupSummary
instance GHC.Show.Show Amazonka.XRay.Types.GroupSummary.GroupSummary
instance GHC.Read.Read Amazonka.XRay.Types.GroupSummary.GroupSummary
instance GHC.Classes.Eq Amazonka.XRay.Types.GroupSummary.GroupSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.GroupSummary.GroupSummary
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.GroupSummary.GroupSummary
instance Control.DeepSeq.NFData Amazonka.XRay.Types.GroupSummary.GroupSummary


module Amazonka.XRay.Types.Group

-- | Details and metadata for a group.
--   
--   <i>See:</i> <a>newGroup</a> smart constructor.
data Group
Group' :: Maybe Text -> Maybe InsightsConfiguration -> Maybe Text -> Maybe Text -> Group

-- | The filter expression defining the parameters to include traces.
[$sel:filterExpression:Group'] :: Group -> Maybe Text

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications through Amazon EventBridge for the group.</li>
--   </ul>
[$sel:insightsConfiguration:Group'] :: Group -> Maybe InsightsConfiguration

-- | The Amazon Resource Name (ARN) of the group generated based on the
--   GroupName.
[$sel:groupARN:Group'] :: Group -> Maybe Text

-- | The unique case-sensitive name of the group.
[$sel:groupName:Group'] :: Group -> Maybe Text

-- | Create a value of <a>Group</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterExpression:Group'</a>, <a>group_filterExpression</a> -
--   The filter expression defining the parameters to include traces.
--   
--   <a>$sel:insightsConfiguration:Group'</a>,
--   <a>group_insightsConfiguration</a> - The structure containing
--   configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications through Amazon EventBridge for the group.</li>
--   </ul>
--   
--   <a>$sel:groupARN:Group'</a>, <a>group_groupARN</a> - The Amazon
--   Resource Name (ARN) of the group generated based on the GroupName.
--   
--   <a>$sel:groupName:Group'</a>, <a>group_groupName</a> - The unique
--   case-sensitive name of the group.
newGroup :: Group

-- | The filter expression defining the parameters to include traces.
group_filterExpression :: Lens' Group (Maybe Text)

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications through Amazon EventBridge for the group.</li>
--   </ul>
group_insightsConfiguration :: Lens' Group (Maybe InsightsConfiguration)

-- | The Amazon Resource Name (ARN) of the group generated based on the
--   GroupName.
group_groupARN :: Lens' Group (Maybe Text)

-- | The unique case-sensitive name of the group.
group_groupName :: Lens' Group (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.Group.Group
instance GHC.Show.Show Amazonka.XRay.Types.Group.Group
instance GHC.Read.Read Amazonka.XRay.Types.Group.Group
instance GHC.Classes.Eq Amazonka.XRay.Types.Group.Group
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.Group.Group
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.Group.Group
instance Control.DeepSeq.NFData Amazonka.XRay.Types.Group.Group


module Amazonka.XRay.Types.InstanceIdDetail

-- | A list of EC2 instance IDs corresponding to the segments in a trace.
--   
--   <i>See:</i> <a>newInstanceIdDetail</a> smart constructor.
data InstanceIdDetail
InstanceIdDetail' :: Maybe Text -> InstanceIdDetail

-- | The ID of a corresponding EC2 instance.
[$sel:id:InstanceIdDetail'] :: InstanceIdDetail -> Maybe Text

-- | Create a value of <a>InstanceIdDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:InstanceIdDetail'</a>, <a>instanceIdDetail_id</a> - The ID
--   of a corresponding EC2 instance.
newInstanceIdDetail :: InstanceIdDetail

-- | The ID of a corresponding EC2 instance.
instanceIdDetail_id :: Lens' InstanceIdDetail (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.InstanceIdDetail.InstanceIdDetail
instance GHC.Show.Show Amazonka.XRay.Types.InstanceIdDetail.InstanceIdDetail
instance GHC.Read.Read Amazonka.XRay.Types.InstanceIdDetail.InstanceIdDetail
instance GHC.Classes.Eq Amazonka.XRay.Types.InstanceIdDetail.InstanceIdDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.InstanceIdDetail.InstanceIdDetail
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.InstanceIdDetail.InstanceIdDetail
instance Control.DeepSeq.NFData Amazonka.XRay.Types.InstanceIdDetail.InstanceIdDetail


module Amazonka.XRay.Types.RequestImpactStatistics

-- | Statistics that describe how the incident has impacted a service.
--   
--   <i>See:</i> <a>newRequestImpactStatistics</a> smart constructor.
data RequestImpactStatistics
RequestImpactStatistics' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> RequestImpactStatistics

-- | The number of successful requests.
[$sel:okCount:RequestImpactStatistics'] :: RequestImpactStatistics -> Maybe Integer

-- | The number of requests that have resulted in a fault,
[$sel:faultCount:RequestImpactStatistics'] :: RequestImpactStatistics -> Maybe Integer

-- | The total number of requests to the service.
[$sel:totalCount:RequestImpactStatistics'] :: RequestImpactStatistics -> Maybe Integer

-- | Create a value of <a>RequestImpactStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:okCount:RequestImpactStatistics'</a>,
--   <a>requestImpactStatistics_okCount</a> - The number of successful
--   requests.
--   
--   <a>$sel:faultCount:RequestImpactStatistics'</a>,
--   <a>requestImpactStatistics_faultCount</a> - The number of requests
--   that have resulted in a fault,
--   
--   <a>$sel:totalCount:RequestImpactStatistics'</a>,
--   <a>requestImpactStatistics_totalCount</a> - The total number of
--   requests to the service.
newRequestImpactStatistics :: RequestImpactStatistics

-- | The number of successful requests.
requestImpactStatistics_okCount :: Lens' RequestImpactStatistics (Maybe Integer)

-- | The number of requests that have resulted in a fault,
requestImpactStatistics_faultCount :: Lens' RequestImpactStatistics (Maybe Integer)

-- | The total number of requests to the service.
requestImpactStatistics_totalCount :: Lens' RequestImpactStatistics (Maybe Integer)
instance GHC.Generics.Generic Amazonka.XRay.Types.RequestImpactStatistics.RequestImpactStatistics
instance GHC.Show.Show Amazonka.XRay.Types.RequestImpactStatistics.RequestImpactStatistics
instance GHC.Read.Read Amazonka.XRay.Types.RequestImpactStatistics.RequestImpactStatistics
instance GHC.Classes.Eq Amazonka.XRay.Types.RequestImpactStatistics.RequestImpactStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.RequestImpactStatistics.RequestImpactStatistics
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.RequestImpactStatistics.RequestImpactStatistics
instance Control.DeepSeq.NFData Amazonka.XRay.Types.RequestImpactStatistics.RequestImpactStatistics


module Amazonka.XRay.Types.ResourceARNDetail

-- | A list of resources ARNs corresponding to the segments in a trace.
--   
--   <i>See:</i> <a>newResourceARNDetail</a> smart constructor.
data ResourceARNDetail
ResourceARNDetail' :: Maybe Text -> ResourceARNDetail

-- | The ARN of a corresponding resource.
[$sel:arn:ResourceARNDetail'] :: ResourceARNDetail -> Maybe Text

-- | Create a value of <a>ResourceARNDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ResourceARNDetail'</a>, <a>resourceARNDetail_arn</a> - The
--   ARN of a corresponding resource.
newResourceARNDetail :: ResourceARNDetail

-- | The ARN of a corresponding resource.
resourceARNDetail_arn :: Lens' ResourceARNDetail (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.ResourceARNDetail.ResourceARNDetail
instance GHC.Show.Show Amazonka.XRay.Types.ResourceARNDetail.ResourceARNDetail
instance GHC.Read.Read Amazonka.XRay.Types.ResourceARNDetail.ResourceARNDetail
instance GHC.Classes.Eq Amazonka.XRay.Types.ResourceARNDetail.ResourceARNDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ResourceARNDetail.ResourceARNDetail
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ResourceARNDetail.ResourceARNDetail
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ResourceARNDetail.ResourceARNDetail


module Amazonka.XRay.Types.ResponseTimeRootCauseEntity

-- | A collection of segments and corresponding subsegments associated to a
--   response time warning.
--   
--   <i>See:</i> <a>newResponseTimeRootCauseEntity</a> smart constructor.
data ResponseTimeRootCauseEntity
ResponseTimeRootCauseEntity' :: Maybe Bool -> Maybe Double -> Maybe Text -> ResponseTimeRootCauseEntity

-- | A flag that denotes a remote subsegment.
[$sel:remote:ResponseTimeRootCauseEntity'] :: ResponseTimeRootCauseEntity -> Maybe Bool

-- | The type and messages of the exceptions.
[$sel:coverage:ResponseTimeRootCauseEntity'] :: ResponseTimeRootCauseEntity -> Maybe Double

-- | The name of the entity.
[$sel:name:ResponseTimeRootCauseEntity'] :: ResponseTimeRootCauseEntity -> Maybe Text

-- | Create a value of <a>ResponseTimeRootCauseEntity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remote:ResponseTimeRootCauseEntity'</a>,
--   <a>responseTimeRootCauseEntity_remote</a> - A flag that denotes a
--   remote subsegment.
--   
--   <a>$sel:coverage:ResponseTimeRootCauseEntity'</a>,
--   <a>responseTimeRootCauseEntity_coverage</a> - The type and messages of
--   the exceptions.
--   
--   <a>$sel:name:ResponseTimeRootCauseEntity'</a>,
--   <a>responseTimeRootCauseEntity_name</a> - The name of the entity.
newResponseTimeRootCauseEntity :: ResponseTimeRootCauseEntity

-- | A flag that denotes a remote subsegment.
responseTimeRootCauseEntity_remote :: Lens' ResponseTimeRootCauseEntity (Maybe Bool)

-- | The type and messages of the exceptions.
responseTimeRootCauseEntity_coverage :: Lens' ResponseTimeRootCauseEntity (Maybe Double)

-- | The name of the entity.
responseTimeRootCauseEntity_name :: Lens' ResponseTimeRootCauseEntity (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.ResponseTimeRootCauseEntity.ResponseTimeRootCauseEntity
instance GHC.Show.Show Amazonka.XRay.Types.ResponseTimeRootCauseEntity.ResponseTimeRootCauseEntity
instance GHC.Read.Read Amazonka.XRay.Types.ResponseTimeRootCauseEntity.ResponseTimeRootCauseEntity
instance GHC.Classes.Eq Amazonka.XRay.Types.ResponseTimeRootCauseEntity.ResponseTimeRootCauseEntity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ResponseTimeRootCauseEntity.ResponseTimeRootCauseEntity
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ResponseTimeRootCauseEntity.ResponseTimeRootCauseEntity
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ResponseTimeRootCauseEntity.ResponseTimeRootCauseEntity


module Amazonka.XRay.Types.ResponseTimeRootCauseService

-- | A collection of fields identifying the service in a response time
--   warning.
--   
--   <i>See:</i> <a>newResponseTimeRootCauseService</a> smart constructor.
data ResponseTimeRootCauseService
ResponseTimeRootCauseService' :: Maybe [ResponseTimeRootCauseEntity] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> ResponseTimeRootCauseService

-- | The path of root cause entities found on the service.
[$sel:entityPath:ResponseTimeRootCauseService'] :: ResponseTimeRootCauseService -> Maybe [ResponseTimeRootCauseEntity]

-- | The account ID associated to the service.
[$sel:accountId:ResponseTimeRootCauseService'] :: ResponseTimeRootCauseService -> Maybe Text

-- | A collection of associated service names.
[$sel:names:ResponseTimeRootCauseService'] :: ResponseTimeRootCauseService -> Maybe [Text]

-- | The service name.
[$sel:name:ResponseTimeRootCauseService'] :: ResponseTimeRootCauseService -> Maybe Text

-- | A Boolean value indicating if the service is inferred from the trace.
[$sel:inferred:ResponseTimeRootCauseService'] :: ResponseTimeRootCauseService -> Maybe Bool

-- | The type associated to the service.
[$sel:type':ResponseTimeRootCauseService'] :: ResponseTimeRootCauseService -> Maybe Text

-- | Create a value of <a>ResponseTimeRootCauseService</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityPath:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_entityPath</a> - The path of root
--   cause entities found on the service.
--   
--   <a>$sel:accountId:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_accountId</a> - The account ID
--   associated to the service.
--   
--   <a>$sel:names:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_names</a> - A collection of associated
--   service names.
--   
--   <a>$sel:name:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_name</a> - The service name.
--   
--   <a>$sel:inferred:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_inferred</a> - A Boolean value
--   indicating if the service is inferred from the trace.
--   
--   <a>$sel:type':ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_type</a> - The type associated to the
--   service.
newResponseTimeRootCauseService :: ResponseTimeRootCauseService

-- | The path of root cause entities found on the service.
responseTimeRootCauseService_entityPath :: Lens' ResponseTimeRootCauseService (Maybe [ResponseTimeRootCauseEntity])

-- | The account ID associated to the service.
responseTimeRootCauseService_accountId :: Lens' ResponseTimeRootCauseService (Maybe Text)

-- | A collection of associated service names.
responseTimeRootCauseService_names :: Lens' ResponseTimeRootCauseService (Maybe [Text])

-- | The service name.
responseTimeRootCauseService_name :: Lens' ResponseTimeRootCauseService (Maybe Text)

-- | A Boolean value indicating if the service is inferred from the trace.
responseTimeRootCauseService_inferred :: Lens' ResponseTimeRootCauseService (Maybe Bool)

-- | The type associated to the service.
responseTimeRootCauseService_type :: Lens' ResponseTimeRootCauseService (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.ResponseTimeRootCauseService.ResponseTimeRootCauseService
instance GHC.Show.Show Amazonka.XRay.Types.ResponseTimeRootCauseService.ResponseTimeRootCauseService
instance GHC.Read.Read Amazonka.XRay.Types.ResponseTimeRootCauseService.ResponseTimeRootCauseService
instance GHC.Classes.Eq Amazonka.XRay.Types.ResponseTimeRootCauseService.ResponseTimeRootCauseService
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ResponseTimeRootCauseService.ResponseTimeRootCauseService
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ResponseTimeRootCauseService.ResponseTimeRootCauseService
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ResponseTimeRootCauseService.ResponseTimeRootCauseService


module Amazonka.XRay.Types.ResponseTimeRootCause

-- | The root cause information for a response time warning.
--   
--   <i>See:</i> <a>newResponseTimeRootCause</a> smart constructor.
data ResponseTimeRootCause
ResponseTimeRootCause' :: Maybe Bool -> Maybe [ResponseTimeRootCauseService] -> ResponseTimeRootCause

-- | A flag that denotes that the root cause impacts the trace client.
[$sel:clientImpacting:ResponseTimeRootCause'] :: ResponseTimeRootCause -> Maybe Bool

-- | A list of corresponding services. A service identifies a segment and
--   contains a name, account ID, type, and inferred flag.
[$sel:services:ResponseTimeRootCause'] :: ResponseTimeRootCause -> Maybe [ResponseTimeRootCauseService]

-- | Create a value of <a>ResponseTimeRootCause</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientImpacting:ResponseTimeRootCause'</a>,
--   <a>responseTimeRootCause_clientImpacting</a> - A flag that denotes
--   that the root cause impacts the trace client.
--   
--   <a>$sel:services:ResponseTimeRootCause'</a>,
--   <a>responseTimeRootCause_services</a> - A list of corresponding
--   services. A service identifies a segment and contains a name, account
--   ID, type, and inferred flag.
newResponseTimeRootCause :: ResponseTimeRootCause

-- | A flag that denotes that the root cause impacts the trace client.
responseTimeRootCause_clientImpacting :: Lens' ResponseTimeRootCause (Maybe Bool)

-- | A list of corresponding services. A service identifies a segment and
--   contains a name, account ID, type, and inferred flag.
responseTimeRootCause_services :: Lens' ResponseTimeRootCause (Maybe [ResponseTimeRootCauseService])
instance GHC.Generics.Generic Amazonka.XRay.Types.ResponseTimeRootCause.ResponseTimeRootCause
instance GHC.Show.Show Amazonka.XRay.Types.ResponseTimeRootCause.ResponseTimeRootCause
instance GHC.Read.Read Amazonka.XRay.Types.ResponseTimeRootCause.ResponseTimeRootCause
instance GHC.Classes.Eq Amazonka.XRay.Types.ResponseTimeRootCause.ResponseTimeRootCause
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ResponseTimeRootCause.ResponseTimeRootCause
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ResponseTimeRootCause.ResponseTimeRootCause
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ResponseTimeRootCause.ResponseTimeRootCause


module Amazonka.XRay.Types.RootCauseException

-- | The exception associated with a root cause.
--   
--   <i>See:</i> <a>newRootCauseException</a> smart constructor.
data RootCauseException
RootCauseException' :: Maybe Text -> Maybe Text -> RootCauseException

-- | The name of the exception.
[$sel:name:RootCauseException'] :: RootCauseException -> Maybe Text

-- | The message of the exception.
[$sel:message:RootCauseException'] :: RootCauseException -> Maybe Text

-- | Create a value of <a>RootCauseException</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RootCauseException'</a>, <a>rootCauseException_name</a> -
--   The name of the exception.
--   
--   <a>$sel:message:RootCauseException'</a>,
--   <a>rootCauseException_message</a> - The message of the exception.
newRootCauseException :: RootCauseException

-- | The name of the exception.
rootCauseException_name :: Lens' RootCauseException (Maybe Text)

-- | The message of the exception.
rootCauseException_message :: Lens' RootCauseException (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.RootCauseException.RootCauseException
instance GHC.Show.Show Amazonka.XRay.Types.RootCauseException.RootCauseException
instance GHC.Read.Read Amazonka.XRay.Types.RootCauseException.RootCauseException
instance GHC.Classes.Eq Amazonka.XRay.Types.RootCauseException.RootCauseException
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.RootCauseException.RootCauseException
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.RootCauseException.RootCauseException
instance Control.DeepSeq.NFData Amazonka.XRay.Types.RootCauseException.RootCauseException


module Amazonka.XRay.Types.FaultRootCauseEntity

-- | A collection of segments and corresponding subsegments associated to a
--   trace summary fault error.
--   
--   <i>See:</i> <a>newFaultRootCauseEntity</a> smart constructor.
data FaultRootCauseEntity
FaultRootCauseEntity' :: Maybe [RootCauseException] -> Maybe Bool -> Maybe Text -> FaultRootCauseEntity

-- | The types and messages of the exceptions.
[$sel:exceptions:FaultRootCauseEntity'] :: FaultRootCauseEntity -> Maybe [RootCauseException]

-- | A flag that denotes a remote subsegment.
[$sel:remote:FaultRootCauseEntity'] :: FaultRootCauseEntity -> Maybe Bool

-- | The name of the entity.
[$sel:name:FaultRootCauseEntity'] :: FaultRootCauseEntity -> Maybe Text

-- | Create a value of <a>FaultRootCauseEntity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exceptions:FaultRootCauseEntity'</a>,
--   <a>faultRootCauseEntity_exceptions</a> - The types and messages of the
--   exceptions.
--   
--   <a>$sel:remote:FaultRootCauseEntity'</a>,
--   <a>faultRootCauseEntity_remote</a> - A flag that denotes a remote
--   subsegment.
--   
--   <a>$sel:name:FaultRootCauseEntity'</a>,
--   <a>faultRootCauseEntity_name</a> - The name of the entity.
newFaultRootCauseEntity :: FaultRootCauseEntity

-- | The types and messages of the exceptions.
faultRootCauseEntity_exceptions :: Lens' FaultRootCauseEntity (Maybe [RootCauseException])

-- | A flag that denotes a remote subsegment.
faultRootCauseEntity_remote :: Lens' FaultRootCauseEntity (Maybe Bool)

-- | The name of the entity.
faultRootCauseEntity_name :: Lens' FaultRootCauseEntity (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.FaultRootCauseEntity.FaultRootCauseEntity
instance GHC.Show.Show Amazonka.XRay.Types.FaultRootCauseEntity.FaultRootCauseEntity
instance GHC.Read.Read Amazonka.XRay.Types.FaultRootCauseEntity.FaultRootCauseEntity
instance GHC.Classes.Eq Amazonka.XRay.Types.FaultRootCauseEntity.FaultRootCauseEntity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.FaultRootCauseEntity.FaultRootCauseEntity
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.FaultRootCauseEntity.FaultRootCauseEntity
instance Control.DeepSeq.NFData Amazonka.XRay.Types.FaultRootCauseEntity.FaultRootCauseEntity


module Amazonka.XRay.Types.FaultRootCauseService

-- | A collection of fields identifying the services in a trace summary
--   fault.
--   
--   <i>See:</i> <a>newFaultRootCauseService</a> smart constructor.
data FaultRootCauseService
FaultRootCauseService' :: Maybe [FaultRootCauseEntity] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> FaultRootCauseService

-- | The path of root cause entities found on the service.
[$sel:entityPath:FaultRootCauseService'] :: FaultRootCauseService -> Maybe [FaultRootCauseEntity]

-- | The account ID associated to the service.
[$sel:accountId:FaultRootCauseService'] :: FaultRootCauseService -> Maybe Text

-- | A collection of associated service names.
[$sel:names:FaultRootCauseService'] :: FaultRootCauseService -> Maybe [Text]

-- | The service name.
[$sel:name:FaultRootCauseService'] :: FaultRootCauseService -> Maybe Text

-- | A Boolean value indicating if the service is inferred from the trace.
[$sel:inferred:FaultRootCauseService'] :: FaultRootCauseService -> Maybe Bool

-- | The type associated to the service.
[$sel:type':FaultRootCauseService'] :: FaultRootCauseService -> Maybe Text

-- | Create a value of <a>FaultRootCauseService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityPath:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_entityPath</a> - The path of root cause
--   entities found on the service.
--   
--   <a>$sel:accountId:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_accountId</a> - The account ID associated to
--   the service.
--   
--   <a>$sel:names:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_names</a> - A collection of associated
--   service names.
--   
--   <a>$sel:name:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_name</a> - The service name.
--   
--   <a>$sel:inferred:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_inferred</a> - A Boolean value indicating if
--   the service is inferred from the trace.
--   
--   <a>$sel:type':FaultRootCauseService'</a>,
--   <a>faultRootCauseService_type</a> - The type associated to the
--   service.
newFaultRootCauseService :: FaultRootCauseService

-- | The path of root cause entities found on the service.
faultRootCauseService_entityPath :: Lens' FaultRootCauseService (Maybe [FaultRootCauseEntity])

-- | The account ID associated to the service.
faultRootCauseService_accountId :: Lens' FaultRootCauseService (Maybe Text)

-- | A collection of associated service names.
faultRootCauseService_names :: Lens' FaultRootCauseService (Maybe [Text])

-- | The service name.
faultRootCauseService_name :: Lens' FaultRootCauseService (Maybe Text)

-- | A Boolean value indicating if the service is inferred from the trace.
faultRootCauseService_inferred :: Lens' FaultRootCauseService (Maybe Bool)

-- | The type associated to the service.
faultRootCauseService_type :: Lens' FaultRootCauseService (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.FaultRootCauseService.FaultRootCauseService
instance GHC.Show.Show Amazonka.XRay.Types.FaultRootCauseService.FaultRootCauseService
instance GHC.Read.Read Amazonka.XRay.Types.FaultRootCauseService.FaultRootCauseService
instance GHC.Classes.Eq Amazonka.XRay.Types.FaultRootCauseService.FaultRootCauseService
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.FaultRootCauseService.FaultRootCauseService
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.FaultRootCauseService.FaultRootCauseService
instance Control.DeepSeq.NFData Amazonka.XRay.Types.FaultRootCauseService.FaultRootCauseService


module Amazonka.XRay.Types.FaultRootCause

-- | The root cause information for a trace summary fault.
--   
--   <i>See:</i> <a>newFaultRootCause</a> smart constructor.
data FaultRootCause
FaultRootCause' :: Maybe Bool -> Maybe [FaultRootCauseService] -> FaultRootCause

-- | A flag that denotes that the root cause impacts the trace client.
[$sel:clientImpacting:FaultRootCause'] :: FaultRootCause -> Maybe Bool

-- | A list of corresponding services. A service identifies a segment and
--   it contains a name, account ID, type, and inferred flag.
[$sel:services:FaultRootCause'] :: FaultRootCause -> Maybe [FaultRootCauseService]

-- | Create a value of <a>FaultRootCause</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientImpacting:FaultRootCause'</a>,
--   <a>faultRootCause_clientImpacting</a> - A flag that denotes that the
--   root cause impacts the trace client.
--   
--   <a>$sel:services:FaultRootCause'</a>, <a>faultRootCause_services</a> -
--   A list of corresponding services. A service identifies a segment and
--   it contains a name, account ID, type, and inferred flag.
newFaultRootCause :: FaultRootCause

-- | A flag that denotes that the root cause impacts the trace client.
faultRootCause_clientImpacting :: Lens' FaultRootCause (Maybe Bool)

-- | A list of corresponding services. A service identifies a segment and
--   it contains a name, account ID, type, and inferred flag.
faultRootCause_services :: Lens' FaultRootCause (Maybe [FaultRootCauseService])
instance GHC.Generics.Generic Amazonka.XRay.Types.FaultRootCause.FaultRootCause
instance GHC.Show.Show Amazonka.XRay.Types.FaultRootCause.FaultRootCause
instance GHC.Read.Read Amazonka.XRay.Types.FaultRootCause.FaultRootCause
instance GHC.Classes.Eq Amazonka.XRay.Types.FaultRootCause.FaultRootCause
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.FaultRootCause.FaultRootCause
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.FaultRootCause.FaultRootCause
instance Control.DeepSeq.NFData Amazonka.XRay.Types.FaultRootCause.FaultRootCause


module Amazonka.XRay.Types.ErrorRootCauseEntity

-- | A collection of segments and corresponding subsegments associated to a
--   trace summary error.
--   
--   <i>See:</i> <a>newErrorRootCauseEntity</a> smart constructor.
data ErrorRootCauseEntity
ErrorRootCauseEntity' :: Maybe [RootCauseException] -> Maybe Bool -> Maybe Text -> ErrorRootCauseEntity

-- | The types and messages of the exceptions.
[$sel:exceptions:ErrorRootCauseEntity'] :: ErrorRootCauseEntity -> Maybe [RootCauseException]

-- | A flag that denotes a remote subsegment.
[$sel:remote:ErrorRootCauseEntity'] :: ErrorRootCauseEntity -> Maybe Bool

-- | The name of the entity.
[$sel:name:ErrorRootCauseEntity'] :: ErrorRootCauseEntity -> Maybe Text

-- | Create a value of <a>ErrorRootCauseEntity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exceptions:ErrorRootCauseEntity'</a>,
--   <a>errorRootCauseEntity_exceptions</a> - The types and messages of the
--   exceptions.
--   
--   <a>$sel:remote:ErrorRootCauseEntity'</a>,
--   <a>errorRootCauseEntity_remote</a> - A flag that denotes a remote
--   subsegment.
--   
--   <a>$sel:name:ErrorRootCauseEntity'</a>,
--   <a>errorRootCauseEntity_name</a> - The name of the entity.
newErrorRootCauseEntity :: ErrorRootCauseEntity

-- | The types and messages of the exceptions.
errorRootCauseEntity_exceptions :: Lens' ErrorRootCauseEntity (Maybe [RootCauseException])

-- | A flag that denotes a remote subsegment.
errorRootCauseEntity_remote :: Lens' ErrorRootCauseEntity (Maybe Bool)

-- | The name of the entity.
errorRootCauseEntity_name :: Lens' ErrorRootCauseEntity (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.ErrorRootCauseEntity.ErrorRootCauseEntity
instance GHC.Show.Show Amazonka.XRay.Types.ErrorRootCauseEntity.ErrorRootCauseEntity
instance GHC.Read.Read Amazonka.XRay.Types.ErrorRootCauseEntity.ErrorRootCauseEntity
instance GHC.Classes.Eq Amazonka.XRay.Types.ErrorRootCauseEntity.ErrorRootCauseEntity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ErrorRootCauseEntity.ErrorRootCauseEntity
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ErrorRootCauseEntity.ErrorRootCauseEntity
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ErrorRootCauseEntity.ErrorRootCauseEntity


module Amazonka.XRay.Types.ErrorRootCauseService

-- | A collection of fields identifying the services in a trace summary
--   error.
--   
--   <i>See:</i> <a>newErrorRootCauseService</a> smart constructor.
data ErrorRootCauseService
ErrorRootCauseService' :: Maybe [ErrorRootCauseEntity] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> ErrorRootCauseService

-- | The path of root cause entities found on the service.
[$sel:entityPath:ErrorRootCauseService'] :: ErrorRootCauseService -> Maybe [ErrorRootCauseEntity]

-- | The account ID associated to the service.
[$sel:accountId:ErrorRootCauseService'] :: ErrorRootCauseService -> Maybe Text

-- | A collection of associated service names.
[$sel:names:ErrorRootCauseService'] :: ErrorRootCauseService -> Maybe [Text]

-- | The service name.
[$sel:name:ErrorRootCauseService'] :: ErrorRootCauseService -> Maybe Text

-- | A Boolean value indicating if the service is inferred from the trace.
[$sel:inferred:ErrorRootCauseService'] :: ErrorRootCauseService -> Maybe Bool

-- | The type associated to the service.
[$sel:type':ErrorRootCauseService'] :: ErrorRootCauseService -> Maybe Text

-- | Create a value of <a>ErrorRootCauseService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityPath:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_entityPath</a> - The path of root cause
--   entities found on the service.
--   
--   <a>$sel:accountId:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_accountId</a> - The account ID associated to
--   the service.
--   
--   <a>$sel:names:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_names</a> - A collection of associated
--   service names.
--   
--   <a>$sel:name:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_name</a> - The service name.
--   
--   <a>$sel:inferred:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_inferred</a> - A Boolean value indicating if
--   the service is inferred from the trace.
--   
--   <a>$sel:type':ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_type</a> - The type associated to the
--   service.
newErrorRootCauseService :: ErrorRootCauseService

-- | The path of root cause entities found on the service.
errorRootCauseService_entityPath :: Lens' ErrorRootCauseService (Maybe [ErrorRootCauseEntity])

-- | The account ID associated to the service.
errorRootCauseService_accountId :: Lens' ErrorRootCauseService (Maybe Text)

-- | A collection of associated service names.
errorRootCauseService_names :: Lens' ErrorRootCauseService (Maybe [Text])

-- | The service name.
errorRootCauseService_name :: Lens' ErrorRootCauseService (Maybe Text)

-- | A Boolean value indicating if the service is inferred from the trace.
errorRootCauseService_inferred :: Lens' ErrorRootCauseService (Maybe Bool)

-- | The type associated to the service.
errorRootCauseService_type :: Lens' ErrorRootCauseService (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.ErrorRootCauseService.ErrorRootCauseService
instance GHC.Show.Show Amazonka.XRay.Types.ErrorRootCauseService.ErrorRootCauseService
instance GHC.Read.Read Amazonka.XRay.Types.ErrorRootCauseService.ErrorRootCauseService
instance GHC.Classes.Eq Amazonka.XRay.Types.ErrorRootCauseService.ErrorRootCauseService
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ErrorRootCauseService.ErrorRootCauseService
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ErrorRootCauseService.ErrorRootCauseService
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ErrorRootCauseService.ErrorRootCauseService


module Amazonka.XRay.Types.ErrorRootCause

-- | The root cause of a trace summary error.
--   
--   <i>See:</i> <a>newErrorRootCause</a> smart constructor.
data ErrorRootCause
ErrorRootCause' :: Maybe Bool -> Maybe [ErrorRootCauseService] -> ErrorRootCause

-- | A flag that denotes that the root cause impacts the trace client.
[$sel:clientImpacting:ErrorRootCause'] :: ErrorRootCause -> Maybe Bool

-- | A list of services corresponding to an error. A service identifies a
--   segment and it contains a name, account ID, type, and inferred flag.
[$sel:services:ErrorRootCause'] :: ErrorRootCause -> Maybe [ErrorRootCauseService]

-- | Create a value of <a>ErrorRootCause</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientImpacting:ErrorRootCause'</a>,
--   <a>errorRootCause_clientImpacting</a> - A flag that denotes that the
--   root cause impacts the trace client.
--   
--   <a>$sel:services:ErrorRootCause'</a>, <a>errorRootCause_services</a> -
--   A list of services corresponding to an error. A service identifies a
--   segment and it contains a name, account ID, type, and inferred flag.
newErrorRootCause :: ErrorRootCause

-- | A flag that denotes that the root cause impacts the trace client.
errorRootCause_clientImpacting :: Lens' ErrorRootCause (Maybe Bool)

-- | A list of services corresponding to an error. A service identifies a
--   segment and it contains a name, account ID, type, and inferred flag.
errorRootCause_services :: Lens' ErrorRootCause (Maybe [ErrorRootCauseService])
instance GHC.Generics.Generic Amazonka.XRay.Types.ErrorRootCause.ErrorRootCause
instance GHC.Show.Show Amazonka.XRay.Types.ErrorRootCause.ErrorRootCause
instance GHC.Read.Read Amazonka.XRay.Types.ErrorRootCause.ErrorRootCause
instance GHC.Classes.Eq Amazonka.XRay.Types.ErrorRootCause.ErrorRootCause
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ErrorRootCause.ErrorRootCause
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ErrorRootCause.ErrorRootCause
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ErrorRootCause.ErrorRootCause


module Amazonka.XRay.Types.SamplingRule

-- | A sampling rule that services use to decide whether to instrument a
--   request. Rule fields can match properties of the service, or
--   properties of a request. The service can ignore rules that don't match
--   its properties.
--   
--   <i>See:</i> <a>newSamplingRule</a> smart constructor.
data SamplingRule
SamplingRule' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> Natural -> Double -> Natural -> Text -> Text -> Text -> Text -> Text -> Natural -> SamplingRule

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
[$sel:ruleName:SamplingRule'] :: SamplingRule -> Maybe Text

-- | Matches attributes derived from the request.
[$sel:attributes:SamplingRule'] :: SamplingRule -> Maybe (HashMap Text Text)

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
[$sel:ruleARN:SamplingRule'] :: SamplingRule -> Maybe Text

-- | Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
[$sel:resourceARN:SamplingRule'] :: SamplingRule -> Text

-- | The priority of the sampling rule.
[$sel:priority:SamplingRule'] :: SamplingRule -> Natural

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
[$sel:fixedRate:SamplingRule'] :: SamplingRule -> Double

-- | A fixed number of matching requests to instrument per second, prior to
--   applying the fixed rate. The reservoir is not used directly by
--   services, but applies to all services using the rule collectively.
[$sel:reservoirSize:SamplingRule'] :: SamplingRule -> Natural

-- | Matches the <tt>name</tt> that the service uses to identify itself in
--   segments.
[$sel:serviceName:SamplingRule'] :: SamplingRule -> Text

-- | Matches the <tt>origin</tt> that the service uses to identify its type
--   in segments.
[$sel:serviceType:SamplingRule'] :: SamplingRule -> Text

-- | Matches the hostname from a request URL.
[$sel:host:SamplingRule'] :: SamplingRule -> Text

-- | Matches the HTTP method of a request.
[$sel:hTTPMethod:SamplingRule'] :: SamplingRule -> Text

-- | Matches the path from a request URL.
[$sel:uRLPath:SamplingRule'] :: SamplingRule -> Text

-- | The version of the sampling rule format (<tt>1</tt>).
[$sel:version:SamplingRule'] :: SamplingRule -> Natural

-- | Create a value of <a>SamplingRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleName:SamplingRule'</a>, <a>samplingRule_ruleName</a> - The
--   name of the sampling rule. Specify a rule by either name or ARN, but
--   not both.
--   
--   <a>$sel:attributes:SamplingRule'</a>, <a>samplingRule_attributes</a> -
--   Matches attributes derived from the request.
--   
--   <a>$sel:ruleARN:SamplingRule'</a>, <a>samplingRule_ruleARN</a> - The
--   ARN of the sampling rule. Specify a rule by either name or ARN, but
--   not both.
--   
--   <a>$sel:resourceARN:SamplingRule'</a>, <a>samplingRule_resourceARN</a>
--   - Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
--   
--   <a>$sel:priority:SamplingRule'</a>, <a>samplingRule_priority</a> - The
--   priority of the sampling rule.
--   
--   <a>$sel:fixedRate:SamplingRule'</a>, <a>samplingRule_fixedRate</a> -
--   The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
--   
--   <a>$sel:reservoirSize:SamplingRule'</a>,
--   <a>samplingRule_reservoirSize</a> - A fixed number of matching
--   requests to instrument per second, prior to applying the fixed rate.
--   The reservoir is not used directly by services, but applies to all
--   services using the rule collectively.
--   
--   <a>$sel:serviceName:SamplingRule'</a>, <a>samplingRule_serviceName</a>
--   - Matches the <tt>name</tt> that the service uses to identify itself
--   in segments.
--   
--   <a>$sel:serviceType:SamplingRule'</a>, <a>samplingRule_serviceType</a>
--   - Matches the <tt>origin</tt> that the service uses to identify its
--   type in segments.
--   
--   <a>$sel:host:SamplingRule'</a>, <a>samplingRule_host</a> - Matches the
--   hostname from a request URL.
--   
--   <a>$sel:hTTPMethod:SamplingRule'</a>, <a>samplingRule_hTTPMethod</a> -
--   Matches the HTTP method of a request.
--   
--   <a>$sel:uRLPath:SamplingRule'</a>, <a>samplingRule_uRLPath</a> -
--   Matches the path from a request URL.
--   
--   <a>$sel:version:SamplingRule'</a>, <a>samplingRule_version</a> - The
--   version of the sampling rule format (<tt>1</tt>).
newSamplingRule :: Text -> Natural -> Double -> Natural -> Text -> Text -> Text -> Text -> Text -> Natural -> SamplingRule

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
samplingRule_ruleName :: Lens' SamplingRule (Maybe Text)

-- | Matches attributes derived from the request.
samplingRule_attributes :: Lens' SamplingRule (Maybe (HashMap Text Text))

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
samplingRule_ruleARN :: Lens' SamplingRule (Maybe Text)

-- | Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
samplingRule_resourceARN :: Lens' SamplingRule Text

-- | The priority of the sampling rule.
samplingRule_priority :: Lens' SamplingRule Natural

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
samplingRule_fixedRate :: Lens' SamplingRule Double

-- | A fixed number of matching requests to instrument per second, prior to
--   applying the fixed rate. The reservoir is not used directly by
--   services, but applies to all services using the rule collectively.
samplingRule_reservoirSize :: Lens' SamplingRule Natural

-- | Matches the <tt>name</tt> that the service uses to identify itself in
--   segments.
samplingRule_serviceName :: Lens' SamplingRule Text

-- | Matches the <tt>origin</tt> that the service uses to identify its type
--   in segments.
samplingRule_serviceType :: Lens' SamplingRule Text

-- | Matches the hostname from a request URL.
samplingRule_host :: Lens' SamplingRule Text

-- | Matches the HTTP method of a request.
samplingRule_hTTPMethod :: Lens' SamplingRule Text

-- | Matches the path from a request URL.
samplingRule_uRLPath :: Lens' SamplingRule Text

-- | The version of the sampling rule format (<tt>1</tt>).
samplingRule_version :: Lens' SamplingRule Natural
instance GHC.Generics.Generic Amazonka.XRay.Types.SamplingRule.SamplingRule
instance GHC.Show.Show Amazonka.XRay.Types.SamplingRule.SamplingRule
instance GHC.Read.Read Amazonka.XRay.Types.SamplingRule.SamplingRule
instance GHC.Classes.Eq Amazonka.XRay.Types.SamplingRule.SamplingRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.SamplingRule.SamplingRule
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.SamplingRule.SamplingRule
instance Control.DeepSeq.NFData Amazonka.XRay.Types.SamplingRule.SamplingRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.SamplingRule.SamplingRule


module Amazonka.XRay.Types.SamplingRuleRecord

-- | A <a>SamplingRule</a> and its metadata.
--   
--   <i>See:</i> <a>newSamplingRuleRecord</a> smart constructor.
data SamplingRuleRecord
SamplingRuleRecord' :: Maybe POSIX -> Maybe SamplingRule -> Maybe POSIX -> SamplingRuleRecord

-- | When the rule was last modified.
[$sel:modifiedAt:SamplingRuleRecord'] :: SamplingRuleRecord -> Maybe POSIX

-- | The sampling rule.
[$sel:samplingRule:SamplingRuleRecord'] :: SamplingRuleRecord -> Maybe SamplingRule

-- | When the rule was created.
[$sel:createdAt:SamplingRuleRecord'] :: SamplingRuleRecord -> Maybe POSIX

-- | Create a value of <a>SamplingRuleRecord</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modifiedAt:SamplingRuleRecord'</a>,
--   <a>samplingRuleRecord_modifiedAt</a> - When the rule was last
--   modified.
--   
--   <a>$sel:samplingRule:SamplingRuleRecord'</a>,
--   <a>samplingRuleRecord_samplingRule</a> - The sampling rule.
--   
--   <a>$sel:createdAt:SamplingRuleRecord'</a>,
--   <a>samplingRuleRecord_createdAt</a> - When the rule was created.
newSamplingRuleRecord :: SamplingRuleRecord

-- | When the rule was last modified.
samplingRuleRecord_modifiedAt :: Lens' SamplingRuleRecord (Maybe UTCTime)

-- | The sampling rule.
samplingRuleRecord_samplingRule :: Lens' SamplingRuleRecord (Maybe SamplingRule)

-- | When the rule was created.
samplingRuleRecord_createdAt :: Lens' SamplingRuleRecord (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.XRay.Types.SamplingRuleRecord.SamplingRuleRecord
instance GHC.Show.Show Amazonka.XRay.Types.SamplingRuleRecord.SamplingRuleRecord
instance GHC.Read.Read Amazonka.XRay.Types.SamplingRuleRecord.SamplingRuleRecord
instance GHC.Classes.Eq Amazonka.XRay.Types.SamplingRuleRecord.SamplingRuleRecord
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.SamplingRuleRecord.SamplingRuleRecord
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.SamplingRuleRecord.SamplingRuleRecord
instance Control.DeepSeq.NFData Amazonka.XRay.Types.SamplingRuleRecord.SamplingRuleRecord


module Amazonka.XRay.Types.SamplingRuleUpdate

-- | A document specifying changes to a sampling rule's configuration.
--   
--   <i>See:</i> <a>newSamplingRuleUpdate</a> smart constructor.
data SamplingRuleUpdate
SamplingRuleUpdate' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Double -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SamplingRuleUpdate

-- | Matches the HTTP method of a request.
[$sel:hTTPMethod:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | The priority of the sampling rule.
[$sel:priority:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Int

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
[$sel:ruleName:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | A fixed number of matching requests to instrument per second, prior to
--   applying the fixed rate. The reservoir is not used directly by
--   services, but applies to all services using the rule collectively.
[$sel:reservoirSize:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Int

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
[$sel:fixedRate:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Double

-- | Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
[$sel:resourceARN:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | Matches attributes derived from the request.
[$sel:attributes:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe (HashMap Text Text)

-- | Matches the <tt>name</tt> that the service uses to identify itself in
--   segments.
[$sel:serviceName:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | Matches the <tt>origin</tt> that the service uses to identify its type
--   in segments.
[$sel:serviceType:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | Matches the hostname from a request URL.
[$sel:host:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
[$sel:ruleARN:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | Matches the path from a request URL.
[$sel:uRLPath:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | Create a value of <a>SamplingRuleUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hTTPMethod:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_hTTPMethod</a> - Matches the HTTP method of a
--   request.
--   
--   <a>$sel:priority:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_priority</a> - The priority of the sampling
--   rule.
--   
--   <a>$sel:ruleName:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_ruleName</a> - The name of the sampling rule.
--   Specify a rule by either name or ARN, but not both.
--   
--   <a>$sel:reservoirSize:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_reservoirSize</a> - A fixed number of matching
--   requests to instrument per second, prior to applying the fixed rate.
--   The reservoir is not used directly by services, but applies to all
--   services using the rule collectively.
--   
--   <a>$sel:fixedRate:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_fixedRate</a> - The percentage of matching
--   requests to instrument, after the reservoir is exhausted.
--   
--   <a>$sel:resourceARN:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_resourceARN</a> - Matches the ARN of the Amazon
--   Web Services resource on which the service runs.
--   
--   <a>$sel:attributes:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_attributes</a> - Matches attributes derived from
--   the request.
--   
--   <a>$sel:serviceName:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_serviceName</a> - Matches the <tt>name</tt> that
--   the service uses to identify itself in segments.
--   
--   <a>$sel:serviceType:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_serviceType</a> - Matches the <tt>origin</tt>
--   that the service uses to identify its type in segments.
--   
--   <a>$sel:host:SamplingRuleUpdate'</a>, <a>samplingRuleUpdate_host</a> -
--   Matches the hostname from a request URL.
--   
--   <a>$sel:ruleARN:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_ruleARN</a> - The ARN of the sampling rule.
--   Specify a rule by either name or ARN, but not both.
--   
--   <a>$sel:uRLPath:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_uRLPath</a> - Matches the path from a request
--   URL.
newSamplingRuleUpdate :: SamplingRuleUpdate

-- | Matches the HTTP method of a request.
samplingRuleUpdate_hTTPMethod :: Lens' SamplingRuleUpdate (Maybe Text)

-- | The priority of the sampling rule.
samplingRuleUpdate_priority :: Lens' SamplingRuleUpdate (Maybe Int)

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
samplingRuleUpdate_ruleName :: Lens' SamplingRuleUpdate (Maybe Text)

-- | A fixed number of matching requests to instrument per second, prior to
--   applying the fixed rate. The reservoir is not used directly by
--   services, but applies to all services using the rule collectively.
samplingRuleUpdate_reservoirSize :: Lens' SamplingRuleUpdate (Maybe Int)

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
samplingRuleUpdate_fixedRate :: Lens' SamplingRuleUpdate (Maybe Double)

-- | Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
samplingRuleUpdate_resourceARN :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Matches attributes derived from the request.
samplingRuleUpdate_attributes :: Lens' SamplingRuleUpdate (Maybe (HashMap Text Text))

-- | Matches the <tt>name</tt> that the service uses to identify itself in
--   segments.
samplingRuleUpdate_serviceName :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Matches the <tt>origin</tt> that the service uses to identify its type
--   in segments.
samplingRuleUpdate_serviceType :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Matches the hostname from a request URL.
samplingRuleUpdate_host :: Lens' SamplingRuleUpdate (Maybe Text)

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
samplingRuleUpdate_ruleARN :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Matches the path from a request URL.
samplingRuleUpdate_uRLPath :: Lens' SamplingRuleUpdate (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.SamplingRuleUpdate.SamplingRuleUpdate
instance GHC.Show.Show Amazonka.XRay.Types.SamplingRuleUpdate.SamplingRuleUpdate
instance GHC.Read.Read Amazonka.XRay.Types.SamplingRuleUpdate.SamplingRuleUpdate
instance GHC.Classes.Eq Amazonka.XRay.Types.SamplingRuleUpdate.SamplingRuleUpdate
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.SamplingRuleUpdate.SamplingRuleUpdate
instance Control.DeepSeq.NFData Amazonka.XRay.Types.SamplingRuleUpdate.SamplingRuleUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.SamplingRuleUpdate.SamplingRuleUpdate


module Amazonka.XRay.Types.SamplingStatisticSummary

-- | Aggregated request sampling data for a sampling rule across all
--   services for a 10-second window.
--   
--   <i>See:</i> <a>newSamplingStatisticSummary</a> smart constructor.
data SamplingStatisticSummary
SamplingStatisticSummary' :: Maybe Int -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Int -> SamplingStatisticSummary

-- | The number of requests that matched the rule.
[$sel:requestCount:SamplingStatisticSummary'] :: SamplingStatisticSummary -> Maybe Int

-- | The number of requests recorded with borrowed reservoir quota.
[$sel:borrowCount:SamplingStatisticSummary'] :: SamplingStatisticSummary -> Maybe Int

-- | The name of the sampling rule.
[$sel:ruleName:SamplingStatisticSummary'] :: SamplingStatisticSummary -> Maybe Text

-- | The start time of the reporting window.
[$sel:timestamp:SamplingStatisticSummary'] :: SamplingStatisticSummary -> Maybe POSIX

-- | The number of requests recorded.
[$sel:sampledCount:SamplingStatisticSummary'] :: SamplingStatisticSummary -> Maybe Int

-- | Create a value of <a>SamplingStatisticSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestCount:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_requestCount</a> - The number of requests
--   that matched the rule.
--   
--   <a>$sel:borrowCount:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_borrowCount</a> - The number of requests
--   recorded with borrowed reservoir quota.
--   
--   <a>$sel:ruleName:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_ruleName</a> - The name of the sampling
--   rule.
--   
--   <a>$sel:timestamp:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_timestamp</a> - The start time of the
--   reporting window.
--   
--   <a>$sel:sampledCount:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_sampledCount</a> - The number of requests
--   recorded.
newSamplingStatisticSummary :: SamplingStatisticSummary

-- | The number of requests that matched the rule.
samplingStatisticSummary_requestCount :: Lens' SamplingStatisticSummary (Maybe Int)

-- | The number of requests recorded with borrowed reservoir quota.
samplingStatisticSummary_borrowCount :: Lens' SamplingStatisticSummary (Maybe Int)

-- | The name of the sampling rule.
samplingStatisticSummary_ruleName :: Lens' SamplingStatisticSummary (Maybe Text)

-- | The start time of the reporting window.
samplingStatisticSummary_timestamp :: Lens' SamplingStatisticSummary (Maybe UTCTime)

-- | The number of requests recorded.
samplingStatisticSummary_sampledCount :: Lens' SamplingStatisticSummary (Maybe Int)
instance GHC.Generics.Generic Amazonka.XRay.Types.SamplingStatisticSummary.SamplingStatisticSummary
instance GHC.Show.Show Amazonka.XRay.Types.SamplingStatisticSummary.SamplingStatisticSummary
instance GHC.Read.Read Amazonka.XRay.Types.SamplingStatisticSummary.SamplingStatisticSummary
instance GHC.Classes.Eq Amazonka.XRay.Types.SamplingStatisticSummary.SamplingStatisticSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.SamplingStatisticSummary.SamplingStatisticSummary
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.SamplingStatisticSummary.SamplingStatisticSummary
instance Control.DeepSeq.NFData Amazonka.XRay.Types.SamplingStatisticSummary.SamplingStatisticSummary


module Amazonka.XRay.Types.SamplingStatisticsDocument

-- | Request sampling results for a single rule from a service. Results are
--   for the last 10 seconds unless the service has been assigned a longer
--   reporting interval after a previous call to <a>GetSamplingTargets</a>.
--   
--   <i>See:</i> <a>newSamplingStatisticsDocument</a> smart constructor.
data SamplingStatisticsDocument
SamplingStatisticsDocument' :: Maybe Natural -> Text -> Text -> POSIX -> Natural -> Natural -> SamplingStatisticsDocument

-- | The number of requests recorded with borrowed reservoir quota.
[$sel:borrowCount:SamplingStatisticsDocument'] :: SamplingStatisticsDocument -> Maybe Natural

-- | The name of the sampling rule.
[$sel:ruleName:SamplingStatisticsDocument'] :: SamplingStatisticsDocument -> Text

-- | A unique identifier for the service in hexadecimal.
[$sel:clientID:SamplingStatisticsDocument'] :: SamplingStatisticsDocument -> Text

-- | The current time.
[$sel:timestamp:SamplingStatisticsDocument'] :: SamplingStatisticsDocument -> POSIX

-- | The number of requests that matched the rule.
[$sel:requestCount:SamplingStatisticsDocument'] :: SamplingStatisticsDocument -> Natural

-- | The number of requests recorded.
[$sel:sampledCount:SamplingStatisticsDocument'] :: SamplingStatisticsDocument -> Natural

-- | Create a value of <a>SamplingStatisticsDocument</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:borrowCount:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_borrowCount</a> - The number of requests
--   recorded with borrowed reservoir quota.
--   
--   <a>$sel:ruleName:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_ruleName</a> - The name of the sampling
--   rule.
--   
--   <a>$sel:clientID:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_clientID</a> - A unique identifier for
--   the service in hexadecimal.
--   
--   <a>$sel:timestamp:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_timestamp</a> - The current time.
--   
--   <a>$sel:requestCount:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_requestCount</a> - The number of
--   requests that matched the rule.
--   
--   <a>$sel:sampledCount:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_sampledCount</a> - The number of
--   requests recorded.
newSamplingStatisticsDocument :: Text -> Text -> UTCTime -> Natural -> Natural -> SamplingStatisticsDocument

-- | The number of requests recorded with borrowed reservoir quota.
samplingStatisticsDocument_borrowCount :: Lens' SamplingStatisticsDocument (Maybe Natural)

-- | The name of the sampling rule.
samplingStatisticsDocument_ruleName :: Lens' SamplingStatisticsDocument Text

-- | A unique identifier for the service in hexadecimal.
samplingStatisticsDocument_clientID :: Lens' SamplingStatisticsDocument Text

-- | The current time.
samplingStatisticsDocument_timestamp :: Lens' SamplingStatisticsDocument UTCTime

-- | The number of requests that matched the rule.
samplingStatisticsDocument_requestCount :: Lens' SamplingStatisticsDocument Natural

-- | The number of requests recorded.
samplingStatisticsDocument_sampledCount :: Lens' SamplingStatisticsDocument Natural
instance GHC.Generics.Generic Amazonka.XRay.Types.SamplingStatisticsDocument.SamplingStatisticsDocument
instance GHC.Show.Show Amazonka.XRay.Types.SamplingStatisticsDocument.SamplingStatisticsDocument
instance GHC.Read.Read Amazonka.XRay.Types.SamplingStatisticsDocument.SamplingStatisticsDocument
instance GHC.Classes.Eq Amazonka.XRay.Types.SamplingStatisticsDocument.SamplingStatisticsDocument
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.SamplingStatisticsDocument.SamplingStatisticsDocument
instance Control.DeepSeq.NFData Amazonka.XRay.Types.SamplingStatisticsDocument.SamplingStatisticsDocument
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.SamplingStatisticsDocument.SamplingStatisticsDocument


module Amazonka.XRay.Types.SamplingStrategyName
newtype SamplingStrategyName
SamplingStrategyName' :: Text -> SamplingStrategyName
[fromSamplingStrategyName] :: SamplingStrategyName -> Text
pattern SamplingStrategyName_FixedRate :: SamplingStrategyName
pattern SamplingStrategyName_PartialScan :: SamplingStrategyName
instance Amazonka.Data.XML.ToXML Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Amazonka.Data.XML.FromXML Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Amazonka.Data.Headers.ToHeader Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Amazonka.Data.Log.ToLog Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Amazonka.Data.ByteString.ToByteString Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Amazonka.Data.Text.ToText Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Amazonka.Data.Text.FromText Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Control.DeepSeq.NFData Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance GHC.Generics.Generic Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance GHC.Classes.Ord Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance GHC.Classes.Eq Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance GHC.Read.Read Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName
instance GHC.Show.Show Amazonka.XRay.Types.SamplingStrategyName.SamplingStrategyName


module Amazonka.XRay.Types.SamplingStrategy

-- | The name and value of a sampling rule to apply to a trace summary.
--   
--   <i>See:</i> <a>newSamplingStrategy</a> smart constructor.
data SamplingStrategy
SamplingStrategy' :: Maybe Double -> Maybe SamplingStrategyName -> SamplingStrategy

-- | The value of a sampling rule.
[$sel:value:SamplingStrategy'] :: SamplingStrategy -> Maybe Double

-- | The name of a sampling rule.
[$sel:name:SamplingStrategy'] :: SamplingStrategy -> Maybe SamplingStrategyName

-- | Create a value of <a>SamplingStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:SamplingStrategy'</a>, <a>samplingStrategy_value</a> -
--   The value of a sampling rule.
--   
--   <a>$sel:name:SamplingStrategy'</a>, <a>samplingStrategy_name</a> - The
--   name of a sampling rule.
newSamplingStrategy :: SamplingStrategy

-- | The value of a sampling rule.
samplingStrategy_value :: Lens' SamplingStrategy (Maybe Double)

-- | The name of a sampling rule.
samplingStrategy_name :: Lens' SamplingStrategy (Maybe SamplingStrategyName)
instance GHC.Generics.Generic Amazonka.XRay.Types.SamplingStrategy.SamplingStrategy
instance GHC.Show.Show Amazonka.XRay.Types.SamplingStrategy.SamplingStrategy
instance GHC.Read.Read Amazonka.XRay.Types.SamplingStrategy.SamplingStrategy
instance GHC.Classes.Eq Amazonka.XRay.Types.SamplingStrategy.SamplingStrategy
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.SamplingStrategy.SamplingStrategy
instance Control.DeepSeq.NFData Amazonka.XRay.Types.SamplingStrategy.SamplingStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.SamplingStrategy.SamplingStrategy


module Amazonka.XRay.Types.SamplingTargetDocument

-- | Temporary changes to a sampling rule configuration. To meet the global
--   sampling target for a rule, X-Ray calculates a new reservoir for each
--   service based on the recent sampling results of all services that
--   called <a>GetSamplingTargets</a>.
--   
--   <i>See:</i> <a>newSamplingTargetDocument</a> smart constructor.
data SamplingTargetDocument
SamplingTargetDocument' :: Maybe Int -> Maybe Text -> Maybe Double -> Maybe Int -> Maybe POSIX -> SamplingTargetDocument

-- | The number of requests per second that X-Ray allocated for this
--   service.
[$sel:reservoirQuota:SamplingTargetDocument'] :: SamplingTargetDocument -> Maybe Int

-- | The name of the sampling rule.
[$sel:ruleName:SamplingTargetDocument'] :: SamplingTargetDocument -> Maybe Text

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
[$sel:fixedRate:SamplingTargetDocument'] :: SamplingTargetDocument -> Maybe Double

-- | The number of seconds for the service to wait before getting sampling
--   targets again.
[$sel:interval:SamplingTargetDocument'] :: SamplingTargetDocument -> Maybe Int

-- | When the reservoir quota expires.
[$sel:reservoirQuotaTTL:SamplingTargetDocument'] :: SamplingTargetDocument -> Maybe POSIX

-- | Create a value of <a>SamplingTargetDocument</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservoirQuota:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_reservoirQuota</a> - The number of requests
--   per second that X-Ray allocated for this service.
--   
--   <a>$sel:ruleName:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_ruleName</a> - The name of the sampling
--   rule.
--   
--   <a>$sel:fixedRate:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_fixedRate</a> - The percentage of matching
--   requests to instrument, after the reservoir is exhausted.
--   
--   <a>$sel:interval:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_interval</a> - The number of seconds for the
--   service to wait before getting sampling targets again.
--   
--   <a>$sel:reservoirQuotaTTL:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_reservoirQuotaTTL</a> - When the reservoir
--   quota expires.
newSamplingTargetDocument :: SamplingTargetDocument

-- | The number of requests per second that X-Ray allocated for this
--   service.
samplingTargetDocument_reservoirQuota :: Lens' SamplingTargetDocument (Maybe Int)

-- | The name of the sampling rule.
samplingTargetDocument_ruleName :: Lens' SamplingTargetDocument (Maybe Text)

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
samplingTargetDocument_fixedRate :: Lens' SamplingTargetDocument (Maybe Double)

-- | The number of seconds for the service to wait before getting sampling
--   targets again.
samplingTargetDocument_interval :: Lens' SamplingTargetDocument (Maybe Int)

-- | When the reservoir quota expires.
samplingTargetDocument_reservoirQuotaTTL :: Lens' SamplingTargetDocument (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.XRay.Types.SamplingTargetDocument.SamplingTargetDocument
instance GHC.Show.Show Amazonka.XRay.Types.SamplingTargetDocument.SamplingTargetDocument
instance GHC.Read.Read Amazonka.XRay.Types.SamplingTargetDocument.SamplingTargetDocument
instance GHC.Classes.Eq Amazonka.XRay.Types.SamplingTargetDocument.SamplingTargetDocument
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.SamplingTargetDocument.SamplingTargetDocument
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.SamplingTargetDocument.SamplingTargetDocument
instance Control.DeepSeq.NFData Amazonka.XRay.Types.SamplingTargetDocument.SamplingTargetDocument


module Amazonka.XRay.Types.Segment

-- | A segment from a trace that has been ingested by the X-Ray service.
--   The segment can be compiled from documents uploaded with
--   <a>PutTraceSegments</a>, or an <tt>inferred</tt> segment for a
--   downstream service, generated from a subsegment sent by the service
--   that called it.
--   
--   For the full segment document schema, see <a>Amazon Web Services X-Ray
--   Segment Documents</a> in the <i>Amazon Web Services X-Ray Developer
--   Guide</i>.
--   
--   <i>See:</i> <a>newSegment</a> smart constructor.
data Segment
Segment' :: Maybe Text -> Maybe Text -> Segment

-- | The segment document.
[$sel:document:Segment'] :: Segment -> Maybe Text

-- | The segment's ID.
[$sel:id:Segment'] :: Segment -> Maybe Text

-- | Create a value of <a>Segment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:document:Segment'</a>, <a>segment_document</a> - The segment
--   document.
--   
--   <a>$sel:id:Segment'</a>, <a>segment_id</a> - The segment's ID.
newSegment :: Segment

-- | The segment document.
segment_document :: Lens' Segment (Maybe Text)

-- | The segment's ID.
segment_id :: Lens' Segment (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.Segment.Segment
instance GHC.Show.Show Amazonka.XRay.Types.Segment.Segment
instance GHC.Read.Read Amazonka.XRay.Types.Segment.Segment
instance GHC.Classes.Eq Amazonka.XRay.Types.Segment.Segment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.Segment.Segment
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.Segment.Segment
instance Control.DeepSeq.NFData Amazonka.XRay.Types.Segment.Segment


module Amazonka.XRay.Types.ServiceId

-- | <i>See:</i> <a>newServiceId</a> smart constructor.
data ServiceId
ServiceId' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> ServiceId
[$sel:accountId:ServiceId'] :: ServiceId -> Maybe Text
[$sel:names:ServiceId'] :: ServiceId -> Maybe [Text]
[$sel:name:ServiceId'] :: ServiceId -> Maybe Text
[$sel:type':ServiceId'] :: ServiceId -> Maybe Text

-- | Create a value of <a>ServiceId</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:ServiceId'</a>, <a>serviceId_accountId</a> -
--   
--   <a>$sel:names:ServiceId'</a>, <a>serviceId_names</a> -
--   
--   <a>$sel:name:ServiceId'</a>, <a>serviceId_name</a> -
--   
--   <a>$sel:type':ServiceId'</a>, <a>serviceId_type</a> -
newServiceId :: ServiceId

serviceId_accountId :: Lens' ServiceId (Maybe Text)

serviceId_names :: Lens' ServiceId (Maybe [Text])

serviceId_name :: Lens' ServiceId (Maybe Text)

serviceId_type :: Lens' ServiceId (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.ServiceId.ServiceId
instance GHC.Show.Show Amazonka.XRay.Types.ServiceId.ServiceId
instance GHC.Read.Read Amazonka.XRay.Types.ServiceId.ServiceId
instance GHC.Classes.Eq Amazonka.XRay.Types.ServiceId.ServiceId
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ServiceId.ServiceId
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ServiceId.ServiceId
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ServiceId.ServiceId


module Amazonka.XRay.Types.AnomalousService

-- | The service within the service graph that has anomalously high fault
--   rates.
--   
--   <i>See:</i> <a>newAnomalousService</a> smart constructor.
data AnomalousService
AnomalousService' :: Maybe ServiceId -> AnomalousService
[$sel:serviceId:AnomalousService'] :: AnomalousService -> Maybe ServiceId

-- | Create a value of <a>AnomalousService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceId:AnomalousService'</a>,
--   <a>anomalousService_serviceId</a> - Undocumented member.
newAnomalousService :: AnomalousService

-- | Undocumented member.
anomalousService_serviceId :: Lens' AnomalousService (Maybe ServiceId)
instance GHC.Generics.Generic Amazonka.XRay.Types.AnomalousService.AnomalousService
instance GHC.Show.Show Amazonka.XRay.Types.AnomalousService.AnomalousService
instance GHC.Read.Read Amazonka.XRay.Types.AnomalousService.AnomalousService
instance GHC.Classes.Eq Amazonka.XRay.Types.AnomalousService.AnomalousService
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.AnomalousService.AnomalousService
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.AnomalousService.AnomalousService
instance Control.DeepSeq.NFData Amazonka.XRay.Types.AnomalousService.AnomalousService


module Amazonka.XRay.Types.InsightSummary

-- | Information that describes an insight.
--   
--   <i>See:</i> <a>newInsightSummary</a> smart constructor.
data InsightSummary
InsightSummary' :: Maybe Text -> Maybe InsightState -> Maybe POSIX -> Maybe Text -> Maybe [InsightCategory] -> Maybe RequestImpactStatistics -> Maybe [AnomalousService] -> Maybe ServiceId -> Maybe RequestImpactStatistics -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> InsightSummary

-- | A brief description of the insight.
[$sel:summary:InsightSummary'] :: InsightSummary -> Maybe Text

-- | The current state of the insight.
[$sel:state:InsightSummary'] :: InsightSummary -> Maybe InsightState

-- | The time, in Unix seconds, at which the insight began.
[$sel:startTime:InsightSummary'] :: InsightSummary -> Maybe POSIX

-- | The insights unique identifier.
[$sel:insightId:InsightSummary'] :: InsightSummary -> Maybe Text

-- | Categories The categories that label and describe the type of insight.
[$sel:categories:InsightSummary'] :: InsightSummary -> Maybe [InsightCategory]

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
[$sel:rootCauseServiceRequestImpactStatistics:InsightSummary'] :: InsightSummary -> Maybe RequestImpactStatistics

-- | The service within the insight that is most impacted by the incident.
[$sel:topAnomalousServices:InsightSummary'] :: InsightSummary -> Maybe [AnomalousService]
[$sel:rootCauseServiceId:InsightSummary'] :: InsightSummary -> Maybe ServiceId

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
[$sel:clientRequestImpactStatistics:InsightSummary'] :: InsightSummary -> Maybe RequestImpactStatistics

-- | The time, in Unix seconds, at which the insight ended.
[$sel:endTime:InsightSummary'] :: InsightSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
[$sel:groupARN:InsightSummary'] :: InsightSummary -> Maybe Text

-- | The name of the group that the insight belongs to.
[$sel:groupName:InsightSummary'] :: InsightSummary -> Maybe Text

-- | The time, in Unix seconds, that the insight was last updated.
[$sel:lastUpdateTime:InsightSummary'] :: InsightSummary -> Maybe POSIX

-- | Create a value of <a>InsightSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:InsightSummary'</a>, <a>insightSummary_summary</a> - A
--   brief description of the insight.
--   
--   <a>$sel:state:InsightSummary'</a>, <a>insightSummary_state</a> - The
--   current state of the insight.
--   
--   <a>$sel:startTime:InsightSummary'</a>, <a>insightSummary_startTime</a>
--   - The time, in Unix seconds, at which the insight began.
--   
--   <a>$sel:insightId:InsightSummary'</a>, <a>insightSummary_insightId</a>
--   - The insights unique identifier.
--   
--   <a>$sel:categories:InsightSummary'</a>,
--   <a>insightSummary_categories</a> - Categories The categories that
--   label and describe the type of insight.
--   
--   <a>$sel:rootCauseServiceRequestImpactStatistics:InsightSummary'</a>,
--   <a>insightSummary_rootCauseServiceRequestImpactStatistics</a> - The
--   impact statistics of the root cause service. This includes the number
--   of requests to the client service and whether the requests were faults
--   or okay.
--   
--   <a>$sel:topAnomalousServices:InsightSummary'</a>,
--   <a>insightSummary_topAnomalousServices</a> - The service within the
--   insight that is most impacted by the incident.
--   
--   <a>$sel:rootCauseServiceId:InsightSummary'</a>,
--   <a>insightSummary_rootCauseServiceId</a> - Undocumented member.
--   
--   <a>$sel:clientRequestImpactStatistics:InsightSummary'</a>,
--   <a>insightSummary_clientRequestImpactStatistics</a> - The impact
--   statistics of the client side service. This includes the number of
--   requests to the client service and whether the requests were faults or
--   okay.
--   
--   <a>$sel:endTime:InsightSummary'</a>, <a>insightSummary_endTime</a> -
--   The time, in Unix seconds, at which the insight ended.
--   
--   <a>$sel:groupARN:InsightSummary'</a>, <a>insightSummary_groupARN</a> -
--   The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
--   
--   <a>$sel:groupName:InsightSummary'</a>, <a>insightSummary_groupName</a>
--   - The name of the group that the insight belongs to.
--   
--   <a>$sel:lastUpdateTime:InsightSummary'</a>,
--   <a>insightSummary_lastUpdateTime</a> - The time, in Unix seconds, that
--   the insight was last updated.
newInsightSummary :: InsightSummary

-- | A brief description of the insight.
insightSummary_summary :: Lens' InsightSummary (Maybe Text)

-- | The current state of the insight.
insightSummary_state :: Lens' InsightSummary (Maybe InsightState)

-- | The time, in Unix seconds, at which the insight began.
insightSummary_startTime :: Lens' InsightSummary (Maybe UTCTime)

-- | The insights unique identifier.
insightSummary_insightId :: Lens' InsightSummary (Maybe Text)

-- | Categories The categories that label and describe the type of insight.
insightSummary_categories :: Lens' InsightSummary (Maybe [InsightCategory])

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insightSummary_rootCauseServiceRequestImpactStatistics :: Lens' InsightSummary (Maybe RequestImpactStatistics)

-- | The service within the insight that is most impacted by the incident.
insightSummary_topAnomalousServices :: Lens' InsightSummary (Maybe [AnomalousService])

-- | Undocumented member.
insightSummary_rootCauseServiceId :: Lens' InsightSummary (Maybe ServiceId)

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insightSummary_clientRequestImpactStatistics :: Lens' InsightSummary (Maybe RequestImpactStatistics)

-- | The time, in Unix seconds, at which the insight ended.
insightSummary_endTime :: Lens' InsightSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
insightSummary_groupARN :: Lens' InsightSummary (Maybe Text)

-- | The name of the group that the insight belongs to.
insightSummary_groupName :: Lens' InsightSummary (Maybe Text)

-- | The time, in Unix seconds, that the insight was last updated.
insightSummary_lastUpdateTime :: Lens' InsightSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.XRay.Types.InsightSummary.InsightSummary
instance GHC.Show.Show Amazonka.XRay.Types.InsightSummary.InsightSummary
instance GHC.Read.Read Amazonka.XRay.Types.InsightSummary.InsightSummary
instance GHC.Classes.Eq Amazonka.XRay.Types.InsightSummary.InsightSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.InsightSummary.InsightSummary
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.InsightSummary.InsightSummary
instance Control.DeepSeq.NFData Amazonka.XRay.Types.InsightSummary.InsightSummary


module Amazonka.XRay.Types.InsightEvent

-- | X-Ray reevaluates insights periodically until they are resolved, and
--   records each intermediate state in an event. You can review incident
--   events in the Impact Timeline on the Inspect page in the X-Ray
--   console.
--   
--   <i>See:</i> <a>newInsightEvent</a> smart constructor.
data InsightEvent
InsightEvent' :: Maybe Text -> Maybe POSIX -> Maybe RequestImpactStatistics -> Maybe [AnomalousService] -> Maybe RequestImpactStatistics -> InsightEvent

-- | A brief description of the event.
[$sel:summary:InsightEvent'] :: InsightEvent -> Maybe Text

-- | The time, in Unix seconds, at which the event was recorded.
[$sel:eventTime:InsightEvent'] :: InsightEvent -> Maybe POSIX

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
[$sel:rootCauseServiceRequestImpactStatistics:InsightEvent'] :: InsightEvent -> Maybe RequestImpactStatistics

-- | The service during the event that is most impacted by the incident.
[$sel:topAnomalousServices:InsightEvent'] :: InsightEvent -> Maybe [AnomalousService]

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
[$sel:clientRequestImpactStatistics:InsightEvent'] :: InsightEvent -> Maybe RequestImpactStatistics

-- | Create a value of <a>InsightEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:InsightEvent'</a>, <a>insightEvent_summary</a> - A
--   brief description of the event.
--   
--   <a>$sel:eventTime:InsightEvent'</a>, <a>insightEvent_eventTime</a> -
--   The time, in Unix seconds, at which the event was recorded.
--   
--   <a>$sel:rootCauseServiceRequestImpactStatistics:InsightEvent'</a>,
--   <a>insightEvent_rootCauseServiceRequestImpactStatistics</a> - The
--   impact statistics of the root cause service. This includes the number
--   of requests to the client service and whether the requests were faults
--   or okay.
--   
--   <a>$sel:topAnomalousServices:InsightEvent'</a>,
--   <a>insightEvent_topAnomalousServices</a> - The service during the
--   event that is most impacted by the incident.
--   
--   <a>$sel:clientRequestImpactStatistics:InsightEvent'</a>,
--   <a>insightEvent_clientRequestImpactStatistics</a> - The impact
--   statistics of the client side service. This includes the number of
--   requests to the client service and whether the requests were faults or
--   okay.
newInsightEvent :: InsightEvent

-- | A brief description of the event.
insightEvent_summary :: Lens' InsightEvent (Maybe Text)

-- | The time, in Unix seconds, at which the event was recorded.
insightEvent_eventTime :: Lens' InsightEvent (Maybe UTCTime)

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insightEvent_rootCauseServiceRequestImpactStatistics :: Lens' InsightEvent (Maybe RequestImpactStatistics)

-- | The service during the event that is most impacted by the incident.
insightEvent_topAnomalousServices :: Lens' InsightEvent (Maybe [AnomalousService])

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insightEvent_clientRequestImpactStatistics :: Lens' InsightEvent (Maybe RequestImpactStatistics)
instance GHC.Generics.Generic Amazonka.XRay.Types.InsightEvent.InsightEvent
instance GHC.Show.Show Amazonka.XRay.Types.InsightEvent.InsightEvent
instance GHC.Read.Read Amazonka.XRay.Types.InsightEvent.InsightEvent
instance GHC.Classes.Eq Amazonka.XRay.Types.InsightEvent.InsightEvent
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.InsightEvent.InsightEvent
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.InsightEvent.InsightEvent
instance Control.DeepSeq.NFData Amazonka.XRay.Types.InsightEvent.InsightEvent


module Amazonka.XRay.Types.Insight

-- | When fault rates go outside of the expected range, X-Ray creates an
--   insight. Insights tracks emergent issues within your applications.
--   
--   <i>See:</i> <a>newInsight</a> smart constructor.
data Insight
Insight' :: Maybe Text -> Maybe InsightState -> Maybe POSIX -> Maybe Text -> Maybe [InsightCategory] -> Maybe RequestImpactStatistics -> Maybe [AnomalousService] -> Maybe ServiceId -> Maybe RequestImpactStatistics -> Maybe POSIX -> Maybe Text -> Maybe Text -> Insight

-- | A brief description of the insight.
[$sel:summary:Insight'] :: Insight -> Maybe Text

-- | The current state of the insight.
[$sel:state:Insight'] :: Insight -> Maybe InsightState

-- | The time, in Unix seconds, at which the insight began.
[$sel:startTime:Insight'] :: Insight -> Maybe POSIX

-- | The insights unique identifier.
[$sel:insightId:Insight'] :: Insight -> Maybe Text

-- | The categories that label and describe the type of insight.
[$sel:categories:Insight'] :: Insight -> Maybe [InsightCategory]

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
[$sel:rootCauseServiceRequestImpactStatistics:Insight'] :: Insight -> Maybe RequestImpactStatistics

-- | The service within the insight that is most impacted by the incident.
[$sel:topAnomalousServices:Insight'] :: Insight -> Maybe [AnomalousService]
[$sel:rootCauseServiceId:Insight'] :: Insight -> Maybe ServiceId

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
[$sel:clientRequestImpactStatistics:Insight'] :: Insight -> Maybe RequestImpactStatistics

-- | The time, in Unix seconds, at which the insight ended.
[$sel:endTime:Insight'] :: Insight -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
[$sel:groupARN:Insight'] :: Insight -> Maybe Text

-- | The name of the group that the insight belongs to.
[$sel:groupName:Insight'] :: Insight -> Maybe Text

-- | Create a value of <a>Insight</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:Insight'</a>, <a>insight_summary</a> - A brief
--   description of the insight.
--   
--   <a>$sel:state:Insight'</a>, <a>insight_state</a> - The current state
--   of the insight.
--   
--   <a>$sel:startTime:Insight'</a>, <a>insight_startTime</a> - The time,
--   in Unix seconds, at which the insight began.
--   
--   <a>$sel:insightId:Insight'</a>, <a>insight_insightId</a> - The
--   insights unique identifier.
--   
--   <a>$sel:categories:Insight'</a>, <a>insight_categories</a> - The
--   categories that label and describe the type of insight.
--   
--   <a>$sel:rootCauseServiceRequestImpactStatistics:Insight'</a>,
--   <a>insight_rootCauseServiceRequestImpactStatistics</a> - The impact
--   statistics of the root cause service. This includes the number of
--   requests to the client service and whether the requests were faults or
--   okay.
--   
--   <a>$sel:topAnomalousServices:Insight'</a>,
--   <a>insight_topAnomalousServices</a> - The service within the insight
--   that is most impacted by the incident.
--   
--   <a>$sel:rootCauseServiceId:Insight'</a>,
--   <a>insight_rootCauseServiceId</a> - Undocumented member.
--   
--   <a>$sel:clientRequestImpactStatistics:Insight'</a>,
--   <a>insight_clientRequestImpactStatistics</a> - The impact statistics
--   of the client side service. This includes the number of requests to
--   the client service and whether the requests were faults or okay.
--   
--   <a>$sel:endTime:Insight'</a>, <a>insight_endTime</a> - The time, in
--   Unix seconds, at which the insight ended.
--   
--   <a>$sel:groupARN:Insight'</a>, <a>insight_groupARN</a> - The Amazon
--   Resource Name (ARN) of the group that the insight belongs to.
--   
--   <a>$sel:groupName:Insight'</a>, <a>insight_groupName</a> - The name of
--   the group that the insight belongs to.
newInsight :: Insight

-- | A brief description of the insight.
insight_summary :: Lens' Insight (Maybe Text)

-- | The current state of the insight.
insight_state :: Lens' Insight (Maybe InsightState)

-- | The time, in Unix seconds, at which the insight began.
insight_startTime :: Lens' Insight (Maybe UTCTime)

-- | The insights unique identifier.
insight_insightId :: Lens' Insight (Maybe Text)

-- | The categories that label and describe the type of insight.
insight_categories :: Lens' Insight (Maybe [InsightCategory])

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insight_rootCauseServiceRequestImpactStatistics :: Lens' Insight (Maybe RequestImpactStatistics)

-- | The service within the insight that is most impacted by the incident.
insight_topAnomalousServices :: Lens' Insight (Maybe [AnomalousService])

-- | Undocumented member.
insight_rootCauseServiceId :: Lens' Insight (Maybe ServiceId)

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insight_clientRequestImpactStatistics :: Lens' Insight (Maybe RequestImpactStatistics)

-- | The time, in Unix seconds, at which the insight ended.
insight_endTime :: Lens' Insight (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
insight_groupARN :: Lens' Insight (Maybe Text)

-- | The name of the group that the insight belongs to.
insight_groupName :: Lens' Insight (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.Insight.Insight
instance GHC.Show.Show Amazonka.XRay.Types.Insight.Insight
instance GHC.Read.Read Amazonka.XRay.Types.Insight.Insight
instance GHC.Classes.Eq Amazonka.XRay.Types.Insight.Insight
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.Insight.Insight
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.Insight.Insight
instance Control.DeepSeq.NFData Amazonka.XRay.Types.Insight.Insight


module Amazonka.XRay.Types.ServiceStatistics

-- | Response statistics for a service.
--   
--   <i>See:</i> <a>newServiceStatistics</a> smart constructor.
data ServiceStatistics
ServiceStatistics' :: Maybe FaultStatistics -> Maybe Integer -> Maybe Double -> Maybe ErrorStatistics -> Maybe Integer -> ServiceStatistics

-- | Information about requests that failed with a 5xx Server Error status
--   code.
[$sel:faultStatistics:ServiceStatistics'] :: ServiceStatistics -> Maybe FaultStatistics

-- | The number of requests that completed with a 2xx Success status code.
[$sel:okCount:ServiceStatistics'] :: ServiceStatistics -> Maybe Integer

-- | The aggregate response time of completed requests.
[$sel:totalResponseTime:ServiceStatistics'] :: ServiceStatistics -> Maybe Double

-- | Information about requests that failed with a 4xx Client Error status
--   code.
[$sel:errorStatistics:ServiceStatistics'] :: ServiceStatistics -> Maybe ErrorStatistics

-- | The total number of completed requests.
[$sel:totalCount:ServiceStatistics'] :: ServiceStatistics -> Maybe Integer

-- | Create a value of <a>ServiceStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:faultStatistics:ServiceStatistics'</a>,
--   <a>serviceStatistics_faultStatistics</a> - Information about requests
--   that failed with a 5xx Server Error status code.
--   
--   <a>$sel:okCount:ServiceStatistics'</a>,
--   <a>serviceStatistics_okCount</a> - The number of requests that
--   completed with a 2xx Success status code.
--   
--   <a>$sel:totalResponseTime:ServiceStatistics'</a>,
--   <a>serviceStatistics_totalResponseTime</a> - The aggregate response
--   time of completed requests.
--   
--   <a>$sel:errorStatistics:ServiceStatistics'</a>,
--   <a>serviceStatistics_errorStatistics</a> - Information about requests
--   that failed with a 4xx Client Error status code.
--   
--   <a>$sel:totalCount:ServiceStatistics'</a>,
--   <a>serviceStatistics_totalCount</a> - The total number of completed
--   requests.
newServiceStatistics :: ServiceStatistics

-- | Information about requests that failed with a 5xx Server Error status
--   code.
serviceStatistics_faultStatistics :: Lens' ServiceStatistics (Maybe FaultStatistics)

-- | The number of requests that completed with a 2xx Success status code.
serviceStatistics_okCount :: Lens' ServiceStatistics (Maybe Integer)

-- | The aggregate response time of completed requests.
serviceStatistics_totalResponseTime :: Lens' ServiceStatistics (Maybe Double)

-- | Information about requests that failed with a 4xx Client Error status
--   code.
serviceStatistics_errorStatistics :: Lens' ServiceStatistics (Maybe ErrorStatistics)

-- | The total number of completed requests.
serviceStatistics_totalCount :: Lens' ServiceStatistics (Maybe Integer)
instance GHC.Generics.Generic Amazonka.XRay.Types.ServiceStatistics.ServiceStatistics
instance GHC.Show.Show Amazonka.XRay.Types.ServiceStatistics.ServiceStatistics
instance GHC.Read.Read Amazonka.XRay.Types.ServiceStatistics.ServiceStatistics
instance GHC.Classes.Eq Amazonka.XRay.Types.ServiceStatistics.ServiceStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ServiceStatistics.ServiceStatistics
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ServiceStatistics.ServiceStatistics
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ServiceStatistics.ServiceStatistics


module Amazonka.XRay.Types.ServiceInfo

-- | Information about an application that processed requests, users that
--   made requests, or downstream services, resources, and applications
--   that an application used.
--   
--   <i>See:</i> <a>newServiceInfo</a> smart constructor.
data ServiceInfo
ServiceInfo' :: Maybe Text -> Maybe POSIX -> Maybe Bool -> Maybe [HistogramEntry] -> Maybe [HistogramEntry] -> Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe [Edge] -> Maybe ServiceStatistics -> ServiceInfo

-- | The service's state.
[$sel:state:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | The start time of the first segment that the service generated.
[$sel:startTime:ServiceInfo'] :: ServiceInfo -> Maybe POSIX

-- | Indicates that the service was the first service to process a request.
[$sel:root:ServiceInfo'] :: ServiceInfo -> Maybe Bool

-- | A histogram that maps the spread of service response times.
[$sel:responseTimeHistogram:ServiceInfo'] :: ServiceInfo -> Maybe [HistogramEntry]

-- | A histogram that maps the spread of service durations.
[$sel:durationHistogram:ServiceInfo'] :: ServiceInfo -> Maybe [HistogramEntry]

-- | Identifier for the service. Unique within the service map.
[$sel:referenceId:ServiceInfo'] :: ServiceInfo -> Maybe Int

-- | Identifier of the Amazon Web Services account in which the service
--   runs.
[$sel:accountId:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | A list of names for the service, including the canonical name.
[$sel:names:ServiceInfo'] :: ServiceInfo -> Maybe [Text]

-- | The canonical name of the service.
[$sel:name:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | The end time of the last segment that the service generated.
[$sel:endTime:ServiceInfo'] :: ServiceInfo -> Maybe POSIX

-- | The type of service.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, <tt>AWS::EC2::Instance</tt> for an application
--   running on Amazon EC2 or <tt>AWS::DynamoDB::Table</tt> for an Amazon
--   DynamoDB table that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, <tt>AWS::DynamoDB</tt> for downstream calls to
--   Amazon DynamoDB that didn't target a specific table.</li>
--   <li><tt>client</tt> - Represents the clients that sent requests to a
--   root service.</li>
--   <li><tt>remote</tt> - A downstream service of indeterminate type.</li>
--   </ul>
[$sel:type':ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | Connections to downstream services.
[$sel:edges:ServiceInfo'] :: ServiceInfo -> Maybe [Edge]

-- | Aggregated statistics for the service.
[$sel:summaryStatistics:ServiceInfo'] :: ServiceInfo -> Maybe ServiceStatistics

-- | Create a value of <a>ServiceInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ServiceInfo'</a>, <a>serviceInfo_state</a> - The
--   service's state.
--   
--   <a>$sel:startTime:ServiceInfo'</a>, <a>serviceInfo_startTime</a> - The
--   start time of the first segment that the service generated.
--   
--   <a>$sel:root:ServiceInfo'</a>, <a>serviceInfo_root</a> - Indicates
--   that the service was the first service to process a request.
--   
--   <a>$sel:responseTimeHistogram:ServiceInfo'</a>,
--   <a>serviceInfo_responseTimeHistogram</a> - A histogram that maps the
--   spread of service response times.
--   
--   <a>$sel:durationHistogram:ServiceInfo'</a>,
--   <a>serviceInfo_durationHistogram</a> - A histogram that maps the
--   spread of service durations.
--   
--   <a>$sel:referenceId:ServiceInfo'</a>, <a>serviceInfo_referenceId</a> -
--   Identifier for the service. Unique within the service map.
--   
--   <a>$sel:accountId:ServiceInfo'</a>, <a>serviceInfo_accountId</a> -
--   Identifier of the Amazon Web Services account in which the service
--   runs.
--   
--   <a>$sel:names:ServiceInfo'</a>, <a>serviceInfo_names</a> - A list of
--   names for the service, including the canonical name.
--   
--   <a>$sel:name:ServiceInfo'</a>, <a>serviceInfo_name</a> - The canonical
--   name of the service.
--   
--   <a>$sel:endTime:ServiceInfo'</a>, <a>serviceInfo_endTime</a> - The end
--   time of the last segment that the service generated.
--   
--   <a>$sel:type':ServiceInfo'</a>, <a>serviceInfo_type</a> - The type of
--   service.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, <tt>AWS::EC2::Instance</tt> for an application
--   running on Amazon EC2 or <tt>AWS::DynamoDB::Table</tt> for an Amazon
--   DynamoDB table that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, <tt>AWS::DynamoDB</tt> for downstream calls to
--   Amazon DynamoDB that didn't target a specific table.</li>
--   <li><tt>client</tt> - Represents the clients that sent requests to a
--   root service.</li>
--   <li><tt>remote</tt> - A downstream service of indeterminate type.</li>
--   </ul>
--   
--   <a>$sel:edges:ServiceInfo'</a>, <a>serviceInfo_edges</a> - Connections
--   to downstream services.
--   
--   <a>$sel:summaryStatistics:ServiceInfo'</a>,
--   <a>serviceInfo_summaryStatistics</a> - Aggregated statistics for the
--   service.
newServiceInfo :: ServiceInfo

-- | The service's state.
serviceInfo_state :: Lens' ServiceInfo (Maybe Text)

-- | The start time of the first segment that the service generated.
serviceInfo_startTime :: Lens' ServiceInfo (Maybe UTCTime)

-- | Indicates that the service was the first service to process a request.
serviceInfo_root :: Lens' ServiceInfo (Maybe Bool)

-- | A histogram that maps the spread of service response times.
serviceInfo_responseTimeHistogram :: Lens' ServiceInfo (Maybe [HistogramEntry])

-- | A histogram that maps the spread of service durations.
serviceInfo_durationHistogram :: Lens' ServiceInfo (Maybe [HistogramEntry])

-- | Identifier for the service. Unique within the service map.
serviceInfo_referenceId :: Lens' ServiceInfo (Maybe Int)

-- | Identifier of the Amazon Web Services account in which the service
--   runs.
serviceInfo_accountId :: Lens' ServiceInfo (Maybe Text)

-- | A list of names for the service, including the canonical name.
serviceInfo_names :: Lens' ServiceInfo (Maybe [Text])

-- | The canonical name of the service.
serviceInfo_name :: Lens' ServiceInfo (Maybe Text)

-- | The end time of the last segment that the service generated.
serviceInfo_endTime :: Lens' ServiceInfo (Maybe UTCTime)

-- | The type of service.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, <tt>AWS::EC2::Instance</tt> for an application
--   running on Amazon EC2 or <tt>AWS::DynamoDB::Table</tt> for an Amazon
--   DynamoDB table that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, <tt>AWS::DynamoDB</tt> for downstream calls to
--   Amazon DynamoDB that didn't target a specific table.</li>
--   <li><tt>client</tt> - Represents the clients that sent requests to a
--   root service.</li>
--   <li><tt>remote</tt> - A downstream service of indeterminate type.</li>
--   </ul>
serviceInfo_type :: Lens' ServiceInfo (Maybe Text)

-- | Connections to downstream services.
serviceInfo_edges :: Lens' ServiceInfo (Maybe [Edge])

-- | Aggregated statistics for the service.
serviceInfo_summaryStatistics :: Lens' ServiceInfo (Maybe ServiceStatistics)
instance GHC.Generics.Generic Amazonka.XRay.Types.ServiceInfo.ServiceInfo
instance GHC.Show.Show Amazonka.XRay.Types.ServiceInfo.ServiceInfo
instance GHC.Read.Read Amazonka.XRay.Types.ServiceInfo.ServiceInfo
instance GHC.Classes.Eq Amazonka.XRay.Types.ServiceInfo.ServiceInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ServiceInfo.ServiceInfo
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ServiceInfo.ServiceInfo
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ServiceInfo.ServiceInfo


module Amazonka.XRay.Types.Tag

-- | A map that contains tag keys and tag values to attach to an Amazon Web
--   Services X-Ray group or sampling rule. For more information about ways
--   to use tags, see <a>Tagging Amazon Web Services resources</a> in the
--   <i>Amazon Web Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use. You cannot edit or delete system tags.</li>
--   </ul>
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | A tag key, such as <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot
--   be empty. The key can be a maximum of 128 characters, and can contain
--   only Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt>
[$sel:key:Tag'] :: Tag -> Text

-- | An optional tag value, such as <tt>Production</tt> or
--   <tt>test-only</tt>. The value can be a maximum of 255 characters, and
--   contain only Unicode letters, numbers, or separators, or the following
--   special characters: <tt>+ - = . _ : /</tt>
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A tag key, such as
--   <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot be empty. The key
--   can be a maximum of 128 characters, and can contain only Unicode
--   letters, numbers, or separators, or the following special characters:
--   <tt>+ - = . _ : /</tt>
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - An optional tag value, such
--   as <tt>Production</tt> or <tt>test-only</tt>. The value can be a
--   maximum of 255 characters, and contain only Unicode letters, numbers,
--   or separators, or the following special characters: <tt>+ - = . _ :
--   /</tt>
newTag :: Text -> Text -> Tag

-- | A tag key, such as <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot
--   be empty. The key can be a maximum of 128 characters, and can contain
--   only Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt>
tag_key :: Lens' Tag Text

-- | An optional tag value, such as <tt>Production</tt> or
--   <tt>test-only</tt>. The value can be a maximum of 255 characters, and
--   contain only Unicode letters, numbers, or separators, or the following
--   special characters: <tt>+ - = . _ : /</tt>
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Amazonka.XRay.Types.Tag.Tag
instance GHC.Show.Show Amazonka.XRay.Types.Tag.Tag
instance GHC.Read.Read Amazonka.XRay.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.XRay.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.XRay.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.Tag.Tag


module Amazonka.XRay.Types.TelemetryRecord

-- | <i>See:</i> <a>newTelemetryRecord</a> smart constructor.
data TelemetryRecord
TelemetryRecord' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe BackendConnectionErrors -> POSIX -> TelemetryRecord
[$sel:segmentsReceivedCount:TelemetryRecord'] :: TelemetryRecord -> Maybe Int
[$sel:segmentsSentCount:TelemetryRecord'] :: TelemetryRecord -> Maybe Int
[$sel:segmentsSpilloverCount:TelemetryRecord'] :: TelemetryRecord -> Maybe Int
[$sel:segmentsRejectedCount:TelemetryRecord'] :: TelemetryRecord -> Maybe Int
[$sel:backendConnectionErrors:TelemetryRecord'] :: TelemetryRecord -> Maybe BackendConnectionErrors
[$sel:timestamp:TelemetryRecord'] :: TelemetryRecord -> POSIX

-- | Create a value of <a>TelemetryRecord</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:segmentsReceivedCount:TelemetryRecord'</a>,
--   <a>telemetryRecord_segmentsReceivedCount</a> -
--   
--   <a>$sel:segmentsSentCount:TelemetryRecord'</a>,
--   <a>telemetryRecord_segmentsSentCount</a> -
--   
--   <a>$sel:segmentsSpilloverCount:TelemetryRecord'</a>,
--   <a>telemetryRecord_segmentsSpilloverCount</a> -
--   
--   <a>$sel:segmentsRejectedCount:TelemetryRecord'</a>,
--   <a>telemetryRecord_segmentsRejectedCount</a> -
--   
--   <a>$sel:backendConnectionErrors:TelemetryRecord'</a>,
--   <a>telemetryRecord_backendConnectionErrors</a> -
--   
--   <a>$sel:timestamp:TelemetryRecord'</a>,
--   <a>telemetryRecord_timestamp</a> -
newTelemetryRecord :: UTCTime -> TelemetryRecord

telemetryRecord_segmentsReceivedCount :: Lens' TelemetryRecord (Maybe Int)

telemetryRecord_segmentsSentCount :: Lens' TelemetryRecord (Maybe Int)

telemetryRecord_segmentsSpilloverCount :: Lens' TelemetryRecord (Maybe Int)

telemetryRecord_segmentsRejectedCount :: Lens' TelemetryRecord (Maybe Int)

telemetryRecord_backendConnectionErrors :: Lens' TelemetryRecord (Maybe BackendConnectionErrors)

telemetryRecord_timestamp :: Lens' TelemetryRecord UTCTime
instance GHC.Generics.Generic Amazonka.XRay.Types.TelemetryRecord.TelemetryRecord
instance GHC.Show.Show Amazonka.XRay.Types.TelemetryRecord.TelemetryRecord
instance GHC.Read.Read Amazonka.XRay.Types.TelemetryRecord.TelemetryRecord
instance GHC.Classes.Eq Amazonka.XRay.Types.TelemetryRecord.TelemetryRecord
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.TelemetryRecord.TelemetryRecord
instance Control.DeepSeq.NFData Amazonka.XRay.Types.TelemetryRecord.TelemetryRecord
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.TelemetryRecord.TelemetryRecord


module Amazonka.XRay.Types.TimeRangeType
newtype TimeRangeType
TimeRangeType' :: Text -> TimeRangeType
[fromTimeRangeType] :: TimeRangeType -> Text
pattern TimeRangeType_Event :: TimeRangeType
pattern TimeRangeType_TraceId :: TimeRangeType
instance Amazonka.Data.XML.ToXML Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Amazonka.Data.XML.FromXML Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Amazonka.Data.Headers.ToHeader Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Amazonka.Data.Log.ToLog Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Amazonka.Data.ByteString.ToByteString Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Amazonka.Data.Text.ToText Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Amazonka.Data.Text.FromText Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Control.DeepSeq.NFData Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance GHC.Generics.Generic Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance GHC.Classes.Ord Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance GHC.Classes.Eq Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance GHC.Read.Read Amazonka.XRay.Types.TimeRangeType.TimeRangeType
instance GHC.Show.Show Amazonka.XRay.Types.TimeRangeType.TimeRangeType


module Amazonka.XRay.Types.TimeSeriesServiceStatistics

-- | A list of TimeSeriesStatistic structures.
--   
--   <i>See:</i> <a>newTimeSeriesServiceStatistics</a> smart constructor.
data TimeSeriesServiceStatistics
TimeSeriesServiceStatistics' :: Maybe ServiceStatistics -> Maybe [HistogramEntry] -> Maybe EdgeStatistics -> Maybe ForecastStatistics -> Maybe POSIX -> TimeSeriesServiceStatistics
[$sel:serviceSummaryStatistics:TimeSeriesServiceStatistics'] :: TimeSeriesServiceStatistics -> Maybe ServiceStatistics

-- | The response time histogram for the selected entities.
[$sel:responseTimeHistogram:TimeSeriesServiceStatistics'] :: TimeSeriesServiceStatistics -> Maybe [HistogramEntry]
[$sel:edgeSummaryStatistics:TimeSeriesServiceStatistics'] :: TimeSeriesServiceStatistics -> Maybe EdgeStatistics

-- | The forecasted high and low fault count values.
[$sel:serviceForecastStatistics:TimeSeriesServiceStatistics'] :: TimeSeriesServiceStatistics -> Maybe ForecastStatistics

-- | Timestamp of the window for which statistics are aggregated.
[$sel:timestamp:TimeSeriesServiceStatistics'] :: TimeSeriesServiceStatistics -> Maybe POSIX

-- | Create a value of <a>TimeSeriesServiceStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceSummaryStatistics:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_serviceSummaryStatistics</a> -
--   Undocumented member.
--   
--   <a>$sel:responseTimeHistogram:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_responseTimeHistogram</a> - The
--   response time histogram for the selected entities.
--   
--   <a>$sel:edgeSummaryStatistics:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_edgeSummaryStatistics</a> -
--   Undocumented member.
--   
--   <a>$sel:serviceForecastStatistics:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_serviceForecastStatistics</a> - The
--   forecasted high and low fault count values.
--   
--   <a>$sel:timestamp:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_timestamp</a> - Timestamp of the window
--   for which statistics are aggregated.
newTimeSeriesServiceStatistics :: TimeSeriesServiceStatistics

-- | Undocumented member.
timeSeriesServiceStatistics_serviceSummaryStatistics :: Lens' TimeSeriesServiceStatistics (Maybe ServiceStatistics)

-- | The response time histogram for the selected entities.
timeSeriesServiceStatistics_responseTimeHistogram :: Lens' TimeSeriesServiceStatistics (Maybe [HistogramEntry])

-- | Undocumented member.
timeSeriesServiceStatistics_edgeSummaryStatistics :: Lens' TimeSeriesServiceStatistics (Maybe EdgeStatistics)

-- | The forecasted high and low fault count values.
timeSeriesServiceStatistics_serviceForecastStatistics :: Lens' TimeSeriesServiceStatistics (Maybe ForecastStatistics)

-- | Timestamp of the window for which statistics are aggregated.
timeSeriesServiceStatistics_timestamp :: Lens' TimeSeriesServiceStatistics (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.XRay.Types.TimeSeriesServiceStatistics.TimeSeriesServiceStatistics
instance GHC.Show.Show Amazonka.XRay.Types.TimeSeriesServiceStatistics.TimeSeriesServiceStatistics
instance GHC.Read.Read Amazonka.XRay.Types.TimeSeriesServiceStatistics.TimeSeriesServiceStatistics
instance GHC.Classes.Eq Amazonka.XRay.Types.TimeSeriesServiceStatistics.TimeSeriesServiceStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.TimeSeriesServiceStatistics.TimeSeriesServiceStatistics
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.TimeSeriesServiceStatistics.TimeSeriesServiceStatistics
instance Control.DeepSeq.NFData Amazonka.XRay.Types.TimeSeriesServiceStatistics.TimeSeriesServiceStatistics


module Amazonka.XRay.Types.Trace

-- | A collection of segment documents with matching trace IDs.
--   
--   <i>See:</i> <a>newTrace</a> smart constructor.
data Trace
Trace' :: Maybe Bool -> Maybe Text -> Maybe [Segment] -> Maybe Double -> Trace

-- | LimitExceeded is set to true when the trace has exceeded one of the
--   defined quotas. For more information about quotas, see <a>Amazon Web
--   Services X-Ray endpoints and quotas</a>.
[$sel:limitExceeded:Trace'] :: Trace -> Maybe Bool

-- | The unique identifier for the request that generated the trace's
--   segments and subsegments.
[$sel:id:Trace'] :: Trace -> Maybe Text

-- | Segment documents for the segments and subsegments that comprise the
--   trace.
[$sel:segments:Trace'] :: Trace -> Maybe [Segment]

-- | The length of time in seconds between the start time of the root
--   segment and the end time of the last segment that completed.
[$sel:duration:Trace'] :: Trace -> Maybe Double

-- | Create a value of <a>Trace</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limitExceeded:Trace'</a>, <a>trace_limitExceeded</a> -
--   LimitExceeded is set to true when the trace has exceeded one of the
--   defined quotas. For more information about quotas, see <a>Amazon Web
--   Services X-Ray endpoints and quotas</a>.
--   
--   <a>$sel:id:Trace'</a>, <a>trace_id</a> - The unique identifier for the
--   request that generated the trace's segments and subsegments.
--   
--   <a>$sel:segments:Trace'</a>, <a>trace_segments</a> - Segment documents
--   for the segments and subsegments that comprise the trace.
--   
--   <a>$sel:duration:Trace'</a>, <a>trace_duration</a> - The length of
--   time in seconds between the start time of the root segment and the end
--   time of the last segment that completed.
newTrace :: Trace

-- | LimitExceeded is set to true when the trace has exceeded one of the
--   defined quotas. For more information about quotas, see <a>Amazon Web
--   Services X-Ray endpoints and quotas</a>.
trace_limitExceeded :: Lens' Trace (Maybe Bool)

-- | The unique identifier for the request that generated the trace's
--   segments and subsegments.
trace_id :: Lens' Trace (Maybe Text)

-- | Segment documents for the segments and subsegments that comprise the
--   trace.
trace_segments :: Lens' Trace (Maybe [Segment])

-- | The length of time in seconds between the start time of the root
--   segment and the end time of the last segment that completed.
trace_duration :: Lens' Trace (Maybe Double)
instance GHC.Generics.Generic Amazonka.XRay.Types.Trace.Trace
instance GHC.Show.Show Amazonka.XRay.Types.Trace.Trace
instance GHC.Read.Read Amazonka.XRay.Types.Trace.Trace
instance GHC.Classes.Eq Amazonka.XRay.Types.Trace.Trace
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.Trace.Trace
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.Trace.Trace
instance Control.DeepSeq.NFData Amazonka.XRay.Types.Trace.Trace


module Amazonka.XRay.Types.TraceUser

-- | Information about a user recorded in segment documents.
--   
--   <i>See:</i> <a>newTraceUser</a> smart constructor.
data TraceUser
TraceUser' :: Maybe [ServiceId] -> Maybe Text -> TraceUser

-- | Services that the user's request hit.
[$sel:serviceIds:TraceUser'] :: TraceUser -> Maybe [ServiceId]

-- | The user's name.
[$sel:userName:TraceUser'] :: TraceUser -> Maybe Text

-- | Create a value of <a>TraceUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceIds:TraceUser'</a>, <a>traceUser_serviceIds</a> -
--   Services that the user's request hit.
--   
--   <a>$sel:userName:TraceUser'</a>, <a>traceUser_userName</a> - The
--   user's name.
newTraceUser :: TraceUser

-- | Services that the user's request hit.
traceUser_serviceIds :: Lens' TraceUser (Maybe [ServiceId])

-- | The user's name.
traceUser_userName :: Lens' TraceUser (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.TraceUser.TraceUser
instance GHC.Show.Show Amazonka.XRay.Types.TraceUser.TraceUser
instance GHC.Read.Read Amazonka.XRay.Types.TraceUser.TraceUser
instance GHC.Classes.Eq Amazonka.XRay.Types.TraceUser.TraceUser
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.TraceUser.TraceUser
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.TraceUser.TraceUser
instance Control.DeepSeq.NFData Amazonka.XRay.Types.TraceUser.TraceUser


module Amazonka.XRay.Types.UnprocessedStatistics

-- | Sampling statistics from a call to <a>GetSamplingTargets</a> that
--   X-Ray could not process.
--   
--   <i>See:</i> <a>newUnprocessedStatistics</a> smart constructor.
data UnprocessedStatistics
UnprocessedStatistics' :: Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedStatistics

-- | The name of the sampling rule.
[$sel:ruleName:UnprocessedStatistics'] :: UnprocessedStatistics -> Maybe Text

-- | The error code.
[$sel:errorCode:UnprocessedStatistics'] :: UnprocessedStatistics -> Maybe Text

-- | The error message.
[$sel:message:UnprocessedStatistics'] :: UnprocessedStatistics -> Maybe Text

-- | Create a value of <a>UnprocessedStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleName:UnprocessedStatistics'</a>,
--   <a>unprocessedStatistics_ruleName</a> - The name of the sampling rule.
--   
--   <a>$sel:errorCode:UnprocessedStatistics'</a>,
--   <a>unprocessedStatistics_errorCode</a> - The error code.
--   
--   <a>$sel:message:UnprocessedStatistics'</a>,
--   <a>unprocessedStatistics_message</a> - The error message.
newUnprocessedStatistics :: UnprocessedStatistics

-- | The name of the sampling rule.
unprocessedStatistics_ruleName :: Lens' UnprocessedStatistics (Maybe Text)

-- | The error code.
unprocessedStatistics_errorCode :: Lens' UnprocessedStatistics (Maybe Text)

-- | The error message.
unprocessedStatistics_message :: Lens' UnprocessedStatistics (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.UnprocessedStatistics.UnprocessedStatistics
instance GHC.Show.Show Amazonka.XRay.Types.UnprocessedStatistics.UnprocessedStatistics
instance GHC.Read.Read Amazonka.XRay.Types.UnprocessedStatistics.UnprocessedStatistics
instance GHC.Classes.Eq Amazonka.XRay.Types.UnprocessedStatistics.UnprocessedStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.UnprocessedStatistics.UnprocessedStatistics
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.UnprocessedStatistics.UnprocessedStatistics
instance Control.DeepSeq.NFData Amazonka.XRay.Types.UnprocessedStatistics.UnprocessedStatistics


module Amazonka.XRay.Types.UnprocessedTraceSegment

-- | Information about a segment that failed processing.
--   
--   <i>See:</i> <a>newUnprocessedTraceSegment</a> smart constructor.
data UnprocessedTraceSegment
UnprocessedTraceSegment' :: Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedTraceSegment

-- | The error that caused processing to fail.
[$sel:errorCode:UnprocessedTraceSegment'] :: UnprocessedTraceSegment -> Maybe Text

-- | The segment's ID.
[$sel:id:UnprocessedTraceSegment'] :: UnprocessedTraceSegment -> Maybe Text

-- | The error message.
[$sel:message:UnprocessedTraceSegment'] :: UnprocessedTraceSegment -> Maybe Text

-- | Create a value of <a>UnprocessedTraceSegment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:UnprocessedTraceSegment'</a>,
--   <a>unprocessedTraceSegment_errorCode</a> - The error that caused
--   processing to fail.
--   
--   <a>$sel:id:UnprocessedTraceSegment'</a>,
--   <a>unprocessedTraceSegment_id</a> - The segment's ID.
--   
--   <a>$sel:message:UnprocessedTraceSegment'</a>,
--   <a>unprocessedTraceSegment_message</a> - The error message.
newUnprocessedTraceSegment :: UnprocessedTraceSegment

-- | The error that caused processing to fail.
unprocessedTraceSegment_errorCode :: Lens' UnprocessedTraceSegment (Maybe Text)

-- | The segment's ID.
unprocessedTraceSegment_id :: Lens' UnprocessedTraceSegment (Maybe Text)

-- | The error message.
unprocessedTraceSegment_message :: Lens' UnprocessedTraceSegment (Maybe Text)
instance GHC.Generics.Generic Amazonka.XRay.Types.UnprocessedTraceSegment.UnprocessedTraceSegment
instance GHC.Show.Show Amazonka.XRay.Types.UnprocessedTraceSegment.UnprocessedTraceSegment
instance GHC.Read.Read Amazonka.XRay.Types.UnprocessedTraceSegment.UnprocessedTraceSegment
instance GHC.Classes.Eq Amazonka.XRay.Types.UnprocessedTraceSegment.UnprocessedTraceSegment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.UnprocessedTraceSegment.UnprocessedTraceSegment
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.UnprocessedTraceSegment.UnprocessedTraceSegment
instance Control.DeepSeq.NFData Amazonka.XRay.Types.UnprocessedTraceSegment.UnprocessedTraceSegment


module Amazonka.XRay.Types.ValueWithServiceIds

-- | Information about a segment annotation.
--   
--   <i>See:</i> <a>newValueWithServiceIds</a> smart constructor.
data ValueWithServiceIds
ValueWithServiceIds' :: Maybe [ServiceId] -> Maybe AnnotationValue -> ValueWithServiceIds

-- | Services to which the annotation applies.
[$sel:serviceIds:ValueWithServiceIds'] :: ValueWithServiceIds -> Maybe [ServiceId]

-- | Values of the annotation.
[$sel:annotationValue:ValueWithServiceIds'] :: ValueWithServiceIds -> Maybe AnnotationValue

-- | Create a value of <a>ValueWithServiceIds</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceIds:ValueWithServiceIds'</a>,
--   <a>valueWithServiceIds_serviceIds</a> - Services to which the
--   annotation applies.
--   
--   <a>$sel:annotationValue:ValueWithServiceIds'</a>,
--   <a>valueWithServiceIds_annotationValue</a> - Values of the annotation.
newValueWithServiceIds :: ValueWithServiceIds

-- | Services to which the annotation applies.
valueWithServiceIds_serviceIds :: Lens' ValueWithServiceIds (Maybe [ServiceId])

-- | Values of the annotation.
valueWithServiceIds_annotationValue :: Lens' ValueWithServiceIds (Maybe AnnotationValue)
instance GHC.Generics.Generic Amazonka.XRay.Types.ValueWithServiceIds.ValueWithServiceIds
instance GHC.Show.Show Amazonka.XRay.Types.ValueWithServiceIds.ValueWithServiceIds
instance GHC.Read.Read Amazonka.XRay.Types.ValueWithServiceIds.ValueWithServiceIds
instance GHC.Classes.Eq Amazonka.XRay.Types.ValueWithServiceIds.ValueWithServiceIds
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.ValueWithServiceIds.ValueWithServiceIds
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.ValueWithServiceIds.ValueWithServiceIds
instance Control.DeepSeq.NFData Amazonka.XRay.Types.ValueWithServiceIds.ValueWithServiceIds


module Amazonka.XRay.Types.TraceSummary

-- | Metadata generated from the segment documents in a trace.
--   
--   <i>See:</i> <a>newTraceSummary</a> smart constructor.
data TraceSummary
TraceSummary' :: Maybe (HashMap Text [ValueWithServiceIds]) -> Maybe Bool -> Maybe [TraceUser] -> Maybe ServiceId -> Maybe Bool -> Maybe [ServiceId] -> Maybe POSIX -> Maybe Bool -> Maybe [ErrorRootCause] -> Maybe [ResourceARNDetail] -> Maybe [AvailabilityZoneDetail] -> Maybe [InstanceIdDetail] -> Maybe [ResponseTimeRootCause] -> Maybe Bool -> Maybe Text -> Maybe Http -> Maybe Int -> Maybe Double -> Maybe [FaultRootCause] -> Maybe Double -> TraceSummary

-- | Annotations from the trace's segment documents.
[$sel:annotations:TraceSummary'] :: TraceSummary -> Maybe (HashMap Text [ValueWithServiceIds])

-- | One or more of the segment documents has a 429 throttling error.
[$sel:hasThrottle:TraceSummary'] :: TraceSummary -> Maybe Bool

-- | Users from the trace's segment documents.
[$sel:users:TraceSummary'] :: TraceSummary -> Maybe [TraceUser]

-- | The root of a trace.
[$sel:entryPoint:TraceSummary'] :: TraceSummary -> Maybe ServiceId

-- | The root segment document has a 500 series error.
[$sel:hasFault:TraceSummary'] :: TraceSummary -> Maybe Bool

-- | Service IDs from the trace's segment documents.
[$sel:serviceIds:TraceSummary'] :: TraceSummary -> Maybe [ServiceId]

-- | The matched time stamp of a defined event.
[$sel:matchedEventTime:TraceSummary'] :: TraceSummary -> Maybe POSIX

-- | One or more of the segment documents is in progress.
[$sel:isPartial:TraceSummary'] :: TraceSummary -> Maybe Bool

-- | A collection of ErrorRootCause structures corresponding to the trace
--   segments.
[$sel:errorRootCauses:TraceSummary'] :: TraceSummary -> Maybe [ErrorRootCause]

-- | A list of resource ARNs for any resource corresponding to the trace
--   segments.
[$sel:resourceARNs:TraceSummary'] :: TraceSummary -> Maybe [ResourceARNDetail]

-- | A list of Availability Zones for any zone corresponding to the trace
--   segments.
[$sel:availabilityZones:TraceSummary'] :: TraceSummary -> Maybe [AvailabilityZoneDetail]

-- | A list of EC2 instance IDs for any instance corresponding to the trace
--   segments.
[$sel:instanceIds:TraceSummary'] :: TraceSummary -> Maybe [InstanceIdDetail]

-- | A collection of ResponseTimeRootCause structures corresponding to the
--   trace segments.
[$sel:responseTimeRootCauses:TraceSummary'] :: TraceSummary -> Maybe [ResponseTimeRootCause]

-- | The root segment document has a 400 series error.
[$sel:hasError:TraceSummary'] :: TraceSummary -> Maybe Bool

-- | The unique identifier for the request that generated the trace's
--   segments and subsegments.
[$sel:id:TraceSummary'] :: TraceSummary -> Maybe Text

-- | Information about the HTTP request served by the trace.
[$sel:http:TraceSummary'] :: TraceSummary -> Maybe Http

-- | The revision number of a trace.
[$sel:revision:TraceSummary'] :: TraceSummary -> Maybe Int

-- | The length of time in seconds between the start time of the root
--   segment and the end time of the last segment that completed.
[$sel:duration:TraceSummary'] :: TraceSummary -> Maybe Double

-- | A collection of FaultRootCause structures corresponding to the trace
--   segments.
[$sel:faultRootCauses:TraceSummary'] :: TraceSummary -> Maybe [FaultRootCause]

-- | The length of time in seconds between the start and end times of the
--   root segment. If the service performs work asynchronously, the
--   response time measures the time before the response is sent to the
--   user, while the duration measures the amount of time before the last
--   traced activity completes.
[$sel:responseTime:TraceSummary'] :: TraceSummary -> Maybe Double

-- | Create a value of <a>TraceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:annotations:TraceSummary'</a>, <a>traceSummary_annotations</a>
--   - Annotations from the trace's segment documents.
--   
--   <a>$sel:hasThrottle:TraceSummary'</a>, <a>traceSummary_hasThrottle</a>
--   - One or more of the segment documents has a 429 throttling error.
--   
--   <a>$sel:users:TraceSummary'</a>, <a>traceSummary_users</a> - Users
--   from the trace's segment documents.
--   
--   <a>$sel:entryPoint:TraceSummary'</a>, <a>traceSummary_entryPoint</a> -
--   The root of a trace.
--   
--   <a>$sel:hasFault:TraceSummary'</a>, <a>traceSummary_hasFault</a> - The
--   root segment document has a 500 series error.
--   
--   <a>$sel:serviceIds:TraceSummary'</a>, <a>traceSummary_serviceIds</a> -
--   Service IDs from the trace's segment documents.
--   
--   <a>$sel:matchedEventTime:TraceSummary'</a>,
--   <a>traceSummary_matchedEventTime</a> - The matched time stamp of a
--   defined event.
--   
--   <a>$sel:isPartial:TraceSummary'</a>, <a>traceSummary_isPartial</a> -
--   One or more of the segment documents is in progress.
--   
--   <a>$sel:errorRootCauses:TraceSummary'</a>,
--   <a>traceSummary_errorRootCauses</a> - A collection of ErrorRootCause
--   structures corresponding to the trace segments.
--   
--   <a>$sel:resourceARNs:TraceSummary'</a>,
--   <a>traceSummary_resourceARNs</a> - A list of resource ARNs for any
--   resource corresponding to the trace segments.
--   
--   <a>$sel:availabilityZones:TraceSummary'</a>,
--   <a>traceSummary_availabilityZones</a> - A list of Availability Zones
--   for any zone corresponding to the trace segments.
--   
--   <a>$sel:instanceIds:TraceSummary'</a>, <a>traceSummary_instanceIds</a>
--   - A list of EC2 instance IDs for any instance corresponding to the
--   trace segments.
--   
--   <a>$sel:responseTimeRootCauses:TraceSummary'</a>,
--   <a>traceSummary_responseTimeRootCauses</a> - A collection of
--   ResponseTimeRootCause structures corresponding to the trace segments.
--   
--   <a>$sel:hasError:TraceSummary'</a>, <a>traceSummary_hasError</a> - The
--   root segment document has a 400 series error.
--   
--   <a>$sel:id:TraceSummary'</a>, <a>traceSummary_id</a> - The unique
--   identifier for the request that generated the trace's segments and
--   subsegments.
--   
--   <a>$sel:http:TraceSummary'</a>, <a>traceSummary_http</a> - Information
--   about the HTTP request served by the trace.
--   
--   <a>$sel:revision:TraceSummary'</a>, <a>traceSummary_revision</a> - The
--   revision number of a trace.
--   
--   <a>$sel:duration:TraceSummary'</a>, <a>traceSummary_duration</a> - The
--   length of time in seconds between the start time of the root segment
--   and the end time of the last segment that completed.
--   
--   <a>$sel:faultRootCauses:TraceSummary'</a>,
--   <a>traceSummary_faultRootCauses</a> - A collection of FaultRootCause
--   structures corresponding to the trace segments.
--   
--   <a>$sel:responseTime:TraceSummary'</a>,
--   <a>traceSummary_responseTime</a> - The length of time in seconds
--   between the start and end times of the root segment. If the service
--   performs work asynchronously, the response time measures the time
--   before the response is sent to the user, while the duration measures
--   the amount of time before the last traced activity completes.
newTraceSummary :: TraceSummary

-- | Annotations from the trace's segment documents.
traceSummary_annotations :: Lens' TraceSummary (Maybe (HashMap Text [ValueWithServiceIds]))

-- | One or more of the segment documents has a 429 throttling error.
traceSummary_hasThrottle :: Lens' TraceSummary (Maybe Bool)

-- | Users from the trace's segment documents.
traceSummary_users :: Lens' TraceSummary (Maybe [TraceUser])

-- | The root of a trace.
traceSummary_entryPoint :: Lens' TraceSummary (Maybe ServiceId)

-- | The root segment document has a 500 series error.
traceSummary_hasFault :: Lens' TraceSummary (Maybe Bool)

-- | Service IDs from the trace's segment documents.
traceSummary_serviceIds :: Lens' TraceSummary (Maybe [ServiceId])

-- | The matched time stamp of a defined event.
traceSummary_matchedEventTime :: Lens' TraceSummary (Maybe UTCTime)

-- | One or more of the segment documents is in progress.
traceSummary_isPartial :: Lens' TraceSummary (Maybe Bool)

-- | A collection of ErrorRootCause structures corresponding to the trace
--   segments.
traceSummary_errorRootCauses :: Lens' TraceSummary (Maybe [ErrorRootCause])

-- | A list of resource ARNs for any resource corresponding to the trace
--   segments.
traceSummary_resourceARNs :: Lens' TraceSummary (Maybe [ResourceARNDetail])

-- | A list of Availability Zones for any zone corresponding to the trace
--   segments.
traceSummary_availabilityZones :: Lens' TraceSummary (Maybe [AvailabilityZoneDetail])

-- | A list of EC2 instance IDs for any instance corresponding to the trace
--   segments.
traceSummary_instanceIds :: Lens' TraceSummary (Maybe [InstanceIdDetail])

-- | A collection of ResponseTimeRootCause structures corresponding to the
--   trace segments.
traceSummary_responseTimeRootCauses :: Lens' TraceSummary (Maybe [ResponseTimeRootCause])

-- | The root segment document has a 400 series error.
traceSummary_hasError :: Lens' TraceSummary (Maybe Bool)

-- | The unique identifier for the request that generated the trace's
--   segments and subsegments.
traceSummary_id :: Lens' TraceSummary (Maybe Text)

-- | Information about the HTTP request served by the trace.
traceSummary_http :: Lens' TraceSummary (Maybe Http)

-- | The revision number of a trace.
traceSummary_revision :: Lens' TraceSummary (Maybe Int)

-- | The length of time in seconds between the start time of the root
--   segment and the end time of the last segment that completed.
traceSummary_duration :: Lens' TraceSummary (Maybe Double)

-- | A collection of FaultRootCause structures corresponding to the trace
--   segments.
traceSummary_faultRootCauses :: Lens' TraceSummary (Maybe [FaultRootCause])

-- | The length of time in seconds between the start and end times of the
--   root segment. If the service performs work asynchronously, the
--   response time measures the time before the response is sent to the
--   user, while the duration measures the amount of time before the last
--   traced activity completes.
traceSummary_responseTime :: Lens' TraceSummary (Maybe Double)
instance GHC.Generics.Generic Amazonka.XRay.Types.TraceSummary.TraceSummary
instance GHC.Show.Show Amazonka.XRay.Types.TraceSummary.TraceSummary
instance GHC.Read.Read Amazonka.XRay.Types.TraceSummary.TraceSummary
instance GHC.Classes.Eq Amazonka.XRay.Types.TraceSummary.TraceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.XRay.Types.TraceSummary.TraceSummary
instance Data.Hashable.Class.Hashable Amazonka.XRay.Types.TraceSummary.TraceSummary
instance Control.DeepSeq.NFData Amazonka.XRay.Types.TraceSummary.TraceSummary


module Amazonka.XRay.Types

-- | API version <tt>2016-04-12</tt> of the Amazon X-Ray SDK configuration.
defaultService :: Service

-- | The request is missing required parameters or has invalid parameters.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the maximum number of sampling rules.
_RuleLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request exceeds the maximum number of requests per second.
_ThrottledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have exceeded the maximum number of tags you can apply to this
--   resource.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource was not found. Verify that the name or Amazon Resource
--   Name (ARN) of the resource is correct.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype EncryptionStatus
EncryptionStatus' :: Text -> EncryptionStatus
[fromEncryptionStatus] :: EncryptionStatus -> Text
pattern EncryptionStatus_ACTIVE :: EncryptionStatus
pattern EncryptionStatus_UPDATING :: EncryptionStatus
newtype EncryptionType
EncryptionType' :: Text -> EncryptionType
[fromEncryptionType] :: EncryptionType -> Text
pattern EncryptionType_KMS :: EncryptionType
pattern EncryptionType_NONE :: EncryptionType
newtype InsightCategory
InsightCategory' :: Text -> InsightCategory
[fromInsightCategory] :: InsightCategory -> Text
pattern InsightCategory_FAULT :: InsightCategory
newtype InsightState
InsightState' :: Text -> InsightState
[fromInsightState] :: InsightState -> Text
pattern InsightState_ACTIVE :: InsightState
pattern InsightState_CLOSED :: InsightState
newtype SamplingStrategyName
SamplingStrategyName' :: Text -> SamplingStrategyName
[fromSamplingStrategyName] :: SamplingStrategyName -> Text
pattern SamplingStrategyName_FixedRate :: SamplingStrategyName
pattern SamplingStrategyName_PartialScan :: SamplingStrategyName
newtype TimeRangeType
TimeRangeType' :: Text -> TimeRangeType
[fromTimeRangeType] :: TimeRangeType -> Text
pattern TimeRangeType_Event :: TimeRangeType
pattern TimeRangeType_TraceId :: TimeRangeType

-- | An alias for an edge.
--   
--   <i>See:</i> <a>newAlias</a> smart constructor.
data Alias
Alias' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Alias

-- | A list of names for the alias, including the canonical name.
[$sel:names:Alias'] :: Alias -> Maybe [Text]

-- | The canonical name of the alias.
[$sel:name:Alias'] :: Alias -> Maybe Text

-- | The type of the alias.
[$sel:type':Alias'] :: Alias -> Maybe Text

-- | Create a value of <a>Alias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:Alias'</a>, <a>alias_names</a> - A list of names for the
--   alias, including the canonical name.
--   
--   <a>$sel:name:Alias'</a>, <a>alias_name</a> - The canonical name of the
--   alias.
--   
--   <a>$sel:type':Alias'</a>, <a>alias_type</a> - The type of the alias.
newAlias :: Alias

-- | A list of names for the alias, including the canonical name.
alias_names :: Lens' Alias (Maybe [Text])

-- | The canonical name of the alias.
alias_name :: Lens' Alias (Maybe Text)

-- | The type of the alias.
alias_type :: Lens' Alias (Maybe Text)

-- | Value of a segment annotation. Has one of three value types: Number,
--   Boolean, or String.
--   
--   <i>See:</i> <a>newAnnotationValue</a> smart constructor.
data AnnotationValue
AnnotationValue' :: Maybe Double -> Maybe Text -> Maybe Bool -> AnnotationValue

-- | Value for a Number annotation.
[$sel:numberValue:AnnotationValue'] :: AnnotationValue -> Maybe Double

-- | Value for a String annotation.
[$sel:stringValue:AnnotationValue'] :: AnnotationValue -> Maybe Text

-- | Value for a Boolean annotation.
[$sel:booleanValue:AnnotationValue'] :: AnnotationValue -> Maybe Bool

-- | Create a value of <a>AnnotationValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberValue:AnnotationValue'</a>,
--   <a>annotationValue_numberValue</a> - Value for a Number annotation.
--   
--   <a>$sel:stringValue:AnnotationValue'</a>,
--   <a>annotationValue_stringValue</a> - Value for a String annotation.
--   
--   <a>$sel:booleanValue:AnnotationValue'</a>,
--   <a>annotationValue_booleanValue</a> - Value for a Boolean annotation.
newAnnotationValue :: AnnotationValue

-- | Value for a Number annotation.
annotationValue_numberValue :: Lens' AnnotationValue (Maybe Double)

-- | Value for a String annotation.
annotationValue_stringValue :: Lens' AnnotationValue (Maybe Text)

-- | Value for a Boolean annotation.
annotationValue_booleanValue :: Lens' AnnotationValue (Maybe Bool)

-- | The service within the service graph that has anomalously high fault
--   rates.
--   
--   <i>See:</i> <a>newAnomalousService</a> smart constructor.
data AnomalousService
AnomalousService' :: Maybe ServiceId -> AnomalousService
[$sel:serviceId:AnomalousService'] :: AnomalousService -> Maybe ServiceId

-- | Create a value of <a>AnomalousService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceId:AnomalousService'</a>,
--   <a>anomalousService_serviceId</a> - Undocumented member.
newAnomalousService :: AnomalousService

-- | Undocumented member.
anomalousService_serviceId :: Lens' AnomalousService (Maybe ServiceId)

-- | A list of Availability Zones corresponding to the segments in a trace.
--   
--   <i>See:</i> <a>newAvailabilityZoneDetail</a> smart constructor.
data AvailabilityZoneDetail
AvailabilityZoneDetail' :: Maybe Text -> AvailabilityZoneDetail

-- | The name of a corresponding Availability Zone.
[$sel:name:AvailabilityZoneDetail'] :: AvailabilityZoneDetail -> Maybe Text

-- | Create a value of <a>AvailabilityZoneDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AvailabilityZoneDetail'</a>,
--   <a>availabilityZoneDetail_name</a> - The name of a corresponding
--   Availability Zone.
newAvailabilityZoneDetail :: AvailabilityZoneDetail

-- | The name of a corresponding Availability Zone.
availabilityZoneDetail_name :: Lens' AvailabilityZoneDetail (Maybe Text)

-- | <i>See:</i> <a>newBackendConnectionErrors</a> smart constructor.
data BackendConnectionErrors
BackendConnectionErrors' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> BackendConnectionErrors
[$sel:otherCount:BackendConnectionErrors'] :: BackendConnectionErrors -> Maybe Int
[$sel:timeoutCount:BackendConnectionErrors'] :: BackendConnectionErrors -> Maybe Int
[$sel:hTTPCode5XXCount:BackendConnectionErrors'] :: BackendConnectionErrors -> Maybe Int
[$sel:connectionRefusedCount:BackendConnectionErrors'] :: BackendConnectionErrors -> Maybe Int
[$sel:hTTPCode4XXCount:BackendConnectionErrors'] :: BackendConnectionErrors -> Maybe Int
[$sel:unknownHostCount:BackendConnectionErrors'] :: BackendConnectionErrors -> Maybe Int

-- | Create a value of <a>BackendConnectionErrors</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:otherCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_otherCount</a> -
--   
--   <a>$sel:timeoutCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_timeoutCount</a> -
--   
--   <a>$sel:hTTPCode5XXCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_hTTPCode5XXCount</a> -
--   
--   <a>$sel:connectionRefusedCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_connectionRefusedCount</a> -
--   
--   <a>$sel:hTTPCode4XXCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_hTTPCode4XXCount</a> -
--   
--   <a>$sel:unknownHostCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_unknownHostCount</a> -
newBackendConnectionErrors :: BackendConnectionErrors

backendConnectionErrors_otherCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_timeoutCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_hTTPCode5XXCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_connectionRefusedCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_hTTPCode4XXCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_unknownHostCount :: Lens' BackendConnectionErrors (Maybe Int)

-- | Information about a connection between two services.
--   
--   <i>See:</i> <a>newEdge</a> smart constructor.
data Edge
Edge' :: Maybe POSIX -> Maybe [Alias] -> Maybe [HistogramEntry] -> Maybe Int -> Maybe POSIX -> Maybe EdgeStatistics -> Edge

-- | The start time of the first segment on the edge.
[$sel:startTime:Edge'] :: Edge -> Maybe POSIX

-- | Aliases for the edge.
[$sel:aliases:Edge'] :: Edge -> Maybe [Alias]

-- | A histogram that maps the spread of client response times on an edge.
[$sel:responseTimeHistogram:Edge'] :: Edge -> Maybe [HistogramEntry]

-- | Identifier of the edge. Unique within a service map.
[$sel:referenceId:Edge'] :: Edge -> Maybe Int

-- | The end time of the last segment on the edge.
[$sel:endTime:Edge'] :: Edge -> Maybe POSIX

-- | Response statistics for segments on the edge.
[$sel:summaryStatistics:Edge'] :: Edge -> Maybe EdgeStatistics

-- | Create a value of <a>Edge</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:Edge'</a>, <a>edge_startTime</a> - The start time of
--   the first segment on the edge.
--   
--   <a>$sel:aliases:Edge'</a>, <a>edge_aliases</a> - Aliases for the edge.
--   
--   <a>$sel:responseTimeHistogram:Edge'</a>,
--   <a>edge_responseTimeHistogram</a> - A histogram that maps the spread
--   of client response times on an edge.
--   
--   <a>$sel:referenceId:Edge'</a>, <a>edge_referenceId</a> - Identifier of
--   the edge. Unique within a service map.
--   
--   <a>$sel:endTime:Edge'</a>, <a>edge_endTime</a> - The end time of the
--   last segment on the edge.
--   
--   <a>$sel:summaryStatistics:Edge'</a>, <a>edge_summaryStatistics</a> -
--   Response statistics for segments on the edge.
newEdge :: Edge

-- | The start time of the first segment on the edge.
edge_startTime :: Lens' Edge (Maybe UTCTime)

-- | Aliases for the edge.
edge_aliases :: Lens' Edge (Maybe [Alias])

-- | A histogram that maps the spread of client response times on an edge.
edge_responseTimeHistogram :: Lens' Edge (Maybe [HistogramEntry])

-- | Identifier of the edge. Unique within a service map.
edge_referenceId :: Lens' Edge (Maybe Int)

-- | The end time of the last segment on the edge.
edge_endTime :: Lens' Edge (Maybe UTCTime)

-- | Response statistics for segments on the edge.
edge_summaryStatistics :: Lens' Edge (Maybe EdgeStatistics)

-- | Response statistics for an edge.
--   
--   <i>See:</i> <a>newEdgeStatistics</a> smart constructor.
data EdgeStatistics
EdgeStatistics' :: Maybe FaultStatistics -> Maybe Integer -> Maybe Double -> Maybe ErrorStatistics -> Maybe Integer -> EdgeStatistics

-- | Information about requests that failed with a 5xx Server Error status
--   code.
[$sel:faultStatistics:EdgeStatistics'] :: EdgeStatistics -> Maybe FaultStatistics

-- | The number of requests that completed with a 2xx Success status code.
[$sel:okCount:EdgeStatistics'] :: EdgeStatistics -> Maybe Integer

-- | The aggregate response time of completed requests.
[$sel:totalResponseTime:EdgeStatistics'] :: EdgeStatistics -> Maybe Double

-- | Information about requests that failed with a 4xx Client Error status
--   code.
[$sel:errorStatistics:EdgeStatistics'] :: EdgeStatistics -> Maybe ErrorStatistics

-- | The total number of completed requests.
[$sel:totalCount:EdgeStatistics'] :: EdgeStatistics -> Maybe Integer

-- | Create a value of <a>EdgeStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:faultStatistics:EdgeStatistics'</a>,
--   <a>edgeStatistics_faultStatistics</a> - Information about requests
--   that failed with a 5xx Server Error status code.
--   
--   <a>$sel:okCount:EdgeStatistics'</a>, <a>edgeStatistics_okCount</a> -
--   The number of requests that completed with a 2xx Success status code.
--   
--   <a>$sel:totalResponseTime:EdgeStatistics'</a>,
--   <a>edgeStatistics_totalResponseTime</a> - The aggregate response time
--   of completed requests.
--   
--   <a>$sel:errorStatistics:EdgeStatistics'</a>,
--   <a>edgeStatistics_errorStatistics</a> - Information about requests
--   that failed with a 4xx Client Error status code.
--   
--   <a>$sel:totalCount:EdgeStatistics'</a>,
--   <a>edgeStatistics_totalCount</a> - The total number of completed
--   requests.
newEdgeStatistics :: EdgeStatistics

-- | Information about requests that failed with a 5xx Server Error status
--   code.
edgeStatistics_faultStatistics :: Lens' EdgeStatistics (Maybe FaultStatistics)

-- | The number of requests that completed with a 2xx Success status code.
edgeStatistics_okCount :: Lens' EdgeStatistics (Maybe Integer)

-- | The aggregate response time of completed requests.
edgeStatistics_totalResponseTime :: Lens' EdgeStatistics (Maybe Double)

-- | Information about requests that failed with a 4xx Client Error status
--   code.
edgeStatistics_errorStatistics :: Lens' EdgeStatistics (Maybe ErrorStatistics)

-- | The total number of completed requests.
edgeStatistics_totalCount :: Lens' EdgeStatistics (Maybe Integer)

-- | A configuration document that specifies encryption configuration
--   settings.
--   
--   <i>See:</i> <a>newEncryptionConfig</a> smart constructor.
data EncryptionConfig
EncryptionConfig' :: Maybe EncryptionStatus -> Maybe Text -> Maybe EncryptionType -> EncryptionConfig

-- | The encryption status. While the status is <tt>UPDATING</tt>, X-Ray
--   may encrypt data with a combination of the new and old settings.
[$sel:status:EncryptionConfig'] :: EncryptionConfig -> Maybe EncryptionStatus

-- | The ID of the KMS key used for encryption, if applicable.
[$sel:keyId:EncryptionConfig'] :: EncryptionConfig -> Maybe Text

-- | The type of encryption. Set to <tt>KMS</tt> for encryption with KMS
--   keys. Set to <tt>NONE</tt> for default encryption.
[$sel:type':EncryptionConfig'] :: EncryptionConfig -> Maybe EncryptionType

-- | Create a value of <a>EncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:EncryptionConfig'</a>, <a>encryptionConfig_status</a> -
--   The encryption status. While the status is <tt>UPDATING</tt>, X-Ray
--   may encrypt data with a combination of the new and old settings.
--   
--   <a>$sel:keyId:EncryptionConfig'</a>, <a>encryptionConfig_keyId</a> -
--   The ID of the KMS key used for encryption, if applicable.
--   
--   <a>$sel:type':EncryptionConfig'</a>, <a>encryptionConfig_type</a> -
--   The type of encryption. Set to <tt>KMS</tt> for encryption with KMS
--   keys. Set to <tt>NONE</tt> for default encryption.
newEncryptionConfig :: EncryptionConfig

-- | The encryption status. While the status is <tt>UPDATING</tt>, X-Ray
--   may encrypt data with a combination of the new and old settings.
encryptionConfig_status :: Lens' EncryptionConfig (Maybe EncryptionStatus)

-- | The ID of the KMS key used for encryption, if applicable.
encryptionConfig_keyId :: Lens' EncryptionConfig (Maybe Text)

-- | The type of encryption. Set to <tt>KMS</tt> for encryption with KMS
--   keys. Set to <tt>NONE</tt> for default encryption.
encryptionConfig_type :: Lens' EncryptionConfig (Maybe EncryptionType)

-- | The root cause of a trace summary error.
--   
--   <i>See:</i> <a>newErrorRootCause</a> smart constructor.
data ErrorRootCause
ErrorRootCause' :: Maybe Bool -> Maybe [ErrorRootCauseService] -> ErrorRootCause

-- | A flag that denotes that the root cause impacts the trace client.
[$sel:clientImpacting:ErrorRootCause'] :: ErrorRootCause -> Maybe Bool

-- | A list of services corresponding to an error. A service identifies a
--   segment and it contains a name, account ID, type, and inferred flag.
[$sel:services:ErrorRootCause'] :: ErrorRootCause -> Maybe [ErrorRootCauseService]

-- | Create a value of <a>ErrorRootCause</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientImpacting:ErrorRootCause'</a>,
--   <a>errorRootCause_clientImpacting</a> - A flag that denotes that the
--   root cause impacts the trace client.
--   
--   <a>$sel:services:ErrorRootCause'</a>, <a>errorRootCause_services</a> -
--   A list of services corresponding to an error. A service identifies a
--   segment and it contains a name, account ID, type, and inferred flag.
newErrorRootCause :: ErrorRootCause

-- | A flag that denotes that the root cause impacts the trace client.
errorRootCause_clientImpacting :: Lens' ErrorRootCause (Maybe Bool)

-- | A list of services corresponding to an error. A service identifies a
--   segment and it contains a name, account ID, type, and inferred flag.
errorRootCause_services :: Lens' ErrorRootCause (Maybe [ErrorRootCauseService])

-- | A collection of segments and corresponding subsegments associated to a
--   trace summary error.
--   
--   <i>See:</i> <a>newErrorRootCauseEntity</a> smart constructor.
data ErrorRootCauseEntity
ErrorRootCauseEntity' :: Maybe [RootCauseException] -> Maybe Bool -> Maybe Text -> ErrorRootCauseEntity

-- | The types and messages of the exceptions.
[$sel:exceptions:ErrorRootCauseEntity'] :: ErrorRootCauseEntity -> Maybe [RootCauseException]

-- | A flag that denotes a remote subsegment.
[$sel:remote:ErrorRootCauseEntity'] :: ErrorRootCauseEntity -> Maybe Bool

-- | The name of the entity.
[$sel:name:ErrorRootCauseEntity'] :: ErrorRootCauseEntity -> Maybe Text

-- | Create a value of <a>ErrorRootCauseEntity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exceptions:ErrorRootCauseEntity'</a>,
--   <a>errorRootCauseEntity_exceptions</a> - The types and messages of the
--   exceptions.
--   
--   <a>$sel:remote:ErrorRootCauseEntity'</a>,
--   <a>errorRootCauseEntity_remote</a> - A flag that denotes a remote
--   subsegment.
--   
--   <a>$sel:name:ErrorRootCauseEntity'</a>,
--   <a>errorRootCauseEntity_name</a> - The name of the entity.
newErrorRootCauseEntity :: ErrorRootCauseEntity

-- | The types and messages of the exceptions.
errorRootCauseEntity_exceptions :: Lens' ErrorRootCauseEntity (Maybe [RootCauseException])

-- | A flag that denotes a remote subsegment.
errorRootCauseEntity_remote :: Lens' ErrorRootCauseEntity (Maybe Bool)

-- | The name of the entity.
errorRootCauseEntity_name :: Lens' ErrorRootCauseEntity (Maybe Text)

-- | A collection of fields identifying the services in a trace summary
--   error.
--   
--   <i>See:</i> <a>newErrorRootCauseService</a> smart constructor.
data ErrorRootCauseService
ErrorRootCauseService' :: Maybe [ErrorRootCauseEntity] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> ErrorRootCauseService

-- | The path of root cause entities found on the service.
[$sel:entityPath:ErrorRootCauseService'] :: ErrorRootCauseService -> Maybe [ErrorRootCauseEntity]

-- | The account ID associated to the service.
[$sel:accountId:ErrorRootCauseService'] :: ErrorRootCauseService -> Maybe Text

-- | A collection of associated service names.
[$sel:names:ErrorRootCauseService'] :: ErrorRootCauseService -> Maybe [Text]

-- | The service name.
[$sel:name:ErrorRootCauseService'] :: ErrorRootCauseService -> Maybe Text

-- | A Boolean value indicating if the service is inferred from the trace.
[$sel:inferred:ErrorRootCauseService'] :: ErrorRootCauseService -> Maybe Bool

-- | The type associated to the service.
[$sel:type':ErrorRootCauseService'] :: ErrorRootCauseService -> Maybe Text

-- | Create a value of <a>ErrorRootCauseService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityPath:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_entityPath</a> - The path of root cause
--   entities found on the service.
--   
--   <a>$sel:accountId:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_accountId</a> - The account ID associated to
--   the service.
--   
--   <a>$sel:names:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_names</a> - A collection of associated
--   service names.
--   
--   <a>$sel:name:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_name</a> - The service name.
--   
--   <a>$sel:inferred:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_inferred</a> - A Boolean value indicating if
--   the service is inferred from the trace.
--   
--   <a>$sel:type':ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_type</a> - The type associated to the
--   service.
newErrorRootCauseService :: ErrorRootCauseService

-- | The path of root cause entities found on the service.
errorRootCauseService_entityPath :: Lens' ErrorRootCauseService (Maybe [ErrorRootCauseEntity])

-- | The account ID associated to the service.
errorRootCauseService_accountId :: Lens' ErrorRootCauseService (Maybe Text)

-- | A collection of associated service names.
errorRootCauseService_names :: Lens' ErrorRootCauseService (Maybe [Text])

-- | The service name.
errorRootCauseService_name :: Lens' ErrorRootCauseService (Maybe Text)

-- | A Boolean value indicating if the service is inferred from the trace.
errorRootCauseService_inferred :: Lens' ErrorRootCauseService (Maybe Bool)

-- | The type associated to the service.
errorRootCauseService_type :: Lens' ErrorRootCauseService (Maybe Text)

-- | Information about requests that failed with a 4xx Client Error status
--   code.
--   
--   <i>See:</i> <a>newErrorStatistics</a> smart constructor.
data ErrorStatistics
ErrorStatistics' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> ErrorStatistics

-- | The number of requests that failed with untracked 4xx Client Error
--   status codes.
[$sel:otherCount:ErrorStatistics'] :: ErrorStatistics -> Maybe Integer

-- | The number of requests that failed with a 419 throttling status code.
[$sel:throttleCount:ErrorStatistics'] :: ErrorStatistics -> Maybe Integer

-- | The total number of requests that failed with a 4xx Client Error
--   status code.
[$sel:totalCount:ErrorStatistics'] :: ErrorStatistics -> Maybe Integer

-- | Create a value of <a>ErrorStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:otherCount:ErrorStatistics'</a>,
--   <a>errorStatistics_otherCount</a> - The number of requests that failed
--   with untracked 4xx Client Error status codes.
--   
--   <a>$sel:throttleCount:ErrorStatistics'</a>,
--   <a>errorStatistics_throttleCount</a> - The number of requests that
--   failed with a 419 throttling status code.
--   
--   <a>$sel:totalCount:ErrorStatistics'</a>,
--   <a>errorStatistics_totalCount</a> - The total number of requests that
--   failed with a 4xx Client Error status code.
newErrorStatistics :: ErrorStatistics

-- | The number of requests that failed with untracked 4xx Client Error
--   status codes.
errorStatistics_otherCount :: Lens' ErrorStatistics (Maybe Integer)

-- | The number of requests that failed with a 419 throttling status code.
errorStatistics_throttleCount :: Lens' ErrorStatistics (Maybe Integer)

-- | The total number of requests that failed with a 4xx Client Error
--   status code.
errorStatistics_totalCount :: Lens' ErrorStatistics (Maybe Integer)

-- | The root cause information for a trace summary fault.
--   
--   <i>See:</i> <a>newFaultRootCause</a> smart constructor.
data FaultRootCause
FaultRootCause' :: Maybe Bool -> Maybe [FaultRootCauseService] -> FaultRootCause

-- | A flag that denotes that the root cause impacts the trace client.
[$sel:clientImpacting:FaultRootCause'] :: FaultRootCause -> Maybe Bool

-- | A list of corresponding services. A service identifies a segment and
--   it contains a name, account ID, type, and inferred flag.
[$sel:services:FaultRootCause'] :: FaultRootCause -> Maybe [FaultRootCauseService]

-- | Create a value of <a>FaultRootCause</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientImpacting:FaultRootCause'</a>,
--   <a>faultRootCause_clientImpacting</a> - A flag that denotes that the
--   root cause impacts the trace client.
--   
--   <a>$sel:services:FaultRootCause'</a>, <a>faultRootCause_services</a> -
--   A list of corresponding services. A service identifies a segment and
--   it contains a name, account ID, type, and inferred flag.
newFaultRootCause :: FaultRootCause

-- | A flag that denotes that the root cause impacts the trace client.
faultRootCause_clientImpacting :: Lens' FaultRootCause (Maybe Bool)

-- | A list of corresponding services. A service identifies a segment and
--   it contains a name, account ID, type, and inferred flag.
faultRootCause_services :: Lens' FaultRootCause (Maybe [FaultRootCauseService])

-- | A collection of segments and corresponding subsegments associated to a
--   trace summary fault error.
--   
--   <i>See:</i> <a>newFaultRootCauseEntity</a> smart constructor.
data FaultRootCauseEntity
FaultRootCauseEntity' :: Maybe [RootCauseException] -> Maybe Bool -> Maybe Text -> FaultRootCauseEntity

-- | The types and messages of the exceptions.
[$sel:exceptions:FaultRootCauseEntity'] :: FaultRootCauseEntity -> Maybe [RootCauseException]

-- | A flag that denotes a remote subsegment.
[$sel:remote:FaultRootCauseEntity'] :: FaultRootCauseEntity -> Maybe Bool

-- | The name of the entity.
[$sel:name:FaultRootCauseEntity'] :: FaultRootCauseEntity -> Maybe Text

-- | Create a value of <a>FaultRootCauseEntity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exceptions:FaultRootCauseEntity'</a>,
--   <a>faultRootCauseEntity_exceptions</a> - The types and messages of the
--   exceptions.
--   
--   <a>$sel:remote:FaultRootCauseEntity'</a>,
--   <a>faultRootCauseEntity_remote</a> - A flag that denotes a remote
--   subsegment.
--   
--   <a>$sel:name:FaultRootCauseEntity'</a>,
--   <a>faultRootCauseEntity_name</a> - The name of the entity.
newFaultRootCauseEntity :: FaultRootCauseEntity

-- | The types and messages of the exceptions.
faultRootCauseEntity_exceptions :: Lens' FaultRootCauseEntity (Maybe [RootCauseException])

-- | A flag that denotes a remote subsegment.
faultRootCauseEntity_remote :: Lens' FaultRootCauseEntity (Maybe Bool)

-- | The name of the entity.
faultRootCauseEntity_name :: Lens' FaultRootCauseEntity (Maybe Text)

-- | A collection of fields identifying the services in a trace summary
--   fault.
--   
--   <i>See:</i> <a>newFaultRootCauseService</a> smart constructor.
data FaultRootCauseService
FaultRootCauseService' :: Maybe [FaultRootCauseEntity] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> FaultRootCauseService

-- | The path of root cause entities found on the service.
[$sel:entityPath:FaultRootCauseService'] :: FaultRootCauseService -> Maybe [FaultRootCauseEntity]

-- | The account ID associated to the service.
[$sel:accountId:FaultRootCauseService'] :: FaultRootCauseService -> Maybe Text

-- | A collection of associated service names.
[$sel:names:FaultRootCauseService'] :: FaultRootCauseService -> Maybe [Text]

-- | The service name.
[$sel:name:FaultRootCauseService'] :: FaultRootCauseService -> Maybe Text

-- | A Boolean value indicating if the service is inferred from the trace.
[$sel:inferred:FaultRootCauseService'] :: FaultRootCauseService -> Maybe Bool

-- | The type associated to the service.
[$sel:type':FaultRootCauseService'] :: FaultRootCauseService -> Maybe Text

-- | Create a value of <a>FaultRootCauseService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityPath:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_entityPath</a> - The path of root cause
--   entities found on the service.
--   
--   <a>$sel:accountId:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_accountId</a> - The account ID associated to
--   the service.
--   
--   <a>$sel:names:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_names</a> - A collection of associated
--   service names.
--   
--   <a>$sel:name:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_name</a> - The service name.
--   
--   <a>$sel:inferred:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_inferred</a> - A Boolean value indicating if
--   the service is inferred from the trace.
--   
--   <a>$sel:type':FaultRootCauseService'</a>,
--   <a>faultRootCauseService_type</a> - The type associated to the
--   service.
newFaultRootCauseService :: FaultRootCauseService

-- | The path of root cause entities found on the service.
faultRootCauseService_entityPath :: Lens' FaultRootCauseService (Maybe [FaultRootCauseEntity])

-- | The account ID associated to the service.
faultRootCauseService_accountId :: Lens' FaultRootCauseService (Maybe Text)

-- | A collection of associated service names.
faultRootCauseService_names :: Lens' FaultRootCauseService (Maybe [Text])

-- | The service name.
faultRootCauseService_name :: Lens' FaultRootCauseService (Maybe Text)

-- | A Boolean value indicating if the service is inferred from the trace.
faultRootCauseService_inferred :: Lens' FaultRootCauseService (Maybe Bool)

-- | The type associated to the service.
faultRootCauseService_type :: Lens' FaultRootCauseService (Maybe Text)

-- | Information about requests that failed with a 5xx Server Error status
--   code.
--   
--   <i>See:</i> <a>newFaultStatistics</a> smart constructor.
data FaultStatistics
FaultStatistics' :: Maybe Integer -> Maybe Integer -> FaultStatistics

-- | The number of requests that failed with untracked 5xx Server Error
--   status codes.
[$sel:otherCount:FaultStatistics'] :: FaultStatistics -> Maybe Integer

-- | The total number of requests that failed with a 5xx Server Error
--   status code.
[$sel:totalCount:FaultStatistics'] :: FaultStatistics -> Maybe Integer

-- | Create a value of <a>FaultStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:otherCount:FaultStatistics'</a>,
--   <a>faultStatistics_otherCount</a> - The number of requests that failed
--   with untracked 5xx Server Error status codes.
--   
--   <a>$sel:totalCount:FaultStatistics'</a>,
--   <a>faultStatistics_totalCount</a> - The total number of requests that
--   failed with a 5xx Server Error status code.
newFaultStatistics :: FaultStatistics

-- | The number of requests that failed with untracked 5xx Server Error
--   status codes.
faultStatistics_otherCount :: Lens' FaultStatistics (Maybe Integer)

-- | The total number of requests that failed with a 5xx Server Error
--   status code.
faultStatistics_totalCount :: Lens' FaultStatistics (Maybe Integer)

-- | The predicted high and low fault count. This is used to determine if a
--   service has become anomalous and if an insight should be created.
--   
--   <i>See:</i> <a>newForecastStatistics</a> smart constructor.
data ForecastStatistics
ForecastStatistics' :: Maybe Integer -> Maybe Integer -> ForecastStatistics

-- | The lower limit of fault counts for a service.
[$sel:faultCountLow:ForecastStatistics'] :: ForecastStatistics -> Maybe Integer

-- | The upper limit of fault counts for a service.
[$sel:faultCountHigh:ForecastStatistics'] :: ForecastStatistics -> Maybe Integer

-- | Create a value of <a>ForecastStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:faultCountLow:ForecastStatistics'</a>,
--   <a>forecastStatistics_faultCountLow</a> - The lower limit of fault
--   counts for a service.
--   
--   <a>$sel:faultCountHigh:ForecastStatistics'</a>,
--   <a>forecastStatistics_faultCountHigh</a> - The upper limit of fault
--   counts for a service.
newForecastStatistics :: ForecastStatistics

-- | The lower limit of fault counts for a service.
forecastStatistics_faultCountLow :: Lens' ForecastStatistics (Maybe Integer)

-- | The upper limit of fault counts for a service.
forecastStatistics_faultCountHigh :: Lens' ForecastStatistics (Maybe Integer)

-- | Details and metadata for a group.
--   
--   <i>See:</i> <a>newGroup</a> smart constructor.
data Group
Group' :: Maybe Text -> Maybe InsightsConfiguration -> Maybe Text -> Maybe Text -> Group

-- | The filter expression defining the parameters to include traces.
[$sel:filterExpression:Group'] :: Group -> Maybe Text

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications through Amazon EventBridge for the group.</li>
--   </ul>
[$sel:insightsConfiguration:Group'] :: Group -> Maybe InsightsConfiguration

-- | The Amazon Resource Name (ARN) of the group generated based on the
--   GroupName.
[$sel:groupARN:Group'] :: Group -> Maybe Text

-- | The unique case-sensitive name of the group.
[$sel:groupName:Group'] :: Group -> Maybe Text

-- | Create a value of <a>Group</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterExpression:Group'</a>, <a>group_filterExpression</a> -
--   The filter expression defining the parameters to include traces.
--   
--   <a>$sel:insightsConfiguration:Group'</a>,
--   <a>group_insightsConfiguration</a> - The structure containing
--   configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications through Amazon EventBridge for the group.</li>
--   </ul>
--   
--   <a>$sel:groupARN:Group'</a>, <a>group_groupARN</a> - The Amazon
--   Resource Name (ARN) of the group generated based on the GroupName.
--   
--   <a>$sel:groupName:Group'</a>, <a>group_groupName</a> - The unique
--   case-sensitive name of the group.
newGroup :: Group

-- | The filter expression defining the parameters to include traces.
group_filterExpression :: Lens' Group (Maybe Text)

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications through Amazon EventBridge for the group.</li>
--   </ul>
group_insightsConfiguration :: Lens' Group (Maybe InsightsConfiguration)

-- | The Amazon Resource Name (ARN) of the group generated based on the
--   GroupName.
group_groupARN :: Lens' Group (Maybe Text)

-- | The unique case-sensitive name of the group.
group_groupName :: Lens' Group (Maybe Text)

-- | Details for a group without metadata.
--   
--   <i>See:</i> <a>newGroupSummary</a> smart constructor.
data GroupSummary
GroupSummary' :: Maybe Text -> Maybe InsightsConfiguration -> Maybe Text -> Maybe Text -> GroupSummary

-- | The filter expression defining the parameters to include traces.
[$sel:filterExpression:GroupSummary'] :: GroupSummary -> Maybe Text

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications. Notifications can only be enabled on a group
--   with InsightsEnabled set to true.</li>
--   </ul>
[$sel:insightsConfiguration:GroupSummary'] :: GroupSummary -> Maybe InsightsConfiguration

-- | The ARN of the group generated based on the GroupName.
[$sel:groupARN:GroupSummary'] :: GroupSummary -> Maybe Text

-- | The unique case-sensitive name of the group.
[$sel:groupName:GroupSummary'] :: GroupSummary -> Maybe Text

-- | Create a value of <a>GroupSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterExpression:GroupSummary'</a>,
--   <a>groupSummary_filterExpression</a> - The filter expression defining
--   the parameters to include traces.
--   
--   <a>$sel:insightsConfiguration:GroupSummary'</a>,
--   <a>groupSummary_insightsConfiguration</a> - The structure containing
--   configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications. Notifications can only be enabled on a group
--   with InsightsEnabled set to true.</li>
--   </ul>
--   
--   <a>$sel:groupARN:GroupSummary'</a>, <a>groupSummary_groupARN</a> - The
--   ARN of the group generated based on the GroupName.
--   
--   <a>$sel:groupName:GroupSummary'</a>, <a>groupSummary_groupName</a> -
--   The unique case-sensitive name of the group.
newGroupSummary :: GroupSummary

-- | The filter expression defining the parameters to include traces.
groupSummary_filterExpression :: Lens' GroupSummary (Maybe Text)

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications. Notifications can only be enabled on a group
--   with InsightsEnabled set to true.</li>
--   </ul>
groupSummary_insightsConfiguration :: Lens' GroupSummary (Maybe InsightsConfiguration)

-- | The ARN of the group generated based on the GroupName.
groupSummary_groupARN :: Lens' GroupSummary (Maybe Text)

-- | The unique case-sensitive name of the group.
groupSummary_groupName :: Lens' GroupSummary (Maybe Text)

-- | An entry in a histogram for a statistic. A histogram maps the range of
--   observed values on the X axis, and the prevalence of each value on the
--   Y axis.
--   
--   <i>See:</i> <a>newHistogramEntry</a> smart constructor.
data HistogramEntry
HistogramEntry' :: Maybe Int -> Maybe Double -> HistogramEntry

-- | The prevalence of the entry.
[$sel:count:HistogramEntry'] :: HistogramEntry -> Maybe Int

-- | The value of the entry.
[$sel:value:HistogramEntry'] :: HistogramEntry -> Maybe Double

-- | Create a value of <a>HistogramEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:HistogramEntry'</a>, <a>histogramEntry_count</a> - The
--   prevalence of the entry.
--   
--   <a>$sel:value:HistogramEntry'</a>, <a>histogramEntry_value</a> - The
--   value of the entry.
newHistogramEntry :: HistogramEntry

-- | The prevalence of the entry.
histogramEntry_count :: Lens' HistogramEntry (Maybe Int)

-- | The value of the entry.
histogramEntry_value :: Lens' HistogramEntry (Maybe Double)

-- | Information about an HTTP request.
--   
--   <i>See:</i> <a>newHttp</a> smart constructor.
data Http
Http' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Http

-- | The request method.
[$sel:httpMethod:Http'] :: Http -> Maybe Text

-- | The response status.
[$sel:httpStatus:Http'] :: Http -> Maybe Int

-- | The IP address of the requestor.
[$sel:clientIp:Http'] :: Http -> Maybe Text

-- | The request's user agent string.
[$sel:userAgent:Http'] :: Http -> Maybe Text

-- | The request URL.
[$sel:httpURL:Http'] :: Http -> Maybe Text

-- | Create a value of <a>Http</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:Http'</a>, <a>http_httpMethod</a> - The request
--   method.
--   
--   <a>$sel:httpStatus:Http'</a>, <a>http_httpStatus</a> - The response
--   status.
--   
--   <a>$sel:clientIp:Http'</a>, <a>http_clientIp</a> - The IP address of
--   the requestor.
--   
--   <a>$sel:userAgent:Http'</a>, <a>http_userAgent</a> - The request's
--   user agent string.
--   
--   <a>$sel:httpURL:Http'</a>, <a>http_httpURL</a> - The request URL.
newHttp :: Http

-- | The request method.
http_httpMethod :: Lens' Http (Maybe Text)

-- | The response status.
http_httpStatus :: Lens' Http (Maybe Int)

-- | The IP address of the requestor.
http_clientIp :: Lens' Http (Maybe Text)

-- | The request's user agent string.
http_userAgent :: Lens' Http (Maybe Text)

-- | The request URL.
http_httpURL :: Lens' Http (Maybe Text)

-- | When fault rates go outside of the expected range, X-Ray creates an
--   insight. Insights tracks emergent issues within your applications.
--   
--   <i>See:</i> <a>newInsight</a> smart constructor.
data Insight
Insight' :: Maybe Text -> Maybe InsightState -> Maybe POSIX -> Maybe Text -> Maybe [InsightCategory] -> Maybe RequestImpactStatistics -> Maybe [AnomalousService] -> Maybe ServiceId -> Maybe RequestImpactStatistics -> Maybe POSIX -> Maybe Text -> Maybe Text -> Insight

-- | A brief description of the insight.
[$sel:summary:Insight'] :: Insight -> Maybe Text

-- | The current state of the insight.
[$sel:state:Insight'] :: Insight -> Maybe InsightState

-- | The time, in Unix seconds, at which the insight began.
[$sel:startTime:Insight'] :: Insight -> Maybe POSIX

-- | The insights unique identifier.
[$sel:insightId:Insight'] :: Insight -> Maybe Text

-- | The categories that label and describe the type of insight.
[$sel:categories:Insight'] :: Insight -> Maybe [InsightCategory]

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
[$sel:rootCauseServiceRequestImpactStatistics:Insight'] :: Insight -> Maybe RequestImpactStatistics

-- | The service within the insight that is most impacted by the incident.
[$sel:topAnomalousServices:Insight'] :: Insight -> Maybe [AnomalousService]
[$sel:rootCauseServiceId:Insight'] :: Insight -> Maybe ServiceId

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
[$sel:clientRequestImpactStatistics:Insight'] :: Insight -> Maybe RequestImpactStatistics

-- | The time, in Unix seconds, at which the insight ended.
[$sel:endTime:Insight'] :: Insight -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
[$sel:groupARN:Insight'] :: Insight -> Maybe Text

-- | The name of the group that the insight belongs to.
[$sel:groupName:Insight'] :: Insight -> Maybe Text

-- | Create a value of <a>Insight</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:Insight'</a>, <a>insight_summary</a> - A brief
--   description of the insight.
--   
--   <a>$sel:state:Insight'</a>, <a>insight_state</a> - The current state
--   of the insight.
--   
--   <a>$sel:startTime:Insight'</a>, <a>insight_startTime</a> - The time,
--   in Unix seconds, at which the insight began.
--   
--   <a>$sel:insightId:Insight'</a>, <a>insight_insightId</a> - The
--   insights unique identifier.
--   
--   <a>$sel:categories:Insight'</a>, <a>insight_categories</a> - The
--   categories that label and describe the type of insight.
--   
--   <a>$sel:rootCauseServiceRequestImpactStatistics:Insight'</a>,
--   <a>insight_rootCauseServiceRequestImpactStatistics</a> - The impact
--   statistics of the root cause service. This includes the number of
--   requests to the client service and whether the requests were faults or
--   okay.
--   
--   <a>$sel:topAnomalousServices:Insight'</a>,
--   <a>insight_topAnomalousServices</a> - The service within the insight
--   that is most impacted by the incident.
--   
--   <a>$sel:rootCauseServiceId:Insight'</a>,
--   <a>insight_rootCauseServiceId</a> - Undocumented member.
--   
--   <a>$sel:clientRequestImpactStatistics:Insight'</a>,
--   <a>insight_clientRequestImpactStatistics</a> - The impact statistics
--   of the client side service. This includes the number of requests to
--   the client service and whether the requests were faults or okay.
--   
--   <a>$sel:endTime:Insight'</a>, <a>insight_endTime</a> - The time, in
--   Unix seconds, at which the insight ended.
--   
--   <a>$sel:groupARN:Insight'</a>, <a>insight_groupARN</a> - The Amazon
--   Resource Name (ARN) of the group that the insight belongs to.
--   
--   <a>$sel:groupName:Insight'</a>, <a>insight_groupName</a> - The name of
--   the group that the insight belongs to.
newInsight :: Insight

-- | A brief description of the insight.
insight_summary :: Lens' Insight (Maybe Text)

-- | The current state of the insight.
insight_state :: Lens' Insight (Maybe InsightState)

-- | The time, in Unix seconds, at which the insight began.
insight_startTime :: Lens' Insight (Maybe UTCTime)

-- | The insights unique identifier.
insight_insightId :: Lens' Insight (Maybe Text)

-- | The categories that label and describe the type of insight.
insight_categories :: Lens' Insight (Maybe [InsightCategory])

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insight_rootCauseServiceRequestImpactStatistics :: Lens' Insight (Maybe RequestImpactStatistics)

-- | The service within the insight that is most impacted by the incident.
insight_topAnomalousServices :: Lens' Insight (Maybe [AnomalousService])

-- | Undocumented member.
insight_rootCauseServiceId :: Lens' Insight (Maybe ServiceId)

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insight_clientRequestImpactStatistics :: Lens' Insight (Maybe RequestImpactStatistics)

-- | The time, in Unix seconds, at which the insight ended.
insight_endTime :: Lens' Insight (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
insight_groupARN :: Lens' Insight (Maybe Text)

-- | The name of the group that the insight belongs to.
insight_groupName :: Lens' Insight (Maybe Text)

-- | X-Ray reevaluates insights periodically until they are resolved, and
--   records each intermediate state in an event. You can review incident
--   events in the Impact Timeline on the Inspect page in the X-Ray
--   console.
--   
--   <i>See:</i> <a>newInsightEvent</a> smart constructor.
data InsightEvent
InsightEvent' :: Maybe Text -> Maybe POSIX -> Maybe RequestImpactStatistics -> Maybe [AnomalousService] -> Maybe RequestImpactStatistics -> InsightEvent

-- | A brief description of the event.
[$sel:summary:InsightEvent'] :: InsightEvent -> Maybe Text

-- | The time, in Unix seconds, at which the event was recorded.
[$sel:eventTime:InsightEvent'] :: InsightEvent -> Maybe POSIX

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
[$sel:rootCauseServiceRequestImpactStatistics:InsightEvent'] :: InsightEvent -> Maybe RequestImpactStatistics

-- | The service during the event that is most impacted by the incident.
[$sel:topAnomalousServices:InsightEvent'] :: InsightEvent -> Maybe [AnomalousService]

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
[$sel:clientRequestImpactStatistics:InsightEvent'] :: InsightEvent -> Maybe RequestImpactStatistics

-- | Create a value of <a>InsightEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:InsightEvent'</a>, <a>insightEvent_summary</a> - A
--   brief description of the event.
--   
--   <a>$sel:eventTime:InsightEvent'</a>, <a>insightEvent_eventTime</a> -
--   The time, in Unix seconds, at which the event was recorded.
--   
--   <a>$sel:rootCauseServiceRequestImpactStatistics:InsightEvent'</a>,
--   <a>insightEvent_rootCauseServiceRequestImpactStatistics</a> - The
--   impact statistics of the root cause service. This includes the number
--   of requests to the client service and whether the requests were faults
--   or okay.
--   
--   <a>$sel:topAnomalousServices:InsightEvent'</a>,
--   <a>insightEvent_topAnomalousServices</a> - The service during the
--   event that is most impacted by the incident.
--   
--   <a>$sel:clientRequestImpactStatistics:InsightEvent'</a>,
--   <a>insightEvent_clientRequestImpactStatistics</a> - The impact
--   statistics of the client side service. This includes the number of
--   requests to the client service and whether the requests were faults or
--   okay.
newInsightEvent :: InsightEvent

-- | A brief description of the event.
insightEvent_summary :: Lens' InsightEvent (Maybe Text)

-- | The time, in Unix seconds, at which the event was recorded.
insightEvent_eventTime :: Lens' InsightEvent (Maybe UTCTime)

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insightEvent_rootCauseServiceRequestImpactStatistics :: Lens' InsightEvent (Maybe RequestImpactStatistics)

-- | The service during the event that is most impacted by the incident.
insightEvent_topAnomalousServices :: Lens' InsightEvent (Maybe [AnomalousService])

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insightEvent_clientRequestImpactStatistics :: Lens' InsightEvent (Maybe RequestImpactStatistics)

-- | The connection between two service in an insight impact graph.
--   
--   <i>See:</i> <a>newInsightImpactGraphEdge</a> smart constructor.
data InsightImpactGraphEdge
InsightImpactGraphEdge' :: Maybe Int -> InsightImpactGraphEdge

-- | Identifier of the edge. Unique within a service map.
[$sel:referenceId:InsightImpactGraphEdge'] :: InsightImpactGraphEdge -> Maybe Int

-- | Create a value of <a>InsightImpactGraphEdge</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:referenceId:InsightImpactGraphEdge'</a>,
--   <a>insightImpactGraphEdge_referenceId</a> - Identifier of the edge.
--   Unique within a service map.
newInsightImpactGraphEdge :: InsightImpactGraphEdge

-- | Identifier of the edge. Unique within a service map.
insightImpactGraphEdge_referenceId :: Lens' InsightImpactGraphEdge (Maybe Int)

-- | Information about an application that processed requests, users that
--   made requests, or downstream services, resources, and applications
--   that an application used.
--   
--   <i>See:</i> <a>newInsightImpactGraphService</a> smart constructor.
data InsightImpactGraphService
InsightImpactGraphService' :: Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [InsightImpactGraphEdge] -> InsightImpactGraphService

-- | Identifier for the service. Unique within the service map.
[$sel:referenceId:InsightImpactGraphService'] :: InsightImpactGraphService -> Maybe Int

-- | Identifier of the Amazon Web Services account in which the service
--   runs.
[$sel:accountId:InsightImpactGraphService'] :: InsightImpactGraphService -> Maybe Text

-- | A list of names for the service, including the canonical name.
[$sel:names:InsightImpactGraphService'] :: InsightImpactGraphService -> Maybe [Text]

-- | The canonical name of the service.
[$sel:name:InsightImpactGraphService'] :: InsightImpactGraphService -> Maybe Text

-- | Identifier for the service. Unique within the service map.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, AWS::EC2::Instance for an application running
--   on Amazon EC2 or AWS::DynamoDB::Table for an Amazon DynamoDB table
--   that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>remote - A downstream service of indeterminate type.</li>
--   </ul>
[$sel:type':InsightImpactGraphService'] :: InsightImpactGraphService -> Maybe Text

-- | Connections to downstream services.
[$sel:edges:InsightImpactGraphService'] :: InsightImpactGraphService -> Maybe [InsightImpactGraphEdge]

-- | Create a value of <a>InsightImpactGraphService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:referenceId:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_referenceId</a> - Identifier for the
--   service. Unique within the service map.
--   
--   <a>$sel:accountId:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_accountId</a> - Identifier of the Amazon
--   Web Services account in which the service runs.
--   
--   <a>$sel:names:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_names</a> - A list of names for the
--   service, including the canonical name.
--   
--   <a>$sel:name:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_name</a> - The canonical name of the
--   service.
--   
--   <a>$sel:type':InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_type</a> - Identifier for the service.
--   Unique within the service map.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, AWS::EC2::Instance for an application running
--   on Amazon EC2 or AWS::DynamoDB::Table for an Amazon DynamoDB table
--   that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>remote - A downstream service of indeterminate type.</li>
--   </ul>
--   
--   <a>$sel:edges:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_edges</a> - Connections to downstream
--   services.
newInsightImpactGraphService :: InsightImpactGraphService

-- | Identifier for the service. Unique within the service map.
insightImpactGraphService_referenceId :: Lens' InsightImpactGraphService (Maybe Int)

-- | Identifier of the Amazon Web Services account in which the service
--   runs.
insightImpactGraphService_accountId :: Lens' InsightImpactGraphService (Maybe Text)

-- | A list of names for the service, including the canonical name.
insightImpactGraphService_names :: Lens' InsightImpactGraphService (Maybe [Text])

-- | The canonical name of the service.
insightImpactGraphService_name :: Lens' InsightImpactGraphService (Maybe Text)

-- | Identifier for the service. Unique within the service map.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, AWS::EC2::Instance for an application running
--   on Amazon EC2 or AWS::DynamoDB::Table for an Amazon DynamoDB table
--   that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>remote - A downstream service of indeterminate type.</li>
--   </ul>
insightImpactGraphService_type :: Lens' InsightImpactGraphService (Maybe Text)

-- | Connections to downstream services.
insightImpactGraphService_edges :: Lens' InsightImpactGraphService (Maybe [InsightImpactGraphEdge])

-- | Information that describes an insight.
--   
--   <i>See:</i> <a>newInsightSummary</a> smart constructor.
data InsightSummary
InsightSummary' :: Maybe Text -> Maybe InsightState -> Maybe POSIX -> Maybe Text -> Maybe [InsightCategory] -> Maybe RequestImpactStatistics -> Maybe [AnomalousService] -> Maybe ServiceId -> Maybe RequestImpactStatistics -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> InsightSummary

-- | A brief description of the insight.
[$sel:summary:InsightSummary'] :: InsightSummary -> Maybe Text

-- | The current state of the insight.
[$sel:state:InsightSummary'] :: InsightSummary -> Maybe InsightState

-- | The time, in Unix seconds, at which the insight began.
[$sel:startTime:InsightSummary'] :: InsightSummary -> Maybe POSIX

-- | The insights unique identifier.
[$sel:insightId:InsightSummary'] :: InsightSummary -> Maybe Text

-- | Categories The categories that label and describe the type of insight.
[$sel:categories:InsightSummary'] :: InsightSummary -> Maybe [InsightCategory]

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
[$sel:rootCauseServiceRequestImpactStatistics:InsightSummary'] :: InsightSummary -> Maybe RequestImpactStatistics

-- | The service within the insight that is most impacted by the incident.
[$sel:topAnomalousServices:InsightSummary'] :: InsightSummary -> Maybe [AnomalousService]
[$sel:rootCauseServiceId:InsightSummary'] :: InsightSummary -> Maybe ServiceId

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
[$sel:clientRequestImpactStatistics:InsightSummary'] :: InsightSummary -> Maybe RequestImpactStatistics

-- | The time, in Unix seconds, at which the insight ended.
[$sel:endTime:InsightSummary'] :: InsightSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
[$sel:groupARN:InsightSummary'] :: InsightSummary -> Maybe Text

-- | The name of the group that the insight belongs to.
[$sel:groupName:InsightSummary'] :: InsightSummary -> Maybe Text

-- | The time, in Unix seconds, that the insight was last updated.
[$sel:lastUpdateTime:InsightSummary'] :: InsightSummary -> Maybe POSIX

-- | Create a value of <a>InsightSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:InsightSummary'</a>, <a>insightSummary_summary</a> - A
--   brief description of the insight.
--   
--   <a>$sel:state:InsightSummary'</a>, <a>insightSummary_state</a> - The
--   current state of the insight.
--   
--   <a>$sel:startTime:InsightSummary'</a>, <a>insightSummary_startTime</a>
--   - The time, in Unix seconds, at which the insight began.
--   
--   <a>$sel:insightId:InsightSummary'</a>, <a>insightSummary_insightId</a>
--   - The insights unique identifier.
--   
--   <a>$sel:categories:InsightSummary'</a>,
--   <a>insightSummary_categories</a> - Categories The categories that
--   label and describe the type of insight.
--   
--   <a>$sel:rootCauseServiceRequestImpactStatistics:InsightSummary'</a>,
--   <a>insightSummary_rootCauseServiceRequestImpactStatistics</a> - The
--   impact statistics of the root cause service. This includes the number
--   of requests to the client service and whether the requests were faults
--   or okay.
--   
--   <a>$sel:topAnomalousServices:InsightSummary'</a>,
--   <a>insightSummary_topAnomalousServices</a> - The service within the
--   insight that is most impacted by the incident.
--   
--   <a>$sel:rootCauseServiceId:InsightSummary'</a>,
--   <a>insightSummary_rootCauseServiceId</a> - Undocumented member.
--   
--   <a>$sel:clientRequestImpactStatistics:InsightSummary'</a>,
--   <a>insightSummary_clientRequestImpactStatistics</a> - The impact
--   statistics of the client side service. This includes the number of
--   requests to the client service and whether the requests were faults or
--   okay.
--   
--   <a>$sel:endTime:InsightSummary'</a>, <a>insightSummary_endTime</a> -
--   The time, in Unix seconds, at which the insight ended.
--   
--   <a>$sel:groupARN:InsightSummary'</a>, <a>insightSummary_groupARN</a> -
--   The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
--   
--   <a>$sel:groupName:InsightSummary'</a>, <a>insightSummary_groupName</a>
--   - The name of the group that the insight belongs to.
--   
--   <a>$sel:lastUpdateTime:InsightSummary'</a>,
--   <a>insightSummary_lastUpdateTime</a> - The time, in Unix seconds, that
--   the insight was last updated.
newInsightSummary :: InsightSummary

-- | A brief description of the insight.
insightSummary_summary :: Lens' InsightSummary (Maybe Text)

-- | The current state of the insight.
insightSummary_state :: Lens' InsightSummary (Maybe InsightState)

-- | The time, in Unix seconds, at which the insight began.
insightSummary_startTime :: Lens' InsightSummary (Maybe UTCTime)

-- | The insights unique identifier.
insightSummary_insightId :: Lens' InsightSummary (Maybe Text)

-- | Categories The categories that label and describe the type of insight.
insightSummary_categories :: Lens' InsightSummary (Maybe [InsightCategory])

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insightSummary_rootCauseServiceRequestImpactStatistics :: Lens' InsightSummary (Maybe RequestImpactStatistics)

-- | The service within the insight that is most impacted by the incident.
insightSummary_topAnomalousServices :: Lens' InsightSummary (Maybe [AnomalousService])

-- | Undocumented member.
insightSummary_rootCauseServiceId :: Lens' InsightSummary (Maybe ServiceId)

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insightSummary_clientRequestImpactStatistics :: Lens' InsightSummary (Maybe RequestImpactStatistics)

-- | The time, in Unix seconds, at which the insight ended.
insightSummary_endTime :: Lens' InsightSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
insightSummary_groupARN :: Lens' InsightSummary (Maybe Text)

-- | The name of the group that the insight belongs to.
insightSummary_groupName :: Lens' InsightSummary (Maybe Text)

-- | The time, in Unix seconds, that the insight was last updated.
insightSummary_lastUpdateTime :: Lens' InsightSummary (Maybe UTCTime)

-- | The structure containing configurations related to insights.
--   
--   <i>See:</i> <a>newInsightsConfiguration</a> smart constructor.
data InsightsConfiguration
InsightsConfiguration' :: Maybe Bool -> Maybe Bool -> InsightsConfiguration

-- | Set the NotificationsEnabled value to true to enable insights
--   notifications. Notifications can only be enabled on a group with
--   InsightsEnabled set to true.
[$sel:notificationsEnabled:InsightsConfiguration'] :: InsightsConfiguration -> Maybe Bool

-- | Set the InsightsEnabled value to true to enable insights or false to
--   disable insights.
[$sel:insightsEnabled:InsightsConfiguration'] :: InsightsConfiguration -> Maybe Bool

-- | Create a value of <a>InsightsConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationsEnabled:InsightsConfiguration'</a>,
--   <a>insightsConfiguration_notificationsEnabled</a> - Set the
--   NotificationsEnabled value to true to enable insights notifications.
--   Notifications can only be enabled on a group with InsightsEnabled set
--   to true.
--   
--   <a>$sel:insightsEnabled:InsightsConfiguration'</a>,
--   <a>insightsConfiguration_insightsEnabled</a> - Set the InsightsEnabled
--   value to true to enable insights or false to disable insights.
newInsightsConfiguration :: InsightsConfiguration

-- | Set the NotificationsEnabled value to true to enable insights
--   notifications. Notifications can only be enabled on a group with
--   InsightsEnabled set to true.
insightsConfiguration_notificationsEnabled :: Lens' InsightsConfiguration (Maybe Bool)

-- | Set the InsightsEnabled value to true to enable insights or false to
--   disable insights.
insightsConfiguration_insightsEnabled :: Lens' InsightsConfiguration (Maybe Bool)

-- | A list of EC2 instance IDs corresponding to the segments in a trace.
--   
--   <i>See:</i> <a>newInstanceIdDetail</a> smart constructor.
data InstanceIdDetail
InstanceIdDetail' :: Maybe Text -> InstanceIdDetail

-- | The ID of a corresponding EC2 instance.
[$sel:id:InstanceIdDetail'] :: InstanceIdDetail -> Maybe Text

-- | Create a value of <a>InstanceIdDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:InstanceIdDetail'</a>, <a>instanceIdDetail_id</a> - The ID
--   of a corresponding EC2 instance.
newInstanceIdDetail :: InstanceIdDetail

-- | The ID of a corresponding EC2 instance.
instanceIdDetail_id :: Lens' InstanceIdDetail (Maybe Text)

-- | Statistics that describe how the incident has impacted a service.
--   
--   <i>See:</i> <a>newRequestImpactStatistics</a> smart constructor.
data RequestImpactStatistics
RequestImpactStatistics' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> RequestImpactStatistics

-- | The number of successful requests.
[$sel:okCount:RequestImpactStatistics'] :: RequestImpactStatistics -> Maybe Integer

-- | The number of requests that have resulted in a fault,
[$sel:faultCount:RequestImpactStatistics'] :: RequestImpactStatistics -> Maybe Integer

-- | The total number of requests to the service.
[$sel:totalCount:RequestImpactStatistics'] :: RequestImpactStatistics -> Maybe Integer

-- | Create a value of <a>RequestImpactStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:okCount:RequestImpactStatistics'</a>,
--   <a>requestImpactStatistics_okCount</a> - The number of successful
--   requests.
--   
--   <a>$sel:faultCount:RequestImpactStatistics'</a>,
--   <a>requestImpactStatistics_faultCount</a> - The number of requests
--   that have resulted in a fault,
--   
--   <a>$sel:totalCount:RequestImpactStatistics'</a>,
--   <a>requestImpactStatistics_totalCount</a> - The total number of
--   requests to the service.
newRequestImpactStatistics :: RequestImpactStatistics

-- | The number of successful requests.
requestImpactStatistics_okCount :: Lens' RequestImpactStatistics (Maybe Integer)

-- | The number of requests that have resulted in a fault,
requestImpactStatistics_faultCount :: Lens' RequestImpactStatistics (Maybe Integer)

-- | The total number of requests to the service.
requestImpactStatistics_totalCount :: Lens' RequestImpactStatistics (Maybe Integer)

-- | A list of resources ARNs corresponding to the segments in a trace.
--   
--   <i>See:</i> <a>newResourceARNDetail</a> smart constructor.
data ResourceARNDetail
ResourceARNDetail' :: Maybe Text -> ResourceARNDetail

-- | The ARN of a corresponding resource.
[$sel:arn:ResourceARNDetail'] :: ResourceARNDetail -> Maybe Text

-- | Create a value of <a>ResourceARNDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ResourceARNDetail'</a>, <a>resourceARNDetail_arn</a> - The
--   ARN of a corresponding resource.
newResourceARNDetail :: ResourceARNDetail

-- | The ARN of a corresponding resource.
resourceARNDetail_arn :: Lens' ResourceARNDetail (Maybe Text)

-- | The root cause information for a response time warning.
--   
--   <i>See:</i> <a>newResponseTimeRootCause</a> smart constructor.
data ResponseTimeRootCause
ResponseTimeRootCause' :: Maybe Bool -> Maybe [ResponseTimeRootCauseService] -> ResponseTimeRootCause

-- | A flag that denotes that the root cause impacts the trace client.
[$sel:clientImpacting:ResponseTimeRootCause'] :: ResponseTimeRootCause -> Maybe Bool

-- | A list of corresponding services. A service identifies a segment and
--   contains a name, account ID, type, and inferred flag.
[$sel:services:ResponseTimeRootCause'] :: ResponseTimeRootCause -> Maybe [ResponseTimeRootCauseService]

-- | Create a value of <a>ResponseTimeRootCause</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientImpacting:ResponseTimeRootCause'</a>,
--   <a>responseTimeRootCause_clientImpacting</a> - A flag that denotes
--   that the root cause impacts the trace client.
--   
--   <a>$sel:services:ResponseTimeRootCause'</a>,
--   <a>responseTimeRootCause_services</a> - A list of corresponding
--   services. A service identifies a segment and contains a name, account
--   ID, type, and inferred flag.
newResponseTimeRootCause :: ResponseTimeRootCause

-- | A flag that denotes that the root cause impacts the trace client.
responseTimeRootCause_clientImpacting :: Lens' ResponseTimeRootCause (Maybe Bool)

-- | A list of corresponding services. A service identifies a segment and
--   contains a name, account ID, type, and inferred flag.
responseTimeRootCause_services :: Lens' ResponseTimeRootCause (Maybe [ResponseTimeRootCauseService])

-- | A collection of segments and corresponding subsegments associated to a
--   response time warning.
--   
--   <i>See:</i> <a>newResponseTimeRootCauseEntity</a> smart constructor.
data ResponseTimeRootCauseEntity
ResponseTimeRootCauseEntity' :: Maybe Bool -> Maybe Double -> Maybe Text -> ResponseTimeRootCauseEntity

-- | A flag that denotes a remote subsegment.
[$sel:remote:ResponseTimeRootCauseEntity'] :: ResponseTimeRootCauseEntity -> Maybe Bool

-- | The type and messages of the exceptions.
[$sel:coverage:ResponseTimeRootCauseEntity'] :: ResponseTimeRootCauseEntity -> Maybe Double

-- | The name of the entity.
[$sel:name:ResponseTimeRootCauseEntity'] :: ResponseTimeRootCauseEntity -> Maybe Text

-- | Create a value of <a>ResponseTimeRootCauseEntity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remote:ResponseTimeRootCauseEntity'</a>,
--   <a>responseTimeRootCauseEntity_remote</a> - A flag that denotes a
--   remote subsegment.
--   
--   <a>$sel:coverage:ResponseTimeRootCauseEntity'</a>,
--   <a>responseTimeRootCauseEntity_coverage</a> - The type and messages of
--   the exceptions.
--   
--   <a>$sel:name:ResponseTimeRootCauseEntity'</a>,
--   <a>responseTimeRootCauseEntity_name</a> - The name of the entity.
newResponseTimeRootCauseEntity :: ResponseTimeRootCauseEntity

-- | A flag that denotes a remote subsegment.
responseTimeRootCauseEntity_remote :: Lens' ResponseTimeRootCauseEntity (Maybe Bool)

-- | The type and messages of the exceptions.
responseTimeRootCauseEntity_coverage :: Lens' ResponseTimeRootCauseEntity (Maybe Double)

-- | The name of the entity.
responseTimeRootCauseEntity_name :: Lens' ResponseTimeRootCauseEntity (Maybe Text)

-- | A collection of fields identifying the service in a response time
--   warning.
--   
--   <i>See:</i> <a>newResponseTimeRootCauseService</a> smart constructor.
data ResponseTimeRootCauseService
ResponseTimeRootCauseService' :: Maybe [ResponseTimeRootCauseEntity] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> ResponseTimeRootCauseService

-- | The path of root cause entities found on the service.
[$sel:entityPath:ResponseTimeRootCauseService'] :: ResponseTimeRootCauseService -> Maybe [ResponseTimeRootCauseEntity]

-- | The account ID associated to the service.
[$sel:accountId:ResponseTimeRootCauseService'] :: ResponseTimeRootCauseService -> Maybe Text

-- | A collection of associated service names.
[$sel:names:ResponseTimeRootCauseService'] :: ResponseTimeRootCauseService -> Maybe [Text]

-- | The service name.
[$sel:name:ResponseTimeRootCauseService'] :: ResponseTimeRootCauseService -> Maybe Text

-- | A Boolean value indicating if the service is inferred from the trace.
[$sel:inferred:ResponseTimeRootCauseService'] :: ResponseTimeRootCauseService -> Maybe Bool

-- | The type associated to the service.
[$sel:type':ResponseTimeRootCauseService'] :: ResponseTimeRootCauseService -> Maybe Text

-- | Create a value of <a>ResponseTimeRootCauseService</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityPath:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_entityPath</a> - The path of root
--   cause entities found on the service.
--   
--   <a>$sel:accountId:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_accountId</a> - The account ID
--   associated to the service.
--   
--   <a>$sel:names:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_names</a> - A collection of associated
--   service names.
--   
--   <a>$sel:name:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_name</a> - The service name.
--   
--   <a>$sel:inferred:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_inferred</a> - A Boolean value
--   indicating if the service is inferred from the trace.
--   
--   <a>$sel:type':ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_type</a> - The type associated to the
--   service.
newResponseTimeRootCauseService :: ResponseTimeRootCauseService

-- | The path of root cause entities found on the service.
responseTimeRootCauseService_entityPath :: Lens' ResponseTimeRootCauseService (Maybe [ResponseTimeRootCauseEntity])

-- | The account ID associated to the service.
responseTimeRootCauseService_accountId :: Lens' ResponseTimeRootCauseService (Maybe Text)

-- | A collection of associated service names.
responseTimeRootCauseService_names :: Lens' ResponseTimeRootCauseService (Maybe [Text])

-- | The service name.
responseTimeRootCauseService_name :: Lens' ResponseTimeRootCauseService (Maybe Text)

-- | A Boolean value indicating if the service is inferred from the trace.
responseTimeRootCauseService_inferred :: Lens' ResponseTimeRootCauseService (Maybe Bool)

-- | The type associated to the service.
responseTimeRootCauseService_type :: Lens' ResponseTimeRootCauseService (Maybe Text)

-- | The exception associated with a root cause.
--   
--   <i>See:</i> <a>newRootCauseException</a> smart constructor.
data RootCauseException
RootCauseException' :: Maybe Text -> Maybe Text -> RootCauseException

-- | The name of the exception.
[$sel:name:RootCauseException'] :: RootCauseException -> Maybe Text

-- | The message of the exception.
[$sel:message:RootCauseException'] :: RootCauseException -> Maybe Text

-- | Create a value of <a>RootCauseException</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RootCauseException'</a>, <a>rootCauseException_name</a> -
--   The name of the exception.
--   
--   <a>$sel:message:RootCauseException'</a>,
--   <a>rootCauseException_message</a> - The message of the exception.
newRootCauseException :: RootCauseException

-- | The name of the exception.
rootCauseException_name :: Lens' RootCauseException (Maybe Text)

-- | The message of the exception.
rootCauseException_message :: Lens' RootCauseException (Maybe Text)

-- | A sampling rule that services use to decide whether to instrument a
--   request. Rule fields can match properties of the service, or
--   properties of a request. The service can ignore rules that don't match
--   its properties.
--   
--   <i>See:</i> <a>newSamplingRule</a> smart constructor.
data SamplingRule
SamplingRule' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> Natural -> Double -> Natural -> Text -> Text -> Text -> Text -> Text -> Natural -> SamplingRule

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
[$sel:ruleName:SamplingRule'] :: SamplingRule -> Maybe Text

-- | Matches attributes derived from the request.
[$sel:attributes:SamplingRule'] :: SamplingRule -> Maybe (HashMap Text Text)

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
[$sel:ruleARN:SamplingRule'] :: SamplingRule -> Maybe Text

-- | Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
[$sel:resourceARN:SamplingRule'] :: SamplingRule -> Text

-- | The priority of the sampling rule.
[$sel:priority:SamplingRule'] :: SamplingRule -> Natural

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
[$sel:fixedRate:SamplingRule'] :: SamplingRule -> Double

-- | A fixed number of matching requests to instrument per second, prior to
--   applying the fixed rate. The reservoir is not used directly by
--   services, but applies to all services using the rule collectively.
[$sel:reservoirSize:SamplingRule'] :: SamplingRule -> Natural

-- | Matches the <tt>name</tt> that the service uses to identify itself in
--   segments.
[$sel:serviceName:SamplingRule'] :: SamplingRule -> Text

-- | Matches the <tt>origin</tt> that the service uses to identify its type
--   in segments.
[$sel:serviceType:SamplingRule'] :: SamplingRule -> Text

-- | Matches the hostname from a request URL.
[$sel:host:SamplingRule'] :: SamplingRule -> Text

-- | Matches the HTTP method of a request.
[$sel:hTTPMethod:SamplingRule'] :: SamplingRule -> Text

-- | Matches the path from a request URL.
[$sel:uRLPath:SamplingRule'] :: SamplingRule -> Text

-- | The version of the sampling rule format (<tt>1</tt>).
[$sel:version:SamplingRule'] :: SamplingRule -> Natural

-- | Create a value of <a>SamplingRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleName:SamplingRule'</a>, <a>samplingRule_ruleName</a> - The
--   name of the sampling rule. Specify a rule by either name or ARN, but
--   not both.
--   
--   <a>$sel:attributes:SamplingRule'</a>, <a>samplingRule_attributes</a> -
--   Matches attributes derived from the request.
--   
--   <a>$sel:ruleARN:SamplingRule'</a>, <a>samplingRule_ruleARN</a> - The
--   ARN of the sampling rule. Specify a rule by either name or ARN, but
--   not both.
--   
--   <a>$sel:resourceARN:SamplingRule'</a>, <a>samplingRule_resourceARN</a>
--   - Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
--   
--   <a>$sel:priority:SamplingRule'</a>, <a>samplingRule_priority</a> - The
--   priority of the sampling rule.
--   
--   <a>$sel:fixedRate:SamplingRule'</a>, <a>samplingRule_fixedRate</a> -
--   The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
--   
--   <a>$sel:reservoirSize:SamplingRule'</a>,
--   <a>samplingRule_reservoirSize</a> - A fixed number of matching
--   requests to instrument per second, prior to applying the fixed rate.
--   The reservoir is not used directly by services, but applies to all
--   services using the rule collectively.
--   
--   <a>$sel:serviceName:SamplingRule'</a>, <a>samplingRule_serviceName</a>
--   - Matches the <tt>name</tt> that the service uses to identify itself
--   in segments.
--   
--   <a>$sel:serviceType:SamplingRule'</a>, <a>samplingRule_serviceType</a>
--   - Matches the <tt>origin</tt> that the service uses to identify its
--   type in segments.
--   
--   <a>$sel:host:SamplingRule'</a>, <a>samplingRule_host</a> - Matches the
--   hostname from a request URL.
--   
--   <a>$sel:hTTPMethod:SamplingRule'</a>, <a>samplingRule_hTTPMethod</a> -
--   Matches the HTTP method of a request.
--   
--   <a>$sel:uRLPath:SamplingRule'</a>, <a>samplingRule_uRLPath</a> -
--   Matches the path from a request URL.
--   
--   <a>$sel:version:SamplingRule'</a>, <a>samplingRule_version</a> - The
--   version of the sampling rule format (<tt>1</tt>).
newSamplingRule :: Text -> Natural -> Double -> Natural -> Text -> Text -> Text -> Text -> Text -> Natural -> SamplingRule

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
samplingRule_ruleName :: Lens' SamplingRule (Maybe Text)

-- | Matches attributes derived from the request.
samplingRule_attributes :: Lens' SamplingRule (Maybe (HashMap Text Text))

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
samplingRule_ruleARN :: Lens' SamplingRule (Maybe Text)

-- | Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
samplingRule_resourceARN :: Lens' SamplingRule Text

-- | The priority of the sampling rule.
samplingRule_priority :: Lens' SamplingRule Natural

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
samplingRule_fixedRate :: Lens' SamplingRule Double

-- | A fixed number of matching requests to instrument per second, prior to
--   applying the fixed rate. The reservoir is not used directly by
--   services, but applies to all services using the rule collectively.
samplingRule_reservoirSize :: Lens' SamplingRule Natural

-- | Matches the <tt>name</tt> that the service uses to identify itself in
--   segments.
samplingRule_serviceName :: Lens' SamplingRule Text

-- | Matches the <tt>origin</tt> that the service uses to identify its type
--   in segments.
samplingRule_serviceType :: Lens' SamplingRule Text

-- | Matches the hostname from a request URL.
samplingRule_host :: Lens' SamplingRule Text

-- | Matches the HTTP method of a request.
samplingRule_hTTPMethod :: Lens' SamplingRule Text

-- | Matches the path from a request URL.
samplingRule_uRLPath :: Lens' SamplingRule Text

-- | The version of the sampling rule format (<tt>1</tt>).
samplingRule_version :: Lens' SamplingRule Natural

-- | A <a>SamplingRule</a> and its metadata.
--   
--   <i>See:</i> <a>newSamplingRuleRecord</a> smart constructor.
data SamplingRuleRecord
SamplingRuleRecord' :: Maybe POSIX -> Maybe SamplingRule -> Maybe POSIX -> SamplingRuleRecord

-- | When the rule was last modified.
[$sel:modifiedAt:SamplingRuleRecord'] :: SamplingRuleRecord -> Maybe POSIX

-- | The sampling rule.
[$sel:samplingRule:SamplingRuleRecord'] :: SamplingRuleRecord -> Maybe SamplingRule

-- | When the rule was created.
[$sel:createdAt:SamplingRuleRecord'] :: SamplingRuleRecord -> Maybe POSIX

-- | Create a value of <a>SamplingRuleRecord</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modifiedAt:SamplingRuleRecord'</a>,
--   <a>samplingRuleRecord_modifiedAt</a> - When the rule was last
--   modified.
--   
--   <a>$sel:samplingRule:SamplingRuleRecord'</a>,
--   <a>samplingRuleRecord_samplingRule</a> - The sampling rule.
--   
--   <a>$sel:createdAt:SamplingRuleRecord'</a>,
--   <a>samplingRuleRecord_createdAt</a> - When the rule was created.
newSamplingRuleRecord :: SamplingRuleRecord

-- | When the rule was last modified.
samplingRuleRecord_modifiedAt :: Lens' SamplingRuleRecord (Maybe UTCTime)

-- | The sampling rule.
samplingRuleRecord_samplingRule :: Lens' SamplingRuleRecord (Maybe SamplingRule)

-- | When the rule was created.
samplingRuleRecord_createdAt :: Lens' SamplingRuleRecord (Maybe UTCTime)

-- | A document specifying changes to a sampling rule's configuration.
--   
--   <i>See:</i> <a>newSamplingRuleUpdate</a> smart constructor.
data SamplingRuleUpdate
SamplingRuleUpdate' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Double -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SamplingRuleUpdate

-- | Matches the HTTP method of a request.
[$sel:hTTPMethod:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | The priority of the sampling rule.
[$sel:priority:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Int

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
[$sel:ruleName:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | A fixed number of matching requests to instrument per second, prior to
--   applying the fixed rate. The reservoir is not used directly by
--   services, but applies to all services using the rule collectively.
[$sel:reservoirSize:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Int

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
[$sel:fixedRate:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Double

-- | Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
[$sel:resourceARN:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | Matches attributes derived from the request.
[$sel:attributes:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe (HashMap Text Text)

-- | Matches the <tt>name</tt> that the service uses to identify itself in
--   segments.
[$sel:serviceName:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | Matches the <tt>origin</tt> that the service uses to identify its type
--   in segments.
[$sel:serviceType:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | Matches the hostname from a request URL.
[$sel:host:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
[$sel:ruleARN:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | Matches the path from a request URL.
[$sel:uRLPath:SamplingRuleUpdate'] :: SamplingRuleUpdate -> Maybe Text

-- | Create a value of <a>SamplingRuleUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hTTPMethod:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_hTTPMethod</a> - Matches the HTTP method of a
--   request.
--   
--   <a>$sel:priority:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_priority</a> - The priority of the sampling
--   rule.
--   
--   <a>$sel:ruleName:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_ruleName</a> - The name of the sampling rule.
--   Specify a rule by either name or ARN, but not both.
--   
--   <a>$sel:reservoirSize:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_reservoirSize</a> - A fixed number of matching
--   requests to instrument per second, prior to applying the fixed rate.
--   The reservoir is not used directly by services, but applies to all
--   services using the rule collectively.
--   
--   <a>$sel:fixedRate:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_fixedRate</a> - The percentage of matching
--   requests to instrument, after the reservoir is exhausted.
--   
--   <a>$sel:resourceARN:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_resourceARN</a> - Matches the ARN of the Amazon
--   Web Services resource on which the service runs.
--   
--   <a>$sel:attributes:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_attributes</a> - Matches attributes derived from
--   the request.
--   
--   <a>$sel:serviceName:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_serviceName</a> - Matches the <tt>name</tt> that
--   the service uses to identify itself in segments.
--   
--   <a>$sel:serviceType:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_serviceType</a> - Matches the <tt>origin</tt>
--   that the service uses to identify its type in segments.
--   
--   <a>$sel:host:SamplingRuleUpdate'</a>, <a>samplingRuleUpdate_host</a> -
--   Matches the hostname from a request URL.
--   
--   <a>$sel:ruleARN:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_ruleARN</a> - The ARN of the sampling rule.
--   Specify a rule by either name or ARN, but not both.
--   
--   <a>$sel:uRLPath:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_uRLPath</a> - Matches the path from a request
--   URL.
newSamplingRuleUpdate :: SamplingRuleUpdate

-- | Matches the HTTP method of a request.
samplingRuleUpdate_hTTPMethod :: Lens' SamplingRuleUpdate (Maybe Text)

-- | The priority of the sampling rule.
samplingRuleUpdate_priority :: Lens' SamplingRuleUpdate (Maybe Int)

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
samplingRuleUpdate_ruleName :: Lens' SamplingRuleUpdate (Maybe Text)

-- | A fixed number of matching requests to instrument per second, prior to
--   applying the fixed rate. The reservoir is not used directly by
--   services, but applies to all services using the rule collectively.
samplingRuleUpdate_reservoirSize :: Lens' SamplingRuleUpdate (Maybe Int)

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
samplingRuleUpdate_fixedRate :: Lens' SamplingRuleUpdate (Maybe Double)

-- | Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
samplingRuleUpdate_resourceARN :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Matches attributes derived from the request.
samplingRuleUpdate_attributes :: Lens' SamplingRuleUpdate (Maybe (HashMap Text Text))

-- | Matches the <tt>name</tt> that the service uses to identify itself in
--   segments.
samplingRuleUpdate_serviceName :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Matches the <tt>origin</tt> that the service uses to identify its type
--   in segments.
samplingRuleUpdate_serviceType :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Matches the hostname from a request URL.
samplingRuleUpdate_host :: Lens' SamplingRuleUpdate (Maybe Text)

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
samplingRuleUpdate_ruleARN :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Matches the path from a request URL.
samplingRuleUpdate_uRLPath :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Aggregated request sampling data for a sampling rule across all
--   services for a 10-second window.
--   
--   <i>See:</i> <a>newSamplingStatisticSummary</a> smart constructor.
data SamplingStatisticSummary
SamplingStatisticSummary' :: Maybe Int -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Int -> SamplingStatisticSummary

-- | The number of requests that matched the rule.
[$sel:requestCount:SamplingStatisticSummary'] :: SamplingStatisticSummary -> Maybe Int

-- | The number of requests recorded with borrowed reservoir quota.
[$sel:borrowCount:SamplingStatisticSummary'] :: SamplingStatisticSummary -> Maybe Int

-- | The name of the sampling rule.
[$sel:ruleName:SamplingStatisticSummary'] :: SamplingStatisticSummary -> Maybe Text

-- | The start time of the reporting window.
[$sel:timestamp:SamplingStatisticSummary'] :: SamplingStatisticSummary -> Maybe POSIX

-- | The number of requests recorded.
[$sel:sampledCount:SamplingStatisticSummary'] :: SamplingStatisticSummary -> Maybe Int

-- | Create a value of <a>SamplingStatisticSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestCount:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_requestCount</a> - The number of requests
--   that matched the rule.
--   
--   <a>$sel:borrowCount:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_borrowCount</a> - The number of requests
--   recorded with borrowed reservoir quota.
--   
--   <a>$sel:ruleName:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_ruleName</a> - The name of the sampling
--   rule.
--   
--   <a>$sel:timestamp:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_timestamp</a> - The start time of the
--   reporting window.
--   
--   <a>$sel:sampledCount:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_sampledCount</a> - The number of requests
--   recorded.
newSamplingStatisticSummary :: SamplingStatisticSummary

-- | The number of requests that matched the rule.
samplingStatisticSummary_requestCount :: Lens' SamplingStatisticSummary (Maybe Int)

-- | The number of requests recorded with borrowed reservoir quota.
samplingStatisticSummary_borrowCount :: Lens' SamplingStatisticSummary (Maybe Int)

-- | The name of the sampling rule.
samplingStatisticSummary_ruleName :: Lens' SamplingStatisticSummary (Maybe Text)

-- | The start time of the reporting window.
samplingStatisticSummary_timestamp :: Lens' SamplingStatisticSummary (Maybe UTCTime)

-- | The number of requests recorded.
samplingStatisticSummary_sampledCount :: Lens' SamplingStatisticSummary (Maybe Int)

-- | Request sampling results for a single rule from a service. Results are
--   for the last 10 seconds unless the service has been assigned a longer
--   reporting interval after a previous call to <a>GetSamplingTargets</a>.
--   
--   <i>See:</i> <a>newSamplingStatisticsDocument</a> smart constructor.
data SamplingStatisticsDocument
SamplingStatisticsDocument' :: Maybe Natural -> Text -> Text -> POSIX -> Natural -> Natural -> SamplingStatisticsDocument

-- | The number of requests recorded with borrowed reservoir quota.
[$sel:borrowCount:SamplingStatisticsDocument'] :: SamplingStatisticsDocument -> Maybe Natural

-- | The name of the sampling rule.
[$sel:ruleName:SamplingStatisticsDocument'] :: SamplingStatisticsDocument -> Text

-- | A unique identifier for the service in hexadecimal.
[$sel:clientID:SamplingStatisticsDocument'] :: SamplingStatisticsDocument -> Text

-- | The current time.
[$sel:timestamp:SamplingStatisticsDocument'] :: SamplingStatisticsDocument -> POSIX

-- | The number of requests that matched the rule.
[$sel:requestCount:SamplingStatisticsDocument'] :: SamplingStatisticsDocument -> Natural

-- | The number of requests recorded.
[$sel:sampledCount:SamplingStatisticsDocument'] :: SamplingStatisticsDocument -> Natural

-- | Create a value of <a>SamplingStatisticsDocument</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:borrowCount:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_borrowCount</a> - The number of requests
--   recorded with borrowed reservoir quota.
--   
--   <a>$sel:ruleName:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_ruleName</a> - The name of the sampling
--   rule.
--   
--   <a>$sel:clientID:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_clientID</a> - A unique identifier for
--   the service in hexadecimal.
--   
--   <a>$sel:timestamp:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_timestamp</a> - The current time.
--   
--   <a>$sel:requestCount:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_requestCount</a> - The number of
--   requests that matched the rule.
--   
--   <a>$sel:sampledCount:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_sampledCount</a> - The number of
--   requests recorded.
newSamplingStatisticsDocument :: Text -> Text -> UTCTime -> Natural -> Natural -> SamplingStatisticsDocument

-- | The number of requests recorded with borrowed reservoir quota.
samplingStatisticsDocument_borrowCount :: Lens' SamplingStatisticsDocument (Maybe Natural)

-- | The name of the sampling rule.
samplingStatisticsDocument_ruleName :: Lens' SamplingStatisticsDocument Text

-- | A unique identifier for the service in hexadecimal.
samplingStatisticsDocument_clientID :: Lens' SamplingStatisticsDocument Text

-- | The current time.
samplingStatisticsDocument_timestamp :: Lens' SamplingStatisticsDocument UTCTime

-- | The number of requests that matched the rule.
samplingStatisticsDocument_requestCount :: Lens' SamplingStatisticsDocument Natural

-- | The number of requests recorded.
samplingStatisticsDocument_sampledCount :: Lens' SamplingStatisticsDocument Natural

-- | The name and value of a sampling rule to apply to a trace summary.
--   
--   <i>See:</i> <a>newSamplingStrategy</a> smart constructor.
data SamplingStrategy
SamplingStrategy' :: Maybe Double -> Maybe SamplingStrategyName -> SamplingStrategy

-- | The value of a sampling rule.
[$sel:value:SamplingStrategy'] :: SamplingStrategy -> Maybe Double

-- | The name of a sampling rule.
[$sel:name:SamplingStrategy'] :: SamplingStrategy -> Maybe SamplingStrategyName

-- | Create a value of <a>SamplingStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:SamplingStrategy'</a>, <a>samplingStrategy_value</a> -
--   The value of a sampling rule.
--   
--   <a>$sel:name:SamplingStrategy'</a>, <a>samplingStrategy_name</a> - The
--   name of a sampling rule.
newSamplingStrategy :: SamplingStrategy

-- | The value of a sampling rule.
samplingStrategy_value :: Lens' SamplingStrategy (Maybe Double)

-- | The name of a sampling rule.
samplingStrategy_name :: Lens' SamplingStrategy (Maybe SamplingStrategyName)

-- | Temporary changes to a sampling rule configuration. To meet the global
--   sampling target for a rule, X-Ray calculates a new reservoir for each
--   service based on the recent sampling results of all services that
--   called <a>GetSamplingTargets</a>.
--   
--   <i>See:</i> <a>newSamplingTargetDocument</a> smart constructor.
data SamplingTargetDocument
SamplingTargetDocument' :: Maybe Int -> Maybe Text -> Maybe Double -> Maybe Int -> Maybe POSIX -> SamplingTargetDocument

-- | The number of requests per second that X-Ray allocated for this
--   service.
[$sel:reservoirQuota:SamplingTargetDocument'] :: SamplingTargetDocument -> Maybe Int

-- | The name of the sampling rule.
[$sel:ruleName:SamplingTargetDocument'] :: SamplingTargetDocument -> Maybe Text

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
[$sel:fixedRate:SamplingTargetDocument'] :: SamplingTargetDocument -> Maybe Double

-- | The number of seconds for the service to wait before getting sampling
--   targets again.
[$sel:interval:SamplingTargetDocument'] :: SamplingTargetDocument -> Maybe Int

-- | When the reservoir quota expires.
[$sel:reservoirQuotaTTL:SamplingTargetDocument'] :: SamplingTargetDocument -> Maybe POSIX

-- | Create a value of <a>SamplingTargetDocument</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservoirQuota:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_reservoirQuota</a> - The number of requests
--   per second that X-Ray allocated for this service.
--   
--   <a>$sel:ruleName:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_ruleName</a> - The name of the sampling
--   rule.
--   
--   <a>$sel:fixedRate:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_fixedRate</a> - The percentage of matching
--   requests to instrument, after the reservoir is exhausted.
--   
--   <a>$sel:interval:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_interval</a> - The number of seconds for the
--   service to wait before getting sampling targets again.
--   
--   <a>$sel:reservoirQuotaTTL:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_reservoirQuotaTTL</a> - When the reservoir
--   quota expires.
newSamplingTargetDocument :: SamplingTargetDocument

-- | The number of requests per second that X-Ray allocated for this
--   service.
samplingTargetDocument_reservoirQuota :: Lens' SamplingTargetDocument (Maybe Int)

-- | The name of the sampling rule.
samplingTargetDocument_ruleName :: Lens' SamplingTargetDocument (Maybe Text)

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
samplingTargetDocument_fixedRate :: Lens' SamplingTargetDocument (Maybe Double)

-- | The number of seconds for the service to wait before getting sampling
--   targets again.
samplingTargetDocument_interval :: Lens' SamplingTargetDocument (Maybe Int)

-- | When the reservoir quota expires.
samplingTargetDocument_reservoirQuotaTTL :: Lens' SamplingTargetDocument (Maybe UTCTime)

-- | A segment from a trace that has been ingested by the X-Ray service.
--   The segment can be compiled from documents uploaded with
--   <a>PutTraceSegments</a>, or an <tt>inferred</tt> segment for a
--   downstream service, generated from a subsegment sent by the service
--   that called it.
--   
--   For the full segment document schema, see <a>Amazon Web Services X-Ray
--   Segment Documents</a> in the <i>Amazon Web Services X-Ray Developer
--   Guide</i>.
--   
--   <i>See:</i> <a>newSegment</a> smart constructor.
data Segment
Segment' :: Maybe Text -> Maybe Text -> Segment

-- | The segment document.
[$sel:document:Segment'] :: Segment -> Maybe Text

-- | The segment's ID.
[$sel:id:Segment'] :: Segment -> Maybe Text

-- | Create a value of <a>Segment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:document:Segment'</a>, <a>segment_document</a> - The segment
--   document.
--   
--   <a>$sel:id:Segment'</a>, <a>segment_id</a> - The segment's ID.
newSegment :: Segment

-- | The segment document.
segment_document :: Lens' Segment (Maybe Text)

-- | The segment's ID.
segment_id :: Lens' Segment (Maybe Text)

-- | <i>See:</i> <a>newServiceId</a> smart constructor.
data ServiceId
ServiceId' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> ServiceId
[$sel:accountId:ServiceId'] :: ServiceId -> Maybe Text
[$sel:names:ServiceId'] :: ServiceId -> Maybe [Text]
[$sel:name:ServiceId'] :: ServiceId -> Maybe Text
[$sel:type':ServiceId'] :: ServiceId -> Maybe Text

-- | Create a value of <a>ServiceId</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:ServiceId'</a>, <a>serviceId_accountId</a> -
--   
--   <a>$sel:names:ServiceId'</a>, <a>serviceId_names</a> -
--   
--   <a>$sel:name:ServiceId'</a>, <a>serviceId_name</a> -
--   
--   <a>$sel:type':ServiceId'</a>, <a>serviceId_type</a> -
newServiceId :: ServiceId

serviceId_accountId :: Lens' ServiceId (Maybe Text)

serviceId_names :: Lens' ServiceId (Maybe [Text])

serviceId_name :: Lens' ServiceId (Maybe Text)

serviceId_type :: Lens' ServiceId (Maybe Text)

-- | Information about an application that processed requests, users that
--   made requests, or downstream services, resources, and applications
--   that an application used.
--   
--   <i>See:</i> <a>newServiceInfo</a> smart constructor.
data ServiceInfo
ServiceInfo' :: Maybe Text -> Maybe POSIX -> Maybe Bool -> Maybe [HistogramEntry] -> Maybe [HistogramEntry] -> Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe [Edge] -> Maybe ServiceStatistics -> ServiceInfo

-- | The service's state.
[$sel:state:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | The start time of the first segment that the service generated.
[$sel:startTime:ServiceInfo'] :: ServiceInfo -> Maybe POSIX

-- | Indicates that the service was the first service to process a request.
[$sel:root:ServiceInfo'] :: ServiceInfo -> Maybe Bool

-- | A histogram that maps the spread of service response times.
[$sel:responseTimeHistogram:ServiceInfo'] :: ServiceInfo -> Maybe [HistogramEntry]

-- | A histogram that maps the spread of service durations.
[$sel:durationHistogram:ServiceInfo'] :: ServiceInfo -> Maybe [HistogramEntry]

-- | Identifier for the service. Unique within the service map.
[$sel:referenceId:ServiceInfo'] :: ServiceInfo -> Maybe Int

-- | Identifier of the Amazon Web Services account in which the service
--   runs.
[$sel:accountId:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | A list of names for the service, including the canonical name.
[$sel:names:ServiceInfo'] :: ServiceInfo -> Maybe [Text]

-- | The canonical name of the service.
[$sel:name:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | The end time of the last segment that the service generated.
[$sel:endTime:ServiceInfo'] :: ServiceInfo -> Maybe POSIX

-- | The type of service.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, <tt>AWS::EC2::Instance</tt> for an application
--   running on Amazon EC2 or <tt>AWS::DynamoDB::Table</tt> for an Amazon
--   DynamoDB table that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, <tt>AWS::DynamoDB</tt> for downstream calls to
--   Amazon DynamoDB that didn't target a specific table.</li>
--   <li><tt>client</tt> - Represents the clients that sent requests to a
--   root service.</li>
--   <li><tt>remote</tt> - A downstream service of indeterminate type.</li>
--   </ul>
[$sel:type':ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | Connections to downstream services.
[$sel:edges:ServiceInfo'] :: ServiceInfo -> Maybe [Edge]

-- | Aggregated statistics for the service.
[$sel:summaryStatistics:ServiceInfo'] :: ServiceInfo -> Maybe ServiceStatistics

-- | Create a value of <a>ServiceInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ServiceInfo'</a>, <a>serviceInfo_state</a> - The
--   service's state.
--   
--   <a>$sel:startTime:ServiceInfo'</a>, <a>serviceInfo_startTime</a> - The
--   start time of the first segment that the service generated.
--   
--   <a>$sel:root:ServiceInfo'</a>, <a>serviceInfo_root</a> - Indicates
--   that the service was the first service to process a request.
--   
--   <a>$sel:responseTimeHistogram:ServiceInfo'</a>,
--   <a>serviceInfo_responseTimeHistogram</a> - A histogram that maps the
--   spread of service response times.
--   
--   <a>$sel:durationHistogram:ServiceInfo'</a>,
--   <a>serviceInfo_durationHistogram</a> - A histogram that maps the
--   spread of service durations.
--   
--   <a>$sel:referenceId:ServiceInfo'</a>, <a>serviceInfo_referenceId</a> -
--   Identifier for the service. Unique within the service map.
--   
--   <a>$sel:accountId:ServiceInfo'</a>, <a>serviceInfo_accountId</a> -
--   Identifier of the Amazon Web Services account in which the service
--   runs.
--   
--   <a>$sel:names:ServiceInfo'</a>, <a>serviceInfo_names</a> - A list of
--   names for the service, including the canonical name.
--   
--   <a>$sel:name:ServiceInfo'</a>, <a>serviceInfo_name</a> - The canonical
--   name of the service.
--   
--   <a>$sel:endTime:ServiceInfo'</a>, <a>serviceInfo_endTime</a> - The end
--   time of the last segment that the service generated.
--   
--   <a>$sel:type':ServiceInfo'</a>, <a>serviceInfo_type</a> - The type of
--   service.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, <tt>AWS::EC2::Instance</tt> for an application
--   running on Amazon EC2 or <tt>AWS::DynamoDB::Table</tt> for an Amazon
--   DynamoDB table that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, <tt>AWS::DynamoDB</tt> for downstream calls to
--   Amazon DynamoDB that didn't target a specific table.</li>
--   <li><tt>client</tt> - Represents the clients that sent requests to a
--   root service.</li>
--   <li><tt>remote</tt> - A downstream service of indeterminate type.</li>
--   </ul>
--   
--   <a>$sel:edges:ServiceInfo'</a>, <a>serviceInfo_edges</a> - Connections
--   to downstream services.
--   
--   <a>$sel:summaryStatistics:ServiceInfo'</a>,
--   <a>serviceInfo_summaryStatistics</a> - Aggregated statistics for the
--   service.
newServiceInfo :: ServiceInfo

-- | The service's state.
serviceInfo_state :: Lens' ServiceInfo (Maybe Text)

-- | The start time of the first segment that the service generated.
serviceInfo_startTime :: Lens' ServiceInfo (Maybe UTCTime)

-- | Indicates that the service was the first service to process a request.
serviceInfo_root :: Lens' ServiceInfo (Maybe Bool)

-- | A histogram that maps the spread of service response times.
serviceInfo_responseTimeHistogram :: Lens' ServiceInfo (Maybe [HistogramEntry])

-- | A histogram that maps the spread of service durations.
serviceInfo_durationHistogram :: Lens' ServiceInfo (Maybe [HistogramEntry])

-- | Identifier for the service. Unique within the service map.
serviceInfo_referenceId :: Lens' ServiceInfo (Maybe Int)

-- | Identifier of the Amazon Web Services account in which the service
--   runs.
serviceInfo_accountId :: Lens' ServiceInfo (Maybe Text)

-- | A list of names for the service, including the canonical name.
serviceInfo_names :: Lens' ServiceInfo (Maybe [Text])

-- | The canonical name of the service.
serviceInfo_name :: Lens' ServiceInfo (Maybe Text)

-- | The end time of the last segment that the service generated.
serviceInfo_endTime :: Lens' ServiceInfo (Maybe UTCTime)

-- | The type of service.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, <tt>AWS::EC2::Instance</tt> for an application
--   running on Amazon EC2 or <tt>AWS::DynamoDB::Table</tt> for an Amazon
--   DynamoDB table that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, <tt>AWS::DynamoDB</tt> for downstream calls to
--   Amazon DynamoDB that didn't target a specific table.</li>
--   <li><tt>client</tt> - Represents the clients that sent requests to a
--   root service.</li>
--   <li><tt>remote</tt> - A downstream service of indeterminate type.</li>
--   </ul>
serviceInfo_type :: Lens' ServiceInfo (Maybe Text)

-- | Connections to downstream services.
serviceInfo_edges :: Lens' ServiceInfo (Maybe [Edge])

-- | Aggregated statistics for the service.
serviceInfo_summaryStatistics :: Lens' ServiceInfo (Maybe ServiceStatistics)

-- | Response statistics for a service.
--   
--   <i>See:</i> <a>newServiceStatistics</a> smart constructor.
data ServiceStatistics
ServiceStatistics' :: Maybe FaultStatistics -> Maybe Integer -> Maybe Double -> Maybe ErrorStatistics -> Maybe Integer -> ServiceStatistics

-- | Information about requests that failed with a 5xx Server Error status
--   code.
[$sel:faultStatistics:ServiceStatistics'] :: ServiceStatistics -> Maybe FaultStatistics

-- | The number of requests that completed with a 2xx Success status code.
[$sel:okCount:ServiceStatistics'] :: ServiceStatistics -> Maybe Integer

-- | The aggregate response time of completed requests.
[$sel:totalResponseTime:ServiceStatistics'] :: ServiceStatistics -> Maybe Double

-- | Information about requests that failed with a 4xx Client Error status
--   code.
[$sel:errorStatistics:ServiceStatistics'] :: ServiceStatistics -> Maybe ErrorStatistics

-- | The total number of completed requests.
[$sel:totalCount:ServiceStatistics'] :: ServiceStatistics -> Maybe Integer

-- | Create a value of <a>ServiceStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:faultStatistics:ServiceStatistics'</a>,
--   <a>serviceStatistics_faultStatistics</a> - Information about requests
--   that failed with a 5xx Server Error status code.
--   
--   <a>$sel:okCount:ServiceStatistics'</a>,
--   <a>serviceStatistics_okCount</a> - The number of requests that
--   completed with a 2xx Success status code.
--   
--   <a>$sel:totalResponseTime:ServiceStatistics'</a>,
--   <a>serviceStatistics_totalResponseTime</a> - The aggregate response
--   time of completed requests.
--   
--   <a>$sel:errorStatistics:ServiceStatistics'</a>,
--   <a>serviceStatistics_errorStatistics</a> - Information about requests
--   that failed with a 4xx Client Error status code.
--   
--   <a>$sel:totalCount:ServiceStatistics'</a>,
--   <a>serviceStatistics_totalCount</a> - The total number of completed
--   requests.
newServiceStatistics :: ServiceStatistics

-- | Information about requests that failed with a 5xx Server Error status
--   code.
serviceStatistics_faultStatistics :: Lens' ServiceStatistics (Maybe FaultStatistics)

-- | The number of requests that completed with a 2xx Success status code.
serviceStatistics_okCount :: Lens' ServiceStatistics (Maybe Integer)

-- | The aggregate response time of completed requests.
serviceStatistics_totalResponseTime :: Lens' ServiceStatistics (Maybe Double)

-- | Information about requests that failed with a 4xx Client Error status
--   code.
serviceStatistics_errorStatistics :: Lens' ServiceStatistics (Maybe ErrorStatistics)

-- | The total number of completed requests.
serviceStatistics_totalCount :: Lens' ServiceStatistics (Maybe Integer)

-- | A map that contains tag keys and tag values to attach to an Amazon Web
--   Services X-Ray group or sampling rule. For more information about ways
--   to use tags, see <a>Tagging Amazon Web Services resources</a> in the
--   <i>Amazon Web Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use. You cannot edit or delete system tags.</li>
--   </ul>
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | A tag key, such as <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot
--   be empty. The key can be a maximum of 128 characters, and can contain
--   only Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt>
[$sel:key:Tag'] :: Tag -> Text

-- | An optional tag value, such as <tt>Production</tt> or
--   <tt>test-only</tt>. The value can be a maximum of 255 characters, and
--   contain only Unicode letters, numbers, or separators, or the following
--   special characters: <tt>+ - = . _ : /</tt>
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A tag key, such as
--   <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot be empty. The key
--   can be a maximum of 128 characters, and can contain only Unicode
--   letters, numbers, or separators, or the following special characters:
--   <tt>+ - = . _ : /</tt>
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - An optional tag value, such
--   as <tt>Production</tt> or <tt>test-only</tt>. The value can be a
--   maximum of 255 characters, and contain only Unicode letters, numbers,
--   or separators, or the following special characters: <tt>+ - = . _ :
--   /</tt>
newTag :: Text -> Text -> Tag

-- | A tag key, such as <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot
--   be empty. The key can be a maximum of 128 characters, and can contain
--   only Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt>
tag_key :: Lens' Tag Text

-- | An optional tag value, such as <tt>Production</tt> or
--   <tt>test-only</tt>. The value can be a maximum of 255 characters, and
--   contain only Unicode letters, numbers, or separators, or the following
--   special characters: <tt>+ - = . _ : /</tt>
tag_value :: Lens' Tag Text

-- | <i>See:</i> <a>newTelemetryRecord</a> smart constructor.
data TelemetryRecord
TelemetryRecord' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe BackendConnectionErrors -> POSIX -> TelemetryRecord
[$sel:segmentsReceivedCount:TelemetryRecord'] :: TelemetryRecord -> Maybe Int
[$sel:segmentsSentCount:TelemetryRecord'] :: TelemetryRecord -> Maybe Int
[$sel:segmentsSpilloverCount:TelemetryRecord'] :: TelemetryRecord -> Maybe Int
[$sel:segmentsRejectedCount:TelemetryRecord'] :: TelemetryRecord -> Maybe Int
[$sel:backendConnectionErrors:TelemetryRecord'] :: TelemetryRecord -> Maybe BackendConnectionErrors
[$sel:timestamp:TelemetryRecord'] :: TelemetryRecord -> POSIX

-- | Create a value of <a>TelemetryRecord</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:segmentsReceivedCount:TelemetryRecord'</a>,
--   <a>telemetryRecord_segmentsReceivedCount</a> -
--   
--   <a>$sel:segmentsSentCount:TelemetryRecord'</a>,
--   <a>telemetryRecord_segmentsSentCount</a> -
--   
--   <a>$sel:segmentsSpilloverCount:TelemetryRecord'</a>,
--   <a>telemetryRecord_segmentsSpilloverCount</a> -
--   
--   <a>$sel:segmentsRejectedCount:TelemetryRecord'</a>,
--   <a>telemetryRecord_segmentsRejectedCount</a> -
--   
--   <a>$sel:backendConnectionErrors:TelemetryRecord'</a>,
--   <a>telemetryRecord_backendConnectionErrors</a> -
--   
--   <a>$sel:timestamp:TelemetryRecord'</a>,
--   <a>telemetryRecord_timestamp</a> -
newTelemetryRecord :: UTCTime -> TelemetryRecord

telemetryRecord_segmentsReceivedCount :: Lens' TelemetryRecord (Maybe Int)

telemetryRecord_segmentsSentCount :: Lens' TelemetryRecord (Maybe Int)

telemetryRecord_segmentsSpilloverCount :: Lens' TelemetryRecord (Maybe Int)

telemetryRecord_segmentsRejectedCount :: Lens' TelemetryRecord (Maybe Int)

telemetryRecord_backendConnectionErrors :: Lens' TelemetryRecord (Maybe BackendConnectionErrors)

telemetryRecord_timestamp :: Lens' TelemetryRecord UTCTime

-- | A list of TimeSeriesStatistic structures.
--   
--   <i>See:</i> <a>newTimeSeriesServiceStatistics</a> smart constructor.
data TimeSeriesServiceStatistics
TimeSeriesServiceStatistics' :: Maybe ServiceStatistics -> Maybe [HistogramEntry] -> Maybe EdgeStatistics -> Maybe ForecastStatistics -> Maybe POSIX -> TimeSeriesServiceStatistics
[$sel:serviceSummaryStatistics:TimeSeriesServiceStatistics'] :: TimeSeriesServiceStatistics -> Maybe ServiceStatistics

-- | The response time histogram for the selected entities.
[$sel:responseTimeHistogram:TimeSeriesServiceStatistics'] :: TimeSeriesServiceStatistics -> Maybe [HistogramEntry]
[$sel:edgeSummaryStatistics:TimeSeriesServiceStatistics'] :: TimeSeriesServiceStatistics -> Maybe EdgeStatistics

-- | The forecasted high and low fault count values.
[$sel:serviceForecastStatistics:TimeSeriesServiceStatistics'] :: TimeSeriesServiceStatistics -> Maybe ForecastStatistics

-- | Timestamp of the window for which statistics are aggregated.
[$sel:timestamp:TimeSeriesServiceStatistics'] :: TimeSeriesServiceStatistics -> Maybe POSIX

-- | Create a value of <a>TimeSeriesServiceStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceSummaryStatistics:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_serviceSummaryStatistics</a> -
--   Undocumented member.
--   
--   <a>$sel:responseTimeHistogram:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_responseTimeHistogram</a> - The
--   response time histogram for the selected entities.
--   
--   <a>$sel:edgeSummaryStatistics:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_edgeSummaryStatistics</a> -
--   Undocumented member.
--   
--   <a>$sel:serviceForecastStatistics:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_serviceForecastStatistics</a> - The
--   forecasted high and low fault count values.
--   
--   <a>$sel:timestamp:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_timestamp</a> - Timestamp of the window
--   for which statistics are aggregated.
newTimeSeriesServiceStatistics :: TimeSeriesServiceStatistics

-- | Undocumented member.
timeSeriesServiceStatistics_serviceSummaryStatistics :: Lens' TimeSeriesServiceStatistics (Maybe ServiceStatistics)

-- | The response time histogram for the selected entities.
timeSeriesServiceStatistics_responseTimeHistogram :: Lens' TimeSeriesServiceStatistics (Maybe [HistogramEntry])

-- | Undocumented member.
timeSeriesServiceStatistics_edgeSummaryStatistics :: Lens' TimeSeriesServiceStatistics (Maybe EdgeStatistics)

-- | The forecasted high and low fault count values.
timeSeriesServiceStatistics_serviceForecastStatistics :: Lens' TimeSeriesServiceStatistics (Maybe ForecastStatistics)

-- | Timestamp of the window for which statistics are aggregated.
timeSeriesServiceStatistics_timestamp :: Lens' TimeSeriesServiceStatistics (Maybe UTCTime)

-- | A collection of segment documents with matching trace IDs.
--   
--   <i>See:</i> <a>newTrace</a> smart constructor.
data Trace
Trace' :: Maybe Bool -> Maybe Text -> Maybe [Segment] -> Maybe Double -> Trace

-- | LimitExceeded is set to true when the trace has exceeded one of the
--   defined quotas. For more information about quotas, see <a>Amazon Web
--   Services X-Ray endpoints and quotas</a>.
[$sel:limitExceeded:Trace'] :: Trace -> Maybe Bool

-- | The unique identifier for the request that generated the trace's
--   segments and subsegments.
[$sel:id:Trace'] :: Trace -> Maybe Text

-- | Segment documents for the segments and subsegments that comprise the
--   trace.
[$sel:segments:Trace'] :: Trace -> Maybe [Segment]

-- | The length of time in seconds between the start time of the root
--   segment and the end time of the last segment that completed.
[$sel:duration:Trace'] :: Trace -> Maybe Double

-- | Create a value of <a>Trace</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limitExceeded:Trace'</a>, <a>trace_limitExceeded</a> -
--   LimitExceeded is set to true when the trace has exceeded one of the
--   defined quotas. For more information about quotas, see <a>Amazon Web
--   Services X-Ray endpoints and quotas</a>.
--   
--   <a>$sel:id:Trace'</a>, <a>trace_id</a> - The unique identifier for the
--   request that generated the trace's segments and subsegments.
--   
--   <a>$sel:segments:Trace'</a>, <a>trace_segments</a> - Segment documents
--   for the segments and subsegments that comprise the trace.
--   
--   <a>$sel:duration:Trace'</a>, <a>trace_duration</a> - The length of
--   time in seconds between the start time of the root segment and the end
--   time of the last segment that completed.
newTrace :: Trace

-- | LimitExceeded is set to true when the trace has exceeded one of the
--   defined quotas. For more information about quotas, see <a>Amazon Web
--   Services X-Ray endpoints and quotas</a>.
trace_limitExceeded :: Lens' Trace (Maybe Bool)

-- | The unique identifier for the request that generated the trace's
--   segments and subsegments.
trace_id :: Lens' Trace (Maybe Text)

-- | Segment documents for the segments and subsegments that comprise the
--   trace.
trace_segments :: Lens' Trace (Maybe [Segment])

-- | The length of time in seconds between the start time of the root
--   segment and the end time of the last segment that completed.
trace_duration :: Lens' Trace (Maybe Double)

-- | Metadata generated from the segment documents in a trace.
--   
--   <i>See:</i> <a>newTraceSummary</a> smart constructor.
data TraceSummary
TraceSummary' :: Maybe (HashMap Text [ValueWithServiceIds]) -> Maybe Bool -> Maybe [TraceUser] -> Maybe ServiceId -> Maybe Bool -> Maybe [ServiceId] -> Maybe POSIX -> Maybe Bool -> Maybe [ErrorRootCause] -> Maybe [ResourceARNDetail] -> Maybe [AvailabilityZoneDetail] -> Maybe [InstanceIdDetail] -> Maybe [ResponseTimeRootCause] -> Maybe Bool -> Maybe Text -> Maybe Http -> Maybe Int -> Maybe Double -> Maybe [FaultRootCause] -> Maybe Double -> TraceSummary

-- | Annotations from the trace's segment documents.
[$sel:annotations:TraceSummary'] :: TraceSummary -> Maybe (HashMap Text [ValueWithServiceIds])

-- | One or more of the segment documents has a 429 throttling error.
[$sel:hasThrottle:TraceSummary'] :: TraceSummary -> Maybe Bool

-- | Users from the trace's segment documents.
[$sel:users:TraceSummary'] :: TraceSummary -> Maybe [TraceUser]

-- | The root of a trace.
[$sel:entryPoint:TraceSummary'] :: TraceSummary -> Maybe ServiceId

-- | The root segment document has a 500 series error.
[$sel:hasFault:TraceSummary'] :: TraceSummary -> Maybe Bool

-- | Service IDs from the trace's segment documents.
[$sel:serviceIds:TraceSummary'] :: TraceSummary -> Maybe [ServiceId]

-- | The matched time stamp of a defined event.
[$sel:matchedEventTime:TraceSummary'] :: TraceSummary -> Maybe POSIX

-- | One or more of the segment documents is in progress.
[$sel:isPartial:TraceSummary'] :: TraceSummary -> Maybe Bool

-- | A collection of ErrorRootCause structures corresponding to the trace
--   segments.
[$sel:errorRootCauses:TraceSummary'] :: TraceSummary -> Maybe [ErrorRootCause]

-- | A list of resource ARNs for any resource corresponding to the trace
--   segments.
[$sel:resourceARNs:TraceSummary'] :: TraceSummary -> Maybe [ResourceARNDetail]

-- | A list of Availability Zones for any zone corresponding to the trace
--   segments.
[$sel:availabilityZones:TraceSummary'] :: TraceSummary -> Maybe [AvailabilityZoneDetail]

-- | A list of EC2 instance IDs for any instance corresponding to the trace
--   segments.
[$sel:instanceIds:TraceSummary'] :: TraceSummary -> Maybe [InstanceIdDetail]

-- | A collection of ResponseTimeRootCause structures corresponding to the
--   trace segments.
[$sel:responseTimeRootCauses:TraceSummary'] :: TraceSummary -> Maybe [ResponseTimeRootCause]

-- | The root segment document has a 400 series error.
[$sel:hasError:TraceSummary'] :: TraceSummary -> Maybe Bool

-- | The unique identifier for the request that generated the trace's
--   segments and subsegments.
[$sel:id:TraceSummary'] :: TraceSummary -> Maybe Text

-- | Information about the HTTP request served by the trace.
[$sel:http:TraceSummary'] :: TraceSummary -> Maybe Http

-- | The revision number of a trace.
[$sel:revision:TraceSummary'] :: TraceSummary -> Maybe Int

-- | The length of time in seconds between the start time of the root
--   segment and the end time of the last segment that completed.
[$sel:duration:TraceSummary'] :: TraceSummary -> Maybe Double

-- | A collection of FaultRootCause structures corresponding to the trace
--   segments.
[$sel:faultRootCauses:TraceSummary'] :: TraceSummary -> Maybe [FaultRootCause]

-- | The length of time in seconds between the start and end times of the
--   root segment. If the service performs work asynchronously, the
--   response time measures the time before the response is sent to the
--   user, while the duration measures the amount of time before the last
--   traced activity completes.
[$sel:responseTime:TraceSummary'] :: TraceSummary -> Maybe Double

-- | Create a value of <a>TraceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:annotations:TraceSummary'</a>, <a>traceSummary_annotations</a>
--   - Annotations from the trace's segment documents.
--   
--   <a>$sel:hasThrottle:TraceSummary'</a>, <a>traceSummary_hasThrottle</a>
--   - One or more of the segment documents has a 429 throttling error.
--   
--   <a>$sel:users:TraceSummary'</a>, <a>traceSummary_users</a> - Users
--   from the trace's segment documents.
--   
--   <a>$sel:entryPoint:TraceSummary'</a>, <a>traceSummary_entryPoint</a> -
--   The root of a trace.
--   
--   <a>$sel:hasFault:TraceSummary'</a>, <a>traceSummary_hasFault</a> - The
--   root segment document has a 500 series error.
--   
--   <a>$sel:serviceIds:TraceSummary'</a>, <a>traceSummary_serviceIds</a> -
--   Service IDs from the trace's segment documents.
--   
--   <a>$sel:matchedEventTime:TraceSummary'</a>,
--   <a>traceSummary_matchedEventTime</a> - The matched time stamp of a
--   defined event.
--   
--   <a>$sel:isPartial:TraceSummary'</a>, <a>traceSummary_isPartial</a> -
--   One or more of the segment documents is in progress.
--   
--   <a>$sel:errorRootCauses:TraceSummary'</a>,
--   <a>traceSummary_errorRootCauses</a> - A collection of ErrorRootCause
--   structures corresponding to the trace segments.
--   
--   <a>$sel:resourceARNs:TraceSummary'</a>,
--   <a>traceSummary_resourceARNs</a> - A list of resource ARNs for any
--   resource corresponding to the trace segments.
--   
--   <a>$sel:availabilityZones:TraceSummary'</a>,
--   <a>traceSummary_availabilityZones</a> - A list of Availability Zones
--   for any zone corresponding to the trace segments.
--   
--   <a>$sel:instanceIds:TraceSummary'</a>, <a>traceSummary_instanceIds</a>
--   - A list of EC2 instance IDs for any instance corresponding to the
--   trace segments.
--   
--   <a>$sel:responseTimeRootCauses:TraceSummary'</a>,
--   <a>traceSummary_responseTimeRootCauses</a> - A collection of
--   ResponseTimeRootCause structures corresponding to the trace segments.
--   
--   <a>$sel:hasError:TraceSummary'</a>, <a>traceSummary_hasError</a> - The
--   root segment document has a 400 series error.
--   
--   <a>$sel:id:TraceSummary'</a>, <a>traceSummary_id</a> - The unique
--   identifier for the request that generated the trace's segments and
--   subsegments.
--   
--   <a>$sel:http:TraceSummary'</a>, <a>traceSummary_http</a> - Information
--   about the HTTP request served by the trace.
--   
--   <a>$sel:revision:TraceSummary'</a>, <a>traceSummary_revision</a> - The
--   revision number of a trace.
--   
--   <a>$sel:duration:TraceSummary'</a>, <a>traceSummary_duration</a> - The
--   length of time in seconds between the start time of the root segment
--   and the end time of the last segment that completed.
--   
--   <a>$sel:faultRootCauses:TraceSummary'</a>,
--   <a>traceSummary_faultRootCauses</a> - A collection of FaultRootCause
--   structures corresponding to the trace segments.
--   
--   <a>$sel:responseTime:TraceSummary'</a>,
--   <a>traceSummary_responseTime</a> - The length of time in seconds
--   between the start and end times of the root segment. If the service
--   performs work asynchronously, the response time measures the time
--   before the response is sent to the user, while the duration measures
--   the amount of time before the last traced activity completes.
newTraceSummary :: TraceSummary

-- | Annotations from the trace's segment documents.
traceSummary_annotations :: Lens' TraceSummary (Maybe (HashMap Text [ValueWithServiceIds]))

-- | One or more of the segment documents has a 429 throttling error.
traceSummary_hasThrottle :: Lens' TraceSummary (Maybe Bool)

-- | Users from the trace's segment documents.
traceSummary_users :: Lens' TraceSummary (Maybe [TraceUser])

-- | The root of a trace.
traceSummary_entryPoint :: Lens' TraceSummary (Maybe ServiceId)

-- | The root segment document has a 500 series error.
traceSummary_hasFault :: Lens' TraceSummary (Maybe Bool)

-- | Service IDs from the trace's segment documents.
traceSummary_serviceIds :: Lens' TraceSummary (Maybe [ServiceId])

-- | The matched time stamp of a defined event.
traceSummary_matchedEventTime :: Lens' TraceSummary (Maybe UTCTime)

-- | One or more of the segment documents is in progress.
traceSummary_isPartial :: Lens' TraceSummary (Maybe Bool)

-- | A collection of ErrorRootCause structures corresponding to the trace
--   segments.
traceSummary_errorRootCauses :: Lens' TraceSummary (Maybe [ErrorRootCause])

-- | A list of resource ARNs for any resource corresponding to the trace
--   segments.
traceSummary_resourceARNs :: Lens' TraceSummary (Maybe [ResourceARNDetail])

-- | A list of Availability Zones for any zone corresponding to the trace
--   segments.
traceSummary_availabilityZones :: Lens' TraceSummary (Maybe [AvailabilityZoneDetail])

-- | A list of EC2 instance IDs for any instance corresponding to the trace
--   segments.
traceSummary_instanceIds :: Lens' TraceSummary (Maybe [InstanceIdDetail])

-- | A collection of ResponseTimeRootCause structures corresponding to the
--   trace segments.
traceSummary_responseTimeRootCauses :: Lens' TraceSummary (Maybe [ResponseTimeRootCause])

-- | The root segment document has a 400 series error.
traceSummary_hasError :: Lens' TraceSummary (Maybe Bool)

-- | The unique identifier for the request that generated the trace's
--   segments and subsegments.
traceSummary_id :: Lens' TraceSummary (Maybe Text)

-- | Information about the HTTP request served by the trace.
traceSummary_http :: Lens' TraceSummary (Maybe Http)

-- | The revision number of a trace.
traceSummary_revision :: Lens' TraceSummary (Maybe Int)

-- | The length of time in seconds between the start time of the root
--   segment and the end time of the last segment that completed.
traceSummary_duration :: Lens' TraceSummary (Maybe Double)

-- | A collection of FaultRootCause structures corresponding to the trace
--   segments.
traceSummary_faultRootCauses :: Lens' TraceSummary (Maybe [FaultRootCause])

-- | The length of time in seconds between the start and end times of the
--   root segment. If the service performs work asynchronously, the
--   response time measures the time before the response is sent to the
--   user, while the duration measures the amount of time before the last
--   traced activity completes.
traceSummary_responseTime :: Lens' TraceSummary (Maybe Double)

-- | Information about a user recorded in segment documents.
--   
--   <i>See:</i> <a>newTraceUser</a> smart constructor.
data TraceUser
TraceUser' :: Maybe [ServiceId] -> Maybe Text -> TraceUser

-- | Services that the user's request hit.
[$sel:serviceIds:TraceUser'] :: TraceUser -> Maybe [ServiceId]

-- | The user's name.
[$sel:userName:TraceUser'] :: TraceUser -> Maybe Text

-- | Create a value of <a>TraceUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceIds:TraceUser'</a>, <a>traceUser_serviceIds</a> -
--   Services that the user's request hit.
--   
--   <a>$sel:userName:TraceUser'</a>, <a>traceUser_userName</a> - The
--   user's name.
newTraceUser :: TraceUser

-- | Services that the user's request hit.
traceUser_serviceIds :: Lens' TraceUser (Maybe [ServiceId])

-- | The user's name.
traceUser_userName :: Lens' TraceUser (Maybe Text)

-- | Sampling statistics from a call to <a>GetSamplingTargets</a> that
--   X-Ray could not process.
--   
--   <i>See:</i> <a>newUnprocessedStatistics</a> smart constructor.
data UnprocessedStatistics
UnprocessedStatistics' :: Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedStatistics

-- | The name of the sampling rule.
[$sel:ruleName:UnprocessedStatistics'] :: UnprocessedStatistics -> Maybe Text

-- | The error code.
[$sel:errorCode:UnprocessedStatistics'] :: UnprocessedStatistics -> Maybe Text

-- | The error message.
[$sel:message:UnprocessedStatistics'] :: UnprocessedStatistics -> Maybe Text

-- | Create a value of <a>UnprocessedStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleName:UnprocessedStatistics'</a>,
--   <a>unprocessedStatistics_ruleName</a> - The name of the sampling rule.
--   
--   <a>$sel:errorCode:UnprocessedStatistics'</a>,
--   <a>unprocessedStatistics_errorCode</a> - The error code.
--   
--   <a>$sel:message:UnprocessedStatistics'</a>,
--   <a>unprocessedStatistics_message</a> - The error message.
newUnprocessedStatistics :: UnprocessedStatistics

-- | The name of the sampling rule.
unprocessedStatistics_ruleName :: Lens' UnprocessedStatistics (Maybe Text)

-- | The error code.
unprocessedStatistics_errorCode :: Lens' UnprocessedStatistics (Maybe Text)

-- | The error message.
unprocessedStatistics_message :: Lens' UnprocessedStatistics (Maybe Text)

-- | Information about a segment that failed processing.
--   
--   <i>See:</i> <a>newUnprocessedTraceSegment</a> smart constructor.
data UnprocessedTraceSegment
UnprocessedTraceSegment' :: Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedTraceSegment

-- | The error that caused processing to fail.
[$sel:errorCode:UnprocessedTraceSegment'] :: UnprocessedTraceSegment -> Maybe Text

-- | The segment's ID.
[$sel:id:UnprocessedTraceSegment'] :: UnprocessedTraceSegment -> Maybe Text

-- | The error message.
[$sel:message:UnprocessedTraceSegment'] :: UnprocessedTraceSegment -> Maybe Text

-- | Create a value of <a>UnprocessedTraceSegment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:UnprocessedTraceSegment'</a>,
--   <a>unprocessedTraceSegment_errorCode</a> - The error that caused
--   processing to fail.
--   
--   <a>$sel:id:UnprocessedTraceSegment'</a>,
--   <a>unprocessedTraceSegment_id</a> - The segment's ID.
--   
--   <a>$sel:message:UnprocessedTraceSegment'</a>,
--   <a>unprocessedTraceSegment_message</a> - The error message.
newUnprocessedTraceSegment :: UnprocessedTraceSegment

-- | The error that caused processing to fail.
unprocessedTraceSegment_errorCode :: Lens' UnprocessedTraceSegment (Maybe Text)

-- | The segment's ID.
unprocessedTraceSegment_id :: Lens' UnprocessedTraceSegment (Maybe Text)

-- | The error message.
unprocessedTraceSegment_message :: Lens' UnprocessedTraceSegment (Maybe Text)

-- | Information about a segment annotation.
--   
--   <i>See:</i> <a>newValueWithServiceIds</a> smart constructor.
data ValueWithServiceIds
ValueWithServiceIds' :: Maybe [ServiceId] -> Maybe AnnotationValue -> ValueWithServiceIds

-- | Services to which the annotation applies.
[$sel:serviceIds:ValueWithServiceIds'] :: ValueWithServiceIds -> Maybe [ServiceId]

-- | Values of the annotation.
[$sel:annotationValue:ValueWithServiceIds'] :: ValueWithServiceIds -> Maybe AnnotationValue

-- | Create a value of <a>ValueWithServiceIds</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceIds:ValueWithServiceIds'</a>,
--   <a>valueWithServiceIds_serviceIds</a> - Services to which the
--   annotation applies.
--   
--   <a>$sel:annotationValue:ValueWithServiceIds'</a>,
--   <a>valueWithServiceIds_annotationValue</a> - Values of the annotation.
newValueWithServiceIds :: ValueWithServiceIds

-- | Services to which the annotation applies.
valueWithServiceIds_serviceIds :: Lens' ValueWithServiceIds (Maybe [ServiceId])

-- | Values of the annotation.
valueWithServiceIds_annotationValue :: Lens' ValueWithServiceIds (Maybe AnnotationValue)


-- | Applies tags to an existing Amazon Web Services X-Ray group or
--   sampling rule.
module Amazonka.XRay.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Number (ARN) of an X-Ray group or sampling rule.
[$sel:resourceARN:TagResource'] :: TagResource -> Text

-- | A map that contains one or more tag keys and tag values to attach to
--   an X-Ray group or sampling rule. For more information about ways to
--   use tags, see <a>Tagging Amazon Web Services resources</a> in the
--   <i>Amazon Web Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use. You cannot edit or delete system tags.</li>
--   </ul>
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The Amazon Resource Number (ARN) of an X-Ray group or sampling rule.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A map that
--   contains one or more tag keys and tag values to attach to an X-Ray
--   group or sampling rule. For more information about ways to use tags,
--   see <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use. You cannot edit or delete system tags.</li>
--   </ul>
newTagResource :: Text -> TagResource

-- | The Amazon Resource Number (ARN) of an X-Ray group or sampling rule.
tagResource_resourceARN :: Lens' TagResource Text

-- | A map that contains one or more tag keys and tag values to attach to
--   an X-Ray group or sampling rule. For more information about ways to
--   use tags, see <a>Tagging Amazon Web Services resources</a> in the
--   <i>Amazon Web Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use. You cannot edit or delete system tags.</li>
--   </ul>
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.XRay.TagResource.TagResource
instance GHC.Show.Show Amazonka.XRay.TagResource.TagResource
instance GHC.Read.Read Amazonka.XRay.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.XRay.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.XRay.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.XRay.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.XRay.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.XRay.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.XRay.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.XRay.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.XRay.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.TagResource.TagResource


-- | Uploads segment documents to Amazon Web Services X-Ray. The <a>X-Ray
--   SDK</a> generates segment documents and sends them to the X-Ray
--   daemon, which uploads them in batches. A segment document can be a
--   completed segment, an in-progress segment, or an array of subsegments.
--   
--   Segments must include the following fields. For the full segment
--   document schema, see <a>Amazon Web Services X-Ray Segment
--   Documents</a> in the <i>Amazon Web Services X-Ray Developer Guide</i>.
--   
--   <b>Required segment document fields</b>
--   
--   <ul>
--   <li><tt>name</tt> - The name of the service that handled the
--   request.</li>
--   <li><tt>id</tt> - A 64-bit identifier for the segment, unique among
--   segments in the same trace, in 16 hexadecimal digits.</li>
--   <li><tt>trace_id</tt> - A unique identifier that connects all segments
--   and subsegments originating from a single client request.</li>
--   <li><tt>start_time</tt> - Time the segment or subsegment was created,
--   in floating point seconds in epoch time, accurate to milliseconds. For
--   example, <tt>1480615200.010</tt> or <tt>1.480615200010E9</tt>.</li>
--   <li><tt>end_time</tt> - Time the segment or subsegment was closed. For
--   example, <tt>1480615200.090</tt> or <tt>1.480615200090E9</tt>. Specify
--   either an <tt>end_time</tt> or <tt>in_progress</tt>.</li>
--   <li><tt>in_progress</tt> - Set to <tt>true</tt> instead of specifying
--   an <tt>end_time</tt> to record that a segment has been started, but is
--   not complete. Send an in-progress segment when your application
--   receives a request that will take a long time to serve, to trace that
--   the request was received. When the response is sent, send the complete
--   segment to overwrite the in-progress segment.</li>
--   </ul>
--   
--   A <tt>trace_id</tt> consists of three numbers separated by hyphens.
--   For example, 1-58406520-a006649127e371903a2de979. This includes:
--   
--   <b>Trace ID Format</b>
--   
--   <ul>
--   <li>The version number, for instance, <tt>1</tt>.</li>
--   <li>The time of the original request, in Unix epoch time, in 8
--   hexadecimal digits. For example, 10:00AM December 2nd, 2016 PST in
--   epoch time is <tt>1480615200</tt> seconds, or <tt>58406520</tt> in
--   hexadecimal.</li>
--   <li>A 96-bit identifier for the trace, globally unique, in 24
--   hexadecimal digits.</li>
--   </ul>
module Amazonka.XRay.PutTraceSegments

-- | <i>See:</i> <a>newPutTraceSegments</a> smart constructor.
data PutTraceSegments
PutTraceSegments' :: [Text] -> PutTraceSegments

-- | A string containing a JSON document defining one or more segments or
--   subsegments.
[$sel:traceSegmentDocuments:PutTraceSegments'] :: PutTraceSegments -> [Text]

-- | Create a value of <a>PutTraceSegments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:traceSegmentDocuments:PutTraceSegments'</a>,
--   <a>putTraceSegments_traceSegmentDocuments</a> - A string containing a
--   JSON document defining one or more segments or subsegments.
newPutTraceSegments :: PutTraceSegments

-- | A string containing a JSON document defining one or more segments or
--   subsegments.
putTraceSegments_traceSegmentDocuments :: Lens' PutTraceSegments [Text]

-- | <i>See:</i> <a>newPutTraceSegmentsResponse</a> smart constructor.
data PutTraceSegmentsResponse
PutTraceSegmentsResponse' :: Maybe [UnprocessedTraceSegment] -> Int -> PutTraceSegmentsResponse

-- | Segments that failed processing.
[$sel:unprocessedTraceSegments:PutTraceSegmentsResponse'] :: PutTraceSegmentsResponse -> Maybe [UnprocessedTraceSegment]

-- | The response's http status code.
[$sel:httpStatus:PutTraceSegmentsResponse'] :: PutTraceSegmentsResponse -> Int

-- | Create a value of <a>PutTraceSegmentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedTraceSegments:PutTraceSegmentsResponse'</a>,
--   <a>putTraceSegmentsResponse_unprocessedTraceSegments</a> - Segments
--   that failed processing.
--   
--   <a>$sel:httpStatus:PutTraceSegmentsResponse'</a>,
--   <a>putTraceSegmentsResponse_httpStatus</a> - The response's http
--   status code.
newPutTraceSegmentsResponse :: Int -> PutTraceSegmentsResponse

-- | Segments that failed processing.
putTraceSegmentsResponse_unprocessedTraceSegments :: Lens' PutTraceSegmentsResponse (Maybe [UnprocessedTraceSegment])

-- | The response's http status code.
putTraceSegmentsResponse_httpStatus :: Lens' PutTraceSegmentsResponse Int
instance GHC.Generics.Generic Amazonka.XRay.PutTraceSegments.PutTraceSegments
instance GHC.Show.Show Amazonka.XRay.PutTraceSegments.PutTraceSegments
instance GHC.Read.Read Amazonka.XRay.PutTraceSegments.PutTraceSegments
instance GHC.Classes.Eq Amazonka.XRay.PutTraceSegments.PutTraceSegments
instance GHC.Generics.Generic Amazonka.XRay.PutTraceSegments.PutTraceSegmentsResponse
instance GHC.Show.Show Amazonka.XRay.PutTraceSegments.PutTraceSegmentsResponse
instance GHC.Read.Read Amazonka.XRay.PutTraceSegments.PutTraceSegmentsResponse
instance GHC.Classes.Eq Amazonka.XRay.PutTraceSegments.PutTraceSegmentsResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.PutTraceSegments.PutTraceSegments
instance Control.DeepSeq.NFData Amazonka.XRay.PutTraceSegments.PutTraceSegmentsResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.PutTraceSegments.PutTraceSegments
instance Control.DeepSeq.NFData Amazonka.XRay.PutTraceSegments.PutTraceSegments
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.PutTraceSegments.PutTraceSegments
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.PutTraceSegments.PutTraceSegments
instance Amazonka.Data.Path.ToPath Amazonka.XRay.PutTraceSegments.PutTraceSegments
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.PutTraceSegments.PutTraceSegments


-- | Used by the Amazon Web Services X-Ray daemon to upload telemetry.
module Amazonka.XRay.PutTelemetryRecords

-- | <i>See:</i> <a>newPutTelemetryRecords</a> smart constructor.
data PutTelemetryRecords
PutTelemetryRecords' :: Maybe Text -> Maybe Text -> Maybe Text -> [TelemetryRecord] -> PutTelemetryRecords
[$sel:hostname:PutTelemetryRecords'] :: PutTelemetryRecords -> Maybe Text
[$sel:eC2InstanceId:PutTelemetryRecords'] :: PutTelemetryRecords -> Maybe Text
[$sel:resourceARN:PutTelemetryRecords'] :: PutTelemetryRecords -> Maybe Text
[$sel:telemetryRecords:PutTelemetryRecords'] :: PutTelemetryRecords -> [TelemetryRecord]

-- | Create a value of <a>PutTelemetryRecords</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:PutTelemetryRecords'</a>,
--   <a>putTelemetryRecords_hostname</a> -
--   
--   <a>$sel:eC2InstanceId:PutTelemetryRecords'</a>,
--   <a>putTelemetryRecords_eC2InstanceId</a> -
--   
--   <a>$sel:resourceARN:PutTelemetryRecords'</a>,
--   <a>putTelemetryRecords_resourceARN</a> -
--   
--   <a>$sel:telemetryRecords:PutTelemetryRecords'</a>,
--   <a>putTelemetryRecords_telemetryRecords</a> -
newPutTelemetryRecords :: PutTelemetryRecords

putTelemetryRecords_hostname :: Lens' PutTelemetryRecords (Maybe Text)

putTelemetryRecords_eC2InstanceId :: Lens' PutTelemetryRecords (Maybe Text)

putTelemetryRecords_resourceARN :: Lens' PutTelemetryRecords (Maybe Text)

putTelemetryRecords_telemetryRecords :: Lens' PutTelemetryRecords [TelemetryRecord]

-- | <i>See:</i> <a>newPutTelemetryRecordsResponse</a> smart constructor.
data PutTelemetryRecordsResponse
PutTelemetryRecordsResponse' :: Int -> PutTelemetryRecordsResponse

-- | The response's http status code.
[$sel:httpStatus:PutTelemetryRecordsResponse'] :: PutTelemetryRecordsResponse -> Int

-- | Create a value of <a>PutTelemetryRecordsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutTelemetryRecordsResponse'</a>,
--   <a>putTelemetryRecordsResponse_httpStatus</a> - The response's http
--   status code.
newPutTelemetryRecordsResponse :: Int -> PutTelemetryRecordsResponse

-- | The response's http status code.
putTelemetryRecordsResponse_httpStatus :: Lens' PutTelemetryRecordsResponse Int
instance GHC.Generics.Generic Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecords
instance GHC.Show.Show Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecords
instance GHC.Read.Read Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecords
instance GHC.Classes.Eq Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecords
instance GHC.Generics.Generic Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecordsResponse
instance GHC.Show.Show Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecordsResponse
instance GHC.Read.Read Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecordsResponse
instance GHC.Classes.Eq Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecordsResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecords
instance Control.DeepSeq.NFData Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecordsResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecords
instance Control.DeepSeq.NFData Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecords
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecords
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecords
instance Amazonka.Data.Path.ToPath Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecords
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.PutTelemetryRecords.PutTelemetryRecords


-- | Updates the encryption configuration for X-Ray data.
module Amazonka.XRay.PutEncryptionConfig

-- | <i>See:</i> <a>newPutEncryptionConfig</a> smart constructor.
data PutEncryptionConfig
PutEncryptionConfig' :: Maybe Text -> EncryptionType -> PutEncryptionConfig

-- | An Amazon Web Services KMS key in one of the following formats:
--   
--   <ul>
--   <li><b>Alias</b> - The name of the key. For example,
--   <tt>alias/MyKey</tt>.</li>
--   <li><b>Key ID</b> - The KMS key ID of the key. For example,
--   <tt>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</tt>. Amazon Web Services
--   X-Ray does not support asymmetric KMS keys.</li>
--   <li><b>ARN</b> - The full Amazon Resource Name of the key ID or alias.
--   For example,
--   <tt>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</tt>.
--   Use this format to specify a key in a different account.</li>
--   </ul>
--   
--   Omit this key if you set <tt>Type</tt> to <tt>NONE</tt>.
[$sel:keyId:PutEncryptionConfig'] :: PutEncryptionConfig -> Maybe Text

-- | The type of encryption. Set to <tt>KMS</tt> to use your own key for
--   encryption. Set to <tt>NONE</tt> for default encryption.
[$sel:type':PutEncryptionConfig'] :: PutEncryptionConfig -> EncryptionType

-- | Create a value of <a>PutEncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyId:PutEncryptionConfig'</a>,
--   <a>putEncryptionConfig_keyId</a> - An Amazon Web Services KMS key in
--   one of the following formats:
--   
--   <ul>
--   <li><b>Alias</b> - The name of the key. For example,
--   <tt>alias/MyKey</tt>.</li>
--   <li><b>Key ID</b> - The KMS key ID of the key. For example,
--   <tt>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</tt>. Amazon Web Services
--   X-Ray does not support asymmetric KMS keys.</li>
--   <li><b>ARN</b> - The full Amazon Resource Name of the key ID or alias.
--   For example,
--   <tt>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</tt>.
--   Use this format to specify a key in a different account.</li>
--   </ul>
--   
--   Omit this key if you set <tt>Type</tt> to <tt>NONE</tt>.
--   
--   <a>$sel:type':PutEncryptionConfig'</a>,
--   <a>putEncryptionConfig_type</a> - The type of encryption. Set to
--   <tt>KMS</tt> to use your own key for encryption. Set to <tt>NONE</tt>
--   for default encryption.
newPutEncryptionConfig :: EncryptionType -> PutEncryptionConfig

-- | An Amazon Web Services KMS key in one of the following formats:
--   
--   <ul>
--   <li><b>Alias</b> - The name of the key. For example,
--   <tt>alias/MyKey</tt>.</li>
--   <li><b>Key ID</b> - The KMS key ID of the key. For example,
--   <tt>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</tt>. Amazon Web Services
--   X-Ray does not support asymmetric KMS keys.</li>
--   <li><b>ARN</b> - The full Amazon Resource Name of the key ID or alias.
--   For example,
--   <tt>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</tt>.
--   Use this format to specify a key in a different account.</li>
--   </ul>
--   
--   Omit this key if you set <tt>Type</tt> to <tt>NONE</tt>.
putEncryptionConfig_keyId :: Lens' PutEncryptionConfig (Maybe Text)

-- | The type of encryption. Set to <tt>KMS</tt> to use your own key for
--   encryption. Set to <tt>NONE</tt> for default encryption.
putEncryptionConfig_type :: Lens' PutEncryptionConfig EncryptionType

-- | <i>See:</i> <a>newPutEncryptionConfigResponse</a> smart constructor.
data PutEncryptionConfigResponse
PutEncryptionConfigResponse' :: Maybe EncryptionConfig -> Int -> PutEncryptionConfigResponse

-- | The new encryption configuration.
[$sel:encryptionConfig:PutEncryptionConfigResponse'] :: PutEncryptionConfigResponse -> Maybe EncryptionConfig

-- | The response's http status code.
[$sel:httpStatus:PutEncryptionConfigResponse'] :: PutEncryptionConfigResponse -> Int

-- | Create a value of <a>PutEncryptionConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionConfig:PutEncryptionConfigResponse'</a>,
--   <a>putEncryptionConfigResponse_encryptionConfig</a> - The new
--   encryption configuration.
--   
--   <a>$sel:httpStatus:PutEncryptionConfigResponse'</a>,
--   <a>putEncryptionConfigResponse_httpStatus</a> - The response's http
--   status code.
newPutEncryptionConfigResponse :: Int -> PutEncryptionConfigResponse

-- | The new encryption configuration.
putEncryptionConfigResponse_encryptionConfig :: Lens' PutEncryptionConfigResponse (Maybe EncryptionConfig)

-- | The response's http status code.
putEncryptionConfigResponse_httpStatus :: Lens' PutEncryptionConfigResponse Int
instance GHC.Generics.Generic Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfig
instance GHC.Show.Show Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfig
instance GHC.Read.Read Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfig
instance GHC.Classes.Eq Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfig
instance GHC.Generics.Generic Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfigResponse
instance GHC.Show.Show Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfigResponse
instance GHC.Read.Read Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfigResponse
instance GHC.Classes.Eq Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfig
instance Control.DeepSeq.NFData Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfig
instance Control.DeepSeq.NFData Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfig
instance Amazonka.Data.Path.ToPath Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfig
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.PutEncryptionConfig.PutEncryptionConfig


-- | Returns a list of tags that are applied to the specified Amazon Web
--   Services X-Ray group or sampling rule.
module Amazonka.XRay.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Text -> ListTagsForResource

-- | A pagination token. If multiple pages of results are returned, use the
--   <tt>NextToken</tt> value returned with the current page of results as
--   the value of this parameter to get the next page of results.
[$sel:nextToken:ListTagsForResource'] :: ListTagsForResource -> Maybe Text

-- | The Amazon Resource Number (ARN) of an X-Ray group or sampling rule.
[$sel:resourceARN:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - A pagination token. If multiple
--   pages of results are returned, use the <tt>NextToken</tt> value
--   returned with the current page of results as the value of this
--   parameter to get the next page of results.
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The Amazon Resource Number
--   (ARN) of an X-Ray group or sampling rule.
newListTagsForResource :: Text -> ListTagsForResource

-- | A pagination token. If multiple pages of results are returned, use the
--   <tt>NextToken</tt> value returned with the current page of results as
--   the value of this parameter to get the next page of results.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The Amazon Resource Number (ARN) of an X-Ray group or sampling rule.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | A pagination token. If multiple pages of results are returned, use the
--   <tt>NextToken</tt> value returned with the current page of results to
--   get the next page of results.
[$sel:nextToken:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | A list of tags, as key and value pairs, that is associated with the
--   specified X-Ray group or sampling rule.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - A pagination token. If
--   multiple pages of results are returned, use the <tt>NextToken</tt>
--   value returned with the current page of results to get the next page
--   of results.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tags, as key and
--   value pairs, that is associated with the specified X-Ray group or
--   sampling rule.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A pagination token. If multiple pages of results are returned, use the
--   <tt>NextToken</tt> value returned with the current page of results to
--   get the next page of results.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | A list of tags, as key and value pairs, that is associated with the
--   specified X-Ray group or sampling rule.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.XRay.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.XRay.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.XRay.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.XRay.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.XRay.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.XRay.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.XRay.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.XRay.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.XRay.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.XRay.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.XRay.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.ListTagsForResource.ListTagsForResource


-- | Retrieves IDs and annotations for traces available for a specified
--   time frame using an optional filter. To get the full traces, pass the
--   trace IDs to <tt>BatchGetTraces</tt>.
--   
--   A filter expression can target traced requests that hit specific
--   service nodes or edges, have errors, or come from a known user. For
--   example, the following filter expression targets traces that pass
--   through <tt>api.example.com</tt>:
--   
--   <pre>
--   service("api.example.com")
--   </pre>
--   
--   This filter expression finds traces that have an annotation named
--   <tt>account</tt> with the value <tt>12345</tt>:
--   
--   <pre>
--   annotation.account = "12345"
--   </pre>
--   
--   For a full list of indexed fields and keywords that you can use in
--   filter expressions, see <a>Using Filter Expressions</a> in the
--   <i>Amazon Web Services X-Ray Developer Guide</i>.
--   
--   This operation returns paginated results.
module Amazonka.XRay.GetTraceSummaries

-- | <i>See:</i> <a>newGetTraceSummaries</a> smart constructor.
data GetTraceSummaries
GetTraceSummaries' :: Maybe Text -> Maybe Text -> Maybe TimeRangeType -> Maybe SamplingStrategy -> Maybe Bool -> POSIX -> POSIX -> GetTraceSummaries

-- | Specify a filter expression to retrieve trace summaries for services
--   or requests that meet certain requirements.
[$sel:filterExpression:GetTraceSummaries'] :: GetTraceSummaries -> Maybe Text

-- | Specify the pagination token returned by a previous request to
--   retrieve the next page of results.
[$sel:nextToken:GetTraceSummaries'] :: GetTraceSummaries -> Maybe Text

-- | A parameter to indicate whether to query trace summaries by TraceId or
--   Event time.
[$sel:timeRangeType:GetTraceSummaries'] :: GetTraceSummaries -> Maybe TimeRangeType

-- | A parameter to indicate whether to enable sampling on trace summaries.
--   Input parameters are Name and Value.
[$sel:samplingStrategy:GetTraceSummaries'] :: GetTraceSummaries -> Maybe SamplingStrategy

-- | Set to <tt>true</tt> to get summaries for only a subset of available
--   traces.
[$sel:sampling:GetTraceSummaries'] :: GetTraceSummaries -> Maybe Bool

-- | The start of the time frame for which to retrieve traces.
[$sel:startTime:GetTraceSummaries'] :: GetTraceSummaries -> POSIX

-- | The end of the time frame for which to retrieve traces.
[$sel:endTime:GetTraceSummaries'] :: GetTraceSummaries -> POSIX

-- | Create a value of <a>GetTraceSummaries</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterExpression:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_filterExpression</a> - Specify a filter
--   expression to retrieve trace summaries for services or requests that
--   meet certain requirements.
--   
--   <a>$sel:nextToken:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_nextToken</a> - Specify the pagination token
--   returned by a previous request to retrieve the next page of results.
--   
--   <a>$sel:timeRangeType:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_timeRangeType</a> - A parameter to indicate
--   whether to query trace summaries by TraceId or Event time.
--   
--   <a>$sel:samplingStrategy:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_samplingStrategy</a> - A parameter to indicate
--   whether to enable sampling on trace summaries. Input parameters are
--   Name and Value.
--   
--   <a>$sel:sampling:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_sampling</a> - Set to <tt>true</tt> to get
--   summaries for only a subset of available traces.
--   
--   <a>$sel:startTime:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_startTime</a> - The start of the time frame for
--   which to retrieve traces.
--   
--   <a>$sel:endTime:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_endTime</a> - The end of the time frame for which
--   to retrieve traces.
newGetTraceSummaries :: UTCTime -> UTCTime -> GetTraceSummaries

-- | Specify a filter expression to retrieve trace summaries for services
--   or requests that meet certain requirements.
getTraceSummaries_filterExpression :: Lens' GetTraceSummaries (Maybe Text)

-- | Specify the pagination token returned by a previous request to
--   retrieve the next page of results.
getTraceSummaries_nextToken :: Lens' GetTraceSummaries (Maybe Text)

-- | A parameter to indicate whether to query trace summaries by TraceId or
--   Event time.
getTraceSummaries_timeRangeType :: Lens' GetTraceSummaries (Maybe TimeRangeType)

-- | A parameter to indicate whether to enable sampling on trace summaries.
--   Input parameters are Name and Value.
getTraceSummaries_samplingStrategy :: Lens' GetTraceSummaries (Maybe SamplingStrategy)

-- | Set to <tt>true</tt> to get summaries for only a subset of available
--   traces.
getTraceSummaries_sampling :: Lens' GetTraceSummaries (Maybe Bool)

-- | The start of the time frame for which to retrieve traces.
getTraceSummaries_startTime :: Lens' GetTraceSummaries UTCTime

-- | The end of the time frame for which to retrieve traces.
getTraceSummaries_endTime :: Lens' GetTraceSummaries UTCTime

-- | <i>See:</i> <a>newGetTraceSummariesResponse</a> smart constructor.
data GetTraceSummariesResponse
GetTraceSummariesResponse' :: Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe [TraceSummary] -> Int -> GetTraceSummariesResponse

-- | The total number of traces processed, including traces that did not
--   match the specified filter expression.
[$sel:tracesProcessedCount:GetTraceSummariesResponse'] :: GetTraceSummariesResponse -> Maybe Integer

-- | If the requested time frame contained more than one page of results,
--   you can use this token to retrieve the next page. The first page
--   contains the most recent results, closest to the end of the time
--   frame.
[$sel:nextToken:GetTraceSummariesResponse'] :: GetTraceSummariesResponse -> Maybe Text

-- | The start time of this page of results.
[$sel:approximateTime:GetTraceSummariesResponse'] :: GetTraceSummariesResponse -> Maybe POSIX

-- | Trace IDs and annotations for traces that were found in the specified
--   time frame.
[$sel:traceSummaries:GetTraceSummariesResponse'] :: GetTraceSummariesResponse -> Maybe [TraceSummary]

-- | The response's http status code.
[$sel:httpStatus:GetTraceSummariesResponse'] :: GetTraceSummariesResponse -> Int

-- | Create a value of <a>GetTraceSummariesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tracesProcessedCount:GetTraceSummariesResponse'</a>,
--   <a>getTraceSummariesResponse_tracesProcessedCount</a> - The total
--   number of traces processed, including traces that did not match the
--   specified filter expression.
--   
--   <a>$sel:nextToken:GetTraceSummaries'</a>,
--   <a>getTraceSummariesResponse_nextToken</a> - If the requested time
--   frame contained more than one page of results, you can use this token
--   to retrieve the next page. The first page contains the most recent
--   results, closest to the end of the time frame.
--   
--   <a>$sel:approximateTime:GetTraceSummariesResponse'</a>,
--   <a>getTraceSummariesResponse_approximateTime</a> - The start time of
--   this page of results.
--   
--   <a>$sel:traceSummaries:GetTraceSummariesResponse'</a>,
--   <a>getTraceSummariesResponse_traceSummaries</a> - Trace IDs and
--   annotations for traces that were found in the specified time frame.
--   
--   <a>$sel:httpStatus:GetTraceSummariesResponse'</a>,
--   <a>getTraceSummariesResponse_httpStatus</a> - The response's http
--   status code.
newGetTraceSummariesResponse :: Int -> GetTraceSummariesResponse

-- | The total number of traces processed, including traces that did not
--   match the specified filter expression.
getTraceSummariesResponse_tracesProcessedCount :: Lens' GetTraceSummariesResponse (Maybe Integer)

-- | If the requested time frame contained more than one page of results,
--   you can use this token to retrieve the next page. The first page
--   contains the most recent results, closest to the end of the time
--   frame.
getTraceSummariesResponse_nextToken :: Lens' GetTraceSummariesResponse (Maybe Text)

-- | The start time of this page of results.
getTraceSummariesResponse_approximateTime :: Lens' GetTraceSummariesResponse (Maybe UTCTime)

-- | Trace IDs and annotations for traces that were found in the specified
--   time frame.
getTraceSummariesResponse_traceSummaries :: Lens' GetTraceSummariesResponse (Maybe [TraceSummary])

-- | The response's http status code.
getTraceSummariesResponse_httpStatus :: Lens' GetTraceSummariesResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetTraceSummaries.GetTraceSummaries
instance GHC.Show.Show Amazonka.XRay.GetTraceSummaries.GetTraceSummaries
instance GHC.Read.Read Amazonka.XRay.GetTraceSummaries.GetTraceSummaries
instance GHC.Classes.Eq Amazonka.XRay.GetTraceSummaries.GetTraceSummaries
instance GHC.Generics.Generic Amazonka.XRay.GetTraceSummaries.GetTraceSummariesResponse
instance GHC.Show.Show Amazonka.XRay.GetTraceSummaries.GetTraceSummariesResponse
instance GHC.Read.Read Amazonka.XRay.GetTraceSummaries.GetTraceSummariesResponse
instance GHC.Classes.Eq Amazonka.XRay.GetTraceSummaries.GetTraceSummariesResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetTraceSummaries.GetTraceSummaries
instance Control.DeepSeq.NFData Amazonka.XRay.GetTraceSummaries.GetTraceSummariesResponse
instance Amazonka.Pager.AWSPager Amazonka.XRay.GetTraceSummaries.GetTraceSummaries
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetTraceSummaries.GetTraceSummaries
instance Control.DeepSeq.NFData Amazonka.XRay.GetTraceSummaries.GetTraceSummaries
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetTraceSummaries.GetTraceSummaries
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetTraceSummaries.GetTraceSummaries
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetTraceSummaries.GetTraceSummaries
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetTraceSummaries.GetTraceSummaries


-- | Retrieves a service graph for one or more specific trace IDs.
--   
--   This operation returns paginated results.
module Amazonka.XRay.GetTraceGraph

-- | <i>See:</i> <a>newGetTraceGraph</a> smart constructor.
data GetTraceGraph
GetTraceGraph' :: Maybe Text -> [Text] -> GetTraceGraph

-- | Pagination token.
[$sel:nextToken:GetTraceGraph'] :: GetTraceGraph -> Maybe Text

-- | Trace IDs of requests for which to generate a service graph.
[$sel:traceIds:GetTraceGraph'] :: GetTraceGraph -> [Text]

-- | Create a value of <a>GetTraceGraph</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetTraceGraph'</a>, <a>getTraceGraph_nextToken</a> -
--   Pagination token.
--   
--   <a>$sel:traceIds:GetTraceGraph'</a>, <a>getTraceGraph_traceIds</a> -
--   Trace IDs of requests for which to generate a service graph.
newGetTraceGraph :: GetTraceGraph

-- | Pagination token.
getTraceGraph_nextToken :: Lens' GetTraceGraph (Maybe Text)

-- | Trace IDs of requests for which to generate a service graph.
getTraceGraph_traceIds :: Lens' GetTraceGraph [Text]

-- | <i>See:</i> <a>newGetTraceGraphResponse</a> smart constructor.
data GetTraceGraphResponse
GetTraceGraphResponse' :: Maybe Text -> Maybe [ServiceInfo] -> Int -> GetTraceGraphResponse

-- | Pagination token.
[$sel:nextToken:GetTraceGraphResponse'] :: GetTraceGraphResponse -> Maybe Text

-- | The services that have processed one of the specified requests.
[$sel:services:GetTraceGraphResponse'] :: GetTraceGraphResponse -> Maybe [ServiceInfo]

-- | The response's http status code.
[$sel:httpStatus:GetTraceGraphResponse'] :: GetTraceGraphResponse -> Int

-- | Create a value of <a>GetTraceGraphResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetTraceGraph'</a>,
--   <a>getTraceGraphResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:services:GetTraceGraphResponse'</a>,
--   <a>getTraceGraphResponse_services</a> - The services that have
--   processed one of the specified requests.
--   
--   <a>$sel:httpStatus:GetTraceGraphResponse'</a>,
--   <a>getTraceGraphResponse_httpStatus</a> - The response's http status
--   code.
newGetTraceGraphResponse :: Int -> GetTraceGraphResponse

-- | Pagination token.
getTraceGraphResponse_nextToken :: Lens' GetTraceGraphResponse (Maybe Text)

-- | The services that have processed one of the specified requests.
getTraceGraphResponse_services :: Lens' GetTraceGraphResponse (Maybe [ServiceInfo])

-- | The response's http status code.
getTraceGraphResponse_httpStatus :: Lens' GetTraceGraphResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetTraceGraph.GetTraceGraph
instance GHC.Show.Show Amazonka.XRay.GetTraceGraph.GetTraceGraph
instance GHC.Read.Read Amazonka.XRay.GetTraceGraph.GetTraceGraph
instance GHC.Classes.Eq Amazonka.XRay.GetTraceGraph.GetTraceGraph
instance GHC.Generics.Generic Amazonka.XRay.GetTraceGraph.GetTraceGraphResponse
instance GHC.Show.Show Amazonka.XRay.GetTraceGraph.GetTraceGraphResponse
instance GHC.Read.Read Amazonka.XRay.GetTraceGraph.GetTraceGraphResponse
instance GHC.Classes.Eq Amazonka.XRay.GetTraceGraph.GetTraceGraphResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetTraceGraph.GetTraceGraph
instance Control.DeepSeq.NFData Amazonka.XRay.GetTraceGraph.GetTraceGraphResponse
instance Amazonka.Pager.AWSPager Amazonka.XRay.GetTraceGraph.GetTraceGraph
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetTraceGraph.GetTraceGraph
instance Control.DeepSeq.NFData Amazonka.XRay.GetTraceGraph.GetTraceGraph
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetTraceGraph.GetTraceGraph
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetTraceGraph.GetTraceGraph
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetTraceGraph.GetTraceGraph
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetTraceGraph.GetTraceGraph


-- | Get an aggregation of service statistics defined by a specific time
--   range.
--   
--   This operation returns paginated results.
module Amazonka.XRay.GetTimeSeriesServiceStatistics

-- | <i>See:</i> <a>newGetTimeSeriesServiceStatistics</a> smart
--   constructor.
data GetTimeSeriesServiceStatistics
GetTimeSeriesServiceStatistics' :: Maybe Text -> Maybe Int -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> POSIX -> POSIX -> GetTimeSeriesServiceStatistics

-- | A filter expression defining entities that will be aggregated for
--   statistics. Supports ID, service, and edge functions. If no selector
--   expression is specified, edge statistics are returned.
[$sel:entitySelectorExpression:GetTimeSeriesServiceStatistics'] :: GetTimeSeriesServiceStatistics -> Maybe Text

-- | Aggregation period in seconds.
[$sel:period:GetTimeSeriesServiceStatistics'] :: GetTimeSeriesServiceStatistics -> Maybe Int

-- | The forecasted high and low fault count values. Forecast enabled
--   requests require the EntitySelectorExpression ID be provided.
[$sel:forecastStatistics:GetTimeSeriesServiceStatistics'] :: GetTimeSeriesServiceStatistics -> Maybe Bool

-- | Pagination token.
[$sel:nextToken:GetTimeSeriesServiceStatistics'] :: GetTimeSeriesServiceStatistics -> Maybe Text

-- | The Amazon Resource Name (ARN) of the group for which to pull
--   statistics from.
[$sel:groupARN:GetTimeSeriesServiceStatistics'] :: GetTimeSeriesServiceStatistics -> Maybe Text

-- | The case-sensitive name of the group for which to pull statistics
--   from.
[$sel:groupName:GetTimeSeriesServiceStatistics'] :: GetTimeSeriesServiceStatistics -> Maybe Text

-- | The start of the time frame for which to aggregate statistics.
[$sel:startTime:GetTimeSeriesServiceStatistics'] :: GetTimeSeriesServiceStatistics -> POSIX

-- | The end of the time frame for which to aggregate statistics.
[$sel:endTime:GetTimeSeriesServiceStatistics'] :: GetTimeSeriesServiceStatistics -> POSIX

-- | Create a value of <a>GetTimeSeriesServiceStatistics</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitySelectorExpression:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_entitySelectorExpression</a> - A
--   filter expression defining entities that will be aggregated for
--   statistics. Supports ID, service, and edge functions. If no selector
--   expression is specified, edge statistics are returned.
--   
--   <a>$sel:period:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_period</a> - Aggregation period in
--   seconds.
--   
--   <a>$sel:forecastStatistics:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_forecastStatistics</a> - The
--   forecasted high and low fault count values. Forecast enabled requests
--   require the EntitySelectorExpression ID be provided.
--   
--   <a>$sel:nextToken:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_nextToken</a> - Pagination token.
--   
--   <a>$sel:groupARN:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_groupARN</a> - The Amazon Resource
--   Name (ARN) of the group for which to pull statistics from.
--   
--   <a>$sel:groupName:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_groupName</a> - The case-sensitive
--   name of the group for which to pull statistics from.
--   
--   <a>$sel:startTime:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_startTime</a> - The start of the
--   time frame for which to aggregate statistics.
--   
--   <a>$sel:endTime:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_endTime</a> - The end of the time
--   frame for which to aggregate statistics.
newGetTimeSeriesServiceStatistics :: UTCTime -> UTCTime -> GetTimeSeriesServiceStatistics

-- | A filter expression defining entities that will be aggregated for
--   statistics. Supports ID, service, and edge functions. If no selector
--   expression is specified, edge statistics are returned.
getTimeSeriesServiceStatistics_entitySelectorExpression :: Lens' GetTimeSeriesServiceStatistics (Maybe Text)

-- | Aggregation period in seconds.
getTimeSeriesServiceStatistics_period :: Lens' GetTimeSeriesServiceStatistics (Maybe Int)

-- | The forecasted high and low fault count values. Forecast enabled
--   requests require the EntitySelectorExpression ID be provided.
getTimeSeriesServiceStatistics_forecastStatistics :: Lens' GetTimeSeriesServiceStatistics (Maybe Bool)

-- | Pagination token.
getTimeSeriesServiceStatistics_nextToken :: Lens' GetTimeSeriesServiceStatistics (Maybe Text)

-- | The Amazon Resource Name (ARN) of the group for which to pull
--   statistics from.
getTimeSeriesServiceStatistics_groupARN :: Lens' GetTimeSeriesServiceStatistics (Maybe Text)

-- | The case-sensitive name of the group for which to pull statistics
--   from.
getTimeSeriesServiceStatistics_groupName :: Lens' GetTimeSeriesServiceStatistics (Maybe Text)

-- | The start of the time frame for which to aggregate statistics.
getTimeSeriesServiceStatistics_startTime :: Lens' GetTimeSeriesServiceStatistics UTCTime

-- | The end of the time frame for which to aggregate statistics.
getTimeSeriesServiceStatistics_endTime :: Lens' GetTimeSeriesServiceStatistics UTCTime

-- | <i>See:</i> <a>newGetTimeSeriesServiceStatisticsResponse</a> smart
--   constructor.
data GetTimeSeriesServiceStatisticsResponse
GetTimeSeriesServiceStatisticsResponse' :: Maybe Bool -> Maybe [TimeSeriesServiceStatistics] -> Maybe Text -> Int -> GetTimeSeriesServiceStatisticsResponse

-- | A flag indicating whether or not a group's filter expression has been
--   consistent, or if a returned aggregation might show statistics from an
--   older version of the group's filter expression.
[$sel:containsOldGroupVersions:GetTimeSeriesServiceStatisticsResponse'] :: GetTimeSeriesServiceStatisticsResponse -> Maybe Bool

-- | The collection of statistics.
[$sel:timeSeriesServiceStatistics:GetTimeSeriesServiceStatisticsResponse'] :: GetTimeSeriesServiceStatisticsResponse -> Maybe [TimeSeriesServiceStatistics]

-- | Pagination token.
[$sel:nextToken:GetTimeSeriesServiceStatisticsResponse'] :: GetTimeSeriesServiceStatisticsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetTimeSeriesServiceStatisticsResponse'] :: GetTimeSeriesServiceStatisticsResponse -> Int

-- | Create a value of <a>GetTimeSeriesServiceStatisticsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:containsOldGroupVersions:GetTimeSeriesServiceStatisticsResponse'</a>,
--   <a>getTimeSeriesServiceStatisticsResponse_containsOldGroupVersions</a>
--   - A flag indicating whether or not a group's filter expression has
--   been consistent, or if a returned aggregation might show statistics
--   from an older version of the group's filter expression.
--   
--   
--   <a>$sel:timeSeriesServiceStatistics:GetTimeSeriesServiceStatisticsResponse'</a>,
--   <a>getTimeSeriesServiceStatisticsResponse_timeSeriesServiceStatistics</a>
--   - The collection of statistics.
--   
--   <a>$sel:nextToken:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatisticsResponse_nextToken</a> - Pagination
--   token.
--   
--   <a>$sel:httpStatus:GetTimeSeriesServiceStatisticsResponse'</a>,
--   <a>getTimeSeriesServiceStatisticsResponse_httpStatus</a> - The
--   response's http status code.
newGetTimeSeriesServiceStatisticsResponse :: Int -> GetTimeSeriesServiceStatisticsResponse

-- | A flag indicating whether or not a group's filter expression has been
--   consistent, or if a returned aggregation might show statistics from an
--   older version of the group's filter expression.
getTimeSeriesServiceStatisticsResponse_containsOldGroupVersions :: Lens' GetTimeSeriesServiceStatisticsResponse (Maybe Bool)

-- | The collection of statistics.
getTimeSeriesServiceStatisticsResponse_timeSeriesServiceStatistics :: Lens' GetTimeSeriesServiceStatisticsResponse (Maybe [TimeSeriesServiceStatistics])

-- | Pagination token.
getTimeSeriesServiceStatisticsResponse_nextToken :: Lens' GetTimeSeriesServiceStatisticsResponse (Maybe Text)

-- | The response's http status code.
getTimeSeriesServiceStatisticsResponse_httpStatus :: Lens' GetTimeSeriesServiceStatisticsResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatistics
instance GHC.Show.Show Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatistics
instance GHC.Read.Read Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatistics
instance GHC.Classes.Eq Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatistics
instance GHC.Generics.Generic Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatisticsResponse
instance GHC.Show.Show Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatisticsResponse
instance GHC.Read.Read Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatisticsResponse
instance GHC.Classes.Eq Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatisticsResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatistics
instance Control.DeepSeq.NFData Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatisticsResponse
instance Amazonka.Pager.AWSPager Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatistics
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatistics
instance Control.DeepSeq.NFData Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatistics
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatistics
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatistics
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatistics
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetTimeSeriesServiceStatistics.GetTimeSeriesServiceStatistics


-- | Retrieves a document that describes services that process incoming
--   requests, and downstream services that they call as a result. Root
--   services process incoming requests and make calls to downstream
--   services. Root services are applications that use the <a>Amazon Web
--   Services X-Ray SDK</a>. Downstream services can be other applications,
--   Amazon Web Services resources, HTTP web APIs, or SQL databases.
--   
--   This operation returns paginated results.
module Amazonka.XRay.GetServiceGraph

-- | <i>See:</i> <a>newGetServiceGraph</a> smart constructor.
data GetServiceGraph
GetServiceGraph' :: Maybe Text -> Maybe Text -> Maybe Text -> POSIX -> POSIX -> GetServiceGraph

-- | Pagination token.
[$sel:nextToken:GetServiceGraph'] :: GetServiceGraph -> Maybe Text

-- | The Amazon Resource Name (ARN) of a group based on which you want to
--   generate a graph.
[$sel:groupARN:GetServiceGraph'] :: GetServiceGraph -> Maybe Text

-- | The name of a group based on which you want to generate a graph.
[$sel:groupName:GetServiceGraph'] :: GetServiceGraph -> Maybe Text

-- | The start of the time frame for which to generate a graph.
[$sel:startTime:GetServiceGraph'] :: GetServiceGraph -> POSIX

-- | The end of the timeframe for which to generate a graph.
[$sel:endTime:GetServiceGraph'] :: GetServiceGraph -> POSIX

-- | Create a value of <a>GetServiceGraph</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetServiceGraph'</a>,
--   <a>getServiceGraph_nextToken</a> - Pagination token.
--   
--   <a>$sel:groupARN:GetServiceGraph'</a>, <a>getServiceGraph_groupARN</a>
--   - The Amazon Resource Name (ARN) of a group based on which you want to
--   generate a graph.
--   
--   <a>$sel:groupName:GetServiceGraph'</a>,
--   <a>getServiceGraph_groupName</a> - The name of a group based on which
--   you want to generate a graph.
--   
--   <a>$sel:startTime:GetServiceGraph'</a>,
--   <a>getServiceGraph_startTime</a> - The start of the time frame for
--   which to generate a graph.
--   
--   <a>$sel:endTime:GetServiceGraph'</a>, <a>getServiceGraph_endTime</a> -
--   The end of the timeframe for which to generate a graph.
newGetServiceGraph :: UTCTime -> UTCTime -> GetServiceGraph

-- | Pagination token.
getServiceGraph_nextToken :: Lens' GetServiceGraph (Maybe Text)

-- | The Amazon Resource Name (ARN) of a group based on which you want to
--   generate a graph.
getServiceGraph_groupARN :: Lens' GetServiceGraph (Maybe Text)

-- | The name of a group based on which you want to generate a graph.
getServiceGraph_groupName :: Lens' GetServiceGraph (Maybe Text)

-- | The start of the time frame for which to generate a graph.
getServiceGraph_startTime :: Lens' GetServiceGraph UTCTime

-- | The end of the timeframe for which to generate a graph.
getServiceGraph_endTime :: Lens' GetServiceGraph UTCTime

-- | <i>See:</i> <a>newGetServiceGraphResponse</a> smart constructor.
data GetServiceGraphResponse
GetServiceGraphResponse' :: Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe [ServiceInfo] -> Int -> GetServiceGraphResponse

-- | A flag indicating whether the group's filter expression has been
--   consistent, or if the returned service graph may show traces from an
--   older version of the group's filter expression.
[$sel:containsOldGroupVersions:GetServiceGraphResponse'] :: GetServiceGraphResponse -> Maybe Bool

-- | The start of the time frame for which the graph was generated.
[$sel:startTime:GetServiceGraphResponse'] :: GetServiceGraphResponse -> Maybe POSIX

-- | Pagination token.
[$sel:nextToken:GetServiceGraphResponse'] :: GetServiceGraphResponse -> Maybe Text

-- | The end of the time frame for which the graph was generated.
[$sel:endTime:GetServiceGraphResponse'] :: GetServiceGraphResponse -> Maybe POSIX

-- | The services that have processed a traced request during the specified
--   time frame.
[$sel:services:GetServiceGraphResponse'] :: GetServiceGraphResponse -> Maybe [ServiceInfo]

-- | The response's http status code.
[$sel:httpStatus:GetServiceGraphResponse'] :: GetServiceGraphResponse -> Int

-- | Create a value of <a>GetServiceGraphResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containsOldGroupVersions:GetServiceGraphResponse'</a>,
--   <a>getServiceGraphResponse_containsOldGroupVersions</a> - A flag
--   indicating whether the group's filter expression has been consistent,
--   or if the returned service graph may show traces from an older version
--   of the group's filter expression.
--   
--   <a>$sel:startTime:GetServiceGraph'</a>,
--   <a>getServiceGraphResponse_startTime</a> - The start of the time frame
--   for which the graph was generated.
--   
--   <a>$sel:nextToken:GetServiceGraph'</a>,
--   <a>getServiceGraphResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:endTime:GetServiceGraph'</a>,
--   <a>getServiceGraphResponse_endTime</a> - The end of the time frame for
--   which the graph was generated.
--   
--   <a>$sel:services:GetServiceGraphResponse'</a>,
--   <a>getServiceGraphResponse_services</a> - The services that have
--   processed a traced request during the specified time frame.
--   
--   <a>$sel:httpStatus:GetServiceGraphResponse'</a>,
--   <a>getServiceGraphResponse_httpStatus</a> - The response's http status
--   code.
newGetServiceGraphResponse :: Int -> GetServiceGraphResponse

-- | A flag indicating whether the group's filter expression has been
--   consistent, or if the returned service graph may show traces from an
--   older version of the group's filter expression.
getServiceGraphResponse_containsOldGroupVersions :: Lens' GetServiceGraphResponse (Maybe Bool)

-- | The start of the time frame for which the graph was generated.
getServiceGraphResponse_startTime :: Lens' GetServiceGraphResponse (Maybe UTCTime)

-- | Pagination token.
getServiceGraphResponse_nextToken :: Lens' GetServiceGraphResponse (Maybe Text)

-- | The end of the time frame for which the graph was generated.
getServiceGraphResponse_endTime :: Lens' GetServiceGraphResponse (Maybe UTCTime)

-- | The services that have processed a traced request during the specified
--   time frame.
getServiceGraphResponse_services :: Lens' GetServiceGraphResponse (Maybe [ServiceInfo])

-- | The response's http status code.
getServiceGraphResponse_httpStatus :: Lens' GetServiceGraphResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetServiceGraph.GetServiceGraph
instance GHC.Show.Show Amazonka.XRay.GetServiceGraph.GetServiceGraph
instance GHC.Read.Read Amazonka.XRay.GetServiceGraph.GetServiceGraph
instance GHC.Classes.Eq Amazonka.XRay.GetServiceGraph.GetServiceGraph
instance GHC.Generics.Generic Amazonka.XRay.GetServiceGraph.GetServiceGraphResponse
instance GHC.Show.Show Amazonka.XRay.GetServiceGraph.GetServiceGraphResponse
instance GHC.Read.Read Amazonka.XRay.GetServiceGraph.GetServiceGraphResponse
instance GHC.Classes.Eq Amazonka.XRay.GetServiceGraph.GetServiceGraphResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetServiceGraph.GetServiceGraph
instance Control.DeepSeq.NFData Amazonka.XRay.GetServiceGraph.GetServiceGraphResponse
instance Amazonka.Pager.AWSPager Amazonka.XRay.GetServiceGraph.GetServiceGraph
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetServiceGraph.GetServiceGraph
instance Control.DeepSeq.NFData Amazonka.XRay.GetServiceGraph.GetServiceGraph
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetServiceGraph.GetServiceGraph
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetServiceGraph.GetServiceGraph
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetServiceGraph.GetServiceGraph
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetServiceGraph.GetServiceGraph


-- | Requests a sampling quota for rules that the service is using to
--   sample requests.
module Amazonka.XRay.GetSamplingTargets

-- | <i>See:</i> <a>newGetSamplingTargets</a> smart constructor.
data GetSamplingTargets
GetSamplingTargets' :: [SamplingStatisticsDocument] -> GetSamplingTargets

-- | Information about rules that the service is using to sample requests.
[$sel:samplingStatisticsDocuments:GetSamplingTargets'] :: GetSamplingTargets -> [SamplingStatisticsDocument]

-- | Create a value of <a>GetSamplingTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:samplingStatisticsDocuments:GetSamplingTargets'</a>,
--   <a>getSamplingTargets_samplingStatisticsDocuments</a> - Information
--   about rules that the service is using to sample requests.
newGetSamplingTargets :: GetSamplingTargets

-- | Information about rules that the service is using to sample requests.
getSamplingTargets_samplingStatisticsDocuments :: Lens' GetSamplingTargets [SamplingStatisticsDocument]

-- | <i>See:</i> <a>newGetSamplingTargetsResponse</a> smart constructor.
data GetSamplingTargetsResponse
GetSamplingTargetsResponse' :: Maybe [UnprocessedStatistics] -> Maybe POSIX -> Maybe [SamplingTargetDocument] -> Int -> GetSamplingTargetsResponse

-- | Information about <a>SamplingStatisticsDocument</a> that X-Ray could
--   not process.
[$sel:unprocessedStatistics:GetSamplingTargetsResponse'] :: GetSamplingTargetsResponse -> Maybe [UnprocessedStatistics]

-- | The last time a user changed the sampling rule configuration. If the
--   sampling rule configuration changed since the service last retrieved
--   it, the service should call <a>GetSamplingRules</a> to get the latest
--   version.
[$sel:lastRuleModification:GetSamplingTargetsResponse'] :: GetSamplingTargetsResponse -> Maybe POSIX

-- | Updated rules that the service should use to sample requests.
[$sel:samplingTargetDocuments:GetSamplingTargetsResponse'] :: GetSamplingTargetsResponse -> Maybe [SamplingTargetDocument]

-- | The response's http status code.
[$sel:httpStatus:GetSamplingTargetsResponse'] :: GetSamplingTargetsResponse -> Int

-- | Create a value of <a>GetSamplingTargetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedStatistics:GetSamplingTargetsResponse'</a>,
--   <a>getSamplingTargetsResponse_unprocessedStatistics</a> - Information
--   about <a>SamplingStatisticsDocument</a> that X-Ray could not process.
--   
--   <a>$sel:lastRuleModification:GetSamplingTargetsResponse'</a>,
--   <a>getSamplingTargetsResponse_lastRuleModification</a> - The last time
--   a user changed the sampling rule configuration. If the sampling rule
--   configuration changed since the service last retrieved it, the service
--   should call <a>GetSamplingRules</a> to get the latest version.
--   
--   <a>$sel:samplingTargetDocuments:GetSamplingTargetsResponse'</a>,
--   <a>getSamplingTargetsResponse_samplingTargetDocuments</a> - Updated
--   rules that the service should use to sample requests.
--   
--   <a>$sel:httpStatus:GetSamplingTargetsResponse'</a>,
--   <a>getSamplingTargetsResponse_httpStatus</a> - The response's http
--   status code.
newGetSamplingTargetsResponse :: Int -> GetSamplingTargetsResponse

-- | Information about <a>SamplingStatisticsDocument</a> that X-Ray could
--   not process.
getSamplingTargetsResponse_unprocessedStatistics :: Lens' GetSamplingTargetsResponse (Maybe [UnprocessedStatistics])

-- | The last time a user changed the sampling rule configuration. If the
--   sampling rule configuration changed since the service last retrieved
--   it, the service should call <a>GetSamplingRules</a> to get the latest
--   version.
getSamplingTargetsResponse_lastRuleModification :: Lens' GetSamplingTargetsResponse (Maybe UTCTime)

-- | Updated rules that the service should use to sample requests.
getSamplingTargetsResponse_samplingTargetDocuments :: Lens' GetSamplingTargetsResponse (Maybe [SamplingTargetDocument])

-- | The response's http status code.
getSamplingTargetsResponse_httpStatus :: Lens' GetSamplingTargetsResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetSamplingTargets.GetSamplingTargets
instance GHC.Show.Show Amazonka.XRay.GetSamplingTargets.GetSamplingTargets
instance GHC.Read.Read Amazonka.XRay.GetSamplingTargets.GetSamplingTargets
instance GHC.Classes.Eq Amazonka.XRay.GetSamplingTargets.GetSamplingTargets
instance GHC.Generics.Generic Amazonka.XRay.GetSamplingTargets.GetSamplingTargetsResponse
instance GHC.Show.Show Amazonka.XRay.GetSamplingTargets.GetSamplingTargetsResponse
instance GHC.Read.Read Amazonka.XRay.GetSamplingTargets.GetSamplingTargetsResponse
instance GHC.Classes.Eq Amazonka.XRay.GetSamplingTargets.GetSamplingTargetsResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetSamplingTargets.GetSamplingTargets
instance Control.DeepSeq.NFData Amazonka.XRay.GetSamplingTargets.GetSamplingTargetsResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetSamplingTargets.GetSamplingTargets
instance Control.DeepSeq.NFData Amazonka.XRay.GetSamplingTargets.GetSamplingTargets
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetSamplingTargets.GetSamplingTargets
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetSamplingTargets.GetSamplingTargets
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetSamplingTargets.GetSamplingTargets
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetSamplingTargets.GetSamplingTargets


-- | Retrieves information about recent sampling results for all sampling
--   rules.
--   
--   This operation returns paginated results.
module Amazonka.XRay.GetSamplingStatisticSummaries

-- | <i>See:</i> <a>newGetSamplingStatisticSummaries</a> smart constructor.
data GetSamplingStatisticSummaries
GetSamplingStatisticSummaries' :: Maybe Text -> GetSamplingStatisticSummaries

-- | Pagination token.
[$sel:nextToken:GetSamplingStatisticSummaries'] :: GetSamplingStatisticSummaries -> Maybe Text

-- | Create a value of <a>GetSamplingStatisticSummaries</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetSamplingStatisticSummaries'</a>,
--   <a>getSamplingStatisticSummaries_nextToken</a> - Pagination token.
newGetSamplingStatisticSummaries :: GetSamplingStatisticSummaries

-- | Pagination token.
getSamplingStatisticSummaries_nextToken :: Lens' GetSamplingStatisticSummaries (Maybe Text)

-- | <i>See:</i> <a>newGetSamplingStatisticSummariesResponse</a> smart
--   constructor.
data GetSamplingStatisticSummariesResponse
GetSamplingStatisticSummariesResponse' :: Maybe [SamplingStatisticSummary] -> Maybe Text -> Int -> GetSamplingStatisticSummariesResponse

-- | Information about the number of requests instrumented for each
--   sampling rule.
[$sel:samplingStatisticSummaries:GetSamplingStatisticSummariesResponse'] :: GetSamplingStatisticSummariesResponse -> Maybe [SamplingStatisticSummary]

-- | Pagination token.
[$sel:nextToken:GetSamplingStatisticSummariesResponse'] :: GetSamplingStatisticSummariesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSamplingStatisticSummariesResponse'] :: GetSamplingStatisticSummariesResponse -> Int

-- | Create a value of <a>GetSamplingStatisticSummariesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:samplingStatisticSummaries:GetSamplingStatisticSummariesResponse'</a>,
--   <a>getSamplingStatisticSummariesResponse_samplingStatisticSummaries</a>
--   - Information about the number of requests instrumented for each
--   sampling rule.
--   
--   <a>$sel:nextToken:GetSamplingStatisticSummaries'</a>,
--   <a>getSamplingStatisticSummariesResponse_nextToken</a> - Pagination
--   token.
--   
--   <a>$sel:httpStatus:GetSamplingStatisticSummariesResponse'</a>,
--   <a>getSamplingStatisticSummariesResponse_httpStatus</a> - The
--   response's http status code.
newGetSamplingStatisticSummariesResponse :: Int -> GetSamplingStatisticSummariesResponse

-- | Information about the number of requests instrumented for each
--   sampling rule.
getSamplingStatisticSummariesResponse_samplingStatisticSummaries :: Lens' GetSamplingStatisticSummariesResponse (Maybe [SamplingStatisticSummary])

-- | Pagination token.
getSamplingStatisticSummariesResponse_nextToken :: Lens' GetSamplingStatisticSummariesResponse (Maybe Text)

-- | The response's http status code.
getSamplingStatisticSummariesResponse_httpStatus :: Lens' GetSamplingStatisticSummariesResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummaries
instance GHC.Show.Show Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummaries
instance GHC.Read.Read Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummaries
instance GHC.Classes.Eq Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummaries
instance GHC.Generics.Generic Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummariesResponse
instance GHC.Show.Show Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummariesResponse
instance GHC.Read.Read Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummariesResponse
instance GHC.Classes.Eq Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummariesResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummaries
instance Control.DeepSeq.NFData Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummariesResponse
instance Amazonka.Pager.AWSPager Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummaries
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummaries
instance Control.DeepSeq.NFData Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummaries
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummaries
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummaries
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummaries
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetSamplingStatisticSummaries.GetSamplingStatisticSummaries


-- | Retrieves all sampling rules.
--   
--   This operation returns paginated results.
module Amazonka.XRay.GetSamplingRules

-- | <i>See:</i> <a>newGetSamplingRules</a> smart constructor.
data GetSamplingRules
GetSamplingRules' :: Maybe Text -> GetSamplingRules

-- | Pagination token.
[$sel:nextToken:GetSamplingRules'] :: GetSamplingRules -> Maybe Text

-- | Create a value of <a>GetSamplingRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetSamplingRules'</a>,
--   <a>getSamplingRules_nextToken</a> - Pagination token.
newGetSamplingRules :: GetSamplingRules

-- | Pagination token.
getSamplingRules_nextToken :: Lens' GetSamplingRules (Maybe Text)

-- | <i>See:</i> <a>newGetSamplingRulesResponse</a> smart constructor.
data GetSamplingRulesResponse
GetSamplingRulesResponse' :: Maybe [SamplingRuleRecord] -> Maybe Text -> Int -> GetSamplingRulesResponse

-- | Rule definitions and metadata.
[$sel:samplingRuleRecords:GetSamplingRulesResponse'] :: GetSamplingRulesResponse -> Maybe [SamplingRuleRecord]

-- | Pagination token.
[$sel:nextToken:GetSamplingRulesResponse'] :: GetSamplingRulesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSamplingRulesResponse'] :: GetSamplingRulesResponse -> Int

-- | Create a value of <a>GetSamplingRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:samplingRuleRecords:GetSamplingRulesResponse'</a>,
--   <a>getSamplingRulesResponse_samplingRuleRecords</a> - Rule definitions
--   and metadata.
--   
--   <a>$sel:nextToken:GetSamplingRules'</a>,
--   <a>getSamplingRulesResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:httpStatus:GetSamplingRulesResponse'</a>,
--   <a>getSamplingRulesResponse_httpStatus</a> - The response's http
--   status code.
newGetSamplingRulesResponse :: Int -> GetSamplingRulesResponse

-- | Rule definitions and metadata.
getSamplingRulesResponse_samplingRuleRecords :: Lens' GetSamplingRulesResponse (Maybe [SamplingRuleRecord])

-- | Pagination token.
getSamplingRulesResponse_nextToken :: Lens' GetSamplingRulesResponse (Maybe Text)

-- | The response's http status code.
getSamplingRulesResponse_httpStatus :: Lens' GetSamplingRulesResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetSamplingRules.GetSamplingRules
instance GHC.Show.Show Amazonka.XRay.GetSamplingRules.GetSamplingRules
instance GHC.Read.Read Amazonka.XRay.GetSamplingRules.GetSamplingRules
instance GHC.Classes.Eq Amazonka.XRay.GetSamplingRules.GetSamplingRules
instance GHC.Generics.Generic Amazonka.XRay.GetSamplingRules.GetSamplingRulesResponse
instance GHC.Show.Show Amazonka.XRay.GetSamplingRules.GetSamplingRulesResponse
instance GHC.Read.Read Amazonka.XRay.GetSamplingRules.GetSamplingRulesResponse
instance GHC.Classes.Eq Amazonka.XRay.GetSamplingRules.GetSamplingRulesResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetSamplingRules.GetSamplingRules
instance Control.DeepSeq.NFData Amazonka.XRay.GetSamplingRules.GetSamplingRulesResponse
instance Amazonka.Pager.AWSPager Amazonka.XRay.GetSamplingRules.GetSamplingRules
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetSamplingRules.GetSamplingRules
instance Control.DeepSeq.NFData Amazonka.XRay.GetSamplingRules.GetSamplingRules
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetSamplingRules.GetSamplingRules
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetSamplingRules.GetSamplingRules
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetSamplingRules.GetSamplingRules
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetSamplingRules.GetSamplingRules


-- | Retrieves the summaries of all insights in the specified group
--   matching the provided filter values.
module Amazonka.XRay.GetInsightSummaries

-- | <i>See:</i> <a>newGetInsightSummaries</a> smart constructor.
data GetInsightSummaries
GetInsightSummaries' :: Maybe [InsightState] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> POSIX -> POSIX -> GetInsightSummaries

-- | The list of insight states.
[$sel:states:GetInsightSummaries'] :: GetInsightSummaries -> Maybe [InsightState]

-- | Pagination token.
[$sel:nextToken:GetInsightSummaries'] :: GetInsightSummaries -> Maybe Text

-- | The Amazon Resource Name (ARN) of the group. Required if the GroupName
--   isn't provided.
[$sel:groupARN:GetInsightSummaries'] :: GetInsightSummaries -> Maybe Text

-- | The name of the group. Required if the GroupARN isn't provided.
[$sel:groupName:GetInsightSummaries'] :: GetInsightSummaries -> Maybe Text

-- | The maximum number of results to display.
[$sel:maxResults:GetInsightSummaries'] :: GetInsightSummaries -> Maybe Natural

-- | The beginning of the time frame in which the insights started. The
--   start time can't be more than 30 days old.
[$sel:startTime:GetInsightSummaries'] :: GetInsightSummaries -> POSIX

-- | The end of the time frame in which the insights ended. The end time
--   can't be more than 30 days old.
[$sel:endTime:GetInsightSummaries'] :: GetInsightSummaries -> POSIX

-- | Create a value of <a>GetInsightSummaries</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_states</a> - The list of insight states.
--   
--   <a>$sel:nextToken:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_nextToken</a> - Pagination token.
--   
--   <a>$sel:groupARN:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_groupARN</a> - The Amazon Resource Name (ARN)
--   of the group. Required if the GroupName isn't provided.
--   
--   <a>$sel:groupName:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_groupName</a> - The name of the group. Required
--   if the GroupARN isn't provided.
--   
--   <a>$sel:maxResults:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_maxResults</a> - The maximum number of results
--   to display.
--   
--   <a>$sel:startTime:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_startTime</a> - The beginning of the time frame
--   in which the insights started. The start time can't be more than 30
--   days old.
--   
--   <a>$sel:endTime:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_endTime</a> - The end of the time frame in
--   which the insights ended. The end time can't be more than 30 days old.
newGetInsightSummaries :: UTCTime -> UTCTime -> GetInsightSummaries

-- | The list of insight states.
getInsightSummaries_states :: Lens' GetInsightSummaries (Maybe [InsightState])

-- | Pagination token.
getInsightSummaries_nextToken :: Lens' GetInsightSummaries (Maybe Text)

-- | The Amazon Resource Name (ARN) of the group. Required if the GroupName
--   isn't provided.
getInsightSummaries_groupARN :: Lens' GetInsightSummaries (Maybe Text)

-- | The name of the group. Required if the GroupARN isn't provided.
getInsightSummaries_groupName :: Lens' GetInsightSummaries (Maybe Text)

-- | The maximum number of results to display.
getInsightSummaries_maxResults :: Lens' GetInsightSummaries (Maybe Natural)

-- | The beginning of the time frame in which the insights started. The
--   start time can't be more than 30 days old.
getInsightSummaries_startTime :: Lens' GetInsightSummaries UTCTime

-- | The end of the time frame in which the insights ended. The end time
--   can't be more than 30 days old.
getInsightSummaries_endTime :: Lens' GetInsightSummaries UTCTime

-- | <i>See:</i> <a>newGetInsightSummariesResponse</a> smart constructor.
data GetInsightSummariesResponse
GetInsightSummariesResponse' :: Maybe [InsightSummary] -> Maybe Text -> Int -> GetInsightSummariesResponse

-- | The summary of each insight within the group matching the provided
--   filters. The summary contains the InsightID, start and end time, the
--   root cause service, the root cause and client impact statistics, the
--   top anomalous services, and the status of the insight.
[$sel:insightSummaries:GetInsightSummariesResponse'] :: GetInsightSummariesResponse -> Maybe [InsightSummary]

-- | Pagination token.
[$sel:nextToken:GetInsightSummariesResponse'] :: GetInsightSummariesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetInsightSummariesResponse'] :: GetInsightSummariesResponse -> Int

-- | Create a value of <a>GetInsightSummariesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:insightSummaries:GetInsightSummariesResponse'</a>,
--   <a>getInsightSummariesResponse_insightSummaries</a> - The summary of
--   each insight within the group matching the provided filters. The
--   summary contains the InsightID, start and end time, the root cause
--   service, the root cause and client impact statistics, the top
--   anomalous services, and the status of the insight.
--   
--   <a>$sel:nextToken:GetInsightSummaries'</a>,
--   <a>getInsightSummariesResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:httpStatus:GetInsightSummariesResponse'</a>,
--   <a>getInsightSummariesResponse_httpStatus</a> - The response's http
--   status code.
newGetInsightSummariesResponse :: Int -> GetInsightSummariesResponse

-- | The summary of each insight within the group matching the provided
--   filters. The summary contains the InsightID, start and end time, the
--   root cause service, the root cause and client impact statistics, the
--   top anomalous services, and the status of the insight.
getInsightSummariesResponse_insightSummaries :: Lens' GetInsightSummariesResponse (Maybe [InsightSummary])

-- | Pagination token.
getInsightSummariesResponse_nextToken :: Lens' GetInsightSummariesResponse (Maybe Text)

-- | The response's http status code.
getInsightSummariesResponse_httpStatus :: Lens' GetInsightSummariesResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetInsightSummaries.GetInsightSummaries
instance GHC.Show.Show Amazonka.XRay.GetInsightSummaries.GetInsightSummaries
instance GHC.Read.Read Amazonka.XRay.GetInsightSummaries.GetInsightSummaries
instance GHC.Classes.Eq Amazonka.XRay.GetInsightSummaries.GetInsightSummaries
instance GHC.Generics.Generic Amazonka.XRay.GetInsightSummaries.GetInsightSummariesResponse
instance GHC.Show.Show Amazonka.XRay.GetInsightSummaries.GetInsightSummariesResponse
instance GHC.Read.Read Amazonka.XRay.GetInsightSummaries.GetInsightSummariesResponse
instance GHC.Classes.Eq Amazonka.XRay.GetInsightSummaries.GetInsightSummariesResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetInsightSummaries.GetInsightSummaries
instance Control.DeepSeq.NFData Amazonka.XRay.GetInsightSummaries.GetInsightSummariesResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetInsightSummaries.GetInsightSummaries
instance Control.DeepSeq.NFData Amazonka.XRay.GetInsightSummaries.GetInsightSummaries
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetInsightSummaries.GetInsightSummaries
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetInsightSummaries.GetInsightSummaries
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetInsightSummaries.GetInsightSummaries
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetInsightSummaries.GetInsightSummaries


-- | Retrieves a service graph structure filtered by the specified insight.
--   The service graph is limited to only structural information. For a
--   complete service graph, use this API with the GetServiceGraph API.
module Amazonka.XRay.GetInsightImpactGraph

-- | <i>See:</i> <a>newGetInsightImpactGraph</a> smart constructor.
data GetInsightImpactGraph
GetInsightImpactGraph' :: Maybe Text -> Text -> POSIX -> POSIX -> GetInsightImpactGraph

-- | Specify the pagination token returned by a previous request to
--   retrieve the next page of results.
[$sel:nextToken:GetInsightImpactGraph'] :: GetInsightImpactGraph -> Maybe Text

-- | The insight's unique identifier. Use the GetInsightSummaries action to
--   retrieve an InsightId.
[$sel:insightId:GetInsightImpactGraph'] :: GetInsightImpactGraph -> Text

-- | The estimated start time of the insight, in Unix time seconds. The
--   StartTime is inclusive of the value provided and can't be more than 30
--   days old.
[$sel:startTime:GetInsightImpactGraph'] :: GetInsightImpactGraph -> POSIX

-- | The estimated end time of the insight, in Unix time seconds. The
--   EndTime is exclusive of the value provided. The time range between the
--   start time and end time can't be more than six hours.
[$sel:endTime:GetInsightImpactGraph'] :: GetInsightImpactGraph -> POSIX

-- | Create a value of <a>GetInsightImpactGraph</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraph_nextToken</a> - Specify the pagination token
--   returned by a previous request to retrieve the next page of results.
--   
--   <a>$sel:insightId:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraph_insightId</a> - The insight's unique
--   identifier. Use the GetInsightSummaries action to retrieve an
--   InsightId.
--   
--   <a>$sel:startTime:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraph_startTime</a> - The estimated start time of
--   the insight, in Unix time seconds. The StartTime is inclusive of the
--   value provided and can't be more than 30 days old.
--   
--   <a>$sel:endTime:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraph_endTime</a> - The estimated end time of the
--   insight, in Unix time seconds. The EndTime is exclusive of the value
--   provided. The time range between the start time and end time can't be
--   more than six hours.
newGetInsightImpactGraph :: Text -> UTCTime -> UTCTime -> GetInsightImpactGraph

-- | Specify the pagination token returned by a previous request to
--   retrieve the next page of results.
getInsightImpactGraph_nextToken :: Lens' GetInsightImpactGraph (Maybe Text)

-- | The insight's unique identifier. Use the GetInsightSummaries action to
--   retrieve an InsightId.
getInsightImpactGraph_insightId :: Lens' GetInsightImpactGraph Text

-- | The estimated start time of the insight, in Unix time seconds. The
--   StartTime is inclusive of the value provided and can't be more than 30
--   days old.
getInsightImpactGraph_startTime :: Lens' GetInsightImpactGraph UTCTime

-- | The estimated end time of the insight, in Unix time seconds. The
--   EndTime is exclusive of the value provided. The time range between the
--   start time and end time can't be more than six hours.
getInsightImpactGraph_endTime :: Lens' GetInsightImpactGraph UTCTime

-- | <i>See:</i> <a>newGetInsightImpactGraphResponse</a> smart constructor.
data GetInsightImpactGraphResponse
GetInsightImpactGraphResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe [InsightImpactGraphService] -> Int -> GetInsightImpactGraphResponse

-- | The time, in Unix seconds, at which the service graph started.
[$sel:serviceGraphStartTime:GetInsightImpactGraphResponse'] :: GetInsightImpactGraphResponse -> Maybe POSIX

-- | The provided start time.
[$sel:startTime:GetInsightImpactGraphResponse'] :: GetInsightImpactGraphResponse -> Maybe POSIX

-- | The insight's unique identifier.
[$sel:insightId:GetInsightImpactGraphResponse'] :: GetInsightImpactGraphResponse -> Maybe Text

-- | Pagination token.
[$sel:nextToken:GetInsightImpactGraphResponse'] :: GetInsightImpactGraphResponse -> Maybe Text

-- | The provided end time.
[$sel:endTime:GetInsightImpactGraphResponse'] :: GetInsightImpactGraphResponse -> Maybe POSIX

-- | The time, in Unix seconds, at which the service graph ended.
[$sel:serviceGraphEndTime:GetInsightImpactGraphResponse'] :: GetInsightImpactGraphResponse -> Maybe POSIX

-- | The Amazon Web Services instrumented services related to the insight.
[$sel:services:GetInsightImpactGraphResponse'] :: GetInsightImpactGraphResponse -> Maybe [InsightImpactGraphService]

-- | The response's http status code.
[$sel:httpStatus:GetInsightImpactGraphResponse'] :: GetInsightImpactGraphResponse -> Int

-- | Create a value of <a>GetInsightImpactGraphResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceGraphStartTime:GetInsightImpactGraphResponse'</a>,
--   <a>getInsightImpactGraphResponse_serviceGraphStartTime</a> - The time,
--   in Unix seconds, at which the service graph started.
--   
--   <a>$sel:startTime:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraphResponse_startTime</a> - The provided start
--   time.
--   
--   <a>$sel:insightId:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraphResponse_insightId</a> - The insight's unique
--   identifier.
--   
--   <a>$sel:nextToken:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraphResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:endTime:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraphResponse_endTime</a> - The provided end time.
--   
--   <a>$sel:serviceGraphEndTime:GetInsightImpactGraphResponse'</a>,
--   <a>getInsightImpactGraphResponse_serviceGraphEndTime</a> - The time,
--   in Unix seconds, at which the service graph ended.
--   
--   <a>$sel:services:GetInsightImpactGraphResponse'</a>,
--   <a>getInsightImpactGraphResponse_services</a> - The Amazon Web
--   Services instrumented services related to the insight.
--   
--   <a>$sel:httpStatus:GetInsightImpactGraphResponse'</a>,
--   <a>getInsightImpactGraphResponse_httpStatus</a> - The response's http
--   status code.
newGetInsightImpactGraphResponse :: Int -> GetInsightImpactGraphResponse

-- | The time, in Unix seconds, at which the service graph started.
getInsightImpactGraphResponse_serviceGraphStartTime :: Lens' GetInsightImpactGraphResponse (Maybe UTCTime)

-- | The provided start time.
getInsightImpactGraphResponse_startTime :: Lens' GetInsightImpactGraphResponse (Maybe UTCTime)

-- | The insight's unique identifier.
getInsightImpactGraphResponse_insightId :: Lens' GetInsightImpactGraphResponse (Maybe Text)

-- | Pagination token.
getInsightImpactGraphResponse_nextToken :: Lens' GetInsightImpactGraphResponse (Maybe Text)

-- | The provided end time.
getInsightImpactGraphResponse_endTime :: Lens' GetInsightImpactGraphResponse (Maybe UTCTime)

-- | The time, in Unix seconds, at which the service graph ended.
getInsightImpactGraphResponse_serviceGraphEndTime :: Lens' GetInsightImpactGraphResponse (Maybe UTCTime)

-- | The Amazon Web Services instrumented services related to the insight.
getInsightImpactGraphResponse_services :: Lens' GetInsightImpactGraphResponse (Maybe [InsightImpactGraphService])

-- | The response's http status code.
getInsightImpactGraphResponse_httpStatus :: Lens' GetInsightImpactGraphResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraph
instance GHC.Show.Show Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraph
instance GHC.Read.Read Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraph
instance GHC.Classes.Eq Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraph
instance GHC.Generics.Generic Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraphResponse
instance GHC.Show.Show Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraphResponse
instance GHC.Read.Read Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraphResponse
instance GHC.Classes.Eq Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraphResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraph
instance Control.DeepSeq.NFData Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraphResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraph
instance Control.DeepSeq.NFData Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraph
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraph
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraph
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraph
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetInsightImpactGraph.GetInsightImpactGraph


-- | X-Ray reevaluates insights periodically until they're resolved, and
--   records each intermediate state as an event. You can review an
--   insight's events in the Impact Timeline on the Inspect page in the
--   X-Ray console.
module Amazonka.XRay.GetInsightEvents

-- | <i>See:</i> <a>newGetInsightEvents</a> smart constructor.
data GetInsightEvents
GetInsightEvents' :: Maybe Text -> Maybe Natural -> Text -> GetInsightEvents

-- | Specify the pagination token returned by a previous request to
--   retrieve the next page of events.
[$sel:nextToken:GetInsightEvents'] :: GetInsightEvents -> Maybe Text

-- | Used to retrieve at most the specified value of events.
[$sel:maxResults:GetInsightEvents'] :: GetInsightEvents -> Maybe Natural

-- | The insight's unique identifier. Use the GetInsightSummaries action to
--   retrieve an InsightId.
[$sel:insightId:GetInsightEvents'] :: GetInsightEvents -> Text

-- | Create a value of <a>GetInsightEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetInsightEvents'</a>,
--   <a>getInsightEvents_nextToken</a> - Specify the pagination token
--   returned by a previous request to retrieve the next page of events.
--   
--   <a>$sel:maxResults:GetInsightEvents'</a>,
--   <a>getInsightEvents_maxResults</a> - Used to retrieve at most the
--   specified value of events.
--   
--   <a>$sel:insightId:GetInsightEvents'</a>,
--   <a>getInsightEvents_insightId</a> - The insight's unique identifier.
--   Use the GetInsightSummaries action to retrieve an InsightId.
newGetInsightEvents :: Text -> GetInsightEvents

-- | Specify the pagination token returned by a previous request to
--   retrieve the next page of events.
getInsightEvents_nextToken :: Lens' GetInsightEvents (Maybe Text)

-- | Used to retrieve at most the specified value of events.
getInsightEvents_maxResults :: Lens' GetInsightEvents (Maybe Natural)

-- | The insight's unique identifier. Use the GetInsightSummaries action to
--   retrieve an InsightId.
getInsightEvents_insightId :: Lens' GetInsightEvents Text

-- | <i>See:</i> <a>newGetInsightEventsResponse</a> smart constructor.
data GetInsightEventsResponse
GetInsightEventsResponse' :: Maybe [InsightEvent] -> Maybe Text -> Int -> GetInsightEventsResponse

-- | A detailed description of the event. This includes the time of the
--   event, client and root cause impact statistics, and the top anomalous
--   service at the time of the event.
[$sel:insightEvents:GetInsightEventsResponse'] :: GetInsightEventsResponse -> Maybe [InsightEvent]

-- | Use this token to retrieve the next page of insight events.
[$sel:nextToken:GetInsightEventsResponse'] :: GetInsightEventsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetInsightEventsResponse'] :: GetInsightEventsResponse -> Int

-- | Create a value of <a>GetInsightEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:insightEvents:GetInsightEventsResponse'</a>,
--   <a>getInsightEventsResponse_insightEvents</a> - A detailed description
--   of the event. This includes the time of the event, client and root
--   cause impact statistics, and the top anomalous service at the time of
--   the event.
--   
--   <a>$sel:nextToken:GetInsightEvents'</a>,
--   <a>getInsightEventsResponse_nextToken</a> - Use this token to retrieve
--   the next page of insight events.
--   
--   <a>$sel:httpStatus:GetInsightEventsResponse'</a>,
--   <a>getInsightEventsResponse_httpStatus</a> - The response's http
--   status code.
newGetInsightEventsResponse :: Int -> GetInsightEventsResponse

-- | A detailed description of the event. This includes the time of the
--   event, client and root cause impact statistics, and the top anomalous
--   service at the time of the event.
getInsightEventsResponse_insightEvents :: Lens' GetInsightEventsResponse (Maybe [InsightEvent])

-- | Use this token to retrieve the next page of insight events.
getInsightEventsResponse_nextToken :: Lens' GetInsightEventsResponse (Maybe Text)

-- | The response's http status code.
getInsightEventsResponse_httpStatus :: Lens' GetInsightEventsResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetInsightEvents.GetInsightEvents
instance GHC.Show.Show Amazonka.XRay.GetInsightEvents.GetInsightEvents
instance GHC.Read.Read Amazonka.XRay.GetInsightEvents.GetInsightEvents
instance GHC.Classes.Eq Amazonka.XRay.GetInsightEvents.GetInsightEvents
instance GHC.Generics.Generic Amazonka.XRay.GetInsightEvents.GetInsightEventsResponse
instance GHC.Show.Show Amazonka.XRay.GetInsightEvents.GetInsightEventsResponse
instance GHC.Read.Read Amazonka.XRay.GetInsightEvents.GetInsightEventsResponse
instance GHC.Classes.Eq Amazonka.XRay.GetInsightEvents.GetInsightEventsResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetInsightEvents.GetInsightEvents
instance Control.DeepSeq.NFData Amazonka.XRay.GetInsightEvents.GetInsightEventsResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetInsightEvents.GetInsightEvents
instance Control.DeepSeq.NFData Amazonka.XRay.GetInsightEvents.GetInsightEvents
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetInsightEvents.GetInsightEvents
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetInsightEvents.GetInsightEvents
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetInsightEvents.GetInsightEvents
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetInsightEvents.GetInsightEvents


-- | Retrieves the summary information of an insight. This includes impact
--   to clients and root cause services, the top anomalous services, the
--   category, the state of the insight, and the start and end time of the
--   insight.
module Amazonka.XRay.GetInsight

-- | <i>See:</i> <a>newGetInsight</a> smart constructor.
data GetInsight
GetInsight' :: Text -> GetInsight

-- | The insight's unique identifier. Use the GetInsightSummaries action to
--   retrieve an InsightId.
[$sel:insightId:GetInsight'] :: GetInsight -> Text

-- | Create a value of <a>GetInsight</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:insightId:GetInsight'</a>, <a>getInsight_insightId</a> - The
--   insight's unique identifier. Use the GetInsightSummaries action to
--   retrieve an InsightId.
newGetInsight :: Text -> GetInsight

-- | The insight's unique identifier. Use the GetInsightSummaries action to
--   retrieve an InsightId.
getInsight_insightId :: Lens' GetInsight Text

-- | <i>See:</i> <a>newGetInsightResponse</a> smart constructor.
data GetInsightResponse
GetInsightResponse' :: Maybe Insight -> Int -> GetInsightResponse

-- | The summary information of an insight.
[$sel:insight:GetInsightResponse'] :: GetInsightResponse -> Maybe Insight

-- | The response's http status code.
[$sel:httpStatus:GetInsightResponse'] :: GetInsightResponse -> Int

-- | Create a value of <a>GetInsightResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:insight:GetInsightResponse'</a>,
--   <a>getInsightResponse_insight</a> - The summary information of an
--   insight.
--   
--   <a>$sel:httpStatus:GetInsightResponse'</a>,
--   <a>getInsightResponse_httpStatus</a> - The response's http status
--   code.
newGetInsightResponse :: Int -> GetInsightResponse

-- | The summary information of an insight.
getInsightResponse_insight :: Lens' GetInsightResponse (Maybe Insight)

-- | The response's http status code.
getInsightResponse_httpStatus :: Lens' GetInsightResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetInsight.GetInsight
instance GHC.Show.Show Amazonka.XRay.GetInsight.GetInsight
instance GHC.Read.Read Amazonka.XRay.GetInsight.GetInsight
instance GHC.Classes.Eq Amazonka.XRay.GetInsight.GetInsight
instance GHC.Generics.Generic Amazonka.XRay.GetInsight.GetInsightResponse
instance GHC.Show.Show Amazonka.XRay.GetInsight.GetInsightResponse
instance GHC.Read.Read Amazonka.XRay.GetInsight.GetInsightResponse
instance GHC.Classes.Eq Amazonka.XRay.GetInsight.GetInsightResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetInsight.GetInsight
instance Control.DeepSeq.NFData Amazonka.XRay.GetInsight.GetInsightResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetInsight.GetInsight
instance Control.DeepSeq.NFData Amazonka.XRay.GetInsight.GetInsight
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetInsight.GetInsight
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetInsight.GetInsight
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetInsight.GetInsight
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetInsight.GetInsight


-- | Retrieves all active group details.
--   
--   This operation returns paginated results.
module Amazonka.XRay.GetGroups

-- | <i>See:</i> <a>newGetGroups</a> smart constructor.
data GetGroups
GetGroups' :: Maybe Text -> GetGroups

-- | Pagination token.
[$sel:nextToken:GetGroups'] :: GetGroups -> Maybe Text

-- | Create a value of <a>GetGroups</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetGroups'</a>, <a>getGroups_nextToken</a> -
--   Pagination token.
newGetGroups :: GetGroups

-- | Pagination token.
getGroups_nextToken :: Lens' GetGroups (Maybe Text)

-- | <i>See:</i> <a>newGetGroupsResponse</a> smart constructor.
data GetGroupsResponse
GetGroupsResponse' :: Maybe [GroupSummary] -> Maybe Text -> Int -> GetGroupsResponse

-- | The collection of all active groups.
[$sel:groups:GetGroupsResponse'] :: GetGroupsResponse -> Maybe [GroupSummary]

-- | Pagination token.
[$sel:nextToken:GetGroupsResponse'] :: GetGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetGroupsResponse'] :: GetGroupsResponse -> Int

-- | Create a value of <a>GetGroupsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:GetGroupsResponse'</a>, <a>getGroupsResponse_groups</a>
--   - The collection of all active groups.
--   
--   <a>$sel:nextToken:GetGroups'</a>, <a>getGroupsResponse_nextToken</a> -
--   Pagination token.
--   
--   <a>$sel:httpStatus:GetGroupsResponse'</a>,
--   <a>getGroupsResponse_httpStatus</a> - The response's http status code.
newGetGroupsResponse :: Int -> GetGroupsResponse

-- | The collection of all active groups.
getGroupsResponse_groups :: Lens' GetGroupsResponse (Maybe [GroupSummary])

-- | Pagination token.
getGroupsResponse_nextToken :: Lens' GetGroupsResponse (Maybe Text)

-- | The response's http status code.
getGroupsResponse_httpStatus :: Lens' GetGroupsResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetGroups.GetGroups
instance GHC.Show.Show Amazonka.XRay.GetGroups.GetGroups
instance GHC.Read.Read Amazonka.XRay.GetGroups.GetGroups
instance GHC.Classes.Eq Amazonka.XRay.GetGroups.GetGroups
instance GHC.Generics.Generic Amazonka.XRay.GetGroups.GetGroupsResponse
instance GHC.Show.Show Amazonka.XRay.GetGroups.GetGroupsResponse
instance GHC.Read.Read Amazonka.XRay.GetGroups.GetGroupsResponse
instance GHC.Classes.Eq Amazonka.XRay.GetGroups.GetGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetGroups.GetGroups
instance Control.DeepSeq.NFData Amazonka.XRay.GetGroups.GetGroupsResponse
instance Amazonka.Pager.AWSPager Amazonka.XRay.GetGroups.GetGroups
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetGroups.GetGroups
instance Control.DeepSeq.NFData Amazonka.XRay.GetGroups.GetGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetGroups.GetGroups
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetGroups.GetGroups
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetGroups.GetGroups
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetGroups.GetGroups


-- | Retrieves group resource details.
module Amazonka.XRay.GetGroup

-- | <i>See:</i> <a>newGetGroup</a> smart constructor.
data GetGroup
GetGroup' :: Maybe Text -> Maybe Text -> GetGroup

-- | The ARN of the group that was generated on creation.
[$sel:groupARN:GetGroup'] :: GetGroup -> Maybe Text

-- | The case-sensitive name of the group.
[$sel:groupName:GetGroup'] :: GetGroup -> Maybe Text

-- | Create a value of <a>GetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupARN:GetGroup'</a>, <a>getGroup_groupARN</a> - The ARN of
--   the group that was generated on creation.
--   
--   <a>$sel:groupName:GetGroup'</a>, <a>getGroup_groupName</a> - The
--   case-sensitive name of the group.
newGetGroup :: GetGroup

-- | The ARN of the group that was generated on creation.
getGroup_groupARN :: Lens' GetGroup (Maybe Text)

-- | The case-sensitive name of the group.
getGroup_groupName :: Lens' GetGroup (Maybe Text)

-- | <i>See:</i> <a>newGetGroupResponse</a> smart constructor.
data GetGroupResponse
GetGroupResponse' :: Maybe Group -> Int -> GetGroupResponse

-- | The group that was requested. Contains the name of the group, the ARN
--   of the group, the filter expression, and the insight configuration
--   assigned to the group.
[$sel:group':GetGroupResponse'] :: GetGroupResponse -> Maybe Group

-- | The response's http status code.
[$sel:httpStatus:GetGroupResponse'] :: GetGroupResponse -> Int

-- | Create a value of <a>GetGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':GetGroupResponse'</a>, <a>getGroupResponse_group</a> -
--   The group that was requested. Contains the name of the group, the ARN
--   of the group, the filter expression, and the insight configuration
--   assigned to the group.
--   
--   <a>$sel:httpStatus:GetGroupResponse'</a>,
--   <a>getGroupResponse_httpStatus</a> - The response's http status code.
newGetGroupResponse :: Int -> GetGroupResponse

-- | The group that was requested. Contains the name of the group, the ARN
--   of the group, the filter expression, and the insight configuration
--   assigned to the group.
getGroupResponse_group :: Lens' GetGroupResponse (Maybe Group)

-- | The response's http status code.
getGroupResponse_httpStatus :: Lens' GetGroupResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetGroup.GetGroup
instance GHC.Show.Show Amazonka.XRay.GetGroup.GetGroup
instance GHC.Read.Read Amazonka.XRay.GetGroup.GetGroup
instance GHC.Classes.Eq Amazonka.XRay.GetGroup.GetGroup
instance GHC.Generics.Generic Amazonka.XRay.GetGroup.GetGroupResponse
instance GHC.Show.Show Amazonka.XRay.GetGroup.GetGroupResponse
instance GHC.Read.Read Amazonka.XRay.GetGroup.GetGroupResponse
instance GHC.Classes.Eq Amazonka.XRay.GetGroup.GetGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetGroup.GetGroup
instance Control.DeepSeq.NFData Amazonka.XRay.GetGroup.GetGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetGroup.GetGroup
instance Control.DeepSeq.NFData Amazonka.XRay.GetGroup.GetGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetGroup.GetGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetGroup.GetGroup
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetGroup.GetGroup
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetGroup.GetGroup


-- | Retrieves the current encryption configuration for X-Ray data.
module Amazonka.XRay.GetEncryptionConfig

-- | <i>See:</i> <a>newGetEncryptionConfig</a> smart constructor.
data GetEncryptionConfig
GetEncryptionConfig' :: GetEncryptionConfig

-- | Create a value of <a>GetEncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetEncryptionConfig :: GetEncryptionConfig

-- | <i>See:</i> <a>newGetEncryptionConfigResponse</a> smart constructor.
data GetEncryptionConfigResponse
GetEncryptionConfigResponse' :: Maybe EncryptionConfig -> Int -> GetEncryptionConfigResponse

-- | The encryption configuration document.
[$sel:encryptionConfig:GetEncryptionConfigResponse'] :: GetEncryptionConfigResponse -> Maybe EncryptionConfig

-- | The response's http status code.
[$sel:httpStatus:GetEncryptionConfigResponse'] :: GetEncryptionConfigResponse -> Int

-- | Create a value of <a>GetEncryptionConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionConfig:GetEncryptionConfigResponse'</a>,
--   <a>getEncryptionConfigResponse_encryptionConfig</a> - The encryption
--   configuration document.
--   
--   <a>$sel:httpStatus:GetEncryptionConfigResponse'</a>,
--   <a>getEncryptionConfigResponse_httpStatus</a> - The response's http
--   status code.
newGetEncryptionConfigResponse :: Int -> GetEncryptionConfigResponse

-- | The encryption configuration document.
getEncryptionConfigResponse_encryptionConfig :: Lens' GetEncryptionConfigResponse (Maybe EncryptionConfig)

-- | The response's http status code.
getEncryptionConfigResponse_httpStatus :: Lens' GetEncryptionConfigResponse Int
instance GHC.Generics.Generic Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfig
instance GHC.Show.Show Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfig
instance GHC.Read.Read Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfig
instance GHC.Classes.Eq Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfig
instance GHC.Generics.Generic Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfigResponse
instance GHC.Show.Show Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfigResponse
instance GHC.Read.Read Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfigResponse
instance GHC.Classes.Eq Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfigResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfig
instance Control.DeepSeq.NFData Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfig
instance Control.DeepSeq.NFData Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfig
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfig
instance Amazonka.Data.Path.ToPath Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfig
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.GetEncryptionConfig.GetEncryptionConfig


-- | Deletes a sampling rule.
module Amazonka.XRay.DeleteSamplingRule

-- | <i>See:</i> <a>newDeleteSamplingRule</a> smart constructor.
data DeleteSamplingRule
DeleteSamplingRule' :: Maybe Text -> Maybe Text -> DeleteSamplingRule

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
[$sel:ruleName:DeleteSamplingRule'] :: DeleteSamplingRule -> Maybe Text

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
[$sel:ruleARN:DeleteSamplingRule'] :: DeleteSamplingRule -> Maybe Text

-- | Create a value of <a>DeleteSamplingRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleName:DeleteSamplingRule'</a>,
--   <a>deleteSamplingRule_ruleName</a> - The name of the sampling rule.
--   Specify a rule by either name or ARN, but not both.
--   
--   <a>$sel:ruleARN:DeleteSamplingRule'</a>,
--   <a>deleteSamplingRule_ruleARN</a> - The ARN of the sampling rule.
--   Specify a rule by either name or ARN, but not both.
newDeleteSamplingRule :: DeleteSamplingRule

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
deleteSamplingRule_ruleName :: Lens' DeleteSamplingRule (Maybe Text)

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
deleteSamplingRule_ruleARN :: Lens' DeleteSamplingRule (Maybe Text)

-- | <i>See:</i> <a>newDeleteSamplingRuleResponse</a> smart constructor.
data DeleteSamplingRuleResponse
DeleteSamplingRuleResponse' :: Maybe SamplingRuleRecord -> Int -> DeleteSamplingRuleResponse

-- | The deleted rule definition and metadata.
[$sel:samplingRuleRecord:DeleteSamplingRuleResponse'] :: DeleteSamplingRuleResponse -> Maybe SamplingRuleRecord

-- | The response's http status code.
[$sel:httpStatus:DeleteSamplingRuleResponse'] :: DeleteSamplingRuleResponse -> Int

-- | Create a value of <a>DeleteSamplingRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:samplingRuleRecord:DeleteSamplingRuleResponse'</a>,
--   <a>deleteSamplingRuleResponse_samplingRuleRecord</a> - The deleted
--   rule definition and metadata.
--   
--   <a>$sel:httpStatus:DeleteSamplingRuleResponse'</a>,
--   <a>deleteSamplingRuleResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSamplingRuleResponse :: Int -> DeleteSamplingRuleResponse

-- | The deleted rule definition and metadata.
deleteSamplingRuleResponse_samplingRuleRecord :: Lens' DeleteSamplingRuleResponse (Maybe SamplingRuleRecord)

-- | The response's http status code.
deleteSamplingRuleResponse_httpStatus :: Lens' DeleteSamplingRuleResponse Int
instance GHC.Generics.Generic Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRule
instance GHC.Show.Show Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRule
instance GHC.Read.Read Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRule
instance GHC.Classes.Eq Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRule
instance GHC.Generics.Generic Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRuleResponse
instance GHC.Show.Show Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRuleResponse
instance GHC.Read.Read Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRuleResponse
instance GHC.Classes.Eq Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRule
instance Control.DeepSeq.NFData Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRule
instance Control.DeepSeq.NFData Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRule
instance Amazonka.Data.Path.ToPath Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRule
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.DeleteSamplingRule.DeleteSamplingRule


-- | Deletes a group resource.
module Amazonka.XRay.DeleteGroup

-- | <i>See:</i> <a>newDeleteGroup</a> smart constructor.
data DeleteGroup
DeleteGroup' :: Maybe Text -> Maybe Text -> DeleteGroup

-- | The ARN of the group that was generated on creation.
[$sel:groupARN:DeleteGroup'] :: DeleteGroup -> Maybe Text

-- | The case-sensitive name of the group.
[$sel:groupName:DeleteGroup'] :: DeleteGroup -> Maybe Text

-- | Create a value of <a>DeleteGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupARN:DeleteGroup'</a>, <a>deleteGroup_groupARN</a> - The
--   ARN of the group that was generated on creation.
--   
--   <a>$sel:groupName:DeleteGroup'</a>, <a>deleteGroup_groupName</a> - The
--   case-sensitive name of the group.
newDeleteGroup :: DeleteGroup

-- | The ARN of the group that was generated on creation.
deleteGroup_groupARN :: Lens' DeleteGroup (Maybe Text)

-- | The case-sensitive name of the group.
deleteGroup_groupName :: Lens' DeleteGroup (Maybe Text)

-- | <i>See:</i> <a>newDeleteGroupResponse</a> smart constructor.
data DeleteGroupResponse
DeleteGroupResponse' :: Int -> DeleteGroupResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteGroupResponse'] :: DeleteGroupResponse -> Int

-- | Create a value of <a>DeleteGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteGroupResponse'</a>,
--   <a>deleteGroupResponse_httpStatus</a> - The response's http status
--   code.
newDeleteGroupResponse :: Int -> DeleteGroupResponse

-- | The response's http status code.
deleteGroupResponse_httpStatus :: Lens' DeleteGroupResponse Int
instance GHC.Generics.Generic Amazonka.XRay.DeleteGroup.DeleteGroup
instance GHC.Show.Show Amazonka.XRay.DeleteGroup.DeleteGroup
instance GHC.Read.Read Amazonka.XRay.DeleteGroup.DeleteGroup
instance GHC.Classes.Eq Amazonka.XRay.DeleteGroup.DeleteGroup
instance GHC.Generics.Generic Amazonka.XRay.DeleteGroup.DeleteGroupResponse
instance GHC.Show.Show Amazonka.XRay.DeleteGroup.DeleteGroupResponse
instance GHC.Read.Read Amazonka.XRay.DeleteGroup.DeleteGroupResponse
instance GHC.Classes.Eq Amazonka.XRay.DeleteGroup.DeleteGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.DeleteGroup.DeleteGroup
instance Control.DeepSeq.NFData Amazonka.XRay.DeleteGroup.DeleteGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.DeleteGroup.DeleteGroup
instance Control.DeepSeq.NFData Amazonka.XRay.DeleteGroup.DeleteGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.DeleteGroup.DeleteGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.DeleteGroup.DeleteGroup
instance Amazonka.Data.Path.ToPath Amazonka.XRay.DeleteGroup.DeleteGroup
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.DeleteGroup.DeleteGroup


-- | Creates a rule to control sampling behavior for instrumented
--   applications. Services retrieve rules with <a>GetSamplingRules</a>,
--   and evaluate each rule in ascending order of <i>priority</i> for each
--   request. If a rule matches, the service records a trace, borrowing it
--   from the reservoir size. After 10 seconds, the service reports back to
--   X-Ray with <a>GetSamplingTargets</a> to get updated versions of each
--   in-use rule. The updated rule contains a trace quota that the service
--   can use instead of borrowing from the reservoir.
module Amazonka.XRay.CreateSamplingRule

-- | <i>See:</i> <a>newCreateSamplingRule</a> smart constructor.
data CreateSamplingRule
CreateSamplingRule' :: Maybe [Tag] -> SamplingRule -> CreateSamplingRule

-- | A map that contains one or more tag keys and tag values to attach to
--   an X-Ray sampling rule. For more information about ways to use tags,
--   see <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use.</li>
--   </ul>
[$sel:tags:CreateSamplingRule'] :: CreateSamplingRule -> Maybe [Tag]

-- | The rule definition.
[$sel:samplingRule:CreateSamplingRule'] :: CreateSamplingRule -> SamplingRule

-- | Create a value of <a>CreateSamplingRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateSamplingRule'</a>, <a>createSamplingRule_tags</a> -
--   A map that contains one or more tag keys and tag values to attach to
--   an X-Ray sampling rule. For more information about ways to use tags,
--   see <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use.</li>
--   </ul>
--   
--   <a>$sel:samplingRule:CreateSamplingRule'</a>,
--   <a>createSamplingRule_samplingRule</a> - The rule definition.
newCreateSamplingRule :: SamplingRule -> CreateSamplingRule

-- | A map that contains one or more tag keys and tag values to attach to
--   an X-Ray sampling rule. For more information about ways to use tags,
--   see <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use.</li>
--   </ul>
createSamplingRule_tags :: Lens' CreateSamplingRule (Maybe [Tag])

-- | The rule definition.
createSamplingRule_samplingRule :: Lens' CreateSamplingRule SamplingRule

-- | <i>See:</i> <a>newCreateSamplingRuleResponse</a> smart constructor.
data CreateSamplingRuleResponse
CreateSamplingRuleResponse' :: Maybe SamplingRuleRecord -> Int -> CreateSamplingRuleResponse

-- | The saved rule definition and metadata.
[$sel:samplingRuleRecord:CreateSamplingRuleResponse'] :: CreateSamplingRuleResponse -> Maybe SamplingRuleRecord

-- | The response's http status code.
[$sel:httpStatus:CreateSamplingRuleResponse'] :: CreateSamplingRuleResponse -> Int

-- | Create a value of <a>CreateSamplingRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:samplingRuleRecord:CreateSamplingRuleResponse'</a>,
--   <a>createSamplingRuleResponse_samplingRuleRecord</a> - The saved rule
--   definition and metadata.
--   
--   <a>$sel:httpStatus:CreateSamplingRuleResponse'</a>,
--   <a>createSamplingRuleResponse_httpStatus</a> - The response's http
--   status code.
newCreateSamplingRuleResponse :: Int -> CreateSamplingRuleResponse

-- | The saved rule definition and metadata.
createSamplingRuleResponse_samplingRuleRecord :: Lens' CreateSamplingRuleResponse (Maybe SamplingRuleRecord)

-- | The response's http status code.
createSamplingRuleResponse_httpStatus :: Lens' CreateSamplingRuleResponse Int
instance GHC.Generics.Generic Amazonka.XRay.CreateSamplingRule.CreateSamplingRule
instance GHC.Show.Show Amazonka.XRay.CreateSamplingRule.CreateSamplingRule
instance GHC.Read.Read Amazonka.XRay.CreateSamplingRule.CreateSamplingRule
instance GHC.Classes.Eq Amazonka.XRay.CreateSamplingRule.CreateSamplingRule
instance GHC.Generics.Generic Amazonka.XRay.CreateSamplingRule.CreateSamplingRuleResponse
instance GHC.Show.Show Amazonka.XRay.CreateSamplingRule.CreateSamplingRuleResponse
instance GHC.Read.Read Amazonka.XRay.CreateSamplingRule.CreateSamplingRuleResponse
instance GHC.Classes.Eq Amazonka.XRay.CreateSamplingRule.CreateSamplingRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.CreateSamplingRule.CreateSamplingRule
instance Control.DeepSeq.NFData Amazonka.XRay.CreateSamplingRule.CreateSamplingRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.CreateSamplingRule.CreateSamplingRule
instance Control.DeepSeq.NFData Amazonka.XRay.CreateSamplingRule.CreateSamplingRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.CreateSamplingRule.CreateSamplingRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.CreateSamplingRule.CreateSamplingRule
instance Amazonka.Data.Path.ToPath Amazonka.XRay.CreateSamplingRule.CreateSamplingRule
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.CreateSamplingRule.CreateSamplingRule


-- | Creates a group resource with a name and a filter expression.
module Amazonka.XRay.CreateGroup

-- | <i>See:</i> <a>newCreateGroup</a> smart constructor.
data CreateGroup
CreateGroup' :: Maybe Text -> Maybe InsightsConfiguration -> Maybe [Tag] -> Text -> CreateGroup

-- | The filter expression defining criteria by which to group traces.
[$sel:filterExpression:CreateGroup'] :: CreateGroup -> Maybe Text

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the new group or false to disable insights for the new group.</li>
--   <li>The NotifcationsEnabled boolean can be set to true to enable
--   insights notifications for the new group. Notifications may only be
--   enabled on a group with InsightsEnabled set to true.</li>
--   </ul>
[$sel:insightsConfiguration:CreateGroup'] :: CreateGroup -> Maybe InsightsConfiguration

-- | A map that contains one or more tag keys and tag values to attach to
--   an X-Ray group. For more information about ways to use tags, see
--   <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use.</li>
--   </ul>
[$sel:tags:CreateGroup'] :: CreateGroup -> Maybe [Tag]

-- | The case-sensitive name of the new group. Default is a reserved name
--   and names must be unique.
[$sel:groupName:CreateGroup'] :: CreateGroup -> Text

-- | Create a value of <a>CreateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterExpression:CreateGroup'</a>,
--   <a>createGroup_filterExpression</a> - The filter expression defining
--   criteria by which to group traces.
--   
--   <a>$sel:insightsConfiguration:CreateGroup'</a>,
--   <a>createGroup_insightsConfiguration</a> - The structure containing
--   configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the new group or false to disable insights for the new group.</li>
--   <li>The NotifcationsEnabled boolean can be set to true to enable
--   insights notifications for the new group. Notifications may only be
--   enabled on a group with InsightsEnabled set to true.</li>
--   </ul>
--   
--   <a>$sel:tags:CreateGroup'</a>, <a>createGroup_tags</a> - A map that
--   contains one or more tag keys and tag values to attach to an X-Ray
--   group. For more information about ways to use tags, see <a>Tagging
--   Amazon Web Services resources</a> in the <i>Amazon Web Services
--   General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use.</li>
--   </ul>
--   
--   <a>$sel:groupName:CreateGroup'</a>, <a>createGroup_groupName</a> - The
--   case-sensitive name of the new group. Default is a reserved name and
--   names must be unique.
newCreateGroup :: Text -> CreateGroup

-- | The filter expression defining criteria by which to group traces.
createGroup_filterExpression :: Lens' CreateGroup (Maybe Text)

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the new group or false to disable insights for the new group.</li>
--   <li>The NotifcationsEnabled boolean can be set to true to enable
--   insights notifications for the new group. Notifications may only be
--   enabled on a group with InsightsEnabled set to true.</li>
--   </ul>
createGroup_insightsConfiguration :: Lens' CreateGroup (Maybe InsightsConfiguration)

-- | A map that contains one or more tag keys and tag values to attach to
--   an X-Ray group. For more information about ways to use tags, see
--   <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use.</li>
--   </ul>
createGroup_tags :: Lens' CreateGroup (Maybe [Tag])

-- | The case-sensitive name of the new group. Default is a reserved name
--   and names must be unique.
createGroup_groupName :: Lens' CreateGroup Text

-- | <i>See:</i> <a>newCreateGroupResponse</a> smart constructor.
data CreateGroupResponse
CreateGroupResponse' :: Maybe Group -> Int -> CreateGroupResponse

-- | The group that was created. Contains the name of the group that was
--   created, the Amazon Resource Name (ARN) of the group that was
--   generated based on the group name, the filter expression, and the
--   insight configuration that was assigned to the group.
[$sel:group':CreateGroupResponse'] :: CreateGroupResponse -> Maybe Group

-- | The response's http status code.
[$sel:httpStatus:CreateGroupResponse'] :: CreateGroupResponse -> Int

-- | Create a value of <a>CreateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':CreateGroupResponse'</a>,
--   <a>createGroupResponse_group</a> - The group that was created.
--   Contains the name of the group that was created, the Amazon Resource
--   Name (ARN) of the group that was generated based on the group name,
--   the filter expression, and the insight configuration that was assigned
--   to the group.
--   
--   <a>$sel:httpStatus:CreateGroupResponse'</a>,
--   <a>createGroupResponse_httpStatus</a> - The response's http status
--   code.
newCreateGroupResponse :: Int -> CreateGroupResponse

-- | The group that was created. Contains the name of the group that was
--   created, the Amazon Resource Name (ARN) of the group that was
--   generated based on the group name, the filter expression, and the
--   insight configuration that was assigned to the group.
createGroupResponse_group :: Lens' CreateGroupResponse (Maybe Group)

-- | The response's http status code.
createGroupResponse_httpStatus :: Lens' CreateGroupResponse Int
instance GHC.Generics.Generic Amazonka.XRay.CreateGroup.CreateGroup
instance GHC.Show.Show Amazonka.XRay.CreateGroup.CreateGroup
instance GHC.Read.Read Amazonka.XRay.CreateGroup.CreateGroup
instance GHC.Classes.Eq Amazonka.XRay.CreateGroup.CreateGroup
instance GHC.Generics.Generic Amazonka.XRay.CreateGroup.CreateGroupResponse
instance GHC.Show.Show Amazonka.XRay.CreateGroup.CreateGroupResponse
instance GHC.Read.Read Amazonka.XRay.CreateGroup.CreateGroupResponse
instance GHC.Classes.Eq Amazonka.XRay.CreateGroup.CreateGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.CreateGroup.CreateGroup
instance Control.DeepSeq.NFData Amazonka.XRay.CreateGroup.CreateGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.CreateGroup.CreateGroup
instance Control.DeepSeq.NFData Amazonka.XRay.CreateGroup.CreateGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.CreateGroup.CreateGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.CreateGroup.CreateGroup
instance Amazonka.Data.Path.ToPath Amazonka.XRay.CreateGroup.CreateGroup
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.CreateGroup.CreateGroup


-- | Retrieves a list of traces specified by ID. Each trace is a collection
--   of segment documents that originates from a single request. Use
--   <tt>GetTraceSummaries</tt> to get a list of trace IDs.
--   
--   This operation returns paginated results.
module Amazonka.XRay.BatchGetTraces

-- | <i>See:</i> <a>newBatchGetTraces</a> smart constructor.
data BatchGetTraces
BatchGetTraces' :: Maybe Text -> [Text] -> BatchGetTraces

-- | Pagination token.
[$sel:nextToken:BatchGetTraces'] :: BatchGetTraces -> Maybe Text

-- | Specify the trace IDs of requests for which to retrieve segments.
[$sel:traceIds:BatchGetTraces'] :: BatchGetTraces -> [Text]

-- | Create a value of <a>BatchGetTraces</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchGetTraces'</a>, <a>batchGetTraces_nextToken</a>
--   - Pagination token.
--   
--   <a>$sel:traceIds:BatchGetTraces'</a>, <a>batchGetTraces_traceIds</a> -
--   Specify the trace IDs of requests for which to retrieve segments.
newBatchGetTraces :: BatchGetTraces

-- | Pagination token.
batchGetTraces_nextToken :: Lens' BatchGetTraces (Maybe Text)

-- | Specify the trace IDs of requests for which to retrieve segments.
batchGetTraces_traceIds :: Lens' BatchGetTraces [Text]

-- | <i>See:</i> <a>newBatchGetTracesResponse</a> smart constructor.
data BatchGetTracesResponse
BatchGetTracesResponse' :: Maybe Text -> Maybe [Trace] -> Maybe [Text] -> Int -> BatchGetTracesResponse

-- | Pagination token.
[$sel:nextToken:BatchGetTracesResponse'] :: BatchGetTracesResponse -> Maybe Text

-- | Full traces for the specified requests.
[$sel:traces:BatchGetTracesResponse'] :: BatchGetTracesResponse -> Maybe [Trace]

-- | Trace IDs of requests that haven't been processed.
[$sel:unprocessedTraceIds:BatchGetTracesResponse'] :: BatchGetTracesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:BatchGetTracesResponse'] :: BatchGetTracesResponse -> Int

-- | Create a value of <a>BatchGetTracesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchGetTraces'</a>,
--   <a>batchGetTracesResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:traces:BatchGetTracesResponse'</a>,
--   <a>batchGetTracesResponse_traces</a> - Full traces for the specified
--   requests.
--   
--   <a>$sel:unprocessedTraceIds:BatchGetTracesResponse'</a>,
--   <a>batchGetTracesResponse_unprocessedTraceIds</a> - Trace IDs of
--   requests that haven't been processed.
--   
--   <a>$sel:httpStatus:BatchGetTracesResponse'</a>,
--   <a>batchGetTracesResponse_httpStatus</a> - The response's http status
--   code.
newBatchGetTracesResponse :: Int -> BatchGetTracesResponse

-- | Pagination token.
batchGetTracesResponse_nextToken :: Lens' BatchGetTracesResponse (Maybe Text)

-- | Full traces for the specified requests.
batchGetTracesResponse_traces :: Lens' BatchGetTracesResponse (Maybe [Trace])

-- | Trace IDs of requests that haven't been processed.
batchGetTracesResponse_unprocessedTraceIds :: Lens' BatchGetTracesResponse (Maybe [Text])

-- | The response's http status code.
batchGetTracesResponse_httpStatus :: Lens' BatchGetTracesResponse Int
instance GHC.Generics.Generic Amazonka.XRay.BatchGetTraces.BatchGetTraces
instance GHC.Show.Show Amazonka.XRay.BatchGetTraces.BatchGetTraces
instance GHC.Read.Read Amazonka.XRay.BatchGetTraces.BatchGetTraces
instance GHC.Classes.Eq Amazonka.XRay.BatchGetTraces.BatchGetTraces
instance GHC.Generics.Generic Amazonka.XRay.BatchGetTraces.BatchGetTracesResponse
instance GHC.Show.Show Amazonka.XRay.BatchGetTraces.BatchGetTracesResponse
instance GHC.Read.Read Amazonka.XRay.BatchGetTraces.BatchGetTracesResponse
instance GHC.Classes.Eq Amazonka.XRay.BatchGetTraces.BatchGetTracesResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.BatchGetTraces.BatchGetTraces
instance Control.DeepSeq.NFData Amazonka.XRay.BatchGetTraces.BatchGetTracesResponse
instance Amazonka.Pager.AWSPager Amazonka.XRay.BatchGetTraces.BatchGetTraces
instance Data.Hashable.Class.Hashable Amazonka.XRay.BatchGetTraces.BatchGetTraces
instance Control.DeepSeq.NFData Amazonka.XRay.BatchGetTraces.BatchGetTraces
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.BatchGetTraces.BatchGetTraces
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.BatchGetTraces.BatchGetTraces
instance Amazonka.Data.Path.ToPath Amazonka.XRay.BatchGetTraces.BatchGetTraces
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.BatchGetTraces.BatchGetTraces


-- | Removes tags from an Amazon Web Services X-Ray group or sampling rule.
--   You cannot edit or delete system tags (those with an <tt>aws:</tt>
--   prefix).
module Amazonka.XRay.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Number (ARN) of an X-Ray group or sampling rule.
[$sel:resourceARN:UntagResource'] :: UntagResource -> Text

-- | Keys for one or more tags that you want to remove from an X-Ray group
--   or sampling rule.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The Amazon Resource Number (ARN) of
--   an X-Ray group or sampling rule.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   Keys for one or more tags that you want to remove from an X-Ray group
--   or sampling rule.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Number (ARN) of an X-Ray group or sampling rule.
untagResource_resourceARN :: Lens' UntagResource Text

-- | Keys for one or more tags that you want to remove from an X-Ray group
--   or sampling rule.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.XRay.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.XRay.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.XRay.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.XRay.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.XRay.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.XRay.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.XRay.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.XRay.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.XRay.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.XRay.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.XRay.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.UntagResource.UntagResource


-- | Updates a group resource.
module Amazonka.XRay.UpdateGroup

-- | <i>See:</i> <a>newUpdateGroup</a> smart constructor.
data UpdateGroup
UpdateGroup' :: Maybe Text -> Maybe InsightsConfiguration -> Maybe Text -> Maybe Text -> UpdateGroup

-- | The updated filter expression defining criteria by which to group
--   traces.
[$sel:filterExpression:UpdateGroup'] :: UpdateGroup -> Maybe Text

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotifcationsEnabled boolean can be set to true to enable
--   insights notifications for the group. Notifications can only be
--   enabled on a group with InsightsEnabled set to true.</li>
--   </ul>
[$sel:insightsConfiguration:UpdateGroup'] :: UpdateGroup -> Maybe InsightsConfiguration

-- | The ARN that was generated upon creation.
[$sel:groupARN:UpdateGroup'] :: UpdateGroup -> Maybe Text

-- | The case-sensitive name of the group.
[$sel:groupName:UpdateGroup'] :: UpdateGroup -> Maybe Text

-- | Create a value of <a>UpdateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterExpression:UpdateGroup'</a>,
--   <a>updateGroup_filterExpression</a> - The updated filter expression
--   defining criteria by which to group traces.
--   
--   <a>$sel:insightsConfiguration:UpdateGroup'</a>,
--   <a>updateGroup_insightsConfiguration</a> - The structure containing
--   configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotifcationsEnabled boolean can be set to true to enable
--   insights notifications for the group. Notifications can only be
--   enabled on a group with InsightsEnabled set to true.</li>
--   </ul>
--   
--   <a>$sel:groupARN:UpdateGroup'</a>, <a>updateGroup_groupARN</a> - The
--   ARN that was generated upon creation.
--   
--   <a>$sel:groupName:UpdateGroup'</a>, <a>updateGroup_groupName</a> - The
--   case-sensitive name of the group.
newUpdateGroup :: UpdateGroup

-- | The updated filter expression defining criteria by which to group
--   traces.
updateGroup_filterExpression :: Lens' UpdateGroup (Maybe Text)

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotifcationsEnabled boolean can be set to true to enable
--   insights notifications for the group. Notifications can only be
--   enabled on a group with InsightsEnabled set to true.</li>
--   </ul>
updateGroup_insightsConfiguration :: Lens' UpdateGroup (Maybe InsightsConfiguration)

-- | The ARN that was generated upon creation.
updateGroup_groupARN :: Lens' UpdateGroup (Maybe Text)

-- | The case-sensitive name of the group.
updateGroup_groupName :: Lens' UpdateGroup (Maybe Text)

-- | <i>See:</i> <a>newUpdateGroupResponse</a> smart constructor.
data UpdateGroupResponse
UpdateGroupResponse' :: Maybe Group -> Int -> UpdateGroupResponse

-- | The group that was updated. Contains the name of the group that was
--   updated, the ARN of the group that was updated, the updated filter
--   expression, and the updated insight configuration assigned to the
--   group.
[$sel:group':UpdateGroupResponse'] :: UpdateGroupResponse -> Maybe Group

-- | The response's http status code.
[$sel:httpStatus:UpdateGroupResponse'] :: UpdateGroupResponse -> Int

-- | Create a value of <a>UpdateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':UpdateGroupResponse'</a>,
--   <a>updateGroupResponse_group</a> - The group that was updated.
--   Contains the name of the group that was updated, the ARN of the group
--   that was updated, the updated filter expression, and the updated
--   insight configuration assigned to the group.
--   
--   <a>$sel:httpStatus:UpdateGroupResponse'</a>,
--   <a>updateGroupResponse_httpStatus</a> - The response's http status
--   code.
newUpdateGroupResponse :: Int -> UpdateGroupResponse

-- | The group that was updated. Contains the name of the group that was
--   updated, the ARN of the group that was updated, the updated filter
--   expression, and the updated insight configuration assigned to the
--   group.
updateGroupResponse_group :: Lens' UpdateGroupResponse (Maybe Group)

-- | The response's http status code.
updateGroupResponse_httpStatus :: Lens' UpdateGroupResponse Int
instance GHC.Generics.Generic Amazonka.XRay.UpdateGroup.UpdateGroup
instance GHC.Show.Show Amazonka.XRay.UpdateGroup.UpdateGroup
instance GHC.Read.Read Amazonka.XRay.UpdateGroup.UpdateGroup
instance GHC.Classes.Eq Amazonka.XRay.UpdateGroup.UpdateGroup
instance GHC.Generics.Generic Amazonka.XRay.UpdateGroup.UpdateGroupResponse
instance GHC.Show.Show Amazonka.XRay.UpdateGroup.UpdateGroupResponse
instance GHC.Read.Read Amazonka.XRay.UpdateGroup.UpdateGroupResponse
instance GHC.Classes.Eq Amazonka.XRay.UpdateGroup.UpdateGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.UpdateGroup.UpdateGroup
instance Control.DeepSeq.NFData Amazonka.XRay.UpdateGroup.UpdateGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.UpdateGroup.UpdateGroup
instance Control.DeepSeq.NFData Amazonka.XRay.UpdateGroup.UpdateGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.UpdateGroup.UpdateGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.UpdateGroup.UpdateGroup
instance Amazonka.Data.Path.ToPath Amazonka.XRay.UpdateGroup.UpdateGroup
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.UpdateGroup.UpdateGroup


-- | Modifies a sampling rule's configuration.
module Amazonka.XRay.UpdateSamplingRule

-- | <i>See:</i> <a>newUpdateSamplingRule</a> smart constructor.
data UpdateSamplingRule
UpdateSamplingRule' :: SamplingRuleUpdate -> UpdateSamplingRule

-- | The rule and fields to change.
[$sel:samplingRuleUpdate:UpdateSamplingRule'] :: UpdateSamplingRule -> SamplingRuleUpdate

-- | Create a value of <a>UpdateSamplingRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:samplingRuleUpdate:UpdateSamplingRule'</a>,
--   <a>updateSamplingRule_samplingRuleUpdate</a> - The rule and fields to
--   change.
newUpdateSamplingRule :: SamplingRuleUpdate -> UpdateSamplingRule

-- | The rule and fields to change.
updateSamplingRule_samplingRuleUpdate :: Lens' UpdateSamplingRule SamplingRuleUpdate

-- | <i>See:</i> <a>newUpdateSamplingRuleResponse</a> smart constructor.
data UpdateSamplingRuleResponse
UpdateSamplingRuleResponse' :: Maybe SamplingRuleRecord -> Int -> UpdateSamplingRuleResponse

-- | The updated rule definition and metadata.
[$sel:samplingRuleRecord:UpdateSamplingRuleResponse'] :: UpdateSamplingRuleResponse -> Maybe SamplingRuleRecord

-- | The response's http status code.
[$sel:httpStatus:UpdateSamplingRuleResponse'] :: UpdateSamplingRuleResponse -> Int

-- | Create a value of <a>UpdateSamplingRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:samplingRuleRecord:UpdateSamplingRuleResponse'</a>,
--   <a>updateSamplingRuleResponse_samplingRuleRecord</a> - The updated
--   rule definition and metadata.
--   
--   <a>$sel:httpStatus:UpdateSamplingRuleResponse'</a>,
--   <a>updateSamplingRuleResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSamplingRuleResponse :: Int -> UpdateSamplingRuleResponse

-- | The updated rule definition and metadata.
updateSamplingRuleResponse_samplingRuleRecord :: Lens' UpdateSamplingRuleResponse (Maybe SamplingRuleRecord)

-- | The response's http status code.
updateSamplingRuleResponse_httpStatus :: Lens' UpdateSamplingRuleResponse Int
instance GHC.Generics.Generic Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRule
instance GHC.Show.Show Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRule
instance GHC.Read.Read Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRule
instance GHC.Classes.Eq Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRule
instance GHC.Generics.Generic Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRuleResponse
instance GHC.Show.Show Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRuleResponse
instance GHC.Read.Read Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRuleResponse
instance GHC.Classes.Eq Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRule
instance Control.DeepSeq.NFData Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRule
instance Control.DeepSeq.NFData Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRule
instance Amazonka.Data.Path.ToPath Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRule
instance Amazonka.Data.Query.ToQuery Amazonka.XRay.UpdateSamplingRule.UpdateSamplingRule


module Amazonka.XRay.Lens

-- | An Amazon Web Services KMS key in one of the following formats:
--   
--   <ul>
--   <li><b>Alias</b> - The name of the key. For example,
--   <tt>alias/MyKey</tt>.</li>
--   <li><b>Key ID</b> - The KMS key ID of the key. For example,
--   <tt>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</tt>. Amazon Web Services
--   X-Ray does not support asymmetric KMS keys.</li>
--   <li><b>ARN</b> - The full Amazon Resource Name of the key ID or alias.
--   For example,
--   <tt>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</tt>.
--   Use this format to specify a key in a different account.</li>
--   </ul>
--   
--   Omit this key if you set <tt>Type</tt> to <tt>NONE</tt>.
putEncryptionConfig_keyId :: Lens' PutEncryptionConfig (Maybe Text)

-- | The type of encryption. Set to <tt>KMS</tt> to use your own key for
--   encryption. Set to <tt>NONE</tt> for default encryption.
putEncryptionConfig_type :: Lens' PutEncryptionConfig EncryptionType

-- | The new encryption configuration.
putEncryptionConfigResponse_encryptionConfig :: Lens' PutEncryptionConfigResponse (Maybe EncryptionConfig)

-- | The response's http status code.
putEncryptionConfigResponse_httpStatus :: Lens' PutEncryptionConfigResponse Int

-- | Pagination token.
getServiceGraph_nextToken :: Lens' GetServiceGraph (Maybe Text)

-- | The Amazon Resource Name (ARN) of a group based on which you want to
--   generate a graph.
getServiceGraph_groupARN :: Lens' GetServiceGraph (Maybe Text)

-- | The name of a group based on which you want to generate a graph.
getServiceGraph_groupName :: Lens' GetServiceGraph (Maybe Text)

-- | The start of the time frame for which to generate a graph.
getServiceGraph_startTime :: Lens' GetServiceGraph UTCTime

-- | The end of the timeframe for which to generate a graph.
getServiceGraph_endTime :: Lens' GetServiceGraph UTCTime

-- | A flag indicating whether the group's filter expression has been
--   consistent, or if the returned service graph may show traces from an
--   older version of the group's filter expression.
getServiceGraphResponse_containsOldGroupVersions :: Lens' GetServiceGraphResponse (Maybe Bool)

-- | The start of the time frame for which the graph was generated.
getServiceGraphResponse_startTime :: Lens' GetServiceGraphResponse (Maybe UTCTime)

-- | Pagination token.
getServiceGraphResponse_nextToken :: Lens' GetServiceGraphResponse (Maybe Text)

-- | The end of the time frame for which the graph was generated.
getServiceGraphResponse_endTime :: Lens' GetServiceGraphResponse (Maybe UTCTime)

-- | The services that have processed a traced request during the specified
--   time frame.
getServiceGraphResponse_services :: Lens' GetServiceGraphResponse (Maybe [ServiceInfo])

-- | The response's http status code.
getServiceGraphResponse_httpStatus :: Lens' GetServiceGraphResponse Int

-- | Information about rules that the service is using to sample requests.
getSamplingTargets_samplingStatisticsDocuments :: Lens' GetSamplingTargets [SamplingStatisticsDocument]

-- | Information about <a>SamplingStatisticsDocument</a> that X-Ray could
--   not process.
getSamplingTargetsResponse_unprocessedStatistics :: Lens' GetSamplingTargetsResponse (Maybe [UnprocessedStatistics])

-- | The last time a user changed the sampling rule configuration. If the
--   sampling rule configuration changed since the service last retrieved
--   it, the service should call <a>GetSamplingRules</a> to get the latest
--   version.
getSamplingTargetsResponse_lastRuleModification :: Lens' GetSamplingTargetsResponse (Maybe UTCTime)

-- | Updated rules that the service should use to sample requests.
getSamplingTargetsResponse_samplingTargetDocuments :: Lens' GetSamplingTargetsResponse (Maybe [SamplingTargetDocument])

-- | The response's http status code.
getSamplingTargetsResponse_httpStatus :: Lens' GetSamplingTargetsResponse Int

-- | A pagination token. If multiple pages of results are returned, use the
--   <tt>NextToken</tt> value returned with the current page of results as
--   the value of this parameter to get the next page of results.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The Amazon Resource Number (ARN) of an X-Ray group or sampling rule.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | A pagination token. If multiple pages of results are returned, use the
--   <tt>NextToken</tt> value returned with the current page of results to
--   get the next page of results.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | A list of tags, as key and value pairs, that is associated with the
--   specified X-Ray group or sampling rule.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | Specify a filter expression to retrieve trace summaries for services
--   or requests that meet certain requirements.
getTraceSummaries_filterExpression :: Lens' GetTraceSummaries (Maybe Text)

-- | Specify the pagination token returned by a previous request to
--   retrieve the next page of results.
getTraceSummaries_nextToken :: Lens' GetTraceSummaries (Maybe Text)

-- | A parameter to indicate whether to query trace summaries by TraceId or
--   Event time.
getTraceSummaries_timeRangeType :: Lens' GetTraceSummaries (Maybe TimeRangeType)

-- | A parameter to indicate whether to enable sampling on trace summaries.
--   Input parameters are Name and Value.
getTraceSummaries_samplingStrategy :: Lens' GetTraceSummaries (Maybe SamplingStrategy)

-- | Set to <tt>true</tt> to get summaries for only a subset of available
--   traces.
getTraceSummaries_sampling :: Lens' GetTraceSummaries (Maybe Bool)

-- | The start of the time frame for which to retrieve traces.
getTraceSummaries_startTime :: Lens' GetTraceSummaries UTCTime

-- | The end of the time frame for which to retrieve traces.
getTraceSummaries_endTime :: Lens' GetTraceSummaries UTCTime

-- | The total number of traces processed, including traces that did not
--   match the specified filter expression.
getTraceSummariesResponse_tracesProcessedCount :: Lens' GetTraceSummariesResponse (Maybe Integer)

-- | If the requested time frame contained more than one page of results,
--   you can use this token to retrieve the next page. The first page
--   contains the most recent results, closest to the end of the time
--   frame.
getTraceSummariesResponse_nextToken :: Lens' GetTraceSummariesResponse (Maybe Text)

-- | The start time of this page of results.
getTraceSummariesResponse_approximateTime :: Lens' GetTraceSummariesResponse (Maybe UTCTime)

-- | Trace IDs and annotations for traces that were found in the specified
--   time frame.
getTraceSummariesResponse_traceSummaries :: Lens' GetTraceSummariesResponse (Maybe [TraceSummary])

-- | The response's http status code.
getTraceSummariesResponse_httpStatus :: Lens' GetTraceSummariesResponse Int

-- | A string containing a JSON document defining one or more segments or
--   subsegments.
putTraceSegments_traceSegmentDocuments :: Lens' PutTraceSegments [Text]

-- | Segments that failed processing.
putTraceSegmentsResponse_unprocessedTraceSegments :: Lens' PutTraceSegmentsResponse (Maybe [UnprocessedTraceSegment])

-- | The response's http status code.
putTraceSegmentsResponse_httpStatus :: Lens' PutTraceSegmentsResponse Int

-- | Pagination token.
batchGetTraces_nextToken :: Lens' BatchGetTraces (Maybe Text)

-- | Specify the trace IDs of requests for which to retrieve segments.
batchGetTraces_traceIds :: Lens' BatchGetTraces [Text]

-- | Pagination token.
batchGetTracesResponse_nextToken :: Lens' BatchGetTracesResponse (Maybe Text)

-- | Full traces for the specified requests.
batchGetTracesResponse_traces :: Lens' BatchGetTracesResponse (Maybe [Trace])

-- | Trace IDs of requests that haven't been processed.
batchGetTracesResponse_unprocessedTraceIds :: Lens' BatchGetTracesResponse (Maybe [Text])

-- | The response's http status code.
batchGetTracesResponse_httpStatus :: Lens' BatchGetTracesResponse Int

-- | The insight's unique identifier. Use the GetInsightSummaries action to
--   retrieve an InsightId.
getInsight_insightId :: Lens' GetInsight Text

-- | The summary information of an insight.
getInsightResponse_insight :: Lens' GetInsightResponse (Maybe Insight)

-- | The response's http status code.
getInsightResponse_httpStatus :: Lens' GetInsightResponse Int

-- | A filter expression defining entities that will be aggregated for
--   statistics. Supports ID, service, and edge functions. If no selector
--   expression is specified, edge statistics are returned.
getTimeSeriesServiceStatistics_entitySelectorExpression :: Lens' GetTimeSeriesServiceStatistics (Maybe Text)

-- | Aggregation period in seconds.
getTimeSeriesServiceStatistics_period :: Lens' GetTimeSeriesServiceStatistics (Maybe Int)

-- | The forecasted high and low fault count values. Forecast enabled
--   requests require the EntitySelectorExpression ID be provided.
getTimeSeriesServiceStatistics_forecastStatistics :: Lens' GetTimeSeriesServiceStatistics (Maybe Bool)

-- | Pagination token.
getTimeSeriesServiceStatistics_nextToken :: Lens' GetTimeSeriesServiceStatistics (Maybe Text)

-- | The Amazon Resource Name (ARN) of the group for which to pull
--   statistics from.
getTimeSeriesServiceStatistics_groupARN :: Lens' GetTimeSeriesServiceStatistics (Maybe Text)

-- | The case-sensitive name of the group for which to pull statistics
--   from.
getTimeSeriesServiceStatistics_groupName :: Lens' GetTimeSeriesServiceStatistics (Maybe Text)

-- | The start of the time frame for which to aggregate statistics.
getTimeSeriesServiceStatistics_startTime :: Lens' GetTimeSeriesServiceStatistics UTCTime

-- | The end of the time frame for which to aggregate statistics.
getTimeSeriesServiceStatistics_endTime :: Lens' GetTimeSeriesServiceStatistics UTCTime

-- | A flag indicating whether or not a group's filter expression has been
--   consistent, or if a returned aggregation might show statistics from an
--   older version of the group's filter expression.
getTimeSeriesServiceStatisticsResponse_containsOldGroupVersions :: Lens' GetTimeSeriesServiceStatisticsResponse (Maybe Bool)

-- | The collection of statistics.
getTimeSeriesServiceStatisticsResponse_timeSeriesServiceStatistics :: Lens' GetTimeSeriesServiceStatisticsResponse (Maybe [TimeSeriesServiceStatistics])

-- | Pagination token.
getTimeSeriesServiceStatisticsResponse_nextToken :: Lens' GetTimeSeriesServiceStatisticsResponse (Maybe Text)

-- | The response's http status code.
getTimeSeriesServiceStatisticsResponse_httpStatus :: Lens' GetTimeSeriesServiceStatisticsResponse Int

-- | The encryption configuration document.
getEncryptionConfigResponse_encryptionConfig :: Lens' GetEncryptionConfigResponse (Maybe EncryptionConfig)

-- | The response's http status code.
getEncryptionConfigResponse_httpStatus :: Lens' GetEncryptionConfigResponse Int

-- | Specify the pagination token returned by a previous request to
--   retrieve the next page of results.
getInsightImpactGraph_nextToken :: Lens' GetInsightImpactGraph (Maybe Text)

-- | The insight's unique identifier. Use the GetInsightSummaries action to
--   retrieve an InsightId.
getInsightImpactGraph_insightId :: Lens' GetInsightImpactGraph Text

-- | The estimated start time of the insight, in Unix time seconds. The
--   StartTime is inclusive of the value provided and can't be more than 30
--   days old.
getInsightImpactGraph_startTime :: Lens' GetInsightImpactGraph UTCTime

-- | The estimated end time of the insight, in Unix time seconds. The
--   EndTime is exclusive of the value provided. The time range between the
--   start time and end time can't be more than six hours.
getInsightImpactGraph_endTime :: Lens' GetInsightImpactGraph UTCTime

-- | The time, in Unix seconds, at which the service graph started.
getInsightImpactGraphResponse_serviceGraphStartTime :: Lens' GetInsightImpactGraphResponse (Maybe UTCTime)

-- | The provided start time.
getInsightImpactGraphResponse_startTime :: Lens' GetInsightImpactGraphResponse (Maybe UTCTime)

-- | The insight's unique identifier.
getInsightImpactGraphResponse_insightId :: Lens' GetInsightImpactGraphResponse (Maybe Text)

-- | Pagination token.
getInsightImpactGraphResponse_nextToken :: Lens' GetInsightImpactGraphResponse (Maybe Text)

-- | The provided end time.
getInsightImpactGraphResponse_endTime :: Lens' GetInsightImpactGraphResponse (Maybe UTCTime)

-- | The time, in Unix seconds, at which the service graph ended.
getInsightImpactGraphResponse_serviceGraphEndTime :: Lens' GetInsightImpactGraphResponse (Maybe UTCTime)

-- | The Amazon Web Services instrumented services related to the insight.
getInsightImpactGraphResponse_services :: Lens' GetInsightImpactGraphResponse (Maybe [InsightImpactGraphService])

-- | The response's http status code.
getInsightImpactGraphResponse_httpStatus :: Lens' GetInsightImpactGraphResponse Int

-- | The rule and fields to change.
updateSamplingRule_samplingRuleUpdate :: Lens' UpdateSamplingRule SamplingRuleUpdate

-- | The updated rule definition and metadata.
updateSamplingRuleResponse_samplingRuleRecord :: Lens' UpdateSamplingRuleResponse (Maybe SamplingRuleRecord)

-- | The response's http status code.
updateSamplingRuleResponse_httpStatus :: Lens' UpdateSamplingRuleResponse Int

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
deleteSamplingRule_ruleName :: Lens' DeleteSamplingRule (Maybe Text)

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
deleteSamplingRule_ruleARN :: Lens' DeleteSamplingRule (Maybe Text)

-- | The deleted rule definition and metadata.
deleteSamplingRuleResponse_samplingRuleRecord :: Lens' DeleteSamplingRuleResponse (Maybe SamplingRuleRecord)

-- | The response's http status code.
deleteSamplingRuleResponse_httpStatus :: Lens' DeleteSamplingRuleResponse Int

-- | Specify the pagination token returned by a previous request to
--   retrieve the next page of events.
getInsightEvents_nextToken :: Lens' GetInsightEvents (Maybe Text)

-- | Used to retrieve at most the specified value of events.
getInsightEvents_maxResults :: Lens' GetInsightEvents (Maybe Natural)

-- | The insight's unique identifier. Use the GetInsightSummaries action to
--   retrieve an InsightId.
getInsightEvents_insightId :: Lens' GetInsightEvents Text

-- | A detailed description of the event. This includes the time of the
--   event, client and root cause impact statistics, and the top anomalous
--   service at the time of the event.
getInsightEventsResponse_insightEvents :: Lens' GetInsightEventsResponse (Maybe [InsightEvent])

-- | Use this token to retrieve the next page of insight events.
getInsightEventsResponse_nextToken :: Lens' GetInsightEventsResponse (Maybe Text)

-- | The response's http status code.
getInsightEventsResponse_httpStatus :: Lens' GetInsightEventsResponse Int

-- | Pagination token.
getGroups_nextToken :: Lens' GetGroups (Maybe Text)

-- | The collection of all active groups.
getGroupsResponse_groups :: Lens' GetGroupsResponse (Maybe [GroupSummary])

-- | Pagination token.
getGroupsResponse_nextToken :: Lens' GetGroupsResponse (Maybe Text)

-- | The response's http status code.
getGroupsResponse_httpStatus :: Lens' GetGroupsResponse Int

-- | The list of insight states.
getInsightSummaries_states :: Lens' GetInsightSummaries (Maybe [InsightState])

-- | Pagination token.
getInsightSummaries_nextToken :: Lens' GetInsightSummaries (Maybe Text)

-- | The Amazon Resource Name (ARN) of the group. Required if the GroupName
--   isn't provided.
getInsightSummaries_groupARN :: Lens' GetInsightSummaries (Maybe Text)

-- | The name of the group. Required if the GroupARN isn't provided.
getInsightSummaries_groupName :: Lens' GetInsightSummaries (Maybe Text)

-- | The maximum number of results to display.
getInsightSummaries_maxResults :: Lens' GetInsightSummaries (Maybe Natural)

-- | The beginning of the time frame in which the insights started. The
--   start time can't be more than 30 days old.
getInsightSummaries_startTime :: Lens' GetInsightSummaries UTCTime

-- | The end of the time frame in which the insights ended. The end time
--   can't be more than 30 days old.
getInsightSummaries_endTime :: Lens' GetInsightSummaries UTCTime

-- | The summary of each insight within the group matching the provided
--   filters. The summary contains the InsightID, start and end time, the
--   root cause service, the root cause and client impact statistics, the
--   top anomalous services, and the status of the insight.
getInsightSummariesResponse_insightSummaries :: Lens' GetInsightSummariesResponse (Maybe [InsightSummary])

-- | Pagination token.
getInsightSummariesResponse_nextToken :: Lens' GetInsightSummariesResponse (Maybe Text)

-- | The response's http status code.
getInsightSummariesResponse_httpStatus :: Lens' GetInsightSummariesResponse Int

putTelemetryRecords_hostname :: Lens' PutTelemetryRecords (Maybe Text)

putTelemetryRecords_eC2InstanceId :: Lens' PutTelemetryRecords (Maybe Text)

putTelemetryRecords_resourceARN :: Lens' PutTelemetryRecords (Maybe Text)

putTelemetryRecords_telemetryRecords :: Lens' PutTelemetryRecords [TelemetryRecord]

-- | The response's http status code.
putTelemetryRecordsResponse_httpStatus :: Lens' PutTelemetryRecordsResponse Int

-- | Pagination token.
getSamplingRules_nextToken :: Lens' GetSamplingRules (Maybe Text)

-- | Rule definitions and metadata.
getSamplingRulesResponse_samplingRuleRecords :: Lens' GetSamplingRulesResponse (Maybe [SamplingRuleRecord])

-- | Pagination token.
getSamplingRulesResponse_nextToken :: Lens' GetSamplingRulesResponse (Maybe Text)

-- | The response's http status code.
getSamplingRulesResponse_httpStatus :: Lens' GetSamplingRulesResponse Int

-- | The Amazon Resource Number (ARN) of an X-Ray group or sampling rule.
tagResource_resourceARN :: Lens' TagResource Text

-- | A map that contains one or more tag keys and tag values to attach to
--   an X-Ray group or sampling rule. For more information about ways to
--   use tags, see <a>Tagging Amazon Web Services resources</a> in the
--   <i>Amazon Web Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use. You cannot edit or delete system tags.</li>
--   </ul>
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | Pagination token.
getTraceGraph_nextToken :: Lens' GetTraceGraph (Maybe Text)

-- | Trace IDs of requests for which to generate a service graph.
getTraceGraph_traceIds :: Lens' GetTraceGraph [Text]

-- | Pagination token.
getTraceGraphResponse_nextToken :: Lens' GetTraceGraphResponse (Maybe Text)

-- | The services that have processed one of the specified requests.
getTraceGraphResponse_services :: Lens' GetTraceGraphResponse (Maybe [ServiceInfo])

-- | The response's http status code.
getTraceGraphResponse_httpStatus :: Lens' GetTraceGraphResponse Int

-- | The filter expression defining criteria by which to group traces.
createGroup_filterExpression :: Lens' CreateGroup (Maybe Text)

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the new group or false to disable insights for the new group.</li>
--   <li>The NotifcationsEnabled boolean can be set to true to enable
--   insights notifications for the new group. Notifications may only be
--   enabled on a group with InsightsEnabled set to true.</li>
--   </ul>
createGroup_insightsConfiguration :: Lens' CreateGroup (Maybe InsightsConfiguration)

-- | A map that contains one or more tag keys and tag values to attach to
--   an X-Ray group. For more information about ways to use tags, see
--   <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use.</li>
--   </ul>
createGroup_tags :: Lens' CreateGroup (Maybe [Tag])

-- | The case-sensitive name of the new group. Default is a reserved name
--   and names must be unique.
createGroup_groupName :: Lens' CreateGroup Text

-- | The group that was created. Contains the name of the group that was
--   created, the Amazon Resource Name (ARN) of the group that was
--   generated based on the group name, the filter expression, and the
--   insight configuration that was assigned to the group.
createGroupResponse_group :: Lens' CreateGroupResponse (Maybe Group)

-- | The response's http status code.
createGroupResponse_httpStatus :: Lens' CreateGroupResponse Int

-- | The Amazon Resource Number (ARN) of an X-Ray group or sampling rule.
untagResource_resourceARN :: Lens' UntagResource Text

-- | Keys for one or more tags that you want to remove from an X-Ray group
--   or sampling rule.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The ARN of the group that was generated on creation.
deleteGroup_groupARN :: Lens' DeleteGroup (Maybe Text)

-- | The case-sensitive name of the group.
deleteGroup_groupName :: Lens' DeleteGroup (Maybe Text)

-- | The response's http status code.
deleteGroupResponse_httpStatus :: Lens' DeleteGroupResponse Int

-- | The updated filter expression defining criteria by which to group
--   traces.
updateGroup_filterExpression :: Lens' UpdateGroup (Maybe Text)

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotifcationsEnabled boolean can be set to true to enable
--   insights notifications for the group. Notifications can only be
--   enabled on a group with InsightsEnabled set to true.</li>
--   </ul>
updateGroup_insightsConfiguration :: Lens' UpdateGroup (Maybe InsightsConfiguration)

-- | The ARN that was generated upon creation.
updateGroup_groupARN :: Lens' UpdateGroup (Maybe Text)

-- | The case-sensitive name of the group.
updateGroup_groupName :: Lens' UpdateGroup (Maybe Text)

-- | The group that was updated. Contains the name of the group that was
--   updated, the ARN of the group that was updated, the updated filter
--   expression, and the updated insight configuration assigned to the
--   group.
updateGroupResponse_group :: Lens' UpdateGroupResponse (Maybe Group)

-- | The response's http status code.
updateGroupResponse_httpStatus :: Lens' UpdateGroupResponse Int

-- | The ARN of the group that was generated on creation.
getGroup_groupARN :: Lens' GetGroup (Maybe Text)

-- | The case-sensitive name of the group.
getGroup_groupName :: Lens' GetGroup (Maybe Text)

-- | The group that was requested. Contains the name of the group, the ARN
--   of the group, the filter expression, and the insight configuration
--   assigned to the group.
getGroupResponse_group :: Lens' GetGroupResponse (Maybe Group)

-- | The response's http status code.
getGroupResponse_httpStatus :: Lens' GetGroupResponse Int

-- | Pagination token.
getSamplingStatisticSummaries_nextToken :: Lens' GetSamplingStatisticSummaries (Maybe Text)

-- | Information about the number of requests instrumented for each
--   sampling rule.
getSamplingStatisticSummariesResponse_samplingStatisticSummaries :: Lens' GetSamplingStatisticSummariesResponse (Maybe [SamplingStatisticSummary])

-- | Pagination token.
getSamplingStatisticSummariesResponse_nextToken :: Lens' GetSamplingStatisticSummariesResponse (Maybe Text)

-- | The response's http status code.
getSamplingStatisticSummariesResponse_httpStatus :: Lens' GetSamplingStatisticSummariesResponse Int

-- | A map that contains one or more tag keys and tag values to attach to
--   an X-Ray sampling rule. For more information about ways to use tags,
--   see <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use.</li>
--   </ul>
createSamplingRule_tags :: Lens' CreateSamplingRule (Maybe [Tag])

-- | The rule definition.
createSamplingRule_samplingRule :: Lens' CreateSamplingRule SamplingRule

-- | The saved rule definition and metadata.
createSamplingRuleResponse_samplingRuleRecord :: Lens' CreateSamplingRuleResponse (Maybe SamplingRuleRecord)

-- | The response's http status code.
createSamplingRuleResponse_httpStatus :: Lens' CreateSamplingRuleResponse Int

-- | A list of names for the alias, including the canonical name.
alias_names :: Lens' Alias (Maybe [Text])

-- | The canonical name of the alias.
alias_name :: Lens' Alias (Maybe Text)

-- | The type of the alias.
alias_type :: Lens' Alias (Maybe Text)

-- | Value for a Number annotation.
annotationValue_numberValue :: Lens' AnnotationValue (Maybe Double)

-- | Value for a String annotation.
annotationValue_stringValue :: Lens' AnnotationValue (Maybe Text)

-- | Value for a Boolean annotation.
annotationValue_booleanValue :: Lens' AnnotationValue (Maybe Bool)

-- | Undocumented member.
anomalousService_serviceId :: Lens' AnomalousService (Maybe ServiceId)

-- | The name of a corresponding Availability Zone.
availabilityZoneDetail_name :: Lens' AvailabilityZoneDetail (Maybe Text)

backendConnectionErrors_otherCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_timeoutCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_hTTPCode5XXCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_connectionRefusedCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_hTTPCode4XXCount :: Lens' BackendConnectionErrors (Maybe Int)

backendConnectionErrors_unknownHostCount :: Lens' BackendConnectionErrors (Maybe Int)

-- | The start time of the first segment on the edge.
edge_startTime :: Lens' Edge (Maybe UTCTime)

-- | Aliases for the edge.
edge_aliases :: Lens' Edge (Maybe [Alias])

-- | A histogram that maps the spread of client response times on an edge.
edge_responseTimeHistogram :: Lens' Edge (Maybe [HistogramEntry])

-- | Identifier of the edge. Unique within a service map.
edge_referenceId :: Lens' Edge (Maybe Int)

-- | The end time of the last segment on the edge.
edge_endTime :: Lens' Edge (Maybe UTCTime)

-- | Response statistics for segments on the edge.
edge_summaryStatistics :: Lens' Edge (Maybe EdgeStatistics)

-- | Information about requests that failed with a 5xx Server Error status
--   code.
edgeStatistics_faultStatistics :: Lens' EdgeStatistics (Maybe FaultStatistics)

-- | The number of requests that completed with a 2xx Success status code.
edgeStatistics_okCount :: Lens' EdgeStatistics (Maybe Integer)

-- | The aggregate response time of completed requests.
edgeStatistics_totalResponseTime :: Lens' EdgeStatistics (Maybe Double)

-- | Information about requests that failed with a 4xx Client Error status
--   code.
edgeStatistics_errorStatistics :: Lens' EdgeStatistics (Maybe ErrorStatistics)

-- | The total number of completed requests.
edgeStatistics_totalCount :: Lens' EdgeStatistics (Maybe Integer)

-- | The encryption status. While the status is <tt>UPDATING</tt>, X-Ray
--   may encrypt data with a combination of the new and old settings.
encryptionConfig_status :: Lens' EncryptionConfig (Maybe EncryptionStatus)

-- | The ID of the KMS key used for encryption, if applicable.
encryptionConfig_keyId :: Lens' EncryptionConfig (Maybe Text)

-- | The type of encryption. Set to <tt>KMS</tt> for encryption with KMS
--   keys. Set to <tt>NONE</tt> for default encryption.
encryptionConfig_type :: Lens' EncryptionConfig (Maybe EncryptionType)

-- | A flag that denotes that the root cause impacts the trace client.
errorRootCause_clientImpacting :: Lens' ErrorRootCause (Maybe Bool)

-- | A list of services corresponding to an error. A service identifies a
--   segment and it contains a name, account ID, type, and inferred flag.
errorRootCause_services :: Lens' ErrorRootCause (Maybe [ErrorRootCauseService])

-- | The types and messages of the exceptions.
errorRootCauseEntity_exceptions :: Lens' ErrorRootCauseEntity (Maybe [RootCauseException])

-- | A flag that denotes a remote subsegment.
errorRootCauseEntity_remote :: Lens' ErrorRootCauseEntity (Maybe Bool)

-- | The name of the entity.
errorRootCauseEntity_name :: Lens' ErrorRootCauseEntity (Maybe Text)

-- | The path of root cause entities found on the service.
errorRootCauseService_entityPath :: Lens' ErrorRootCauseService (Maybe [ErrorRootCauseEntity])

-- | The account ID associated to the service.
errorRootCauseService_accountId :: Lens' ErrorRootCauseService (Maybe Text)

-- | A collection of associated service names.
errorRootCauseService_names :: Lens' ErrorRootCauseService (Maybe [Text])

-- | The service name.
errorRootCauseService_name :: Lens' ErrorRootCauseService (Maybe Text)

-- | A Boolean value indicating if the service is inferred from the trace.
errorRootCauseService_inferred :: Lens' ErrorRootCauseService (Maybe Bool)

-- | The type associated to the service.
errorRootCauseService_type :: Lens' ErrorRootCauseService (Maybe Text)

-- | The number of requests that failed with untracked 4xx Client Error
--   status codes.
errorStatistics_otherCount :: Lens' ErrorStatistics (Maybe Integer)

-- | The number of requests that failed with a 419 throttling status code.
errorStatistics_throttleCount :: Lens' ErrorStatistics (Maybe Integer)

-- | The total number of requests that failed with a 4xx Client Error
--   status code.
errorStatistics_totalCount :: Lens' ErrorStatistics (Maybe Integer)

-- | A flag that denotes that the root cause impacts the trace client.
faultRootCause_clientImpacting :: Lens' FaultRootCause (Maybe Bool)

-- | A list of corresponding services. A service identifies a segment and
--   it contains a name, account ID, type, and inferred flag.
faultRootCause_services :: Lens' FaultRootCause (Maybe [FaultRootCauseService])

-- | The types and messages of the exceptions.
faultRootCauseEntity_exceptions :: Lens' FaultRootCauseEntity (Maybe [RootCauseException])

-- | A flag that denotes a remote subsegment.
faultRootCauseEntity_remote :: Lens' FaultRootCauseEntity (Maybe Bool)

-- | The name of the entity.
faultRootCauseEntity_name :: Lens' FaultRootCauseEntity (Maybe Text)

-- | The path of root cause entities found on the service.
faultRootCauseService_entityPath :: Lens' FaultRootCauseService (Maybe [FaultRootCauseEntity])

-- | The account ID associated to the service.
faultRootCauseService_accountId :: Lens' FaultRootCauseService (Maybe Text)

-- | A collection of associated service names.
faultRootCauseService_names :: Lens' FaultRootCauseService (Maybe [Text])

-- | The service name.
faultRootCauseService_name :: Lens' FaultRootCauseService (Maybe Text)

-- | A Boolean value indicating if the service is inferred from the trace.
faultRootCauseService_inferred :: Lens' FaultRootCauseService (Maybe Bool)

-- | The type associated to the service.
faultRootCauseService_type :: Lens' FaultRootCauseService (Maybe Text)

-- | The number of requests that failed with untracked 5xx Server Error
--   status codes.
faultStatistics_otherCount :: Lens' FaultStatistics (Maybe Integer)

-- | The total number of requests that failed with a 5xx Server Error
--   status code.
faultStatistics_totalCount :: Lens' FaultStatistics (Maybe Integer)

-- | The lower limit of fault counts for a service.
forecastStatistics_faultCountLow :: Lens' ForecastStatistics (Maybe Integer)

-- | The upper limit of fault counts for a service.
forecastStatistics_faultCountHigh :: Lens' ForecastStatistics (Maybe Integer)

-- | The filter expression defining the parameters to include traces.
group_filterExpression :: Lens' Group (Maybe Text)

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications through Amazon EventBridge for the group.</li>
--   </ul>
group_insightsConfiguration :: Lens' Group (Maybe InsightsConfiguration)

-- | The Amazon Resource Name (ARN) of the group generated based on the
--   GroupName.
group_groupARN :: Lens' Group (Maybe Text)

-- | The unique case-sensitive name of the group.
group_groupName :: Lens' Group (Maybe Text)

-- | The filter expression defining the parameters to include traces.
groupSummary_filterExpression :: Lens' GroupSummary (Maybe Text)

-- | The structure containing configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications. Notifications can only be enabled on a group
--   with InsightsEnabled set to true.</li>
--   </ul>
groupSummary_insightsConfiguration :: Lens' GroupSummary (Maybe InsightsConfiguration)

-- | The ARN of the group generated based on the GroupName.
groupSummary_groupARN :: Lens' GroupSummary (Maybe Text)

-- | The unique case-sensitive name of the group.
groupSummary_groupName :: Lens' GroupSummary (Maybe Text)

-- | The prevalence of the entry.
histogramEntry_count :: Lens' HistogramEntry (Maybe Int)

-- | The value of the entry.
histogramEntry_value :: Lens' HistogramEntry (Maybe Double)

-- | The request method.
http_httpMethod :: Lens' Http (Maybe Text)

-- | The response status.
http_httpStatus :: Lens' Http (Maybe Int)

-- | The IP address of the requestor.
http_clientIp :: Lens' Http (Maybe Text)

-- | The request's user agent string.
http_userAgent :: Lens' Http (Maybe Text)

-- | The request URL.
http_httpURL :: Lens' Http (Maybe Text)

-- | A brief description of the insight.
insight_summary :: Lens' Insight (Maybe Text)

-- | The current state of the insight.
insight_state :: Lens' Insight (Maybe InsightState)

-- | The time, in Unix seconds, at which the insight began.
insight_startTime :: Lens' Insight (Maybe UTCTime)

-- | The insights unique identifier.
insight_insightId :: Lens' Insight (Maybe Text)

-- | The categories that label and describe the type of insight.
insight_categories :: Lens' Insight (Maybe [InsightCategory])

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insight_rootCauseServiceRequestImpactStatistics :: Lens' Insight (Maybe RequestImpactStatistics)

-- | The service within the insight that is most impacted by the incident.
insight_topAnomalousServices :: Lens' Insight (Maybe [AnomalousService])

-- | Undocumented member.
insight_rootCauseServiceId :: Lens' Insight (Maybe ServiceId)

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insight_clientRequestImpactStatistics :: Lens' Insight (Maybe RequestImpactStatistics)

-- | The time, in Unix seconds, at which the insight ended.
insight_endTime :: Lens' Insight (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
insight_groupARN :: Lens' Insight (Maybe Text)

-- | The name of the group that the insight belongs to.
insight_groupName :: Lens' Insight (Maybe Text)

-- | A brief description of the event.
insightEvent_summary :: Lens' InsightEvent (Maybe Text)

-- | The time, in Unix seconds, at which the event was recorded.
insightEvent_eventTime :: Lens' InsightEvent (Maybe UTCTime)

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insightEvent_rootCauseServiceRequestImpactStatistics :: Lens' InsightEvent (Maybe RequestImpactStatistics)

-- | The service during the event that is most impacted by the incident.
insightEvent_topAnomalousServices :: Lens' InsightEvent (Maybe [AnomalousService])

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insightEvent_clientRequestImpactStatistics :: Lens' InsightEvent (Maybe RequestImpactStatistics)

-- | Identifier of the edge. Unique within a service map.
insightImpactGraphEdge_referenceId :: Lens' InsightImpactGraphEdge (Maybe Int)

-- | Identifier for the service. Unique within the service map.
insightImpactGraphService_referenceId :: Lens' InsightImpactGraphService (Maybe Int)

-- | Identifier of the Amazon Web Services account in which the service
--   runs.
insightImpactGraphService_accountId :: Lens' InsightImpactGraphService (Maybe Text)

-- | A list of names for the service, including the canonical name.
insightImpactGraphService_names :: Lens' InsightImpactGraphService (Maybe [Text])

-- | The canonical name of the service.
insightImpactGraphService_name :: Lens' InsightImpactGraphService (Maybe Text)

-- | Identifier for the service. Unique within the service map.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, AWS::EC2::Instance for an application running
--   on Amazon EC2 or AWS::DynamoDB::Table for an Amazon DynamoDB table
--   that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>remote - A downstream service of indeterminate type.</li>
--   </ul>
insightImpactGraphService_type :: Lens' InsightImpactGraphService (Maybe Text)

-- | Connections to downstream services.
insightImpactGraphService_edges :: Lens' InsightImpactGraphService (Maybe [InsightImpactGraphEdge])

-- | A brief description of the insight.
insightSummary_summary :: Lens' InsightSummary (Maybe Text)

-- | The current state of the insight.
insightSummary_state :: Lens' InsightSummary (Maybe InsightState)

-- | The time, in Unix seconds, at which the insight began.
insightSummary_startTime :: Lens' InsightSummary (Maybe UTCTime)

-- | The insights unique identifier.
insightSummary_insightId :: Lens' InsightSummary (Maybe Text)

-- | Categories The categories that label and describe the type of insight.
insightSummary_categories :: Lens' InsightSummary (Maybe [InsightCategory])

-- | The impact statistics of the root cause service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insightSummary_rootCauseServiceRequestImpactStatistics :: Lens' InsightSummary (Maybe RequestImpactStatistics)

-- | The service within the insight that is most impacted by the incident.
insightSummary_topAnomalousServices :: Lens' InsightSummary (Maybe [AnomalousService])

-- | Undocumented member.
insightSummary_rootCauseServiceId :: Lens' InsightSummary (Maybe ServiceId)

-- | The impact statistics of the client side service. This includes the
--   number of requests to the client service and whether the requests were
--   faults or okay.
insightSummary_clientRequestImpactStatistics :: Lens' InsightSummary (Maybe RequestImpactStatistics)

-- | The time, in Unix seconds, at which the insight ended.
insightSummary_endTime :: Lens' InsightSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
insightSummary_groupARN :: Lens' InsightSummary (Maybe Text)

-- | The name of the group that the insight belongs to.
insightSummary_groupName :: Lens' InsightSummary (Maybe Text)

-- | The time, in Unix seconds, that the insight was last updated.
insightSummary_lastUpdateTime :: Lens' InsightSummary (Maybe UTCTime)

-- | Set the NotificationsEnabled value to true to enable insights
--   notifications. Notifications can only be enabled on a group with
--   InsightsEnabled set to true.
insightsConfiguration_notificationsEnabled :: Lens' InsightsConfiguration (Maybe Bool)

-- | Set the InsightsEnabled value to true to enable insights or false to
--   disable insights.
insightsConfiguration_insightsEnabled :: Lens' InsightsConfiguration (Maybe Bool)

-- | The ID of a corresponding EC2 instance.
instanceIdDetail_id :: Lens' InstanceIdDetail (Maybe Text)

-- | The number of successful requests.
requestImpactStatistics_okCount :: Lens' RequestImpactStatistics (Maybe Integer)

-- | The number of requests that have resulted in a fault,
requestImpactStatistics_faultCount :: Lens' RequestImpactStatistics (Maybe Integer)

-- | The total number of requests to the service.
requestImpactStatistics_totalCount :: Lens' RequestImpactStatistics (Maybe Integer)

-- | The ARN of a corresponding resource.
resourceARNDetail_arn :: Lens' ResourceARNDetail (Maybe Text)

-- | A flag that denotes that the root cause impacts the trace client.
responseTimeRootCause_clientImpacting :: Lens' ResponseTimeRootCause (Maybe Bool)

-- | A list of corresponding services. A service identifies a segment and
--   contains a name, account ID, type, and inferred flag.
responseTimeRootCause_services :: Lens' ResponseTimeRootCause (Maybe [ResponseTimeRootCauseService])

-- | A flag that denotes a remote subsegment.
responseTimeRootCauseEntity_remote :: Lens' ResponseTimeRootCauseEntity (Maybe Bool)

-- | The type and messages of the exceptions.
responseTimeRootCauseEntity_coverage :: Lens' ResponseTimeRootCauseEntity (Maybe Double)

-- | The name of the entity.
responseTimeRootCauseEntity_name :: Lens' ResponseTimeRootCauseEntity (Maybe Text)

-- | The path of root cause entities found on the service.
responseTimeRootCauseService_entityPath :: Lens' ResponseTimeRootCauseService (Maybe [ResponseTimeRootCauseEntity])

-- | The account ID associated to the service.
responseTimeRootCauseService_accountId :: Lens' ResponseTimeRootCauseService (Maybe Text)

-- | A collection of associated service names.
responseTimeRootCauseService_names :: Lens' ResponseTimeRootCauseService (Maybe [Text])

-- | The service name.
responseTimeRootCauseService_name :: Lens' ResponseTimeRootCauseService (Maybe Text)

-- | A Boolean value indicating if the service is inferred from the trace.
responseTimeRootCauseService_inferred :: Lens' ResponseTimeRootCauseService (Maybe Bool)

-- | The type associated to the service.
responseTimeRootCauseService_type :: Lens' ResponseTimeRootCauseService (Maybe Text)

-- | The name of the exception.
rootCauseException_name :: Lens' RootCauseException (Maybe Text)

-- | The message of the exception.
rootCauseException_message :: Lens' RootCauseException (Maybe Text)

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
samplingRule_ruleName :: Lens' SamplingRule (Maybe Text)

-- | Matches attributes derived from the request.
samplingRule_attributes :: Lens' SamplingRule (Maybe (HashMap Text Text))

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
samplingRule_ruleARN :: Lens' SamplingRule (Maybe Text)

-- | Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
samplingRule_resourceARN :: Lens' SamplingRule Text

-- | The priority of the sampling rule.
samplingRule_priority :: Lens' SamplingRule Natural

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
samplingRule_fixedRate :: Lens' SamplingRule Double

-- | A fixed number of matching requests to instrument per second, prior to
--   applying the fixed rate. The reservoir is not used directly by
--   services, but applies to all services using the rule collectively.
samplingRule_reservoirSize :: Lens' SamplingRule Natural

-- | Matches the <tt>name</tt> that the service uses to identify itself in
--   segments.
samplingRule_serviceName :: Lens' SamplingRule Text

-- | Matches the <tt>origin</tt> that the service uses to identify its type
--   in segments.
samplingRule_serviceType :: Lens' SamplingRule Text

-- | Matches the hostname from a request URL.
samplingRule_host :: Lens' SamplingRule Text

-- | Matches the HTTP method of a request.
samplingRule_hTTPMethod :: Lens' SamplingRule Text

-- | Matches the path from a request URL.
samplingRule_uRLPath :: Lens' SamplingRule Text

-- | The version of the sampling rule format (<tt>1</tt>).
samplingRule_version :: Lens' SamplingRule Natural

-- | When the rule was last modified.
samplingRuleRecord_modifiedAt :: Lens' SamplingRuleRecord (Maybe UTCTime)

-- | The sampling rule.
samplingRuleRecord_samplingRule :: Lens' SamplingRuleRecord (Maybe SamplingRule)

-- | When the rule was created.
samplingRuleRecord_createdAt :: Lens' SamplingRuleRecord (Maybe UTCTime)

-- | Matches the HTTP method of a request.
samplingRuleUpdate_hTTPMethod :: Lens' SamplingRuleUpdate (Maybe Text)

-- | The priority of the sampling rule.
samplingRuleUpdate_priority :: Lens' SamplingRuleUpdate (Maybe Int)

-- | The name of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
samplingRuleUpdate_ruleName :: Lens' SamplingRuleUpdate (Maybe Text)

-- | A fixed number of matching requests to instrument per second, prior to
--   applying the fixed rate. The reservoir is not used directly by
--   services, but applies to all services using the rule collectively.
samplingRuleUpdate_reservoirSize :: Lens' SamplingRuleUpdate (Maybe Int)

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
samplingRuleUpdate_fixedRate :: Lens' SamplingRuleUpdate (Maybe Double)

-- | Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
samplingRuleUpdate_resourceARN :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Matches attributes derived from the request.
samplingRuleUpdate_attributes :: Lens' SamplingRuleUpdate (Maybe (HashMap Text Text))

-- | Matches the <tt>name</tt> that the service uses to identify itself in
--   segments.
samplingRuleUpdate_serviceName :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Matches the <tt>origin</tt> that the service uses to identify its type
--   in segments.
samplingRuleUpdate_serviceType :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Matches the hostname from a request URL.
samplingRuleUpdate_host :: Lens' SamplingRuleUpdate (Maybe Text)

-- | The ARN of the sampling rule. Specify a rule by either name or ARN,
--   but not both.
samplingRuleUpdate_ruleARN :: Lens' SamplingRuleUpdate (Maybe Text)

-- | Matches the path from a request URL.
samplingRuleUpdate_uRLPath :: Lens' SamplingRuleUpdate (Maybe Text)

-- | The number of requests that matched the rule.
samplingStatisticSummary_requestCount :: Lens' SamplingStatisticSummary (Maybe Int)

-- | The number of requests recorded with borrowed reservoir quota.
samplingStatisticSummary_borrowCount :: Lens' SamplingStatisticSummary (Maybe Int)

-- | The name of the sampling rule.
samplingStatisticSummary_ruleName :: Lens' SamplingStatisticSummary (Maybe Text)

-- | The start time of the reporting window.
samplingStatisticSummary_timestamp :: Lens' SamplingStatisticSummary (Maybe UTCTime)

-- | The number of requests recorded.
samplingStatisticSummary_sampledCount :: Lens' SamplingStatisticSummary (Maybe Int)

-- | The number of requests recorded with borrowed reservoir quota.
samplingStatisticsDocument_borrowCount :: Lens' SamplingStatisticsDocument (Maybe Natural)

-- | The name of the sampling rule.
samplingStatisticsDocument_ruleName :: Lens' SamplingStatisticsDocument Text

-- | A unique identifier for the service in hexadecimal.
samplingStatisticsDocument_clientID :: Lens' SamplingStatisticsDocument Text

-- | The current time.
samplingStatisticsDocument_timestamp :: Lens' SamplingStatisticsDocument UTCTime

-- | The number of requests that matched the rule.
samplingStatisticsDocument_requestCount :: Lens' SamplingStatisticsDocument Natural

-- | The number of requests recorded.
samplingStatisticsDocument_sampledCount :: Lens' SamplingStatisticsDocument Natural

-- | The value of a sampling rule.
samplingStrategy_value :: Lens' SamplingStrategy (Maybe Double)

-- | The name of a sampling rule.
samplingStrategy_name :: Lens' SamplingStrategy (Maybe SamplingStrategyName)

-- | The number of requests per second that X-Ray allocated for this
--   service.
samplingTargetDocument_reservoirQuota :: Lens' SamplingTargetDocument (Maybe Int)

-- | The name of the sampling rule.
samplingTargetDocument_ruleName :: Lens' SamplingTargetDocument (Maybe Text)

-- | The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
samplingTargetDocument_fixedRate :: Lens' SamplingTargetDocument (Maybe Double)

-- | The number of seconds for the service to wait before getting sampling
--   targets again.
samplingTargetDocument_interval :: Lens' SamplingTargetDocument (Maybe Int)

-- | When the reservoir quota expires.
samplingTargetDocument_reservoirQuotaTTL :: Lens' SamplingTargetDocument (Maybe UTCTime)

-- | The segment document.
segment_document :: Lens' Segment (Maybe Text)

-- | The segment's ID.
segment_id :: Lens' Segment (Maybe Text)

serviceId_accountId :: Lens' ServiceId (Maybe Text)

serviceId_names :: Lens' ServiceId (Maybe [Text])

serviceId_name :: Lens' ServiceId (Maybe Text)

serviceId_type :: Lens' ServiceId (Maybe Text)

-- | The service's state.
serviceInfo_state :: Lens' ServiceInfo (Maybe Text)

-- | The start time of the first segment that the service generated.
serviceInfo_startTime :: Lens' ServiceInfo (Maybe UTCTime)

-- | Indicates that the service was the first service to process a request.
serviceInfo_root :: Lens' ServiceInfo (Maybe Bool)

-- | A histogram that maps the spread of service response times.
serviceInfo_responseTimeHistogram :: Lens' ServiceInfo (Maybe [HistogramEntry])

-- | A histogram that maps the spread of service durations.
serviceInfo_durationHistogram :: Lens' ServiceInfo (Maybe [HistogramEntry])

-- | Identifier for the service. Unique within the service map.
serviceInfo_referenceId :: Lens' ServiceInfo (Maybe Int)

-- | Identifier of the Amazon Web Services account in which the service
--   runs.
serviceInfo_accountId :: Lens' ServiceInfo (Maybe Text)

-- | A list of names for the service, including the canonical name.
serviceInfo_names :: Lens' ServiceInfo (Maybe [Text])

-- | The canonical name of the service.
serviceInfo_name :: Lens' ServiceInfo (Maybe Text)

-- | The end time of the last segment that the service generated.
serviceInfo_endTime :: Lens' ServiceInfo (Maybe UTCTime)

-- | The type of service.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, <tt>AWS::EC2::Instance</tt> for an application
--   running on Amazon EC2 or <tt>AWS::DynamoDB::Table</tt> for an Amazon
--   DynamoDB table that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, <tt>AWS::DynamoDB</tt> for downstream calls to
--   Amazon DynamoDB that didn't target a specific table.</li>
--   <li><tt>client</tt> - Represents the clients that sent requests to a
--   root service.</li>
--   <li><tt>remote</tt> - A downstream service of indeterminate type.</li>
--   </ul>
serviceInfo_type :: Lens' ServiceInfo (Maybe Text)

-- | Connections to downstream services.
serviceInfo_edges :: Lens' ServiceInfo (Maybe [Edge])

-- | Aggregated statistics for the service.
serviceInfo_summaryStatistics :: Lens' ServiceInfo (Maybe ServiceStatistics)

-- | Information about requests that failed with a 5xx Server Error status
--   code.
serviceStatistics_faultStatistics :: Lens' ServiceStatistics (Maybe FaultStatistics)

-- | The number of requests that completed with a 2xx Success status code.
serviceStatistics_okCount :: Lens' ServiceStatistics (Maybe Integer)

-- | The aggregate response time of completed requests.
serviceStatistics_totalResponseTime :: Lens' ServiceStatistics (Maybe Double)

-- | Information about requests that failed with a 4xx Client Error status
--   code.
serviceStatistics_errorStatistics :: Lens' ServiceStatistics (Maybe ErrorStatistics)

-- | The total number of completed requests.
serviceStatistics_totalCount :: Lens' ServiceStatistics (Maybe Integer)

-- | A tag key, such as <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot
--   be empty. The key can be a maximum of 128 characters, and can contain
--   only Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt>
tag_key :: Lens' Tag Text

-- | An optional tag value, such as <tt>Production</tt> or
--   <tt>test-only</tt>. The value can be a maximum of 255 characters, and
--   contain only Unicode letters, numbers, or separators, or the following
--   special characters: <tt>+ - = . _ : /</tt>
tag_value :: Lens' Tag Text

telemetryRecord_segmentsReceivedCount :: Lens' TelemetryRecord (Maybe Int)

telemetryRecord_segmentsSentCount :: Lens' TelemetryRecord (Maybe Int)

telemetryRecord_segmentsSpilloverCount :: Lens' TelemetryRecord (Maybe Int)

telemetryRecord_segmentsRejectedCount :: Lens' TelemetryRecord (Maybe Int)

telemetryRecord_backendConnectionErrors :: Lens' TelemetryRecord (Maybe BackendConnectionErrors)

telemetryRecord_timestamp :: Lens' TelemetryRecord UTCTime

-- | Undocumented member.
timeSeriesServiceStatistics_serviceSummaryStatistics :: Lens' TimeSeriesServiceStatistics (Maybe ServiceStatistics)

-- | The response time histogram for the selected entities.
timeSeriesServiceStatistics_responseTimeHistogram :: Lens' TimeSeriesServiceStatistics (Maybe [HistogramEntry])

-- | Undocumented member.
timeSeriesServiceStatistics_edgeSummaryStatistics :: Lens' TimeSeriesServiceStatistics (Maybe EdgeStatistics)

-- | The forecasted high and low fault count values.
timeSeriesServiceStatistics_serviceForecastStatistics :: Lens' TimeSeriesServiceStatistics (Maybe ForecastStatistics)

-- | Timestamp of the window for which statistics are aggregated.
timeSeriesServiceStatistics_timestamp :: Lens' TimeSeriesServiceStatistics (Maybe UTCTime)

-- | LimitExceeded is set to true when the trace has exceeded one of the
--   defined quotas. For more information about quotas, see <a>Amazon Web
--   Services X-Ray endpoints and quotas</a>.
trace_limitExceeded :: Lens' Trace (Maybe Bool)

-- | The unique identifier for the request that generated the trace's
--   segments and subsegments.
trace_id :: Lens' Trace (Maybe Text)

-- | Segment documents for the segments and subsegments that comprise the
--   trace.
trace_segments :: Lens' Trace (Maybe [Segment])

-- | The length of time in seconds between the start time of the root
--   segment and the end time of the last segment that completed.
trace_duration :: Lens' Trace (Maybe Double)

-- | Annotations from the trace's segment documents.
traceSummary_annotations :: Lens' TraceSummary (Maybe (HashMap Text [ValueWithServiceIds]))

-- | One or more of the segment documents has a 429 throttling error.
traceSummary_hasThrottle :: Lens' TraceSummary (Maybe Bool)

-- | Users from the trace's segment documents.
traceSummary_users :: Lens' TraceSummary (Maybe [TraceUser])

-- | The root of a trace.
traceSummary_entryPoint :: Lens' TraceSummary (Maybe ServiceId)

-- | The root segment document has a 500 series error.
traceSummary_hasFault :: Lens' TraceSummary (Maybe Bool)

-- | Service IDs from the trace's segment documents.
traceSummary_serviceIds :: Lens' TraceSummary (Maybe [ServiceId])

-- | The matched time stamp of a defined event.
traceSummary_matchedEventTime :: Lens' TraceSummary (Maybe UTCTime)

-- | One or more of the segment documents is in progress.
traceSummary_isPartial :: Lens' TraceSummary (Maybe Bool)

-- | A collection of ErrorRootCause structures corresponding to the trace
--   segments.
traceSummary_errorRootCauses :: Lens' TraceSummary (Maybe [ErrorRootCause])

-- | A list of resource ARNs for any resource corresponding to the trace
--   segments.
traceSummary_resourceARNs :: Lens' TraceSummary (Maybe [ResourceARNDetail])

-- | A list of Availability Zones for any zone corresponding to the trace
--   segments.
traceSummary_availabilityZones :: Lens' TraceSummary (Maybe [AvailabilityZoneDetail])

-- | A list of EC2 instance IDs for any instance corresponding to the trace
--   segments.
traceSummary_instanceIds :: Lens' TraceSummary (Maybe [InstanceIdDetail])

-- | A collection of ResponseTimeRootCause structures corresponding to the
--   trace segments.
traceSummary_responseTimeRootCauses :: Lens' TraceSummary (Maybe [ResponseTimeRootCause])

-- | The root segment document has a 400 series error.
traceSummary_hasError :: Lens' TraceSummary (Maybe Bool)

-- | The unique identifier for the request that generated the trace's
--   segments and subsegments.
traceSummary_id :: Lens' TraceSummary (Maybe Text)

-- | Information about the HTTP request served by the trace.
traceSummary_http :: Lens' TraceSummary (Maybe Http)

-- | The revision number of a trace.
traceSummary_revision :: Lens' TraceSummary (Maybe Int)

-- | The length of time in seconds between the start time of the root
--   segment and the end time of the last segment that completed.
traceSummary_duration :: Lens' TraceSummary (Maybe Double)

-- | A collection of FaultRootCause structures corresponding to the trace
--   segments.
traceSummary_faultRootCauses :: Lens' TraceSummary (Maybe [FaultRootCause])

-- | The length of time in seconds between the start and end times of the
--   root segment. If the service performs work asynchronously, the
--   response time measures the time before the response is sent to the
--   user, while the duration measures the amount of time before the last
--   traced activity completes.
traceSummary_responseTime :: Lens' TraceSummary (Maybe Double)

-- | Services that the user's request hit.
traceUser_serviceIds :: Lens' TraceUser (Maybe [ServiceId])

-- | The user's name.
traceUser_userName :: Lens' TraceUser (Maybe Text)

-- | The name of the sampling rule.
unprocessedStatistics_ruleName :: Lens' UnprocessedStatistics (Maybe Text)

-- | The error code.
unprocessedStatistics_errorCode :: Lens' UnprocessedStatistics (Maybe Text)

-- | The error message.
unprocessedStatistics_message :: Lens' UnprocessedStatistics (Maybe Text)

-- | The error that caused processing to fail.
unprocessedTraceSegment_errorCode :: Lens' UnprocessedTraceSegment (Maybe Text)

-- | The segment's ID.
unprocessedTraceSegment_id :: Lens' UnprocessedTraceSegment (Maybe Text)

-- | The error message.
unprocessedTraceSegment_message :: Lens' UnprocessedTraceSegment (Maybe Text)

-- | Services to which the annotation applies.
valueWithServiceIds_serviceIds :: Lens' ValueWithServiceIds (Maybe [ServiceId])

-- | Values of the annotation.
valueWithServiceIds_annotationValue :: Lens' ValueWithServiceIds (Maybe AnnotationValue)


module Amazonka.XRay.Waiters


-- | Derived from API version <tt>2016-04-12</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Web Services X-Ray provides APIs for managing debug traces and
--   retrieving service maps and other data created by processing those
--   traces.
module Amazonka.XRay

-- | API version <tt>2016-04-12</tt> of the Amazon X-Ray SDK configuration.
defaultService :: Service

-- | The request is missing required parameters or has invalid parameters.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the maximum number of sampling rules.
_RuleLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request exceeds the maximum number of requests per second.
_ThrottledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have exceeded the maximum number of tags you can apply to this
--   resource.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource was not found. Verify that the name or Amazon Resource
--   Name (ARN) of the resource is correct.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newPutEncryptionConfig</a> smart constructor.
data PutEncryptionConfig
PutEncryptionConfig' :: Maybe Text -> EncryptionType -> PutEncryptionConfig

-- | Create a value of <a>PutEncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyId:PutEncryptionConfig'</a>,
--   <a>putEncryptionConfig_keyId</a> - An Amazon Web Services KMS key in
--   one of the following formats:
--   
--   <ul>
--   <li><b>Alias</b> - The name of the key. For example,
--   <tt>alias/MyKey</tt>.</li>
--   <li><b>Key ID</b> - The KMS key ID of the key. For example,
--   <tt>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</tt>. Amazon Web Services
--   X-Ray does not support asymmetric KMS keys.</li>
--   <li><b>ARN</b> - The full Amazon Resource Name of the key ID or alias.
--   For example,
--   <tt>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</tt>.
--   Use this format to specify a key in a different account.</li>
--   </ul>
--   
--   Omit this key if you set <tt>Type</tt> to <tt>NONE</tt>.
--   
--   <a>$sel:type':PutEncryptionConfig'</a>,
--   <a>putEncryptionConfig_type</a> - The type of encryption. Set to
--   <tt>KMS</tt> to use your own key for encryption. Set to <tt>NONE</tt>
--   for default encryption.
newPutEncryptionConfig :: EncryptionType -> PutEncryptionConfig

-- | <i>See:</i> <a>newPutEncryptionConfigResponse</a> smart constructor.
data PutEncryptionConfigResponse
PutEncryptionConfigResponse' :: Maybe EncryptionConfig -> Int -> PutEncryptionConfigResponse

-- | Create a value of <a>PutEncryptionConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionConfig:PutEncryptionConfigResponse'</a>,
--   <a>putEncryptionConfigResponse_encryptionConfig</a> - The new
--   encryption configuration.
--   
--   <a>$sel:httpStatus:PutEncryptionConfigResponse'</a>,
--   <a>putEncryptionConfigResponse_httpStatus</a> - The response's http
--   status code.
newPutEncryptionConfigResponse :: Int -> PutEncryptionConfigResponse

-- | <i>See:</i> <a>newGetServiceGraph</a> smart constructor.
data GetServiceGraph
GetServiceGraph' :: Maybe Text -> Maybe Text -> Maybe Text -> POSIX -> POSIX -> GetServiceGraph

-- | Create a value of <a>GetServiceGraph</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetServiceGraph'</a>,
--   <a>getServiceGraph_nextToken</a> - Pagination token.
--   
--   <a>$sel:groupARN:GetServiceGraph'</a>, <a>getServiceGraph_groupARN</a>
--   - The Amazon Resource Name (ARN) of a group based on which you want to
--   generate a graph.
--   
--   <a>$sel:groupName:GetServiceGraph'</a>,
--   <a>getServiceGraph_groupName</a> - The name of a group based on which
--   you want to generate a graph.
--   
--   <a>$sel:startTime:GetServiceGraph'</a>,
--   <a>getServiceGraph_startTime</a> - The start of the time frame for
--   which to generate a graph.
--   
--   <a>$sel:endTime:GetServiceGraph'</a>, <a>getServiceGraph_endTime</a> -
--   The end of the timeframe for which to generate a graph.
newGetServiceGraph :: UTCTime -> UTCTime -> GetServiceGraph

-- | <i>See:</i> <a>newGetServiceGraphResponse</a> smart constructor.
data GetServiceGraphResponse
GetServiceGraphResponse' :: Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe [ServiceInfo] -> Int -> GetServiceGraphResponse

-- | Create a value of <a>GetServiceGraphResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containsOldGroupVersions:GetServiceGraphResponse'</a>,
--   <a>getServiceGraphResponse_containsOldGroupVersions</a> - A flag
--   indicating whether the group's filter expression has been consistent,
--   or if the returned service graph may show traces from an older version
--   of the group's filter expression.
--   
--   <a>$sel:startTime:GetServiceGraph'</a>,
--   <a>getServiceGraphResponse_startTime</a> - The start of the time frame
--   for which the graph was generated.
--   
--   <a>$sel:nextToken:GetServiceGraph'</a>,
--   <a>getServiceGraphResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:endTime:GetServiceGraph'</a>,
--   <a>getServiceGraphResponse_endTime</a> - The end of the time frame for
--   which the graph was generated.
--   
--   <a>$sel:services:GetServiceGraphResponse'</a>,
--   <a>getServiceGraphResponse_services</a> - The services that have
--   processed a traced request during the specified time frame.
--   
--   <a>$sel:httpStatus:GetServiceGraphResponse'</a>,
--   <a>getServiceGraphResponse_httpStatus</a> - The response's http status
--   code.
newGetServiceGraphResponse :: Int -> GetServiceGraphResponse

-- | <i>See:</i> <a>newGetSamplingTargets</a> smart constructor.
data GetSamplingTargets
GetSamplingTargets' :: [SamplingStatisticsDocument] -> GetSamplingTargets

-- | Create a value of <a>GetSamplingTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:samplingStatisticsDocuments:GetSamplingTargets'</a>,
--   <a>getSamplingTargets_samplingStatisticsDocuments</a> - Information
--   about rules that the service is using to sample requests.
newGetSamplingTargets :: GetSamplingTargets

-- | <i>See:</i> <a>newGetSamplingTargetsResponse</a> smart constructor.
data GetSamplingTargetsResponse
GetSamplingTargetsResponse' :: Maybe [UnprocessedStatistics] -> Maybe POSIX -> Maybe [SamplingTargetDocument] -> Int -> GetSamplingTargetsResponse

-- | Create a value of <a>GetSamplingTargetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedStatistics:GetSamplingTargetsResponse'</a>,
--   <a>getSamplingTargetsResponse_unprocessedStatistics</a> - Information
--   about <a>SamplingStatisticsDocument</a> that X-Ray could not process.
--   
--   <a>$sel:lastRuleModification:GetSamplingTargetsResponse'</a>,
--   <a>getSamplingTargetsResponse_lastRuleModification</a> - The last time
--   a user changed the sampling rule configuration. If the sampling rule
--   configuration changed since the service last retrieved it, the service
--   should call <a>GetSamplingRules</a> to get the latest version.
--   
--   <a>$sel:samplingTargetDocuments:GetSamplingTargetsResponse'</a>,
--   <a>getSamplingTargetsResponse_samplingTargetDocuments</a> - Updated
--   rules that the service should use to sample requests.
--   
--   <a>$sel:httpStatus:GetSamplingTargetsResponse'</a>,
--   <a>getSamplingTargetsResponse_httpStatus</a> - The response's http
--   status code.
newGetSamplingTargetsResponse :: Int -> GetSamplingTargetsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - A pagination token. If multiple
--   pages of results are returned, use the <tt>NextToken</tt> value
--   returned with the current page of results as the value of this
--   parameter to get the next page of results.
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The Amazon Resource Number
--   (ARN) of an X-Ray group or sampling rule.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - A pagination token. If
--   multiple pages of results are returned, use the <tt>NextToken</tt>
--   value returned with the current page of results to get the next page
--   of results.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tags, as key and
--   value pairs, that is associated with the specified X-Ray group or
--   sampling rule.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newGetTraceSummaries</a> smart constructor.
data GetTraceSummaries
GetTraceSummaries' :: Maybe Text -> Maybe Text -> Maybe TimeRangeType -> Maybe SamplingStrategy -> Maybe Bool -> POSIX -> POSIX -> GetTraceSummaries

-- | Create a value of <a>GetTraceSummaries</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterExpression:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_filterExpression</a> - Specify a filter
--   expression to retrieve trace summaries for services or requests that
--   meet certain requirements.
--   
--   <a>$sel:nextToken:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_nextToken</a> - Specify the pagination token
--   returned by a previous request to retrieve the next page of results.
--   
--   <a>$sel:timeRangeType:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_timeRangeType</a> - A parameter to indicate
--   whether to query trace summaries by TraceId or Event time.
--   
--   <a>$sel:samplingStrategy:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_samplingStrategy</a> - A parameter to indicate
--   whether to enable sampling on trace summaries. Input parameters are
--   Name and Value.
--   
--   <a>$sel:sampling:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_sampling</a> - Set to <tt>true</tt> to get
--   summaries for only a subset of available traces.
--   
--   <a>$sel:startTime:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_startTime</a> - The start of the time frame for
--   which to retrieve traces.
--   
--   <a>$sel:endTime:GetTraceSummaries'</a>,
--   <a>getTraceSummaries_endTime</a> - The end of the time frame for which
--   to retrieve traces.
newGetTraceSummaries :: UTCTime -> UTCTime -> GetTraceSummaries

-- | <i>See:</i> <a>newGetTraceSummariesResponse</a> smart constructor.
data GetTraceSummariesResponse
GetTraceSummariesResponse' :: Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe [TraceSummary] -> Int -> GetTraceSummariesResponse

-- | Create a value of <a>GetTraceSummariesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tracesProcessedCount:GetTraceSummariesResponse'</a>,
--   <a>getTraceSummariesResponse_tracesProcessedCount</a> - The total
--   number of traces processed, including traces that did not match the
--   specified filter expression.
--   
--   <a>$sel:nextToken:GetTraceSummaries'</a>,
--   <a>getTraceSummariesResponse_nextToken</a> - If the requested time
--   frame contained more than one page of results, you can use this token
--   to retrieve the next page. The first page contains the most recent
--   results, closest to the end of the time frame.
--   
--   <a>$sel:approximateTime:GetTraceSummariesResponse'</a>,
--   <a>getTraceSummariesResponse_approximateTime</a> - The start time of
--   this page of results.
--   
--   <a>$sel:traceSummaries:GetTraceSummariesResponse'</a>,
--   <a>getTraceSummariesResponse_traceSummaries</a> - Trace IDs and
--   annotations for traces that were found in the specified time frame.
--   
--   <a>$sel:httpStatus:GetTraceSummariesResponse'</a>,
--   <a>getTraceSummariesResponse_httpStatus</a> - The response's http
--   status code.
newGetTraceSummariesResponse :: Int -> GetTraceSummariesResponse

-- | <i>See:</i> <a>newPutTraceSegments</a> smart constructor.
data PutTraceSegments
PutTraceSegments' :: [Text] -> PutTraceSegments

-- | Create a value of <a>PutTraceSegments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:traceSegmentDocuments:PutTraceSegments'</a>,
--   <a>putTraceSegments_traceSegmentDocuments</a> - A string containing a
--   JSON document defining one or more segments or subsegments.
newPutTraceSegments :: PutTraceSegments

-- | <i>See:</i> <a>newPutTraceSegmentsResponse</a> smart constructor.
data PutTraceSegmentsResponse
PutTraceSegmentsResponse' :: Maybe [UnprocessedTraceSegment] -> Int -> PutTraceSegmentsResponse

-- | Create a value of <a>PutTraceSegmentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedTraceSegments:PutTraceSegmentsResponse'</a>,
--   <a>putTraceSegmentsResponse_unprocessedTraceSegments</a> - Segments
--   that failed processing.
--   
--   <a>$sel:httpStatus:PutTraceSegmentsResponse'</a>,
--   <a>putTraceSegmentsResponse_httpStatus</a> - The response's http
--   status code.
newPutTraceSegmentsResponse :: Int -> PutTraceSegmentsResponse

-- | <i>See:</i> <a>newBatchGetTraces</a> smart constructor.
data BatchGetTraces
BatchGetTraces' :: Maybe Text -> [Text] -> BatchGetTraces

-- | Create a value of <a>BatchGetTraces</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchGetTraces'</a>, <a>batchGetTraces_nextToken</a>
--   - Pagination token.
--   
--   <a>$sel:traceIds:BatchGetTraces'</a>, <a>batchGetTraces_traceIds</a> -
--   Specify the trace IDs of requests for which to retrieve segments.
newBatchGetTraces :: BatchGetTraces

-- | <i>See:</i> <a>newBatchGetTracesResponse</a> smart constructor.
data BatchGetTracesResponse
BatchGetTracesResponse' :: Maybe Text -> Maybe [Trace] -> Maybe [Text] -> Int -> BatchGetTracesResponse

-- | Create a value of <a>BatchGetTracesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:BatchGetTraces'</a>,
--   <a>batchGetTracesResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:traces:BatchGetTracesResponse'</a>,
--   <a>batchGetTracesResponse_traces</a> - Full traces for the specified
--   requests.
--   
--   <a>$sel:unprocessedTraceIds:BatchGetTracesResponse'</a>,
--   <a>batchGetTracesResponse_unprocessedTraceIds</a> - Trace IDs of
--   requests that haven't been processed.
--   
--   <a>$sel:httpStatus:BatchGetTracesResponse'</a>,
--   <a>batchGetTracesResponse_httpStatus</a> - The response's http status
--   code.
newBatchGetTracesResponse :: Int -> BatchGetTracesResponse

-- | <i>See:</i> <a>newGetInsight</a> smart constructor.
data GetInsight
GetInsight' :: Text -> GetInsight

-- | Create a value of <a>GetInsight</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:insightId:GetInsight'</a>, <a>getInsight_insightId</a> - The
--   insight's unique identifier. Use the GetInsightSummaries action to
--   retrieve an InsightId.
newGetInsight :: Text -> GetInsight

-- | <i>See:</i> <a>newGetInsightResponse</a> smart constructor.
data GetInsightResponse
GetInsightResponse' :: Maybe Insight -> Int -> GetInsightResponse

-- | Create a value of <a>GetInsightResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:insight:GetInsightResponse'</a>,
--   <a>getInsightResponse_insight</a> - The summary information of an
--   insight.
--   
--   <a>$sel:httpStatus:GetInsightResponse'</a>,
--   <a>getInsightResponse_httpStatus</a> - The response's http status
--   code.
newGetInsightResponse :: Int -> GetInsightResponse

-- | <i>See:</i> <a>newGetTimeSeriesServiceStatistics</a> smart
--   constructor.
data GetTimeSeriesServiceStatistics
GetTimeSeriesServiceStatistics' :: Maybe Text -> Maybe Int -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> POSIX -> POSIX -> GetTimeSeriesServiceStatistics

-- | Create a value of <a>GetTimeSeriesServiceStatistics</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitySelectorExpression:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_entitySelectorExpression</a> - A
--   filter expression defining entities that will be aggregated for
--   statistics. Supports ID, service, and edge functions. If no selector
--   expression is specified, edge statistics are returned.
--   
--   <a>$sel:period:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_period</a> - Aggregation period in
--   seconds.
--   
--   <a>$sel:forecastStatistics:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_forecastStatistics</a> - The
--   forecasted high and low fault count values. Forecast enabled requests
--   require the EntitySelectorExpression ID be provided.
--   
--   <a>$sel:nextToken:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_nextToken</a> - Pagination token.
--   
--   <a>$sel:groupARN:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_groupARN</a> - The Amazon Resource
--   Name (ARN) of the group for which to pull statistics from.
--   
--   <a>$sel:groupName:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_groupName</a> - The case-sensitive
--   name of the group for which to pull statistics from.
--   
--   <a>$sel:startTime:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_startTime</a> - The start of the
--   time frame for which to aggregate statistics.
--   
--   <a>$sel:endTime:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatistics_endTime</a> - The end of the time
--   frame for which to aggregate statistics.
newGetTimeSeriesServiceStatistics :: UTCTime -> UTCTime -> GetTimeSeriesServiceStatistics

-- | <i>See:</i> <a>newGetTimeSeriesServiceStatisticsResponse</a> smart
--   constructor.
data GetTimeSeriesServiceStatisticsResponse
GetTimeSeriesServiceStatisticsResponse' :: Maybe Bool -> Maybe [TimeSeriesServiceStatistics] -> Maybe Text -> Int -> GetTimeSeriesServiceStatisticsResponse

-- | Create a value of <a>GetTimeSeriesServiceStatisticsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:containsOldGroupVersions:GetTimeSeriesServiceStatisticsResponse'</a>,
--   <a>getTimeSeriesServiceStatisticsResponse_containsOldGroupVersions</a>
--   - A flag indicating whether or not a group's filter expression has
--   been consistent, or if a returned aggregation might show statistics
--   from an older version of the group's filter expression.
--   
--   
--   <a>$sel:timeSeriesServiceStatistics:GetTimeSeriesServiceStatisticsResponse'</a>,
--   <a>getTimeSeriesServiceStatisticsResponse_timeSeriesServiceStatistics</a>
--   - The collection of statistics.
--   
--   <a>$sel:nextToken:GetTimeSeriesServiceStatistics'</a>,
--   <a>getTimeSeriesServiceStatisticsResponse_nextToken</a> - Pagination
--   token.
--   
--   <a>$sel:httpStatus:GetTimeSeriesServiceStatisticsResponse'</a>,
--   <a>getTimeSeriesServiceStatisticsResponse_httpStatus</a> - The
--   response's http status code.
newGetTimeSeriesServiceStatisticsResponse :: Int -> GetTimeSeriesServiceStatisticsResponse

-- | <i>See:</i> <a>newGetEncryptionConfig</a> smart constructor.
data GetEncryptionConfig
GetEncryptionConfig' :: GetEncryptionConfig

-- | Create a value of <a>GetEncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetEncryptionConfig :: GetEncryptionConfig

-- | <i>See:</i> <a>newGetEncryptionConfigResponse</a> smart constructor.
data GetEncryptionConfigResponse
GetEncryptionConfigResponse' :: Maybe EncryptionConfig -> Int -> GetEncryptionConfigResponse

-- | Create a value of <a>GetEncryptionConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionConfig:GetEncryptionConfigResponse'</a>,
--   <a>getEncryptionConfigResponse_encryptionConfig</a> - The encryption
--   configuration document.
--   
--   <a>$sel:httpStatus:GetEncryptionConfigResponse'</a>,
--   <a>getEncryptionConfigResponse_httpStatus</a> - The response's http
--   status code.
newGetEncryptionConfigResponse :: Int -> GetEncryptionConfigResponse

-- | <i>See:</i> <a>newGetInsightImpactGraph</a> smart constructor.
data GetInsightImpactGraph
GetInsightImpactGraph' :: Maybe Text -> Text -> POSIX -> POSIX -> GetInsightImpactGraph

-- | Create a value of <a>GetInsightImpactGraph</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraph_nextToken</a> - Specify the pagination token
--   returned by a previous request to retrieve the next page of results.
--   
--   <a>$sel:insightId:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraph_insightId</a> - The insight's unique
--   identifier. Use the GetInsightSummaries action to retrieve an
--   InsightId.
--   
--   <a>$sel:startTime:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraph_startTime</a> - The estimated start time of
--   the insight, in Unix time seconds. The StartTime is inclusive of the
--   value provided and can't be more than 30 days old.
--   
--   <a>$sel:endTime:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraph_endTime</a> - The estimated end time of the
--   insight, in Unix time seconds. The EndTime is exclusive of the value
--   provided. The time range between the start time and end time can't be
--   more than six hours.
newGetInsightImpactGraph :: Text -> UTCTime -> UTCTime -> GetInsightImpactGraph

-- | <i>See:</i> <a>newGetInsightImpactGraphResponse</a> smart constructor.
data GetInsightImpactGraphResponse
GetInsightImpactGraphResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe [InsightImpactGraphService] -> Int -> GetInsightImpactGraphResponse

-- | Create a value of <a>GetInsightImpactGraphResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceGraphStartTime:GetInsightImpactGraphResponse'</a>,
--   <a>getInsightImpactGraphResponse_serviceGraphStartTime</a> - The time,
--   in Unix seconds, at which the service graph started.
--   
--   <a>$sel:startTime:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraphResponse_startTime</a> - The provided start
--   time.
--   
--   <a>$sel:insightId:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraphResponse_insightId</a> - The insight's unique
--   identifier.
--   
--   <a>$sel:nextToken:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraphResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:endTime:GetInsightImpactGraph'</a>,
--   <a>getInsightImpactGraphResponse_endTime</a> - The provided end time.
--   
--   <a>$sel:serviceGraphEndTime:GetInsightImpactGraphResponse'</a>,
--   <a>getInsightImpactGraphResponse_serviceGraphEndTime</a> - The time,
--   in Unix seconds, at which the service graph ended.
--   
--   <a>$sel:services:GetInsightImpactGraphResponse'</a>,
--   <a>getInsightImpactGraphResponse_services</a> - The Amazon Web
--   Services instrumented services related to the insight.
--   
--   <a>$sel:httpStatus:GetInsightImpactGraphResponse'</a>,
--   <a>getInsightImpactGraphResponse_httpStatus</a> - The response's http
--   status code.
newGetInsightImpactGraphResponse :: Int -> GetInsightImpactGraphResponse

-- | <i>See:</i> <a>newUpdateSamplingRule</a> smart constructor.
data UpdateSamplingRule
UpdateSamplingRule' :: SamplingRuleUpdate -> UpdateSamplingRule

-- | Create a value of <a>UpdateSamplingRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:samplingRuleUpdate:UpdateSamplingRule'</a>,
--   <a>updateSamplingRule_samplingRuleUpdate</a> - The rule and fields to
--   change.
newUpdateSamplingRule :: SamplingRuleUpdate -> UpdateSamplingRule

-- | <i>See:</i> <a>newUpdateSamplingRuleResponse</a> smart constructor.
data UpdateSamplingRuleResponse
UpdateSamplingRuleResponse' :: Maybe SamplingRuleRecord -> Int -> UpdateSamplingRuleResponse

-- | Create a value of <a>UpdateSamplingRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:samplingRuleRecord:UpdateSamplingRuleResponse'</a>,
--   <a>updateSamplingRuleResponse_samplingRuleRecord</a> - The updated
--   rule definition and metadata.
--   
--   <a>$sel:httpStatus:UpdateSamplingRuleResponse'</a>,
--   <a>updateSamplingRuleResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSamplingRuleResponse :: Int -> UpdateSamplingRuleResponse

-- | <i>See:</i> <a>newDeleteSamplingRule</a> smart constructor.
data DeleteSamplingRule
DeleteSamplingRule' :: Maybe Text -> Maybe Text -> DeleteSamplingRule

-- | Create a value of <a>DeleteSamplingRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleName:DeleteSamplingRule'</a>,
--   <a>deleteSamplingRule_ruleName</a> - The name of the sampling rule.
--   Specify a rule by either name or ARN, but not both.
--   
--   <a>$sel:ruleARN:DeleteSamplingRule'</a>,
--   <a>deleteSamplingRule_ruleARN</a> - The ARN of the sampling rule.
--   Specify a rule by either name or ARN, but not both.
newDeleteSamplingRule :: DeleteSamplingRule

-- | <i>See:</i> <a>newDeleteSamplingRuleResponse</a> smart constructor.
data DeleteSamplingRuleResponse
DeleteSamplingRuleResponse' :: Maybe SamplingRuleRecord -> Int -> DeleteSamplingRuleResponse

-- | Create a value of <a>DeleteSamplingRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:samplingRuleRecord:DeleteSamplingRuleResponse'</a>,
--   <a>deleteSamplingRuleResponse_samplingRuleRecord</a> - The deleted
--   rule definition and metadata.
--   
--   <a>$sel:httpStatus:DeleteSamplingRuleResponse'</a>,
--   <a>deleteSamplingRuleResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSamplingRuleResponse :: Int -> DeleteSamplingRuleResponse

-- | <i>See:</i> <a>newGetInsightEvents</a> smart constructor.
data GetInsightEvents
GetInsightEvents' :: Maybe Text -> Maybe Natural -> Text -> GetInsightEvents

-- | Create a value of <a>GetInsightEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetInsightEvents'</a>,
--   <a>getInsightEvents_nextToken</a> - Specify the pagination token
--   returned by a previous request to retrieve the next page of events.
--   
--   <a>$sel:maxResults:GetInsightEvents'</a>,
--   <a>getInsightEvents_maxResults</a> - Used to retrieve at most the
--   specified value of events.
--   
--   <a>$sel:insightId:GetInsightEvents'</a>,
--   <a>getInsightEvents_insightId</a> - The insight's unique identifier.
--   Use the GetInsightSummaries action to retrieve an InsightId.
newGetInsightEvents :: Text -> GetInsightEvents

-- | <i>See:</i> <a>newGetInsightEventsResponse</a> smart constructor.
data GetInsightEventsResponse
GetInsightEventsResponse' :: Maybe [InsightEvent] -> Maybe Text -> Int -> GetInsightEventsResponse

-- | Create a value of <a>GetInsightEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:insightEvents:GetInsightEventsResponse'</a>,
--   <a>getInsightEventsResponse_insightEvents</a> - A detailed description
--   of the event. This includes the time of the event, client and root
--   cause impact statistics, and the top anomalous service at the time of
--   the event.
--   
--   <a>$sel:nextToken:GetInsightEvents'</a>,
--   <a>getInsightEventsResponse_nextToken</a> - Use this token to retrieve
--   the next page of insight events.
--   
--   <a>$sel:httpStatus:GetInsightEventsResponse'</a>,
--   <a>getInsightEventsResponse_httpStatus</a> - The response's http
--   status code.
newGetInsightEventsResponse :: Int -> GetInsightEventsResponse

-- | <i>See:</i> <a>newGetGroups</a> smart constructor.
data GetGroups
GetGroups' :: Maybe Text -> GetGroups

-- | Create a value of <a>GetGroups</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetGroups'</a>, <a>getGroups_nextToken</a> -
--   Pagination token.
newGetGroups :: GetGroups

-- | <i>See:</i> <a>newGetGroupsResponse</a> smart constructor.
data GetGroupsResponse
GetGroupsResponse' :: Maybe [GroupSummary] -> Maybe Text -> Int -> GetGroupsResponse

-- | Create a value of <a>GetGroupsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:GetGroupsResponse'</a>, <a>getGroupsResponse_groups</a>
--   - The collection of all active groups.
--   
--   <a>$sel:nextToken:GetGroups'</a>, <a>getGroupsResponse_nextToken</a> -
--   Pagination token.
--   
--   <a>$sel:httpStatus:GetGroupsResponse'</a>,
--   <a>getGroupsResponse_httpStatus</a> - The response's http status code.
newGetGroupsResponse :: Int -> GetGroupsResponse

-- | <i>See:</i> <a>newGetInsightSummaries</a> smart constructor.
data GetInsightSummaries
GetInsightSummaries' :: Maybe [InsightState] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> POSIX -> POSIX -> GetInsightSummaries

-- | Create a value of <a>GetInsightSummaries</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_states</a> - The list of insight states.
--   
--   <a>$sel:nextToken:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_nextToken</a> - Pagination token.
--   
--   <a>$sel:groupARN:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_groupARN</a> - The Amazon Resource Name (ARN)
--   of the group. Required if the GroupName isn't provided.
--   
--   <a>$sel:groupName:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_groupName</a> - The name of the group. Required
--   if the GroupARN isn't provided.
--   
--   <a>$sel:maxResults:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_maxResults</a> - The maximum number of results
--   to display.
--   
--   <a>$sel:startTime:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_startTime</a> - The beginning of the time frame
--   in which the insights started. The start time can't be more than 30
--   days old.
--   
--   <a>$sel:endTime:GetInsightSummaries'</a>,
--   <a>getInsightSummaries_endTime</a> - The end of the time frame in
--   which the insights ended. The end time can't be more than 30 days old.
newGetInsightSummaries :: UTCTime -> UTCTime -> GetInsightSummaries

-- | <i>See:</i> <a>newGetInsightSummariesResponse</a> smart constructor.
data GetInsightSummariesResponse
GetInsightSummariesResponse' :: Maybe [InsightSummary] -> Maybe Text -> Int -> GetInsightSummariesResponse

-- | Create a value of <a>GetInsightSummariesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:insightSummaries:GetInsightSummariesResponse'</a>,
--   <a>getInsightSummariesResponse_insightSummaries</a> - The summary of
--   each insight within the group matching the provided filters. The
--   summary contains the InsightID, start and end time, the root cause
--   service, the root cause and client impact statistics, the top
--   anomalous services, and the status of the insight.
--   
--   <a>$sel:nextToken:GetInsightSummaries'</a>,
--   <a>getInsightSummariesResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:httpStatus:GetInsightSummariesResponse'</a>,
--   <a>getInsightSummariesResponse_httpStatus</a> - The response's http
--   status code.
newGetInsightSummariesResponse :: Int -> GetInsightSummariesResponse

-- | <i>See:</i> <a>newPutTelemetryRecords</a> smart constructor.
data PutTelemetryRecords
PutTelemetryRecords' :: Maybe Text -> Maybe Text -> Maybe Text -> [TelemetryRecord] -> PutTelemetryRecords

-- | Create a value of <a>PutTelemetryRecords</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:PutTelemetryRecords'</a>,
--   <a>putTelemetryRecords_hostname</a> -
--   
--   <a>$sel:eC2InstanceId:PutTelemetryRecords'</a>,
--   <a>putTelemetryRecords_eC2InstanceId</a> -
--   
--   <a>$sel:resourceARN:PutTelemetryRecords'</a>,
--   <a>putTelemetryRecords_resourceARN</a> -
--   
--   <a>$sel:telemetryRecords:PutTelemetryRecords'</a>,
--   <a>putTelemetryRecords_telemetryRecords</a> -
newPutTelemetryRecords :: PutTelemetryRecords

-- | <i>See:</i> <a>newPutTelemetryRecordsResponse</a> smart constructor.
data PutTelemetryRecordsResponse
PutTelemetryRecordsResponse' :: Int -> PutTelemetryRecordsResponse

-- | Create a value of <a>PutTelemetryRecordsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutTelemetryRecordsResponse'</a>,
--   <a>putTelemetryRecordsResponse_httpStatus</a> - The response's http
--   status code.
newPutTelemetryRecordsResponse :: Int -> PutTelemetryRecordsResponse

-- | <i>See:</i> <a>newGetSamplingRules</a> smart constructor.
data GetSamplingRules
GetSamplingRules' :: Maybe Text -> GetSamplingRules

-- | Create a value of <a>GetSamplingRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetSamplingRules'</a>,
--   <a>getSamplingRules_nextToken</a> - Pagination token.
newGetSamplingRules :: GetSamplingRules

-- | <i>See:</i> <a>newGetSamplingRulesResponse</a> smart constructor.
data GetSamplingRulesResponse
GetSamplingRulesResponse' :: Maybe [SamplingRuleRecord] -> Maybe Text -> Int -> GetSamplingRulesResponse

-- | Create a value of <a>GetSamplingRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:samplingRuleRecords:GetSamplingRulesResponse'</a>,
--   <a>getSamplingRulesResponse_samplingRuleRecords</a> - Rule definitions
--   and metadata.
--   
--   <a>$sel:nextToken:GetSamplingRules'</a>,
--   <a>getSamplingRulesResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:httpStatus:GetSamplingRulesResponse'</a>,
--   <a>getSamplingRulesResponse_httpStatus</a> - The response's http
--   status code.
newGetSamplingRulesResponse :: Int -> GetSamplingRulesResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The Amazon Resource Number (ARN) of an X-Ray group or sampling rule.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A map that
--   contains one or more tag keys and tag values to attach to an X-Ray
--   group or sampling rule. For more information about ways to use tags,
--   see <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use. You cannot edit or delete system tags.</li>
--   </ul>
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newGetTraceGraph</a> smart constructor.
data GetTraceGraph
GetTraceGraph' :: Maybe Text -> [Text] -> GetTraceGraph

-- | Create a value of <a>GetTraceGraph</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetTraceGraph'</a>, <a>getTraceGraph_nextToken</a> -
--   Pagination token.
--   
--   <a>$sel:traceIds:GetTraceGraph'</a>, <a>getTraceGraph_traceIds</a> -
--   Trace IDs of requests for which to generate a service graph.
newGetTraceGraph :: GetTraceGraph

-- | <i>See:</i> <a>newGetTraceGraphResponse</a> smart constructor.
data GetTraceGraphResponse
GetTraceGraphResponse' :: Maybe Text -> Maybe [ServiceInfo] -> Int -> GetTraceGraphResponse

-- | Create a value of <a>GetTraceGraphResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetTraceGraph'</a>,
--   <a>getTraceGraphResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:services:GetTraceGraphResponse'</a>,
--   <a>getTraceGraphResponse_services</a> - The services that have
--   processed one of the specified requests.
--   
--   <a>$sel:httpStatus:GetTraceGraphResponse'</a>,
--   <a>getTraceGraphResponse_httpStatus</a> - The response's http status
--   code.
newGetTraceGraphResponse :: Int -> GetTraceGraphResponse

-- | <i>See:</i> <a>newCreateGroup</a> smart constructor.
data CreateGroup
CreateGroup' :: Maybe Text -> Maybe InsightsConfiguration -> Maybe [Tag] -> Text -> CreateGroup

-- | Create a value of <a>CreateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterExpression:CreateGroup'</a>,
--   <a>createGroup_filterExpression</a> - The filter expression defining
--   criteria by which to group traces.
--   
--   <a>$sel:insightsConfiguration:CreateGroup'</a>,
--   <a>createGroup_insightsConfiguration</a> - The structure containing
--   configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the new group or false to disable insights for the new group.</li>
--   <li>The NotifcationsEnabled boolean can be set to true to enable
--   insights notifications for the new group. Notifications may only be
--   enabled on a group with InsightsEnabled set to true.</li>
--   </ul>
--   
--   <a>$sel:tags:CreateGroup'</a>, <a>createGroup_tags</a> - A map that
--   contains one or more tag keys and tag values to attach to an X-Ray
--   group. For more information about ways to use tags, see <a>Tagging
--   Amazon Web Services resources</a> in the <i>Amazon Web Services
--   General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use.</li>
--   </ul>
--   
--   <a>$sel:groupName:CreateGroup'</a>, <a>createGroup_groupName</a> - The
--   case-sensitive name of the new group. Default is a reserved name and
--   names must be unique.
newCreateGroup :: Text -> CreateGroup

-- | <i>See:</i> <a>newCreateGroupResponse</a> smart constructor.
data CreateGroupResponse
CreateGroupResponse' :: Maybe Group -> Int -> CreateGroupResponse

-- | Create a value of <a>CreateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':CreateGroupResponse'</a>,
--   <a>createGroupResponse_group</a> - The group that was created.
--   Contains the name of the group that was created, the Amazon Resource
--   Name (ARN) of the group that was generated based on the group name,
--   the filter expression, and the insight configuration that was assigned
--   to the group.
--   
--   <a>$sel:httpStatus:CreateGroupResponse'</a>,
--   <a>createGroupResponse_httpStatus</a> - The response's http status
--   code.
newCreateGroupResponse :: Int -> CreateGroupResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The Amazon Resource Number (ARN) of
--   an X-Ray group or sampling rule.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   Keys for one or more tags that you want to remove from an X-Ray group
--   or sampling rule.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newDeleteGroup</a> smart constructor.
data DeleteGroup
DeleteGroup' :: Maybe Text -> Maybe Text -> DeleteGroup

-- | Create a value of <a>DeleteGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupARN:DeleteGroup'</a>, <a>deleteGroup_groupARN</a> - The
--   ARN of the group that was generated on creation.
--   
--   <a>$sel:groupName:DeleteGroup'</a>, <a>deleteGroup_groupName</a> - The
--   case-sensitive name of the group.
newDeleteGroup :: DeleteGroup

-- | <i>See:</i> <a>newDeleteGroupResponse</a> smart constructor.
data DeleteGroupResponse
DeleteGroupResponse' :: Int -> DeleteGroupResponse

-- | Create a value of <a>DeleteGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteGroupResponse'</a>,
--   <a>deleteGroupResponse_httpStatus</a> - The response's http status
--   code.
newDeleteGroupResponse :: Int -> DeleteGroupResponse

-- | <i>See:</i> <a>newUpdateGroup</a> smart constructor.
data UpdateGroup
UpdateGroup' :: Maybe Text -> Maybe InsightsConfiguration -> Maybe Text -> Maybe Text -> UpdateGroup

-- | Create a value of <a>UpdateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterExpression:UpdateGroup'</a>,
--   <a>updateGroup_filterExpression</a> - The updated filter expression
--   defining criteria by which to group traces.
--   
--   <a>$sel:insightsConfiguration:UpdateGroup'</a>,
--   <a>updateGroup_insightsConfiguration</a> - The structure containing
--   configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotifcationsEnabled boolean can be set to true to enable
--   insights notifications for the group. Notifications can only be
--   enabled on a group with InsightsEnabled set to true.</li>
--   </ul>
--   
--   <a>$sel:groupARN:UpdateGroup'</a>, <a>updateGroup_groupARN</a> - The
--   ARN that was generated upon creation.
--   
--   <a>$sel:groupName:UpdateGroup'</a>, <a>updateGroup_groupName</a> - The
--   case-sensitive name of the group.
newUpdateGroup :: UpdateGroup

-- | <i>See:</i> <a>newUpdateGroupResponse</a> smart constructor.
data UpdateGroupResponse
UpdateGroupResponse' :: Maybe Group -> Int -> UpdateGroupResponse

-- | Create a value of <a>UpdateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':UpdateGroupResponse'</a>,
--   <a>updateGroupResponse_group</a> - The group that was updated.
--   Contains the name of the group that was updated, the ARN of the group
--   that was updated, the updated filter expression, and the updated
--   insight configuration assigned to the group.
--   
--   <a>$sel:httpStatus:UpdateGroupResponse'</a>,
--   <a>updateGroupResponse_httpStatus</a> - The response's http status
--   code.
newUpdateGroupResponse :: Int -> UpdateGroupResponse

-- | <i>See:</i> <a>newGetGroup</a> smart constructor.
data GetGroup
GetGroup' :: Maybe Text -> Maybe Text -> GetGroup

-- | Create a value of <a>GetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupARN:GetGroup'</a>, <a>getGroup_groupARN</a> - The ARN of
--   the group that was generated on creation.
--   
--   <a>$sel:groupName:GetGroup'</a>, <a>getGroup_groupName</a> - The
--   case-sensitive name of the group.
newGetGroup :: GetGroup

-- | <i>See:</i> <a>newGetGroupResponse</a> smart constructor.
data GetGroupResponse
GetGroupResponse' :: Maybe Group -> Int -> GetGroupResponse

-- | Create a value of <a>GetGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':GetGroupResponse'</a>, <a>getGroupResponse_group</a> -
--   The group that was requested. Contains the name of the group, the ARN
--   of the group, the filter expression, and the insight configuration
--   assigned to the group.
--   
--   <a>$sel:httpStatus:GetGroupResponse'</a>,
--   <a>getGroupResponse_httpStatus</a> - The response's http status code.
newGetGroupResponse :: Int -> GetGroupResponse

-- | <i>See:</i> <a>newGetSamplingStatisticSummaries</a> smart constructor.
data GetSamplingStatisticSummaries
GetSamplingStatisticSummaries' :: Maybe Text -> GetSamplingStatisticSummaries

-- | Create a value of <a>GetSamplingStatisticSummaries</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetSamplingStatisticSummaries'</a>,
--   <a>getSamplingStatisticSummaries_nextToken</a> - Pagination token.
newGetSamplingStatisticSummaries :: GetSamplingStatisticSummaries

-- | <i>See:</i> <a>newGetSamplingStatisticSummariesResponse</a> smart
--   constructor.
data GetSamplingStatisticSummariesResponse
GetSamplingStatisticSummariesResponse' :: Maybe [SamplingStatisticSummary] -> Maybe Text -> Int -> GetSamplingStatisticSummariesResponse

-- | Create a value of <a>GetSamplingStatisticSummariesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:samplingStatisticSummaries:GetSamplingStatisticSummariesResponse'</a>,
--   <a>getSamplingStatisticSummariesResponse_samplingStatisticSummaries</a>
--   - Information about the number of requests instrumented for each
--   sampling rule.
--   
--   <a>$sel:nextToken:GetSamplingStatisticSummaries'</a>,
--   <a>getSamplingStatisticSummariesResponse_nextToken</a> - Pagination
--   token.
--   
--   <a>$sel:httpStatus:GetSamplingStatisticSummariesResponse'</a>,
--   <a>getSamplingStatisticSummariesResponse_httpStatus</a> - The
--   response's http status code.
newGetSamplingStatisticSummariesResponse :: Int -> GetSamplingStatisticSummariesResponse

-- | <i>See:</i> <a>newCreateSamplingRule</a> smart constructor.
data CreateSamplingRule
CreateSamplingRule' :: Maybe [Tag] -> SamplingRule -> CreateSamplingRule

-- | Create a value of <a>CreateSamplingRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateSamplingRule'</a>, <a>createSamplingRule_tags</a> -
--   A map that contains one or more tag keys and tag values to attach to
--   an X-Ray sampling rule. For more information about ways to use tags,
--   see <a>Tagging Amazon Web Services resources</a> in the <i>Amazon Web
--   Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Maximum tag key length: 128 Unicode characters</li>
--   <li>Maximum tag value length: 256 Unicode characters</li>
--   <li>Valid values for key and value: a-z, A-Z, 0-9, space, and the
--   following characters: _ . : / = + - and @</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use.</li>
--   </ul>
--   
--   <a>$sel:samplingRule:CreateSamplingRule'</a>,
--   <a>createSamplingRule_samplingRule</a> - The rule definition.
newCreateSamplingRule :: SamplingRule -> CreateSamplingRule

-- | <i>See:</i> <a>newCreateSamplingRuleResponse</a> smart constructor.
data CreateSamplingRuleResponse
CreateSamplingRuleResponse' :: Maybe SamplingRuleRecord -> Int -> CreateSamplingRuleResponse

-- | Create a value of <a>CreateSamplingRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:samplingRuleRecord:CreateSamplingRuleResponse'</a>,
--   <a>createSamplingRuleResponse_samplingRuleRecord</a> - The saved rule
--   definition and metadata.
--   
--   <a>$sel:httpStatus:CreateSamplingRuleResponse'</a>,
--   <a>createSamplingRuleResponse_httpStatus</a> - The response's http
--   status code.
newCreateSamplingRuleResponse :: Int -> CreateSamplingRuleResponse
newtype EncryptionStatus
EncryptionStatus' :: Text -> EncryptionStatus
[fromEncryptionStatus] :: EncryptionStatus -> Text
pattern EncryptionStatus_ACTIVE :: EncryptionStatus
pattern EncryptionStatus_UPDATING :: EncryptionStatus
newtype EncryptionType
EncryptionType' :: Text -> EncryptionType
[fromEncryptionType] :: EncryptionType -> Text
pattern EncryptionType_KMS :: EncryptionType
pattern EncryptionType_NONE :: EncryptionType
newtype InsightCategory
InsightCategory' :: Text -> InsightCategory
[fromInsightCategory] :: InsightCategory -> Text
pattern InsightCategory_FAULT :: InsightCategory
newtype InsightState
InsightState' :: Text -> InsightState
[fromInsightState] :: InsightState -> Text
pattern InsightState_ACTIVE :: InsightState
pattern InsightState_CLOSED :: InsightState
newtype SamplingStrategyName
SamplingStrategyName' :: Text -> SamplingStrategyName
[fromSamplingStrategyName] :: SamplingStrategyName -> Text
pattern SamplingStrategyName_FixedRate :: SamplingStrategyName
pattern SamplingStrategyName_PartialScan :: SamplingStrategyName
newtype TimeRangeType
TimeRangeType' :: Text -> TimeRangeType
[fromTimeRangeType] :: TimeRangeType -> Text
pattern TimeRangeType_Event :: TimeRangeType
pattern TimeRangeType_TraceId :: TimeRangeType

-- | An alias for an edge.
--   
--   <i>See:</i> <a>newAlias</a> smart constructor.
data Alias
Alias' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Alias

-- | Create a value of <a>Alias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:Alias'</a>, <a>alias_names</a> - A list of names for the
--   alias, including the canonical name.
--   
--   <a>$sel:name:Alias'</a>, <a>alias_name</a> - The canonical name of the
--   alias.
--   
--   <a>$sel:type':Alias'</a>, <a>alias_type</a> - The type of the alias.
newAlias :: Alias

-- | Value of a segment annotation. Has one of three value types: Number,
--   Boolean, or String.
--   
--   <i>See:</i> <a>newAnnotationValue</a> smart constructor.
data AnnotationValue
AnnotationValue' :: Maybe Double -> Maybe Text -> Maybe Bool -> AnnotationValue

-- | Create a value of <a>AnnotationValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberValue:AnnotationValue'</a>,
--   <a>annotationValue_numberValue</a> - Value for a Number annotation.
--   
--   <a>$sel:stringValue:AnnotationValue'</a>,
--   <a>annotationValue_stringValue</a> - Value for a String annotation.
--   
--   <a>$sel:booleanValue:AnnotationValue'</a>,
--   <a>annotationValue_booleanValue</a> - Value for a Boolean annotation.
newAnnotationValue :: AnnotationValue

-- | The service within the service graph that has anomalously high fault
--   rates.
--   
--   <i>See:</i> <a>newAnomalousService</a> smart constructor.
data AnomalousService
AnomalousService' :: Maybe ServiceId -> AnomalousService

-- | Create a value of <a>AnomalousService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceId:AnomalousService'</a>,
--   <a>anomalousService_serviceId</a> - Undocumented member.
newAnomalousService :: AnomalousService

-- | A list of Availability Zones corresponding to the segments in a trace.
--   
--   <i>See:</i> <a>newAvailabilityZoneDetail</a> smart constructor.
data AvailabilityZoneDetail
AvailabilityZoneDetail' :: Maybe Text -> AvailabilityZoneDetail

-- | Create a value of <a>AvailabilityZoneDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AvailabilityZoneDetail'</a>,
--   <a>availabilityZoneDetail_name</a> - The name of a corresponding
--   Availability Zone.
newAvailabilityZoneDetail :: AvailabilityZoneDetail

-- | <i>See:</i> <a>newBackendConnectionErrors</a> smart constructor.
data BackendConnectionErrors
BackendConnectionErrors' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> BackendConnectionErrors

-- | Create a value of <a>BackendConnectionErrors</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:otherCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_otherCount</a> -
--   
--   <a>$sel:timeoutCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_timeoutCount</a> -
--   
--   <a>$sel:hTTPCode5XXCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_hTTPCode5XXCount</a> -
--   
--   <a>$sel:connectionRefusedCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_connectionRefusedCount</a> -
--   
--   <a>$sel:hTTPCode4XXCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_hTTPCode4XXCount</a> -
--   
--   <a>$sel:unknownHostCount:BackendConnectionErrors'</a>,
--   <a>backendConnectionErrors_unknownHostCount</a> -
newBackendConnectionErrors :: BackendConnectionErrors

-- | Information about a connection between two services.
--   
--   <i>See:</i> <a>newEdge</a> smart constructor.
data Edge
Edge' :: Maybe POSIX -> Maybe [Alias] -> Maybe [HistogramEntry] -> Maybe Int -> Maybe POSIX -> Maybe EdgeStatistics -> Edge

-- | Create a value of <a>Edge</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:Edge'</a>, <a>edge_startTime</a> - The start time of
--   the first segment on the edge.
--   
--   <a>$sel:aliases:Edge'</a>, <a>edge_aliases</a> - Aliases for the edge.
--   
--   <a>$sel:responseTimeHistogram:Edge'</a>,
--   <a>edge_responseTimeHistogram</a> - A histogram that maps the spread
--   of client response times on an edge.
--   
--   <a>$sel:referenceId:Edge'</a>, <a>edge_referenceId</a> - Identifier of
--   the edge. Unique within a service map.
--   
--   <a>$sel:endTime:Edge'</a>, <a>edge_endTime</a> - The end time of the
--   last segment on the edge.
--   
--   <a>$sel:summaryStatistics:Edge'</a>, <a>edge_summaryStatistics</a> -
--   Response statistics for segments on the edge.
newEdge :: Edge

-- | Response statistics for an edge.
--   
--   <i>See:</i> <a>newEdgeStatistics</a> smart constructor.
data EdgeStatistics
EdgeStatistics' :: Maybe FaultStatistics -> Maybe Integer -> Maybe Double -> Maybe ErrorStatistics -> Maybe Integer -> EdgeStatistics

-- | Create a value of <a>EdgeStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:faultStatistics:EdgeStatistics'</a>,
--   <a>edgeStatistics_faultStatistics</a> - Information about requests
--   that failed with a 5xx Server Error status code.
--   
--   <a>$sel:okCount:EdgeStatistics'</a>, <a>edgeStatistics_okCount</a> -
--   The number of requests that completed with a 2xx Success status code.
--   
--   <a>$sel:totalResponseTime:EdgeStatistics'</a>,
--   <a>edgeStatistics_totalResponseTime</a> - The aggregate response time
--   of completed requests.
--   
--   <a>$sel:errorStatistics:EdgeStatistics'</a>,
--   <a>edgeStatistics_errorStatistics</a> - Information about requests
--   that failed with a 4xx Client Error status code.
--   
--   <a>$sel:totalCount:EdgeStatistics'</a>,
--   <a>edgeStatistics_totalCount</a> - The total number of completed
--   requests.
newEdgeStatistics :: EdgeStatistics

-- | A configuration document that specifies encryption configuration
--   settings.
--   
--   <i>See:</i> <a>newEncryptionConfig</a> smart constructor.
data EncryptionConfig
EncryptionConfig' :: Maybe EncryptionStatus -> Maybe Text -> Maybe EncryptionType -> EncryptionConfig

-- | Create a value of <a>EncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:EncryptionConfig'</a>, <a>encryptionConfig_status</a> -
--   The encryption status. While the status is <tt>UPDATING</tt>, X-Ray
--   may encrypt data with a combination of the new and old settings.
--   
--   <a>$sel:keyId:EncryptionConfig'</a>, <a>encryptionConfig_keyId</a> -
--   The ID of the KMS key used for encryption, if applicable.
--   
--   <a>$sel:type':EncryptionConfig'</a>, <a>encryptionConfig_type</a> -
--   The type of encryption. Set to <tt>KMS</tt> for encryption with KMS
--   keys. Set to <tt>NONE</tt> for default encryption.
newEncryptionConfig :: EncryptionConfig

-- | The root cause of a trace summary error.
--   
--   <i>See:</i> <a>newErrorRootCause</a> smart constructor.
data ErrorRootCause
ErrorRootCause' :: Maybe Bool -> Maybe [ErrorRootCauseService] -> ErrorRootCause

-- | Create a value of <a>ErrorRootCause</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientImpacting:ErrorRootCause'</a>,
--   <a>errorRootCause_clientImpacting</a> - A flag that denotes that the
--   root cause impacts the trace client.
--   
--   <a>$sel:services:ErrorRootCause'</a>, <a>errorRootCause_services</a> -
--   A list of services corresponding to an error. A service identifies a
--   segment and it contains a name, account ID, type, and inferred flag.
newErrorRootCause :: ErrorRootCause

-- | A collection of segments and corresponding subsegments associated to a
--   trace summary error.
--   
--   <i>See:</i> <a>newErrorRootCauseEntity</a> smart constructor.
data ErrorRootCauseEntity
ErrorRootCauseEntity' :: Maybe [RootCauseException] -> Maybe Bool -> Maybe Text -> ErrorRootCauseEntity

-- | Create a value of <a>ErrorRootCauseEntity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exceptions:ErrorRootCauseEntity'</a>,
--   <a>errorRootCauseEntity_exceptions</a> - The types and messages of the
--   exceptions.
--   
--   <a>$sel:remote:ErrorRootCauseEntity'</a>,
--   <a>errorRootCauseEntity_remote</a> - A flag that denotes a remote
--   subsegment.
--   
--   <a>$sel:name:ErrorRootCauseEntity'</a>,
--   <a>errorRootCauseEntity_name</a> - The name of the entity.
newErrorRootCauseEntity :: ErrorRootCauseEntity

-- | A collection of fields identifying the services in a trace summary
--   error.
--   
--   <i>See:</i> <a>newErrorRootCauseService</a> smart constructor.
data ErrorRootCauseService
ErrorRootCauseService' :: Maybe [ErrorRootCauseEntity] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> ErrorRootCauseService

-- | Create a value of <a>ErrorRootCauseService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityPath:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_entityPath</a> - The path of root cause
--   entities found on the service.
--   
--   <a>$sel:accountId:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_accountId</a> - The account ID associated to
--   the service.
--   
--   <a>$sel:names:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_names</a> - A collection of associated
--   service names.
--   
--   <a>$sel:name:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_name</a> - The service name.
--   
--   <a>$sel:inferred:ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_inferred</a> - A Boolean value indicating if
--   the service is inferred from the trace.
--   
--   <a>$sel:type':ErrorRootCauseService'</a>,
--   <a>errorRootCauseService_type</a> - The type associated to the
--   service.
newErrorRootCauseService :: ErrorRootCauseService

-- | Information about requests that failed with a 4xx Client Error status
--   code.
--   
--   <i>See:</i> <a>newErrorStatistics</a> smart constructor.
data ErrorStatistics
ErrorStatistics' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> ErrorStatistics

-- | Create a value of <a>ErrorStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:otherCount:ErrorStatistics'</a>,
--   <a>errorStatistics_otherCount</a> - The number of requests that failed
--   with untracked 4xx Client Error status codes.
--   
--   <a>$sel:throttleCount:ErrorStatistics'</a>,
--   <a>errorStatistics_throttleCount</a> - The number of requests that
--   failed with a 419 throttling status code.
--   
--   <a>$sel:totalCount:ErrorStatistics'</a>,
--   <a>errorStatistics_totalCount</a> - The total number of requests that
--   failed with a 4xx Client Error status code.
newErrorStatistics :: ErrorStatistics

-- | The root cause information for a trace summary fault.
--   
--   <i>See:</i> <a>newFaultRootCause</a> smart constructor.
data FaultRootCause
FaultRootCause' :: Maybe Bool -> Maybe [FaultRootCauseService] -> FaultRootCause

-- | Create a value of <a>FaultRootCause</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientImpacting:FaultRootCause'</a>,
--   <a>faultRootCause_clientImpacting</a> - A flag that denotes that the
--   root cause impacts the trace client.
--   
--   <a>$sel:services:FaultRootCause'</a>, <a>faultRootCause_services</a> -
--   A list of corresponding services. A service identifies a segment and
--   it contains a name, account ID, type, and inferred flag.
newFaultRootCause :: FaultRootCause

-- | A collection of segments and corresponding subsegments associated to a
--   trace summary fault error.
--   
--   <i>See:</i> <a>newFaultRootCauseEntity</a> smart constructor.
data FaultRootCauseEntity
FaultRootCauseEntity' :: Maybe [RootCauseException] -> Maybe Bool -> Maybe Text -> FaultRootCauseEntity

-- | Create a value of <a>FaultRootCauseEntity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exceptions:FaultRootCauseEntity'</a>,
--   <a>faultRootCauseEntity_exceptions</a> - The types and messages of the
--   exceptions.
--   
--   <a>$sel:remote:FaultRootCauseEntity'</a>,
--   <a>faultRootCauseEntity_remote</a> - A flag that denotes a remote
--   subsegment.
--   
--   <a>$sel:name:FaultRootCauseEntity'</a>,
--   <a>faultRootCauseEntity_name</a> - The name of the entity.
newFaultRootCauseEntity :: FaultRootCauseEntity

-- | A collection of fields identifying the services in a trace summary
--   fault.
--   
--   <i>See:</i> <a>newFaultRootCauseService</a> smart constructor.
data FaultRootCauseService
FaultRootCauseService' :: Maybe [FaultRootCauseEntity] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> FaultRootCauseService

-- | Create a value of <a>FaultRootCauseService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityPath:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_entityPath</a> - The path of root cause
--   entities found on the service.
--   
--   <a>$sel:accountId:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_accountId</a> - The account ID associated to
--   the service.
--   
--   <a>$sel:names:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_names</a> - A collection of associated
--   service names.
--   
--   <a>$sel:name:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_name</a> - The service name.
--   
--   <a>$sel:inferred:FaultRootCauseService'</a>,
--   <a>faultRootCauseService_inferred</a> - A Boolean value indicating if
--   the service is inferred from the trace.
--   
--   <a>$sel:type':FaultRootCauseService'</a>,
--   <a>faultRootCauseService_type</a> - The type associated to the
--   service.
newFaultRootCauseService :: FaultRootCauseService

-- | Information about requests that failed with a 5xx Server Error status
--   code.
--   
--   <i>See:</i> <a>newFaultStatistics</a> smart constructor.
data FaultStatistics
FaultStatistics' :: Maybe Integer -> Maybe Integer -> FaultStatistics

-- | Create a value of <a>FaultStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:otherCount:FaultStatistics'</a>,
--   <a>faultStatistics_otherCount</a> - The number of requests that failed
--   with untracked 5xx Server Error status codes.
--   
--   <a>$sel:totalCount:FaultStatistics'</a>,
--   <a>faultStatistics_totalCount</a> - The total number of requests that
--   failed with a 5xx Server Error status code.
newFaultStatistics :: FaultStatistics

-- | The predicted high and low fault count. This is used to determine if a
--   service has become anomalous and if an insight should be created.
--   
--   <i>See:</i> <a>newForecastStatistics</a> smart constructor.
data ForecastStatistics
ForecastStatistics' :: Maybe Integer -> Maybe Integer -> ForecastStatistics

-- | Create a value of <a>ForecastStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:faultCountLow:ForecastStatistics'</a>,
--   <a>forecastStatistics_faultCountLow</a> - The lower limit of fault
--   counts for a service.
--   
--   <a>$sel:faultCountHigh:ForecastStatistics'</a>,
--   <a>forecastStatistics_faultCountHigh</a> - The upper limit of fault
--   counts for a service.
newForecastStatistics :: ForecastStatistics

-- | Details and metadata for a group.
--   
--   <i>See:</i> <a>newGroup</a> smart constructor.
data Group
Group' :: Maybe Text -> Maybe InsightsConfiguration -> Maybe Text -> Maybe Text -> Group

-- | Create a value of <a>Group</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterExpression:Group'</a>, <a>group_filterExpression</a> -
--   The filter expression defining the parameters to include traces.
--   
--   <a>$sel:insightsConfiguration:Group'</a>,
--   <a>group_insightsConfiguration</a> - The structure containing
--   configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications through Amazon EventBridge for the group.</li>
--   </ul>
--   
--   <a>$sel:groupARN:Group'</a>, <a>group_groupARN</a> - The Amazon
--   Resource Name (ARN) of the group generated based on the GroupName.
--   
--   <a>$sel:groupName:Group'</a>, <a>group_groupName</a> - The unique
--   case-sensitive name of the group.
newGroup :: Group

-- | Details for a group without metadata.
--   
--   <i>See:</i> <a>newGroupSummary</a> smart constructor.
data GroupSummary
GroupSummary' :: Maybe Text -> Maybe InsightsConfiguration -> Maybe Text -> Maybe Text -> GroupSummary

-- | Create a value of <a>GroupSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterExpression:GroupSummary'</a>,
--   <a>groupSummary_filterExpression</a> - The filter expression defining
--   the parameters to include traces.
--   
--   <a>$sel:insightsConfiguration:GroupSummary'</a>,
--   <a>groupSummary_insightsConfiguration</a> - The structure containing
--   configurations related to insights.
--   
--   <ul>
--   <li>The InsightsEnabled boolean can be set to true to enable insights
--   for the group or false to disable insights for the group.</li>
--   <li>The NotificationsEnabled boolean can be set to true to enable
--   insights notifications. Notifications can only be enabled on a group
--   with InsightsEnabled set to true.</li>
--   </ul>
--   
--   <a>$sel:groupARN:GroupSummary'</a>, <a>groupSummary_groupARN</a> - The
--   ARN of the group generated based on the GroupName.
--   
--   <a>$sel:groupName:GroupSummary'</a>, <a>groupSummary_groupName</a> -
--   The unique case-sensitive name of the group.
newGroupSummary :: GroupSummary

-- | An entry in a histogram for a statistic. A histogram maps the range of
--   observed values on the X axis, and the prevalence of each value on the
--   Y axis.
--   
--   <i>See:</i> <a>newHistogramEntry</a> smart constructor.
data HistogramEntry
HistogramEntry' :: Maybe Int -> Maybe Double -> HistogramEntry

-- | Create a value of <a>HistogramEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:HistogramEntry'</a>, <a>histogramEntry_count</a> - The
--   prevalence of the entry.
--   
--   <a>$sel:value:HistogramEntry'</a>, <a>histogramEntry_value</a> - The
--   value of the entry.
newHistogramEntry :: HistogramEntry

-- | Information about an HTTP request.
--   
--   <i>See:</i> <a>newHttp</a> smart constructor.
data Http
Http' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Http

-- | Create a value of <a>Http</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:Http'</a>, <a>http_httpMethod</a> - The request
--   method.
--   
--   <a>$sel:httpStatus:Http'</a>, <a>http_httpStatus</a> - The response
--   status.
--   
--   <a>$sel:clientIp:Http'</a>, <a>http_clientIp</a> - The IP address of
--   the requestor.
--   
--   <a>$sel:userAgent:Http'</a>, <a>http_userAgent</a> - The request's
--   user agent string.
--   
--   <a>$sel:httpURL:Http'</a>, <a>http_httpURL</a> - The request URL.
newHttp :: Http

-- | When fault rates go outside of the expected range, X-Ray creates an
--   insight. Insights tracks emergent issues within your applications.
--   
--   <i>See:</i> <a>newInsight</a> smart constructor.
data Insight
Insight' :: Maybe Text -> Maybe InsightState -> Maybe POSIX -> Maybe Text -> Maybe [InsightCategory] -> Maybe RequestImpactStatistics -> Maybe [AnomalousService] -> Maybe ServiceId -> Maybe RequestImpactStatistics -> Maybe POSIX -> Maybe Text -> Maybe Text -> Insight

-- | Create a value of <a>Insight</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:Insight'</a>, <a>insight_summary</a> - A brief
--   description of the insight.
--   
--   <a>$sel:state:Insight'</a>, <a>insight_state</a> - The current state
--   of the insight.
--   
--   <a>$sel:startTime:Insight'</a>, <a>insight_startTime</a> - The time,
--   in Unix seconds, at which the insight began.
--   
--   <a>$sel:insightId:Insight'</a>, <a>insight_insightId</a> - The
--   insights unique identifier.
--   
--   <a>$sel:categories:Insight'</a>, <a>insight_categories</a> - The
--   categories that label and describe the type of insight.
--   
--   <a>$sel:rootCauseServiceRequestImpactStatistics:Insight'</a>,
--   <a>insight_rootCauseServiceRequestImpactStatistics</a> - The impact
--   statistics of the root cause service. This includes the number of
--   requests to the client service and whether the requests were faults or
--   okay.
--   
--   <a>$sel:topAnomalousServices:Insight'</a>,
--   <a>insight_topAnomalousServices</a> - The service within the insight
--   that is most impacted by the incident.
--   
--   <a>$sel:rootCauseServiceId:Insight'</a>,
--   <a>insight_rootCauseServiceId</a> - Undocumented member.
--   
--   <a>$sel:clientRequestImpactStatistics:Insight'</a>,
--   <a>insight_clientRequestImpactStatistics</a> - The impact statistics
--   of the client side service. This includes the number of requests to
--   the client service and whether the requests were faults or okay.
--   
--   <a>$sel:endTime:Insight'</a>, <a>insight_endTime</a> - The time, in
--   Unix seconds, at which the insight ended.
--   
--   <a>$sel:groupARN:Insight'</a>, <a>insight_groupARN</a> - The Amazon
--   Resource Name (ARN) of the group that the insight belongs to.
--   
--   <a>$sel:groupName:Insight'</a>, <a>insight_groupName</a> - The name of
--   the group that the insight belongs to.
newInsight :: Insight

-- | X-Ray reevaluates insights periodically until they are resolved, and
--   records each intermediate state in an event. You can review incident
--   events in the Impact Timeline on the Inspect page in the X-Ray
--   console.
--   
--   <i>See:</i> <a>newInsightEvent</a> smart constructor.
data InsightEvent
InsightEvent' :: Maybe Text -> Maybe POSIX -> Maybe RequestImpactStatistics -> Maybe [AnomalousService] -> Maybe RequestImpactStatistics -> InsightEvent

-- | Create a value of <a>InsightEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:InsightEvent'</a>, <a>insightEvent_summary</a> - A
--   brief description of the event.
--   
--   <a>$sel:eventTime:InsightEvent'</a>, <a>insightEvent_eventTime</a> -
--   The time, in Unix seconds, at which the event was recorded.
--   
--   <a>$sel:rootCauseServiceRequestImpactStatistics:InsightEvent'</a>,
--   <a>insightEvent_rootCauseServiceRequestImpactStatistics</a> - The
--   impact statistics of the root cause service. This includes the number
--   of requests to the client service and whether the requests were faults
--   or okay.
--   
--   <a>$sel:topAnomalousServices:InsightEvent'</a>,
--   <a>insightEvent_topAnomalousServices</a> - The service during the
--   event that is most impacted by the incident.
--   
--   <a>$sel:clientRequestImpactStatistics:InsightEvent'</a>,
--   <a>insightEvent_clientRequestImpactStatistics</a> - The impact
--   statistics of the client side service. This includes the number of
--   requests to the client service and whether the requests were faults or
--   okay.
newInsightEvent :: InsightEvent

-- | The connection between two service in an insight impact graph.
--   
--   <i>See:</i> <a>newInsightImpactGraphEdge</a> smart constructor.
data InsightImpactGraphEdge
InsightImpactGraphEdge' :: Maybe Int -> InsightImpactGraphEdge

-- | Create a value of <a>InsightImpactGraphEdge</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:referenceId:InsightImpactGraphEdge'</a>,
--   <a>insightImpactGraphEdge_referenceId</a> - Identifier of the edge.
--   Unique within a service map.
newInsightImpactGraphEdge :: InsightImpactGraphEdge

-- | Information about an application that processed requests, users that
--   made requests, or downstream services, resources, and applications
--   that an application used.
--   
--   <i>See:</i> <a>newInsightImpactGraphService</a> smart constructor.
data InsightImpactGraphService
InsightImpactGraphService' :: Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [InsightImpactGraphEdge] -> InsightImpactGraphService

-- | Create a value of <a>InsightImpactGraphService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:referenceId:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_referenceId</a> - Identifier for the
--   service. Unique within the service map.
--   
--   <a>$sel:accountId:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_accountId</a> - Identifier of the Amazon
--   Web Services account in which the service runs.
--   
--   <a>$sel:names:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_names</a> - A list of names for the
--   service, including the canonical name.
--   
--   <a>$sel:name:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_name</a> - The canonical name of the
--   service.
--   
--   <a>$sel:type':InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_type</a> - Identifier for the service.
--   Unique within the service map.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, AWS::EC2::Instance for an application running
--   on Amazon EC2 or AWS::DynamoDB::Table for an Amazon DynamoDB table
--   that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, AWS::DynamoDB for downstream calls to Amazon
--   DynamoDB that didn't target a specific table.</li>
--   <li>remote - A downstream service of indeterminate type.</li>
--   </ul>
--   
--   <a>$sel:edges:InsightImpactGraphService'</a>,
--   <a>insightImpactGraphService_edges</a> - Connections to downstream
--   services.
newInsightImpactGraphService :: InsightImpactGraphService

-- | Information that describes an insight.
--   
--   <i>See:</i> <a>newInsightSummary</a> smart constructor.
data InsightSummary
InsightSummary' :: Maybe Text -> Maybe InsightState -> Maybe POSIX -> Maybe Text -> Maybe [InsightCategory] -> Maybe RequestImpactStatistics -> Maybe [AnomalousService] -> Maybe ServiceId -> Maybe RequestImpactStatistics -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> InsightSummary

-- | Create a value of <a>InsightSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:summary:InsightSummary'</a>, <a>insightSummary_summary</a> - A
--   brief description of the insight.
--   
--   <a>$sel:state:InsightSummary'</a>, <a>insightSummary_state</a> - The
--   current state of the insight.
--   
--   <a>$sel:startTime:InsightSummary'</a>, <a>insightSummary_startTime</a>
--   - The time, in Unix seconds, at which the insight began.
--   
--   <a>$sel:insightId:InsightSummary'</a>, <a>insightSummary_insightId</a>
--   - The insights unique identifier.
--   
--   <a>$sel:categories:InsightSummary'</a>,
--   <a>insightSummary_categories</a> - Categories The categories that
--   label and describe the type of insight.
--   
--   <a>$sel:rootCauseServiceRequestImpactStatistics:InsightSummary'</a>,
--   <a>insightSummary_rootCauseServiceRequestImpactStatistics</a> - The
--   impact statistics of the root cause service. This includes the number
--   of requests to the client service and whether the requests were faults
--   or okay.
--   
--   <a>$sel:topAnomalousServices:InsightSummary'</a>,
--   <a>insightSummary_topAnomalousServices</a> - The service within the
--   insight that is most impacted by the incident.
--   
--   <a>$sel:rootCauseServiceId:InsightSummary'</a>,
--   <a>insightSummary_rootCauseServiceId</a> - Undocumented member.
--   
--   <a>$sel:clientRequestImpactStatistics:InsightSummary'</a>,
--   <a>insightSummary_clientRequestImpactStatistics</a> - The impact
--   statistics of the client side service. This includes the number of
--   requests to the client service and whether the requests were faults or
--   okay.
--   
--   <a>$sel:endTime:InsightSummary'</a>, <a>insightSummary_endTime</a> -
--   The time, in Unix seconds, at which the insight ended.
--   
--   <a>$sel:groupARN:InsightSummary'</a>, <a>insightSummary_groupARN</a> -
--   The Amazon Resource Name (ARN) of the group that the insight belongs
--   to.
--   
--   <a>$sel:groupName:InsightSummary'</a>, <a>insightSummary_groupName</a>
--   - The name of the group that the insight belongs to.
--   
--   <a>$sel:lastUpdateTime:InsightSummary'</a>,
--   <a>insightSummary_lastUpdateTime</a> - The time, in Unix seconds, that
--   the insight was last updated.
newInsightSummary :: InsightSummary

-- | The structure containing configurations related to insights.
--   
--   <i>See:</i> <a>newInsightsConfiguration</a> smart constructor.
data InsightsConfiguration
InsightsConfiguration' :: Maybe Bool -> Maybe Bool -> InsightsConfiguration

-- | Create a value of <a>InsightsConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationsEnabled:InsightsConfiguration'</a>,
--   <a>insightsConfiguration_notificationsEnabled</a> - Set the
--   NotificationsEnabled value to true to enable insights notifications.
--   Notifications can only be enabled on a group with InsightsEnabled set
--   to true.
--   
--   <a>$sel:insightsEnabled:InsightsConfiguration'</a>,
--   <a>insightsConfiguration_insightsEnabled</a> - Set the InsightsEnabled
--   value to true to enable insights or false to disable insights.
newInsightsConfiguration :: InsightsConfiguration

-- | A list of EC2 instance IDs corresponding to the segments in a trace.
--   
--   <i>See:</i> <a>newInstanceIdDetail</a> smart constructor.
data InstanceIdDetail
InstanceIdDetail' :: Maybe Text -> InstanceIdDetail

-- | Create a value of <a>InstanceIdDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:InstanceIdDetail'</a>, <a>instanceIdDetail_id</a> - The ID
--   of a corresponding EC2 instance.
newInstanceIdDetail :: InstanceIdDetail

-- | Statistics that describe how the incident has impacted a service.
--   
--   <i>See:</i> <a>newRequestImpactStatistics</a> smart constructor.
data RequestImpactStatistics
RequestImpactStatistics' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> RequestImpactStatistics

-- | Create a value of <a>RequestImpactStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:okCount:RequestImpactStatistics'</a>,
--   <a>requestImpactStatistics_okCount</a> - The number of successful
--   requests.
--   
--   <a>$sel:faultCount:RequestImpactStatistics'</a>,
--   <a>requestImpactStatistics_faultCount</a> - The number of requests
--   that have resulted in a fault,
--   
--   <a>$sel:totalCount:RequestImpactStatistics'</a>,
--   <a>requestImpactStatistics_totalCount</a> - The total number of
--   requests to the service.
newRequestImpactStatistics :: RequestImpactStatistics

-- | A list of resources ARNs corresponding to the segments in a trace.
--   
--   <i>See:</i> <a>newResourceARNDetail</a> smart constructor.
data ResourceARNDetail
ResourceARNDetail' :: Maybe Text -> ResourceARNDetail

-- | Create a value of <a>ResourceARNDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ResourceARNDetail'</a>, <a>resourceARNDetail_arn</a> - The
--   ARN of a corresponding resource.
newResourceARNDetail :: ResourceARNDetail

-- | The root cause information for a response time warning.
--   
--   <i>See:</i> <a>newResponseTimeRootCause</a> smart constructor.
data ResponseTimeRootCause
ResponseTimeRootCause' :: Maybe Bool -> Maybe [ResponseTimeRootCauseService] -> ResponseTimeRootCause

-- | Create a value of <a>ResponseTimeRootCause</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientImpacting:ResponseTimeRootCause'</a>,
--   <a>responseTimeRootCause_clientImpacting</a> - A flag that denotes
--   that the root cause impacts the trace client.
--   
--   <a>$sel:services:ResponseTimeRootCause'</a>,
--   <a>responseTimeRootCause_services</a> - A list of corresponding
--   services. A service identifies a segment and contains a name, account
--   ID, type, and inferred flag.
newResponseTimeRootCause :: ResponseTimeRootCause

-- | A collection of segments and corresponding subsegments associated to a
--   response time warning.
--   
--   <i>See:</i> <a>newResponseTimeRootCauseEntity</a> smart constructor.
data ResponseTimeRootCauseEntity
ResponseTimeRootCauseEntity' :: Maybe Bool -> Maybe Double -> Maybe Text -> ResponseTimeRootCauseEntity

-- | Create a value of <a>ResponseTimeRootCauseEntity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remote:ResponseTimeRootCauseEntity'</a>,
--   <a>responseTimeRootCauseEntity_remote</a> - A flag that denotes a
--   remote subsegment.
--   
--   <a>$sel:coverage:ResponseTimeRootCauseEntity'</a>,
--   <a>responseTimeRootCauseEntity_coverage</a> - The type and messages of
--   the exceptions.
--   
--   <a>$sel:name:ResponseTimeRootCauseEntity'</a>,
--   <a>responseTimeRootCauseEntity_name</a> - The name of the entity.
newResponseTimeRootCauseEntity :: ResponseTimeRootCauseEntity

-- | A collection of fields identifying the service in a response time
--   warning.
--   
--   <i>See:</i> <a>newResponseTimeRootCauseService</a> smart constructor.
data ResponseTimeRootCauseService
ResponseTimeRootCauseService' :: Maybe [ResponseTimeRootCauseEntity] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> ResponseTimeRootCauseService

-- | Create a value of <a>ResponseTimeRootCauseService</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entityPath:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_entityPath</a> - The path of root
--   cause entities found on the service.
--   
--   <a>$sel:accountId:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_accountId</a> - The account ID
--   associated to the service.
--   
--   <a>$sel:names:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_names</a> - A collection of associated
--   service names.
--   
--   <a>$sel:name:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_name</a> - The service name.
--   
--   <a>$sel:inferred:ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_inferred</a> - A Boolean value
--   indicating if the service is inferred from the trace.
--   
--   <a>$sel:type':ResponseTimeRootCauseService'</a>,
--   <a>responseTimeRootCauseService_type</a> - The type associated to the
--   service.
newResponseTimeRootCauseService :: ResponseTimeRootCauseService

-- | The exception associated with a root cause.
--   
--   <i>See:</i> <a>newRootCauseException</a> smart constructor.
data RootCauseException
RootCauseException' :: Maybe Text -> Maybe Text -> RootCauseException

-- | Create a value of <a>RootCauseException</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RootCauseException'</a>, <a>rootCauseException_name</a> -
--   The name of the exception.
--   
--   <a>$sel:message:RootCauseException'</a>,
--   <a>rootCauseException_message</a> - The message of the exception.
newRootCauseException :: RootCauseException

-- | A sampling rule that services use to decide whether to instrument a
--   request. Rule fields can match properties of the service, or
--   properties of a request. The service can ignore rules that don't match
--   its properties.
--   
--   <i>See:</i> <a>newSamplingRule</a> smart constructor.
data SamplingRule
SamplingRule' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> Natural -> Double -> Natural -> Text -> Text -> Text -> Text -> Text -> Natural -> SamplingRule

-- | Create a value of <a>SamplingRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleName:SamplingRule'</a>, <a>samplingRule_ruleName</a> - The
--   name of the sampling rule. Specify a rule by either name or ARN, but
--   not both.
--   
--   <a>$sel:attributes:SamplingRule'</a>, <a>samplingRule_attributes</a> -
--   Matches attributes derived from the request.
--   
--   <a>$sel:ruleARN:SamplingRule'</a>, <a>samplingRule_ruleARN</a> - The
--   ARN of the sampling rule. Specify a rule by either name or ARN, but
--   not both.
--   
--   <a>$sel:resourceARN:SamplingRule'</a>, <a>samplingRule_resourceARN</a>
--   - Matches the ARN of the Amazon Web Services resource on which the
--   service runs.
--   
--   <a>$sel:priority:SamplingRule'</a>, <a>samplingRule_priority</a> - The
--   priority of the sampling rule.
--   
--   <a>$sel:fixedRate:SamplingRule'</a>, <a>samplingRule_fixedRate</a> -
--   The percentage of matching requests to instrument, after the reservoir
--   is exhausted.
--   
--   <a>$sel:reservoirSize:SamplingRule'</a>,
--   <a>samplingRule_reservoirSize</a> - A fixed number of matching
--   requests to instrument per second, prior to applying the fixed rate.
--   The reservoir is not used directly by services, but applies to all
--   services using the rule collectively.
--   
--   <a>$sel:serviceName:SamplingRule'</a>, <a>samplingRule_serviceName</a>
--   - Matches the <tt>name</tt> that the service uses to identify itself
--   in segments.
--   
--   <a>$sel:serviceType:SamplingRule'</a>, <a>samplingRule_serviceType</a>
--   - Matches the <tt>origin</tt> that the service uses to identify its
--   type in segments.
--   
--   <a>$sel:host:SamplingRule'</a>, <a>samplingRule_host</a> - Matches the
--   hostname from a request URL.
--   
--   <a>$sel:hTTPMethod:SamplingRule'</a>, <a>samplingRule_hTTPMethod</a> -
--   Matches the HTTP method of a request.
--   
--   <a>$sel:uRLPath:SamplingRule'</a>, <a>samplingRule_uRLPath</a> -
--   Matches the path from a request URL.
--   
--   <a>$sel:version:SamplingRule'</a>, <a>samplingRule_version</a> - The
--   version of the sampling rule format (<tt>1</tt>).
newSamplingRule :: Text -> Natural -> Double -> Natural -> Text -> Text -> Text -> Text -> Text -> Natural -> SamplingRule

-- | A <a>SamplingRule</a> and its metadata.
--   
--   <i>See:</i> <a>newSamplingRuleRecord</a> smart constructor.
data SamplingRuleRecord
SamplingRuleRecord' :: Maybe POSIX -> Maybe SamplingRule -> Maybe POSIX -> SamplingRuleRecord

-- | Create a value of <a>SamplingRuleRecord</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modifiedAt:SamplingRuleRecord'</a>,
--   <a>samplingRuleRecord_modifiedAt</a> - When the rule was last
--   modified.
--   
--   <a>$sel:samplingRule:SamplingRuleRecord'</a>,
--   <a>samplingRuleRecord_samplingRule</a> - The sampling rule.
--   
--   <a>$sel:createdAt:SamplingRuleRecord'</a>,
--   <a>samplingRuleRecord_createdAt</a> - When the rule was created.
newSamplingRuleRecord :: SamplingRuleRecord

-- | A document specifying changes to a sampling rule's configuration.
--   
--   <i>See:</i> <a>newSamplingRuleUpdate</a> smart constructor.
data SamplingRuleUpdate
SamplingRuleUpdate' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Double -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SamplingRuleUpdate

-- | Create a value of <a>SamplingRuleUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hTTPMethod:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_hTTPMethod</a> - Matches the HTTP method of a
--   request.
--   
--   <a>$sel:priority:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_priority</a> - The priority of the sampling
--   rule.
--   
--   <a>$sel:ruleName:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_ruleName</a> - The name of the sampling rule.
--   Specify a rule by either name or ARN, but not both.
--   
--   <a>$sel:reservoirSize:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_reservoirSize</a> - A fixed number of matching
--   requests to instrument per second, prior to applying the fixed rate.
--   The reservoir is not used directly by services, but applies to all
--   services using the rule collectively.
--   
--   <a>$sel:fixedRate:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_fixedRate</a> - The percentage of matching
--   requests to instrument, after the reservoir is exhausted.
--   
--   <a>$sel:resourceARN:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_resourceARN</a> - Matches the ARN of the Amazon
--   Web Services resource on which the service runs.
--   
--   <a>$sel:attributes:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_attributes</a> - Matches attributes derived from
--   the request.
--   
--   <a>$sel:serviceName:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_serviceName</a> - Matches the <tt>name</tt> that
--   the service uses to identify itself in segments.
--   
--   <a>$sel:serviceType:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_serviceType</a> - Matches the <tt>origin</tt>
--   that the service uses to identify its type in segments.
--   
--   <a>$sel:host:SamplingRuleUpdate'</a>, <a>samplingRuleUpdate_host</a> -
--   Matches the hostname from a request URL.
--   
--   <a>$sel:ruleARN:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_ruleARN</a> - The ARN of the sampling rule.
--   Specify a rule by either name or ARN, but not both.
--   
--   <a>$sel:uRLPath:SamplingRuleUpdate'</a>,
--   <a>samplingRuleUpdate_uRLPath</a> - Matches the path from a request
--   URL.
newSamplingRuleUpdate :: SamplingRuleUpdate

-- | Aggregated request sampling data for a sampling rule across all
--   services for a 10-second window.
--   
--   <i>See:</i> <a>newSamplingStatisticSummary</a> smart constructor.
data SamplingStatisticSummary
SamplingStatisticSummary' :: Maybe Int -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Int -> SamplingStatisticSummary

-- | Create a value of <a>SamplingStatisticSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestCount:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_requestCount</a> - The number of requests
--   that matched the rule.
--   
--   <a>$sel:borrowCount:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_borrowCount</a> - The number of requests
--   recorded with borrowed reservoir quota.
--   
--   <a>$sel:ruleName:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_ruleName</a> - The name of the sampling
--   rule.
--   
--   <a>$sel:timestamp:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_timestamp</a> - The start time of the
--   reporting window.
--   
--   <a>$sel:sampledCount:SamplingStatisticSummary'</a>,
--   <a>samplingStatisticSummary_sampledCount</a> - The number of requests
--   recorded.
newSamplingStatisticSummary :: SamplingStatisticSummary

-- | Request sampling results for a single rule from a service. Results are
--   for the last 10 seconds unless the service has been assigned a longer
--   reporting interval after a previous call to <a>GetSamplingTargets</a>.
--   
--   <i>See:</i> <a>newSamplingStatisticsDocument</a> smart constructor.
data SamplingStatisticsDocument
SamplingStatisticsDocument' :: Maybe Natural -> Text -> Text -> POSIX -> Natural -> Natural -> SamplingStatisticsDocument

-- | Create a value of <a>SamplingStatisticsDocument</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:borrowCount:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_borrowCount</a> - The number of requests
--   recorded with borrowed reservoir quota.
--   
--   <a>$sel:ruleName:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_ruleName</a> - The name of the sampling
--   rule.
--   
--   <a>$sel:clientID:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_clientID</a> - A unique identifier for
--   the service in hexadecimal.
--   
--   <a>$sel:timestamp:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_timestamp</a> - The current time.
--   
--   <a>$sel:requestCount:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_requestCount</a> - The number of
--   requests that matched the rule.
--   
--   <a>$sel:sampledCount:SamplingStatisticsDocument'</a>,
--   <a>samplingStatisticsDocument_sampledCount</a> - The number of
--   requests recorded.
newSamplingStatisticsDocument :: Text -> Text -> UTCTime -> Natural -> Natural -> SamplingStatisticsDocument

-- | The name and value of a sampling rule to apply to a trace summary.
--   
--   <i>See:</i> <a>newSamplingStrategy</a> smart constructor.
data SamplingStrategy
SamplingStrategy' :: Maybe Double -> Maybe SamplingStrategyName -> SamplingStrategy

-- | Create a value of <a>SamplingStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:SamplingStrategy'</a>, <a>samplingStrategy_value</a> -
--   The value of a sampling rule.
--   
--   <a>$sel:name:SamplingStrategy'</a>, <a>samplingStrategy_name</a> - The
--   name of a sampling rule.
newSamplingStrategy :: SamplingStrategy

-- | Temporary changes to a sampling rule configuration. To meet the global
--   sampling target for a rule, X-Ray calculates a new reservoir for each
--   service based on the recent sampling results of all services that
--   called <a>GetSamplingTargets</a>.
--   
--   <i>See:</i> <a>newSamplingTargetDocument</a> smart constructor.
data SamplingTargetDocument
SamplingTargetDocument' :: Maybe Int -> Maybe Text -> Maybe Double -> Maybe Int -> Maybe POSIX -> SamplingTargetDocument

-- | Create a value of <a>SamplingTargetDocument</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reservoirQuota:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_reservoirQuota</a> - The number of requests
--   per second that X-Ray allocated for this service.
--   
--   <a>$sel:ruleName:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_ruleName</a> - The name of the sampling
--   rule.
--   
--   <a>$sel:fixedRate:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_fixedRate</a> - The percentage of matching
--   requests to instrument, after the reservoir is exhausted.
--   
--   <a>$sel:interval:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_interval</a> - The number of seconds for the
--   service to wait before getting sampling targets again.
--   
--   <a>$sel:reservoirQuotaTTL:SamplingTargetDocument'</a>,
--   <a>samplingTargetDocument_reservoirQuotaTTL</a> - When the reservoir
--   quota expires.
newSamplingTargetDocument :: SamplingTargetDocument

-- | A segment from a trace that has been ingested by the X-Ray service.
--   The segment can be compiled from documents uploaded with
--   <a>PutTraceSegments</a>, or an <tt>inferred</tt> segment for a
--   downstream service, generated from a subsegment sent by the service
--   that called it.
--   
--   For the full segment document schema, see <a>Amazon Web Services X-Ray
--   Segment Documents</a> in the <i>Amazon Web Services X-Ray Developer
--   Guide</i>.
--   
--   <i>See:</i> <a>newSegment</a> smart constructor.
data Segment
Segment' :: Maybe Text -> Maybe Text -> Segment

-- | Create a value of <a>Segment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:document:Segment'</a>, <a>segment_document</a> - The segment
--   document.
--   
--   <a>$sel:id:Segment'</a>, <a>segment_id</a> - The segment's ID.
newSegment :: Segment

-- | <i>See:</i> <a>newServiceId</a> smart constructor.
data ServiceId
ServiceId' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> ServiceId

-- | Create a value of <a>ServiceId</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:ServiceId'</a>, <a>serviceId_accountId</a> -
--   
--   <a>$sel:names:ServiceId'</a>, <a>serviceId_names</a> -
--   
--   <a>$sel:name:ServiceId'</a>, <a>serviceId_name</a> -
--   
--   <a>$sel:type':ServiceId'</a>, <a>serviceId_type</a> -
newServiceId :: ServiceId

-- | Information about an application that processed requests, users that
--   made requests, or downstream services, resources, and applications
--   that an application used.
--   
--   <i>See:</i> <a>newServiceInfo</a> smart constructor.
data ServiceInfo
ServiceInfo' :: Maybe Text -> Maybe POSIX -> Maybe Bool -> Maybe [HistogramEntry] -> Maybe [HistogramEntry] -> Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe [Edge] -> Maybe ServiceStatistics -> ServiceInfo

-- | Create a value of <a>ServiceInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ServiceInfo'</a>, <a>serviceInfo_state</a> - The
--   service's state.
--   
--   <a>$sel:startTime:ServiceInfo'</a>, <a>serviceInfo_startTime</a> - The
--   start time of the first segment that the service generated.
--   
--   <a>$sel:root:ServiceInfo'</a>, <a>serviceInfo_root</a> - Indicates
--   that the service was the first service to process a request.
--   
--   <a>$sel:responseTimeHistogram:ServiceInfo'</a>,
--   <a>serviceInfo_responseTimeHistogram</a> - A histogram that maps the
--   spread of service response times.
--   
--   <a>$sel:durationHistogram:ServiceInfo'</a>,
--   <a>serviceInfo_durationHistogram</a> - A histogram that maps the
--   spread of service durations.
--   
--   <a>$sel:referenceId:ServiceInfo'</a>, <a>serviceInfo_referenceId</a> -
--   Identifier for the service. Unique within the service map.
--   
--   <a>$sel:accountId:ServiceInfo'</a>, <a>serviceInfo_accountId</a> -
--   Identifier of the Amazon Web Services account in which the service
--   runs.
--   
--   <a>$sel:names:ServiceInfo'</a>, <a>serviceInfo_names</a> - A list of
--   names for the service, including the canonical name.
--   
--   <a>$sel:name:ServiceInfo'</a>, <a>serviceInfo_name</a> - The canonical
--   name of the service.
--   
--   <a>$sel:endTime:ServiceInfo'</a>, <a>serviceInfo_endTime</a> - The end
--   time of the last segment that the service generated.
--   
--   <a>$sel:type':ServiceInfo'</a>, <a>serviceInfo_type</a> - The type of
--   service.
--   
--   <ul>
--   <li>Amazon Web Services Resource - The type of an Amazon Web Services
--   resource. For example, <tt>AWS::EC2::Instance</tt> for an application
--   running on Amazon EC2 or <tt>AWS::DynamoDB::Table</tt> for an Amazon
--   DynamoDB table that the application used.</li>
--   <li>Amazon Web Services Service - The type of an Amazon Web Services
--   service. For example, <tt>AWS::DynamoDB</tt> for downstream calls to
--   Amazon DynamoDB that didn't target a specific table.</li>
--   <li><tt>client</tt> - Represents the clients that sent requests to a
--   root service.</li>
--   <li><tt>remote</tt> - A downstream service of indeterminate type.</li>
--   </ul>
--   
--   <a>$sel:edges:ServiceInfo'</a>, <a>serviceInfo_edges</a> - Connections
--   to downstream services.
--   
--   <a>$sel:summaryStatistics:ServiceInfo'</a>,
--   <a>serviceInfo_summaryStatistics</a> - Aggregated statistics for the
--   service.
newServiceInfo :: ServiceInfo

-- | Response statistics for a service.
--   
--   <i>See:</i> <a>newServiceStatistics</a> smart constructor.
data ServiceStatistics
ServiceStatistics' :: Maybe FaultStatistics -> Maybe Integer -> Maybe Double -> Maybe ErrorStatistics -> Maybe Integer -> ServiceStatistics

-- | Create a value of <a>ServiceStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:faultStatistics:ServiceStatistics'</a>,
--   <a>serviceStatistics_faultStatistics</a> - Information about requests
--   that failed with a 5xx Server Error status code.
--   
--   <a>$sel:okCount:ServiceStatistics'</a>,
--   <a>serviceStatistics_okCount</a> - The number of requests that
--   completed with a 2xx Success status code.
--   
--   <a>$sel:totalResponseTime:ServiceStatistics'</a>,
--   <a>serviceStatistics_totalResponseTime</a> - The aggregate response
--   time of completed requests.
--   
--   <a>$sel:errorStatistics:ServiceStatistics'</a>,
--   <a>serviceStatistics_errorStatistics</a> - Information about requests
--   that failed with a 4xx Client Error status code.
--   
--   <a>$sel:totalCount:ServiceStatistics'</a>,
--   <a>serviceStatistics_totalCount</a> - The total number of completed
--   requests.
newServiceStatistics :: ServiceStatistics

-- | A map that contains tag keys and tag values to attach to an Amazon Web
--   Services X-Ray group or sampling rule. For more information about ways
--   to use tags, see <a>Tagging Amazon Web Services resources</a> in the
--   <i>Amazon Web Services General Reference</i>.
--   
--   The following restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of user-applied tags per resource: 50</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Don't use <tt>aws:</tt> as a prefix for keys; it's reserved for
--   Amazon Web Services use. You cannot edit or delete system tags.</li>
--   </ul>
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A tag key, such as
--   <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot be empty. The key
--   can be a maximum of 128 characters, and can contain only Unicode
--   letters, numbers, or separators, or the following special characters:
--   <tt>+ - = . _ : /</tt>
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - An optional tag value, such
--   as <tt>Production</tt> or <tt>test-only</tt>. The value can be a
--   maximum of 255 characters, and contain only Unicode letters, numbers,
--   or separators, or the following special characters: <tt>+ - = . _ :
--   /</tt>
newTag :: Text -> Text -> Tag

-- | <i>See:</i> <a>newTelemetryRecord</a> smart constructor.
data TelemetryRecord
TelemetryRecord' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe BackendConnectionErrors -> POSIX -> TelemetryRecord

-- | Create a value of <a>TelemetryRecord</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:segmentsReceivedCount:TelemetryRecord'</a>,
--   <a>telemetryRecord_segmentsReceivedCount</a> -
--   
--   <a>$sel:segmentsSentCount:TelemetryRecord'</a>,
--   <a>telemetryRecord_segmentsSentCount</a> -
--   
--   <a>$sel:segmentsSpilloverCount:TelemetryRecord'</a>,
--   <a>telemetryRecord_segmentsSpilloverCount</a> -
--   
--   <a>$sel:segmentsRejectedCount:TelemetryRecord'</a>,
--   <a>telemetryRecord_segmentsRejectedCount</a> -
--   
--   <a>$sel:backendConnectionErrors:TelemetryRecord'</a>,
--   <a>telemetryRecord_backendConnectionErrors</a> -
--   
--   <a>$sel:timestamp:TelemetryRecord'</a>,
--   <a>telemetryRecord_timestamp</a> -
newTelemetryRecord :: UTCTime -> TelemetryRecord

-- | A list of TimeSeriesStatistic structures.
--   
--   <i>See:</i> <a>newTimeSeriesServiceStatistics</a> smart constructor.
data TimeSeriesServiceStatistics
TimeSeriesServiceStatistics' :: Maybe ServiceStatistics -> Maybe [HistogramEntry] -> Maybe EdgeStatistics -> Maybe ForecastStatistics -> Maybe POSIX -> TimeSeriesServiceStatistics

-- | Create a value of <a>TimeSeriesServiceStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceSummaryStatistics:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_serviceSummaryStatistics</a> -
--   Undocumented member.
--   
--   <a>$sel:responseTimeHistogram:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_responseTimeHistogram</a> - The
--   response time histogram for the selected entities.
--   
--   <a>$sel:edgeSummaryStatistics:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_edgeSummaryStatistics</a> -
--   Undocumented member.
--   
--   <a>$sel:serviceForecastStatistics:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_serviceForecastStatistics</a> - The
--   forecasted high and low fault count values.
--   
--   <a>$sel:timestamp:TimeSeriesServiceStatistics'</a>,
--   <a>timeSeriesServiceStatistics_timestamp</a> - Timestamp of the window
--   for which statistics are aggregated.
newTimeSeriesServiceStatistics :: TimeSeriesServiceStatistics

-- | A collection of segment documents with matching trace IDs.
--   
--   <i>See:</i> <a>newTrace</a> smart constructor.
data Trace
Trace' :: Maybe Bool -> Maybe Text -> Maybe [Segment] -> Maybe Double -> Trace

-- | Create a value of <a>Trace</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limitExceeded:Trace'</a>, <a>trace_limitExceeded</a> -
--   LimitExceeded is set to true when the trace has exceeded one of the
--   defined quotas. For more information about quotas, see <a>Amazon Web
--   Services X-Ray endpoints and quotas</a>.
--   
--   <a>$sel:id:Trace'</a>, <a>trace_id</a> - The unique identifier for the
--   request that generated the trace's segments and subsegments.
--   
--   <a>$sel:segments:Trace'</a>, <a>trace_segments</a> - Segment documents
--   for the segments and subsegments that comprise the trace.
--   
--   <a>$sel:duration:Trace'</a>, <a>trace_duration</a> - The length of
--   time in seconds between the start time of the root segment and the end
--   time of the last segment that completed.
newTrace :: Trace

-- | Metadata generated from the segment documents in a trace.
--   
--   <i>See:</i> <a>newTraceSummary</a> smart constructor.
data TraceSummary
TraceSummary' :: Maybe (HashMap Text [ValueWithServiceIds]) -> Maybe Bool -> Maybe [TraceUser] -> Maybe ServiceId -> Maybe Bool -> Maybe [ServiceId] -> Maybe POSIX -> Maybe Bool -> Maybe [ErrorRootCause] -> Maybe [ResourceARNDetail] -> Maybe [AvailabilityZoneDetail] -> Maybe [InstanceIdDetail] -> Maybe [ResponseTimeRootCause] -> Maybe Bool -> Maybe Text -> Maybe Http -> Maybe Int -> Maybe Double -> Maybe [FaultRootCause] -> Maybe Double -> TraceSummary

-- | Create a value of <a>TraceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:annotations:TraceSummary'</a>, <a>traceSummary_annotations</a>
--   - Annotations from the trace's segment documents.
--   
--   <a>$sel:hasThrottle:TraceSummary'</a>, <a>traceSummary_hasThrottle</a>
--   - One or more of the segment documents has a 429 throttling error.
--   
--   <a>$sel:users:TraceSummary'</a>, <a>traceSummary_users</a> - Users
--   from the trace's segment documents.
--   
--   <a>$sel:entryPoint:TraceSummary'</a>, <a>traceSummary_entryPoint</a> -
--   The root of a trace.
--   
--   <a>$sel:hasFault:TraceSummary'</a>, <a>traceSummary_hasFault</a> - The
--   root segment document has a 500 series error.
--   
--   <a>$sel:serviceIds:TraceSummary'</a>, <a>traceSummary_serviceIds</a> -
--   Service IDs from the trace's segment documents.
--   
--   <a>$sel:matchedEventTime:TraceSummary'</a>,
--   <a>traceSummary_matchedEventTime</a> - The matched time stamp of a
--   defined event.
--   
--   <a>$sel:isPartial:TraceSummary'</a>, <a>traceSummary_isPartial</a> -
--   One or more of the segment documents is in progress.
--   
--   <a>$sel:errorRootCauses:TraceSummary'</a>,
--   <a>traceSummary_errorRootCauses</a> - A collection of ErrorRootCause
--   structures corresponding to the trace segments.
--   
--   <a>$sel:resourceARNs:TraceSummary'</a>,
--   <a>traceSummary_resourceARNs</a> - A list of resource ARNs for any
--   resource corresponding to the trace segments.
--   
--   <a>$sel:availabilityZones:TraceSummary'</a>,
--   <a>traceSummary_availabilityZones</a> - A list of Availability Zones
--   for any zone corresponding to the trace segments.
--   
--   <a>$sel:instanceIds:TraceSummary'</a>, <a>traceSummary_instanceIds</a>
--   - A list of EC2 instance IDs for any instance corresponding to the
--   trace segments.
--   
--   <a>$sel:responseTimeRootCauses:TraceSummary'</a>,
--   <a>traceSummary_responseTimeRootCauses</a> - A collection of
--   ResponseTimeRootCause structures corresponding to the trace segments.
--   
--   <a>$sel:hasError:TraceSummary'</a>, <a>traceSummary_hasError</a> - The
--   root segment document has a 400 series error.
--   
--   <a>$sel:id:TraceSummary'</a>, <a>traceSummary_id</a> - The unique
--   identifier for the request that generated the trace's segments and
--   subsegments.
--   
--   <a>$sel:http:TraceSummary'</a>, <a>traceSummary_http</a> - Information
--   about the HTTP request served by the trace.
--   
--   <a>$sel:revision:TraceSummary'</a>, <a>traceSummary_revision</a> - The
--   revision number of a trace.
--   
--   <a>$sel:duration:TraceSummary'</a>, <a>traceSummary_duration</a> - The
--   length of time in seconds between the start time of the root segment
--   and the end time of the last segment that completed.
--   
--   <a>$sel:faultRootCauses:TraceSummary'</a>,
--   <a>traceSummary_faultRootCauses</a> - A collection of FaultRootCause
--   structures corresponding to the trace segments.
--   
--   <a>$sel:responseTime:TraceSummary'</a>,
--   <a>traceSummary_responseTime</a> - The length of time in seconds
--   between the start and end times of the root segment. If the service
--   performs work asynchronously, the response time measures the time
--   before the response is sent to the user, while the duration measures
--   the amount of time before the last traced activity completes.
newTraceSummary :: TraceSummary

-- | Information about a user recorded in segment documents.
--   
--   <i>See:</i> <a>newTraceUser</a> smart constructor.
data TraceUser
TraceUser' :: Maybe [ServiceId] -> Maybe Text -> TraceUser

-- | Create a value of <a>TraceUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceIds:TraceUser'</a>, <a>traceUser_serviceIds</a> -
--   Services that the user's request hit.
--   
--   <a>$sel:userName:TraceUser'</a>, <a>traceUser_userName</a> - The
--   user's name.
newTraceUser :: TraceUser

-- | Sampling statistics from a call to <a>GetSamplingTargets</a> that
--   X-Ray could not process.
--   
--   <i>See:</i> <a>newUnprocessedStatistics</a> smart constructor.
data UnprocessedStatistics
UnprocessedStatistics' :: Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedStatistics

-- | Create a value of <a>UnprocessedStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleName:UnprocessedStatistics'</a>,
--   <a>unprocessedStatistics_ruleName</a> - The name of the sampling rule.
--   
--   <a>$sel:errorCode:UnprocessedStatistics'</a>,
--   <a>unprocessedStatistics_errorCode</a> - The error code.
--   
--   <a>$sel:message:UnprocessedStatistics'</a>,
--   <a>unprocessedStatistics_message</a> - The error message.
newUnprocessedStatistics :: UnprocessedStatistics

-- | Information about a segment that failed processing.
--   
--   <i>See:</i> <a>newUnprocessedTraceSegment</a> smart constructor.
data UnprocessedTraceSegment
UnprocessedTraceSegment' :: Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedTraceSegment

-- | Create a value of <a>UnprocessedTraceSegment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:UnprocessedTraceSegment'</a>,
--   <a>unprocessedTraceSegment_errorCode</a> - The error that caused
--   processing to fail.
--   
--   <a>$sel:id:UnprocessedTraceSegment'</a>,
--   <a>unprocessedTraceSegment_id</a> - The segment's ID.
--   
--   <a>$sel:message:UnprocessedTraceSegment'</a>,
--   <a>unprocessedTraceSegment_message</a> - The error message.
newUnprocessedTraceSegment :: UnprocessedTraceSegment

-- | Information about a segment annotation.
--   
--   <i>See:</i> <a>newValueWithServiceIds</a> smart constructor.
data ValueWithServiceIds
ValueWithServiceIds' :: Maybe [ServiceId] -> Maybe AnnotationValue -> ValueWithServiceIds

-- | Create a value of <a>ValueWithServiceIds</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceIds:ValueWithServiceIds'</a>,
--   <a>valueWithServiceIds_serviceIds</a> - Services to which the
--   annotation applies.
--   
--   <a>$sel:annotationValue:ValueWithServiceIds'</a>,
--   <a>valueWithServiceIds_annotationValue</a> - Values of the annotation.
newValueWithServiceIds :: ValueWithServiceIds
